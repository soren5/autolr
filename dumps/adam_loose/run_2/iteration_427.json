[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.7994285821914673, "mapping_values": [1, 39, 22, 17, 4, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, tf.math.negative(tf.math.add(grad, grad))), tf.math.negative(grad))))), alpha), tf.math.divide_no_nan(grad, tf.math.negative(grad)))), tf.math.add(tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4135329723358154, 1.98563814163208, 2.4201536178588867, 2.1550369262695312, 1.9196269512176514, 1.58092200756073, 1.220905065536499, 0.9303147792816162, 0.8415592908859253, 0.794772744178772, 0.7446238398551941, 0.747002899646759, 0.7038646936416626, 0.6691693067550659, 0.6839879751205444, 0.6124672889709473, 0.6728223562240601, 0.616145133972168, 0.618918240070343, 0.583433210849762, 0.5646048188209534, 0.5906580686569214, 0.5768951177597046, 0.5514088869094849], "accuracy": [0.2550521790981293, 0.28397834300994873, 0.16272619366645813, 0.25042927265167236, 0.3387927711009979, 0.436930388212204, 0.5674283504486084, 0.652621865272522, 0.6848500967025757, 0.6975300312042236, 0.7135120630264282, 0.7211728692054749, 0.7289658188819885, 0.7434949278831482, 0.7364945411682129, 0.7642319202423096, 0.748778223991394, 0.7683265209197998, 0.7633073329925537, 0.7761194109916687, 0.783119797706604, 0.7734777331352234, 0.7803460359573364, 0.789988100528717], "val_loss": [2.2087342739105225, 2.293710947036743, 2.270674705505371, 2.192817211151123, 2.0644195079803467, 1.2741659879684448, 0.8025594353675842, 0.8471764326095581, 0.7635179758071899, 0.6988930702209473, 0.7227017283439636, 0.6517187356948853, 0.6246440410614014, 0.5703484416007996, 0.5753275752067566, 0.5479821562767029, 0.6344876289367676, 0.6034403443336487, 0.5401210188865662, 0.5754283666610718, 0.5230969786643982, 0.5058271288871765, 0.5229433178901672, 0.5074277520179749], "val_accuracy": [0.1576666682958603, 0.10000000149011612, 0.17299999296665192, 0.3413333296775818, 0.20499999821186066, 0.6133333444595337, 0.6786666512489319, 0.6539999842643738, 0.6953333616256714, 0.7300000190734863, 0.7239999771118164, 0.7243333458900452, 0.7423333525657654, 0.7766666412353516, 0.7699999809265137, 0.7993333339691162, 0.7363333106040955, 0.7789999842643738, 0.8066666722297668, 0.7803333401679993, 0.8026666641235352, 0.8043333292007446, 0.7956666946411133, 0.8013333082199097]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 5, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 2, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.7879999876022339, "mapping_values": [1, 30, 17, 13, 3, 1, 0, 1, 0, 25, 17, 8, 3, 3, 2, 1, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.math.subtract(tf.math.square(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad)))), tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), grad), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.pow(grad, grad), tf.math.negative(tf.math.pow(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), sigma)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.3142805099487305, 2.2457282543182373, 2.140888214111328, 2.173225164413452, 2.1286754608154297, 1.9075888395309448, 1.5314140319824219, 1.155286192893982, 0.9302049875259399, 0.8210776448249817, 0.7627683877944946, 0.7127662897109985, 0.677143931388855, 0.6747857928276062, 0.623760998249054, 0.6319226026535034, 0.6152656078338623, 0.5793091654777527, 0.6232893466949463, 0.5564937591552734, 0.5740363597869873], "accuracy": [0.25518426299095154, 0.27803459763526917, 0.19680359959602356, 0.28305375576019287, 0.21701228618621826, 0.3497556447982788, 0.4624224007129669, 0.5939770340919495, 0.661471426486969, 0.6973979473114014, 0.7099458575248718, 0.728701651096344, 0.743891179561615, 0.7470611333847046, 0.7693831920623779, 0.7597411274909973, 0.7621186375617981, 0.780610203742981, 0.7668735980987549, 0.7873464822769165, 0.7832518815994263], "val_loss": [1.8828784227371216, 2.296701192855835, 1.5459057092666626, 2.298879623413086, 2.0448923110961914, 2.0342917442321777, 1.0904827117919922, 0.9325066208839417, 0.828981339931488, 0.6584134101867676, 0.6716821193695068, 0.6073408722877502, 0.581207811832428, 0.6083654165267944, 0.6227499842643738, 0.5308799743652344, 0.5256533026695251, 0.5996434092521667, 0.5330726504325867, 0.5914350152015686, 0.5332162380218506], "val_accuracy": [0.25200000405311584, 0.10000000149011612, 0.44699999690055847, 0.09966666996479034, 0.3946666717529297, 0.3986666798591614, 0.6359999775886536, 0.7080000042915344, 0.6676666736602783, 0.7490000128746033, 0.7429999709129333, 0.7689999938011169, 0.7573333382606506, 0.7799999713897705, 0.7636666893959045, 0.7926666736602783, 0.7850000262260437, 0.7713333368301392, 0.7839999794960022, 0.7573333382606506, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 6, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [56, 27, 63, 62, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 3, 4, 3, 6, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [5, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.3408571481704712, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(grad), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3222103118896484, 2.4868390560150146, 2.295548439025879, 2.4756338596343994, 2.3046047687530518, 2.298358678817749, 2.2197155952453613, 2.2546348571777344], "accuracy": [0.20604939758777618, 0.189274862408638, 0.13670584559440613, 0.15281997621059418, 0.09576013684272766, 0.12640337646007538, 0.17395325005054474, 0.14859332144260406], "val_loss": [2.256495475769043, 2.3166306018829346, 1.9149835109710693, 2.306047201156616, 2.302915573120117, 2.194783926010132, 2.3016703128814697, 2.1928961277008057], "val_accuracy": [0.24799999594688416, 0.09866666793823242, 0.34566667675971985, 0.10966666787862778, 0.09966666996479034, 0.26233333349227905, 0.10300000011920929, 0.19900000095367432]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 5, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 27, 63, 32, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.3028571307659149, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.30867600440979, 2.240351915359497, 2.7833433151245117, 2.3060381412506104, 2.3033699989318848, 2.3028693199157715, 2.3029489517211914], "accuracy": [0.21397437155246735, 0.19680359959602356, 0.15955619513988495, 0.10011887550354004, 0.09840179979801178, 0.09747721254825592, 0.09972262382507324], "val_loss": [2.1353542804718018, 1.9445158243179321, 2.308485746383667, 2.3037846088409424, 2.3029983043670654, 2.302743911743164, 2.302741289138794], "val_accuracy": [0.21400000154972076, 0.30000001192092896, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 2, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 1, 0, 1, 2, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [88, 96, 60, 31, 37, 10, 11], [1, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.24714285135269165, "mapping_values": [1, 37, 20, 17, 4, 1, 0, 1, 1, 25, 17, 8, 3, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(alpha, grad)), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), grad), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(grad, tf.math.pow(grad, grad))), tf.math.negative(tf.math.pow(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), sigma)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8501970767974854, 2.285327911376953, 2.3525543212890625, 2.442927122116089, 2.3039138317108154, 2.3033597469329834, 2.3031256198883057], "accuracy": [0.1916523575782776, 0.14278165996074677, 0.12178047746419907, 0.09945846349000931, 0.1014397069811821, 0.09708096832036972, 0.09734513610601425], "val_loss": [2.3112809658050537, 2.2585337162017822, 2.5158257484436035, 2.3038737773895264, 2.3026702404022217, 2.3025434017181396, 2.302615165710449], "val_accuracy": [0.1080000028014183, 0.23866666853427887, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 5, 2, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 3, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 12, 7, 5, 0, 6, 3, 3, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.square(sigma))), grad), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.3086626529693604, 2.3097617626190186, 2.30883526802063, 2.3085527420043945, 2.308351755142212, 2.3083574771881104, 2.3077056407928467, 2.3070685863494873, 2.3065245151519775, 2.3057122230529785, 2.306110382080078, 2.305575370788574, 2.3056414127349854, 2.3056299686431885, 2.3047666549682617, 2.304299831390381, 2.3038463592529297, 2.30450701713562, 2.3044493198394775, 2.3034768104553223, 2.3037631511688232, 2.3036887645721436, 2.303975820541382, 2.3035759925842285, 2.3038761615753174, 2.3023362159729004, 2.3034002780914307, 2.3029003143310547], "accuracy": [0.09259014576673508, 0.08942015469074249, 0.09166556596755981, 0.0936468094587326, 0.09430722147226334, 0.09417514503002167, 0.08915598690509796, 0.09219389408826828, 0.09113723784685135, 0.09549596905708313, 0.09219389408826828, 0.09232597798109055, 0.0940430611371994, 0.09087307006120682, 0.09245806187391281, 0.09932637959718704, 0.09681680053472519, 0.09800554811954498, 0.09602430462837219, 0.09800554811954498, 0.09800554811954498, 0.09879804402589798, 0.09140139818191528, 0.09932637959718704, 0.09245806187391281, 0.09985470771789551, 0.10011887550354004, 0.09549596905708313], "val_loss": [2.3078300952911377, 2.307295799255371, 2.3068861961364746, 2.3064827919006348, 2.3061745166778564, 2.305875062942505, 2.305527687072754, 2.305246353149414, 2.305037021636963, 2.304824113845825, 2.3046047687530518, 2.304431915283203, 2.304262638092041, 2.304104804992676, 2.303943395614624, 2.3038032054901123, 2.303679943084717, 2.3035128116607666, 2.3033387660980225, 2.3032050132751465, 2.303070068359375, 2.3029751777648926, 2.302840232849121, 2.302748680114746, 2.3026626110076904, 2.3026158809661865, 2.302543878555298, 2.302483558654785], "val_accuracy": [0.09433333575725555, 0.09399999678134918, 0.09399999678134918, 0.09533333033323288, 0.0963333323597908, 0.09700000286102295, 0.09799999743700027, 0.09933333098888397, 0.09866666793823242, 0.09833333641290665, 0.09933333098888397, 0.10000000149011612, 0.10233332961797714, 0.10300000011920929, 0.10266666859388351, 0.10433333367109299, 0.10499999672174454, 0.10566666722297668, 0.10400000214576721, 0.10466666519641876, 0.1066666692495346, 0.10766666382551193, 0.10833333432674408, 0.10733333230018616, 0.10566666722297668, 0.10566666722297668, 0.1066666692495346, 0.1066666692495346]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 2, 5, 6, 9, 7, 8, 9, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 4, 1, 5, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [2, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 10, 6, 4, 1, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3040964603424072, 2.302912950515747, 2.3029837608337402, 2.30288028717041, 2.303002119064331, 2.303069829940796, 2.303056001663208, 2.3030364513397217], "accuracy": [0.09298639744520187, 0.09576013684272766, 0.0956280529499054, 0.0940430611371994, 0.10011887550354004, 0.09628847241401672, 0.09311848133802414, 0.0952318087220192], "val_loss": [2.3026387691497803, 2.3027610778808594, 2.302672863006592, 2.3026275634765625, 2.302666425704956, 2.302509069442749, 2.3025217056274414, 2.302643299102783], "val_accuracy": [0.10133333504199982, 0.09533333033323288, 0.10266666859388351, 0.10266666859388351, 0.10000000149011612, 0.10133333504199982, 0.10166666656732559, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 70, 32, 90, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [8, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 24, 17, 5, 1, 0, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(alpha), grad)), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(grad, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), tf.math.sqrt(tf.math.negative(grad)))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30322003364563, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 1, 0, 2, 2, 0, 8, 0], [2, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 86, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 2, 9, 6, 0, 2, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [1, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [6, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 22, 17, 5, 1, 0, 1, 0, 2, 1, 1, 0, 6, 4, 2, 2], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), grad), tf.math.negative(grad))))), alpha), tf.math.subtract(alpha, tf.math.negative(grad))), tf.math.add(tf.math.add(tf.math.negative(grad), alpha), grad)), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 2, 6, 6, 8, 1, 2, 2, 4, 8, 6, 0, 0, 2, 6, 9, 6, 2, 1, 8, 0], [2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 27, 63, 62, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 2, 7, 6, 1, 3, 11, 7, 4, 2, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, grad)), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.square(grad))), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032007217407227, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]