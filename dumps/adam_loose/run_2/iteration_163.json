[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 5, 1, 4, 2, 2, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2], [1, 0, 0, 0, 3, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 3, 1, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [38, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 1, 5, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [7, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 4, 9, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.6274285912513733, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.5073399543762207, 2.4098730087280273, 2.5522360801696777, 2.2472074031829834, 2.0585198402404785, 1.8134751319885254, 1.943682074546814, 1.6782609224319458, 1.4992237091064453, 1.6010204553604126, 1.5709842443466187, 1.3980541229248047, 2.476792335510254, 2.3318021297454834, 2.291346549987793], "accuracy": [0.19455818831920624, 0.16074495017528534, 0.11596883088350296, 0.15136705338954926, 0.3011491298675537, 0.40404173731803894, 0.34301942586898804, 0.4443270266056061, 0.48289525508880615, 0.4575353264808655, 0.4585919976234436, 0.507330596446991, 0.23656055331230164, 0.09589222073554993, 0.11913882195949554], "val_loss": [2.3054044246673584, 2.300884246826172, 2.305049419403076, 2.0652194023132324, 1.7657341957092285, 2.0056121349334717, 1.7394394874572754, 1.3266618251800537, 1.377872109413147, 1.0859307050704956, 1.2890793085098267, 2.1710281372070312, 2.336036443710327, 2.303471326828003, 2.294813394546509], "val_accuracy": [0.10133333504199982, 0.09799999743700027, 0.10966666787862778, 0.26733332872390747, 0.4023333191871643, 0.34066668152809143, 0.42500001192092896, 0.5606666803359985, 0.6056666374206543, 0.6353333592414856, 0.515666663646698, 0.5693333148956299, 0.10133333504199982, 0.10433333367109299, 0.10733333230018616]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 0, 4, 4, 6, 4, 1, 3, 0, 2, 5, 9, 0, 1, 1, 3, 4, 1, 6, 2, 6, 4, 1, 8, 8, 2, 2, 2, 7, 1, 6, 8, 3, 2, 3, 2, 8, 7, 4, 9, 0, 9, 5, 3, 5, 8, 7, 1, 8, 1, 2, 3, 4, 3, 7, 6, 3, 1], [1, 0, 0, 1, 0, 3, 0, 1, 2, 1, 2, 3, 0, 0, 1, 2, 0, 1, 1, 1, 2, 1, 1, 3, 2, 0, 0, 0, 1, 3, 1, 1, 0, 3, 0, 2, 0, 3, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1], [21, 80, 57, 53, 55, 87, 41, 36, 30, 85, 18, 92, 63, 45, 50, 21, 68, 46, 4, 75], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [4, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 1, 7, 4, 9, 1, 4, 1, 1, 1, 3, 9, 2, 2, 5, 5, 2, 6, 0], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [98, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.4259999990463257, "mapping_values": [1, 117, 69, 48, 20, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 48, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.subtract(tf.math.subtract(tf.math.multiply(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha), grad)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), grad), tf.math.multiply(alpha, alpha)), grad), tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.pow(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, alpha), alpha))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3977901935577393, 2.278684616088867, 2.164637565612793, 2.198094606399536, 2.276702404022217, 2.285780191421509, 2.3049066066741943], "accuracy": [0.19297318160533905, 0.13512085378170013, 0.22863557934761047, 0.1740853190422058, 0.1578391194343567, 0.1402720957994461, 0.11042134463787079], "val_loss": [2.296950340270996, 2.2155086994171143, 2.024228811264038, 2.2244527339935303, 1.7444502115249634, 2.3022403717041016, 2.301908493041992], "val_accuracy": [0.18066667020320892, 0.41866666078567505, 0.20633333921432495, 0.24566666781902313, 0.3293333351612091, 0.11533333361148834, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 5, 1, 4, 2, 2, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2, 2, 2, 2, 5, 3, 6, 4, 2, 9, 0], [2, 2, 0, 1, 3, 3, 2, 1, 2, 1, 0, 3, 0, 2, 2, 2, 1, 0, 3, 2, 1, 1, 1], [38, 89, 17, 4, 12, 87, 41, 36], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 1, 5, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 4, 9, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3191428482532501, "mapping_values": [1, 54, 31, 23, 5, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.add(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(alpha), tf.math.sqrt(grad)))), tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(alpha, grad), tf.math.square(tf.math.negative(alpha))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad), grad)))), grad), alpha), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(alpha)))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2698512077331543, 2.2715067863464355, 2.235727310180664, 2.305629253387451, 2.3039770126342773, 2.3029818534851074], "accuracy": [0.1966715157032013, 0.1406683325767517, 0.19944524765014648, 0.09747721254825592, 0.09536388516426086, 0.1026284471154213], "val_loss": [2.180974006652832, 2.2313482761383057, 2.3075063228607178, 2.30346417427063, 2.3025519847869873, 2.300954818725586], "val_accuracy": [0.3163333237171173, 0.179666668176651, 0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2, 5, 9, 0, 1, 1, 3, 8, 1, 6, 2, 6, 4, 1, 8, 8, 2, 4, 2, 7, 1, 6, 9, 3, 2, 3, 2, 8, 7, 4, 9, 0], [2, 2, 0, 1, 3, 3, 2, 1, 2, 1, 0, 3, 0, 2, 2, 2], [38, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 1, 5, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 4, 9, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.3077142834663391, "mapping_values": [1, 4, 2, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3763530254364014, 2.3077924251556396, 2.3368074893951416, 2.9955055713653564, 2.3779854774475098, 2.3034281730651855, 2.3030898571014404], "accuracy": [0.2324659824371338, 0.11596883088350296, 0.1748778223991394, 0.17170783877372742, 0.10870426893234253, 0.09998679161071777, 0.0956280529499054], "val_loss": [2.331132411956787, 2.2313425540924072, 2.050793170928955, 2.1217119693756104, 2.303719997406006, 2.3029110431671143, 2.302846908569336], "val_accuracy": [0.1353333294391632, 0.3086666762828827, 0.19966666400432587, 0.20600000023841858, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 3, 2, 4, 4, 9, 4, 1, 5, 0, 2, 5, 9, 0, 1, 1, 3, 8, 0, 6, 4, 6, 4, 1, 8, 8, 2, 4, 2, 7, 1, 4, 9, 3, 2, 3, 2, 8, 7, 4, 9, 9], [1, 0, 0, 0, 3, 0, 0, 2, 2, 1, 0, 0, 0, 1, 1, 2, 3, 1, 2, 2, 2, 2, 2, 0, 1, 0, 2, 1, 3, 0, 2, 2, 3, 1, 1], [38, 89, 17, 4, 12, 94, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [4, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 4, 9, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.17485713958740234, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.51259183883667, 2.292515516281128, 2.2191314697265625, 2.3041014671325684, 2.3032472133636475, 2.299013376235962, 2.8700003623962402], "accuracy": [0.20763438940048218, 0.13195087015628815, 0.18623696267604828, 0.09694888442754745, 0.09628847241401672, 0.108440101146698, 0.16378284990787506], "val_loss": [2.3093645572662354, 2.205658435821533, 2.30483341217041, 2.3029751777648926, 2.302480459213257, 2.2574214935302734, 2.3128390312194824], "val_accuracy": [0.09966666996479034, 0.1783333271741867, 0.09366666525602341, 0.08966666460037231, 0.09366666525602341, 0.16066665947437286, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2, 7, 7, 3, 5, 4, 2, 0, 6, 4, 9, 0, 7], [2, 0, 0, 0, 3, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 3, 1, 1, 3, 2, 3, 2, 0], [21, 80, 57, 53, 55, 87, 41, 36, 30, 27], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [4, 1, 1, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [72, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 6, 1, 7, 4, 9, 1, 4, 1, 1, 1, 3, 9, 2, 2, 5, 5, 2, 6, 0], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [98, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.10857142508029938, "mapping_values": [1, 57, 33, 24, 10, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(grad), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.subtract(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.add(grad, alpha))), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha)))), alpha), tf.math.square(tf.math.pow(tf.math.add(grad, grad), alpha))), tf.math.negative(alpha)))))), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad), tf.math.negative(grad)))), grad), tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [129508.7265625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2005019187927246, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [315848800.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11266666650772095, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2], [1, 0, 0, 1, 3, 3, 0, 1, 2, 1, 0, 3, 0, 1, 1, 2], [21, 80, 57, 53, 55, 87, 41, 36, 30], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [4, 1, 1, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 1, 7, 4, 9, 1, 4, 1, 1, 1, 3, 9, 2, 2, 5, 5, 2, 6, 0], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [98, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303940773010254, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2], [1, 0, 0, 1, 3, 3, 0, 1, 2, 1, 0, 3, 0, 1, 1, 2], [21, 80, 57, 53, 55, 87, 41, 36, 30], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 1, 1, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 6, 1, 7, 4, 9, 1, 4, 1, 1, 1, 3, 9, 2, 2, 5, 5, 2, 6, 0], [1, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [98, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2854464054107666, 2.3217971324920654, 2.3038830757141113, 2.3030827045440674, 2.3029401302337646, 2.302842140197754, 2.302898645401001, 2.3029794692993164], "accuracy": [0.17342491447925568, 0.09813763201236725, 0.09919429570436478, 0.09800554811954498, 0.09694888442754745, 0.0956280529499054, 0.09338264167308807, 0.09655263274908066], "val_loss": [2.3135616779327393, 2.3029074668884277, 2.302682638168335, 2.302604913711548, 2.302560806274414, 2.3025808334350586, 2.3025777339935303, 2.302616834640503], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10266666859388351, 0.10100000351667404, 0.10266666859388351, 0.10199999809265137, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 5, 1, 4, 2, 2, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2], [2, 2, 0, 1, 3, 3, 2, 1, 2, 1, 0, 3, 0, 2, 2, 2], [38, 89, 17, 4, 12, 87, 41, 36], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 1, 5, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [75, 56, 9, 41, 8, 43, 2], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 4, 9, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 4, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09399999678134918, "mapping_values": [1, 16, 9, 7, 1, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.subtract(grad, grad)), tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.pow(grad, tf.math.sqrt(grad)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309138059616089, 2.3093130588531494, 2.3098931312561035, 2.3085834980010986, 2.3103671073913574, 2.309927463531494], "accuracy": [0.08836349099874496, 0.08638224750757217, 0.09113723784685135, 0.09338264167308807, 0.09047681838274002, 0.09008057415485382], "val_loss": [2.308018207550049, 2.3080055713653564, 2.3079941272735596, 2.3079833984375, 2.307971954345703, 2.30795955657959], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 5, 1, 4, 2, 7, 4, 8, 8, 1, 4, 1, 2, 4, 4, 6, 4, 1, 5, 0, 2], [1, 0, 0, 0, 3, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 3, 1], [38, 89, 17, 4, 12, 87, 41, 36], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [3, 5, 1, 0, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 5, 5, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [11, 56, 9, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 6, 1, 7, 9, 9, 1, 4, 1, 1, 1, 3, 9, 2, 2, 5, 5, 2, 6, 0], [1, 2, 1, 1, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [52, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 1, 8, 5, 3, 1, 4, 3, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.subtract(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309899091720581, 2.309370756149292, 2.310053825378418, 2.3105030059814453, 2.308506965637207, 2.3091468811035156], "accuracy": [0.09219389408826828, 0.09602430462837219, 0.09153348207473755, 0.08849557489156723, 0.09087307006120682, 0.08638224750757217], "val_loss": [2.3081893920898438, 2.308177947998047, 2.3081657886505127, 2.3081533908843994, 2.308142900466919, 2.3081345558166504], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]