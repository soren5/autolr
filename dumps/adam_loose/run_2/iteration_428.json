[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 5, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [3, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 27, 63, 32, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8382856845855713, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.16074275970459, 1.9562580585479736, 1.9317073822021484, 2.0983333587646484, 1.629104495048523, 1.7484673261642456, 1.05404794216156, 0.7831552624702454, 0.7274304032325745, 0.7054270505905151, 0.6066974401473999, 0.5989025235176086, 0.6153531670570374, 0.5563692450523376, 0.5462862253189087, 0.5405504107475281, 0.5199943780899048, 0.5260059833526611, 0.4860726296901703, 0.4848752021789551, 0.49721890687942505, 0.46398043632507324, 0.46519237756729126, 0.4492097496986389, 0.4437233507633209, 0.44646573066711426, 0.4517640769481659, 0.4450623691082001], "accuracy": [0.2973187267780304, 0.3086778521537781, 0.3403777480125427, 0.30722492933273315, 0.48210275173187256, 0.4251750111579895, 0.6581693291664124, 0.7116629481315613, 0.7294940948486328, 0.7437590956687927, 0.7709681391716003, 0.7734777331352234, 0.7713643908500671, 0.7843085527420044, 0.7911768555641174, 0.7946110367774963, 0.8013472557067871, 0.7994980812072754, 0.8123101592063904, 0.813498854637146, 0.8074230551719666, 0.8235371708869934, 0.8212917447090149, 0.8277638554573059, 0.8318583965301514, 0.8325188159942627, 0.8293488025665283, 0.828292191028595], "val_loss": [2.266960382461548, 1.0437713861465454, 1.863050937652588, 1.3532261848449707, 1.0639210939407349, 1.1449443101882935, 0.7464840412139893, 0.6994165778160095, 0.6469545960426331, 0.6025521755218506, 0.5690646171569824, 0.7196767330169678, 0.5476424694061279, 0.5655492544174194, 0.5528059005737305, 0.5092401504516602, 0.5243772268295288, 0.5011084675788879, 0.4844592213630676, 0.4821470081806183, 0.4821704924106598, 0.47447752952575684, 0.46122923493385315, 0.4681333899497986, 0.4636300504207611, 0.47070008516311646, 0.5060500502586365, 0.4809836149215698], "val_accuracy": [0.17299999296665192, 0.6203333139419556, 0.3569999933242798, 0.656333327293396, 0.6570000052452087, 0.6736666560173035, 0.7176666855812073, 0.7176666855812073, 0.7409999966621399, 0.7519999742507935, 0.7770000100135803, 0.7276666760444641, 0.7906666398048401, 0.7863333225250244, 0.7763333320617676, 0.8066666722297668, 0.8009999990463257, 0.8103333115577698, 0.8193333148956299, 0.8186666369438171, 0.8303333520889282, 0.8220000267028809, 0.8373333215713501, 0.82833331823349, 0.8323333263397217, 0.8330000042915344, 0.8100000023841858, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 3, 4, 4, 1, 5, 1, 5, 3, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 2, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 0, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 29, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 2, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8271428346633911, "mapping_values": [1, 18, 10, 8, 2, 1, 0, 1, 0, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(grad, alpha)), tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.multiply(tf.math.sqrt(alpha), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.add(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.015166997909546, 1.4264202117919922, 1.031293511390686, 0.850311815738678, 0.8700122833251953, 0.7620875239372253, 0.7417222261428833, 0.705000102519989, 0.6941351294517517, 0.7260568737983704, 0.697921872138977, 0.6450660228729248, 0.6404667496681213, 0.6468388438224792, 0.6497482657432556, 0.5772711038589478, 0.6068919897079468, 0.5677915215492249, 0.6137654781341553, 0.595888078212738, 0.5552374124526978, 0.5556346774101257, 0.5346226692199707, 0.5211907625198364, 0.5538210868835449, 0.538713276386261, 0.5208954811096191], "accuracy": [0.33641526103019714, 0.5126138925552368, 0.6189407110214233, 0.6816800832748413, 0.6794346570968628, 0.7131158113479614, 0.7182670831680298, 0.7396644949913025, 0.7312111854553223, 0.7260599732398987, 0.7454761862754822, 0.7563069462776184, 0.7605336308479309, 0.7504953145980835, 0.7568352818489075, 0.7903843522071838, 0.7736098170280457, 0.7935543656349182, 0.7717606425285339, 0.7784969210624695, 0.796328067779541, 0.7947431206703186, 0.7985734939575195, 0.8104609847068787, 0.7915731072425842, 0.7994980812072754, 0.8074230551719666], "val_loss": [1.7618582248687744, 0.8934637904167175, 0.7555969953536987, 0.6828469038009644, 0.6699428558349609, 0.6994937062263489, 0.6013492345809937, 0.6345127820968628, 0.6960535645484924, 0.6643900871276855, 0.5680382251739502, 0.6127400994300842, 0.5774956941604614, 0.6156497597694397, 0.5265477895736694, 0.5318155288696289, 0.5107880234718323, 0.49595752358436584, 0.5920255780220032, 0.5303996801376343, 0.4865202307701111, 0.4886944890022278, 0.5370453596115112, 0.5583187937736511, 0.5498396158218384, 0.5525184869766235, 0.5370136499404907], "val_accuracy": [0.41499999165534973, 0.6546666622161865, 0.7149999737739563, 0.7229999899864197, 0.7353333234786987, 0.7490000128746033, 0.7536666393280029, 0.7360000014305115, 0.7200000286102295, 0.7369999885559082, 0.7860000133514404, 0.7680000066757202, 0.7639999985694885, 0.7870000004768372, 0.79666668176651, 0.7903333306312561, 0.8043333292007446, 0.8050000071525574, 0.7693333625793457, 0.7956666946411133, 0.815666675567627, 0.8206666707992554, 0.7876666784286499, 0.7756666541099548, 0.7996666431427002, 0.7903333306312561, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 6, 6, 5, 1, 8, 0, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 2, 0], [0, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 2, 9, 4, 4, 0, 4, 9, 4, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 4, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8225714564323425, "mapping_values": [1, 40, 23, 17, 6, 1, 0, 1, 0, 24, 15, 9, 2, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(alpha, tf.math.sqrt(tf.math.negative(grad))))), tf.math.subtract(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)), grad)), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(grad, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, grad))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.pow(grad, grad), tf.math.negative(tf.math.pow(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.251635789871216, 2.125232219696045, 1.9261351823806763, 2.298677921295166, 2.0066699981689453, 1.577543020248413, 1.3212890625, 0.9372671842575073, 0.8196339011192322, 0.7270583510398865, 0.6956468820571899, 0.6736128330230713, 0.6263206601142883, 0.6378350257873535, 0.6050129532814026, 0.5662388801574707, 0.5660327672958374, 0.5654333233833313, 0.5297434329986572, 0.5077345967292786, 0.5105350017547607, 0.4837813079357147, 0.4996194839477539, 0.47187891602516174, 0.4772225320339203, 0.4830678701400757, 0.4645509719848633, 0.4650340974330902, 0.43318697810173035, 0.4670138657093048, 0.4472537934780121, 0.4486449956893921, 0.41188833117485046, 0.4233838617801666, 0.3950135111808777, 0.41308629512786865, 0.39388924837112427, 0.3949560821056366, 0.38657042384147644, 0.3911692798137665, 0.3824821412563324, 0.38527631759643555, 0.37777775526046753, 0.375125914812088], "accuracy": [0.24224013090133667, 0.2587504982948303, 0.3564918637275696, 0.19574692845344543, 0.2965262234210968, 0.42808082699775696, 0.5325584411621094, 0.646149754524231, 0.6802271604537964, 0.7182670831680298, 0.7425703406333923, 0.7523444890975952, 0.7671377658843994, 0.7563069462776184, 0.7726852297782898, 0.7841764688491821, 0.7854973077774048, 0.7882710099220276, 0.8001585006713867, 0.8138951063156128, 0.8127063512802124, 0.8227446675300598, 0.8132346868515015, 0.8185180425643921, 0.821820080280304, 0.8193105459213257, 0.8296129703521729, 0.8272355198860168, 0.8391229510307312, 0.8252542614936829, 0.8348963260650635, 0.8304054737091064, 0.845859169960022, 0.8407079577445984, 0.8564258217811584, 0.8495575189590454, 0.8514066934585571, 0.8527275323867798, 0.8512746095657349, 0.8531237840652466, 0.8551049828529358, 0.856689989566803, 0.859199583530426, 0.8607845902442932], "val_loss": [2.0293822288513184, 1.8866139650344849, 2.3093228340148926, 1.9001611471176147, 1.2834242582321167, 1.2189801931381226, 1.051668643951416, 0.8042230010032654, 0.6661363244056702, 0.6378252506256104, 0.6718884110450745, 0.5556628704071045, 0.595987856388092, 0.5358211994171143, 0.5126541256904602, 0.5468711853027344, 0.5496512651443481, 0.46346044540405273, 0.4805019795894623, 0.46661892533302307, 0.45718488097190857, 0.4673520624637604, 0.4712098240852356, 0.43052464723587036, 0.46387824416160583, 0.41895580291748047, 0.43514734506607056, 0.43613892793655396, 0.433838814496994, 0.474423348903656, 0.5000412464141846, 0.4083211123943329, 0.4160957932472229, 0.42363035678863525, 0.402848482131958, 0.46346479654312134, 0.3893277943134308, 0.39418789744377136, 0.3797166347503662, 0.38428834080696106, 0.3789200782775879, 0.39327898621559143, 0.3829713463783264, 0.43034467101097107], "val_accuracy": [0.3016666769981384, 0.35499998927116394, 0.27799999713897705, 0.4169999957084656, 0.5043333172798157, 0.5563333630561829, 0.6349999904632568, 0.6753333210945129, 0.7183333039283752, 0.7303333282470703, 0.7426666617393494, 0.7789999842643738, 0.7590000033378601, 0.7913333177566528, 0.7913333177566528, 0.7950000166893005, 0.7900000214576721, 0.8220000267028809, 0.8243333101272583, 0.8236666917800903, 0.8289999961853027, 0.8149999976158142, 0.8266666531562805, 0.8353333473205566, 0.8259999752044678, 0.843999981880188, 0.8473333120346069, 0.8366666436195374, 0.8323333263397217, 0.8066666722297668, 0.7876666784286499, 0.8476666808128357, 0.8460000157356262, 0.8383333086967468, 0.8510000109672546, 0.8183333277702332, 0.8543333411216736, 0.8500000238418579, 0.859666645526886, 0.8566666841506958, 0.859666645526886, 0.8523333072662354, 0.859333336353302, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 9, 4, 1, 2, 1, 5, 1, 2, 6, 8, 2, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8077142834663391, "mapping_values": [1, 29, 16, 13, 4, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, grad), grad))), tf.math.subtract(grad, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3308043479919434, 1.7395845651626587, 2.1014931201934814, 2.279533624649048, 1.8525097370147705, 1.451017141342163, 1.1278538703918457, 0.8848243355751038, 0.9205006957054138, 0.7152703404426575, 0.6929156184196472, 0.7009046077728271, 0.6588882207870483, 0.6447665691375732, 0.6193668246269226, 0.5926507711410522, 0.595892608165741, 0.5857563614845276, 0.5478490591049194, 0.5729822516441345, 0.5338982939720154, 0.5364985466003418, 0.5202487707138062, 0.5288379192352295, 0.5120872855186462, 0.5208882689476013, 0.4866514205932617, 0.48349276185035706, 0.49059128761291504, 0.4696139097213745, 0.4789145886898041, 0.49269965291023254, 0.487189918756485, 0.45081403851509094, 0.4645097255706787, 0.45160025358200073], "accuracy": [0.260071337223053, 0.43811914324760437, 0.27737417817115784, 0.23312640190124512, 0.395720511674881, 0.520671010017395, 0.6116761565208435, 0.6723021864891052, 0.6724342703819275, 0.7289658188819885, 0.741909921169281, 0.7380794882774353, 0.7564390301704407, 0.7534011602401733, 0.7672698497772217, 0.780610203742981, 0.7761194109916687, 0.7725531458854675, 0.7989697456359863, 0.7837802171707153, 0.7944789528846741, 0.802271842956543, 0.8075551390647888, 0.8006868362426758, 0.8063663840293884, 0.8012151718139648, 0.8191784620285034, 0.8182538747787476, 0.8166688680648804, 0.8248580098152161, 0.8186501264572144, 0.8191784620285034, 0.8175934553146362, 0.8319904804229736, 0.8197067975997925, 0.8309338092803955], "val_loss": [1.707878589630127, 1.20602285861969, 2.9477734565734863, 1.8489632606506348, 1.4875099658966064, 1.3876012563705444, 0.7758204936981201, 0.7890740633010864, 0.635870635509491, 0.6217879056930542, 0.6264506578445435, 0.5619886517524719, 0.6074820756912231, 0.522265613079071, 0.5639920234680176, 0.6232949495315552, 0.5081994533538818, 0.518840491771698, 0.49722445011138916, 0.4946157932281494, 0.514460027217865, 0.5063902139663696, 0.4860254228115082, 0.4703449308872223, 0.45632821321487427, 0.4411308467388153, 0.4869205057621002, 0.4826586842536926, 0.44315943121910095, 0.44057923555374146, 0.4208787977695465, 0.47200849652290344, 0.43404147028923035, 0.45242977142333984, 0.5037539005279541, 0.4264258146286011], "val_accuracy": [0.5013333559036255, 0.6046666502952576, 0.14399999380111694, 0.4169999957084656, 0.4636666774749756, 0.6359999775886536, 0.7086666822433472, 0.6863333582878113, 0.7616666555404663, 0.7609999775886536, 0.765999972820282, 0.7919999957084656, 0.753000020980835, 0.7979999780654907, 0.7836666703224182, 0.7563333511352539, 0.8046666383743286, 0.8076666593551636, 0.8076666593551636, 0.8149999976158142, 0.8029999732971191, 0.7990000247955322, 0.8193333148956299, 0.8303333520889282, 0.840666651725769, 0.8416666388511658, 0.8233333230018616, 0.8113333582878113, 0.8456666469573975, 0.8410000205039978, 0.8546666502952576, 0.8080000281333923, 0.8443333506584167, 0.8360000252723694, 0.8153333067893982, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 6, 9, 6, 1, 8, 4, 2, 2, 9, 6, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 3, 4, 3, 6, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [5, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.74314284324646, "mapping_values": [1, 13, 8, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha))), tf.math.subtract(tf.math.sqrt(grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.1716713905334473, 2.3382670879364014, 2.307298183441162, 2.3039300441741943, 2.299088716506958, 2.186619997024536, 2.304365873336792, 2.301983118057251, 2.2920544147491455, 2.1928083896636963, 2.305168628692627, 2.3024227619171143, 2.23134183883667, 1.8872509002685547, 1.7163752317428589, 1.549185037612915, 1.4722429513931274, 1.4076247215270996, 1.4312093257904053, 1.2065342664718628, 1.2533313035964966, 1.0694360733032227, 1.042231798171997, 0.86044842004776, 0.8159711956977844, 0.7973940372467041, 0.7681235074996948, 2.5369439125061035, 2.452799081802368], "accuracy": [0.18531237542629242, 0.10949676483869553, 0.1014397069811821, 0.09549596905708313, 0.11821424216032028, 0.1806894689798355, 0.09985470771789551, 0.10553427785634995, 0.14753665030002594, 0.21304979920387268, 0.10460969805717468, 0.10474177449941635, 0.1674811840057373, 0.3741909861564636, 0.4356095492839813, 0.46968695521354675, 0.5023114681243896, 0.5227842926979065, 0.5284639000892639, 0.5797120332717896, 0.579051673412323, 0.6120724081993103, 0.6277902722358704, 0.6880200505256653, 0.6954167485237122, 0.7086250185966492, 0.7214370369911194, 0.3327169418334961, 0.10249637067317963], "val_loss": [2.2602407932281494, 2.310645580291748, 2.304142475128174, 2.3020153045654297, 2.2634482383728027, 2.3048133850097656, 2.302154541015625, 2.3000147342681885, 2.123213052749634, 2.3104195594787598, 2.3025810718536377, 2.2966182231903076, 1.721998691558838, 1.7512069940567017, 1.4619580507278442, 1.543230414390564, 1.0397874116897583, 1.1789922714233398, 1.133516788482666, 1.1658331155776978, 0.9259202480316162, 0.7119156122207642, 0.7486568093299866, 0.6515002846717834, 0.7108111381530762, 0.6277608275413513, 0.8005063533782959, 2.80723237991333, 2.309739351272583], "val_accuracy": [0.1303333342075348, 0.09866666793823242, 0.10133333504199982, 0.09933333098888397, 0.3306666612625122, 0.10133333504199982, 0.10199999809265137, 0.13466666638851166, 0.41200000047683716, 0.09833333641290665, 0.0989999994635582, 0.1340000033378601, 0.4126666784286499, 0.4983333349227905, 0.5876666903495789, 0.44699999690055847, 0.6389999985694885, 0.6243333220481873, 0.6129999756813049, 0.6383333206176758, 0.6809999942779541, 0.7273333072662354, 0.7076666951179504, 0.7580000162124634, 0.7083333134651184, 0.7476666569709778, 0.67166668176651, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 3, 2, 5, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.4097142815589905, "mapping_values": [1, 16, 8, 8, 2, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, grad), alpha), tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.329763889312744, 2.208739995956421, 2.1447203159332275, 2.306469440460205, 2.2943358421325684, 2.1718459129333496, 2.130577564239502, 2.307086706161499, 2.1847984790802, 2.2683959007263184], "accuracy": [0.2300885021686554, 0.1978602558374405, 0.25756174325942993, 0.09681680053472519, 0.13221503794193268, 0.2316734939813614, 0.24157971143722534, 0.1010434553027153, 0.18557654321193695, 0.16682076454162598], "val_loss": [2.296576738357544, 2.2732090950012207, 2.310678005218506, 2.301759719848633, 2.249066114425659, 2.271888256072998, 2.311434030532837, 2.300276279449463, 2.022144317626953, 2.304386615753174], "val_accuracy": [0.10133333504199982, 0.14633333683013916, 0.0989999994635582, 0.0976666659116745, 0.4183333218097687, 0.10533333569765091, 0.0989999994635582, 0.0989999994635582, 0.3763333261013031, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 5, 4, 1, 4, 1, 5, 1, 8, 2, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 92, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 5, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 1, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.19742856919765472, "mapping_values": [1, 27, 15, 12, 2, 1, 0, 1, 1, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(grad, tf.math.multiply(grad, alpha)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), tf.math.pow(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3250327110290527, 2.264378786087036, 2.3044674396514893, 2.4421212673187256, 2.3280656337738037, 2.3037567138671875, 2.3028054237365723, 2.3029019832611084, 2.3027842044830322], "accuracy": [0.20697398483753204, 0.1900673657655716, 0.09655263274908066, 0.19535067677497864, 0.10738343745470047, 0.09893012791872025, 0.09853387624025345, 0.09945846349000931, 0.09959053993225098], "val_loss": [2.2539687156677246, 2.3053412437438965, 2.3002452850341797, 2.277420997619629, 2.304215669631958, 2.3028314113616943, 2.3027145862579346, 2.302602529525757, 2.302689552307129], "val_accuracy": [0.16066665947437286, 0.09866666793823242, 0.17466667294502258, 0.19099999964237213, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 6, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 3, 4, 3, 6, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 5, 9, 6, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [1, 2, 1, 1, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [56, 27, 56, 55, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 0, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 1, 0, 1, 0, 4, 2, 2, 1, 5, 3, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(grad, alpha), tf.math.sqrt(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(grad), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.956910953840449e+27, 2.400845527648926, 2.5371897220611572, 2.9572527408599854, 4.065316677093506, 5.823471546173096], "accuracy": [0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.370316505432129, 2.4546380043029785, 2.701631546020508, 3.465456008911133, 5.030023097991943, 6.948056697845459], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 3, 1, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 3, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [58, 27, 63, 62, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 3, 4, 3, 6, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 23, 18, 3, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, tf.math.multiply(tf.math.add(grad, grad), tf.math.negative(grad))), alpha)))), tf.math.divide_no_nan(grad, tf.math.negative(grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(grad), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [32.435935974121094, 9.697735450110966e+29, 2.3272557258605957, 2.308117389678955, 2.303982973098755, 2.3031420707702637], "accuracy": [0.19733192026615143, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09813763201236725, 0.09549596905708313], "val_loss": [3176.3623046875, 2.3456342220306396, 2.311826229095459, 2.3044471740722656, 2.3031129837036133, 2.3027398586273193], "val_accuracy": [0.10000000149011612, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09866666793823242, 0.0989999994635582]}}]