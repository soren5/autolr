[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [35, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 1, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [1, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.3434285819530487, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 18, 9, 9, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.divide_no_nan(sigma, sigma), beta))), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5518295764923096, 3.4863829612731934, 2.26400089263916, 2.2585952281951904, 2.3071820735931396, 2.3040859699249268, 2.30338978767395], "accuracy": [0.19059570133686066, 0.12112006545066833, 0.1644432693719864, 0.1872936189174652, 0.1002509593963623, 0.10170386731624603, 0.10117553919553757], "val_loss": [7.476011753082275, 1.884690284729004, 2.305415391921997, 2.3119263648986816, 2.3039653301239014, 2.303088426589966, 2.3028743267059326], "val_accuracy": [0.09600000083446503, 0.34166666865348816, 0.10533333569765091, 0.10199999809265137, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [46, 80, 17, 4, 55, 87, 41, 36], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [70, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 7, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.25999999046325684, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2001383304595947, 2.2904956340789795, 2.2337801456451416, 2.3209915161132812, 2.2209150791168213, 2.3052902221679688, 2.3033032417297363, 2.303316593170166, 2.303262710571289], "accuracy": [0.19455818831920624, 0.13261127471923828, 0.1628582775592804, 0.11993131786584854, 0.19218069314956665, 0.09959053993225098, 0.10434553027153015, 0.10077928751707077, 0.09826971590518951], "val_loss": [2.3061187267303467, 2.0442559719085693, 2.3404154777526855, 2.032200813293457, 2.3087661266326904, 2.303469181060791, 2.302955389022827, 2.302626848220825, 2.302588701248169], "val_accuracy": [0.10599999874830246, 0.25466665625572205, 0.10599999874830246, 0.2696666717529297, 0.0976666659116745, 0.0989999994635582, 0.09700000286102295, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 2, 9, 1, 3, 1, 3, 5, 0, 2, 6, 2, 0, 2, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4, 5, 1, 4], [87, 86, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.22114285826683044, "mapping_values": [1, 3, 1, 2, 1, 37, 22, 15, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, beta), tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.negative(grad)), tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), grad)), grad))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.pow(grad, alpha))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3468127250671387, 2.301668405532837, 2.266012668609619, 2.305600166320801, 2.303436517715454, 2.3031344413757324, 2.303332805633545], "accuracy": [0.1814819723367691, 0.10527011007070541, 0.19733192026615143, 0.09879804402589798, 0.10460969805717468, 0.10421344637870789, 0.0940430611371994], "val_loss": [2.3033552169799805, 2.2929062843322754, 2.3068747520446777, 2.3028926849365234, 2.302687168121338, 2.302631378173828, 2.302642822265625], "val_accuracy": [0.1003333330154419, 0.2150000035762787, 0.09833333641290665, 0.10166666656732559, 0.10166666656732559, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 2, 2, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 4, 6, 0, 6, 6, 0, 3, 3, 6, 4, 8, 5, 1, 5, 2, 2, 1, 3, 7, 4, 9], [0, 3, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4, 2, 3, 3, 1, 1, 3, 4, 5, 4, 0, 2, 3, 0, 1], [81, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.12457142770290375, "mapping_values": [1, 2, 1, 1, 0, 67, 41, 26, 7, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.negative(grad)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), grad))), grad))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(alpha), tf.math.square(tf.math.subtract(tf.math.square(alpha), tf.math.add(tf.math.add(grad, tf.math.subtract(grad, grad)), grad)))))), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta)))), tf.math.add(tf.math.pow(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.411914110183716, 2.318953514099121, 2.3035025596618652, 2.3031561374664307, 2.3030877113342285, 2.302747964859009], "accuracy": [0.19442610442638397, 0.1570466309785843, 0.09826971590518951, 0.09774138033390045, 0.09668471664190292, 0.10302469879388809], "val_loss": [2.238806962966919, 2.3044581413269043, 2.3030219078063965, 2.3027446269989014, 2.3024957180023193, 2.301731824874878], "val_accuracy": [0.12700000405311584, 0.09966666996479034, 0.09966666996479034, 0.09933333098888397, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41, 36], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [89, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 0, 1, 2, 4, 9, 1, 2, 6, 4, 4, 6, 1, 5, 2, 5], [5, 4, 1, 4, 1, 3, 4, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.10514285415410995, "mapping_values": [1, 13, 7, 6, 2, 7, 3, 4, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(grad, alpha), tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(grad, beta), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2466957569122314, 2.174556016921997, 2.846822738647461, 2.3113672733306885, 2.304727554321289, 2.3033931255340576], "accuracy": [0.2207106053829193, 0.21120063960552216, 0.15097081661224365, 0.09998679161071777, 0.09708096832036972, 0.09787346422672272], "val_loss": [2.202148675918579, 2.9038970470428467, 2.318099021911621, 2.305955171585083, 2.303300380706787, 2.3027262687683105], "val_accuracy": [0.10499999672174454, 0.0989999994635582, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 2, 8, 9, 1, 3, 2, 1, 5, 0, 2, 6, 2, 0, 2, 4, 4, 0, 6, 8], [0, 5, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [94, 30, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 6, 4, 2, 2, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [19.146533966064453, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20604939758777618, 0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [64.34750366210938, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 8, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [23, 56, 78, 41, 8], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 7, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.0295610427856445, 2.309445381164551, 2.3041739463806152, 2.303184747695923, 2.302976131439209, 2.3029956817626953], "accuracy": [0.18412363529205322, 0.09959053993225098, 0.09879804402589798, 0.09272222965955734, 0.09708096832036972, 0.0952318087220192], "val_loss": [2.313504219055176, 2.3047561645507812, 2.303097724914551, 2.3026485443115234, 2.302673816680908, 2.3025906085968018], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.0989999994635582, 0.10466666519641876, 0.10466666519641876, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 3, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 9, 9, 1, 3, 2, 3, 2, 0, 2, 6, 0, 0, 2, 4, 1, 2, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [4, 1, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [6, 4, 0, 4, 1, 3, 3, 4, 1, 3, 0], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 5, 2, 3, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2398524160.0, 369536663552.0, 6345937387520.0, 45386999791616.0, 199467391254528.0, 661295443476480.0], "accuracy": [0.09959053993225098, 0.10236428678035736, 0.09853387624025345, 0.10051512718200684, 0.09774138033390045, 0.1010434553027153], "val_loss": [25232058368.0, 1360229957632.0, 14600016756736.0, 79598117191680.0, 298150589890560.0, 879503538651136.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 2, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [55, 80, 63, 4, 55, 87, 41], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 9, 9, 1, 3, 2, 3, 2, 0, 2, 6, 0, 0, 2, 4, 1, 2, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [25, 56, 78, 41, 8], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 4, 9, 1, 2, 6, 4, 4, 6, 1, 5, 2, 5], [5, 4, 1, 4, 1, 3, 4, 2, 1, 3, 0], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 4, 2, 2, 0, 18, 10, 8, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.pow(alpha, tf.math.add(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(grad, grad), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(alpha, sigma), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8973379135131836, 2.303988456726074, 2.303008556365967, 2.3029258251190186, 2.3029861450195312, 2.3032712936401367], "accuracy": [0.17817988991737366, 0.09734513610601425, 0.09576013684272766, 0.09496764093637466, 0.09655263274908066, 0.09853387624025345], "val_loss": [2.304769277572632, 2.302943706512451, 2.3026700019836426, 2.3026986122131348, 2.302739143371582, 2.3021771907806396], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 4, 2, 4, 9, 4, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 34, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [70, 56, 78, 41, 8], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 7, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 3, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))", "other_info": {"loss": [2.3045785427093506, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]