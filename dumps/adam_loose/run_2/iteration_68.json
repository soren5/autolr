[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [1, 3, 4, 3, 2, 5, 1, 4, 3, 2], [18, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [3, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3871428668498993, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.247624397277832, 2.4145753383636475, 2.2500271797180176, 2.240130662918091, 2.2489144802093506, 2.2851600646972656, 2.2167892456054688, 2.2954022884368896, 1.9940742254257202, 2.3360939025878906, 2.3046035766601562], "accuracy": [0.20552106201648712, 0.13868708908557892, 0.14661207795143127, 0.18478403985500336, 0.13710209727287292, 0.14317791163921356, 0.1748778223991394, 0.12851670384407043, 0.30920618772506714, 0.10091137140989304, 0.1010434553027153], "val_loss": [2.2939517498016357, 2.2481024265289307, 2.2922699451446533, 2.1745259761810303, 2.3027451038360596, 2.034921169281006, 2.302525281906128, 2.2520954608917236, 2.408647060394287, 2.3047900199890137, 2.3027899265289307], "val_accuracy": [0.09833333641290665, 0.26499998569488525, 0.10000000149011612, 0.2893333435058594, 0.09833333641290665, 0.3943333327770233, 0.10166666656732559, 0.14399999380111694, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3837142884731293, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5439822673797607, 2.3351218700408936, 2.4484333992004395, 2.307814359664917, 2.304001569747925, 2.3032469749450684, 2.303088426589966], "accuracy": [0.1810857206583023, 0.12389380484819412, 0.1328754425048828, 0.09826971590518951, 0.09998679161071777, 0.09787346422672272, 0.09826971590518951], "val_loss": [2.3030264377593994, 2.1650760173797607, 2.309826612472534, 2.3038065433502197, 2.3028838634490967, 2.302619695663452, 2.3026416301727295], "val_accuracy": [0.10100000351667404, 0.39233332872390747, 0.10333333164453506, 0.10333333164453506, 0.0989999994635582, 0.10333333164453506, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [0, 3, 1, 2, 2, 5, 1, 4, 3, 2, 1, 3], [38, 56, 78, 41, 8], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3125714361667633, "mapping_values": [1, 13, 7, 6, 2, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(grad, alpha), tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3803913593292236, 2.2286341190338135, 2.233109712600708, 2.3713624477386475, 2.307288885116577, 2.3031623363494873, 2.3033716678619385, 2.2620790004730225], "accuracy": [0.187689870595932, 0.1744815707206726, 0.19059570133686066, 0.18399155139923096, 0.09893012791872025, 0.09840179979801178, 0.09813763201236725, 0.15942411124706268], "val_loss": [2.2934622764587402, 2.2473649978637695, 1.9192041158676147, 2.3085973262786865, 2.3030478954315186, 2.302277088165283, 2.3016836643218994, 2.309256076812744], "val_accuracy": [0.18566666543483734, 0.25566667318344116, 0.3070000112056732, 0.10133333504199982, 0.09933333098888397, 0.10400000214576721, 0.09533333033323288, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 2, 0, 2, 6, 0, 0, 2, 4, 1, 2, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [38, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [5, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2208571434020996, "mapping_values": [1, 1, 0, 1, 1, 28, 16, 12, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.negative(alpha)))), grad), tf.math.negative(grad))))), tf.math.add(tf.math.pow(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0814828872680664, 2.3071794509887695, 2.3013854026794434, 2.138476610183716, 2.9792237281799316, 2.3044919967651367, 2.3032402992248535, 2.3028955459594727, 2.303288698196411], "accuracy": [0.175670325756073, 0.09721305221319199, 0.10513802617788315, 0.2188614457845688, 0.14780081808567047, 0.09826971590518951, 0.09879804402589798, 0.09932637959718704, 0.09457138925790787], "val_loss": [2.309918165206909, 2.3031957149505615, 2.2852232456207275, 2.1157662868499756, 2.305222511291504, 2.3028252124786377, 2.3025400638580322, 2.3025941848754883, 2.3026223182678223], "val_accuracy": [0.10266666859388351, 0.10233332961797714, 0.12266666442155838, 0.2213333398103714, 0.09700000286102295, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [12, 80, 63, 4, 55, 87, 41], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 6, 1, 8, 1, 5, 5, 3, 8, 0, 5, 6, 3, 0, 2, 5, 1, 0, 6, 8, 0, 9, 1], [1, 3, 2, 2, 2, 5, 1, 4, 3, 2, 1, 3], [38, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [7, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.22057142853736877, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2628564834594727, 3.255991220474243, 2.3091328144073486, 2.3047380447387695, 2.303873062133789, 2.302932024002075], "accuracy": [0.18901069462299347, 0.17580240964889526, 0.09681680053472519, 0.09576013684272766, 0.09338264167308807, 0.09509972482919693], "val_loss": [2.2577624320983887, 2.317945718765259, 2.3049864768981934, 2.303446054458618, 2.302701950073242, 2.302762031555176], "val_accuracy": [0.2213333398103714, 0.10466666519641876, 0.09866666793823242, 0.0963333323597908, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [0, 1, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [38, 56, 78, 41, 8], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.1940000057220459, "mapping_values": [1, 1, 0, 1, 1, 28, 18, 10, 3, 18, 10, 8, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(beta, tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(grad)), alpha))), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.subtract(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(grad, grad)), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(alpha, sigma), sigma)))), beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.494964838027954, 2.302633762359619, 2.250351905822754, 2.6314280033111572, 2.255723714828491, 2.30635404586792, 2.263695001602173, 2.304816722869873, 2.3036489486694336], "accuracy": [0.20195482671260834, 0.1080438494682312, 0.18676528334617615, 0.11240258812904358, 0.21542729437351227, 0.10210011899471283, 0.15361246466636658, 0.09272222965955734, 0.10117553919553757], "val_loss": [2.3029568195343018, 2.2997751235961914, 4.166017532348633, 2.2925918102264404, 2.3131346702575684, 2.2893497943878174, 2.3035175800323486, 2.3028998374938965, 2.3025689125061035], "val_accuracy": [0.09966666996479034, 0.10333333164453506, 0.11033333092927933, 0.19366666674613953, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [4, 4, 2, 5, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [49, 80, 17, 4, 55, 87, 41], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 3, 1, 2, 2, 5, 1, 4, 3, 2, 1, 3], [20, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [2, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 21, 16, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(grad, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 1, 1, 3, 2, 2, 1, 1, 0, 1, 0, 3, 0], [51, 80, 17, 4, 55, 87, 41], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 6, 1, 6, 2, 3, 5, 3, 8, 0, 5, 6, 3, 0, 8, 5, 1, 0, 6, 8, 0, 9, 1], [1, 0, 2, 2, 2, 0, 1, 4, 3, 3, 1, 3], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 28, 17, 11, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha))), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(beta, tf.math.sqrt(beta))), tf.math.negative(tf.math.square(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), alpha))))), grad))), grad), tf.math.square(tf.math.subtract(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 1, 2, 3, 0, 2, 1, 1, 0, 2, 1, 2, 1, 2, 2], [38, 80, 17, 4, 55, 87, 41], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [9, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 3, 2, 2, 2, 5, 1, 4, 3, 2, 1, 3], [18, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [2, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 6, 1, 8, 1, 5, 5, 3, 8, 0, 5, 6, 3, 0, 2, 5, 1, 0, 6, 8, 0, 9, 1], [1, 3, 2, 2, 2, 5, 1, 4, 3, 2, 1, 3], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [2, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 0, 1, 1, 3, 1, 2, 0, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3101954460144043, 2.309032917022705, 2.30971622467041, 2.309845209121704, 2.3093554973602295, 2.3088886737823486, 2.308701992034912, 2.309743881225586, 2.3107919692993164, 2.3096868991851807, 2.310215711593628], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.08915598690509796, 0.09259014576673508, 0.09047681838274002, 0.09140139818191528, 0.09734513610601425, 0.08902391046285629, 0.08875974267721176, 0.09496764093637466, 0.08638224750757217], "val_loss": [2.3081979751586914, 2.3081865310668945, 2.308173656463623, 2.3081610202789307, 2.3081483840942383, 2.308136463165283, 2.3081257343292236, 2.3081130981445312, 2.3080999851226807, 2.3080880641937256, 2.3080763816833496], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]