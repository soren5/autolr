[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [93, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [48, 94]], "fitness": -0.8420000076293945, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.1043171882629395, 1.7761759757995605, 1.4960931539535522, 1.013863205909729, 0.8809282779693604, 0.765274167060852, 0.7083908319473267, 0.6788941621780396, 0.6399440169334412, 0.654154360294342, 0.607170581817627, 0.5963454246520996, 0.5440961718559265, 0.558915376663208, 0.5346413254737854, 0.5313804149627686, 0.5446821451187134, 0.4988210201263428, 0.48896849155426025, 0.47234010696411133, 0.4686497449874878, 0.4443995952606201, 0.45991212129592896, 0.44998982548713684, 0.43659770488739014, 0.42827075719833374, 0.41163939237594604, 0.4208070635795593, 0.4200778603553772, 0.3984220623970032, 0.3810892403125763], "accuracy": [0.31660282611846924, 0.4297979176044464, 0.5031039714813232, 0.6178840398788452, 0.6634526252746582, 0.7063795924186707, 0.7213049530982971, 0.7362303733825684, 0.7602694630622864, 0.7456082701683044, 0.7560427784919739, 0.7738739848136902, 0.7924976944923401, 0.7817989587783813, 0.7991018295288086, 0.7935543656349182, 0.7957997918128967, 0.8140271902084351, 0.8136309385299683, 0.8214238286018372, 0.8239334225654602, 0.8322546482086182, 0.8241975903511047, 0.8298771381378174, 0.8308017253875732, 0.8350284099578857, 0.8421608805656433, 0.8366134166717529, 0.837141752243042, 0.8467837572097778, 0.8535200357437134], "val_loss": [1.8863654136657715, 1.6497187614440918, 0.9604060053825378, 0.7764886617660522, 0.6683840751647949, 0.6886732578277588, 0.6245027780532837, 0.64111328125, 0.5454355478286743, 0.5377985835075378, 0.5221907496452332, 0.5086808800697327, 0.5112873315811157, 0.6049212217330933, 0.546830952167511, 0.4817371070384979, 0.479674756526947, 0.445861279964447, 0.4810943305492401, 0.5015454292297363, 0.4239949882030487, 0.4314592182636261, 0.4501315653324127, 0.45080211758613586, 0.4424574375152588, 0.4096495509147644, 0.4703095257282257, 0.420066237449646, 0.46727022528648376, 0.4061907231807709, 0.42173707485198975], "val_accuracy": [0.4959999918937683, 0.5040000081062317, 0.6203333139419556, 0.6993333101272583, 0.7403333187103271, 0.721666693687439, 0.7493333220481873, 0.7553333044052124, 0.7916666865348816, 0.7929999828338623, 0.7990000247955322, 0.809333324432373, 0.8109999895095825, 0.768666684627533, 0.7953333258628845, 0.8293333053588867, 0.8196666836738586, 0.8389999866485596, 0.8166666626930237, 0.7926666736602783, 0.8503333330154419, 0.8330000042915344, 0.8326666951179504, 0.8266666531562805, 0.8323333263397217, 0.856333315372467, 0.8220000267028809, 0.8506666421890259, 0.8149999976158142, 0.8543333411216736, 0.8360000252723694]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [71, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [43, 94]], "fitness": -0.8291428685188293, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 11, 7, 4, 2, 3, 2, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), grad))), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.0901424884796143, 1.45061194896698, 1.0144604444503784, 0.9108629822731018, 0.8189625144004822, 0.7609634399414062, 0.7261603474617004, 0.6753326058387756, 0.6759351491928101, 0.6278799176216125, 0.6307541131973267, 0.6037040948867798, 0.601101815700531, 0.570921003818512, 0.5595095753669739, 0.5575606822967529, 0.5349401235580444, 0.5403990745544434, 0.516118586063385, 0.5099691152572632, 0.4939895570278168, 0.49800780415534973, 0.5066822171211243, 0.4738931357860565, 0.4797198474407196, 0.4567701518535614, 0.4589611291885376, 0.44473394751548767, 0.4525299370288849, 0.4288809895515442, 0.4568595886230469, 0.41187357902526855, 0.42072737216949463, 0.4057203233242035, 0.4109584093093872, 0.4042379558086395, 0.39058125019073486, 0.3976469337940216, 0.40670403838157654, 0.3756972849369049, 0.3927653133869171, 0.36209598183631897, 0.3848527669906616, 0.3755417466163635, 0.37332242727279663, 0.3562171459197998, 0.3517369031906128, 0.35256850719451904, 0.3618718981742859, 0.361347496509552, 0.34284287691116333], "accuracy": [0.31382909417152405, 0.5068022608757019, 0.6267336010932922, 0.6567164063453674, 0.6884163022041321, 0.7103421092033386, 0.7239466309547424, 0.7416457533836365, 0.7391361594200134, 0.7535332441329956, 0.7572315335273743, 0.7647602558135986, 0.7593448758125305, 0.7778365015983582, 0.7825914621353149, 0.7837802171707153, 0.7881389260292053, 0.7905164361000061, 0.804649293422699, 0.8088759779930115, 0.8127063512802124, 0.8094043135643005, 0.8031964302062988, 0.8187822103500366, 0.8171972036361694, 0.8267071843147278, 0.8210275769233704, 0.8297450542449951, 0.8245938420295715, 0.8347642421722412, 0.8259146809577942, 0.8438779711723328, 0.8391229510307312, 0.8488970994949341, 0.8401796221733093, 0.8466516733169556, 0.8552370667457581, 0.8477083444595337, 0.8442742228507996, 0.8594637513160706, 0.8487650156021118, 0.8673887252807617, 0.8549728989601135, 0.8570862412452698, 0.8607845902442932, 0.8632941246032715, 0.8702945709228516, 0.8693699836730957, 0.8580108284950256, 0.8636903762817383, 0.8713511824607849], "val_loss": [1.2637802362442017, 1.0318827629089355, 0.9931246638298035, 0.7922196388244629, 0.7122108340263367, 0.700661301612854, 0.7104271650314331, 0.6896895170211792, 0.6039802432060242, 0.6207295060157776, 0.5711974501609802, 0.6037648916244507, 0.5665237903594971, 0.548854410648346, 0.6094081997871399, 0.5320845246315002, 0.525532603263855, 0.5069164037704468, 0.5113778710365295, 0.502193033695221, 0.5263234972953796, 0.4823654294013977, 0.5088301301002502, 0.5279985666275024, 0.46790817379951477, 0.47644856572151184, 0.4998601973056793, 0.4622693657875061, 0.4601871371269226, 0.46190351247787476, 0.4428533613681793, 0.4427964985370636, 0.4556881785392761, 0.4313804507255554, 0.44464701414108276, 0.44761353731155396, 0.4275154769420624, 0.43812981247901917, 0.4247609078884125, 0.4355090856552124, 0.4148264527320862, 0.4153529107570648, 0.43096497654914856, 0.4284149706363678, 0.40931257605552673, 0.40246134996414185, 0.409323126077652, 0.4011346101760864, 0.4154449999332428, 0.4184189736843109, 0.4068108797073364], "val_accuracy": [0.609666645526886, 0.6539999842643738, 0.6516666412353516, 0.7066666483879089, 0.715666651725769, 0.7303333282470703, 0.7110000252723694, 0.734333336353302, 0.7673333287239075, 0.7666666507720947, 0.7833333611488342, 0.7566666603088379, 0.7730000019073486, 0.7916666865348816, 0.7506666779518127, 0.7910000085830688, 0.7993333339691162, 0.8090000152587891, 0.8073333501815796, 0.812333345413208, 0.8050000071525574, 0.8216666579246521, 0.8050000071525574, 0.7883333563804626, 0.82833331823349, 0.8206666707992554, 0.8090000152587891, 0.8316666483879089, 0.8236666917800903, 0.8289999961853027, 0.8373333215713501, 0.840666651725769, 0.8299999833106995, 0.8416666388511658, 0.8349999785423279, 0.8289999961853027, 0.8476666808128357, 0.8403333425521851, 0.8446666598320007, 0.8420000076293945, 0.8489999771118164, 0.8500000238418579, 0.8396666646003723, 0.8389999866485596, 0.8536666631698608, 0.8550000190734863, 0.8456666469573975, 0.8536666631698608, 0.8416666388511658, 0.8423333168029785, 0.8496666550636292]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 0, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [9, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [43, 94]], "fitness": -0.8251428604125977, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.1009204387664795, 1.4349408149719238, 1.0431690216064453, 0.9076507091522217, 0.9302838444709778, 0.7345312833786011, 0.7491505742073059, 0.6976602673530579, 0.7042180895805359, 0.6570947766304016, 0.6705676913261414, 0.630700409412384, 0.5922301411628723, 0.6206278204917908, 0.5917479991912842, 0.5626633167266846, 0.5386955738067627, 0.5446165204048157, 0.5296474695205688, 0.5122520923614502, 0.5358088612556458, 0.5075258016586304, 0.504469096660614, 0.4961841106414795, 0.494881808757782, 0.4722757637500763, 0.49085506796836853, 0.44956544041633606, 0.4643843472003937, 0.4536765515804291], "accuracy": [0.3171311616897583, 0.5066701769828796, 0.6252806782722473, 0.6598864197731018, 0.6581693291664124, 0.722757875919342, 0.7127195596694946, 0.733588695526123, 0.7284374833106995, 0.7483819723129272, 0.7479857206344604, 0.752740740776062, 0.7795535326004028, 0.759609043598175, 0.7744023203849792, 0.7887993454933167, 0.796328067779541, 0.7975168228149414, 0.8001585006713867, 0.811649739742279, 0.7931581139564514, 0.8128384351730347, 0.8096684813499451, 0.8145555257797241, 0.813498854637146, 0.8249900937080383, 0.8162726163864136, 0.8308017253875732, 0.8253863453865051, 0.83119797706604], "val_loss": [1.2627390623092651, 1.2590153217315674, 0.8685979843139648, 1.004809856414795, 0.7130875587463379, 0.6560872793197632, 0.6372901797294617, 0.6797373294830322, 0.6125072240829468, 0.610166609287262, 0.5771965384483337, 0.5646600127220154, 0.5702764391899109, 0.5671337842941284, 0.5411142706871033, 0.5245309472084045, 0.5331684350967407, 0.4977246820926666, 0.48766568303108215, 0.5035635828971863, 0.4842575788497925, 0.4653608500957489, 0.4717520475387573, 0.4694448709487915, 0.47088608145713806, 0.4965459704399109, 0.47018977999687195, 0.44809669256210327, 0.4508623778820038, 0.44363099336624146], "val_accuracy": [0.6303333044052124, 0.5370000004768372, 0.6420000195503235, 0.6119999885559082, 0.7096666693687439, 0.7363333106040955, 0.7419999837875366, 0.7080000042915344, 0.765666663646698, 0.7606666684150696, 0.7853333353996277, 0.7710000276565552, 0.7713333368301392, 0.7829999923706055, 0.7986666560173035, 0.8083333373069763, 0.7879999876022339, 0.8159999847412109, 0.8243333101272583, 0.8119999766349792, 0.8193333148956299, 0.8339999914169312, 0.8333333134651184, 0.8240000009536743, 0.840666651725769, 0.8183333277702332, 0.828000009059906, 0.8323333263397217, 0.8389999866485596, 0.8383333086967468]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 0, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [86, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 0, 0, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 2, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [43, 94]], "fitness": -0.8185714483261108, "mapping_values": [1, 37, 22, 15, 6, 5, 3, 2, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.pow(alpha, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha))), tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), alpha))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.09857439994812, 1.4816423654556274, 1.0633336305618286, 0.8995466828346252, 0.7987605929374695, 0.7648277878761292, 0.7503625154495239, 0.7235770225524902, 0.6716292500495911, 0.6494158506393433, 0.6536424160003662, 0.6232425570487976, 0.5904529094696045, 0.5971779823303223, 0.5758686065673828, 0.5921539664268494, 0.5425245761871338, 0.5667752027511597, 0.5341707468032837, 0.5250254273414612, 0.5289254784584045, 0.4944639503955841, 0.5076967477798462, 0.49182039499282837, 0.4872671067714691, 0.46922025084495544], "accuracy": [0.3004887104034424, 0.4917448163032532, 0.6299035549163818, 0.668339729309082, 0.7036058902740479, 0.7086250185966492, 0.7160216569900513, 0.724739134311676, 0.7366266250610352, 0.7516840696334839, 0.7498348951339722, 0.7655527591705322, 0.7738739848136902, 0.765949010848999, 0.7820631265640259, 0.7757231593132019, 0.8001585006713867, 0.7825914621353149, 0.8009510040283203, 0.7980451583862305, 0.8009510040283203, 0.8216879963874817, 0.8095363974571228, 0.8164047002792358, 0.8171972036361694, 0.8238013386726379], "val_loss": [1.3881824016571045, 1.1289864778518677, 0.904658854007721, 0.7229073643684387, 0.6892688870429993, 0.6899734139442444, 0.6551233530044556, 0.6297412514686584, 0.6181721091270447, 0.6527799963951111, 0.5545173287391663, 0.5482171177864075, 0.5549713373184204, 0.5533716678619385, 0.557084321975708, 0.5282946228981018, 0.508500337600708, 0.4915581941604614, 0.5371474027633667, 0.5493313074111938, 0.4696027338504791, 0.5141425132751465, 0.47078555822372437, 0.5504934191703796, 0.46500447392463684, 0.5158737897872925], "val_accuracy": [0.4873333275318146, 0.6449999809265137, 0.6370000243186951, 0.7336666584014893, 0.7386666536331177, 0.7289999723434448, 0.7476666569709778, 0.749666690826416, 0.7639999985694885, 0.7436666488647461, 0.7820000052452087, 0.7903333306312561, 0.7789999842643738, 0.7889999747276306, 0.7823333144187927, 0.7979999780654907, 0.8036666512489319, 0.8223333358764648, 0.7886666655540466, 0.7733333110809326, 0.831333339214325, 0.8009999990463257, 0.8256666660308838, 0.7826666831970215, 0.8299999833106995, 0.8080000281333923]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 0, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 0, 0, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 2, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [43, 94]], "fitness": -0.7911428809165955, "mapping_values": [1, 4, 2, 2, 2, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.096327781677246, 1.489198923110962, 1.0486112833023071, 0.8982073664665222, 0.8134970664978027, 0.7812149524688721, 0.736355185508728, 0.705624520778656, 0.6718133091926575, 0.6886796951293945, 0.6229539513587952, 0.621211051940918, 0.6042851209640503, 0.5894179344177246, 0.5874291062355042, 0.5776681900024414], "accuracy": [0.3152819871902466, 0.49385812878608704, 0.6116761565208435, 0.6692643165588379, 0.69673752784729, 0.7103421092033386, 0.7215691208839417, 0.7276449799537659, 0.739928662776947, 0.733588695526123, 0.7588165402412415, 0.7655527591705322, 0.763439416885376, 0.774270236492157, 0.7689869403839111, 0.7774402499198914], "val_loss": [1.4143012762069702, 1.0448122024536133, 0.8455471992492676, 0.7863348126411438, 0.7525321245193481, 0.6806934475898743, 0.6296579837799072, 0.6240889430046082, 0.6471419930458069, 0.6104382276535034, 0.5787639021873474, 0.6159071326255798, 0.5613887310028076, 0.5939976572990417, 0.5717461109161377, 0.5606997609138489], "val_accuracy": [0.5109999775886536, 0.6036666631698608, 0.6869999766349792, 0.718999981880188, 0.706333339214325, 0.715666651725769, 0.7549999952316284, 0.7456666827201843, 0.734666645526886, 0.7573333382606506, 0.781333327293396, 0.7283333539962769, 0.7676666378974915, 0.7636666893959045, 0.7749999761581421, 0.7710000276565552]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 3, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 0, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 8, 6, 9, 3, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [21, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [43, 94]], "fitness": -0.1314285695552826, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [9.055839538574219, 3.890791893005371, 2.307065963745117, 2.303586006164551, 2.3033010959625244, 2.302943229675293], "accuracy": [0.17817988991737366, 0.11319508403539658, 0.10011887550354004, 0.10276053100824356, 0.10315678268671036, 0.10011887550354004], "val_loss": [7.6916913986206055, 2.310683250427246, 2.3044965267181396, 2.3033013343811035, 2.3028721809387207, 2.3027985095977783], "val_accuracy": [0.13366666436195374, 0.09866666793823242, 0.1003333330154419, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 3, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 3, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [93, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 0, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 4, 4, 6, 0, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [8, 9, 5, 4], [3, 0, 4], [43, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 1, 11, 7, 4, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(grad, grad)))), tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [1, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 4, 5, 4], [4, 0, 4], [43, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(grad, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 3, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 0, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 2, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [43, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 1, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [43, 51, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 3, 0, 6, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 2, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [81, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [94, 94]], "fitness": -0.09971428662538528, "mapping_values": [1, 38, 23, 15, 4, 6, 4, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.sqrt(grad), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.negative(alpha), tf.math.multiply(tf.math.pow(tf.math.negative(grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), alpha)), tf.math.add(tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha))), alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.516197919845581, 2.3045074939727783, 2.303504705429077, 2.3032546043395996, 2.8405070304870605, 2.3029754161834717], "accuracy": [0.18584071099758148, 0.09430722147226334, 0.09589222073554993, 0.09549596905708313, 0.10659094154834747, 0.09774138033390045], "val_loss": [2.3044612407684326, 2.3026540279388428, 2.302548408508301, 2.3025331497192383, 2.304009199142456, 2.303440809249878], "val_accuracy": [0.10300000011920929, 0.09933333098888397, 0.10300000011920929, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612]}}]