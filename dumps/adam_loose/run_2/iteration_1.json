[{"genotype": [[0], [1], [], [3], [], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 6, 8, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [0, 0, 3, 4, 1, 5, 1, 4], [92, 52, 36, 15], [1], [], [1], [], [1], [], [6], []], "fitness": -0.6748571395874023, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.225924015045166, 6.229991436004639, 2.3066606521606445, 2.307401657104492, 2.342853307723999, 2.2616472244262695, 2.0294837951660156, 1.7573903799057007, 1.8148337602615356, 1.5555137395858765, 1.4431211948394775, 1.5128480195999146, 1.295656681060791, 1.2356938123703003, 1.539096713066101, 2.428583860397339, 1.8669170141220093, 1.4705674648284912, 1.3261278867721558], "accuracy": [0.19297318160533905, 0.11451591551303864, 0.11610091477632523, 0.15321621298789978, 0.1802932173013687, 0.13578127324581146, 0.28899750113487244, 0.4123629629611969, 0.4135517179965973, 0.47206446528434753, 0.49729230999946594, 0.49306565523147583, 0.5589750409126282, 0.5630695819854736, 0.4931977391242981, 0.3047153651714325, 0.39889049530029297, 0.4819706678390503, 0.5349359512329102], "val_loss": [3.9201550483703613, 2.313234329223633, 2.28708553314209, 2.257718324661255, 2.295793056488037, 2.051344871520996, 1.7213563919067383, 1.5548259019851685, 1.5150312185287476, 1.302655577659607, 1.3387333154678345, 1.1888052225112915, 0.9742521047592163, 0.9283658862113953, 2.974881887435913, 1.3846567869186401, 1.5695096254348755, 1.1704704761505127, 1.0632951259613037], "val_accuracy": [0.21266666054725647, 0.10100000351667404, 0.11299999803304672, 0.20733332633972168, 0.12399999797344208, 0.28866666555404663, 0.4483333230018616, 0.4623333215713501, 0.5099999904632568, 0.5653333067893982, 0.5910000205039978, 0.6343333125114441, 0.6513333320617676, 0.6620000004768372, 0.35499998927116394, 0.5296666622161865, 0.44200000166893005, 0.5830000042915344, 0.6193333268165588]}}, {"genotype": [[0], [0, 1], [8, 4, 8], [1, 2], [], [0], [9], [], [94], [1], [], [1], [], [1], [], [4], []], "fitness": -0.2199999988079071, "mapping_values": [1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.409642457962036, 2.2609457969665527, 2.2960972785949707, 2.3093209266662598, 2.3048975467681885, 2.303844928741455, 2.3033447265625, 2.3029067516326904], "accuracy": [0.17514199018478394, 0.15321621298789978, 0.11121384054422379, 0.1504424810409546, 0.09708096832036972, 0.0948355570435524, 0.09708096832036972, 0.09906221181154251], "val_loss": [2.280796527862549, 2.3043406009674072, 2.200636148452759, 2.3053336143493652, 2.3027634620666504, 2.302686929702759, 2.3025429248809814, 2.30245304107666], "val_accuracy": [0.12866666913032532, 0.10066666454076767, 0.218666672706604, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1], [], [1], [], [0, 0, 0, 0, 1, 1], [7, 0, 0, 0], [3, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 4, 4, 8, 3, 2, 3, 8, 8, 8], [3, 2, 5, 2, 3, 5, 0, 0], [6, 96, 59], [0, 1, 0, 0, 0, 1], [7, 8, 0, 0], [4, 2], []], "fitness": -0.10742857307195663, "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(tf.math.negative(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.pow(tf.math.pow(sigma, tf.math.sqrt(beta)), tf.math.multiply(grad, beta)), tf.math.add(sigma, grad)), tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.negative(beta))))", "other_info": {"loss": [2.4148776531219482, 2.2773585319519043, 2.3146984577178955, 2.301762819290161, 2.3262815475463867, 2.272491216659546, 2.307680606842041, 2.3073787689208984, 2.3037548065185547, 2.3035531044006348, 2.3033342361450195], "accuracy": [0.1818782240152359, 0.19891692698001862, 0.09787346422672272, 0.10579843819141388, 0.1216483935713768, 0.1414608359336853, 0.15691454708576202, 0.09655263274908066, 0.0956280529499054, 0.09391097724437714, 0.09932637959718704], "val_loss": [2.3029401302337646, 2.36043643951416, 2.3032612800598145, 2.2771759033203125, 2.303666353225708, 2.3000004291534424, 2.310241460800171, 2.303497791290283, 2.3027172088623047, 2.3026249408721924, 2.3026936054229736], "val_accuracy": [0.10000000149011612, 0.0989999994635582, 0.10000000149011612, 0.0989999994635582, 0.09799999743700027, 0.10533333569765091, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 0, 16, 8, 8, 2, 6, 4, 2, 0]}, {"genotype": [[0], [1], [], [1, 2], [], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [7, 6, 4, 9, 1, 7, 2, 1, 5, 9, 5, 6, 1, 0], [0, 1, 3, 2, 0, 1, 2, 1], [92, 52, 36, 15], [0, 0, 1, 1, 1], [3, 4], [1, 7, 3], [], [1], [], [3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 16, 10, 6, 4, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(grad, beta), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, grad), sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [6, 2, 9, 8, 4, 6, 1, 4, 9, 0], [0, 1, 0, 2, 3, 2], [59, 94, 27, 54], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 1, 6, 4, 9, 4], [3, 1, 0, 5, 3], [43, 47], [1, 1, 0], [0], [1], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 4, 8, 1, 8, 8, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [50, 9, 56, 37, 43, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 8, 5, 3, 2, 1, 0, 1, 0, 13, 7, 6, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.subtract(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1], [0, 2, 3, 0, 3], [3], [], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [7, 6, 0, 9, 1, 7, 9, 1, 5, 9, 5, 6, 1, 0], [0, 3, 0, 3, 1, 0, 0, 5], [92, 52, 36, 15, 32, 43], [0, 1], [0], [4], [86], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 1, 0, 0, 4, 1], [6, 2, 1, 6], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 2, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 4, 3], [2, 0, 0, 2], [90, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9], [], [16, 16], [1], [0], [5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 0, 9, 1, 2, 2, 1, 0, 2, 6, 1, 2, 9, 8, 6, 8], [0, 1, 0, 3, 0, 0, 3, 0, 2, 0, 5, 4, 1, 0, 0, 6, 6, 1], [16, 99, 96, 99, 61, 1, 5, 6, 99, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 1, 0, 1, 0, 45, 27, 18, 10], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.pow(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.sqrt(grad), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1], [], [0, 1, 0, 2], [39, 39], [1], [0, 2, 3, 0, 3, 5], [3], [], [1], [0], [0], [0], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033814430236816, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1], [], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [18, 16], [0, 1], [0], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 9, 2, 0, 9], [6, 4, 0, 4, 0, 7, 4, 7, 3, 0], [16, 87, 84, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0, 19, 12, 7, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad))), grad), tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 0, 3], [16, 20], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 30, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]