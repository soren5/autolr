[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.48399999737739563, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4321401119232178, 2.2286038398742676, 2.2282254695892334, 2.288451910018921, 2.3031890392303467, 2.303393602371216, 2.303391456604004, 2.3030507564544678], "accuracy": [0.1900673657655716, 0.14832915365695953, 0.19019944965839386, 0.1228371411561966, 0.10606260597705841, 0.09760929644107819, 0.1014397069811821, 0.09602430462837219], "val_loss": [2.298835515975952, 2.3003411293029785, 1.739236831665039, 2.303215265274048, 2.302673101425171, 2.3027682304382324, 2.3026812076568604, 2.302640199661255], "val_accuracy": [0.1003333330154419, 0.16466666758060455, 0.48233333230018616, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 0, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7, 4, 2, 5], [2, 0, 2, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [39, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 3, 3, 0, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 1, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.36171427369117737, "mapping_values": [1, 41, 26, 15, 6, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.multiply(grad, alpha)), tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(alpha, alpha), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(alpha), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), alpha), alpha))))))))))), alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3389763832092285, 2.3112616539001465, 2.3043270111083984, 2.2998452186584473, 2.4460713863372803, 2.294658660888672], "accuracy": [0.19918107986450195, 0.1698586642742157, 0.1006472036242485, 0.10817593336105347, 0.18002906441688538, 0.1348566859960556], "val_loss": [2.281778335571289, 2.3047215938568115, 2.302534818649292, 2.2289936542510986, 2.2935075759887695, 2.301555871963501], "val_accuracy": [0.3616666793823242, 0.10199999809265137, 0.10199999809265137, 0.1146666631102562, 0.25733333826065063, 0.13466666638851166]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 1, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [76, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 2, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.28028571605682373, "mapping_values": [1, 9, 6, 3, 2, 9, 7, 2, 3, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.subtract(grad, tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.6427948474884033, 2.299553394317627, 2.568620443344116, 2.303391218185425, 2.3110899925231934, 2.3021843433380127, 2.2591769695281982], "accuracy": [0.17461365461349487, 0.12323339283466339, 0.11702549457550049, 0.10685510188341141, 0.10830801725387573, 0.10487385839223862, 0.17540615797042847], "val_loss": [2.3093013763427734, 3.830418586730957, 2.3008625507354736, 2.301638126373291, 2.302903175354004, 2.2956175804138184, 2.182178258895874], "val_accuracy": [0.0949999988079071, 0.2783333361148834, 0.12399999797344208, 0.13899999856948853, 0.10266666859388351, 0.16233333945274353, 0.19733333587646484]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [3, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 4, 5, 1, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 2, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [6, 3, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.27885714173316956, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4164907932281494, 2.2772727012634277, 2.3010988235473633, 2.2642791271209717, 2.3841888904571533, 2.274946689605713, 2.534428834915161, 2.303806781768799, 2.303159236907959, 2.303046703338623, 2.3030738830566406], "accuracy": [0.19416193664073944, 0.1620657742023468, 0.10645885765552521, 0.16417910158634186, 0.13538502156734467, 0.1394795924425125, 0.12019548565149307, 0.09932637959718704, 0.09602430462837219, 0.09708096832036972, 0.09893012791872025], "val_loss": [2.254420757293701, 2.303070306777954, 2.290133237838745, 2.0538547039031982, 2.302342176437378, 2.084925889968872, 2.3038196563720703, 2.302928924560547, 2.302595615386963, 2.302600145339966, 2.3026371002197266], "val_accuracy": [0.27433332800865173, 0.10066666454076767, 0.11433333158493042, 0.2523333430290222, 0.09833333641290665, 0.28066667914390564, 0.09833333641290665, 0.09833333641290665, 0.10499999672174454, 0.10499999672174454, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 8, 2, 0, 6, 5, 1, 2, 3, 6, 9, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0, 6], [5, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.23000000417232513, "mapping_values": [1, 3, 1, 2, 1, 28, 18, 10, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(tf.math.add(grad, grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))))), tf.math.pow(grad, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3598148822784424, 2.4175872802734375, 2.317422389984131, 2.249845266342163, 2.5009171962738037, 2.3195929527282715, 2.405439853668213, 2.304375171661377, 2.3041865825653076, 2.3039743900299072], "accuracy": [0.21516312658786774, 0.1838594675064087, 0.10157178342342377, 0.15678246319293976, 0.12759213149547577, 0.2036719024181366, 0.10394927859306335, 0.09509972482919693, 0.09747721254825592, 0.09430722147226334], "val_loss": [2.290910005569458, 2.309879779815674, 2.3009889125823975, 3.325002670288086, 2.271228551864624, 2.4883177280426025, 2.303826093673706, 2.3027474880218506, 2.3030033111572266, 2.3027336597442627], "val_accuracy": [0.1993333399295807, 0.0989999994635582, 0.0989999994635582, 0.11166666448116302, 0.23800000548362732, 0.19066666066646576, 0.09866666793823242, 0.10199999809265137, 0.0989999994635582, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 9, 0, 2, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 4, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [55, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.21771427989006042, "mapping_values": [1, 9, 6, 3, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9454076290130615, 2.5207712650299072, 2.3030097484588623, 2.3017051219940186, 2.1887943744659424, 2.3047282695770264], "accuracy": [0.20023775100708008, 0.11636507511138916, 0.1010434553027153, 0.13049794733524323, 0.22123894095420837, 0.09985470771789551], "val_loss": [2.277522087097168, 2.3046047687530518, 2.291278600692749, 2.2938342094421387, 2.3060731887817383, 2.303224802017212], "val_accuracy": [0.21533332765102386, 0.10166666656732559, 0.12166666984558105, 0.14100000262260437, 0.0976666659116745, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 5, 7, 8, 8, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [6, 3, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.1825714260339737, "mapping_values": [1, 3, 1, 2, 1, 8, 5, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8266665935516357, 2.1703927516937256, 10.783455848693848, 2.3167436122894287, 2.3057079315185547, 2.3034636974334717], "accuracy": [0.19178444147109985, 0.2429005354642868, 0.1978602558374405, 0.09747721254825592, 0.1006472036242485, 0.10236428678035736], "val_loss": [2.2504498958587646, 2.2260324954986572, 2.3288345336914062, 2.3069846630096436, 2.3034465312957764, 2.3028786182403564], "val_accuracy": [0.18433333933353424, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [22, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [3, 4, 6, 2, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 9, 6, 1, 0, 6], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 0, 4], [67, 43, 88, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.1817142814397812, "mapping_values": [1, 3, 1, 2, 2, 29, 18, 11, 5, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), beta)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.subtract(grad, tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7254505157470703, 2.316401720046997, 2.307781457901001, 2.303687572479248, 2.3005728721618652, 2.517587423324585, 2.3096399307250977, 2.3039228916168213, 2.3031203746795654, 2.303309440612793], "accuracy": [0.1850482076406479, 0.16510368883609772, 0.09919429570436478, 0.0956280529499054, 0.1150442510843277, 0.17593449354171753, 0.10527011007070541, 0.0936468094587326, 0.09576013684272766, 0.09576013684272766], "val_loss": [2.3099005222320557, 2.313520908355713, 2.3035244941711426, 2.3024163246154785, 2.2878365516662598, 2.3165321350097656, 2.3043248653411865, 2.302921772003174, 2.3026318550109863, 2.302565336227417], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.0989999994635582, 0.09933333098888397, 0.1860000044107437, 0.1003333330154419, 0.10000000149011612, 0.09933333098888397, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [3, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 7, 0, 0, 5, 1, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 2, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.14399999380111694, "mapping_values": [1, 3, 1, 2, 1, 11, 7, 4, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.square(beta)))), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [124.26265716552734, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1978602558374405, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17640.52734375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1393333375453949, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [3, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [76, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [81, 43, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [6, 3, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.09285714477300644, "mapping_values": [1, 9, 6, 3, 2, 12, 7, 5, 1, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(grad, tf.math.divide_no_nan(grad, grad)), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3101139068603516, 2.3088958263397217, 2.3090999126434326, 2.3097848892211914, 2.310002088546753, 2.3099071979522705], "accuracy": [0.09153348207473755, 0.09615638852119446, 0.09417514503002167, 0.09047681838274002, 0.09417514503002167, 0.08915598690509796], "val_loss": [2.3091351985931396, 2.3091235160827637, 2.3091111183166504, 2.309098958969116, 2.309086561203003, 2.309075117111206], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]