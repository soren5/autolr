[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [3, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 5, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 6, 4, 5, 6, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [1, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.33399999141693115, "mapping_values": [1, 4, 2, 2, 1, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.53419828414917, 2.3128316402435303, 2.304863214492798, 2.3008759021759033, 2.187328338623047, 2.3170297145843506, 2.304408550262451, 2.3037426471710205, 2.3029861450195312, 2.303039073944092], "accuracy": [0.20036983489990234, 0.09998679161071777, 0.10130762308835983, 0.1146479994058609, 0.1958790123462677, 0.1434420794248581, 0.10315678268671036, 0.09694888442754745, 0.09589222073554993, 0.09774138033390045], "val_loss": [2.319350004196167, 2.305882215499878, 2.302623748779297, 2.2902562618255615, 2.1228814125061035, 2.3041391372680664, 2.302868604660034, 2.3026819229125977, 2.3026788234710693, 2.3025803565979004], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.1523333340883255, 0.20866666734218597, 0.34066668152809143, 0.1003333330154419, 0.1003333330154419, 0.0963333323597908, 0.1003333330154419, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 8, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 6, 1, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [1, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.20028571784496307, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 0, 24, 13, 11, 3, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.negative(grad), grad), tf.math.subtract(alpha, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.multiply(sigma, grad), sigma), tf.math.subtract(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3819918632507324, 2.2604997158050537, 2.333711862564087, 2.3037514686584473, 2.3033406734466553, 2.3029944896698, 2.3030507564544678, 2.3025128841400146, 2.2930471897125244, 2.221580743789673, 2.309208393096924, 2.304222822189331, 2.3032572269439697, 2.3040592670440674], "accuracy": [0.1872936189174652, 0.19204860925674438, 0.0956280529499054, 0.09826971590518951, 0.09721305221319199, 0.0940430611371994, 0.10236428678035736, 0.10130762308835983, 0.1356491893529892, 0.16682076454162598, 0.09866596013307571, 0.09800554811954498, 0.10038304328918457, 0.09338264167308807], "val_loss": [2.2965774536132812, 2.4854300022125244, 2.303854465484619, 2.3029680252075195, 2.302809000015259, 2.3025965690612793, 2.3024771213531494, 2.301961660385132, 2.124507188796997, 2.312857151031494, 2.3030471801757812, 2.30320405960083, 2.3030033111572266, 2.302736759185791], "val_accuracy": [0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10566666722297668, 0.0989999994635582, 0.15966667234897614, 0.09966666996479034, 0.19200000166893005, 0.10366666316986084, 0.10199999809265137, 0.09933333098888397, 0.09433333575725555, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 0, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 4, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 6, 4, 5, 6, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [1, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.1582857072353363, "mapping_values": [1, 5, 3, 2, 1, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(alpha), tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.pow(grad, tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3137872219085693, 2.2535319328308105, 2.3059909343719482, 2.3111629486083984, 2.306675910949707, 2.303621292114258], "accuracy": [0.20842689275741577, 0.17553824186325073, 0.10302469879388809, 0.14330999553203583, 0.09760929644107819, 0.09496764093637466], "val_loss": [2.3004956245422363, 2.305432081222534, 2.299259662628174, 2.3092479705810547, 2.303575038909912, 2.3027191162109375], "val_accuracy": [0.1536666601896286, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 9, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 59, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 8, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 9, 5, 0, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 0, 4, 5, 6, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [1, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 5, 3, 2, 0, 7, 5, 2, 2, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(alpha))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 6, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 8, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 7, 5, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 0, 1, 5, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [61, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 7, 5, 2, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(grad), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [19201.83984375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18531237542629242, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [124001408.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07433333247900009, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 33, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 2, 1, 8, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [7, 6, 6, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 7, 0, 9, 5, 0, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [7, 6, 7, 6, 0, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 5, 3, 2, 1, 18, 12, 6, 3, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.negative(tf.math.multiply(grad, grad)))), tf.math.multiply(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [17.371524810791016, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2024831622838974, 0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [9392.8623046875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [3, 3, 6, 7, 2, 8, 8, 4, 3, 8, 2, 9, 4, 9, 2, 2, 6, 2, 6, 0, 5, 6, 9], [6, 0, 0, 5, 0, 3, 4, 1, 4, 1, 0, 4, 0, 6, 1, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 13, 31, 37, 46, 92, 44], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 1, 24, 15, 9, 5, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma)), grad), alpha), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [849.4964599609375, NaN, 2.3459105491638184, 2.315070867538452, 2.305777072906494, 2.3034250736236572, 2.303071975708008, 2.303074836730957, 2.302950382232666], "accuracy": [0.1935015171766281, 0.09959053993225098, 0.09932637959718704, 0.09694888442754745, 0.09457138925790787, 0.09787346422672272, 0.09655263274908066, 0.09391097724437714, 0.09998679161071777], "val_loss": [134127.96875, 2.373936891555786, 2.324801206588745, 2.3084371089935303, 2.3037660121917725, 2.3030834197998047, 2.302722692489624, 2.3027052879333496, 2.30269718170166], "val_accuracy": [0.0860000029206276, 0.0963333323597908, 0.0963333323597908, 0.10300000011920929, 0.10300000011920929, 0.09533333033323288, 0.10300000011920929, 0.10300000011920929, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 3, 6, 7, 8, 9, 1, 1, 3, 3, 2, 1, 4, 2, 2, 2, 5, 3, 6, 0, 5, 1, 2, 2, 8, 0], [4, 6, 1, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.09057142585515976, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 45, 26, 19, 4, 4, 3, 1, 1], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.subtract(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.add(sigma, tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(sigma, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.subtract(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(grad))))))))), tf.math.negative(beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309588670730591, 2.308912515640259, 2.3109171390533447, 2.3097851276397705, 2.3101818561553955, 2.3095970153808594], "accuracy": [0.09047681838274002, 0.09642054885625839, 0.08849557489156723, 0.0940430611371994, 0.08889182657003403, 0.09430722147226334], "val_loss": [2.3089921474456787, 2.3089797496795654, 2.3089654445648193, 2.3089520931243896, 2.3089406490325928, 2.3089280128479004], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 6, 8, 8, 9, 1, 4, 3, 3, 4, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 6, 1, 3, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [7, 96, 98, 85, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.08914285898208618, "mapping_values": [1, 3, 1, 2, 2, 1, 0, 1, 0, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3090150356292725, 2.3092634677886963, 2.31002140045166, 2.3103089332580566, 2.3083648681640625, 2.308741331100464], "accuracy": [0.09457138925790787, 0.09179764986038208, 0.09734513610601425, 0.09285431355237961, 0.09628847241401672, 0.09259014576673508], "val_loss": [2.3087501525878906, 2.30873966217041, 2.3087267875671387, 2.3087146282196045, 2.3087050914764404, 2.3086938858032227], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]