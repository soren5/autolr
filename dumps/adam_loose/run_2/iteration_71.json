[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [4, 4, 8, 4, 1, 7, 8, 8, 9, 1, 4, 5, 2, 4, 0, 6, 3, 1, 5, 0, 2, 9, 8], [0, 0, 0, 1, 2, 1, 0, 1, 2, 0, 2, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41, 36], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 1, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.32600000500679016, "mapping_values": [1, 3, 1, 2, 2, 1, 0, 1, 1, 18, 9, 9, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.divide_no_nan(sigma, sigma), beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.38335919380188, 2.2620675563812256, 2.3496813774108887, 2.276048421859741, 2.2455573081970215, 2.335381031036377, 2.3063509464263916], "accuracy": [0.17659489810466766, 0.13419628143310547, 0.12851670384407043, 0.16074495017528534, 0.15572579205036163, 0.16021661460399628, 0.09708096832036972], "val_loss": [2.3031373023986816, 2.302493095397949, 2.301663398742676, 1.9311790466308594, 2.3036351203918457, 2.3112621307373047, 2.3033974170684814], "val_accuracy": [0.10066666454076767, 0.32866665720939636, 0.17466667294502258, 0.2696666717529297, 0.10066666454076767, 0.09600000083446503, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 4, 2, 4, 9, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 3, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2971428632736206, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5012574195861816, 2.299253225326538, 2.2595064640045166, 2.817622661590576, 2.3083202838897705, 2.3039700984954834, 2.302999973297119, 2.3033688068389893], "accuracy": [0.18940694630146027, 0.12561088800430298, 0.1538766324520111, 0.14093250036239624, 0.09998679161071777, 0.09747721254825592, 0.09813763201236725, 0.08955223858356476], "val_loss": [2.3034846782684326, 2.256134033203125, 2.1733896732330322, 2.3146679401397705, 2.3052115440368652, 2.303375005722046, 2.302823543548584, 2.302795648574829], "val_accuracy": [0.10000000149011612, 0.15299999713897705, 0.28466665744781494, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 3, 2, 4, 2, 7, 1, 8, 1, 1, 4, 5, 2, 4, 1, 4, 4, 2, 5, 0, 2, 9, 8, 6, 2, 8, 6], [0, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 3, 0, 1, 2, 2, 2, 2, 3, 2], [47, 7, 22, 4, 55, 87, 41, 23], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [3, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 1, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2971428632736206, "mapping_values": [1, 47, 27, 20, 8, 7, 4, 3, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(grad, tf.math.sqrt(tf.math.subtract(tf.math.subtract(alpha, tf.math.pow(tf.math.square(tf.math.add(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.pow(tf.math.pow(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.square(alpha))), tf.math.negative(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(tf.math.sqrt(grad), grad))))))))))), tf.math.divide_no_nan(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3925724029541016, 2.292633295059204, 2.218881845474243, 2.410273313522339, 2.269716739654541, 2.3060243129730225, 2.303169012069702, 2.3029909133911133], "accuracy": [0.19442610442638397, 0.1294412910938263, 0.17276449501514435, 0.1990489959716797, 0.15229164063930511, 0.1010434553027153, 0.10157178342342377, 0.0944393053650856], "val_loss": [2.3066413402557373, 2.0152251720428467, 2.1875548362731934, 2.308712959289551, 2.3098015785217285, 2.3032584190368652, 2.3024966716766357, 2.301251173019409], "val_accuracy": [0.09833333641290665, 0.19366666674613953, 0.29733332991600037, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 4, 4, 4, 2, 7, 1, 8, 9, 1, 4, 5, 2, 4, 0, 6, 3, 1, 5, 9, 2, 9, 8], [1, 0, 1, 1, 3, 2, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 63, 4, 55, 87, 41, 23], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [18, 56, 78, 15, 8], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 1, 5, 4, 9, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2248571366071701, "mapping_values": [1, 33, 20, 13, 7, 1, 0, 1, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.subtract(alpha, grad)), grad), tf.math.pow(tf.math.square(tf.math.add(tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3388917446136475, 2.178030252456665, 2.3009555339813232, 2.3174407482147217, 2.3016397953033447, 2.308076858520508, 2.304431676864624, 2.300278902053833, 2.6364777088165283, 2.3050901889801025], "accuracy": [0.20684190094470978, 0.16972659528255463, 0.1146479994058609, 0.16510368883609772, 0.11557257920503616, 0.15189538896083832, 0.09959053993225098, 0.11028926074504852, 0.13591335713863373, 0.1006472036242485], "val_loss": [2.1342790126800537, 2.304814338684082, 2.285411834716797, 2.308483123779297, 2.248044490814209, 2.3045051097869873, 2.3025569915771484, 2.22514009475708, 2.3071446418762207, 2.303417682647705], "val_accuracy": [0.16033333539962769, 0.09933333098888397, 0.21699999272823334, 0.09933333098888397, 0.2226666659116745, 0.09933333098888397, 0.09933333098888397, 0.1340000033378601, 0.09700000286102295, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 3, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [89, 56, 78, 41, 8], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 6, 3, 4, 1, 3, 4, 4, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.19599999487400055, "mapping_values": [1, 1, 0, 1, 0, 1, 1, 0, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.456908941268921, 3.156388282775879, 2.3080523014068604, 2.3040404319763184, 2.303131103515625, 2.3030145168304443], "accuracy": [0.18835029006004333, 0.1442345827817917, 0.09959053993225098, 0.09747721254825592, 0.09694888442754745, 0.09694888442754745], "val_loss": [2.2945308685302734, 2.3108408451080322, 2.304015874862671, 2.302760124206543, 2.3024826049804688, 2.3026058673858643], "val_accuracy": [0.19166666269302368, 0.10199999809265137, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [16, 80, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [6, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.18771427869796753, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4778056144714355, 2.744948148727417, 2.3296167850494385, 2.305293560028076, 2.3034586906433105, 2.303161382675171], "accuracy": [0.20803064107894897, 0.136045441031456, 0.09826971590518951, 0.09919429570436478, 0.08889182657003403, 0.09985470771789551], "val_loss": [4.031957149505615, 2.393718957901001, 2.3061885833740234, 2.303236722946167, 2.3027889728546143, 2.3026981353759766], "val_accuracy": [0.18566666543483734, 0.10166666656732559, 0.10133333504199982, 0.10166666656732559, 0.10133333504199982, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 3, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 2, 0, 2, 6, 0, 0, 2, 4, 1, 2, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [3, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.15485714375972748, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.358717203140259, 2.307281494140625, 2.357124090194702, 2.304593086242676, 2.3034207820892334, 2.303020715713501], "accuracy": [0.19323734939098358, 0.16563200950622559, 0.1582353711128235, 0.09655263274908066, 0.10130762308835983, 0.09721305221319199], "val_loss": [2.2894935607910156, 2.2929604053497314, 2.3049662113189697, 2.3031373023986816, 2.3026180267333984, 2.302583694458008], "val_accuracy": [0.1433333307504654, 0.12066666781902313, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 3, 0, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.908207416534424, 2.3070483207702637, 2.304349184036255, 2.303413152694702, 2.3029251098632812, 2.3028526306152344], "accuracy": [0.18372738361358643, 0.10434553027153015, 0.0952318087220192, 0.09549596905708313, 0.09893012791872025, 0.10196803510189056], "val_loss": [2.3105626106262207, 2.3040120601654053, 2.302929162979126, 2.3029420375823975, 2.3025131225585938, 2.301959753036499], "val_accuracy": [0.10300000011920929, 0.09733333438634872, 0.09566666930913925, 0.09566666930913925, 0.10066666454076767, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [89, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 5, 2, 4, 2, 5, 2, 2, 4, 4, 6, 9, 5, 2, 5], [5, 1, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 1, 1, 0, 1, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309370517730713, 2.3105154037475586, 2.309152364730835, 2.310035467147827, 2.3103578090667725, 2.3104071617126465], "accuracy": [0.0944393053650856, 0.09470347315073013, 0.09377889335155487, 0.09747721254825592, 0.09325055778026581, 0.09008057415485382], "val_loss": [2.3085756301879883, 2.3085625171661377, 2.308549165725708, 2.3085358142852783, 2.3085243701934814, 2.308511257171631], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 3, 1, 3, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [32, 56, 78, 41, 8], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [3, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.0908571407198906, "mapping_values": [1, 14, 8, 6, 2, 1, 0, 1, 0, 18, 9, 9, 1, 4, 3, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.sqrt(grad))), grad)), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.divide_no_nan(sigma, sigma), beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.310828924179077, 2.3109562397003174, 2.30964994430542, 2.3101894855499268, 2.3104238510131836, 2.3096115589141846], "accuracy": [0.08902391046285629, 0.08915598690509796, 0.0936468094587326, 0.09206181764602661, 0.09457138925790787, 0.09615638852119446], "val_loss": [2.309140920639038, 2.3091275691986084, 2.3091156482696533, 2.3091018199920654, 2.309088945388794, 2.3090767860412598], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]