[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [70, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 7, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.6128571629524231, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4171206951141357, 2.2741448879241943, 2.279736042022705, 2.3798165321350098, 2.249729871749878, 2.055309295654297, 2.1660525798797607, 1.8585076332092285, 1.6676486730575562, 1.7763609886169434, 1.6992095708847046, 1.8907315731048584, 1.3654829263687134, 1.5206427574157715, 1.459877371788025, 2.395049571990967, 2.6246659755706787, 2.311126470565796, 2.3076727390289307], "accuracy": [0.1798969805240631, 0.19455818831920624, 0.1398758441209793, 0.15797120332717896, 0.22295601665973663, 0.28860124945640564, 0.23523972928524017, 0.3913617730140686, 0.4636111557483673, 0.3971734344959259, 0.45185577869415283, 0.35147273540496826, 0.5267468094825745, 0.4842160940170288, 0.4884427487850189, 0.16061286628246307, 0.1578391194343567, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3033578395843506, 2.3040223121643066, 1.8539535999298096, 2.6022789478302, 1.9082242250442505, 1.9912220239639282, 1.758113145828247, 1.2652026414871216, 1.8714778423309326, 1.3653658628463745, 2.1457810401916504, 1.1987148523330688, 1.2373589277267456, 1.145980954170227, 1.6476608514785767, 1.5747244358062744, 2.3088037967681885, 2.3049755096435547, 2.3063976764678955], "val_accuracy": [0.09933333098888397, 0.10100000351667404, 0.27533334493637085, 0.15700000524520874, 0.3973333239555359, 0.4399999976158142, 0.46299999952316284, 0.5636666417121887, 0.38333332538604736, 0.5820000171661377, 0.3160000145435333, 0.5886666774749756, 0.5896666646003723, 0.6156666874885559, 0.4426666796207428, 0.47200000286102295, 0.09533333033323288, 0.09933333098888397, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 2, 9, 2, 3, 2, 3, 5, 0, 2, 2, 0, 0, 2, 9, 4, 0, 8, 8, 4, 6, 0, 6, 6, 0, 3, 3, 6, 4, 8, 5, 1, 5, 2, 2, 1, 3, 7, 4, 9], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4, 5, 1, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.4057142734527588, "mapping_values": [1, 1, 0, 1, 0, 27, 17, 10, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.add(beta, beta), grad), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(grad, grad), tf.math.negative(alpha)))), tf.math.negative(grad)))), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2671632766723633, 2.320861577987671, 3.891098737716675, 2.307783365249634, 2.292416572570801, 2.287904739379883, 2.3046553134918213, 2.303990602493286, 2.3044116497039795, 2.3035640716552734], "accuracy": [0.19799233973026276, 0.19336943328380585, 0.11332716792821884, 0.09866596013307571, 0.12653546035289764, 0.13789460062980652, 0.1002509593963623, 0.09800554811954498, 0.09192973375320435, 0.0956280529499054], "val_loss": [2.2822587490081787, 2.272001028060913, 2.3119397163391113, 2.3030147552490234, 2.199173927307129, 2.3046605587005615, 2.3031516075134277, 2.3029556274414062, 2.3028159141540527, 2.3027288913726807], "val_accuracy": [0.19733333587646484, 0.1509999930858612, 0.09966666996479034, 0.09966666996479034, 0.4143333435058594, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 2, 9, 3, 3, 1, 3, 5, 0, 2, 2, 2, 0, 2, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4, 0, 1, 4], [87, 86, 7, 41, 8], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.27628570795059204, "mapping_values": [1, 3, 1, 2, 1, 30, 18, 12, 3, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), beta), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.subtract(beta, grad), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), grad)), grad)))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.352290391921997, 2.9093081951141357, 2.3069777488708496, 2.3046464920043945, 2.3030519485473633, 2.302426338195801], "accuracy": [0.19112402200698853, 0.1154404953122139, 0.09681680053472519, 0.09642054885625839, 0.09813763201236725, 0.10117553919553757], "val_loss": [2.1253490447998047, 2.310748815536499, 2.303703784942627, 2.303511142730713, 2.302445888519287, 2.299377679824829], "val_accuracy": [0.2840000092983246, 0.10133333504199982, 0.10100000351667404, 0.09833333641290665, 0.10266666859388351, 0.1366666704416275]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [9, 2, 4, 9, 2, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 1, 6, 0, 6, 6, 0, 3, 3, 6, 4, 8, 5, 1, 5, 2, 2, 1, 3, 7, 4, 9], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 2, 4, 2, 1, 4], [87, 17, 30, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [0, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.23342856764793396, "mapping_values": [1, 3, 1, 2, 1, 1, 1, 0, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2997019290924072, 3.0885109901428223, 2.30564284324646, 2.2320094108581543, 2.305100917816162, 2.3041083812713623], "accuracy": [0.18742570281028748, 0.1686699241399765, 0.10579843819141388, 0.19033153355121613, 0.09642054885625839, 0.09642054885625839], "val_loss": [2.280963659286499, 2.3132665157318115, 2.2849156856536865, 2.307619571685791, 2.303436517715454, 2.302753210067749], "val_accuracy": [0.23066666722297668, 0.0976666659116745, 0.10433333367109299, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [72, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 5, 9, 1, 3, 1, 3, 5, 0, 2, 6, 2, 0, 2, 8, 3, 0, 6, 8, 6, 4, 5, 9], [2, 2, 2, 3, 3, 5, 3, 3, 1, 3, 3, 4, 5, 1, 4], [87, 86, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.22285714745521545, "mapping_values": [1, 3, 1, 2, 1, 37, 24, 13, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, beta), tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.negative(grad)), tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(grad), grad)), alpha)), grad))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(grad)), grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4228463172912598, 2.3404147624969482, 2.291667938232422, 2.288191318511963, 2.6242213249206543, 2.3080947399139404, 2.304161548614502], "accuracy": [0.19719983637332916, 0.13829085230827332, 0.20314356684684753, 0.13829085230827332, 0.11728965491056442, 0.09879804402589798, 0.09589222073554993], "val_loss": [2.2956831455230713, 2.1038625240325928, 2.310706615447998, 2.8700506687164307, 2.3133420944213867, 2.3047657012939453, 2.3031952381134033], "val_accuracy": [0.1586666703224182, 0.22333332896232605, 0.14366666972637177, 0.156333327293396, 0.09733333438634872, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [92, 80, 63, 4, 55, 87, 41], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [35, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 6, 4, 4, 1, 1, 3, 2, 1, 3, 0], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.19571428000926971, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3705530166625977, 2.266885757446289, 2.303556203842163, 2.327637195587158, 2.30344295501709, 2.3031535148620605], "accuracy": [0.19442610442638397, 0.1508387327194214, 0.09272222965955734, 0.10777968913316727, 0.09589222073554993, 0.0944393053650856], "val_loss": [2.246950626373291, 2.3041491508483887, 2.3020355701446533, 2.3028175830841064, 2.3025898933410645, 2.3024919033050537], "val_accuracy": [0.19699999690055847, 0.0989999994635582, 0.09866666793823242, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 9, 1, 3, 1, 3, 5, 0, 2, 6, 2, 0, 2, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [35, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 1, 7, 2, 4, 1, 5, 4, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 2, 4, 4, 3, 3, 2, 1, 3, 0], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.17599999904632568, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 18, 9, 9, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(grad, beta), tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.square(grad), tf.math.pow(tf.math.divide_no_nan(sigma, sigma), beta))), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.4066362380981445, 2.3044145107269287, 2.29889178276062, 2.2793736457824707, 2.3037359714508057, 2.3030247688293457, 2.3028934001922607, 2.302269697189331], "accuracy": [0.2020869106054306, 0.1006472036242485, 0.1258750557899475, 0.15810328722000122, 0.09800554811954498, 0.09747721254825592, 0.10077928751707077, 0.10487385839223862], "val_loss": [2.3058531284332275, 2.3018321990966797, 2.2624294757843018, 2.3032145500183105, 2.3026959896087646, 2.302431583404541, 2.302211284637451, 2.301473379135132], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1706666648387909, 0.10266666859388351, 0.10333333164453506, 0.10066666454076767, 0.0989999994635582, 0.11166666448116302]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 34, 17, 4, 55, 87, 41], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 2, 1, 9, 1, 1, 2, 3, 5, 5, 1, 6, 2, 0, 1, 4, 4, 0, 6, 0, 6, 2, 1, 2, 3, 7, 2, 5, 4, 2, 9, 0, 1, 2, 5, 8, 3, 5], [1, 0, 2, 3, 3, 5, 1, 3, 3, 3, 0, 3, 0, 5, 2, 5, 3, 2, 2, 3, 3, 2, 0], [70, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 7, 4, 3, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 2, 9, 1, 3, 1, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 4, 6, 0, 6, 6, 0, 3, 3, 6, 4, 8, 5, 1, 0, 2, 2, 1, 3, 7, 4, 9, 8, 6, 5, 1, 1, 2, 4, 6, 8, 0], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 0, 5, 1, 4, 5, 5, 3, 0, 4, 3, 5, 1, 0, 1, 4, 1, 2, 3, 2, 0, 1], [87, 86, 78, 47, 8, 40, 37, 9, 69], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [82, 25, 67], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 0, 83, 51, 32, 9, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.multiply(tf.math.subtract(beta, grad), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.negative(grad)), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), grad))), grad))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(grad), tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.add(tf.math.add(grad, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), grad)))))), tf.math.multiply(grad, alpha)))), tf.math.add(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, beta), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309382200241089, 2.3088414669036865, 2.3110716342926025, 2.311122179031372, 2.3097712993621826, 2.310426950454712], "accuracy": [0.09985470771789551, 0.09298639744520187, 0.08889182657003403, 0.09021265059709549, 0.09140139818191528, 0.08955223858356476], "val_loss": [2.309115409851074, 2.3091015815734863, 2.309086322784424, 2.3090720176696777, 2.3090596199035645, 2.3090453147888184], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41, 36], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [1, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [89, 56, 78, 41, 8], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [7, 0, 1, 2, 4, 9, 1, 2, 6, 4, 4, 6, 1, 5, 2, 5], [5, 4, 1, 4, 1, 3, 4, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3093254566192627, 2.310979127883911, 2.311143159866333, 2.309612274169922, 2.310215711593628, 2.3106675148010254], "accuracy": [0.09021265059709549, 0.08598599582910538, 0.08796724677085876, 0.09813763201236725, 0.09087307006120682, 0.08994849026203156], "val_loss": [2.308176040649414, 2.308163642883301, 2.308151960372925, 2.3081412315368652, 2.308128833770752, 2.308117151260376], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]