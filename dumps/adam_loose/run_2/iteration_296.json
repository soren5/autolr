[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.3351428508758545, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.673170566558838, 2.2515060901641846, 2.1520731449127197, 2.295681953430176, 2.323307752609253, 2.2638509273529053, 2.308072805404663], "accuracy": [0.22520142793655396, 0.17131158709526062, 0.3023378551006317, 0.12508255243301392, 0.12798838317394257, 0.1694624274969101, 0.14317791163921356], "val_loss": [2.259953498840332, 1.780806303024292, 2.3074517250061035, 2.4027814865112305, 2.235865831375122, 2.2554802894592285, 2.306478977203369], "val_accuracy": [0.22499999403953552, 0.34066668152809143, 0.0976666659116745, 0.2213333398103714, 0.17133332788944244, 0.09566666930913925, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 6, 6, 2, 3, 7, 0, 3, 7], [2, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [92, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 2, 0, 6, 5, 2, 2, 3, 6, 9, 6, 2, 5, 2, 9, 4, 0, 6, 8, 0, 6], [2, 0, 3, 3, 0, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.31942856311798096, "mapping_values": [1, 41, 25, 16, 8, 26, 16, 10, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha)), alpha))))), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.417607307434082, 2.2381279468536377, 2.481029987335205, 2.3051819801330566, 2.303558826446533, 2.3026375770568848], "accuracy": [0.20763438940048218, 0.1830669641494751, 0.17038699984550476, 0.1010434553027153, 0.09655263274908066, 0.10038304328918457], "val_loss": [2.0051753520965576, 2.279139518737793, 2.3065133094787598, 2.3032336235046387, 2.3027052879333496, 2.30271053314209], "val_accuracy": [0.3253333270549774, 0.10066666454076767, 0.10166666656732559, 0.09799999743700027, 0.10633333027362823, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [7, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [6, 3, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.22371429204940796, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2926411628723145, 2.1682920455932617, 2.298351287841797, 2.542389392852783, 2.3450915813446045, 2.30485463142395, 2.303589105606079, 2.3033151626586914, 2.3028552532196045], "accuracy": [0.20816272497177124, 0.22361643612384796, 0.11068551242351532, 0.12640337646007538, 0.1632545292377472, 0.09893012791872025, 0.09708096832036972, 0.09853387624025345, 0.09391097724437714], "val_loss": [2.0651931762695312, 2.3131675720214844, 3.640791416168213, 2.2672457695007324, 2.306898355484009, 2.3036093711853027, 2.3030545711517334, 2.3027262687683105, 2.3025918006896973], "val_accuracy": [0.16699999570846558, 0.10100000351667404, 0.12533333897590637, 0.22333332896232605, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.22171428799629211, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4343974590301514, 2.1303651332855225, 2.3744418621063232, 2.304811477661133, 2.3031675815582275, 2.3030734062194824, 2.30375337600708], "accuracy": [0.2016906589269638, 0.20697398483753204, 0.15968827903270721, 0.09760929644107819, 0.10315678268671036, 0.09760929644107819, 0.09126931428909302], "val_loss": [2.2166311740875244, 2.226573944091797, 2.3073670864105225, 2.302978992462158, 2.3027400970458984, 2.3025777339935303, 2.302586317062378], "val_accuracy": [0.20000000298023224, 0.22100000083446503, 0.09733333438634872, 0.10066666454076767, 0.10199999809265137, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 1, 9, 4, 8, 8, 1, 4, 0, 1, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7, 2, 9, 4], [2, 0, 2, 1, 1, 0, 2, 2, 2, 1, 0, 0, 0, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [76, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 1, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.19542856514453888, "mapping_values": [1, 39, 24, 15, 7, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.subtract(tf.math.pow(tf.math.negative(alpha), alpha), tf.math.subtract(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(grad, alpha))), tf.math.add(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)), alpha)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.445826053619385, 2.233393430709839, 3.042362689971924, 2.3053088188171387, 2.3034510612487793, 2.3030810356140137, 2.302973985671997], "accuracy": [0.18650111556053162, 0.1492537260055542, 0.10870426893234253, 0.09470347315073013, 0.09747721254825592, 0.0944393053650856, 0.09708096832036972], "val_loss": [2.3102669715881348, 7.160011291503906, 2.3062551021575928, 2.303252696990967, 2.30263614654541, 2.3025338649749756, 2.3025505542755127], "val_accuracy": [0.10199999809265137, 0.1913333386182785, 0.09966666996479034, 0.09966666996479034, 0.10233332961797714, 0.10266666859388351, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 8, 0, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 6, 4, 0, 6, 2, 1, 7, 4, 2, 6, 2, 1, 5], [2, 0, 2, 1, 1, 0, 2, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [39, 95, 25, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 0, 3, 3, 0, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 1, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.19371429085731506, "mapping_values": [1, 47, 29, 18, 6, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.multiply(grad, alpha)), tf.math.pow(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha)), alpha)))), alpha), tf.math.subtract(grad, grad)))))))))))), tf.math.square(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3535656929016113, 2.277864933013916, 2.779491424560547, 2.3102221488952637, 2.3043625354766846, 2.3052282333374023, 2.303061008453369], "accuracy": [0.201294407248497, 0.17831197381019592, 0.15532954037189484, 0.10091137140989304, 0.10011887550354004, 0.09760929644107819, 0.09985470771789551], "val_loss": [2.3046348094940186, 2.322176456451416, 2.316084146499634, 2.305556058883667, 2.307953357696533, 2.302896499633789, 2.3026628494262695], "val_accuracy": [0.09700000286102295, 0.19466666877269745, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 0, 6, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 9, 6, 0, 6, 2, 1, 2, 5, 2, 5, 5], [2, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 1, 1, 0, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [39, 80, 52, 32, 86, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 27, 12, 7, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.multiply(grad, alpha)), tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.add(grad, tf.math.square(tf.math.square(grad))))), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [17268.041015625, 1.0815294434172307e+30, 2.321535348892212, 2.3070409297943115, 2.3037333488464355, 2.3031182289123535, 2.303011655807495], "accuracy": [0.1938977688550949, 0.09826971590518951, 0.09998679161071777, 0.09972262382507324, 0.09509972482919693, 0.09351472556591034, 0.09840179979801178], "val_loss": [4828797337600.0, 2.333266258239746, 2.3095223903656006, 2.303945302963257, 2.302804946899414, 2.302628755569458, 2.3026435375213623], "val_accuracy": [0.09833333641290665, 0.10133333504199982, 0.09700000286102295, 0.10133333504199982, 0.09966666996479034, 0.10133333504199982, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [5, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033268451690674, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025856018066406], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [67, 90, 80, 41, 8, 43, 2], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [2, 4, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.310823678970337, 2.3112266063690186, 2.3088741302490234, 2.3101532459259033, 2.311923027038574, 2.3104171752929688], "accuracy": [0.09047681838274002, 0.09496764093637466, 0.09232597798109055, 0.09272222965955734, 0.09060890227556229, 0.0886276587843895], "val_loss": [2.3085403442382812, 2.308527946472168, 2.3085169792175293, 2.3085052967071533, 2.3084909915924072, 2.3084795475006104], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08666666597127914, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [9, 5, 6, 8, 9, 9, 4, 2, 8, 0, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7, 3, 3, 8], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 2, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [76, 52, 80, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 0, 6, 9, 2, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [81, 76, 9, 41, 8, 43, 2], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 4, 7, 2, 1, 5, 8, 4, 0, 4, 9, 4, 2, 6, 2, 0, 2, 5, 0, 5], [1, 1, 6, 0, 4, 3, 6, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [87, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 14, 8, 6, 1, 4, 3, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3103487491607666, 2.310199737548828, 2.310138463973999, 2.3094475269317627, 2.310394525527954, 2.31062650680542], "accuracy": [0.09245806187391281, 0.09192973375320435, 0.09298639744520187, 0.0936468094587326, 0.08545766770839691, 0.08981640636920929], "val_loss": [2.3087270259857178, 2.3087151050567627, 2.308703899383545, 2.3086941242218018, 2.3086819648742676, 2.308670997619629], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09433333575725555]}}]