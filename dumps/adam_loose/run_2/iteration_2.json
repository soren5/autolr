[{"genotype": [[0], [1, 1, 0, 1, 0], [3, 4, 9], [1, 2], [33], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 6, 8, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [0, 0, 3, 4, 1, 5, 1, 4], [94, 4, 73], [0, 0, 1, 1], [6, 5], [1, 7], [], [1], [], [4], []], "fitness": -0.3285714387893677, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(alpha), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2341697216033936, 2.671421766281128, 2.382371187210083, 2.2957122325897217, 2.3055286407470703, 2.3036611080169678, 2.3030314445495605, 2.3032450675964355], "accuracy": [0.2226918488740921, 0.1592920422554016, 0.14951789379119873, 0.14489498734474182, 0.09853387624025345, 0.10077928751707077, 0.09919429570436478, 0.09787346422672272], "val_loss": [2.4829964637756348, 2.3037586212158203, 1.8576464653015137, 2.3070223331451416, 2.303450584411621, 2.302812337875366, 2.3026716709136963, 2.3028736114501953], "val_accuracy": [0.14766666293144226, 0.0820000022649765, 0.3333333432674408, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 1], [8, 4, 8], [3], [], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 6, 8, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [0, 0, 3, 4, 1, 5, 1, 4], [92, 52, 36, 15], [1], [], [3], [], [1], [], [4], []], "fitness": -0.30714285373687744, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.363269567489624, 2.3098905086517334, 2.3062498569488525, 2.212472677230835, 2.307157278060913, 2.3042469024658203, 2.3030078411102295, 2.2971601486206055], "accuracy": [0.20023775100708008, 0.16642451286315918, 0.10976093262434006, 0.20723815262317657, 0.10117553919553757, 0.09853387624025345, 0.09879804402589798, 0.12323339283466339], "val_loss": [2.3070645332336426, 2.3228812217712402, 2.221508026123047, 2.3106250762939453, 2.3037121295928955, 2.30206036567688, 2.3004071712493896, 2.2759337425231934], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.31433331966400146, 0.10333333164453506, 0.09866666793823242, 0.11133333295583725, 0.12866666913032532, 0.20200000703334808]}}, {"genotype": [[0], [0, 1], [9], [1, 2], [0], [1], [5], [2], [94], [1], [], [1], [], [1], [], [6], []], "fitness": -0.19057142734527588, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.403682231903076, 2.2766613960266113, 2.8398563861846924, 2.3065025806427, 2.3010339736938477, 2.205113410949707, 2.3126800060272217, 2.303785562515259, 2.303251266479492, 2.303353786468506], "accuracy": [0.18716153502464294, 0.13512085378170013, 0.11940298229455948, 0.10130762308835983, 0.10949676483869553, 0.1846519559621811, 0.10540219396352768, 0.09998679161071777, 0.09800554811954498, 0.09932637959718704], "val_loss": [2.3044934272766113, 3.5141096115112305, 2.310245990753174, 2.303523540496826, 2.29276442527771, 2.322456121444702, 2.302893877029419, 2.3027520179748535, 2.3029849529266357, 2.3025126457214355], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.09533333033323288, 0.09533333033323288, 0.19233334064483643, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.09533333033323288, 0.10366666316986084]}}, {"genotype": [[0], [1], [], [2], [], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [7, 6, 8, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0, 2, 9], [0, 3, 0, 3, 1, 0, 0, 5], [92, 52, 36, 15, 87, 74], [1, 1, 1], [7], [4, 0], [0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 1, 3, 1, 9, 7], [6, 3, 5, 6, 6], [10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 22, 16, 6, 6, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(tf.math.subtract(tf.math.square(grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, sigma)", "other_info": {"loss": [142581104640.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3552041946779022e+23, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 2, 9, 8, 4, 6, 1, 4, 9, 0], [0, 1, 0, 2, 3, 2], [98, 94, 27, 54], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 5, 4, 9, 4], [3, 1, 5, 5, 3], [43, 47], [1, 1, 0], [0], [1], [99], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 6, 4, 8, 1, 8, 8, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [50, 9, 50, 37, 43, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 5, 3, 2, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3041532039642334, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1], [8, 4, 8, 7, 9], [1, 2], [33], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [9], [0, 3, 0, 3, 1, 0, 0, 5], [92, 52, 36, 15, 32, 43], [0, 1], [9], [4], [96], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 9, 1, 0, 0, 4, 1], [6, 2, 1, 6], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.pow(alpha, tf.math.sqrt(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1017969792.0, 19696134144.0, 90624204800.0, 249935282176.0, 542313775104.0, 1002704470016.0], "accuracy": [0.1018359512090683, 0.09866596013307571, 0.10368511080741882, 0.1002509593963623, 0.10368511080741882, 0.1014397069811821], "val_loss": [4779976192.0, 38234951680.0, 129038508032.0, 305864572928.0, 597368373248.0, 1032253538304.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 8, 6, 5, 6], [3, 3, 0, 3], [], [0, 0, 0, 1, 1, 1], [3, 6, 0, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [1, 5, 5], [92, 52, 36, 15], [1], [], [1], [], [0, 0, 0, 1, 1, 0, 0], [6, 0, 4, 5, 9], [6, 0], [19, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(alpha), grad), grad), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.pow(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 5, 7, 1, 8, 3, 4], [3, 2, 0, 3, 1, 2, 2], [27, 38], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [9], [3, 0, 3, 4, 1, 5, 1, 4], [16, 16], [1], [], [5], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 4, 3, 0, 3, 7, 6, 1, 5, 5, 8, 2, 6, 0, 5, 9, 3, 8, 9, 2, 9, 2], [6, 1, 0, 6, 4, 3, 2, 6, 1, 7, 2, 0, 2, 6], [16, 73, 47, 99, 61, 1, 5, 6, 99, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0, 20, 11, 9, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.square(grad), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.pow(grad, tf.math.multiply(alpha, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(sigma, beta)), grad))), tf.math.square(tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1], [], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 4, 0, 8, 8, 9], [0, 2, 0, 1], [18, 16], [0, 1], [0], [4], [], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [8, 3, 3, 2, 8, 3, 4, 1, 9, 5, 0, 9], [6, 4, 0, 4, 0, 4, 4, 7, 3, 0], [16, 87, 84, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 9, 7, 2, 2, 2, 1, 1, 0, 16, 10, 6, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.multiply(grad, tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1], [0, 2, 3, 0, 3], [3], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [7, 6, 0, 9, 1, 7, 9, 1, 5, 9, 5, 6, 1, 0], [0, 3, 1, 3, 1, 0, 0, 5], [92, 52, 36, 15, 32, 43], [1, 0], [0], [4], [86], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 1, 0, 0, 4, 1], [6, 2, 1, 6], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 2, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]