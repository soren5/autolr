[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 2, 3, 4, 2, 1, 3, 2, 0, 2, 2, 2, 0, 8, 5, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 3, 0, 1, 2], [70, 38, 78, 41, 8], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 6, 9, 5, 2, 5], [2, 0, 0, 4, 1, 3, 3, 2, 1, 1, 0, 3], [39, 40], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.37857142090797424, "mapping_values": [1, 1, 0, 1, 0, 20, 10, 10, 1, 5, 2, 3, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), beta), beta), tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(grad, tf.math.subtract(alpha, tf.math.multiply(tf.math.add(grad, grad), tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3239283561706543, 2.265855550765991, 2.3044888973236084, 2.267975091934204, 2.286142110824585, 2.302032232284546, 2.2523789405822754, 2.3032443523406982, 2.303359031677246, 2.2973155975341797, 2.3610758781433105], "accuracy": [0.20076608657836914, 0.19310526549816132, 0.09919429570436478, 0.16800950467586517, 0.14132875204086304, 0.12653546035289764, 0.1562541276216507, 0.10302469879388809, 0.09602430462837219, 0.12534672021865845, 0.19918107986450195], "val_loss": [2.3030283451080322, 2.307305097579956, 2.2960422039031982, 2.3054709434509277, 2.299647092819214, 1.8074513673782349, 2.3028640747070312, 2.3023769855499268, 2.3014743328094482, 2.199793577194214, 2.307337999343872], "val_accuracy": [0.17933332920074463, 0.10400000214576721, 0.23366667330265045, 0.10100000351667404, 0.0976666659116745, 0.37833333015441895, 0.09966666996479034, 0.10400000214576721, 0.10066666454076767, 0.3256666660308838, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 4, 0, 2, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [6, 5, 0, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 7, 4, 4, 1, 1, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.3711428642272949, "mapping_values": [1, 5, 3, 2, 0, 7, 4, 3, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.negative(grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(grad, beta), tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.367105722427368, 2.2853715419769287, 2.347195625305176, 2.300687789916992, 2.272329330444336, 2.303741931915283, 2.3028080463409424], "accuracy": [0.1912561058998108, 0.13221503794193268, 0.12217672914266586, 0.10910051316022873, 0.13630960881710052, 0.09628847241401672, 0.10368511080741882], "val_loss": [2.305476665496826, 2.1476008892059326, 2.303600311279297, 2.3018314838409424, 2.3038408756256104, 2.302802801132202, 2.302600860595703], "val_accuracy": [0.09600000083446503, 0.3556666672229767, 0.09966666996479034, 0.09966666996479034, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 2, 3, 3, 3, 1, 3, 5, 0, 2, 2, 2, 0, 8, 8, 3, 0, 6, 8, 6, 4], [2, 2, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 2, 9, 2, 2, 5], [4, 0, 0, 4, 1, 4, 3, 2, 1, 1, 0, 3, 1, 7], [39, 41, 17, 45], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.2751428484916687, "mapping_values": [1, 1, 0, 1, 1, 5, 2, 3, 0, 30, 16, 14, 4, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.multiply(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad), tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), beta), tf.math.add(alpha, tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), sigma))), alpha), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4899494647979736, 2.280911684036255, 2.3139822483062744, 2.303611993789673, 2.3034021854400635, 2.3031747341156006, 2.3027710914611816], "accuracy": [0.21238937973976135, 0.11940298229455948, 0.11808215826749802, 0.09708096832036972, 0.09840179979801178, 0.09879804402589798, 0.10342095047235489], "val_loss": [2.304483652114868, 2.0222535133361816, 2.3036210536956787, 2.3025412559509277, 2.3024117946624756, 2.302471399307251, 2.3023078441619873], "val_accuracy": [0.0949999988079071, 0.26866665482521057, 0.10199999809265137, 0.10233332961797714, 0.10199999809265137, 0.10233332961797714, 0.13733333349227905]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 2, 3, 3, 3, 1, 3, 5, 0, 2, 2, 2, 0, 8, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 9, 9, 2, 2, 5], [2, 0, 0, 4, 1, 3, 4, 2, 1, 1, 0, 3], [39, 41, 17, 45], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.24942857027053833, "mapping_values": [1, 1, 0, 1, 0, 11, 5, 6, 1, 7, 3, 4, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), tf.math.multiply(tf.math.multiply(grad, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5371813774108887, 2.206310510635376, 2.4687860012054443, 2.298858880996704, 2.335642099380493, 2.314338207244873], "accuracy": [0.2056531459093094, 0.18174614012241364, 0.1002509593963623, 0.12732796370983124, 0.21040813624858856, 0.09668471664190292], "val_loss": [2.1271772384643555, 3.403820037841797, 2.3031773567199707, 2.254624366760254, 2.325923442840576, 2.3064684867858887], "val_accuracy": [0.25200000405311584, 0.10000000149011612, 0.10166666656732559, 0.16300000250339508, 0.09866666793823242, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [8, 0, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 2, 3, 3, 6, 3, 2, 0, 5, 8, 2, 5, 2, 8, 3, 0, 6, 8, 6, 4], [0, 5, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 6, 9, 5, 2, 5], [4, 4, 2, 4, 1, 4, 3, 2, 1, 3, 0, 5, 1], [39, 40], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 0, 7, 3, 4, 1, 29, 16, 13, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad), beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, tf.math.add(tf.math.add(grad, beta), tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.pow(alpha, grad), sigma), tf.math.add(beta, tf.math.divide_no_nan(alpha, sigma)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [11.561715126037598, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18650111556053162, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10227.37109375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06800000369548798, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 2, 3, 3, 3, 1, 3, 5, 0, 2, 2, 2, 0, 8, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 6, 2, 2, 2, 4, 2, 6, 4, 2, 9, 9, 2, 2, 5], [4, 0, 2, 4, 1, 3, 3, 2, 1, 1, 0, 3], [39, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 1, 23, 13, 10, 3, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta), grad), alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), sigma), sigma), beta))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [9.976099967956543, 7.18401575088501, 2.308048725128174, 2.303969383239746, 2.3031036853790283, 2.303011417388916, 2.3029990196228027, 2.3029720783233643, 2.302983045578003, 2.3030998706817627], "accuracy": [0.1748778223991394, 0.1022322028875351, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.09747721254825592, 0.09272222965955734, 0.09760929644107819, 0.09126931428909302, 0.0940430611371994], "val_loss": [6.255337238311768, 2.311138868331909, 2.304553747177124, 2.3029465675354004, 2.3026833534240723, 2.302659034729004, 2.302584171295166, 2.30259370803833, 2.3026857376098633, 2.3026838302612305], "val_accuracy": [0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.09799999743700027, 0.09966666996479034, 0.09700000286102295, 0.09966666996479034, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [8, 0, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [4, 5, 3, 2, 3, 3, 6, 3, 2, 0, 5, 8, 2, 5, 2, 8, 3, 0, 6, 8, 6, 4], [0, 5, 2, 5, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 6, 9, 5, 2, 5], [4, 4, 2, 4, 1, 4, 3, 2, 1, 3, 0, 5], [39, 40], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 0, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.492713689804077, 2.3584625720977783, 2.303548812866211, 2.303201675415039, 2.3031129837036133, 2.3028829097747803, 2.30300235748291], "accuracy": [0.2246730923652649, 0.09906221181154251, 0.10289261490106583, 0.09351472556591034, 0.09853387624025345, 0.10196803510189056, 0.0940430611371994], "val_loss": [2.625596761703491, 2.303257942199707, 2.3027408123016357, 2.302642345428467, 2.3025007247924805, 2.3024659156799316, 2.3025898933410645], "val_accuracy": [0.09833333641290665, 0.10366666316986084, 0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10000000149011612, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 0, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 6, 3, 4, 3, 3, 6, 5, 2, 0, 5, 8, 2, 5, 2, 8, 3, 0, 9, 8, 6, 4], [0, 5, 2, 3, 3, 5, 1, 3, 3, 3, 0, 3, 3, 1, 4], [70, 8, 78, 41, 8], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 2, 2, 4, 2, 6, 4, 2, 6, 9, 5, 2, 5], [4, 4, 2, 4, 1, 4, 3, 2, 1, 3, 0, 5], [39, 40], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 29, 17, 12, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad), beta), tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.square(grad)))), alpha)), tf.math.sqrt(grad)), tf.math.add(tf.math.square(grad), tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [8, 0, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [67, 80, 17, 4, 55, 87, 41, 36], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [0, 5, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [31, 56, 9, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9, 7, 2, 2, 2, 4, 2, 6, 4, 2, 6, 9, 5, 2, 5], [4, 4, 7, 4, 1, 4, 3, 2, 1, 3, 0, 5], [39, 40], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.335031747817993, 2.408458709716797, 2.303518772125244, 2.3030741214752197, 2.3029634952545166, 2.302948474884033], "accuracy": [0.22586184740066528, 0.09972262382507324, 0.09840179979801178, 0.09774138033390045, 0.09298639744520187, 0.09338264167308807], "val_loss": [2.9294369220733643, 2.3043437004089355, 2.303161382675171, 2.3028290271759033, 2.302724838256836, 2.302591562271118], "val_accuracy": [0.10133333504199982, 0.0963333323597908, 0.10066666454076767, 0.0963333323597908, 0.1003333330154419, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 1, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 7, 22, 4, 55, 56, 41, 23], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 2, 3, 3, 3, 1, 3, 5, 0, 2, 2, 2, 0, 8, 8, 3, 0, 6, 8, 6, 4], [0, 2, 2, 3, 3, 5, 3, 3, 3, 3, 0, 3, 3, 1, 4], [70, 56, 78, 41, 8], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 7, 3, 5, 2, 4, 2, 6, 4, 2, 9, 9, 2, 2, 5], [4, 0, 0, 1, 1, 3, 3, 2, 1, 1, 0, 3], [39, 41, 17, 45], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 1, 22, 12, 10, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.pow(alpha, sigma)), sigma), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), alpha))), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [317716.5, 1.0715937354530004e+28, 2.318051815032959, 2.306461811065674, 2.3037846088409424, 2.303335428237915], "accuracy": [0.20340773463249207, 0.10606260597705841, 0.09998679161071777, 0.09681680053472519, 0.09074098616838455, 0.09972262382507324], "val_loss": [3910420.5, 2.328711986541748, 2.309300422668457, 2.304297924041748, 2.3030624389648438, 2.302720069885254], "val_accuracy": [0.10199999809265137, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]