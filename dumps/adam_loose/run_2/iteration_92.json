[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 9, 6, 4, 2, 2, 8, 2, 8, 9, 2, 9, 9, 2, 2, 5], [1, 1, 2, 4, 1, 4, 4, 2, 1, 3, 0], [39, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3634285628795624, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4136526584625244, 2.2485594749450684, 2.2885982990264893, 2.286742687225342, 2.3037521839141846, 2.3032853603363037, 2.3028879165649414, 2.303070545196533], "accuracy": [0.2176727056503296, 0.1666886806488037, 0.13815876841545105, 0.1530841439962387, 0.09774138033390045, 0.0936468094587326, 0.09972262382507324, 0.09549596905708313], "val_loss": [2.3311667442321777, 2.303354263305664, 1.9296478033065796, 2.303091049194336, 2.3025097846984863, 2.302676200866699, 2.3027524948120117, 2.3027050495147705], "val_accuracy": [0.09466666728258133, 0.10000000149011612, 0.3540000021457672, 0.10166666656732559, 0.10199999809265137, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 4, 2, 4, 2, 1, 2, 8, 1, 5, 6, 9, 2, 2, 5], [1, 1, 4, 3, 1, 3, 0, 2, 2, 3, 0], [17, 90, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.29600000381469727, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 23, 13, 10, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.subtract(sigma, tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, sigma)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta))), beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3398168087005615, 2.3253235816955566, 2.2668895721435547, 2.30806040763855, 2.3036670684814453, 2.3030898571014404], "accuracy": [0.20961563289165497, 0.14040417969226837, 0.20657773315906525, 0.0952318087220192, 0.09325055778026581, 0.09840179979801178], "val_loss": [2.115636110305786, 2.297743558883667, 2.3151087760925293, 2.3033056259155273, 2.3027913570404053, 2.302569627761841], "val_accuracy": [0.28566667437553406, 0.16566666960716248, 0.10100000351667404, 0.10433333367109299, 0.10433333367109299, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 6, 2, 2, 2, 1, 2, 8, 1, 2, 9, 9, 2, 2, 5], [1, 1, 1, 1, 1, 4, 4, 2, 4, 3, 0], [64, 36, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2671428620815277, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 22, 13, 9, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha), tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, grad)), grad)), tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), beta)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3472325801849365, 2.3057219982147217, 2.301267385482788, 2.2511396408081055, 2.288825273513794, 2.3041646480560303, 2.303295612335205, 2.3032734394073486], "accuracy": [0.2094835489988327, 0.09906221181154251, 0.11081759631633759, 0.1814819723367691, 0.1414608359336853, 0.09893012791872025, 0.09959053993225098, 0.09642054885625839], "val_loss": [2.3077642917633057, 2.302987575531006, 2.2829952239990234, 2.2864413261413574, 2.3047616481781006, 2.3030059337615967, 2.302725076675415, 2.302489995956421], "val_accuracy": [0.10066666454076767, 0.11933333426713943, 0.27433332800865173, 0.10166666656732559, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.12533333897590637]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 9, 2, 4, 2, 1, 4, 8, 1, 1, 3, 9, 2, 2, 5], [1, 1, 4, 1, 1, 4, 4, 2, 1, 3, 0], [17, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.23771429061889648, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.346001625061035, 2.161439895629883, 2.2970492839813232, 2.3102049827575684, 2.3038899898529053, 2.2955973148345947], "accuracy": [0.21159687638282776, 0.21754062175750732, 0.17051908373832703, 0.10210011899471283, 0.10170386731624603, 0.12019548565149307], "val_loss": [2.2257888317108154, 2.3019216060638428, 2.3219244480133057, 2.3038101196289062, 2.3026442527770996, 2.1284263134002686], "val_accuracy": [0.23666666448116302, 0.0989999994635582, 0.09933333098888397, 0.10100000351667404, 0.10133333504199982, 0.18666666746139526]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9, 6, 2, 2, 2, 4, 2, 6, 4, 2, 9, 9, 2, 2, 5], [1, 1, 4, 4, 1, 1, 4, 2, 1, 3, 0], [39, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2231428623199463, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4309215545654297, 2.489508867263794, 2.307650566101074, 2.292525291442871, 2.444154977798462, 2.2734479904174805], "accuracy": [0.18742570281028748, 0.16814158856868744, 0.09998679161071777, 0.13036586344242096, 0.15532954037189484, 0.13921542465686798], "val_loss": [2.271712303161621, 2.315542697906494, 2.3023905754089355, 2.1286988258361816, 2.304401159286499, 2.3104095458984375], "val_accuracy": [0.22366666793823242, 0.10000000149011612, 0.10000000149011612, 0.1599999964237213, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 5, 2, 2, 2, 1, 2, 8, 1, 2, 9, 8, 2, 2, 5], [1, 1, 4, 4, 1, 4, 4, 2, 1, 3, 0], [17, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.11028571426868439, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 22, 13, 9, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, grad)), grad)), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [22.452144622802734, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1950865089893341, 0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [90.45523071289062, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11133333295583725, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 2, 0, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 4, 2, 2, 2, 5, 2, 8, 1, 2, 9, 9, 2, 2, 5], [1, 1, 4, 4, 1, 4, 4, 2, 1, 3, 0], [17, 56, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10485713928937912, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 23, 14, 9, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(grad, alpha), grad)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3548.015380859375, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19178444147109985, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15.628870010375977, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 2, 2, 2, 1, 2, 8, 1, 2, 9, 9, 2, 2, 5], [2, 1, 4, 4, 1, 1, 4, 2, 1, 3, 0], [39, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.426740884780884, 2.3050622940063477, 2.303356885910034, 2.303037166595459, 2.3029913902282715, 2.3029823303222656, 2.303077459335327, 2.3029284477233887, 2.3029494285583496, 2.3029913902282715, 2.30295991897583, 2.303056001663208, 2.302917003631592, 2.303109645843506], "accuracy": [0.18980319797992706, 0.09589222073554993, 0.09576013684272766, 0.09549596905708313, 0.09813763201236725, 0.09721305221319199, 0.09272222965955734, 0.09377889335155487, 0.09760929644107819, 0.09787346422672272, 0.09945846349000931, 0.09589222073554993, 0.09959053993225098, 0.09219389408826828], "val_loss": [2.306671142578125, 2.3032848834991455, 2.3026976585388184, 2.3026514053344727, 2.302633047103882, 2.3025412559509277, 2.3025131225585938, 2.302574634552002, 2.3025472164154053, 2.3026647567749023, 2.302720308303833, 2.302748441696167, 2.302755117416382, 2.3028311729431152], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.0976666659116745, 0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.10333333164453506, 0.0976666659116745, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [2, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 9, 6, 4, 2, 2, 8, 2, 8, 9, 2, 9, 9, 2, 2, 5], [6, 1, 4, 4, 1, 4, 4, 2, 4, 3, 0], [39, 41, 17, 31], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4608.873046875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18901069462299347, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7970907.5, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08866667002439499, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [3, 1, 1, 1, 3, 3, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [50, 80, 17, 4, 55, 87, 41, 36], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8], [3, 2, 2, 3, 3, 5, 1, 3, 3, 3, 0, 4], [81, 56, 9, 41, 8, 43, 2], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 2, 4, 2, 6, 2, 1, 2, 8, 0, 2, 9, 9, 2, 2, 5, 4, 2, 8, 3, 8, 1, 2, 8, 2, 5, 9, 5, 9, 7, 5, 4], [1, 4, 4, 2, 1, 4, 4, 2, 1, 3, 0, 1, 3, 6, 1, 5], [39, 49, 17, 31, 57], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 48, 32, 16, 5, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.math.sqrt(tf.math.negative(alpha)), grad)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, beta), tf.math.square(tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), sigma), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(tf.math.square(tf.math.pow(grad, alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3115761280059814, 2.3096954822540283, 2.3113412857055664, 2.3098556995391846, 2.309373140335083, 2.3106276988983154, 2.30922269821167], "accuracy": [0.09140139818191528, 0.09232597798109055, 0.08360850811004639, 0.09391097724437714, 0.09285431355237961, 0.09285431355237961, 0.09496764093637466], "val_loss": [2.308002233505249, 2.307990312576294, 2.3079774379730225, 2.30796480178833, 2.3079538345336914, 2.307943105697632, 2.3079335689544678], "val_accuracy": [0.09366666525602341, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09366666525602341, 0.09366666525602341]}}]