[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 0, 1, 3, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [47, 80, 63, 4, 55, 87, 41], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [7, 0, 6, 5, 1, 1, 4, 1, 3, 2, 5, 6, 0, 5, 8, 9, 1, 6], [0, 2, 3, 1, 2, 3, 1, 3, 3, 3, 3, 4], [11, 56, 78, 41, 8], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3788571357727051, "mapping_values": [1, 14, 8, 6, 3, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(grad, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.square(beta), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2934763431549072, 2.22884464263916, 2.3038625717163086, 2.3034679889678955, 2.2890090942382812, 2.3560755252838135, 2.3044066429138184, 2.3030734062194824, 2.303020715713501, 2.303161144256592], "accuracy": [0.2008981704711914, 0.20618148148059845, 0.10896842926740646, 0.1954827606678009, 0.13842293620109558, 0.15110288560390472, 0.09985470771789551, 0.09576013684272766, 0.09826971590518951, 0.09351472556591034], "val_loss": [2.2824878692626953, 2.307339906692505, 2.2906179428100586, 2.3049707412719727, 1.8823935985565186, 2.30496883392334, 2.3029747009277344, 2.3027048110961914, 2.3025927543640137, 2.3026654720306396], "val_accuracy": [0.2616666555404663, 0.09933333098888397, 0.19633333384990692, 0.09933333098888397, 0.3726666569709778, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 8, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 1, 2, 3, 0, 2, 1, 1, 0, 2, 1, 2, 1, 2, 2], [37, 75, 17, 4, 55, 87, 41], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 1, 1, 5, 5, 5, 2, 3, 0, 9, 5, 6, 0, 0, 2, 9, 1, 0, 6, 8, 0, 9, 1], [2, 0, 1, 3, 2, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3311428427696228, "mapping_values": [1, 1, 0, 1, 0, 15, 10, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(beta, tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.square(tf.math.add(tf.math.multiply(alpha, tf.math.negative(grad)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2949798107147217, 2.2753942012786865, 2.2463643550872803, 2.3614413738250732, 2.2977333068847656, 2.2328455448150635, 2.3038830757141113, 2.3039119243621826, 2.303321123123169, 2.30320405960083], "accuracy": [0.21357811987400055, 0.1426495909690857, 0.18702945113182068, 0.18821820616722107, 0.11676132678985596, 0.14159291982650757, 0.10487385839223862, 0.09906221181154251, 0.09549596905708313, 0.09628847241401672], "val_loss": [2.2038629055023193, 2.2673909664154053, 2.296459674835205, 2.3103063106536865, 1.8235080242156982, 2.303551435470581, 2.3025519847869873, 2.302560806274414, 2.302690029144287, 2.3027634620666504], "val_accuracy": [0.11699999868869781, 0.13333334028720856, 0.09700000286102295, 0.09700000286102295, 0.3166666626930237, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 1, 1, 3, 2, 2, 1, 1, 0, 1, 0, 3, 0], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 6, 1, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [1, 3, 1, 3, 2, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [4, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.313142865896225, "mapping_values": [1, 31, 17, 14, 5, 7, 3, 4, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.add(alpha, grad))), grad), tf.math.subtract(grad, tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, grad), alpha), grad), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.45351243019104, 2.2877416610717773, 2.277129650115967, 2.369633674621582, 2.2537264823913574, 2.305285692214966], "accuracy": [0.19693566858768463, 0.12098798155784607, 0.1578391194343567, 0.1142517477273941, 0.17395325005054474, 0.09509972482919693], "val_loss": [1.984851598739624, 2.302105188369751, 2.4945273399353027, 2.3017783164978027, 2.307716131210327, 2.301774501800537], "val_accuracy": [0.3233333230018616, 0.12933333218097687, 0.20466665923595428, 0.10100000351667404, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 2, 1, 1, 3, 0, 2, 1, 1, 0], [38, 80, 17, 4, 55, 87, 41], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [7, 6, 1, 4, 1, 5, 2, 3, 3, 0, 5, 6, 3, 0, 2, 5, 1, 0, 6, 8, 0, 9, 1], [1, 2, 1, 3, 5, 5, 1, 3, 3, 2, 1, 4], [11, 56, 78, 15, 8], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [2, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.23971427977085114, "mapping_values": [1, 3, 1, 2, 0, 28, 16, 12, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.negative(grad)), alpha)))), grad)), grad), beta))), tf.math.add(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3729422092437744, 4.9803080558776855, 2.265483856201172, 2.2968814373016357, 2.302253484725952, 2.31418514251709, 2.3719372749328613, 2.3041675090789795, 2.304130792617798, 2.3028676509857178], "accuracy": [0.19970941543579102, 0.1666886806488037, 0.17804782092571259, 0.1348566859960556, 0.10976093262434006, 0.14291374385356903, 0.16497160494327545, 0.10130762308835983, 0.09998679161071777, 0.10210011899471283], "val_loss": [2.3222339153289795, 2.3097825050354004, 2.290823459625244, 2.3034098148345947, 2.2754693031311035, 2.296537160873413, 2.3029978275299072, 2.302764654159546, 2.302861213684082, 2.302623748779297], "val_accuracy": [0.10766666382551193, 0.09166666865348816, 0.10400000214576721, 0.10199999809265137, 0.24166665971279144, 0.12133333086967468, 0.10133333504199982, 0.10133333504199982, 0.09666666388511658, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 2, 8, 0, 1, 6, 7, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [70, 80, 17, 4, 55, 87, 41], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [0, 2, 3, 3, 3, 5, 1, 3, 3, 3, 0, 4], [11, 56, 78, 41, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.22628571093082428, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5855960845947266, 2.397510528564453, 2.3869898319244385, 2.383596420288086, 2.306351900100708, 2.3031809329986572, 2.3035714626312256], "accuracy": [0.23140932619571686, 0.11161009222269058, 0.14819706976413727, 0.15889579057693481, 0.09840179979801178, 0.10077928751707077, 0.09060890227556229], "val_loss": [2.83434796333313, 2.228714942932129, 2.303687572479248, 2.308213949203491, 2.3034286499023438, 2.302487373352051, 2.3026223182678223], "val_accuracy": [0.09866666793823242, 0.22566667199134827, 0.09933333098888397, 0.09700000286102295, 0.09700000286102295, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [7, 2, 8, 0, 1, 6, 7, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [0, 2, 3, 3, 5, 5, 1, 3, 3, 3], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.18371428549289703, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.355731248855591, 2.233766794204712, 2.301299810409546, 2.3663828372955322, 2.305638074874878, 2.3034138679504395], "accuracy": [0.20301149785518646, 0.1674811840057373, 0.12838461995124817, 0.15136705338954926, 0.10011887550354004, 0.09206181764602661], "val_loss": [2.1343119144439697, 2.3072454929351807, 2.2625572681427, 2.307629346847534, 2.3036651611328125, 2.3028321266174316], "val_accuracy": [0.18433333933353424, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.09566666930913925, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 2, 8, 0, 1, 6, 7, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 80, 17, 4, 55, 87, 41], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 0, 1, 8, 0, 1, 3, 2, 5, 3, 0, 0, 8, 9, 1, 6], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2, 0], [11, 56, 78, 41, 8], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [5, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.18199999630451202, "mapping_values": [1, 1, 1, 0, 1, 23, 15, 8, 0, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(beta, tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))), alpha))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3323822021484375, 2.586461305618286, 2.3837826251983643, 2.305213451385498, 2.303572416305542, 2.303149938583374], "accuracy": [0.19416193664073944, 0.16061286628246307, 0.15255580842494965, 0.09998679161071777, 0.09906221181154251, 0.09576013684272766], "val_loss": [2.283487319946289, 2.294792890548706, 2.307133674621582, 2.303769111633301, 2.302900791168213, 2.30265212059021], "val_accuracy": [0.18033333122730255, 0.12333333492279053, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 2, 8, 0, 1, 6, 7, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [22, 72, 17, 4, 55, 87, 41], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 3, 1, 3, 2, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 4, 2, 2, 5, 2, 6, 2, 4, 6, 9, 5, 2, 5], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.13257142901420593, "mapping_values": [1, 1, 1, 0, 1, 6, 4, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [177.82102966308594, 2.334477663040161, 2.30837345123291, 2.3042678833007812, 2.3032846450805664, 2.303100109100342, 2.303194046020508, 2.3031296730041504, 2.303044557571411, 2.3030645847320557, 2.3029606342315674, 2.302896022796631, 2.3028182983398438, 2.3029422760009766, 2.3029298782348633, 2.3029632568359375, 2.302992105484009, 2.302783489227295, 2.3024184703826904, 2.3018548488616943, 2.3025498390197754, 2.3029794692993164, 2.3031721115112305, 2.3029463291168213], "accuracy": [0.19957733154296875, 0.09998679161071777, 0.09351472556591034, 0.09430722147226334, 0.09642054885625839, 0.09655263274908066, 0.09245806187391281, 0.08955223858356476, 0.09377889335155487, 0.09192973375320435, 0.1006472036242485, 0.09972262382507324, 0.09536388516426086, 0.1022322028875351, 0.1010434553027153, 0.09470347315073013, 0.09351472556591034, 0.09787346422672272, 0.10315678268671036, 0.10870426893234253, 0.10645885765552521, 0.0956280529499054, 0.09391097724437714, 0.09655263274908066], "val_loss": [2.3710551261901855, 2.3110227584838867, 2.304067611694336, 2.3028862476348877, 2.302582025527954, 2.302588701248169, 2.3026506900787354, 2.302544355392456, 2.30263614654541, 2.3025684356689453, 2.3025166988372803, 2.3024911880493164, 2.3025519847869873, 2.302433967590332, 2.302426815032959, 2.302305221557617, 2.3023297786712646, 2.302067995071411, 2.3013806343078613, 2.299943447113037, 2.30277156829834, 2.3026230335235596, 2.302663803100586, 2.3025808334350586], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10166666656732559, 0.10233332961797714, 0.09799999743700027, 0.10066666454076767, 0.09833333641290665, 0.09933333098888397, 0.10300000011920929, 0.10166666656732559, 0.1003333330154419, 0.10166666656732559, 0.0989999994635582, 0.11733333021402359, 0.11366666853427887, 0.10700000077486038, 0.13099999725818634, 0.1223333328962326, 0.10266666859388351, 0.09833333641290665, 0.0989999994635582, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 2, 8, 0, 1, 6, 7, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [99, 80, 17, 4, 55, 87, 41], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 2, 8, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 5, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 4, 2, 2, 5, 2, 6, 2, 4, 6, 9, 5, 2, 5], [4, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303051233291626, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [4, 4, 1, 4, 2, 1, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2, 1, 6, 8, 6, 7, 1, 1, 6, 6, 5, 0, 2, 0, 4, 5], [2, 0, 1, 1, 3, 0, 2, 1, 1, 0, 2, 1, 3, 3, 0, 3, 0, 0, 0, 2, 1, 1, 1, 0, 2, 1, 0, 0], [38, 80, 91, 4, 55, 87, 41, 17, 61, 36], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 6, 5, 9, 1, 3, 2, 3, 5, 0, 2, 6, 0, 0, 2, 9, 1, 0, 6, 8], [2, 2, 4, 0, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09057142585515976, "mapping_values": [1, 64, 36, 28, 10, 6, 3, 3, 0, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, alpha)), grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.square(alpha), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(alpha, grad))), grad), tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))))), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(alpha, alpha), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.negative(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), alpha), tf.math.pow(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.square(beta), beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3097128868103027, 2.3093857765197754, 2.310065984725952, 2.3103716373443604, 2.310234546661377, 2.3092377185821533], "accuracy": [0.09047681838274002, 0.09126931428909302, 0.09325055778026581, 0.09034473448991776, 0.09034473448991776, 0.09509972482919693], "val_loss": [2.3089518547058105, 2.3089406490325928, 2.3089287281036377, 2.3089160919189453, 2.3089048862457275, 2.308893918991089], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]