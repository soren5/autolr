[{"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 4, 8, 4, 4, 9, 4, 2, 1, 4, 6, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 2, 1, 0, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 7, 0, 4, 0, 3, 1, 2, 1, 3, 0], [46, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.4000000059604645, "mapping_values": [1, 6, 3, 3, 1, 6, 4, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, beta)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2798280715942383, 2.268615245819092, 2.2436411380767822, 2.152432441711426, 2.3488352298736572, 2.3042898178100586, 2.302212715148926, 2.624915838241577, 2.3084843158721924], "accuracy": [0.21635186672210693, 0.1798969805240631, 0.18002906441688538, 0.22255976498126984, 0.13498876988887787, 0.09734513610601425, 0.1014397069811821, 0.14093250036239624, 0.09840179979801178], "val_loss": [2.1018221378326416, 2.309148073196411, 2.302751302719116, 2.18949294090271, 2.3031020164489746, 2.302431583404541, 2.2944564819335938, 2.3177852630615234, 2.304227828979492], "val_accuracy": [0.2549999952316284, 0.09733333438634872, 0.14266666769981384, 0.3956666588783264, 0.10466666519641876, 0.10000000149011612, 0.12066666781902313, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 4, 2, 3, 6, 0, 5, 6, 0, 0, 8, 9, 1, 0, 6], [2, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 8, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 7, 1, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3805714249610901, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 22, 12, 10, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.multiply(sigma, tf.math.sqrt(grad))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.negative(alpha)), beta), alpha)), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.270498514175415, 2.53102445602417, 2.510542154312134, 2.285951614379883, 2.2911579608917236, 2.161217212677002], "accuracy": [0.20697398483753204, 0.22005018591880798, 0.16021661460399628, 0.11676132678985596, 0.1216483935713768, 0.20353981852531433], "val_loss": [2.2775163650512695, 2.3887152671813965, 2.3149185180664062, 2.307594060897827, 2.0641865730285645, 2.3040554523468018], "val_accuracy": [0.38366666436195374, 0.18000000715255737, 0.10066666454076767, 0.10100000351667404, 0.33033332228660583, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 3, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [1, 2, 0, 0, 2, 2, 1, 2, 0, 0, 0], [32, 24, 94, 4, 69, 87, 21], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 4, 2, 1, 7, 4, 8, 3, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 5, 1, 3, 3, 3, 3, 2, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 8, 3, 3, 2, 5, 3, 9, 6, 1], [3, 7, 3, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3628571331501007, "mapping_values": [1, 4, 2, 2, 0, 23, 16, 7, 2, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.add(grad, tf.math.pow(tf.math.sqrt(alpha), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), grad)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(sigma, grad), tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5069692134857178, 2.3209404945373535, 2.2313621044158936, 2.304654598236084, 2.30325984954834, 2.302762746810913, 2.2944841384887695, 2.267838478088379, 2.304311990737915, 2.3032891750335693, 2.3020873069763184, 2.2849514484405518], "accuracy": [0.204860657453537, 0.13274335861206055, 0.22784309089183807, 0.0936468094587326, 0.1014397069811821, 0.10196803510189056, 0.1228371411561966, 0.13261127471923828, 0.09840179979801178, 0.09430722147226334, 0.10434553027153015, 0.1372341811656952], "val_loss": [2.38240647315979, 2.230339527130127, 2.3055925369262695, 2.303313732147217, 2.302744150161743, 2.3020873069763184, 2.1071717739105225, 2.303896188735962, 2.3027400970458984, 2.302244186401367, 2.297825574874878, 2.3037173748016357], "val_accuracy": [0.09666666388511658, 0.19733333587646484, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.3473333418369293, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.17499999701976776, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 6, 4, 4, 0, 6, 2, 5, 6, 4, 3, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1, 0, 0, 3, 0, 1, 1], [7, 93, 43, 4, 42, 35, 88, 45], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 1, 6, 1, 0, 7], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [16, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.33085715770721436, "mapping_values": [1, 31, 16, 15, 7, 1, 0, 1, 0, 18, 11, 7, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(alpha, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), alpha)))))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(grad)), tf.math.pow(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(grad, grad), sigma)), alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.391223669052124, 2.3030107021331787, 2.303422451019287, 2.302227258682251, 2.2751901149749756, 2.2104716300964355, 2.3111777305603027, 2.3043413162231445, 2.303161144256592, 2.3032214641571045], "accuracy": [0.18319904804229736, 0.1394795924425125, 0.10276053100824356, 0.10170386731624603, 0.16549994051456451, 0.1850482076406479, 0.09245806187391281, 0.0948355570435524, 0.0940430611371994, 0.10342095047235489], "val_loss": [2.2688398361206055, 2.3029048442840576, 2.302300453186035, 2.3002190589904785, 1.761361837387085, 2.315566301345825, 2.3035309314727783, 2.302631139755249, 2.3025999069213867, 2.3026347160339355], "val_accuracy": [0.21833333373069763, 0.10100000351667404, 0.10366666316986084, 0.09566666930913925, 0.33266666531562805, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 4, 2, 0, 8, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 3, 2, 0, 3, 1, 3], [32, 28, 94, 4, 69, 87, 21], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [7, 0, 6, 2, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 3, 3, 1, 0, 2, 1, 3, 4, 5], [90, 56, 78, 15, 8], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 3, 3, 2, 5, 3, 9, 6, 1], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.27314284443855286, "mapping_values": [1, 3, 1, 2, 2, 3, 1, 2, 0, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(grad, grad), sigma))), alpha))), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.365187168121338, 2.2460384368896484, 2.2848377227783203, 2.472947359085083, 2.3047070503234863, 2.3032031059265137, 2.303023099899292], "accuracy": [0.2078985571861267, 0.19931316375732422, 0.18821820616722107, 0.1500462293624878, 0.09893012791872025, 0.09959053993225098, 0.09589222073554993], "val_loss": [2.2983031272888184, 2.4826042652130127, 3.1401243209838867, 2.3057093620300293, 2.3030359745025635, 2.302675485610962, 2.3028647899627686], "val_accuracy": [0.1860000044107437, 0.2770000100135803, 0.23333333432674408, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 3, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0], [32, 24, 94, 4, 69, 87, 21], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 2, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 2, 9, 1, 0, 6], [3, 5, 1, 3, 0, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 4, 8, 3, 4, 2, 6, 3, 1, 7, 2, 0], [3, 4, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 24, 15, 9, 2, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(alpha)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.sqrt(sigma), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.700656890869141, 2.331502676010132, 2.3043932914733887, 2.303222417831421, 2.3031492233276367, 2.303088665008545, 2.303083896636963, 2.30300235748291, 2.30297589302063, 2.3029391765594482, 2.30305814743042], "accuracy": [0.19138818979263306, 0.10289261490106583, 0.0952318087220192, 0.0956280529499054, 0.09721305221319199, 0.09391097724437714, 0.09694888442754745, 0.09681680053472519, 0.09509972482919693, 0.09060890227556229, 0.09655263274908066], "val_loss": [2.4839978218078613, 2.304814338684082, 2.303196907043457, 2.302936315536499, 2.3029186725616455, 2.302689552307129, 2.302596092224121, 2.302614212036133, 2.302678108215332, 2.302687406539917, 2.3026158809661865], "val_accuracy": [0.09600000083446503, 0.10000000149011612, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.10100000351667404, 0.1003333330154419, 0.10066666454076767, 0.10000000149011612, 0.0976666659116745, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 6, 5, 1, 7, 2, 2, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 0, 1, 1, 1, 3, 1, 4, 2], [11, 56, 78, 15, 8], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 4, 8, 3, 4, 2, 6, 3, 1, 7, 2, 0], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 24, 17, 7, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.pow(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(tf.math.square(alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [110533.6953125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18438778817653656, 0.10302469879388809, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5268609536.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [4, 3, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0], [38, 23, 94, 4, 55, 87, 21], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 0, 6, 2, 1, 7, 4, 1, 5, 9, 5, 6, 5, 0, 8, 9, 1, 9, 1], [3, 5, 1, 3, 3, 3, 1, 3, 2], [52, 56, 78, 15, 8], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 1, 3, 2, 5, 3, 9, 6, 1, 4, 9, 0, 3], [3, 4, 3, 4, 7, 3, 1, 2, 1, 3], [39, 25, 59], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09542857110500336, "mapping_values": [1, 23, 13, 10, 6, 25, 18, 7, 3, 24, 15, 9, 2, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), alpha), grad))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, grad)), tf.math.add(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(alpha, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, grad)), alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(sigma, grad), grad)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), sigma)), tf.math.negative(tf.math.multiply(alpha, beta))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3088483810424805, 2.3101918697357178, 2.3107924461364746, 2.3104677200317383, 2.3112428188323975, 2.3086276054382324], "accuracy": [0.09311848133802414, 0.09219389408826828, 0.08955223858356476, 0.08598599582910538, 0.08440100401639938, 0.09021265059709549], "val_loss": [2.30881667137146, 2.3088037967681885, 2.308790445327759, 2.3087780475616455, 2.308763027191162, 2.3087520599365234], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 2, 1, 7, 4, 8, 5, 9, 5, 6, 0, 0, 5, 9, 1, 6], [3, 5, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [6, 4, 8, 3, 3, 2, 5, 3, 9, 6, 1, 7, 7], [3, 7, 0, 4, 7, 1, 4, 3, 1, 3], [39, 25, 59], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09142857044935226, "mapping_values": [1, 20, 11, 9, 3, 17, 11, 6, 1, 17, 10, 7, 2, 4, 3, 1, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.pow(tf.math.add(grad, tf.math.multiply(grad, tf.math.divide_no_nan(alpha, grad))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.pow(tf.math.sqrt(alpha), tf.math.square(grad))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.sqrt(grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, alpha)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3087077140808105, 2.3108577728271484, 2.3097188472747803, 2.310088872909546, 2.309234142303467, 2.309690475463867], "accuracy": [0.09840179979801178, 0.09192973375320435, 0.09021265059709549, 0.09060890227556229, 0.09140139818191528, 0.0956280529499054], "val_loss": [2.3086934089660645, 2.308680772781372, 2.308668613433838, 2.308657169342041, 2.3086469173431396, 2.308635950088501], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09433333575725555]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [3, 4, 8, 2, 4, 6, 4, 1, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 2, 0, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 0, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 6, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [2, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 63, 15, 8], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [8, 2, 5, 1, 4, 9, 5, 4, 1, 4, 4, 6, 9, 5, 2, 5], [3, 7, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 88, 85], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 1, 20, 13, 7, 4, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.subtract(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), sigma))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3103280067443848, 2.3100666999816895, 2.3103792667388916, 2.3084583282470703, 2.3106372356414795, 2.3101272583007812], "accuracy": [0.08638224750757217, 0.09179764986038208, 0.09298639744520187, 0.0886276587843895, 0.09655263274908066, 0.09166556596755981], "val_loss": [2.3083319664001465, 2.308319568634033, 2.3083081245422363, 2.3082993030548096, 2.3082878589630127, 2.308274507522583], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]