[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [0, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 24, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 0, 2, 8, 4, 0, 4, 0, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 1, 1, 4, 5, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 69, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8657143115997314, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 24, 15, 9, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.sqrt(sigma)), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(alpha, grad))))), tf.math.negative(tf.math.pow(grad, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0454111099243164, 1.6187968254089355, 1.0417683124542236, 0.9126266241073608, 0.8503747582435608, 0.7527351975440979, 0.7479925751686096, 0.6885505318641663, 0.6670348048210144, 0.6577238440513611, 0.6838949918746948, 0.6141856908798218, 0.5964688658714294, 0.5869500041007996, 0.5781229734420776, 0.5585500597953796, 0.5418052077293396, 0.5423746705055237, 0.5280184745788574, 0.4961903691291809, 0.5067759156227112, 0.4981916844844818, 0.4862216114997864, 0.4800426661968231, 0.47967326641082764, 0.4806824028491974, 0.46801644563674927, 0.43909624218940735, 0.4486438035964966, 0.4364612400531769, 0.42915108799934387, 0.4303893446922302, 0.4079875349998474, 0.4179718792438507, 0.4136140048503876, 0.41375476121902466, 0.40129929780960083, 0.39593976736068726, 0.38656777143478394, 0.39002159237861633, 0.37964800000190735, 0.3731139600276947, 0.3624570965766907, 0.3650875985622406, 0.3752981722354889, 0.35167625546455383, 0.3528742492198944, 0.3451223075389862, 0.34727805852890015, 0.35186341404914856, 0.3398514688014984, 0.34617042541503906, 0.3391879200935364, 0.3226892948150635, 0.3225325345993042, 0.3138390779495239], "accuracy": [0.3206973969936371, 0.4683661460876465, 0.6198652982711792, 0.6538106203079224, 0.6758684515953064, 0.7083608508110046, 0.7144366502761841, 0.7294940948486328, 0.7404569983482361, 0.7461365461349487, 0.7338528633117676, 0.7631752490997314, 0.7697794437408447, 0.7773081660270691, 0.7820631265640259, 0.7878747582435608, 0.7923656105995178, 0.7923656105995178, 0.7976489067077637, 0.8150838613510132, 0.8095363974571228, 0.811649739742279, 0.819970965385437, 0.8117818236351013, 0.8156121969223022, 0.8156121969223022, 0.8212917447090149, 0.8347642421722412, 0.8318583965301514, 0.8281601071357727, 0.8409721255302429, 0.8381983637809753, 0.847840428352356, 0.843481719493866, 0.8370096683502197, 0.8413683772087097, 0.8494254350662231, 0.8524633646011353, 0.8553691506385803, 0.8470479249954224, 0.8578787446022034, 0.8605204224586487, 0.8664641380310059, 0.8640866279602051, 0.8594637513160706, 0.8668603897094727, 0.8638224601745605, 0.8705587387084961, 0.8713511824607849, 0.868049144744873, 0.8717474341392517, 0.8706908226013184, 0.8712190985679626, 0.8812574148178101, 0.8808611631393433, 0.8841632604598999], "val_loss": [1.8924938440322876, 0.9726948142051697, 0.9935018420219421, 0.7682111859321594, 0.6906889081001282, 0.6546236276626587, 0.6482089161872864, 0.6338593363761902, 0.5886279940605164, 0.6396607756614685, 0.5990846157073975, 0.5546496510505676, 0.658686101436615, 0.548120379447937, 0.5229772329330444, 0.5142114162445068, 0.5406502485275269, 0.505935788154602, 0.4942525327205658, 0.5049411058425903, 0.5088104009628296, 0.4813094139099121, 0.47261783480644226, 0.47758948802948, 0.49115315079689026, 0.5044021010398865, 0.4578057825565338, 0.4623158276081085, 0.46168720722198486, 0.4418522119522095, 0.4746389091014862, 0.4331536591053009, 0.43527066707611084, 0.46620336174964905, 0.46880704164505005, 0.46835091710090637, 0.41288408637046814, 0.425246000289917, 0.4614720344543457, 0.424068808555603, 0.4034116268157959, 0.4406488835811615, 0.4215509295463562, 0.40259936451911926, 0.3984796404838562, 0.4148990213871002, 0.40007922053337097, 0.40282416343688965, 0.3952844738960266, 0.3961094617843628, 0.382648766040802, 0.3990457057952881, 0.380244642496109, 0.37695688009262085, 0.38393351435661316, 0.38416749238967896], "val_accuracy": [0.3610000014305115, 0.6549999713897705, 0.6236666440963745, 0.6993333101272583, 0.7426666617393494, 0.7526666522026062, 0.7446666955947876, 0.7556666731834412, 0.7739999890327454, 0.7366666793823242, 0.750333309173584, 0.7883333563804626, 0.7303333282470703, 0.7893333435058594, 0.8033333420753479, 0.8046666383743286, 0.796999990940094, 0.8130000233650208, 0.8216666579246521, 0.8109999895095825, 0.7943333387374878, 0.815666675567627, 0.8259999752044678, 0.8173333406448364, 0.8050000071525574, 0.8153333067893982, 0.831333339214325, 0.828000009059906, 0.8209999799728394, 0.8323333263397217, 0.828000009059906, 0.8370000123977661, 0.8393333554267883, 0.8306666612625122, 0.8199999928474426, 0.8233333230018616, 0.8433333039283752, 0.843999981880188, 0.8296666741371155, 0.8453333377838135, 0.8483333587646484, 0.8209999799728394, 0.8383333086967468, 0.8379999995231628, 0.8546666502952576, 0.8429999947547913, 0.8560000061988831, 0.8460000157356262, 0.8473333120346069, 0.8579999804496765, 0.859333336353302, 0.8503333330154419, 0.8573333621025085, 0.8539999723434448, 0.8553333282470703, 0.8576666712760925]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 4, 0, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 4, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [5, 1, 1, 1, 6, 3, 0, 4, 4, 0, 4, 9, 4, 2, 4, 0, 0, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 4, 4, 0, 4, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 8, 5, 4], [7, 0, 4], [44, 94]], "fitness": -0.8574285507202148, "mapping_values": [1, 3, 1, 2, 0, 8, 5, 3, 1, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.0362906455993652, 1.6040257215499878, 1.103524088859558, 0.8536902070045471, 0.8068333268165588, 0.7523522973060608, 0.7356541752815247, 0.662217915058136, 0.667170524597168, 0.6417483687400818, 0.6160070896148682, 0.6112158894538879, 0.5769351124763489, 0.5733031630516052, 0.5688963532447815, 0.567794919013977, 0.5342934727668762, 0.5232348442077637, 0.5308496356010437, 0.5073182582855225, 0.4998980164527893, 0.4843059182167053, 0.5027046799659729, 0.5011175274848938, 0.46614736318588257, 0.465961217880249, 0.4451172351837158, 0.4622494578361511, 0.4422987699508667, 0.4256274104118347, 0.4211407005786896, 0.4252958595752716, 0.4275955855846405, 0.4167254567146301, 0.40453314781188965, 0.39227911829948425, 0.43733957409858704, 0.388787180185318, 0.38582953810691833, 0.3744417130947113, 0.3821316063404083, 0.36263659596443176], "accuracy": [0.32162198424339294, 0.4443270266056061, 0.6145819425582886, 0.6873596906661987, 0.6955488324165344, 0.7206445932388306, 0.7255316376686096, 0.7516840696334839, 0.7519482374191284, 0.7511557340621948, 0.7623828053474426, 0.7660810947418213, 0.7827235460281372, 0.7841764688491821, 0.7876105904579163, 0.778761088848114, 0.7991018295288086, 0.7997622489929199, 0.7956677079200745, 0.8072909712791443, 0.8131026029586792, 0.8170651197433472, 0.806630551815033, 0.8120459914207458, 0.8247259259223938, 0.8197067975997925, 0.8355567455291748, 0.82683926820755, 0.8315942287445068, 0.8370096683502197, 0.8397833704948425, 0.8430854678153992, 0.839519202709198, 0.8409721255302429, 0.8506141901016235, 0.8548408150672913, 0.834632158279419, 0.8560295701026917, 0.8565579056739807, 0.8601241707801819, 0.8578787446022034, 0.8623695969581604], "val_loss": [2.0889713764190674, 1.272524356842041, 0.7628577351570129, 0.7081325054168701, 0.661048412322998, 0.8013565540313721, 0.60524582862854, 0.6006855368614197, 0.6045163869857788, 0.555098295211792, 0.6045052409172058, 0.5611594915390015, 0.5275805592536926, 0.5702548027038574, 0.5152595043182373, 0.5105563402175903, 0.4896976053714752, 0.501833975315094, 0.4763610064983368, 0.48955240845680237, 0.5098696947097778, 0.5517615675926208, 0.4856412708759308, 0.4611988067626953, 0.4823717474937439, 0.4416136145591736, 0.4446738362312317, 0.45011165738105774, 0.4250084161758423, 0.4322575628757477, 0.43607398867607117, 0.42995768785476685, 0.4459456503391266, 0.4148613214492798, 0.40854012966156006, 0.4240262508392334, 0.39949455857276917, 0.4082578122615814, 0.4325887858867645, 0.4077884256839752, 0.39900386333465576, 0.4055767357349396], "val_accuracy": [0.31333333253860474, 0.5789999961853027, 0.7166666388511658, 0.7260000109672546, 0.7453333139419556, 0.6973333358764648, 0.7649999856948853, 0.7613333463668823, 0.7526666522026062, 0.7836666703224182, 0.762333333492279, 0.7796666622161865, 0.7863333225250244, 0.7710000276565552, 0.7990000247955322, 0.8006666898727417, 0.8103333115577698, 0.7979999780654907, 0.8193333148956299, 0.8173333406448364, 0.7933333516120911, 0.7583333253860474, 0.812333345413208, 0.8230000138282776, 0.8130000233650208, 0.831333339214325, 0.828000009059906, 0.8276666402816772, 0.8410000205039978, 0.8353333473205566, 0.8309999704360962, 0.8349999785423279, 0.8183333277702332, 0.8429999947547913, 0.8479999899864197, 0.8376666903495789, 0.8506666421890259, 0.846666693687439, 0.8293333053588867, 0.8456666469573975, 0.8496666550636292, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 4, 4, 0, 6, 6, 4, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 8, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [5, 1, 2, 1, 2, 2, 6, 4, 4, 0, 4, 9, 4, 2, 4, 0, 9, 2, 5, 0, 0, 0, 6, 8, 8, 8], [6, 4, 4, 4, 1, 1, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [86, 58, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8420000076293945, "mapping_values": [1, 17, 9, 8, 2, 5, 3, 2, 0, 30, 18, 12, 3, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.pow(alpha, tf.math.pow(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.pow(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.pow(tf.math.negative(alpha), alpha), sigma), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), grad)), grad))), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.0387051105499268, 1.560908317565918, 1.063562035560608, 0.8792418837547302, 0.8191644549369812, 0.7649706602096558, 0.7103484869003296, 0.6989982724189758, 0.6709649562835693, 0.6366522312164307, 0.6269345283508301, 0.5990647077560425, 0.5929652452468872, 0.5818920135498047, 0.5498538613319397, 0.5461540222167969, 0.5347741842269897, 0.5149573683738708, 0.5259477496147156, 0.49720627069473267, 0.494568407535553, 0.47764426469802856, 0.48748093843460083, 0.45743948221206665, 0.46235719323158264, 0.46300631761550903, 0.44037315249443054, 0.4397173225879669, 0.4413328170776367, 0.4277970492839813, 0.4353271424770355, 0.42215192317962646, 0.4111759662628174, 0.40179798007011414, 0.40139442682266235, 0.3967839181423187, 0.40179693698883057, 0.3758072257041931, 0.40033668279647827], "accuracy": [0.320169061422348, 0.47946110367774963, 0.6116761565208435, 0.6711134314537048, 0.6983225345611572, 0.7209087014198303, 0.7341170310974121, 0.7362303733825684, 0.7456082701683044, 0.7623828053474426, 0.7630431652069092, 0.7721568942070007, 0.774798572063446, 0.7783648371696472, 0.7960638999938965, 0.791441023349762, 0.7976489067077637, 0.8098005652427673, 0.8049134612083435, 0.8185180425643921, 0.8165367841720581, 0.8236692547798157, 0.8171972036361694, 0.8354246616363525, 0.828820526599884, 0.8265751004219055, 0.8352925777435303, 0.8366134166717529, 0.8330471515655518, 0.8441421389579773, 0.8352925777435303, 0.845859169960022, 0.8469158411026001, 0.8540483713150024, 0.8496896028518677, 0.8548408150672913, 0.8533879518508911, 0.8622375130653381, 0.8502179384231567], "val_loss": [1.6445438861846924, 1.1538615226745605, 0.8109560608863831, 0.8019306659698486, 0.705600917339325, 0.6305557489395142, 0.6205867528915405, 0.6169149279594421, 0.5795953869819641, 0.5725545883178711, 0.5814943313598633, 0.5248349905014038, 0.5168341398239136, 0.5031502842903137, 0.5011093020439148, 0.5098854899406433, 0.500975489616394, 0.46733981370925903, 0.457723468542099, 0.4714405834674835, 0.44608598947525024, 0.4847601056098938, 0.43352970480918884, 0.424906462430954, 0.44792595505714417, 0.43574899435043335, 0.43983834981918335, 0.4330196976661682, 0.41882243752479553, 0.4073947072029114, 0.4350149631500244, 0.4287441074848175, 0.39865678548812866, 0.38974690437316895, 0.397727906703949, 0.43052342534065247, 0.3922233581542969, 0.40126359462738037, 0.39693570137023926], "val_accuracy": [0.43066665530204773, 0.6119999885559082, 0.703000009059906, 0.7093333601951599, 0.7353333234786987, 0.7486666440963745, 0.7326666712760925, 0.734666645526886, 0.7570000290870667, 0.7606666684150696, 0.765666663646698, 0.7973333597183228, 0.800000011920929, 0.8090000152587891, 0.7990000247955322, 0.8066666722297668, 0.8066666722297668, 0.8216666579246521, 0.824999988079071, 0.8163333535194397, 0.8293333053588867, 0.809333324432373, 0.8356666564941406, 0.8410000205039978, 0.8276666402816772, 0.8309999704360962, 0.8286666870117188, 0.8276666402816772, 0.843666672706604, 0.8483333587646484, 0.8309999704360962, 0.8363333344459534, 0.8483333587646484, 0.8573333621025085, 0.8533333539962769, 0.8256666660308838, 0.8546666502952576, 0.847000002861023, 0.8489999771118164]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 4, 4, 2, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 2, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [9, 6, 9, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 9, 2, 5, 6, 4, 5, 2, 1, 0, 4, 2, 6, 8, 6, 2, 3, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 4, 4, 4, 1, 4, 1, 4, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 90, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [44, 94]], "fitness": -0.8325714468955994, "mapping_values": [1, 17, 9, 8, 1, 1, 1, 0, 1, 37, 23, 14, 3, 3, 1, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.pow(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha))), grad))), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.math.negative(grad), tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(alpha), grad), alpha), grad), tf.math.negative(grad))), grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.04927659034729, 1.5305477380752563, 1.0745574235916138, 0.8916224837303162, 0.7937913537025452, 0.7611011862754822, 0.7411152124404907, 0.6952527165412903, 0.6637551188468933, 0.6604991555213928, 0.6157147288322449, 0.6085433959960938, 0.581841766834259, 0.6144082546234131, 0.5776395201683044, 0.5375232100486755, 0.5309590697288513, 0.5336463451385498, 0.5206093192100525, 0.510332465171814, 0.5096959471702576, 0.5031830668449402, 0.491729199886322, 0.4951411187648773], "accuracy": [0.3127724230289459, 0.5159159898757935, 0.618280291557312, 0.6629242897033691, 0.6984546184539795, 0.7156254053115845, 0.7182670831680298, 0.7383436560630798, 0.7506273984909058, 0.748249888420105, 0.7681944370269775, 0.7667415142059326, 0.7798177003860474, 0.7626469135284424, 0.7792893648147583, 0.800290584564209, 0.7998943328857422, 0.7996301651000977, 0.8054417967796326, 0.8148196935653687, 0.8058380484580994, 0.8125742673873901, 0.8175934553146362, 0.8144234418869019], "val_loss": [1.9218813180923462, 1.283836007118225, 0.8015820980072021, 0.7888091802597046, 0.6868526935577393, 0.7050082087516785, 0.6332141757011414, 0.5998967289924622, 0.6237494945526123, 0.580994725227356, 0.5601635575294495, 0.5710136890411377, 0.6692208647727966, 0.55746990442276, 0.5467119216918945, 0.5069785714149475, 0.5076696872711182, 0.5064936876296997, 0.4877680540084839, 0.49634432792663574, 0.5242701172828674, 0.5045811533927917, 0.5126760005950928, 0.47636914253234863], "val_accuracy": [0.37166666984558105, 0.5863333344459534, 0.6943333148956299, 0.6783333420753479, 0.7366666793823242, 0.7170000076293945, 0.7639999985694885, 0.7683333158493042, 0.7559999823570251, 0.7720000147819519, 0.781333327293396, 0.7743333578109741, 0.7526666522026062, 0.7833333611488342, 0.777999997138977, 0.8026666641235352, 0.7996666431427002, 0.8023333549499512, 0.8230000138282776, 0.812333345413208, 0.7986666560173035, 0.7960000038146973, 0.7923333048820496, 0.8163333535194397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 4, 4, 0, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [0, 3, 2, 2, 0, 1, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 2, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 8, 5, 0, 0, 9, 4, 4, 0, 4, 9, 4, 8, 6, 2, 5, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 3, 4, 4, 1, 4, 1, 4, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 69, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [44, 94]], "fitness": -0.8065714240074158, "mapping_values": [1, 1, 0, 1, 1, 6, 5, 1, 2, 8, 7, 1, 1, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.negative(grad))), tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.036135673522949, 1.4510583877563477, 1.0485026836395264, 0.8897362947463989, 0.7984081506729126, 0.7810436487197876, 0.7334325313568115, 0.7141344547271729, 0.6602040529251099, 0.6770147681236267, 0.6309913992881775, 0.5953823328018188, 0.5840839743614197, 0.5831637382507324, 0.5712078213691711, 0.5466185212135315, 0.5574097633361816, 0.5389488935470581, 0.5152243375778198, 0.5186670422554016, 0.4957287609577179, 0.4971459209918976, 0.5011502504348755, 0.49415022134780884, 0.45839402079582214, 0.4601072371006012, 0.4628639221191406, 0.4522082209587097, 0.4531802535057068, 0.4387243986129761, 0.44547539949417114, 0.42436712980270386, 0.4153279960155487, 0.4318522810935974, 0.4256318211555481, 0.4070868194103241, 0.3932243287563324, 0.4038127660751343, 0.37274643778800964, 0.3937261700630188, 0.3881242275238037, 0.3792073130607605, 0.3790583908557892, 0.37457001209259033, 0.3537760078907013, 0.3618420958518982, 0.34092020988464355, 0.3568069636821747, 0.35445651412010193, 0.3407464325428009, 0.3296547830104828], "accuracy": [0.3213578164577484, 0.49649980664253235, 0.6215823292732239, 0.6619997620582581, 0.6988508701324463, 0.6997754573822021, 0.7186633348464966, 0.7292299270629883, 0.7461365461349487, 0.7391361594200134, 0.7500990629196167, 0.767401933670044, 0.7759873270988464, 0.776251494884491, 0.7816668748855591, 0.7903843522071838, 0.7890635132789612, 0.7922335267066956, 0.8049134612083435, 0.7972526550292969, 0.8074230551719666, 0.8096684813499451, 0.8062343001365662, 0.8103289008140564, 0.8318583965301514, 0.8314621448516846, 0.8257825970649719, 0.8260467648506165, 0.8255184292793274, 0.8343679904937744, 0.8339717388153076, 0.8413683772087097, 0.845859169960022, 0.8391229510307312, 0.8385946154594421, 0.8485008478164673, 0.8492933511734009, 0.8486329317092896, 0.863558292388916, 0.8524633646011353, 0.8573504090309143, 0.8585391640663147, 0.8580108284950256, 0.8593316674232483, 0.8664641380310059, 0.8607845902442932, 0.8714832663536072, 0.8659358024597168, 0.8676528930664062, 0.8754457831382751, 0.878351628780365], "val_loss": [1.7420066595077515, 0.9081015586853027, 0.8352945446968079, 0.7517350316047668, 0.6521262526512146, 0.6271761059761047, 0.6452347636222839, 0.610530436038971, 0.5654450058937073, 0.5655369758605957, 0.5595209002494812, 0.5745663046836853, 0.5442616939544678, 0.5037604570388794, 0.5045796036720276, 0.4847693145275116, 0.5243955850601196, 0.48575887084007263, 0.4740791320800781, 0.4564988613128662, 0.45400500297546387, 0.4627022445201874, 0.44654029607772827, 0.4524723291397095, 0.43187952041625977, 0.4398628771305084, 0.45915913581848145, 0.42386364936828613, 0.4262318015098572, 0.45826277136802673, 0.4668107032775879, 0.4302636682987213, 0.40953367948532104, 0.41532284021377563, 0.4156091809272766, 0.3981949985027313, 0.4100291430950165, 0.4004996716976166, 0.3881206810474396, 0.4174143075942993, 0.45474088191986084, 0.3993920385837555, 0.381074458360672, 0.39581039547920227, 0.3869703710079193, 0.3833923041820526, 0.3794773817062378, 0.40774568915367126, 0.38929635286331177, 0.3834308981895447, 0.38571855425834656], "val_accuracy": [0.3723333477973938, 0.6756666898727417, 0.6523333191871643, 0.7103333473205566, 0.7406666874885559, 0.7406666874885559, 0.7453333139419556, 0.7423333525657654, 0.7643333077430725, 0.7716666460037231, 0.7803333401679993, 0.7680000066757202, 0.7753333449363708, 0.796999990940094, 0.7990000247955322, 0.8169999718666077, 0.7973333597183228, 0.8103333115577698, 0.812666654586792, 0.8273333311080933, 0.8236666917800903, 0.8289999961853027, 0.8306666612625122, 0.8270000219345093, 0.8386666774749756, 0.8353333473205566, 0.824999988079071, 0.8433333039283752, 0.8366666436195374, 0.8296666741371155, 0.8206666707992554, 0.8476666808128357, 0.8496666550636292, 0.843666672706604, 0.8399999737739563, 0.8536666631698608, 0.840666651725769, 0.8543333411216736, 0.8586666584014893, 0.8383333086967468, 0.8336666822433472, 0.8483333587646484, 0.862333357334137, 0.8510000109672546, 0.8586666584014893, 0.8653333187103271, 0.862666666507721, 0.8473333120346069, 0.859000027179718, 0.8523333072662354, 0.8526666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 0, 2, 8, 4, 4, 4, 0, 6, 8, 6, 2, 2, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [50, 96, 69, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8059999942779541, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 35, 22, 13, 2, 3, 1, 2, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.sqrt(beta)), tf.math.negative(tf.math.add(grad, tf.math.sqrt(tf.math.pow(grad, grad))))), tf.math.pow(tf.math.pow(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), sigma)), tf.math.add(grad, sigma)))), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.negative(tf.math.square(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.578522205352783, 2.144493818283081, 2.200659990310669, 1.787526249885559, 1.5054789781570435, 0.9969844222068787, 0.7890066504478455, 0.7150514125823975, 0.6676402688026428, 0.6277258992195129, 0.6199508309364319, 0.5964375138282776, 0.5819724202156067, 0.5739772915840149, 0.5502541661262512, 0.5483865141868591, 0.5181555151939392], "accuracy": [0.23299431800842285, 0.26878878474235535, 0.22559767961502075, 0.3980979919433594, 0.5017831325531006, 0.6415268778800964, 0.6923788189888, 0.724739134311676, 0.7420420050621033, 0.763439416885376, 0.7614582180976868, 0.7774402499198914, 0.7763835787773132, 0.7876105904579163, 0.7840443849563599, 0.7913089394569397, 0.8074230551719666], "val_loss": [2.1520540714263916, 2.3131747245788574, 1.8157603740692139, 1.6389102935791016, 0.9650163650512695, 0.7409813404083252, 0.6974534392356873, 0.6104905009269714, 0.5871575474739075, 0.56818026304245, 0.5470204949378967, 0.5511162877082825, 0.5272059440612793, 0.516571044921875, 0.5292946100234985, 0.5184932351112366, 0.5401375889778137], "val_accuracy": [0.2619999945163727, 0.10066666454076767, 0.38999998569488525, 0.4359999895095825, 0.6493333578109741, 0.6993333101272583, 0.718999981880188, 0.7549999952316284, 0.7716666460037231, 0.7680000066757202, 0.7860000133514404, 0.8046666383743286, 0.8013333082199097, 0.8013333082199097, 0.7943333387374878, 0.7983333468437195, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 9, 2, 2, 6, 4, 5, 1, 6, 0, 4, 2, 6, 8, 6, 2, 2, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 4, 1, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [44, 94]], "fitness": -0.7868571281433105, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 23, 13, 10, 2, 3, 1, 2, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(tf.math.subtract(grad, alpha))), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.math.add(grad, alpha), tf.math.divide_no_nan(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0514564514160156, 1.663439154624939, 1.1017237901687622, 0.95524001121521, 0.8570906519889832, 0.8106022477149963, 0.7716057300567627, 0.7448780536651611, 0.7186136841773987, 0.7011547684669495, 0.6589629650115967, 0.6829883456230164, 0.6374887228012085, 0.6355857253074646], "accuracy": [0.3209615647792816, 0.4497424364089966, 0.6129969358444214, 0.64231938123703, 0.68101966381073, 0.6976621150970459, 0.7059833407402039, 0.7148329019546509, 0.7297582626342773, 0.7317395210266113, 0.7515519857406616, 0.7485140562057495, 0.7528728246688843, 0.7593448758125305], "val_loss": [2.0778985023498535, 1.013951301574707, 0.8330077528953552, 0.7905344367027283, 0.7058749794960022, 0.6655988693237305, 0.6394298672676086, 0.6112402081489563, 0.5892467498779297, 0.5858328342437744, 0.704742431640625, 0.5700470805168152, 0.5954068899154663, 0.5558552145957947], "val_accuracy": [0.2666666805744171, 0.6129999756813049, 0.6883333325386047, 0.6713333129882812, 0.718999981880188, 0.737333357334137, 0.750333309173584, 0.7749999761581421, 0.7793333530426025, 0.7793333530426025, 0.7200000286102295, 0.7739999890327454, 0.7509999871253967, 0.7710000276565552]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 0, 2, 8, 4, 0, 4, 8, 6, 8, 6, 6, 2, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 4, 3, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.5331428647041321, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 1, 13, 8, 5, 0, 3, 2, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.math.sqrt(tf.math.negative(grad))), tf.math.add(tf.math.sqrt(grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.0466644763946533, 2.2435903549194336, 2.2613508701324463, 2.3121936321258545, 1.8191397190093994, 1.798027515411377, 1.8632389307022095, 2.1215548515319824, 2.055776834487915, 1.8193473815917969, 1.5262161493301392], "accuracy": [0.23140932619571686, 0.19191652536392212, 0.1620657742023468, 0.13855500519275665, 0.32584863901138306, 0.3679831027984619, 0.42728832364082336, 0.21740853786468506, 0.27644962072372437, 0.3490952253341675, 0.43851539492607117], "val_loss": [2.315298557281494, 2.3059165477752686, 2.5066938400268555, 2.0613698959350586, 2.2879137992858887, 1.3372904062271118, 2.2977406978607178, 1.4633063077926636, 1.5067386627197266, 1.5880382061004639, 1.3333152532577515], "val_accuracy": [0.1003333330154419, 0.10366666316986084, 0.10166666656732559, 0.26366665959358215, 0.10266666859388351, 0.5353333353996277, 0.10166666656732559, 0.5096666812896729, 0.4476666748523712, 0.3656666576862335, 0.5253333449363708]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 3, 8, 0, 6, 9, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 3, 2, 2, 6, 8, 2, 0], [0, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [11, 57, 63, 40, 56, 15, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 0, 9, 4, 4, 6, 4, 2, 4, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 3, 4, 4, 1, 4, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 42, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [6, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12389380484819412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 0, 2, 8, 4, 0, 4, 0, 2, 8, 6, 2, 2, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 3, 4, 4, 1, 1, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [2, 4, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 23, 17, 6, 2, 1, 1, 0, 13, 8, 5, 0, 3, 2, 1, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(grad, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad))))), grad), grad), grad)), alpha), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.sqrt(grad)), tf.math.negative(tf.math.add(sigma, grad))), tf.math.sqrt(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]