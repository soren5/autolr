[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [2, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [57, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 5, 2, 1, 2, 2, 6, 4, 4, 4, 4, 9, 5, 2, 4, 0, 9, 2, 5, 0, 0, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 4, 4, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [91, 58, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8391428589820862, "mapping_values": [1, 5, 3, 2, 2, 6, 4, 2, 1, 13, 7, 6, 1, 3, 2, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.subtract(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(grad, alpha)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.04103684425354, 1.5085519552230835, 1.0469774007797241, 0.8802064657211304, 0.7971462607383728, 0.7713620662689209, 0.7209550142288208, 0.6967148780822754, 0.688353955745697, 0.6439561247825623, 0.6308264136314392, 0.6021343469619751, 0.614933431148529, 0.5762583613395691, 0.562525749206543, 0.5433768630027771, 0.5198787450790405, 0.5307583808898926, 0.5223439335823059, 0.5100769996643066, 0.5000691413879395, 0.49518921971321106, 0.4797593057155609, 0.4783298373222351, 0.46135568618774414, 0.46478673815727234, 0.46175259351730347, 0.4552645981311798, 0.43522754311561584, 0.43385836482048035, 0.42462655901908875], "accuracy": [0.3155461549758911, 0.5105006098747253, 0.6244881749153137, 0.6653017997741699, 0.6996433734893799, 0.7074362635612488, 0.7244749665260315, 0.7322678565979004, 0.7367587089538574, 0.7508915662765503, 0.7592127919197083, 0.7753269076347351, 0.7631752490997314, 0.774798572063446, 0.7820631265640259, 0.793422281742096, 0.802800178527832, 0.7957997918128967, 0.7959318161010742, 0.8078193068504333, 0.8099326491355896, 0.809140145778656, 0.8161405324935913, 0.8206313848495483, 0.828820526599884, 0.8269713521003723, 0.8281601071357727, 0.8285563588142395, 0.8392550349235535, 0.8350284099578857, 0.8417646288871765], "val_loss": [2.026711940765381, 0.9201448559761047, 0.7670571208000183, 0.7617009878158569, 0.7260062098503113, 0.6648004651069641, 0.6318995952606201, 0.6670982837677002, 0.6291101574897766, 0.5724769830703735, 0.5829747319221497, 0.6676765084266663, 0.5368416905403137, 0.5233690142631531, 0.504494845867157, 0.5042127370834351, 0.4962056875228882, 0.5402256846427917, 0.4837185740470886, 0.48120933771133423, 0.48609277606010437, 0.4453171491622925, 0.46894189715385437, 0.4363066554069519, 0.45833873748779297, 0.42414596676826477, 0.4180181622505188, 0.4198557138442993, 0.4287538528442383, 0.4225379228591919, 0.4524585008621216], "val_accuracy": [0.3409999907016754, 0.6923333406448364, 0.706333339214325, 0.7106666564941406, 0.7183333039283752, 0.737333357334137, 0.7493333220481873, 0.7556666731834412, 0.7506666779518127, 0.7799999713897705, 0.7786666750907898, 0.7253333330154419, 0.7919999957084656, 0.800000011920929, 0.8033333420753479, 0.8103333115577698, 0.8119999766349792, 0.7710000276565552, 0.8083333373069763, 0.8243333101272583, 0.8106666803359985, 0.828000009059906, 0.8220000267028809, 0.8330000042915344, 0.8243333101272583, 0.8456666469573975, 0.840666651725769, 0.8453333377838135, 0.8389999866485596, 0.8356666564941406, 0.8233333230018616]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 6, 4, 4, 2, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [0, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [5, 6, 9, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 2, 2, 8, 4, 0, 4, 0, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [6, 2, 4, 4, 1, 4, 2, 4, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 90, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8371428847312927, "mapping_values": [1, 1, 0, 1, 1, 4, 4, 0, 2, 31, 20, 11, 2, 3, 2, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), beta), tf.math.sqrt(tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(alpha), grad)), beta)), grad)), tf.math.negative(grad))))), grad)))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0285022258758545, 1.403719425201416, 1.056922197341919, 0.9078320264816284, 0.7860159277915955, 0.797091007232666, 0.7620469927787781, 0.7057899832725525, 0.6605365872383118, 0.6646086573600769, 0.6542630195617676, 0.6488361954689026, 0.5978754758834839, 0.6011801958084106, 0.5651353001594543, 0.5714095830917358, 0.5611103773117065, 0.5420692563056946, 0.5469789505004883, 0.5310443043708801, 0.5026871562004089, 0.5097166895866394, 0.49171099066734314, 0.48164695501327515, 0.48650476336479187, 0.47642651200294495, 0.4670001268386841, 0.4449833929538727, 0.4482834041118622, 0.440260112285614], "accuracy": [0.3203011453151703, 0.5143309831619263, 0.6211860775947571, 0.6680755615234375, 0.7016246318817139, 0.6947563290596008, 0.7080966830253601, 0.7263241410255432, 0.7453441023826599, 0.7454761862754822, 0.7504953145980835, 0.7491744756698608, 0.7662131786346436, 0.76542067527771, 0.7770439982414246, 0.77677983045578, 0.7800818681716919, 0.7907806038856506, 0.7873464822769165, 0.7965922355651855, 0.8098005652427673, 0.8006868362426758, 0.8092722296714783, 0.8129705190658569, 0.8117818236351013, 0.8120459914207458, 0.8185180425643921, 0.8298771381378174, 0.8261788487434387, 0.8368775844573975], "val_loss": [1.6004427671432495, 1.0719226598739624, 0.901530921459198, 0.7121407985687256, 0.6613788604736328, 0.6714621186256409, 0.6238436102867126, 0.5822556614875793, 0.6218382120132446, 0.5788624882698059, 0.5456743240356445, 0.5238100290298462, 0.5135085582733154, 0.5224312543869019, 0.48734837770462036, 0.48413288593292236, 0.48035499453544617, 0.5249014496803284, 0.4888048768043518, 0.46114176511764526, 0.4413372278213501, 0.45765429735183716, 0.4728923738002777, 0.4223804175853729, 0.4108251929283142, 0.4194701313972473, 0.41193342208862305, 0.4500434696674347, 0.41962629556655884, 0.4187680780887604], "val_accuracy": [0.4503333270549774, 0.6570000052452087, 0.6669999957084656, 0.718999981880188, 0.7369999885559082, 0.7310000061988831, 0.7636666893959045, 0.7683333158493042, 0.753333330154419, 0.7803333401679993, 0.7883333563804626, 0.796999990940094, 0.8080000281333923, 0.7940000295639038, 0.8056666851043701, 0.8176666498184204, 0.815666675567627, 0.7963333129882812, 0.8136666417121887, 0.8270000219345093, 0.8346666693687439, 0.8209999799728394, 0.8083333373069763, 0.8443333506584167, 0.8516666889190674, 0.843666672706604, 0.8476666808128357, 0.8303333520889282, 0.8389999866485596, 0.8416666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [0, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 24, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 4, 5, 8, 0, 2, 8, 4, 0, 4, 0, 6, 8, 8, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 1, 1, 4, 5, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 69, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 25, 17, 8, 1, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.sqrt(sigma)), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(alpha, grad))))), tf.math.negative(tf.math.pow(grad, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, sigma))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0653128623962402, 1.7472810745239258, 1.1435288190841675, 0.9443482756614685, 0.8102237582206726, 0.8137493133544922, 0.7402133345603943, 0.7185206413269043, 0.6719887256622314, 0.6974101662635803, 0.6412712931632996, 0.5951112508773804, 0.6033886075019836, 0.5900205969810486, 0.5808960795402527, 0.5862913131713867, 0.5414916276931763, 0.5307453274726868, 0.5333566665649414, 0.5123022794723511, 0.5017082095146179, 0.5079383850097656, 0.49207425117492676, 0.48368531465530396, 0.48852115869522095, 0.4540601670742035, 0.46279048919677734, 0.460054486989975], "accuracy": [0.31501781940460205, 0.44366663694381714, 0.5822216272354126, 0.650640606880188, 0.6971337795257568, 0.6946242451667786, 0.719852089881897, 0.7215691208839417, 0.7409853339195251, 0.7323999404907227, 0.7503632307052612, 0.7709681391716003, 0.7758552432060242, 0.7770439982414246, 0.7803460359573364, 0.7745344042778015, 0.7943468689918518, 0.8006868362426758, 0.7964601516723633, 0.8112534880638123, 0.8127063512802124, 0.8098005652427673, 0.8124422430992126, 0.8152159452438354, 0.8231409192085266, 0.8347642421722412, 0.8334434032440186, 0.8265751004219055], "val_loss": [1.9925475120544434, 1.1575345993041992, 0.9140802621841431, 0.788441002368927, 0.692457377910614, 0.6577128767967224, 0.6290794014930725, 0.6146189570426941, 0.6490526795387268, 0.5945845246315002, 0.5467215180397034, 0.542489767074585, 0.5475277304649353, 0.5471358895301819, 0.5224920511245728, 0.5606321096420288, 0.516724705696106, 0.49452051520347595, 0.47041675448417664, 0.4895545542240143, 0.4724680483341217, 0.4759969413280487, 0.45983147621154785, 0.466210275888443, 0.48648348450660706, 0.4736754596233368, 0.4675682485103607, 0.49458059668540955], "val_accuracy": [0.27000001072883606, 0.6256666779518127, 0.6503333449363708, 0.6953333616256714, 0.7379999756813049, 0.7293333411216736, 0.7459999918937683, 0.7476666569709778, 0.7350000143051147, 0.7540000081062317, 0.7893333435058594, 0.7976666688919067, 0.793666660785675, 0.7876666784286499, 0.8096666932106018, 0.7903333306312561, 0.8066666722297668, 0.8130000233650208, 0.8226666450500488, 0.815666675567627, 0.8253333568572998, 0.8186666369438171, 0.8296666741371155, 0.8240000009536743, 0.8143333196640015, 0.8253333568572998, 0.8146666884422302, 0.8119999766349792]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 4, 4, 0, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 4, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [5, 1, 1, 1, 6, 3, 0, 4, 4, 0, 4, 9, 4, 2, 4, 0, 0, 2, 5, 0, 8, 0, 6, 8, 8, 8], [3, 4, 4, 4, 0, 4, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 69, 31, 37, 10, 11], [0, 1, 0, 1, 0, 1, 1], [3, 8, 5, 4], [7, 0, 4], [44, 94]], "fitness": -0.8265714049339294, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 33, 21, 12, 3, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.negative(grad), tf.math.pow(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), tf.math.pow(tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), alpha), sigma), tf.math.negative(grad))))), grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.252202033996582, 2.107555866241455, 2.1730360984802246, 2.186845302581787, 2.273301839828491, 2.0602142810821533, 1.6636626720428467, 1.469622254371643, 1.0831105709075928, 0.8478285670280457, 0.7542237639427185, 0.6947533488273621, 0.6572863459587097, 0.6195951700210571, 0.5951771140098572, 0.5980784296989441, 0.556570291519165, 0.5734474658966064, 0.5427535772323608, 0.5253634452819824, 0.5286296010017395, 0.5291479229927063, 0.510753870010376, 0.49049094319343567, 0.4763065576553345, 0.4835907518863678, 0.478397935628891, 0.4703526198863983, 0.451960951089859, 0.4603465497493744, 0.433245450258255, 0.43756067752838135, 0.43170467019081116, 0.4403725862503052, 0.41031086444854736, 0.42463526129722595, 0.4036887586116791, 0.39655542373657227, 0.39248931407928467, 0.4034341871738434, 0.3816196024417877, 0.3930278420448303, 0.37423762679100037], "accuracy": [0.2642979919910431, 0.27063795924186707, 0.22374852001667023, 0.2242768406867981, 0.14040417969226837, 0.31686699390411377, 0.4263637661933899, 0.49531105160713196, 0.616299033164978, 0.6861709356307983, 0.7191916704177856, 0.7342491149902344, 0.7489103078842163, 0.7614582180976868, 0.7725531458854675, 0.774270236492157, 0.7889314293861389, 0.7876105904579163, 0.7957997918128967, 0.8017435073852539, 0.8018755912780762, 0.7996301651000977, 0.804649293422699, 0.8146876096725464, 0.8189142942428589, 0.8212917447090149, 0.8181217908859253, 0.8206313848495483, 0.8296129703521729, 0.8249900937080383, 0.8404437899589539, 0.8322546482086182, 0.8372738361358643, 0.830669641494751, 0.8418967127799988, 0.8367455005645752, 0.8516708612442017, 0.8494254350662231, 0.8515387773513794, 0.844010055065155, 0.8580108284950256, 0.8481045961380005, 0.8601241707801819], "val_loss": [1.8952929973602295, 2.248615026473999, 2.2419183254241943, 2.2992613315582275, 2.132657289505005, 1.7022539377212524, 1.2241238355636597, 1.1032090187072754, 0.6942188143730164, 0.7898361086845398, 0.663109302520752, 0.5894210338592529, 0.5714771151542664, 0.5460570454597473, 0.5180101990699768, 0.5005168318748474, 0.5962771773338318, 0.4759548306465149, 0.4816635251045227, 0.49234968423843384, 0.4661267101764679, 0.5049480199813843, 0.47966518998146057, 0.4807257056236267, 0.44114261865615845, 0.43565064668655396, 0.45531535148620605, 0.42002370953559875, 0.4184102714061737, 0.4051954746246338, 0.3979954719543457, 0.4090668261051178, 0.4526445269584656, 0.4051651954650879, 0.41823357343673706, 0.40799763798713684, 0.4006466567516327, 0.3934482932090759, 0.3954252004623413, 0.4005996882915497, 0.4053296744823456, 0.43570995330810547, 0.41387927532196045], "val_accuracy": [0.2513333261013031, 0.27300000190734863, 0.23866666853427887, 0.10266666859388351, 0.3893333375453949, 0.5533333420753479, 0.5136666893959045, 0.6113333106040955, 0.7516666650772095, 0.7163333296775818, 0.721666693687439, 0.7606666684150696, 0.7786666750907898, 0.7993333339691162, 0.7916666865348816, 0.8119999766349792, 0.7710000276565552, 0.8159999847412109, 0.8180000185966492, 0.812666654586792, 0.8253333568572998, 0.7916666865348816, 0.8183333277702332, 0.8216666579246521, 0.8263333439826965, 0.8496666550636292, 0.8259999752044678, 0.8493333458900452, 0.847000002861023, 0.8489999771118164, 0.8536666631698608, 0.8513333201408386, 0.8246666789054871, 0.8546666502952576, 0.8416666388511658, 0.8560000061988831, 0.8479999899864197, 0.8579999804496765, 0.8546666502952576, 0.8519999980926514, 0.8539999723434448, 0.8276666402816772, 0.8500000238418579]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 4, 9, 0, 6, 0, 4, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 66, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 8, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [5, 1, 2, 2, 2, 2, 6, 0, 2, 0, 4, 9, 4, 2, 4, 0, 9, 2, 5, 0, 0, 0, 6, 8, 8, 8], [3, 4, 4, 4, 1, 1, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [86, 58, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.8222857117652893, "mapping_values": [1, 4, 2, 2, 0, 5, 3, 2, 0, 30, 19, 11, 3, 3, 2, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha)), alpha)), tf.math.add(sigma, grad)), tf.math.square(grad))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.045661687850952, 1.5684674978256226, 1.0075068473815918, 0.8956655859947205, 0.8088920712471008, 0.7669939994812012, 0.7462778687477112, 0.6914703845977783, 0.6627327799797058, 0.6526721119880676, 0.6293706297874451, 0.5989436507225037, 0.57488614320755, 0.5650810599327087, 0.5764252543449402, 0.5428734421730042, 0.5316997170448303, 0.5322942733764648, 0.5167917013168335, 0.4919047951698303, 0.49423617124557495, 0.5010091066360474, 0.471904456615448, 0.4701669216156006, 0.4893079698085785, 0.45311233401298523, 0.4388957619667053, 0.4312846064567566, 0.4441549777984619, 0.4271247386932373, 0.42433735728263855, 0.42055630683898926, 0.4054321050643921, 0.3869266211986542, 0.4147621691226959], "accuracy": [0.3152819871902466, 0.4566107392311096, 0.632941484451294, 0.6740192770957947, 0.6931713223457336, 0.7100779414176941, 0.7206445932388306, 0.7368907928466797, 0.7486461400985718, 0.7473253011703491, 0.7607977986335754, 0.7761194109916687, 0.7825914621353149, 0.7802139520645142, 0.7766477465629578, 0.7980451583862305, 0.7991018295288086, 0.7980451583862305, 0.809140145778656, 0.81548011302948, 0.8132346868515015, 0.8049134612083435, 0.8210275769233704, 0.8272355198860168, 0.8138951063156128, 0.8289526104927063, 0.8347642421722412, 0.8403117060661316, 0.8327829837799072, 0.8416325449943542, 0.8417646288871765, 0.8450667262077332, 0.8515387773513794, 0.8562937378883362, 0.8436138033866882], "val_loss": [1.8729960918426514, 1.0379478931427002, 0.7968359589576721, 0.738979160785675, 0.6579775214195251, 0.7458765506744385, 0.6423592567443848, 0.5763614773750305, 0.6125771999359131, 0.570056140422821, 0.5561366081237793, 0.5367993712425232, 0.5678603649139404, 0.5051413178443909, 0.5260499119758606, 0.49504324793815613, 0.4805285632610321, 0.49099868535995483, 0.47099000215530396, 0.48502254486083984, 0.4426628053188324, 0.47645092010498047, 0.4522656202316284, 0.4722633957862854, 0.43110159039497375, 0.4469648003578186, 0.4467119872570038, 0.4121302366256714, 0.4113881289958954, 0.41207221150398254, 0.41382095217704773, 0.42306071519851685, 0.42660582065582275, 0.4133242070674896, 0.4372396767139435], "val_accuracy": [0.2826666533946991, 0.6446666717529297, 0.7026666402816772, 0.7113333344459534, 0.7426666617393494, 0.7046666741371155, 0.7336666584014893, 0.7786666750907898, 0.7506666779518127, 0.7893333435058594, 0.7906666398048401, 0.7839999794960022, 0.7710000276565552, 0.8143333196640015, 0.8100000023841858, 0.8069999814033508, 0.8159999847412109, 0.7993333339691162, 0.8206666707992554, 0.8133333325386047, 0.8386666774749756, 0.8176666498184204, 0.8263333439826965, 0.8223333358764648, 0.8443333506584167, 0.8273333311080933, 0.8336666822433472, 0.8463333249092102, 0.8519999980926514, 0.8556666374206543, 0.8556666374206543, 0.8423333168029785, 0.8386666774749756, 0.847000002861023, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 8, 4, 0, 6, 0, 4, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 1, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [70, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 8, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 8, 0, 2, 8, 4, 0, 4, 0, 6, 8, 4, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 1, 1, 4, 5, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [86, 58, 60, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 4, 4], [76, 94]], "fitness": -0.19771428406238556, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4198520183563232, 2.5550832748413086, 2.276916027069092, 2.3088648319244385, 2.3042256832122803, 2.303041458129883], "accuracy": [0.2071060687303543, 0.1364416927099228, 0.12772421538829803, 0.09998679161071777, 0.09628847241401672, 0.09655263274908066], "val_loss": [2.2540183067321777, 2.3043859004974365, 2.3164784908294678, 2.3044400215148926, 2.302978277206421, 2.3026106357574463], "val_accuracy": [0.19966666400432587, 0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 4, 0, 2, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [21, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [3, 3, 2, 5, 6, 4, 5, 2, 3, 0, 2, 2, 6, 8, 6, 2, 0, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 4, 4, 4, 1, 4, 1, 4, 4, 4, 0, 4, 0, 4, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 90, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 4, 4], [44, 94]], "fitness": -0.10542856901884079, "mapping_values": [1, 3, 1, 2, 0, 5, 4, 1, 2, 36, 22, 14, 2, 3, 1, 2, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(tf.math.negative(tf.math.add(tf.math.square(alpha), grad)), alpha)))), grad), tf.math.negative(grad))), grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.square(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad)", "other_info": {"loss": [2.3088157176971436, 2.307732343673706, 2.3068408966064453, 2.306058406829834, 2.3056063652038574, 2.304265260696411, 2.3049423694610596, 2.3031673431396484, 2.303663492202759, 2.303943157196045, 2.302535057067871, 2.301975727081299, 2.301912307739258, 2.302238702774048, 2.3016998767852783], "accuracy": [0.09496764093637466, 0.09272222965955734, 0.0948355570435524, 0.09906221181154251, 0.09034473448991776, 0.09536388516426086, 0.09126931428909302, 0.09589222073554993, 0.09615638852119446, 0.09681680053472519, 0.09192973375320435, 0.09232597798109055, 0.09879804402589798, 0.08942015469074249, 0.09047681838274002], "val_loss": [2.3073811531066895, 2.3063251972198486, 2.305523157119751, 2.3048489093780518, 2.3043429851531982, 2.3039281368255615, 2.3035080432891846, 2.3031959533691406, 2.3030083179473877, 2.302741050720215, 2.302502155303955, 2.302236318588257, 2.302062749862671, 2.3019332885742188, 2.301931619644165], "val_accuracy": [0.09200000017881393, 0.09300000220537186, 0.09066666662693024, 0.08833333104848862, 0.09166666865348816, 0.09166666865348816, 0.09366666525602341, 0.09366666525602341, 0.09466666728258133, 0.0949999988079071, 0.09233333170413971, 0.08966666460037231, 0.09133332967758179, 0.09033333510160446, 0.0846666693687439]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [0, 2, 1, 2, 2, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [9, 6, 9, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 3, 0, 8, 8, 4, 0, 4, 0, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 1, 4, 4, 5, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 90, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [1, 4, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 18, 11, 7, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(alpha)))), tf.math.sqrt(tf.math.pow(grad, grad))), tf.math.negative(tf.math.pow(grad, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [103764344.0, 14280266752.0, 247523131392.0, 1757644849152.0, 7831702994944.0, 25638071173120.0], "accuracy": [0.09549596905708313, 0.09668471664190292, 0.1010434553027153, 0.10460969805717468, 0.10170386731624603, 0.1010434553027153], "val_loss": [988886784.0, 53298614272.0, 572046966784.0, 3118615232512.0, 11681326432256.0, 34457446776832.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 4, 0, 6, 6, 5, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 24, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 4, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 8, 8, 0, 2, 6, 4, 0, 4, 0, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 1, 1, 1, 5, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 69, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 8, 6, 4], [7, 0, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 2, 1, 0, 1, 0, 27, 17, 10, 1, 6, 3, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, grad), tf.math.pow(tf.math.pow(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.negative(alpha), alpha)), tf.math.pow(tf.math.negative(alpha), grad))))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), sigma)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 0, 6, 5, 4, 8, 8, 3, 1, 9, 2, 4, 3, 0, 0, 2, 2, 6, 8, 2, 0], [3, 2, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 8, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 3, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [5, 1, 2, 1, 2, 2, 6, 4, 4, 0, 4, 2, 0, 2, 5, 0, 9, 2, 5, 0, 0, 0, 6, 8, 8, 8], [6, 4, 4, 4, 1, 1, 1, 3, 4, 4, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [93, 58, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [2, 9, 5, 4], [7, 4, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 1, 5, 3, 2, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.304321527481079, 2.302990198135376, 2.302947998046875, 2.3029143810272217, 2.3029983043670654, 2.302928924560547], "accuracy": [0.09192973375320435, 0.09602430462837219, 0.09153348207473755, 0.09602430462837219, 0.09774138033390045, 0.09338264167308807], "val_loss": [2.3026576042175293, 2.302598714828491, 2.3025527000427246, 2.3027219772338867, 2.3025941848754883, 2.302664279937744], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0976666659116745, 0.09833333641290665, 0.09833333641290665]}}]