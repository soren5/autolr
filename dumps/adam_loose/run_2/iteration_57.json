[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [3, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3197142779827118, "mapping_values": [1, 10, 6, 4, 2, 22, 15, 7, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.pow(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(beta, tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.353976249694824, 2.3178937435150146, 2.804429054260254, 2.3052773475646973, 2.3035781383514404, 2.3031229972839355], "accuracy": [0.21212521195411682, 0.18531237542629242, 0.11359133571386337, 0.1018359512090683, 0.09681680053472519, 0.09153348207473755], "val_loss": [2.2301087379455566, 5.115416526794434, 2.305751085281372, 2.3033607006073, 2.302802085876465, 2.3027186393737793], "val_accuracy": [0.3176666796207428, 0.2566666603088379, 0.09933333098888397, 0.0989999994635582, 0.10100000351667404, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 4, 8, 0, 4, 3, 9, 4, 2, 5, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0], [67, 92, 94, 4, 69, 87, 21], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 2, 8, 3, 3, 2, 5, 3, 9, 6, 1], [2, 1, 4, 4, 7, 3, 4, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2988571524620056, "mapping_values": [1, 11, 7, 4, 5, 4, 2, 2, 0, 19, 11, 8, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.multiply(beta, tf.math.multiply(tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(grad, grad)))), grad), sigma))), grad), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.1949799060821533, 2.308061122894287, 2.372143507003784, 2.3406312465667725, 2.2657787799835205, 2.4410624504089355, 2.2697620391845703], "accuracy": [0.2308809906244278, 0.14000792801380157, 0.21172896027565002, 0.12191256135702133, 0.1578391194343567, 0.14542332291603088, 0.18993528187274933], "val_loss": [1.9788721799850464, 2.2137725353240967, 2.3052730560302734, 2.3062665462493896, 2.262737512588501, 2.299957752227783, 2.3137974739074707], "val_accuracy": [0.2809999883174896, 0.2980000078678131, 0.16566666960716248, 0.11500000208616257, 0.10499999672174454, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3], [67, 59, 94, 4, 55], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 1, 1, 3, 1, 4, 2], [36, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [8, 4, 8, 3, 4, 2, 6, 3, 1, 7, 2, 0], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2939999997615814, "mapping_values": [1, 9, 5, 4, 3, 17, 11, 6, 1, 22, 12, 10, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(alpha, alpha), tf.math.square(alpha)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.multiply(alpha, tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, grad), sigma)), alpha), sigma), tf.math.negative(alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.698781967163086, 2.312335968017578, 2.283881425857544, 2.303952217102051, 2.3031651973724365, 2.303067445755005, 2.3033268451690674], "accuracy": [0.1810857206583023, 0.12495046854019165, 0.18491612374782562, 0.10051512718200684, 0.09628847241401672, 0.0944393053650856, 0.09377889335155487], "val_loss": [2.3071060180664062, 2.219383716583252, 2.304410696029663, 2.3029959201812744, 2.302647829055786, 2.3025870323181152, 2.302659511566162], "val_accuracy": [0.0989999994635582, 0.2809999883174896, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 1, 0, 2, 0, 0, 2, 0, 3, 2, 0, 1, 2, 2], [67, 23, 94, 68, 69, 87], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 2, 6, 8, 1, 7, 9, 3, 5, 9, 5, 2, 1, 3, 4, 2, 2, 2, 6], [3, 4, 1, 3, 3, 3, 1, 0, 2, 1, 3, 4, 5], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 8, 3, 3, 2, 5, 3, 9, 6, 1], [1, 7, 0, 4, 7, 3, 4, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2882857024669647, "mapping_values": [1, 23, 12, 11, 6, 5, 2, 3, 0, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, sigma)), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3479177951812744, 2.7274253368377686, 2.3700053691864014, 2.3038170337677, 2.3033664226531982, 2.303518295288086], "accuracy": [0.19535067677497864, 0.17778365314006805, 0.1356491893529892, 0.09760929644107819, 0.09496764093637466, 0.09153348207473755], "val_loss": [2.2570276260375977, 2.1207566261291504, 2.3037116527557373, 2.302926540374756, 2.3025429248809814, 2.302520275115967], "val_accuracy": [0.2913333475589752, 0.2529999911785126, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0], [67, 23, 94, 4, 55, 87, 21], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 0, 6, 8, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1, 4, 4, 6, 8, 5, 2, 5], [3, 7, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2768571376800537, "mapping_values": [1, 1, 0, 1, 1, 24, 17, 7, 2, 27, 16, 11, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(grad, tf.math.subtract(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.subtract(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(sigma, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), tf.math.square(tf.math.add(tf.math.square(alpha), beta))))), alpha), sigma)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4429166316986084, 2.566251516342163, 2.3062257766723633, 2.3023533821105957, 2.270547866821289, 2.474278450012207, 2.303039789199829, 2.2941975593566895, 2.308881998062134, 2.304547071456909], "accuracy": [0.20142649114131927, 0.16074495017528534, 0.1006472036242485, 0.10870426893234253, 0.1636507660150528, 0.15810328722000122, 0.10289261490106583, 0.149649977684021, 0.10777968913316727, 0.10276053100824356], "val_loss": [2.2914061546325684, 2.310027837753296, 2.30369234085083, 2.298403739929199, 2.0217578411102295, 2.302837371826172, 2.2923531532287598, 2.314565658569336, 2.3034920692443848, 2.3029961585998535], "val_accuracy": [0.1850000023841858, 0.10100000351667404, 0.09866666793823242, 0.10199999809265137, 0.2746666669845581, 0.09933333098888397, 0.11966666579246521, 0.09799999743700027, 0.10100000351667404, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [67, 23, 94, 4, 55, 87], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 3, 1, 3, 1, 0, 2, 1, 3, 4, 5], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1, 7, 5], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.26742857694625854, "mapping_values": [1, 1, 0, 1, 1, 22, 15, 7, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3282389640808105, 2.3011271953582764, 2.302363395690918, 2.30007004737854, 2.3678226470947266, 2.3050520420074463, 2.3032844066619873, 2.3030292987823486, 2.3031978607177734], "accuracy": [0.20063400268554688, 0.12098798155784607, 0.10659094154834747, 0.14621582627296448, 0.11610091477632523, 0.09774138033390045, 0.10276053100824356, 0.0952318087220192, 0.09866596013307571], "val_loss": [2.2808241844177246, 2.302718162536621, 2.2970755100250244, 2.575333595275879, 2.3051435947418213, 2.3030688762664795, 2.3026649951934814, 2.302633762359619, 2.3024709224700928], "val_accuracy": [0.10733333230018616, 0.10233332961797714, 0.09966666996479034, 0.2736666798591614, 0.09933333098888397, 0.10133333504199982, 0.10400000214576721, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 5, 0, 3, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 4, 6, 5, 1, 7, 0, 1, 9, 2, 5, 6, 0, 0, 1, 9, 1, 3, 7, 4, 5, 2, 3], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [3, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.23085714876651764, "mapping_values": [1, 1, 0, 1, 0, 24, 16, 8, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.square(beta), tf.math.subtract(alpha, grad))), tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3155112266540527, 2.3206491470336914, 2.389059066772461, 3.142707586288452, 2.3078534603118896, 2.303819179534912], "accuracy": [0.21582353115081787, 0.18359529972076416, 0.18993528187274933, 0.10791176557540894, 0.10091137140989304, 0.09853387624025345], "val_loss": [2.2252018451690674, 2.285620927810669, 2.4711997509002686, 2.3125386238098145, 2.3044142723083496, 2.3027405738830566], "val_accuracy": [0.23800000548362732, 0.1823333352804184, 0.052666667848825455, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 0, 1, 2, 2, 0, 0], [67, 59, 94, 81, 55, 64, 28], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 8, 3, 3, 2, 5, 3, 9, 6, 1], [4, 1, 4, 4, 7, 3, 4, 3, 1, 3], [89, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.15485714375972748, "mapping_values": [1, 5, 2, 3, 3, 4, 2, 2, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(grad, alpha), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3836331367492676, 2.2567410469055176, 2.304600715637207, 2.303309917449951, 2.303138256072998, 2.3029932975769043], "accuracy": [0.1806894689798355, 0.17976489663124084, 0.09932637959718704, 0.09800554811954498, 0.09694888442754745, 0.09628847241401672], "val_loss": [2.2854983806610107, 2.3059988021850586, 2.3029403686523438, 2.3026976585388184, 2.30269455909729, 2.302778720855713], "val_accuracy": [0.15399999916553497, 0.10066666454076767, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 2, 0, 3], [67, 23, 94, 4, 42, 35], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 9, 6, 6, 9, 7, 2, 3, 3, 9, 5, 8, 1, 0, 8, 0, 1, 2, 6], [3, 0, 1, 3, 3, 3, 1, 1, 2, 5, 2], [62, 56, 78, 15, 8], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.12314286082983017, "mapping_values": [1, 1, 0, 1, 1, 3, 1, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.309687614440918, 2.308934450149536, 2.307335376739502, 2.3037352561950684, 2.302537202835083, 2.301624059677124, 2.301492691040039, 2.3020730018615723, 2.3017632961273193, 2.302140951156616, 2.3021459579467773, 2.302218437194824, 2.302504062652588, 2.3025143146514893, 2.3025403022766113, 2.302643060684204, 2.302643060684204, 2.3026440143585205], "accuracy": [0.09338264167308807, 0.09787346422672272, 0.08532558381557465, 0.09245806187391281, 0.09153348207473755, 0.0956280529499054, 0.10130762308835983, 0.09734513610601425, 0.10527011007070541, 0.09589222073554993, 0.10540219396352768, 0.11015717685222626, 0.11147800832986832, 0.11689341068267822, 0.10038304328918457, 0.09377889335155487, 0.10130762308835983, 0.10527011007070541], "val_loss": [2.3081517219543457, 2.3064632415771484, 2.303598165512085, 2.3020923137664795, 2.3015658855438232, 2.301464557647705, 2.3018925189971924, 2.3017523288726807, 2.3019542694091797, 2.302128791809082, 2.302182674407959, 2.3023149967193604, 2.3024485111236572, 2.3025829792022705, 2.302656888961792, 2.3026392459869385, 2.302622079849243, 2.3026375770568848], "val_accuracy": [0.09099999815225601, 0.09300000220537186, 0.09666666388511658, 0.09966666996479034, 0.09166666865348816, 0.0806666687130928, 0.10166666656732559, 0.10266666859388351, 0.0860000029206276, 0.08933333307504654, 0.09966666996479034, 0.11833333224058151, 0.13233333826065063, 0.08500000089406967, 0.06800000369548798, 0.0846666693687439, 0.09533333033323288, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 4, 8, 0, 4, 6, 8, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0], [38, 68, 43, 4, 42, 35, 38], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 6, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 8, 3, 3, 2, 5, 3, 9, 6, 1], [0, 1, 4, 4, 7, 3, 4, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 4, 5, 2, 3, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(grad, grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [494.8453674316406, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1846519559621811, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [351124.84375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]