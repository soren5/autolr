[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 3, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0], [32, 24, 94, 4, 69, 87, 21], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 2, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 5, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 8, 3, 3, 2, 5, 3, 9, 6, 1], [3, 7, 3, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.569428563117981, "mapping_values": [1, 4, 2, 2, 2, 23, 15, 8, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), alpha)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(sigma, grad), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.460176944732666, 2.5501668453216553, 2.239459753036499, 2.549670696258545, 2.3055052757263184, 2.3040874004364014, 2.3038976192474365, 2.304041624069214], "accuracy": [0.18042530119419098, 0.1200634017586708, 0.1744815707206726, 0.16999074816703796, 0.09760929644107819, 0.09602430462837219, 0.1010434553027153, 0.09853387624025345], "val_loss": [3.929530382156372, 2.2588725090026855, 1.514450192451477, 2.3063251972198486, 2.3040173053741455, 2.3026812076568604, 2.302866220474243, 2.302645683288574], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.5703333616256714, 0.09933333098888397, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 2, 5, 0, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [8, 4, 8, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.48828572034835815, "mapping_values": [1, 20, 11, 9, 4, 17, 11, 6, 2, 23, 13, 10, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(beta, tf.math.square(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.multiply(sigma, tf.math.sqrt(grad))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, grad), sigma)), tf.math.negative(alpha)), tf.math.add(sigma, alpha)), sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5888447761535645, 2.4493191242218018, 2.3023455142974854, 2.2885987758636475, 2.043050765991211, 1.8680336475372314, 2.159043312072754, 2.233238697052002, 2.3055756092071533, 2.117978811264038], "accuracy": [0.20459648966789246, 0.09655263274908066, 0.10976093262434006, 0.14753665030002594, 0.2991678714752197, 0.39466384053230286, 0.22137102484703064, 0.17699114978313446, 0.10593052208423615, 0.2767137885093689], "val_loss": [2.764756441116333, 2.302661418914795, 2.300114631652832, 2.1373560428619385, 1.5371569395065308, 2.3183753490448, 2.3014450073242188, 2.304090738296509, 2.250687837600708, 1.9143822193145752], "val_accuracy": [0.10133333504199982, 0.13433332741260529, 0.15800000727176666, 0.2633333206176758, 0.5083333253860474, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.2773333191871643, 0.33799999952316284]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [3, 4, 8, 4, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 0, 0, 2, 2, 1, 2, 0, 0, 0, 1, 2, 0, 2, 2], [38, 23, 94, 4, 55, 87, 21], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 6, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [2, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 3, 1, 4, 4, 6, 9, 5, 2, 5], [3, 7, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.38257142901420593, "mapping_values": [1, 37, 21, 16, 7, 24, 17, 7, 3, 25, 15, 10, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), alpha), grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(tf.math.negative(tf.math.negative(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(alpha, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.add(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.square(tf.math.add(alpha, beta)))), alpha)), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.516188859939575, 2.4797253608703613, 2.3055155277252197, 2.302696704864502, 2.2880449295043945, 2.203587055206299, 2.2878639698028564, 2.2461981773376465, 2.2655863761901855, 2.3059802055358887, 2.303565740585327], "accuracy": [0.20882314443588257, 0.14700831472873688, 0.10117553919553757, 0.10487385839223862, 0.13247919082641602, 0.16655659675598145, 0.13313961029052734, 0.16893409192562103, 0.14212125539779663, 0.11649715900421143, 0.10434553027153015], "val_loss": [2.3908355236053467, 2.304624557495117, 2.3026864528656006, 2.299645185470581, 2.1279296875, 1.7694669961929321, 2.2563698291778564, 1.8228893280029297, 2.291722059249878, 2.303199291229248, 2.302812099456787], "val_accuracy": [0.09966666996479034, 0.10266666859388351, 0.10100000351667404, 0.09966666996479034, 0.17533333599567413, 0.3813333213329315, 0.12066666781902313, 0.37833333015441895, 0.11366666853427887, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [3, 4, 2, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [67, 23, 94, 68, 69, 87], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 0, 6, 5, 1, 7, 2, 3, 5, 3, 5, 4, 0, 0, 8, 9, 1, 0, 6], [2, 2, 1, 0, 0, 5, 3, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [1, 7, 0, 4, 7, 3, 4, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.2622857093811035, "mapping_values": [1, 30, 16, 14, 4, 9, 5, 4, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.divide_no_nan(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.pow(tf.math.negative(grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(beta, tf.math.square(tf.math.subtract(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.287426710128784, 2.3512983322143555, 2.3432183265686035, 2.2978899478912354, 2.3081910610198975, 2.3042736053466797], "accuracy": [0.2226918488740921, 0.17342491447925568, 0.14898955821990967, 0.20353981852531433, 0.09721305221319199, 0.09391097724437714], "val_loss": [2.223829984664917, 2.3096556663513184, 2.2935914993286133, 2.314629077911377, 2.304684638977051, 2.3030478954315186], "val_accuracy": [0.25866666436195374, 0.10166666656732559, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 2, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 3, 2, 0, 3, 1, 3], [67, 59, 94, 4, 55], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 3, 3, 3, 1, 0, 2, 1, 3, 4, 5], [11, 56, 78, 15, 8], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 8, 3, 3, 2, 5, 7, 6, 6, 1], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.25371429324150085, "mapping_values": [1, 25, 13, 12, 5, 17, 11, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(grad)), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(alpha, grad), tf.math.square(grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.5177907943725586, 2.3040950298309326, 2.332671642303467, 2.302354097366333, 2.5288174152374268, 2.309385061264038, 2.304572582244873], "accuracy": [0.19072777032852173, 0.11174217611551285, 0.15480121970176697, 0.12217672914266586, 0.1554616242647171, 0.09866596013307571, 0.10011887550354004], "val_loss": [2.308683156967163, 2.2548141479492188, 2.3061420917510986, 2.297588586807251, 2.3103232383728027, 2.3041741847991943, 2.3026442527770996], "val_accuracy": [0.10300000011920929, 0.25999999046325684, 0.09700000286102295, 0.10233332961797714, 0.09866666793823242, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 4, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 1, 1, 3, 1, 4, 2], [36, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 4, 8, 3, 4, 2, 6, 3, 1, 7, 2, 0], [3, 4, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.23085714876651764, "mapping_values": [1, 1, 0, 1, 0, 23, 15, 8, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), alpha))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.924384355545044, 2.3033759593963623, 2.3070082664489746, 2.192924976348877, 2.305159330368042, 2.2884573936462402, 2.2766060829162598], "accuracy": [0.19799233973026276, 0.10500594228506088, 0.13908334076404572, 0.2067098170518875, 0.10051512718200684, 0.15031039714813232, 0.15757495164871216], "val_loss": [2.277719497680664, 2.2368013858795166, 2.2786991596221924, 2.3072893619537354, 2.301884412765503, 2.1183083057403564, 2.305044174194336], "val_accuracy": [0.1003333330154419, 0.2266666740179062, 0.13833333551883698, 0.10000000149011612, 0.10000000149011612, 0.218666672706604, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [67, 23, 94, 4, 55, 87], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 7, 2, 9, 5, 9, 0, 6, 0, 6, 8, 9, 1, 0, 6], [3, 4, 1, 3, 1, 3, 1, 0, 2, 1, 3, 4, 5], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.21799999475479126, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.244708776473999, 2.4188356399536133, 2.3041975498199463, 2.3031833171844482, 2.3031327724456787, 2.3027074337005615, 2.302196979522705, 2.350010871887207, 2.3060526847839355, 2.303528308868408, 2.3027141094207764, 2.301326274871826], "accuracy": [0.24382512271404266, 0.10091137140989304, 0.09959053993225098, 0.09602430462837219, 0.0956280529499054, 0.09972262382507324, 0.1010434553027153, 0.18121780455112457, 0.09628847241401672, 0.09906221181154251, 0.1002509593963623, 0.11121384054422379], "val_loss": [3.122978925704956, 2.3049557209014893, 2.302690029144287, 2.302435874938965, 2.302462339401245, 2.3021647930145264, 2.2974393367767334, 2.3082098960876465, 2.303905487060547, 2.3027455806732178, 2.3022663593292236, 2.294440507888794], "val_accuracy": [0.10300000011920929, 0.09933333098888397, 0.09933333098888397, 0.10999999940395355, 0.10100000351667404, 0.09799999743700027, 0.20900000631809235, 0.09866666793823242, 0.09866666793823242, 0.1066666692495346, 0.16733333468437195, 0.1743333339691162]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [2, 4, 8, 0, 1, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0], [67, 23, 94, 98, 55, 87, 21], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 6, 0, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [1, 2, 0, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1, 5, 0, 9, 0], [3, 4, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.20828571915626526, "mapping_values": [1, 22, 12, 10, 7, 21, 15, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(beta, tf.math.square(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.multiply(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3473305702209473, 2.6464762687683105, 2.2805025577545166, 2.303683280944824, 2.3028817176818848, 2.3030900955200195, 2.3027713298797607], "accuracy": [0.17923656105995178, 0.16959451138973236, 0.12930920720100403, 0.09998679161071777, 0.10157178342342377, 0.10421344637870789, 0.10051512718200684], "val_loss": [2.2752764225006104, 2.206845283508301, 2.304687738418579, 2.303070306777954, 2.302286386489868, 2.3000757694244385, 2.302833318710327], "val_accuracy": [0.10266666859388351, 0.20933333039283752, 0.09966666996479034, 0.09933333098888397, 0.10266666859388351, 0.10333333164453506, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 2, 0, 4, 6, 4, 4, 6, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 0, 2, 1, 2, 0, 3, 2, 0, 1, 2, 2], [3, 23, 94, 68, 69, 87], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [7, 9, 6, 8, 4, 7, 9, 3, 5, 9, 5, 2, 1, 3, 4, 2, 2, 2, 6], [3, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 8, 3, 3, 2, 5, 3, 9, 6, 1], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.5098319053649902, 2.272528886795044, 2.307591438293457, 2.304518699645996, 2.3031716346740723, 2.3024539947509766, 2.30318546295166, 2.303476572036743, 2.303046464920044, 2.3032357692718506, 2.3029801845550537], "accuracy": [0.201294407248497, 0.14529123902320862, 0.09932637959718704, 0.09430722147226334, 0.09879804402589798, 0.10289261490106583, 0.09813763201236725, 0.09800554811954498, 0.10077928751707077, 0.09800554811954498, 0.09549596905708313], "val_loss": [2.3175714015960693, 2.3116295337677, 2.3047831058502197, 2.303175926208496, 2.3029046058654785, 2.302521228790283, 2.302584409713745, 2.302687644958496, 2.302779197692871, 2.302741765975952, 2.3027126789093018], "val_accuracy": [0.09966666996479034, 0.09666666388511658, 0.09666666388511658, 0.09700000286102295, 0.09700000286102295, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09666666388511658, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 4, 8, 0, 2, 3, 9, 4, 2, 5, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [33, 93, 43, 4, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 3, 3, 1, 2, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 8, 3, 3, 2, 5, 3, 9, 6, 1], [2, 0, 4, 4, 7, 3, 4, 3, 1, 3], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 7, 4, 3, 4, 2, 2, 0, 5, 2, 3, 1, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.310269355773926, 2.3099944591522217, 2.310763359069824, 2.3104970455169678, 2.3087410926818848, 2.3095452785491943], "accuracy": [0.09245806187391281, 0.09087307006120682, 0.08968432247638702, 0.0878351628780365, 0.09628847241401672, 0.09945846349000931], "val_loss": [2.3087856769561768, 2.308772087097168, 2.3087618350982666, 2.308748483657837, 2.3087375164031982, 2.308725595474243], "val_accuracy": [0.08666666597127914, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]