[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 3, 6, 0, 3, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 1, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.3625714182853699, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 0, 17, 9, 8, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(sigma, grad), sigma))), tf.math.negative(tf.math.multiply(grad, tf.math.sqrt(tf.math.pow(alpha, sigma))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.23439621925354, 2.3255863189697266, 2.495389461517334, 2.28295636177063, 2.4847731590270996, 2.303731679916382, 2.302950620651245, 2.3030292987823486, 2.302980899810791], "accuracy": [0.22705058753490448, 0.2347113937139511, 0.09972262382507324, 0.1282525360584259, 0.13881917297840118, 0.10157178342342377, 0.09826971590518951, 0.09945846349000931, 0.09972262382507324], "val_loss": [2.3282575607299805, 3.4074466228485107, 2.3046867847442627, 1.877988576889038, 2.304232120513916, 2.3027822971343994, 2.302637815475464, 2.302757740020752, 2.302445888519287], "val_accuracy": [0.10266666859388351, 0.0989999994635582, 0.10166666656732559, 0.36133334040641785, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.09866666793823242, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 2, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 4, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [4, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.3140000104904175, "mapping_values": [1, 13, 6, 7, 1, 1, 0, 1, 0, 10, 5, 5, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, tf.math.pow(alpha, grad)))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.307579755783081, 2.4980194568634033, 2.3046538829803467, 2.3031609058380127, 2.302879571914673, 2.302971124649048], "accuracy": [0.2207106053829193, 0.17342491447925568, 0.10077928751707077, 0.09668471664190292, 0.09628847241401672, 0.09840179979801178], "val_loss": [2.216142177581787, 2.305121660232544, 2.3028860092163086, 2.3026649951934814, 2.302560806274414, 2.30259108543396], "val_accuracy": [0.3073333203792572, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 2, 4, 4, 8, 8, 2, 4, 0, 4, 4, 8, 9, 0, 6, 0, 6, 2, 1, 8, 0, 7], [0, 2, 1, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 17, 41, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 3, 6, 0, 3, 8, 4, 0, 4, 2, 6, 2, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.30971428751945496, "mapping_values": [1, 41, 25, 16, 6, 3, 1, 2, 1, 30, 17, 13, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)))))), tf.math.pow(tf.math.negative(tf.math.pow(alpha, tf.math.pow(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.multiply(tf.math.sqrt(alpha), tf.math.pow(tf.math.negative(grad), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(alpha, sigma), grad), tf.math.add(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4205551147460938, 2.2823779582977295, 2.2965991497039795, 2.298598289489746, 2.3732545375823975, 2.3039050102233887, 2.3021209239959717], "accuracy": [0.18993528187274933, 0.15889579057693481, 0.13868708908557892, 0.108440101146698, 0.14410249888896942, 0.10130762308835983, 0.1010434553027153], "val_loss": [2.300570011138916, 2.166966199874878, 2.303083896636963, 2.2348883152008057, 2.304210901260376, 2.302421808242798, 2.298596143722534], "val_accuracy": [0.0989999994635582, 0.3070000112056732, 0.09966666996479034, 0.19166666269302368, 0.09966666996479034, 0.0989999994635582, 0.11233333498239517]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [0, 2, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 4, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [5, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.30485713481903076, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 1, 30, 18, 12, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.pow(alpha, grad), tf.math.sqrt(tf.math.pow(grad, tf.math.square(tf.math.pow(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(grad, alpha)), sigma), tf.math.negative(grad))), sigma), tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5013513565063477, 2.305985689163208, 2.3038787841796875, 2.303107261657715, 2.3028409481048584, 2.301053524017334, 2.2215588092803955, 2.2821414470672607, 2.304222822189331, 2.3035733699798584, 2.301771640777588], "accuracy": [0.18874652683734894, 0.14291374385356903, 0.1018359512090683, 0.09681680053472519, 0.09589222073554993, 0.1138555034995079, 0.201294407248497, 0.2234843522310257, 0.09985470771789551, 0.09998679161071777, 0.10342095047235489], "val_loss": [2.2063992023468018, 2.3036131858825684, 2.302619457244873, 2.302567481994629, 2.301877498626709, 2.29535174369812, 2.2556214332580566, 2.305485248565674, 2.3028745651245117, 2.30233097076416, 2.2957711219787598], "val_accuracy": [0.1899999976158142, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.09799999743700027, 0.31833332777023315, 0.15399999916553497, 0.09833333641290665, 0.0976666659116745, 0.09799999743700027, 0.13366666436195374]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 5, 5, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [0, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 3, 2, 0, 0, 3, 8, 4, 0, 4, 9, 6, 2, 6, 2, 9, 2, 5, 0, 5], [7, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.21657143533229828, "mapping_values": [1, 8, 6, 2, 2, 3, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.sqrt(tf.math.multiply(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.324326276779175, 2.441232919692993, 2.3054070472717285, 2.3022825717926025, 2.3043758869171143, 2.3044471740722656, 2.3033924102783203, 2.303368330001831, 2.3030130863189697], "accuracy": [0.18623696267604828, 0.14357416331768036, 0.09628847241401672, 0.10170386731624603, 0.17804782092571259, 0.09576013684272766, 0.1014397069811821, 0.09787346422672272, 0.09813763201236725], "val_loss": [2.195824146270752, 2.306403398513794, 2.302772045135498, 2.2930400371551514, 2.3042402267456055, 2.3029634952545166, 2.3027844429016113, 2.302560806274414, 2.3025527000427246], "val_accuracy": [0.15333333611488342, 0.10599999874830246, 0.10599999874830246, 0.2160000056028366, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 2, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 4, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [7, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.1697142869234085, "mapping_values": [1, 17, 9, 8, 1, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.pow(tf.math.pow(alpha, alpha), grad), tf.math.sqrt(tf.math.sqrt(alpha))))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6209793090820312, 2.305187702178955, 2.303255558013916, 2.2979319095611572, 2.1534225940704346, 2.4016809463500977, 2.3066980838775635, 2.3041534423828125, 2.3043413162231445], "accuracy": [0.17500990629196167, 0.09311848133802414, 0.10579843819141388, 0.11808215826749802, 0.22361643612384796, 0.13855500519275665, 0.09879804402589798, 0.09800554811954498, 0.0952318087220192], "val_loss": [2.304940938949585, 2.3027849197387695, 2.301903247833252, 2.2868030071258545, 2.3099284172058105, 2.311295747756958, 2.3037030696868896, 2.302957773208618, 2.3030214309692383], "val_accuracy": [0.10199999809265137, 0.10100000351667404, 0.12333333492279053, 0.1733333319425583, 0.09833333641290665, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 5, 6, 8, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 3, 2, 2, 0, 0, 3, 1, 4, 0, 4, 9, 6, 2, 6, 5, 9, 2, 5, 0, 5, 6, 3, 2, 1, 2, 4], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.13542857766151428, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 27, 17, 10, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.negative(grad))), tf.math.multiply(tf.math.subtract(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha)), sigma)))), grad), tf.math.square(sigma)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4342997074127197, 2.6486220359802246, 2.3097662925720215, 2.3043508529663086, 2.3033061027526855, 2.3031139373779297, 2.3031489849090576, 2.303377151489258, 2.30307936668396, 2.3027336597442627, 2.3031859397888184, 2.3032279014587402, 2.303069591522217, 2.302860736846924, 2.302837610244751, 2.302936553955078, 2.30271315574646, 2.302579402923584, 2.3555262088775635], "accuracy": [0.20142649114131927, 0.09959053993225098, 0.09919429570436478, 0.09919429570436478, 0.0940430611371994, 0.09708096832036972, 0.09496764093637466, 0.09206181764602661, 0.09589222073554993, 0.09853387624025345, 0.09668471664190292, 0.09272222965955734, 0.09694888442754745, 0.09906221181154251, 0.09377889335155487, 0.09536388516426086, 0.09826971590518951, 0.10011887550354004, 0.14740456640720367], "val_loss": [4.656075954437256, 2.31088924407959, 2.3038170337677, 2.3027431964874268, 2.3025779724121094, 2.3024749755859375, 2.3024511337280273, 2.302529811859131, 2.3025624752044678, 2.302612066268921, 2.302633762359619, 2.3027074337005615, 2.3027102947235107, 2.3025999069213867, 2.3026227951049805, 2.3027663230895996, 2.302532434463501, 2.3017385005950928, 2.311699628829956], "val_accuracy": [0.09533333033323288, 0.09566666930913925, 0.09566666930913925, 0.10199999809265137, 0.10199999809265137, 0.10100000351667404, 0.10466666519641876, 0.09566666930913925, 0.10466666519641876, 0.10199999809265137, 0.10466666519641876, 0.10566666722297668, 0.09700000286102295, 0.13433332741260529, 0.09700000286102295, 0.09700000286102295, 0.09566666930913925, 0.11699999868869781, 0.10533333569765091]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 2, 0, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [18, 44, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 7, 2, 8, 5, 1, 3, 8, 4, 5, 5, 9, 4, 2, 6, 9, 0, 2, 5, 0, 5], [0, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [57, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 3, 3, 1, 2, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(alpha)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.square(grad)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [348.2355651855469, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19072777032852173, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7716862976.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 1, 1, 1, 1, 2, 1, 2, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 2, 0, 0, 3, 4, 4, 0, 4, 9, 6, 2, 6, 2, 9, 2, 5, 0, 5, 6, 3, 2, 6, 7, 4], [1, 1, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 1, 1, 0, 1, 0, 10, 5, 5, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.pow(tf.math.pow(alpha, alpha), grad), tf.math.sqrt(alpha)))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.negative(grad), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2337.281005859375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1942940205335617, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1107487616.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 2, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 28, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 3, 1, 0, 0, 3, 8, 4, 0, 4, 9, 6, 2, 6, 2, 9, 2, 5, 0, 5], [7, 1, 4, 0, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.09057142585515976, "mapping_values": [1, 17, 9, 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), alpha))), tf.math.pow(alpha, tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3095526695251465, 2.3089237213134766, 2.309959888458252, 2.3093366622924805, 2.3107998371124268, 2.3101725578308105], "accuracy": [0.0882314071059227, 0.09391097724437714, 0.08651433140039444, 0.09074098616838455, 0.08915598690509796, 0.09060890227556229], "val_loss": [2.3091936111450195, 2.3091280460357666, 2.3090648651123047, 2.3090028762817383, 2.3089258670806885, 2.308861255645752], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]