[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 3, 6, 4, 1, 8, 1, 3, 1, 8, 2, 9, 2, 3, 0, 2, 0, 6, 0, 6, 2, 4, 8, 0], [2, 3, 0, 0, 0, 0, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [26, 94]], "fitness": -0.7705714106559753, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.305419445037842, 2.2919766902923584, 2.280318021774292, 2.2698042392730713, 2.257134199142456, 2.2425057888031006, 2.227384567260742, 2.2066450119018555, 2.182811737060547, 2.153303861618042, 2.1196186542510986, 2.0792322158813477, 2.02453875541687, 1.9624128341674805, 1.8889529705047607, 1.8087573051452637, 1.71723210811615, 1.6278692483901978, 1.537279725074768, 1.462131142616272, 1.3981496095657349, 1.3281077146530151, 1.2761878967285156, 1.2363899946212769, 1.2004560232162476, 1.1637455224990845, 1.1344032287597656, 1.0986018180847168, 1.073797345161438, 1.060943603515625, 1.0411471128463745, 1.0051302909851074, 0.9995508193969727, 0.9780228734016418, 0.9712947607040405, 0.9557267427444458, 0.9446949362754822, 0.9251968264579773, 0.9117719531059265, 0.9081678986549377, 0.9052979946136475, 0.8944486379623413, 0.8801504969596863, 0.8683421015739441, 0.8641177415847778, 0.8551079034805298, 0.8527389764785767, 0.848581075668335, 0.837043821811676, 0.8336020112037659, 0.8257298469543457, 0.8226925134658813, 0.8125874996185303, 0.8132041692733765, 0.8009553551673889, 0.7930906414985657, 0.8001072406768799, 0.7930935621261597, 0.7862573266029358, 0.7752811312675476, 0.775460958480835, 0.7713685035705566, 0.7708501219749451, 0.7615919709205627, 0.7622483968734741, 0.7607933878898621, 0.7495267391204834, 0.7503691911697388, 0.7533759474754333, 0.7451158761978149, 0.7462321519851685, 0.7419061660766602, 0.7374375462532043, 0.728940486907959, 0.7297289967536926, 0.7208468914031982, 0.7294182777404785, 0.7252002358436584, 0.723698616027832, 0.7199693918228149, 0.7146852016448975, 0.7118427157402039, 0.7043178677558899, 0.7141217589378357, 0.7043027877807617, 0.7020305395126343, 0.7013019323348999, 0.703738808631897, 0.694126546382904, 0.6934147477149963, 0.6903599500656128, 0.6869218945503235, 0.6869493722915649, 0.6888412833213806, 0.6872804760932922, 0.678165078163147, 0.6734154224395752, 0.6822048425674438], "accuracy": [0.1022322028875351, 0.12376172095537186, 0.1492537260055542, 0.18531237542629242, 0.22123894095420837, 0.24184387922286987, 0.2794875204563141, 0.3073570132255554, 0.3358869254589081, 0.3657376766204834, 0.3715493381023407, 0.3877955377101898, 0.4127592146396637, 0.42609959840774536, 0.4493461847305298, 0.45608243346214294, 0.4803856909275055, 0.4951789677143097, 0.5108968615531921, 0.5295205116271973, 0.5342755317687988, 0.5584467053413391, 0.5724474787712097, 0.5778629183769226, 0.5828820466995239, 0.5915995240211487, 0.6086382269859314, 0.6189407110214233, 0.6197332143783569, 0.628582775592804, 0.6390172839164734, 0.6469422578811646, 0.6465460062026978, 0.6516972780227661, 0.6579051613807678, 0.6655659675598145, 0.6619997620582581, 0.6704530715942383, 0.6733588576316833, 0.6711134314537048, 0.67666095495224, 0.6803592443466187, 0.6832650899887085, 0.6870955228805542, 0.6881521344184875, 0.695813000202179, 0.6963412761688232, 0.6926429867744446, 0.6960771083831787, 0.7055870890617371, 0.7061154246330261, 0.7033417224884033, 0.7041342258453369, 0.709021270275116, 0.7160216569900513, 0.7080966830253601, 0.7100779414176941, 0.7103421092033386, 0.7195879220962524, 0.7214370369911194, 0.7218332886695862, 0.7257958054542542, 0.7189275026321411, 0.7268524765968323, 0.722229540348053, 0.7288337349891663, 0.7279091477394104, 0.7223616242408752, 0.7259278893470764, 0.7318716049194336, 0.7323999404907227, 0.7333245277404785, 0.7375511527061462, 0.7364945411682129, 0.7375511527061462, 0.7396644949913025, 0.7308149337768555, 0.7358341217041016, 0.7375511527061462, 0.7423061728477478, 0.7427024245262146, 0.739928662776947, 0.7432307600975037, 0.7384757399559021, 0.741909921169281, 0.7461365461349487, 0.7409853339195251, 0.7453441023826599, 0.7454761862754822, 0.7424382567405701, 0.744419515132904, 0.7489103078842163, 0.7470611333847046, 0.7479857206344604, 0.748249888420105, 0.7490423917770386, 0.754589855670929, 0.7523444890975952], "val_loss": [2.296022415161133, 2.2835373878479004, 2.271170139312744, 2.258291244506836, 2.2439348697662354, 2.227165699005127, 2.207843780517578, 2.184446096420288, 2.1559574604034424, 2.1211514472961426, 2.0782411098480225, 2.026209592819214, 1.9623770713806152, 1.8854176998138428, 1.7960481643676758, 1.6978040933609009, 1.592434287071228, 1.487040400505066, 1.386698603630066, 1.2974185943603516, 1.2206050157546997, 1.1548502445220947, 1.0982539653778076, 1.0516808032989502, 1.012019395828247, 0.9771720170974731, 0.9471666812896729, 0.9197194576263428, 0.8954781889915466, 0.8764062523841858, 0.8578377366065979, 0.8400900959968567, 0.8245664834976196, 0.8105230927467346, 0.7989959120750427, 0.7861690521240234, 0.7768753170967102, 0.7646713852882385, 0.7550526261329651, 0.7468261122703552, 0.7382358312606812, 0.7310527563095093, 0.7254915237426758, 0.7149314880371094, 0.7083733677864075, 0.7036344408988953, 0.6985414028167725, 0.6943807005882263, 0.6874486207962036, 0.6811614632606506, 0.6762645840644836, 0.6734580993652344, 0.668462872505188, 0.6642684936523438, 0.6601867079734802, 0.6565237641334534, 0.653504490852356, 0.6501444578170776, 0.6460860967636108, 0.6399994492530823, 0.6368984580039978, 0.6335027813911438, 0.6319371461868286, 0.6285632848739624, 0.6245542168617249, 0.6226081848144531, 0.6201677918434143, 0.618139922618866, 0.6144610047340393, 0.6116902828216553, 0.6109546422958374, 0.6066870093345642, 0.6050068140029907, 0.6031169295310974, 0.5998230576515198, 0.5967141389846802, 0.5963480472564697, 0.5936359167098999, 0.5953541398048401, 0.5904713273048401, 0.5888432860374451, 0.5852099061012268, 0.583036482334137, 0.5825327038764954, 0.579617977142334, 0.578212559223175, 0.5764371156692505, 0.5764203071594238, 0.5733395218849182, 0.571259617805481, 0.5705593228340149, 0.569158136844635, 0.5675585269927979, 0.5660465955734253, 0.5659879446029663, 0.5631617903709412, 0.562208890914917, 0.5595237612724304], "val_accuracy": [0.11366666853427887, 0.1550000011920929, 0.22333332896232605, 0.32199999690055847, 0.398333340883255, 0.43033334612846375, 0.44200000166893005, 0.4506666660308838, 0.46533334255218506, 0.4846666753292084, 0.5073333382606506, 0.5296666622161865, 0.5496666431427002, 0.5740000009536743, 0.5866666436195374, 0.6053333282470703, 0.6169999837875366, 0.628333330154419, 0.6336666941642761, 0.6453333497047424, 0.6510000228881836, 0.6556666493415833, 0.6620000004768372, 0.6706666946411133, 0.6736666560173035, 0.6783333420753479, 0.6869999766349792, 0.6890000104904175, 0.6956666707992554, 0.6996666789054871, 0.7026666402816772, 0.7073333263397217, 0.7139999866485596, 0.715666651725769, 0.7160000205039978, 0.7206666469573975, 0.7246666550636292, 0.7269999980926514, 0.7319999933242798, 0.7316666841506958, 0.734000027179718, 0.7383333444595337, 0.7450000047683716, 0.7423333525657654, 0.746666669845581, 0.7463333606719971, 0.7490000128746033, 0.7509999871253967, 0.7509999871253967, 0.7516666650772095, 0.7556666731834412, 0.7549999952316284, 0.7576666474342346, 0.7553333044052124, 0.7566666603088379, 0.7580000162124634, 0.7583333253860474, 0.7633333206176758, 0.7613333463668823, 0.7643333077430725, 0.7663333415985107, 0.7680000066757202, 0.7663333415985107, 0.7670000195503235, 0.7693333625793457, 0.7710000276565552, 0.7706666588783264, 0.7706666588783264, 0.7703333497047424, 0.7736666798591614, 0.7743333578109741, 0.7739999890327454, 0.7733333110809326, 0.7746666669845581, 0.7730000019073486, 0.7733333110809326, 0.7756666541099548, 0.7763333320617676, 0.7753333449363708, 0.777999997138977, 0.7766666412353516, 0.7773333191871643, 0.7796666622161865, 0.7823333144187927, 0.781333327293396, 0.7826666831970215, 0.7806666493415833, 0.7823333144187927, 0.784333348274231, 0.7853333353996277, 0.7856666445732117, 0.7829999923706055, 0.7870000004768372, 0.7863333225250244, 0.7839999794960022, 0.7863333225250244, 0.7829999923706055, 0.7866666913032532]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 6, 4, 1, 8, 1, 9, 1, 9, 2, 9, 2, 3, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 3, 0, 0, 0, 0, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [26, 94]], "fitness": -0.7611428499221802, "mapping_values": [1, 9, 4, 5, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30507493019104, 2.2923576831817627, 2.280775785446167, 2.270871639251709, 2.2569780349731445, 2.243415117263794, 2.229408025741577, 2.208601474761963, 2.185736894607544, 2.1603314876556396, 2.125256299972534, 2.081655263900757, 2.0361623764038086, 1.9746582508087158, 1.9042565822601318, 1.825139045715332, 1.7317262887954712, 1.6406629085540771, 1.5568751096725464, 1.4784657955169678, 1.40312659740448, 1.347259521484375, 1.292837142944336, 1.254253625869751, 1.2080943584442139, 1.171626091003418, 1.1415927410125732, 1.1126347780227661, 1.0949712991714478, 1.0496834516525269, 1.0431852340698242, 1.025294542312622, 1.0006786584854126, 0.993970513343811, 0.9731942415237427, 0.9522171020507812, 0.952224612236023, 0.9459880590438843, 0.9165893197059631, 0.9164172410964966, 0.9076676964759827, 0.9057678580284119, 0.8912618160247803, 0.8885631561279297, 0.8769702315330505, 0.8723525404930115, 0.8673009276390076, 0.8450051546096802, 0.8529359698295593, 0.8485816717147827, 0.8405927419662476, 0.8305111527442932, 0.8241990208625793, 0.8173093795776367, 0.8218624591827393, 0.8029237985610962, 0.8013424277305603, 0.8009671568870544, 0.794416069984436, 0.8009399771690369, 0.7772871255874634, 0.7802897691726685, 0.7872627973556519, 0.7806376814842224, 0.7750565409660339, 0.7715804576873779, 0.7663397789001465, 0.7577325701713562, 0.7627620697021484, 0.7579322457313538, 0.7545406818389893, 0.7464640736579895, 0.7574336528778076, 0.7523286938667297, 0.744691789150238, 0.725814700126648, 0.7346307635307312, 0.7363095283508301, 0.7372355461120605, 0.7288323044776917, 0.7264148592948914, 0.7198989391326904, 0.7206174731254578, 0.7172579169273376, 0.7193874716758728, 0.7290867567062378, 0.7151201963424683, 0.7083608508110046], "accuracy": [0.10130762308835983, 0.1162329912185669, 0.15717871487140656, 0.17791573703289032, 0.21555937826633453, 0.25399550795555115, 0.26984545588493347, 0.30405494570732117, 0.3288865387439728, 0.3520010709762573, 0.3741909861564636, 0.3929467797279358, 0.3949280083179474, 0.42425042390823364, 0.4419495463371277, 0.4567428231239319, 0.4748381972312927, 0.49253731966018677, 0.5148593187332153, 0.5223880410194397, 0.5456346869468689, 0.548540472984314, 0.5630695819854736, 0.568749189376831, 0.5872408151626587, 0.5952978730201721, 0.6061286330223083, 0.613789439201355, 0.6126006841659546, 0.6333377361297607, 0.6318848133087158, 0.6342623233795166, 0.644300639629364, 0.6450931429862976, 0.6468101739883423, 0.6621318459510803, 0.6588297486305237, 0.6643772125244141, 0.672170102596283, 0.6748117804527283, 0.6757363677024841, 0.6748117804527283, 0.6775855422019958, 0.6773213744163513, 0.6833971738815308, 0.6880200505256653, 0.6890767216682434, 0.6977941989898682, 0.6870955228805542, 0.6933034062385559, 0.691850483417511, 0.6992471218109131, 0.694360077381134, 0.7028133869171143, 0.7014925479888916, 0.7107383608818054, 0.707040011882782, 0.7041342258453369, 0.7084929347038269, 0.7041342258453369, 0.7185312509536743, 0.7127195596694946, 0.7112666964530945, 0.7197200059890747, 0.7169462442398071, 0.7145687341690063, 0.7170783281326294, 0.7264562249183655, 0.7239466309547424, 0.7218332886695862, 0.7199841737747192, 0.7255316376686096, 0.7224937081336975, 0.7251353859901428, 0.7298903465270996, 0.7320036888122559, 0.7281733155250549, 0.7327961921691895, 0.7294940948486328, 0.7294940948486328, 0.7360982894897461, 0.737022876739502, 0.7342491149902344, 0.7341170310974121, 0.7346453666687012, 0.7288337349891663, 0.7367587089538574, 0.7382115721702576], "val_loss": [2.29551362991333, 2.283057451248169, 2.2708702087402344, 2.258124351501465, 2.2439205646514893, 2.2276077270507812, 2.2088139057159424, 2.1858534812927246, 2.158257007598877, 2.1247847080230713, 2.083531618118286, 2.0319864749908447, 1.9702051877975464, 1.89485502243042, 1.8072099685668945, 1.7090027332305908, 1.6026215553283691, 1.496372938156128, 1.3947944641113281, 1.3034920692443848, 1.224203109741211, 1.1574910879135132, 1.1009632349014282, 1.0556223392486572, 1.0153625011444092, 0.9807960391044617, 0.9523499608039856, 0.9250136613845825, 0.9028233289718628, 0.8819238543510437, 0.8656546473503113, 0.8494719862937927, 0.8344283103942871, 0.8227089643478394, 0.8089638948440552, 0.7978792190551758, 0.7900569438934326, 0.7802658677101135, 0.7706996202468872, 0.7616915702819824, 0.7544437050819397, 0.7473320960998535, 0.7409801483154297, 0.7335960268974304, 0.7271133065223694, 0.7214881181716919, 0.7165095806121826, 0.711510419845581, 0.7055187225341797, 0.7015588283538818, 0.6983655691146851, 0.6924451589584351, 0.6882581114768982, 0.6844504475593567, 0.679775059223175, 0.6751928329467773, 0.6725407242774963, 0.670199453830719, 0.6660305857658386, 0.6633752584457397, 0.6588823795318604, 0.6565752625465393, 0.6545770764350891, 0.6504736542701721, 0.6481442451477051, 0.643757164478302, 0.6425812244415283, 0.63837069272995, 0.6362836360931396, 0.6346036195755005, 0.6320847272872925, 0.6317786574363708, 0.6271311044692993, 0.6261692047119141, 0.6240410804748535, 0.6216519474983215, 0.6191900372505188, 0.6164155006408691, 0.6154587268829346, 0.6143359541893005, 0.6122550368309021, 0.6101651191711426, 0.606770932674408, 0.6051696538925171, 0.6043834090232849, 0.6034125685691833, 0.6006050705909729, 0.5976043343544006], "val_accuracy": [0.11599999666213989, 0.16466666758060455, 0.23466666042804718, 0.31333333253860474, 0.39666667580604553, 0.43299999833106995, 0.45500001311302185, 0.46966665983200073, 0.4779999852180481, 0.5070000290870667, 0.5256666541099548, 0.5483333468437195, 0.5740000009536743, 0.5883333086967468, 0.6100000143051147, 0.6233333349227905, 0.6353333592414856, 0.6423333287239075, 0.6520000100135803, 0.6636666655540466, 0.6679999828338623, 0.6729999780654907, 0.6790000200271606, 0.6786666512489319, 0.6850000023841858, 0.6923333406448364, 0.6923333406448364, 0.7006666660308838, 0.7039999961853027, 0.7086666822433472, 0.7116666436195374, 0.7120000123977661, 0.7163333296775818, 0.7173333168029785, 0.721666693687439, 0.7229999899864197, 0.7266666889190674, 0.7293333411216736, 0.7323333621025085, 0.7329999804496765, 0.7319999933242798, 0.734333336353302, 0.734666645526886, 0.7383333444595337, 0.7390000224113464, 0.7403333187103271, 0.7413333058357239, 0.7443333268165588, 0.7440000176429749, 0.7483333349227905, 0.7480000257492065, 0.7509999871253967, 0.7536666393280029, 0.7516666650772095, 0.7543333172798157, 0.7556666731834412, 0.7570000290870667, 0.7573333382606506, 0.7599999904632568, 0.7599999904632568, 0.7613333463668823, 0.7643333077430725, 0.7636666893959045, 0.7643333077430725, 0.7649999856948853, 0.7639999985694885, 0.7663333415985107, 0.7666666507720947, 0.7680000066757202, 0.7696666717529297, 0.7680000066757202, 0.7703333497047424, 0.7723333239555359, 0.7710000276565552, 0.7730000019073486, 0.7726666927337646, 0.7723333239555359, 0.7770000100135803, 0.7756666541099548, 0.7753333449363708, 0.7776666879653931, 0.7756666541099548, 0.7806666493415833, 0.7770000100135803, 0.7806666493415833, 0.7799999713897705, 0.7803333401679993, 0.7803333401679993]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 6, 4, 1, 8, 1, 9, 1, 2, 2, 9, 2, 3, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [0, 3, 1, 2, 0, 0, 1, 1, 2, 2, 1, 0, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [50, 94]], "fitness": -0.4951428472995758, "mapping_values": [1, 30, 18, 12, 6, 1, 0, 1, 1, 3, 1, 2, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)), grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), grad), tf.math.negative(tf.math.divide_no_nan(grad, alpha)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2376744747161865, 2.5599544048309326, 2.0649542808532715, 1.9960941076278687, 2.162402629852295, 2.1649112701416016, 2.238543748855591], "accuracy": [0.2728833854198456, 0.21423853933811188, 0.27460044622421265, 0.31805574893951416, 0.21371020376682281, 0.22823932766914368, 0.16563200950622559], "val_loss": [2.006959915161133, 1.6209810972213745, 1.841221570968628, 1.7825779914855957, 2.3003664016723633, 2.314993381500244, 1.2181129455566406], "val_accuracy": [0.3876666724681854, 0.512333333492279, 0.4476666748523712, 0.47066667675971985, 0.09966666996479034, 0.09799999743700027, 0.49900001287460327]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 6, 8, 1, 8, 1, 3, 3, 2, 2, 9, 2, 1, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [1, 3, 1, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 92, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [50, 94]], "fitness": -0.4342857003211975, "mapping_values": [1, 37, 22, 15, 4, 1, 0, 1, 0, 3, 1, 2, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.sqrt(grad))), tf.math.subtract(tf.math.multiply(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)), grad), tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad))))), grad)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(grad, grad))), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.274984121322632, 2.3529937267303467, 2.339325428009033, 2.214651584625244, 2.1009254455566406, 1.7614740133285522, 1.8452410697937012, 2.1130967140197754, 2.2982585430145264, 2.0908169746398926, 2.3982667922973633], "accuracy": [0.24276845157146454, 0.2218993455171585, 0.189274862408638, 0.17870822548866272, 0.25201427936553955, 0.3743230700492859, 0.33179235458374023, 0.2670717239379883, 0.1220446452498436, 0.2611279785633087, 0.11121384054422379], "val_loss": [2.297748327255249, 2.061694622039795, 1.9700793027877808, 2.292593002319336, 1.5172287225723267, 1.5459604263305664, 1.7296935319900513, 2.308494806289673, 2.2409615516662598, 2.271782636642456, 2.300071954727173], "val_accuracy": [0.10566666722297668, 0.3553333282470703, 0.3643333315849304, 0.10633333027362823, 0.4073333442211151, 0.43066665530204773, 0.3733333349227905, 0.09733333438634872, 0.17599999904632568, 0.1743333339691162, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 9, 5, 9, 3, 1, 8, 0, 1, 2, 2, 5, 3, 4, 0, 2, 0, 6, 0, 6, 3, 5, 2, 0], [1, 3, 0, 2, 0, 0, 1, 1, 2, 2, 1, 0, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 43, 55, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 90, 80, 41, 8, 43, 2], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [26, 94]], "fitness": -0.28942856192588806, "mapping_values": [1, 4, 4, 0, 2, 1, 0, 1, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.multiply(tf.math.divide_no_nan(grad, grad), grad)), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2886781692504883, 2.5076417922973633, 2.283742666244507, 2.2650513648986816, 2.3046042919158936, 2.302687168121338], "accuracy": [0.22916391491889954, 0.1402720957994461, 0.1294412910938263, 0.16629242897033691, 0.09906221181154251, 0.10236428678035736], "val_loss": [2.149036407470703, 2.3046975135803223, 2.13576078414917, 2.305335521697998, 2.3025481700897217, 2.3010969161987305], "val_accuracy": [0.29899999499320984, 0.10499999672174454, 0.28299999237060547, 0.1003333330154419, 0.09833333641290665, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 9, 3, 4, 8, 0, 1, 2, 2, 5, 3, 4, 0, 2, 0, 6, 0, 6, 3, 5, 2, 0], [1, 1, 1, 2, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 43, 55, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 4, 3, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 90, 80, 41, 8, 43, 2], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 5, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [1, 4, 5, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [26, 94]], "fitness": -0.21085713803768158, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 1, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.subtract(alpha, alpha)), alpha), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.square(tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4422190189361572, 2.2365028858184814, 2.2183034420013428, 2.29999041557312, 2.844982624053955, 2.3044023513793945, 2.3033111095428467, 2.3029472827911377, 2.302920341491699], "accuracy": [0.18795403838157654, 0.1764628142118454, 0.18636904656887054, 0.1138555034995079, 0.17500990629196167, 0.09800554811954498, 0.09708096832036972, 0.09536388516426086, 0.09589222073554993], "val_loss": [2.295297861099243, 2.305518627166748, 2.303784132003784, 2.226083278656006, 2.304348945617676, 2.3028035163879395, 2.3025429248809814, 2.30263352394104, 2.3026115894317627], "val_accuracy": [0.14166666567325592, 0.10233332961797714, 0.09933333098888397, 0.2029999941587448, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 6, 4, 1, 8, 3, 3, 1, 2, 2, 9, 2, 3, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 3, 0, 0, 0, 0, 1, 2, 1, 1, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [14, 43, 55, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 90, 80, 41, 8, 43, 2], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [6, 9, 5, 4], [5, 0, 4], [4, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 22, 16, 7, 1, 0, 1, 1, 3, 1, 2, 0, 3, 2, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.subtract(tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), grad)))), tf.math.divide_no_nan(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad)), alpha)), grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 3, 6, 4, 1, 8, 1, 3, 1, 8, 2, 9, 2, 3, 0, 2, 0, 6, 0, 6, 2, 4, 8, 0], [2, 3, 0, 0, 0, 0, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [9, 9, 5, 4], [0, 0, 4], [26, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034980297088623, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 3, 3, 4, 1, 5, 1, 3, 1, 8, 2, 9, 2, 3, 0, 2, 8, 6, 0, 6, 2, 1, 8, 0], [1, 3, 0, 0, 2, 0, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [4, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [4, 5, 5, 4], [3, 0, 4], [26, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 18, 13, 5, 2, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.square(alpha), tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.math.sqrt(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), alpha), grad)), alpha), tf.math.divide_no_nan(grad, grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.pow(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [5, 0, 6, 8, 1, 8, 1, 3, 4, 8, 2, 9, 2, 3, 0, 2, 0, 6, 0, 6, 2, 4, 8, 0], [1, 3, 0, 0, 0, 2, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [1, 2, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [0, 94]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 1, 8, 4, 4, 0, 3, 2, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(alpha, tf.math.negative(beta)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.3106369972229004, 2.309577703475952, 2.309011697769165, 2.3095991611480713, 2.3106191158294678, 2.309454917907715], "accuracy": [0.09602430462837219, 0.09549596905708313, 0.09536388516426086, 0.09576013684272766, 0.09391097724437714, 0.09325055778026581], "val_loss": [2.308777093887329, 2.308777093887329, 2.308777093887329, 2.308777093887329, 2.308777093887329, 2.308777093887329], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]