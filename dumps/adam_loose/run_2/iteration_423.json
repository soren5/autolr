[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8277142643928528, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 9, 7, 2, 2, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1889708042144775, 2.5099761486053467, 2.030449151992798, 1.967474102973938, 1.8761019706726074, 2.1950976848602295, 2.228670358657837, 1.8608734607696533, 1.7748326063156128, 1.5040788650512695, 1.1510151624679565, 1.0192887783050537, 1.0386507511138916, 0.898210883140564, 0.8457018733024597, 0.7976824045181274, 0.7439359426498413, 0.7236150503158569, 0.6718272566795349, 0.6546600461006165, 0.6386069059371948, 0.6775270104408264, 0.5918020606040955, 0.5954957604408264, 0.5783220529556274, 0.5631568431854248, 0.5503460764884949, 0.5519706606864929, 0.5182627439498901, 0.5160504579544067, 0.49394288659095764, 0.538840651512146, 0.5092889666557312, 0.46823129057884216, 0.47697895765304565, 0.4801543354988098, 0.45632705092430115, 0.4490094780921936, 0.4223456382751465, 0.4521123766899109, 0.43734636902809143, 0.4189743995666504, 0.41490572690963745, 0.4001128375530243, 0.41352972388267517, 0.422695130109787, 0.4090270400047302, 0.3879171311855316, 0.4092472791671753], "accuracy": [0.2673358917236328, 0.21740853786468506, 0.29084664583206177, 0.3413023352622986, 0.4021925628185272, 0.19957733154296875, 0.228899747133255, 0.3603222966194153, 0.3796063959598541, 0.4859331548213959, 0.5778629183769226, 0.6318848133087158, 0.6250165104866028, 0.6622639298439026, 0.6812838315963745, 0.694360077381134, 0.7276449799537659, 0.7284374833106995, 0.7490423917770386, 0.7497028112411499, 0.7561748623847961, 0.7477215528488159, 0.7771760821342468, 0.778761088848114, 0.7833839654922485, 0.7864218950271606, 0.7928939461708069, 0.7954035401344299, 0.802271842956543, 0.8104609847068787, 0.816008448600769, 0.7981772422790527, 0.802800178527832, 0.8214238286018372, 0.8241975903511047, 0.817989706993103, 0.8278959393501282, 0.8323867321014404, 0.8401796221733093, 0.82683926820755, 0.837537944316864, 0.8408400416374207, 0.8430854678153992, 0.8486329317092896, 0.846387505531311, 0.8397833704948425, 0.8475762605667114, 0.8535200357437134, 0.8467837572097778], "val_loss": [2.2909321784973145, 2.285609006881714, 2.2949206829071045, 1.7729896306991577, 2.168456792831421, 2.2375357151031494, 2.0628879070281982, 2.226397752761841, 1.1652573347091675, 1.1180819272994995, 0.8659031391143799, 0.891325831413269, 0.7295677661895752, 0.7189177870750427, 0.6692060828208923, 0.6954512596130371, 0.6031680703163147, 0.5606769323348999, 0.613900363445282, 0.5799086093902588, 0.6215813159942627, 0.5568563342094421, 0.4990181624889374, 0.4893112778663635, 0.5527333617210388, 0.5337754487991333, 0.5836697816848755, 0.4885517656803131, 0.5078241229057312, 0.4707689881324768, 0.48501455783843994, 0.4954592287540436, 0.4533625543117523, 0.46026429533958435, 0.42198362946510315, 0.4181836247444153, 0.4339583218097687, 0.4155321717262268, 0.4476568102836609, 0.41085612773895264, 0.3985206186771393, 0.41102245450019836, 0.4057956635951996, 0.39610710740089417, 0.41017046570777893, 0.4579894244670868, 0.3886970281600952, 0.4318046569824219, 0.3965124189853668], "val_accuracy": [0.10066666454076767, 0.17000000178813934, 0.10599999874830246, 0.29633334279060364, 0.17599999904632568, 0.1236666664481163, 0.25999999046325684, 0.19066666066646576, 0.5533333420753479, 0.578000009059906, 0.7093333601951599, 0.6639999747276306, 0.718999981880188, 0.7046666741371155, 0.7206666469573975, 0.7236666679382324, 0.7716666460037231, 0.7760000228881836, 0.765999972820282, 0.7526666522026062, 0.7649999856948853, 0.7639999985694885, 0.8083333373069763, 0.8096666932106018, 0.7773333191871643, 0.7743333578109741, 0.7486666440963745, 0.8100000023841858, 0.8019999861717224, 0.8186666369438171, 0.8100000023841858, 0.7913333177566528, 0.8306666612625122, 0.824999988079071, 0.8476666808128357, 0.8473333120346069, 0.8393333554267883, 0.8473333120346069, 0.8360000252723694, 0.8486666679382324, 0.8550000190734863, 0.8443333506584167, 0.8546666502952576, 0.8600000143051147, 0.8513333201408386, 0.8339999914169312, 0.8573333621025085, 0.8343333601951599, 0.8506666421890259]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 6, 4, 1, 5, 1, 5, 1, 8, 6, 2, 2, 3, 3, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 1, 0, 1, 2, 0, 2, 1, 1, 2, 0, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 45, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 0, 6, 0, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8157142996788025, "mapping_values": [1, 14, 7, 7, 1, 1, 0, 1, 0, 4, 2, 2, 0, 3, 1, 2, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.pow(grad, alpha), tf.math.subtract(tf.math.square(tf.math.subtract(grad, alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2044310569763184, 2.1599552631378174, 2.1452293395996094, 1.878645420074463, 1.4023348093032837, 0.9912227392196655, 0.7933753728866577, 0.7080039978027344, 0.6833459734916687, 0.6655669808387756, 0.610910952091217, 0.6086769700050354, 0.5934633016586304, 0.5864028334617615, 0.5818390846252441, 0.5623781085014343, 0.5413192510604858, 0.5407607555389404, 0.5273444652557373, 0.512145459651947, 0.5220868587493896, 0.50714510679245, 0.5016088485717773, 0.5055509209632874, 0.48357853293418884, 0.47419577836990356, 0.48031121492385864, 0.4615907669067383, 0.4780729115009308, 0.4491758942604065, 0.4412003755569458, 0.41958656907081604, 0.46332404017448425, 0.43015816807746887, 0.4229139983654022, 0.41626104712486267, 0.4048795700073242, 0.3967215418815613, 0.41719377040863037, 0.4115466773509979], "accuracy": [0.27605336904525757, 0.25122177600860596, 0.2915070652961731, 0.3671905994415283, 0.5172368288040161, 0.629111111164093, 0.6940959095954895, 0.7304186820983887, 0.7461365461349487, 0.7485140562057495, 0.7668735980987549, 0.7718927264213562, 0.7759873270988464, 0.7771760821342468, 0.7808743715286255, 0.7931581139564514, 0.7886672616004944, 0.7948752045631409, 0.8038568496704102, 0.8103289008140564, 0.800818920135498, 0.8092722296714783, 0.8125742673873901, 0.8076872229576111, 0.817461371421814, 0.8208954930305481, 0.819970965385437, 0.8203672170639038, 0.8207634687423706, 0.8350284099578857, 0.8334434032440186, 0.8426892161369324, 0.8252542614936829, 0.8388587832450867, 0.8405758738517761, 0.8391229510307312, 0.8485008478164673, 0.8512746095657349, 0.8485008478164673, 0.8407079577445984], "val_loss": [2.236689567565918, 1.9250590801239014, 2.229626417160034, 1.6041450500488281, 1.0677931308746338, 0.7733373045921326, 0.6684767007827759, 0.6653505563735962, 0.6392470598220825, 0.5549761652946472, 0.5994133949279785, 0.5924010276794434, 0.5402029752731323, 0.5959614515304565, 0.4951722025871277, 0.5007484555244446, 0.5614821910858154, 0.5045665502548218, 0.5155905485153198, 0.5223204493522644, 0.46982699632644653, 0.44097477197647095, 0.5297317504882812, 0.46765249967575073, 0.4550148546695709, 0.4502796232700348, 0.454694539308548, 0.46830061078071594, 0.45859819650650024, 0.4224315583705902, 0.44448819756507874, 0.4528948962688446, 0.4499511420726776, 0.4650554955005646, 0.41396602988243103, 0.41644132137298584, 0.42603519558906555, 0.4413454532623291, 0.47407129406929016, 0.42481696605682373], "val_accuracy": [0.28200000524520874, 0.43799999356269836, 0.2696666717529297, 0.4606666564941406, 0.5613333582878113, 0.6996666789054871, 0.7210000157356262, 0.7229999899864197, 0.7483333349227905, 0.7820000052452087, 0.7680000066757202, 0.7663333415985107, 0.7836666703224182, 0.7633333206176758, 0.8130000233650208, 0.8056666851043701, 0.7766666412353516, 0.8140000104904175, 0.793666660785675, 0.7873333096504211, 0.8236666917800903, 0.8349999785423279, 0.7903333306312561, 0.8209999799728394, 0.8273333311080933, 0.8360000252723694, 0.8289999961853027, 0.8193333148956299, 0.8316666483879089, 0.8453333377838135, 0.8339999914169312, 0.8330000042915344, 0.8296666741371155, 0.8136666417121887, 0.8486666679382324, 0.8426666855812073, 0.8483333587646484, 0.8403333425521851, 0.8096666932106018, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 9, 1, 5, 1, 8, 8, 2, 2, 3, 0, 2, 0, 3, 0, 2, 2, 0, 3, 0], [1, 2, 1, 1, 0, 0, 1, 2, 0, 2, 0, 1, 2, 0, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [79, 90, 9, 81, 75, 18, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [71, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 4, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 52, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.33714285492897034, "mapping_values": [1, 18, 11, 7, 3, 1, 0, 1, 1, 12, 8, 4, 1, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.pow(alpha, tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.subtract(tf.math.square(alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(grad, grad))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3655800819396973, 2.073546886444092, 2.252481460571289, 2.355050802230835, 2.286722421646118, 2.404423236846924, 2.310401201248169], "accuracy": [0.26641130447387695, 0.25716549158096313, 0.23986263573169708, 0.12521463632583618, 0.14159291982650757, 0.2250693440437317, 0.12112006545066833], "val_loss": [2.3496198654174805, 1.98579740524292, 2.484731674194336, 2.301042079925537, 2.1582021713256836, 2.2355401515960693, 2.3024609088897705], "val_accuracy": [0.21533332765102386, 0.3370000123977661, 0.2666666805744171, 0.10066666454076767, 0.19733333587646484, 0.26466667652130127, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 1, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 10, 9, 21, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 2, 4], [50, 94]], "fitness": -0.2645714282989502, "mapping_values": [1, 7, 6, 1, 3, 1, 0, 1, 0, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.403252124786377, 2.3020339012145996, 2.379502773284912, 2.304255962371826, 2.303439140319824, 2.30273699760437, 2.30145001411438], "accuracy": [0.19112402200698853, 0.1224408894777298, 0.16232994198799133, 0.10011887550354004, 0.09800554811954498, 0.09932637959718704, 0.1158367469906807], "val_loss": [2.3040640354156494, 2.284487247467041, 2.3052425384521484, 2.3033101558685303, 2.3027796745300293, 2.3021485805511475, 2.2936017513275146], "val_accuracy": [0.0989999994635582, 0.2643333375453949, 0.10000000149011612, 0.0949999988079071, 0.1003333330154419, 0.12733332812786102, 0.2643333375453949]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 4, 2, 6, 3, 0, 2, 0, 3, 0, 2, 2, 0, 3, 0], [1, 2, 0, 2, 1, 0, 1, 2, 0, 2, 0, 1, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [0, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 23, 18, 6, 1, 0, 1, 1, 9, 6, 3, 1, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(alpha, grad), tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.sqrt(alpha))), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), alpha), grad)), tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad))), grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [160844000.0, 3125417216.0, 14558437376.0, 39975641088.0, 85183078400.0, 157999742976.0], "accuracy": [0.10196803510189056, 0.09893012791872025, 0.09919429570436478, 0.10368511080741882, 0.09681680053472519, 0.09893012791872025], "val_loss": [749329856.0, 5993196032.0, 20225466368.0, 47939858432.0, 93630406656.0, 161790541824.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 3, 6, 4, 8, 9, 1, 5, 2, 1, 8, 2, 2, 3, 0, 6, 0, 3, 0, 2, 2, 0, 3, 0], [2, 2, 2, 2, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [41, 13, 10, 57, 48, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [48, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 4, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [20, 58, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [8, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 20, 13, 3, 1, 0, 1, 0, 9, 7, 2, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad)), tf.math.square(grad)), tf.math.add(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, grad)), grad)), tf.math.negative(grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [9, 1, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 10, 9, 21, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 2, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, beta)", "other_info": {"loss": [2.3128788471221924, 2.325674057006836, 12129238016.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09325055778026581, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.315793991088867, 2.3368828296661377, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 2, 4, 1, 5, 1, 5, 0, 8, 5, 2, 2, 4, 4, 2, 5, 2, 0, 2, 2, 2, 8, 0], [1, 1, 1, 2, 1, 0, 1, 2, 2, 2, 1, 1, 2, 0, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 15, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 2, 0, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 4, 4], [50, 94]], "fitness": -0.09600000083446503, "mapping_values": [1, 9, 4, 5, 0, 1, 0, 1, 1, 6, 4, 2, 1, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.pow(alpha, alpha), grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(grad, tf.math.negative(grad)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad)", "other_info": {"loss": [2.3092925548553467, 2.3084402084350586, 2.3074803352355957, 2.305828332901001, 2.306128740310669, 2.3045766353607178, 2.304474353790283, 2.3036863803863525, 2.3031349182128906, 2.3028693199157715, 2.302856683731079, 2.3032984733581543, 2.3027544021606445, 2.302781343460083, 2.302513599395752, 2.302427053451538], "accuracy": [0.08809932321310043, 0.09325055778026581, 0.09126931428909302, 0.08730682730674744, 0.09087307006120682, 0.09800554811954498, 0.09615638852119446, 0.09060890227556229, 0.09655263274908066, 0.09642054885625839, 0.09708096832036972, 0.09602430462837219, 0.09470347315073013, 0.09694888442754745, 0.09140139818191528, 0.09219389408826828], "val_loss": [2.307443141937256, 2.306123733520508, 2.305286169052124, 2.304572343826294, 2.3040497303009033, 2.303694248199463, 2.3033809661865234, 2.303117275238037, 2.3029487133026123, 2.302860736846924, 2.3026785850524902, 2.302426815032959, 2.3022823333740234, 2.302250862121582, 2.302258253097534, 2.3022799491882324], "val_accuracy": [0.08733333647251129, 0.08966666460037231, 0.08666666597127914, 0.08666666597127914, 0.09000000357627869, 0.09233333170413971, 0.08833333104848862, 0.09000000357627869, 0.09099999815225601, 0.09099999815225601, 0.09333333373069763, 0.09266666322946548, 0.09066666662693024, 0.08933333307504654, 0.08500000089406967, 0.08299999684095383]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 3, 4, 1, 5, 1, 5, 0, 8, 6, 2, 9, 3, 0, 0, 0, 6, 0, 2, 9, 3, 8, 0], [1, 1, 1, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 72, 29, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 2, 5, 8, 3, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 4, 4], [50, 94]], "fitness": -0.09457142651081085, "mapping_values": [1, 28, 18, 10, 3, 1, 0, 1, 0, 10, 7, 3, 1, 3, 1, 2, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.math.square(tf.math.negative(alpha)))), tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.negative(alpha))), grad)), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad)", "other_info": {"loss": [2.3100533485412598, 2.307095527648926, 2.30668044090271, 2.305856227874756, 2.3045294284820557, 2.3047540187835693, 2.30352783203125, 2.30435848236084, 2.3033080101013184, 2.3034307956695557, 2.3038675785064697, 2.3027751445770264, 2.3024330139160156, 2.303018569946289, 2.302492380142212], "accuracy": [0.08928807079792023, 0.08968432247638702, 0.09549596905708313, 0.09430722147226334, 0.0936468094587326, 0.09232597798109055, 0.09655263274908066, 0.09325055778026581, 0.10157178342342377, 0.09642054885625839, 0.09272222965955734, 0.0944393053650856, 0.09391097724437714, 0.08598599582910538, 0.09721305221319199], "val_loss": [2.306945562362671, 2.305924892425537, 2.305016040802002, 2.304391384124756, 2.3039538860321045, 2.303506851196289, 2.3033595085144043, 2.3030388355255127, 2.302708625793457, 2.3025174140930176, 2.3023457527160645, 2.302152633666992, 2.301997661590576, 2.301806688308716, 2.3017237186431885], "val_accuracy": [0.09000000357627869, 0.08933333307504654, 0.09099999815225601, 0.09366666525602341, 0.09399999678134918, 0.09066666662693024, 0.09300000220537186, 0.09433333575725555, 0.09399999678134918, 0.09533333033323288, 0.09399999678134918, 0.09266666322946548, 0.09333333373069763, 0.09266666322946548, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [5, 2, 6, 4, 1, 5, 0, 5, 0, 8, 6, 2, 2, 4, 0, 0, 0, 6, 0, 2, 2, 2, 8, 0], [1, 2, 2, 2, 0, 0, 1, 1, 0, 2, 0, 1, 2, 0, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 72, 9, 65, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [59, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 4, 4], [50, 94]], "fitness": -0.09314285963773727, "mapping_values": [1, 28, 18, 10, 3, 1, 0, 1, 1, 9, 7, 2, 2, 3, 1, 2, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.negative(alpha)), grad), grad), tf.math.square(tf.math.negative(grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.negative(alpha))), alpha), tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad)", "other_info": {"loss": [2.309282064437866, 2.3073902130126953, 2.307929754257202, 2.305816888809204, 2.3048505783081055, 2.305068254470825, 2.3047335147857666, 2.303208112716675, 2.303372383117676, 2.303619861602783, 2.3028175830841064, 2.302867889404297, 2.3023998737335205], "accuracy": [0.09642054885625839, 0.08809932321310043, 0.09298639744520187, 0.0956280529499054, 0.10011887550354004, 0.09074098616838455, 0.09430722147226334, 0.09945846349000931, 0.09298639744520187, 0.09087307006120682, 0.09694888442754745, 0.09549596905708313, 0.08836349099874496], "val_loss": [2.3067831993103027, 2.305772066116333, 2.3045504093170166, 2.3039722442626953, 2.3033833503723145, 2.3030383586883545, 2.302745819091797, 2.302480936050415, 2.302295207977295, 2.3021552562713623, 2.3020522594451904, 2.3018991947174072, 2.3018243312835693], "val_accuracy": [0.08533333241939545, 0.08766666799783707, 0.08733333647251129, 0.08733333647251129, 0.0860000029206276, 0.08733333647251129, 0.09366666525602341, 0.0949999988079071, 0.09399999678134918, 0.09300000220537186, 0.09200000017881393, 0.08966666460037231, 0.09066666662693024]}}]