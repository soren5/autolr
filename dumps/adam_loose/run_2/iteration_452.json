[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [2, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [1, 4, 3, 3, 4, 4, 1, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.4017142951488495, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 20, 12, 8, 3, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(grad, grad)))), tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.331301689147949, 2.2759580612182617, 2.776445150375366, 2.3040363788604736, 2.3032310009002686, 2.3033413887023926, 2.3034451007843018], "accuracy": [0.19561484456062317, 0.15110288560390472, 0.13591335713863373, 0.09298639744520187, 0.1006472036242485, 0.09985470771789551, 0.09615638852119446], "val_loss": [2.296273946762085, 1.9507614374160767, 2.3047330379486084, 2.302863121032715, 2.3027546405792236, 2.302597999572754, 2.302744150161743], "val_accuracy": [0.11699999868869781, 0.40966665744781494, 0.1003333330154419, 0.09966666996479034, 0.10266666859388351, 0.10266666859388351, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 3, 1, 2, 1, 3, 8, 7, 4, 9, 8, 8, 0, 3, 1, 1, 9, 6, 0, 2, 2, 0, 0, 5, 2], [2, 3, 2, 2, 2, 0, 0, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 4, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 69, 59, 19, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.33000001311302185, "mapping_values": [1, 36, 23, 13, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(grad, grad), grad), tf.math.sqrt(tf.math.add(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.subtract(grad, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), alpha), grad)))), tf.math.negative(grad))))))), tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3258512020111084, 2.250664234161377, 2.28269100189209, 2.3292062282562256, 2.30574369430542, 2.29609751701355, 2.2903342247009277, 2.30604887008667], "accuracy": [0.2296922504901886, 0.16536785662174225, 0.14780081808567047, 0.1842557191848755, 0.10527011007070541, 0.11676132678985596, 0.15374454855918884, 0.1006472036242485], "val_loss": [2.3273584842681885, 2.308344841003418, 1.9085758924484253, 2.309532403945923, 2.3022730350494385, 2.246500253677368, 2.30722713470459, 2.3033695220947266], "val_accuracy": [0.10633333027362823, 0.09933333098888397, 0.3283333480358124, 0.0976666659116745, 0.11966666579246521, 0.17933332920074463, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 2, 1, 3, 4, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 93, 97, 32, 20, 41, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 4, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 1, 0, 4, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.2945714294910431, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 4, 3, 3, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4492337703704834, 2.3176019191741943, 2.47065806388855, 2.601187229156494, 2.2920312881469727, 2.303579568862915, 2.302868366241455, 2.3031418323516846, 2.3027501106262207], "accuracy": [0.19852067530155182, 0.1200634017586708, 0.1612732857465744, 0.1682736724615097, 0.12098798155784607, 0.09998679161071777, 0.09734513610601425, 0.09509972482919693, 0.0956280529499054], "val_loss": [2.2353951930999756, 2.2787106037139893, 2.288907527923584, 1.9752960205078125, 2.3027126789093018, 2.3022689819335938, 2.3025126457214355, 2.3025081157684326, 2.3017592430114746], "val_accuracy": [0.1809999942779541, 0.19433332979679108, 0.18700000643730164, 0.28733333945274353, 0.10233332961797714, 0.1003333330154419, 0.10066666454076767, 0.09866666793823242, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 2, 1, 3, 4, 7, 1, 5, 8, 8, 0, 3, 1, 2, 9, 6, 0, 2, 2, 0, 8, 5, 2], [2, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 4, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.2645714282989502, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 20, 11, 9, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(tf.math.multiply(grad, sigma), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5633795261383057, 2.287048816680908, 2.292821168899536, 2.3039755821228027, 2.301558256149292, 2.3193492889404297, 2.28254771232605], "accuracy": [0.1962752640247345, 0.1158367469906807, 0.13538502156734467, 0.09470347315073013, 0.10130762308835983, 0.1438383311033249, 0.1298375427722931], "val_loss": [2.29003643989563, 2.129042625427246, 2.3044159412384033, 2.302542209625244, 2.287545919418335, 2.304530382156372, 1.9816190004348755], "val_accuracy": [0.24066667258739471, 0.2590000033378601, 0.09700000286102295, 0.09700000286102295, 0.14399999380111694, 0.09733333438634872, 0.2523333430290222]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 1, 2, 1, 9, 4, 5, 8, 5, 3, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 2, 2, 2, 1, 0, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 0, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [90, 20, 59, 19, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.251714289188385, "mapping_values": [1, 37, 24, 13, 4, 1, 0, 1, 0, 7, 4, 3, 3, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(tf.math.sqrt(tf.math.square(grad))))), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.sqrt(grad)))))), tf.math.negative(grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), grad)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.480001449584961, 2.5996415615081787, 2.297991991043091, 2.268449068069458, 1.8552672863006592, 2.30078125, 2.307453155517578, 2.274613857269287, 2.3319709300994873], "accuracy": [0.20261524617671967, 0.20116232335567474, 0.11411966383457184, 0.16642451286315918, 0.354510635137558, 0.13776251673698425, 0.1006472036242485, 0.1570466309785843, 0.10593052208423615], "val_loss": [2.2997848987579346, 2.311927318572998, 2.2710227966308594, 2.214053153991699, 2.3306989669799805, 2.312502861022949, 2.300285577774048, 2.285491704940796, 2.3039357662200928], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.1913333386182785, 0.25033333897590637, 0.10866666585206985, 0.10133333504199982, 0.11599999666213989, 0.16733333468437195, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 1, 2, 6, 3, 4, 7, 1, 5, 8, 8, 7, 0, 1, 6, 9, 2, 0, 2, 5, 0, 8, 0, 2], [2, 3, 2, 2, 2, 0, 0, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 4, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 69, 59, 19, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.24085713922977448, "mapping_values": [1, 40, 25, 15, 4, 1, 0, 1, 0, 12, 7, 5, 4, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.add(grad, grad)), tf.math.square(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(grad)), tf.math.negative(grad)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), grad), alpha), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3386614322662354, 2.306382656097412, 2.303971767425537, 2.302966594696045, 2.3005895614624023, 2.5553927421569824, 2.3052189350128174, 2.3033347129821777, 2.302961587905884, 2.30326247215271], "accuracy": [0.1834632158279419, 0.09919429570436478, 0.09800554811954498, 0.1010434553027153, 0.12349755316972733, 0.13578127324581146, 0.09919429570436478, 0.09589222073554993, 0.09774138033390045, 0.09536388516426086], "val_loss": [2.309553623199463, 2.3037619590759277, 2.3025777339935303, 2.302131414413452, 2.2671256065368652, 2.307142496109009, 2.303142786026001, 2.3026909828186035, 2.30258846282959, 2.3025636672973633], "val_accuracy": [0.10133333504199982, 0.10266666859388351, 0.10266666859388351, 0.09533333033323288, 0.2446666657924652, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 3, 1, 2, 1, 3, 4, 7, 2, 5, 8, 8, 0, 3, 1, 2, 9, 6, 5, 0, 2, 0, 8, 5, 2], [2, 3, 2, 2, 2, 2, 0, 1, 1, 2, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 63, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 4, 3, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 69, 59, 19, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.22628571093082428, "mapping_values": [1, 37, 23, 14, 4, 5, 5, 0, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.square(tf.math.sqrt(grad)), tf.math.sqrt(grad))), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.negative(grad)), grad)), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.negative(grad)), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), grad), grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.438839912414551, 2.5811407566070557, 2.769045114517212, 2.303893804550171, 2.6323490142822266, 2.2893059253692627], "accuracy": [0.1880861222743988, 0.16602826118469238, 0.09628847241401672, 0.09747721254825592, 0.1320829540491104, 0.11676132678985596], "val_loss": [2.3030099868774414, 5.21910285949707, 2.307126522064209, 2.2868030071258545, 2.3085668087005615, 2.0866851806640625], "val_accuracy": [0.2226666659116745, 0.09966666996479034, 0.09700000286102295, 0.0989999994635582, 0.10333333164453506, 0.20133332908153534]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 2, 1, 3, 4, 7, 1, 5, 8, 8, 0, 3, 1, 2, 9, 6, 0, 2, 2, 0, 8, 5, 2], [3, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 25, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [3, 2, 3, 3, 4, 4, 1, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 69, 59, 19, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.22285714745521545, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3715286254882812, 2.327908515930176, 2.304036855697632, 2.3032095432281494, 2.3030779361724854, 2.300493001937866], "accuracy": [0.18702945113182068, 0.14555540680885315, 0.09668471664190292, 0.10302469879388809, 0.0948355570435524, 0.11015717685222626], "val_loss": [2.2380332946777344, 2.304865598678589, 2.3032126426696777, 2.302459955215454, 2.3022654056549072, 2.275428295135498], "val_accuracy": [0.2173333317041397, 0.0976666659116745, 0.09833333641290665, 0.10066666454076767, 0.09833333641290665, 0.18466666340827942]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 9, 2, 1, 2, 6, 7, 1, 5, 6, 8, 7, 3, 1, 2, 9, 2, 0, 2, 2, 0, 8, 0], [2, 3, 2, 2, 0, 0, 0, 3, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 3, 1, 9, 4, 3, 8, 2, 1, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [1, 4, 3, 3, 4, 4, 1, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1102.79541015625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20023775100708008, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [18.990522384643555, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 1, 5, 1, 3, 4, 7, 9, 5, 6, 8, 5, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 2, 2, 0, 0, 0, 3, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 97, 32, 6, 41, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 9, 9, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 1, 9, 4, 3, 8, 2, 1, 2, 2, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 0, 0, 3, 0, 2, 3, 4, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 81, 18, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [2, 0, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 1, 0, 1, 0, 20, 11, 9, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.multiply(grad, grad), tf.math.pow(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]