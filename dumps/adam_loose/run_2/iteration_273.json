[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 8, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 6, 4, 5, 6, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [1, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.29085713624954224, "mapping_values": [1, 5, 3, 2, 1, 5, 3, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(alpha), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.471731424331665, 2.348721504211426, 2.3024327754974365, 2.2720534801483154, 2.2983124256134033, 2.300297737121582], "accuracy": [0.19957733154296875, 0.14330999553203583, 0.10553427785634995, 0.16840575635433197, 0.11953506618738174, 0.19310526549816132], "val_loss": [2.1976101398468018, 2.302961587905884, 2.295732021331787, 2.3036835193634033, 2.2724852561950684, 2.3136439323425293], "val_accuracy": [0.2906666696071625, 0.09733333438634872, 0.1599999964237213, 0.10066666454076767, 0.24933333694934845, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 6, 7, 8, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 6, 1, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.28200000524520874, "mapping_values": [1, 3, 1, 2, 2, 1, 0, 1, 0, 31, 18, 13, 5, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(tf.math.add(grad, sigma), grad), tf.math.add(tf.math.square(sigma), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.470741033554077, 2.27860164642334, 2.475221633911133, 2.30362868309021, 2.3027596473693848, 2.2847344875335693, 2.2950541973114014], "accuracy": [0.1806894689798355, 0.1534803807735443, 0.1216483935713768, 0.09509972482919693, 0.09919429570436478, 0.12349755316972733, 0.13472460210323334], "val_loss": [2.3053834438323975, 2.956031322479248, 2.3038811683654785, 2.3026692867279053, 2.3012187480926514, 2.070211172103882, 2.1039652824401855], "val_accuracy": [0.09733333438634872, 0.28200000524520874, 0.10233332961797714, 0.10233332961797714, 0.10499999672174454, 0.27533334493637085, 0.17000000178813934]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 6, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 7, 0, 9, 1, 0, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [7, 6, 4, 5, 0, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.21285714209079742, "mapping_values": [1, 39, 23, 16, 5, 5, 3, 2, 1, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(alpha, alpha), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)))), tf.math.pow(tf.math.negative(tf.math.multiply(alpha, tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, alpha), alpha)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad), grad), tf.math.subtract(tf.math.negative(grad), grad)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.29276180267334, 2.4157516956329346, 2.23720383644104, 2.388535261154175, 2.244105339050293, 2.19625186920166, 2.304342269897461], "accuracy": [0.19416193664073944, 0.19376568496227264, 0.16642451286315918, 0.10527011007070541, 0.17342491447925568, 0.18134988844394684, 0.09813763201236725], "val_loss": [2.2755796909332275, 2.284416913986206, 2.574439525604248, 2.301790714263916, 2.2586777210235596, 2.3056187629699707, 2.302419900894165], "val_accuracy": [0.11533333361148834, 0.21899999678134918, 0.11233333498239517, 0.10266666859388351, 0.11800000071525574, 0.09700000286102295, 0.1926666647195816]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 0, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 9, 5, 0, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 4, 1, 5, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.19285714626312256, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 7, 6, 1, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [90.197998046875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19878484308719635, 0.1088363528251648, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [17521.552734375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.18733333051204681, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 5, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 5, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.10514285415410995, "mapping_values": [1, 1, 0, 1, 0, 6, 5, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.1154091358184814, 2.469364643096924, 2.3043506145477295, 2.3031275272369385, 2.303196907043457, 2.3030238151550293, 2.3028974533081055, 2.302898645401001, 2.3028640747070312, 2.3028345108032227, 2.302640676498413], "accuracy": [0.19574692845344543, 0.09998679161071777, 0.09879804402589798, 0.09800554811954498, 0.0948355570435524, 0.09879804402589798, 0.09325055778026581, 0.09919429570436478, 0.09496764093637466, 0.09747721254825592, 0.09826971590518951], "val_loss": [2.8805317878723145, 2.3059208393096924, 2.3031907081604004, 2.3025782108306885, 2.3025901317596436, 2.3025052547454834, 2.302605152130127, 2.302459716796875, 2.302586317062378, 2.302478551864624, 2.3023488521575928], "val_accuracy": [0.10066666454076767, 0.09733333438634872, 0.10066666454076767, 0.10266666859388351, 0.10066666454076767, 0.10733333230018616, 0.10133333504199982, 0.10166666656732559, 0.09733333438634872, 0.09966666996479034, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 9, 5, 0, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [7, 6, 6, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 1, 7, 5, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [1, 0, 1, 5, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.948182106018066, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18861444294452667, 0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [919.9874267578125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [3, 3, 6, 7, 2, 8, 3, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5, 6, 9], [6, 0, 0, 5, 0, 3, 4, 1, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37, 69, 92, 44], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [25, 94]], "fitness": -0.09428571164608002, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 39, 23, 16, 8, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma), grad), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.negative(grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.divide_no_nan(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), grad), grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310515880584717, 2.3107030391693115, 2.31042742729187, 2.3104820251464844, 2.311154842376709, 2.31018328666687], "accuracy": [0.0878351628780365, 0.08638224750757217, 0.09377889335155487, 0.09153348207473755, 0.08968432247638702, 0.09074098616838455], "val_loss": [2.309352159500122, 2.309352159500122, 2.309352159500122, 2.309352159500122, 2.309352159500122, 2.309352159500122], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 8, 7, 4, 9, 1, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 8, 2, 4, 7, 9, 2], [2, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 6, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [60, 43, 9, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 8, 7, 2, 9, 1, 4, 3, 3, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 4, 4, 5, 1, 7, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.09285714477300644, "mapping_values": [1, 30, 19, 11, 5, 6, 5, 1, 2, 12, 7, 5, 1, 4, 3, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(alpha)))), tf.math.subtract(tf.math.pow(tf.math.negative(alpha), alpha), tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.math.negative(alpha)))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad), grad)), tf.math.subtract(grad, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309915065765381, 2.310363531112671, 2.3109138011932373, 2.311187505722046, 2.309062957763672, 2.310279130935669, 2.3102266788482666, 2.309678077697754, 2.3101863861083984, 2.309731960296631, 2.309924364089966], "accuracy": [0.09298639744520187, 0.08981640636920929, 0.09166556596755981, 0.08651433140039444, 0.09126931428909302, 0.09787346422672272, 0.09113723784685135, 0.09681680053472519, 0.0936468094587326, 0.09470347315073013, 0.0936468094587326], "val_loss": [2.308776378631592, 2.3087620735168457, 2.3087472915649414, 2.3087310791015625, 2.3087191581726074, 2.308706521987915, 2.3086929321289062, 2.3086800575256348, 2.308666229248047, 2.3086533546447754, 2.3086392879486084], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09300000220537186, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 5, 8, 7, 3, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [50, 33, 52, 32, 84, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [52, 43, 9, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 0, 7, 0, 4, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 6, 2, 5, 0, 3, 4, 4, 4, 0, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(grad, tf.math.negative(tf.math.add(tf.math.negative(grad), beta))), tf.math.pow(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094322681427, 2.309373140335083, 2.30989933013916, 2.3095173835754395, 2.308779716491699, 2.310110569000244], "accuracy": [0.09192973375320435, 0.09219389408826828, 0.09496764093637466, 0.09602430462837219, 0.09391097724437714, 0.09509972482919693], "val_loss": [2.308070421218872, 2.308070421218872, 2.308070421218872, 2.308070421218872, 2.308070421218872, 2.308070421218872], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]