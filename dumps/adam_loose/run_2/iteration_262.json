[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 4, 1, 4, 2, 9, 4, 8, 5, 1, 4, 1, 9, 3, 4, 6, 4, 1, 5, 2, 2, 2, 7, 0, 5, 1, 5, 7], [2, 2, 1, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 9, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.7639999985694885, "mapping_values": [1, 41, 24, 17, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.pow(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))))), tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(grad, alpha)), tf.math.add(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha)), alpha)), tf.math.negative(alpha)), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"lossaccuracy": [0.1950865089893341, 0.13578127324581146, 0.14581957459449768, 0.12851670384407043, 0.2915070652961731, 0.3630960285663605, 0.4488178491592407, 0.4294016659259796, 0.42609959840774536, 0.4616298973560333, 0.5068022608757019, 0.5801082849502563, 0.6108836531639099, 0.6019020080566406, 0.6092986464500427, 0.6627922058105469, 0.6832650899887085, 0.6853784322738647, 0.7083608508110046, 0.7004358768463135, 0.7223616242408752, 0.6952846646308899, 0.7211728692054749, 0.7396644949913025, 0.7417778372764587], "val_loss": [2.306480884552002, 2.3254730701446533, 2.304555654525757, 2.161721706390381, 1.6191637516021729, 1.4353175163269043, 1.2249830961227417, 1.3077491521835327, 1.3138151168823242, 1.5916577577590942, 1.0249131917953491, 1.222316026687622, 0.9898699522018433, 0.8386253118515015, 0.8587421774864197, 0.7963325381278992, 0.6838563084602356, 0.7606361508369446, 0.7453091740608215, 0.6681815385818481, 0.7149820327758789, 0.6821629405021667, 0.6014665365219116, 0.6164992451667786, 0.6422629952430725], "val_accuracy": [0.09933333098888397, 0.1783333271741867, 0.10366666316986084, 0.27900001406669617, 0.49933332204818726, 0.5799999833106995, 0.5849999785423279, 0.5789999961853027, 0.5740000009536743, 0.3816666603088379, 0.5989999771118164, 0.4869999885559082, 0.5983333587646484, 0.6736666560173035, 0.6626666784286499, 0.7273333072662354, 0.750333309173584, 0.7006666660308838, 0.7149999737739563, 0.7563333511352539, 0.7303333282470703, 0.7546666860580444, 0.7519999742507935, 0.7523333430290222, 0.7446666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 8, 2, 0, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 0, 9, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 0, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3985714316368103, "mapping_values": [1, 8, 5, 3, 0, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.negative(alpha), alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.254932165145874, 2.2368669509887695, 3.004244089126587, 2.300677537918091, 2.3714065551757812, 2.3039464950561523], "accuracy": [0.21820102632045746, 0.20023775100708008, 0.17738740146160126, 0.12059172987937927, 0.11372341960668564, 0.09866596013307571], "val_loss": [2.256216049194336, 2.09112548828125, 2.31201434135437, 2.2980282306671143, 2.3039937019348145, 2.3028481006622314], "val_accuracy": [0.3893333375453949, 0.28066667914390564, 0.10133333504199982, 0.16866666078567505, 0.10133333504199982, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 5, 1, 4, 1, 4, 3, 4, 6, 4, 1, 5, 2, 2, 1, 7, 0, 5], [2, 2, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [82, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [5, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [0, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1315499.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1900673657655716, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [26167424.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15066666901111603, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 0, 3, 3, 2, 8, 2, 8, 4, 4, 0, 2, 4, 4, 9, 4, 6, 0, 2, 2, 8, 7, 1], [2, 2, 2, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [57, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [5, 0, 4], [25, 94]], "fitness": -0.12514285743236542, "mapping_values": [1, 40, 24, 16, 4, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.math.multiply(tf.math.multiply(grad, tf.math.add(grad, grad)), tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.sqrt(tf.math.pow(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(grad, alpha))), tf.math.add(tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), alpha), alpha))))), alpha))), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3845109939575195, 2.4409239292144775, 2.3056557178497314, 2.4478728771209717, 2.3079278469085693, 2.3022494316101074, 2.5149855613708496, 2.3142247200012207], "accuracy": [0.19442610442638397, 0.16338661313056946, 0.10157178342342377, 0.12389380484819412, 0.0952318087220192, 0.10302469879388809, 0.14000792801380157, 0.09787346422672272], "val_loss": [2.2989823818206787, 2.3116073608398438, 2.299882411956787, 2.311675786972046, 2.3028082847595215, 2.2949931621551514, 2.323235511779785, 2.3068344593048096], "val_accuracy": [0.10266666859388351, 0.1003333330154419, 0.12399999797344208, 0.09666666388511658, 0.10266666859388351, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 5, 2, 2, 3, 2, 8, 8, 5, 4, 4, 0, 2, 4, 4, 9, 4, 6, 0, 6, 2, 8, 7, 1], [2, 2, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [84, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [134220.3125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19323734939098358, 0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [299956.75, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07766667008399963, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [6, 5, 0, 5, 0, 9, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 7, 7, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 6, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.math.square(tf.math.negative(alpha)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033156394958496, 2.302311897277832, 2.302759885787964, 2.3054821491241455, 2.317399501800537, 2.3874707221984863], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026797771453857, 2.302938461303711, 2.3041563034057617, 2.3100969791412354, 2.338153600692749, 2.566358804702759], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 6, 0, 2, 3, 2, 8, 8, 8, 4, 4, 0, 2, 4, 4, 9, 4, 6, 0, 6, 6, 8, 7, 1], [2, 2, 1, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 94, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 2, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 1, 4, 2, 9, 4, 8, 5, 1, 4, 1, 8, 3, 4, 6, 4, 1, 5, 9, 2, 1, 7, 0, 5, 1, 5, 7], [2, 2, 2, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 2, 2, 3, 2, 1, 2, 1, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 37, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 20, 13, 5, 4, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), grad), tf.math.pow(tf.math.sqrt(grad), tf.math.square(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.square(alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.718433380126953, 2.305816411972046, 2.3038578033447266, 2.3031516075134277, 2.3031203746795654, 2.302993059158325, 2.303058624267578, 2.302976131439209, 2.3031744956970215, 2.302889823913574, 2.302884340286255, 2.3029301166534424], "accuracy": [0.17738740146160126, 0.09919429570436478, 0.0948355570435524, 0.09549596905708313, 0.09192973375320435, 0.09985470771789551, 0.09351472556591034, 0.09945846349000931, 0.09034473448991776, 0.09192973375320435, 0.10038304328918457, 0.09206181764602661], "val_loss": [2.3086276054382324, 2.304363250732422, 2.3030927181243896, 2.302849054336548, 2.302591323852539, 2.3025810718536377, 2.3026113510131836, 2.3026111125946045, 2.3026795387268066, 2.302586793899536, 2.3026273250579834, 2.3027024269104004], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09799999743700027, 0.09933333098888397, 0.09799999743700027, 0.1003333330154419, 0.10300000011920929, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 3, 2, 8, 8, 8, 4, 4, 0, 2, 4, 4, 9, 4, 6, 0, 6, 2, 8, 7, 1], [2, 2, 0, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 97, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.0917142853140831, "mapping_values": [1, 37, 22, 15, 5, 4, 2, 2, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha)))), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.pow(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), alpha))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.311577558517456, 2.310704231262207, 2.3109657764434814, 2.3105061054229736, 2.3097989559173584, 2.310229778289795], "accuracy": [0.08875974267721176, 0.08809932321310043, 0.09192973375320435, 0.09060890227556229, 0.10130762308835983, 0.09219389408826828], "val_loss": [2.3085031509399414, 2.3084897994995117, 2.308476448059082, 2.308464765548706, 2.30845308303833, 2.308441162109375], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 4, 1, 4, 4, 9, 4, 8, 5, 1, 4, 3, 4, 3, 4, 6, 4, 2, 5, 2, 0, 1, 7, 0, 5, 1, 5, 7], [2, 0, 1, 0, 1, 2, 1, 1, 2, 2, 0, 0, 1, 1, 1, 2, 0, 2, 2, 2, 0, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [37, 68, 17, 32, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 5, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 4, 7, 0, 1, 1, 6, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 98, 31, 37], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.09057142585515976, "mapping_values": [1, 17, 10, 7, 3, 4, 3, 1, 1, 24, 13, 11, 4, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.sqrt(tf.math.square(tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.negative(grad), alpha), tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), grad), tf.math.multiply(sigma, tf.math.subtract(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.310600996017456, 2.3096277713775635, 2.309898853302002, 2.3088278770446777, 2.309964418411255, 2.3106884956359863], "accuracy": [0.09536388516426086, 0.08902391046285629, 0.0948355570435524, 0.09047681838274002, 0.09377889335155487, 0.08809932321310043], "val_loss": [2.308687448501587, 2.3086748123168945, 2.308661699295044, 2.308650016784668, 2.3086376190185547, 2.308626890182495], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]