[{"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 2, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 1, 0, 1, 2, 0, 2, 1, 1, 2, 0, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8337143063545227, "mapping_values": [1, 28, 15, 13, 2, 1, 0, 1, 1, 10, 5, 5, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.pow(tf.math.pow(grad, alpha), tf.math.subtract(tf.math.add(tf.math.subtract(grad, alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(alpha, grad))))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(alpha))), alpha), grad))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(grad, grad))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2979495525360107, 2.183096408843994, 2.1765825748443604, 2.0419867038726807, 1.8019839525222778, 1.1613640785217285, 0.8564499020576477, 0.7728896141052246, 0.716035008430481, 0.649666965007782, 0.6531146168708801, 0.6437947750091553, 0.6044114828109741, 0.5609619617462158, 0.5706636905670166, 0.5649515390396118, 0.5390948057174683, 0.5621699690818787, 0.5065008401870728, 0.49919241666793823, 0.4950290322303772, 0.48285987973213196, 0.4951857626438141], "accuracy": [0.27578920125961304, 0.1970677524805069, 0.24963676929473877, 0.30762118101119995, 0.43059042096138, 0.6082419753074646, 0.6880200505256653, 0.7149649858474731, 0.7263241410255432, 0.7544577717781067, 0.7552502751350403, 0.7560427784919739, 0.7794214487075806, 0.7891955971717834, 0.7876105904579163, 0.7837802171707153, 0.7943468689918518, 0.791441023349762, 0.8099326491355896, 0.8138951063156128, 0.8187822103500366, 0.817461371421814, 0.8141592741012573], "val_loss": [2.2340152263641357, 2.2115731239318848, 2.248457908630371, 1.341615915298462, 1.206652283668518, 0.8083019256591797, 0.8070943355560303, 0.6974542737007141, 0.6231624484062195, 0.5975599884986877, 0.6461268663406372, 0.5574665665626526, 0.5137162804603577, 0.576960027217865, 0.5580397248268127, 0.516021728515625, 0.4892346262931824, 0.48914843797683716, 0.5334287881851196, 0.5302273631095886, 0.4826347231864929, 0.5392528772354126, 0.4668406546115875], "val_accuracy": [0.0976666659116745, 0.2526666522026062, 0.30566665530204773, 0.45366665720939636, 0.5926666855812073, 0.7163333296775818, 0.6970000267028809, 0.7153333425521851, 0.7593333125114441, 0.7766666412353516, 0.734000027179718, 0.8036666512489319, 0.8073333501815796, 0.7746666669845581, 0.7776666879653931, 0.8023333549499512, 0.8193333148956299, 0.8276666402816772, 0.7730000019073486, 0.7910000085830688, 0.8106666803359985, 0.7960000038146973, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 8, 2, 2, 3, 0, 2, 0, 3, 0, 2, 2, 0, 3, 0], [1, 2, 1, 2, 0, 0, 1, 2, 0, 2, 0, 1, 2, 0, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8240000009536743, "mapping_values": [1, 41, 24, 17, 6, 1, 0, 1, 1, 9, 7, 2, 2, 3, 1, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(alpha, grad), tf.math.square(tf.math.subtract(tf.math.sqrt(alpha), tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(grad))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.negative(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.101804256439209, 2.0502114295959473, 1.7003222703933716, 1.513396143913269, 1.0341416597366333, 0.8221116065979004, 0.7472338080406189, 0.7009408473968506, 0.6519082188606262, 0.6514156460762024, 0.5912391543388367, 0.6068959832191467, 0.5691543817520142, 0.5793054103851318, 0.5633712410926819, 0.538806676864624, 0.5154725313186646, 0.520205020904541, 0.5156486630439758, 0.5029192566871643, 0.4847889542579651, 0.4849720299243927, 0.47712430357933044, 0.4590150713920593, 0.44422221183776855], "accuracy": [0.29137498140335083, 0.3131686747074127, 0.4427420496940613, 0.5045568346977234, 0.6169594526290894, 0.6877558827400208, 0.7169462442398071, 0.7289658188819885, 0.7485140562057495, 0.7528728246688843, 0.7775723338127136, 0.7664773464202881, 0.7802139520645142, 0.7765156626701355, 0.7887993454933167, 0.7954035401344299, 0.7991018295288086, 0.8004226684570312, 0.8038568496704102, 0.8075551390647888, 0.8137630224227905, 0.8146876096725464, 0.8214238286018372, 0.8321225643157959, 0.8359529972076416], "val_loss": [2.2885656356811523, 1.8037526607513428, 1.2647018432617188, 0.9881168603897095, 0.7627179622650146, 0.7037701606750488, 0.6445851922035217, 0.6079559922218323, 0.5941798686981201, 0.5390241742134094, 0.5652306079864502, 0.5134924054145813, 0.5903084874153137, 0.48833635449409485, 0.5440579652786255, 0.497588187456131, 0.5040698051452637, 0.4834510087966919, 0.4637453258037567, 0.43866267800331116, 0.49017366766929626, 0.4849468469619751, 0.43853557109832764, 0.4380248188972473, 0.46936047077178955], "val_accuracy": [0.16433332860469818, 0.34933334589004517, 0.5423333048820496, 0.6570000052452087, 0.6869999766349792, 0.7239999771118164, 0.7393333315849304, 0.7576666474342346, 0.7613333463668823, 0.796999990940094, 0.7820000052452087, 0.8023333549499512, 0.7576666474342346, 0.8166666626930237, 0.7839999794960022, 0.7923333048820496, 0.7976666688919067, 0.8206666707992554, 0.8149999976158142, 0.8443333506584167, 0.8196666836738586, 0.8209999799728394, 0.8333333134651184, 0.8356666564941406, 0.8270000219345093]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 6, 4, 1, 5, 1, 5, 1, 8, 6, 2, 2, 3, 3, 2, 0, 6, 0, 2, 2, 0, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 45, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [50, 94]], "fitness": -0.40771427750587463, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.25803542137146, 2.127506971359253, 2.2663567066192627, 2.1961379051208496, 1.6376113891601562, 2.1995105743408203, 2.351813793182373, 2.303544044494629], "accuracy": [0.25782591104507446, 0.2417117953300476, 0.20142649114131927, 0.2211068570613861, 0.4041738212108612, 0.19561484456062317, 0.11834631860256195, 0.10289261490106583], "val_loss": [2.2055857181549072, 2.403608798980713, 1.5895150899887085, 1.7435998916625977, 2.0863516330718994, 2.468684673309326, 2.305351734161377, 2.300426721572876], "val_accuracy": [0.21799999475479126, 0.3033333420753479, 0.4073333442211151, 0.33666667342185974, 0.3323333263397217, 0.24933333694934845, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 10, 9, 21, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 2, 4], [50, 94]], "fitness": -0.32085713744163513, "mapping_values": [1, 7, 5, 2, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3936288356781006, 2.2397773265838623, 2.3495724201202393, 2.334315776824951, 2.3149707317352295, 2.305001974105835, 2.30363130569458], "accuracy": [0.19218069314956665, 0.1838594675064087, 0.16497160494327545, 0.14238542318344116, 0.0952318087220192, 0.10077928751707077, 0.09774138033390045], "val_loss": [2.2969558238983154, 1.9842851161956787, 2.2060842514038086, 2.3455617427825928, 2.3032584190368652, 2.303128480911255, 2.3028271198272705], "val_accuracy": [0.10000000149011612, 0.3109999895095825, 0.1133333370089531, 0.09799999743700027, 0.10199999809265137, 0.10266666859388351, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 2, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [0, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 47, 9, 21, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [26, 94]], "fitness": -0.30228570103645325, "mapping_values": [1, 1, 0, 1, 1, 7, 6, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.398710250854492, 2.5729594230651855, 2.2102301120758057, 2.423449754714966, 2.311795473098755, 2.3040707111358643, 2.3049094676971436, 2.303488254547119], "accuracy": [0.22018226981163025, 0.1806894689798355, 0.17884030938148499, 0.22097477316856384, 0.11161009222269058, 0.10091137140989304, 0.09457138925790787, 0.1018359512090683], "val_loss": [2.307248115539551, 2.191812753677368, 1.7035295963287354, 2.019001007080078, 2.30283784866333, 2.3028950691223145, 2.302858352661133, 2.302689552307129], "val_accuracy": [0.10100000351667404, 0.15600000321865082, 0.3083333373069763, 0.2226666659116745, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 6, 4, 1, 5, 1, 5, 0, 8, 6, 2, 2, 4, 0, 0, 0, 6, 0, 2, 2, 3, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 0, 2, 1, 1, 2, 0, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 72, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 2, 0, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 4, 4], [50, 94]], "fitness": -0.10485713928937912, "mapping_values": [1, 39, 24, 15, 4, 1, 0, 1, 1, 9, 6, 3, 1, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, grad)), tf.math.square(alpha)), tf.math.negative(grad)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.negative(alpha))), grad), tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad))))), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(grad), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad)", "other_info": {"loss": [2.309438467025757, 2.3079776763916016, 2.3065216541290283, 2.3064913749694824, 2.3058671951293945, 2.3046681880950928, 2.303886651992798, 2.3036909103393555, 2.303642511367798, 2.3020823001861572, 2.302546262741089, 2.3029963970184326, 2.3031558990478516, 2.3025054931640625, 2.3022959232330322], "accuracy": [0.09034473448991776, 0.09496764093637466, 0.09615638852119446, 0.09113723784685135, 0.0874389111995697, 0.1010434553027153, 0.09325055778026581, 0.0940430611371994, 0.09259014576673508, 0.10051512718200684, 0.09721305221319199, 0.09100515395402908, 0.09325055778026581, 0.09457138925790787, 0.09298639744520187], "val_loss": [2.3072092533111572, 2.3060593605041504, 2.3050878047943115, 2.304546594619751, 2.304023027420044, 2.303595781326294, 2.3032314777374268, 2.3030099868774414, 2.302792549133301, 2.3027172088623047, 2.3026061058044434, 2.3023946285247803, 2.302154064178467, 2.302077531814575, 2.302018642425537], "val_accuracy": [0.09066666662693024, 0.09133332967758179, 0.09300000220537186, 0.09366666525602341, 0.0963333323597908, 0.09833333641290665, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.10166666656732559, 0.1003333330154419, 0.10066666454076767, 0.09933333098888397, 0.09799999743700027, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 9, 2, 4, 1, 0, 1, 9, 1, 2, 4, 9, 2, 3, 2, 2, 0, 6, 0, 2, 2, 0, 8, 0], [2, 2, 2, 2, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [41, 90, 10, 57, 48, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [1, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [48, 23, 80, 41, 8, 43, 2], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [5, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [8, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 12, 6, 5, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.subtract(grad, grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [4, 3, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 7, 6, 1, 3, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(grad, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, sigma)", "other_info": {"loss": [2.311931610107422, 2.3279144763946533, 5.879174485868522e+24, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.0956280529499054, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3147037029266357, 2.336735963821411, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 8, 2, 4, 1, 6, 8, 9, 1, 8, 4, 9, 2, 3, 2, 2, 3, 6, 0, 1, 2, 0, 6, 0], [3, 2, 0, 2, 0, 0, 1, 2, 1, 2, 2, 0, 1, 2, 2, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [6, 9, 5, 4], [4, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 1, 0, 1, 0, 3, 1, 2, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [471358472192.0, Infinity, 2.3203017711639404, 2.3039934635162354, 2.3031485080718994, 2.303213596343994, 2.303354024887085, 2.3031973838806152, 2.3032948970794678, 2.303377389907837, 2.303197145462036, 2.303407907485962, 2.3033204078674316, 2.303347587585449, 2.3032593727111816, 2.303234577178955], "accuracy": [0.15255580842494965, 0.09840179979801178, 0.09681680053472519, 0.09602430462837219, 0.09694888442754745, 0.09734513610601425, 0.09628847241401672, 0.09906221181154251, 0.09840179979801178, 0.09509972482919693, 0.09826971590518951, 0.09708096832036972, 0.09602430462837219, 0.09615638852119446, 0.09509972482919693, 0.1006472036242485], "val_loss": [Infinity, 2.340662717819214, 2.3045363426208496, 2.3025808334350586, 2.3027424812316895, 2.302762269973755, 2.3028976917266846, 2.3026013374328613, 2.3030409812927246, 2.302997589111328, 2.3027725219726562, 2.302712917327881, 2.302726984024048, 2.3025472164154053, 2.3026366233825684, 2.3025996685028076], "val_accuracy": [0.09666666388511658, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.09666666388511658, 0.1003333330154419, 0.10100000351667404, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 6, 4, 9, 3, 1, 9, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 2, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [79, 45, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [45, 23, 80, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 0, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 3, 5, 4], [4, 7, 4], [30, 94]], "fitness": -0.08942857384681702, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 3, 1, 2, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(grad, grad), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.square(grad), grad))", "other_info": {"loss": [2.3092801570892334, 2.3095126152038574, 2.3089253902435303, 2.3090295791625977, 2.3100600242614746, 2.3096160888671875], "accuracy": [0.08928807079792023, 0.0948355570435524, 0.09298639744520187, 0.09338264167308807, 0.0948355570435524, 0.09509972482919693], "val_loss": [2.3084940910339355, 2.3084919452667236, 2.3084897994995117, 2.308487892150879, 2.308486223220825, 2.3084850311279297], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]