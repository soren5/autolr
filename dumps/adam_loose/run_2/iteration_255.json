[{"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 6, 9, 0, 2, 2, 4, 8, 6, 1, 6, 9, 9, 2, 5, 6, 4, 1, 5, 0, 2, 1, 7], [2, 2, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [64, 58, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 7, 0, 1, 1, 3, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 0, 4, 1, 0, 3, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.6468571424484253, "mapping_values": [1, 19, 13, 6, 5, 7, 5, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.add(grad, alpha)))), tf.math.pow(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.797118186950684, 2.2549843788146973, 2.1783976554870605, 1.9667601585388184, 1.8124380111694336, 1.6562504768371582, 1.6370881795883179, 2.488010883331299, 1.7105799913406372, 1.624365210533142, 1.5630760192871094, 1.472415566444397, 1.4158049821853638, 1.4242068529129028, 1.288901686668396, 1.197201132774353, 3.2971699237823486, 2.344485282897949, 2.3293981552124023, 2.272289514541626], "accuracy": [0.1954827606678009, 0.16510368883609772, 0.2382776439189911, 0.33905693888664246, 0.39228636026382446, 0.4356095492839813, 0.4497424364089966, 0.19957733154296875, 0.40007925033569336, 0.44868576526641846, 0.46889445185661316, 0.49649980664253235, 0.5190860033035278, 0.49966979026794434, 0.5515784025192261, 0.5822216272354126, 0.25082552433013916, 0.09694888442754745, 0.09509972482919693, 0.1516312211751938], "val_loss": [2.297053813934326, 2.153944492340088, 2.08245587348938, 1.4415719509124756, 1.6112369298934937, 1.4703774452209473, 3.3103854656219482, 1.5008865594863892, 1.363783836364746, 1.4383686780929565, 1.161162257194519, 1.0751644372940063, 1.3754280805587769, 1.1130950450897217, 0.9994473457336426, 1.400227665901184, 2.3175737857818604, 2.3091251850128174, 2.3032028675079346, 2.2527036666870117], "val_accuracy": [0.14100000262260437, 0.20200000703334808, 0.3009999990463257, 0.5183333158493042, 0.47433334589004517, 0.5113333463668823, 0.5096666812896729, 0.5070000290870667, 0.5583333373069763, 0.515999972820282, 0.6190000176429749, 0.6443333625793457, 0.5416666865348816, 0.5830000042915344, 0.6463333368301392, 0.4973333477973938, 0.10199999809265137, 0.10199999809265137, 0.10166666656732559, 0.1889999955892563]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 5, 1, 4, 2, 2, 4, 8, 2, 1, 4, 1, 4, 3, 4, 6, 4, 1, 5, 0, 2, 1, 7, 1], [0, 2, 2, 0, 1, 2, 1, 2, 2, 2, 0, 2, 1, 1, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [64, 97, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [10, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.40857142210006714, "mapping_values": [1, 45, 24, 21, 4, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.pow(grad, alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.square(grad), tf.math.negative(tf.math.add(grad, grad))), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), alpha))), alpha)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad), grad), grad), grad)))), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5261452198028564, 2.188157796859741, 4.154722213745117, 2.3126394748687744, 2.3051095008850098, 2.3033695220947266, 2.303276538848877], "accuracy": [0.20221899449825287, 0.20063400268554688, 0.17751948535442352, 0.09721305221319199, 0.09668471664190292, 0.09774138033390045, 0.09708096832036972], "val_loss": [2.2841439247131348, 2.2678380012512207, 2.3197154998779297, 2.3063526153564453, 2.3034110069274902, 2.302833318710327, 2.3026368618011475], "val_accuracy": [0.14300000667572021, 0.40966665744781494, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 8, 4, 2, 5, 4, 8, 8, 1, 4, 0, 3, 4, 4, 9, 4, 6, 0, 6, 2, 1, 7], [2, 2, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [59, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [4, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3037142753601074, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3375473022460938, 2.300974130630493, 2.314783811569214, 2.3105931282043457, 2.304609775543213, 2.219409942626953, 2.309929370880127, 2.3049864768981934, 2.303537607192993, 2.3030648231506348, 2.28471040725708], "accuracy": [0.19191652536392212, 0.11332716792821884, 0.14555540680885315, 0.14330999553203583, 0.10077928751707077, 0.17778365314006805, 0.17936864495277405, 0.09642054885625839, 0.09959053993225098, 0.09219389408826828, 0.1492537260055542], "val_loss": [2.3041040897369385, 2.2657861709594727, 2.2014894485473633, 2.3073794841766357, 2.2990756034851074, 2.159069061279297, 2.305408239364624, 2.3030550479888916, 2.30271315574646, 2.3020052909851074, 2.3079028129577637], "val_accuracy": [0.0976666659116745, 0.10233332961797714, 0.19766665995121002, 0.10100000351667404, 0.10766666382551193, 0.3113333284854889, 0.10100000351667404, 0.10100000351667404, 0.1003333330154419, 0.11666666716337204, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 5, 9, 4, 2, 2, 4, 8, 2, 1, 4, 1, 9, 3, 5, 6, 4, 1, 5, 0, 2, 1, 7], [3, 2, 1, 1, 1, 2, 1, 2, 2, 1, 0, 0, 1, 2, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [64, 97, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 0, 5, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.29742857813835144, "mapping_values": [1, 4, 3, 1, 1, 3, 1, 2, 0, 9, 4, 5, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3660950660705566, 2.255714178085327, 2.2600080966949463, 2.774585485458374, 2.3358404636383057, 2.305908679962158, 2.3036746978759766, 2.302978277206421, 2.3031411170959473], "accuracy": [0.18940694630146027, 0.15915995836257935, 0.14793290197849274, 0.16576409339904785, 0.12257297337055206, 0.09813763201236725, 0.10038304328918457, 0.1002509593963623, 0.10196803510189056], "val_loss": [2.302060127258301, 2.3053112030029297, 2.3009514808654785, 2.1590828895568848, 2.3079452514648438, 2.3034634590148926, 2.302769422531128, 2.302614212036133, 2.3025903701782227], "val_accuracy": [0.10066666454076767, 0.11433333158493042, 0.10433333367109299, 0.2849999964237213, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [9, 4, 1, 4, 2, 9, 4, 8, 5, 1, 4, 1, 4, 3, 4, 6, 4, 1, 5, 2, 2, 1, 7, 0, 5], [0, 2, 2, 0, 1, 2, 1, 2, 2, 1, 0, 0, 1, 1, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [0, 97, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [67, 43, 9, 41, 8, 43, 2], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [10, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2937142848968506, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3065073490142822, 2.2892348766326904, 2.576173782348633, 2.2936220169067383, 2.3975374698638916, 2.307878017425537], "accuracy": [0.2238806039094925, 0.13380002975463867, 0.1752740740776062, 0.1138555034995079, 0.20604939758777618, 0.09721305221319199], "val_loss": [2.0217032432556152, 2.268376588821411, 2.3096041679382324, 2.140963315963745, 2.3132033348083496, 2.3044965267181396], "val_accuracy": [0.28866666555404663, 0.2563333213329315, 0.10066666454076767, 0.28466665744781494, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 5, 9, 4, 2, 2, 4, 8, 2, 1, 4, 1, 9, 3, 5, 6, 4, 1, 5, 0, 2, 1, 7], [3, 2, 1, 1, 1, 2, 1, 2, 2, 1, 0, 0, 1, 2, 1, 0, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [64, 97, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 1, 9, 0, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.19942857325077057, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5105085372924805, 2.4479775428771973, 2.3034937381744385, 2.33485746383667, 2.3187978267669678, 2.3032305240631104], "accuracy": [0.19191652536392212, 0.1438383311033249, 0.10711926966905594, 0.17395325005054474, 0.08770307898521423, 0.09813763201236725], "val_loss": [2.2303073406219482, 2.3044774532318115, 2.29691481590271, 2.3871729373931885, 2.3032572269439697, 2.3023741245269775], "val_accuracy": [0.20533333718776703, 0.1003333330154419, 0.1003333330154419, 0.12033333629369736, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 1, 8, 2, 5, 4, 8, 8, 1, 6, 0, 2, 4, 4, 6, 4, 1, 0, 0, 2, 1, 7, 0, 2], [2, 2, 1, 0, 1, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 9, 9, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 1, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.16657142341136932, "mapping_values": [1, 42, 25, 17, 4, 5, 4, 1, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(alpha)))))), tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.negative(alpha)), tf.math.add(tf.math.subtract(grad, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), alpha), alpha)), alpha), grad)))))), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7659358978271484, 2.3638508319854736, 2.325087785720825, 2.3056633472442627, 2.3033738136291504, 2.3031163215637207], "accuracy": [0.20552106201648712, 0.15202747285366058, 0.1666886806488037, 0.09774138033390045, 0.09972262382507324, 0.09615638852119446], "val_loss": [2.2586746215820312, 2.3128793239593506, 2.3069522380828857, 2.3029792308807373, 2.302574396133423, 2.30259108543396], "val_accuracy": [0.17266666889190674, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 1, 4, 2, 5, 4, 8, 8, 1, 4, 0, 2, 4, 4, 6, 4, 1, 0, 0, 2, 1, 7], [2, 2, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 1, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [2, 4, 2, 1, 0, 4, 4, 7, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 23, 18, 4, 3, 1, 2, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(alpha, grad), tf.math.negative(tf.math.negative(alpha))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), alpha)))), grad)), grad))))))))), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [16.284521102905273, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20063400268554688, 0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5441.88623046875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07699999958276749, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 5, 2, 4, 2, 5, 4, 8, 8, 1, 4, 0, 9, 4, 4, 3, 4, 8, 0, 0, 2, 1, 1], [2, 2, 1, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 89, 17, 96, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [5, 6, 9, 1, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 1, 2, 1, 1, 0, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.square(grad)), alpha), tf.math.pow(tf.math.sqrt(grad), alpha))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035683631896973, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 5, 2, 3, 3, 3, 4, 8, 8, 1, 2, 0, 2, 8, 4, 6, 4, 2, 0, 0, 2, 1, 6], [2, 2, 1, 0, 1, 0, 0, 1, 2, 1, 0, 1, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 89, 17, 4, 12, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 9, 8, 0, 4, 9, 8, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 2, 3, 3, 3, 0, 1, 3, 3, 3, 3, 4, 4], [53, 43, 9, 41, 8, 43, 2], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 7, 0, 1, 1, 4, 3, 1, 2, 9, 4, 2, 2, 2, 5, 2, 6, 0, 5], [6, 0, 2, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [97, 96, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [2, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 1, 0, 1, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(tf.math.multiply(grad, tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(alpha, tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [13808221184.0, 2141171482624.0, 36154539769856.0, 253165085655040.0, 1117897577463808.0, 3760120118902784.0], "accuracy": [0.10130762308835983, 0.09893012791872025, 0.10368511080741882, 0.09932637959718704, 0.09826971590518951, 0.09800554811954498], "val_loss": [142255685632.0, 7669293776896.0, 82320262430720.0, 448775394951168.0, 1681008860594176.0, 4958619200126976.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]