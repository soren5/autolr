[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 3, 8, 0, 2, 7, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 2, 1, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 2, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [3, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 5, 2, 6, 4, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [0, 4, 2, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.7865714430809021, "mapping_values": [1, 6, 4, 2, 0, 11, 7, 4, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(tf.math.subtract(beta, tf.math.add(tf.math.subtract(grad, beta), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.303537368774414, 2.2551143169403076, 2.2996068000793457, 2.3015990257263184, 2.146833658218384, 1.8127883672714233, 1.3642016649246216, 1.5368094444274902, 1.1999449729919434, 1.1589858531951904, 0.9490944147109985, 0.9220352172851562, 0.7988823652267456, 0.7825612425804138, 0.7171685695648193, 0.702349841594696, 0.6643667817115784, 0.6994363069534302, 0.6266822814941406, 0.6253035068511963, 0.6061018705368042, 0.5699912309646606, 0.5246301293373108], "accuracy": [0.19416193664073944, 0.1666886806488037, 0.11715757846832275, 0.14198917150497437, 0.23312640190124512, 0.3967771828174591, 0.5705983638763428, 0.499009370803833, 0.6022982597351074, 0.6118082404136658, 0.6758684515953064, 0.6859067678451538, 0.713908314704895, 0.7265883088111877, 0.7475894689559937, 0.743891179561615, 0.7547219395637512, 0.752740740776062, 0.7689869403839111, 0.7687227725982666, 0.7754589915275574, 0.7877426743507385, 0.8061022162437439], "val_loss": [2.275413751602173, 2.314237356185913, 2.1879193782806396, 2.2783682346343994, 1.5123941898345947, 1.336696982383728, 1.2171657085418701, 1.2527236938476562, 0.9616384506225586, 0.8843361735343933, 0.8366302251815796, 0.6671262383460999, 0.6902540922164917, 0.6430875062942505, 0.6160946488380432, 0.5725221633911133, 0.6692416667938232, 0.5676589608192444, 0.6066032648086548, 0.5960320830345154, 0.6442073583602905, 0.5775242447853088, 0.5534026026725769], "val_accuracy": [0.2446666657924652, 0.09866666793823242, 0.32499998807907104, 0.11533333361148834, 0.43666666746139526, 0.5923333168029785, 0.6269999742507935, 0.5963333249092102, 0.6596666574478149, 0.6993333101272583, 0.6946666836738586, 0.7440000176429749, 0.746666669845581, 0.7643333077430725, 0.7713333368301392, 0.7776666879653931, 0.7356666922569275, 0.7879999876022339, 0.7523333430290222, 0.7739999890327454, 0.7636666893959045, 0.7760000228881836, 0.7876666784286499]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 8, 0, 2, 7, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 1, 4, 1, 2, 8, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 4, 2, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [19, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 4, 6, 5, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.5751428604125977, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7005767822265625, 2.285336971282959, 2.498778820037842, 2.3042714595794678, 2.2963149547576904, 2.109600305557251, 1.954309105873108, 1.8688162565231323, 1.6340667009353638, 2.0793142318725586, 1.9888898134231567, 1.4253277778625488], "accuracy": [0.17619864642620087, 0.11081759631633759, 0.16629242897033691, 0.09642054885625839, 0.11953506618738174, 0.2584863305091858, 0.3509443998336792, 0.38805970549583435, 0.46506404876708984, 0.2748646140098572, 0.33245277404785156, 0.5115572810173035], "val_loss": [2.3214097023010254, 2.2733540534973145, 2.304384231567383, 2.3002357482910156, 2.2771568298339844, 1.942358374595642, 1.3709779977798462, 1.432367205619812, 2.089777708053589, 2.116621971130371, 1.4738222360610962, 1.4029003381729126], "val_accuracy": [0.10100000351667404, 0.2606666684150696, 0.10100000351667404, 0.109333336353302, 0.22466666996479034, 0.35233333706855774, 0.5630000233650208, 0.534333348274231, 0.40299999713897705, 0.28033334016799927, 0.5099999904632568, 0.5350000262260437]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 2, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 1, 2, 1, 1, 9, 2, 9, 6, 2, 6, 2, 0, 2, 9, 4, 0, 3, 8, 1, 3], [2, 3, 3, 0, 2, 0, 3, 3, 3, 3, 3, 4, 4], [3, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 4, 6, 5, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [2, 4, 2, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.37457144260406494, "mapping_values": [1, 1, 0, 1, 0, 14, 8, 6, 3, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(beta, grad), grad), tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(beta, grad), tf.math.square(beta))), tf.math.sqrt(grad)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4456052780151367, 2.2902212142944336, 2.3070077896118164, 2.3038527965545654, 2.3031299114227295, 2.3030402660369873], "accuracy": [0.19416193664073944, 0.1644432693719864, 0.10130762308835983, 0.1002509593963623, 0.10011887550354004, 0.10276053100824356], "val_loss": [2.183581590652466, 2.3095855712890625, 2.3032963275909424, 2.3025472164154053, 2.302502393722534, 2.302333354949951], "val_accuracy": [0.3623333275318146, 0.10133333504199982, 0.10133333504199982, 0.11166666448116302, 0.11266666650772095, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 8, 0, 2, 7, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [3, 3, 3, 2, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 8, 1, 4, 1, 2, 1, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 2, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [74, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 4, 6, 5, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.2848571538925171, "mapping_values": [1, 12, 7, 5, 0, 34, 21, 13, 3, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(grad, grad), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, grad), beta), tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(grad)))), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(grad)), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.pow(grad, grad))), alpha), grad)), grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3054728507995605, 2.858572244644165, 2.2774226665496826, 2.2603514194488525, 2.2880659103393555, 2.4230477809906006, 2.066654920578003, 2.3060050010681152, 2.303377151489258, 2.3034827709198, 2.3034145832061768], "accuracy": [0.20961563289165497, 0.1220446452498436, 0.16853784024715424, 0.15057456493377686, 0.1608770340681076, 0.15691454708576202, 0.2674679756164551, 0.09787346422672272, 0.10117553919553757, 0.09813763201236725, 0.09589222073554993], "val_loss": [6.1926727294921875, 2.3200018405914307, 2.307537078857422, 2.313495397567749, 3.10274338722229, 2.0510973930358887, 2.307331085205078, 2.3030624389648438, 2.3027632236480713, 2.302178382873535, 2.30245304107666], "val_accuracy": [0.10100000351667404, 0.09399999678134918, 0.0976666659116745, 0.1589999943971634, 0.25033333897590637, 0.2863333225250244, 0.10100000351667404, 0.10266666859388351, 0.10133333504199982, 0.10333333164453506, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 1, 2, 1, 5, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 2, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 4, 6, 5, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.2685714364051819, "mapping_values": [1, 15, 9, 6, 2, 14, 9, 5, 2, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.subtract(grad, alpha))), alpha))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta), tf.math.add(grad, tf.math.square(beta))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(grad)), grad), alpha)), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3953070640563965, 2.480450391769409, 2.258936643600464, 2.3764045238494873, 2.3059511184692383, 2.3037891387939453], "accuracy": [0.20538897812366486, 0.13630960881710052, 0.17474573850631714, 0.18042530119419098, 0.09391097724437714, 0.10157178342342377], "val_loss": [2.2019596099853516, 2.303173065185547, 1.869365930557251, 2.306938648223877, 2.3029801845550537, 2.302351236343384], "val_accuracy": [0.27266666293144226, 0.10266666859388351, 0.24666666984558105, 0.10133333504199982, 0.09966666996479034, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [7, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 1, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 1, 2, 1, 1, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0, 3], [1, 3, 3, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [3, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 5, 2, 6, 4, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.26742857694625854, "mapping_values": [1, 15, 9, 6, 2, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, alpha))), alpha))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5856425762176514, 2.7267541885375977, 2.3066177368164062, 2.8103792667388916, 2.3642256259918213, 2.304675817489624], "accuracy": [0.21120063960552216, 0.20393607020378113, 0.10051512718200684, 0.1868973672389984, 0.09959053993225098, 0.09813763201236725], "val_loss": [1.8135437965393066, 2.3163645267486572, 2.2640256881713867, 2.6579365730285645, 2.303647994995117, 2.3025870323181152], "val_accuracy": [0.27266666293144226, 0.10000000149011612, 0.17100000381469727, 0.10000000149011612, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [8, 2, 1, 2, 1, 1, 9, 2, 5, 3, 2, 6, 2, 0, 2, 9, 4, 0, 3, 8, 0, 3], [2, 2, 3, 0, 2, 0, 1, 3, 3, 3, 3, 0, 4], [3, 23, 80, 32, 8, 43, 2], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [4, 2, 5, 2, 6, 4, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.20657142996788025, "mapping_values": [1, 1, 0, 1, 0, 29, 18, 11, 4, 13, 7, 6, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.subtract(beta, beta), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.add(grad, alpha)), tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4225761890411377, 2.392777681350708, 4.522687911987305, 2.312407970428467, 2.3043508529663086, 2.3727540969848633], "accuracy": [0.20921939611434937, 0.10659094154834747, 0.12719587981700897, 0.09853387624025345, 0.10011887550354004, 0.1784440577030182], "val_loss": [2.3518612384796143, 2.2392640113830566, 2.3217215538024902, 2.304723024368286, 2.301011085510254, 2.3082642555236816], "val_accuracy": [0.20633333921432495, 0.17000000178813934, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 2, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [8, 2, 1, 0, 1, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 6, 4, 0, 2, 8, 0, 4], [2, 3, 3, 0, 2, 3, 1, 3, 3, 1, 3, 4, 4], [3, 23, 80, 6, 8, 43, 2], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 4, 6, 5, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [1, 4, 2, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.18400000035762787, "mapping_values": [1, 1, 0, 1, 0, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(beta, tf.math.negative(tf.math.subtract(grad, grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3256020545959473, 2.2435123920440674, 2.500293731689453, 2.3054609298706055, 2.3033792972564697, 2.2983832359313965, 2.267840623855591, 2.241243839263916, 2.3061890602111816, 2.303628444671631, 2.303529739379883], "accuracy": [0.1958790123462677, 0.18716153502464294, 0.19653943181037903, 0.1006472036242485, 0.10051512718200684, 0.10738343745470047, 0.17923656105995178, 0.19535067677497864, 0.09602430462837219, 0.09602430462837219, 0.09549596905708313], "val_loss": [2.3003523349761963, 2.445260524749756, 2.3062093257904053, 2.3027851581573486, 2.3014347553253174, 2.2612433433532715, 2.3004822731018066, 2.308147430419922, 2.3028712272644043, 2.3026320934295654, 2.302342414855957], "val_accuracy": [0.12300000339746475, 0.0963333323597908, 0.09866666793823242, 0.0963333323597908, 0.10300000011920929, 0.18333333730697632, 0.1340000033378601, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 7, 2, 2, 3, 2, 2, 1, 9, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [2, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 0, 1, 2, 1, 2, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 3, 0, 2, 0, 1, 3, 3, 3, 3, 4, 4], [3, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 5, 2, 6, 4, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [71, 16, 33, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [4, 0, 4], [44, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 7, 2, 9, 3, 8, 7, 1, 5, 8, 8, 7, 3, 1, 6, 9, 2, 0, 2, 2, 0, 8, 0, 2], [1, 3, 3, 1, 1, 0, 2, 1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 33, 5, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 2, 8, 2, 1, 6, 9, 2, 5, 6, 2, 6, 2, 4, 2, 9, 0, 0, 5, 8, 0, 3], [3, 3, 3, 0, 2, 0, 1, 3, 3, 0, 2, 4, 1], [3, 23, 80, 41, 8, 43, 2], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 2, 2, 2, 2, 4, 8, 4, 9, 2, 3, 9, 5, 1, 8, 0, 9, 2, 5, 0, 8, 0, 6, 8, 8, 8], [6, 4, 1, 5, 4, 4, 4, 0, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [5, 16, 33, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 8, 9, 4], [1, 0, 4], [44, 94]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 0, 14, 9, 5, 2, 18, 10, 8, 2, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(tf.math.add(grad, tf.math.pow(alpha, tf.math.sqrt(grad))), grad)), grad), tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.31040620803833, 2.3104684352874756, 2.3109054565429688, 2.31113862991333, 2.3101348876953125, 2.3119802474975586], "accuracy": [0.08981640636920929, 0.0874389111995697, 0.09008057415485382, 0.0878351628780365, 0.09034473448991776, 0.09008057415485382], "val_loss": [2.309319496154785, 2.309319496154785, 2.309319496154785, 2.309319496154785, 2.309319496154785, 2.309319496154785], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]