[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 8, 3, 4, 9, 5], [0, 0, 0, 0], [53, 23, 94, 4, 52], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [3, 2, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [1, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 2, 4, 3, 3, 2, 2, 3, 1], [3, 7, 4, 3, 7, 3, 7, 4, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.7620000243186951, "mapping_values": [1, 9, 6, 3, 4, 1, 0, 1, 0, 19, 9, 10, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.math.add(grad, tf.math.multiply(grad, sigma))), grad), tf.math.subtract(sigma, grad)), grad), alpha), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.829932689666748, 2.2827258110046387, 2.303136110305786, 2.2699453830718994, 2.2874481678009033, 2.130645751953125, 2.3090484142303467, 2.3016228675842285, 2.327191114425659, 1.9881196022033691, 1.7437328100204468, 1.698349118232727, 2.1644809246063232, 1.630651593208313, 1.602673053741455, 1.43366277217865, 1.3510701656341553, 1.698818325996399, 1.8305649757385254, 1.2886592149734497, 1.2258330583572388, 1.0881881713867188, 1.1428165435791016, 0.9631420373916626, 0.8665173053741455, 0.8763147592544556, 0.8067931532859802, 0.7400138974189758, 0.773071825504303, 1.0289490222930908, 0.7961700558662415, 0.7159513831138611, 0.7258755564689636], "accuracy": [0.2156914472579956, 0.16497160494327545, 0.10711926966905594, 0.15915995836257935, 0.14370624721050262, 0.26443007588386536, 0.14529123902320862, 0.10817593336105347, 0.19640734791755676, 0.3015453815460205, 0.42028793692588806, 0.44010037183761597, 0.29203540086746216, 0.46044114232063293, 0.44710078835487366, 0.5172368288040161, 0.5495971441268921, 0.46625280380249023, 0.4297979176044464, 0.5453705191612244, 0.5711266398429871, 0.609959065914154, 0.5980715751647949, 0.6386210322380066, 0.6840575933456421, 0.6804913282394409, 0.7034738063812256, 0.7193237543106079, 0.7173424959182739, 0.6553955674171448, 0.7025492191314697, 0.7304186820983887, 0.7290979027748108], "val_loss": [2.3354101181030273, 2.2821848392486572, 2.298430919647217, 2.0202136039733887, 2.278048515319824, 2.2856507301330566, 2.304626226425171, 2.2693145275115967, 1.72709321975708, 1.7799988985061646, 1.8513603210449219, 2.375446081161499, 1.4363380670547485, 1.9859952926635742, 1.1616305112838745, 1.25982666015625, 1.287502646446228, 1.1589499711990356, 1.1658918857574463, 1.1424328088760376, 0.946406900882721, 0.9034160375595093, 0.9207534193992615, 0.8080009818077087, 0.8019819855690002, 0.6710051894187927, 0.6281081438064575, 0.5924157500267029, 0.750413179397583, 0.7285564541816711, 0.5907027721405029, 0.5941551923751831, 0.6810572743415833], "val_accuracy": [0.10100000351667404, 0.15533334016799927, 0.13966666162014008, 0.30433332920074463, 0.18199999630451202, 0.17499999701976776, 0.09833333641290665, 0.17033334076404572, 0.3856666684150696, 0.4426666796207428, 0.34566667675971985, 0.4596666693687439, 0.48399999737739563, 0.28299999237060547, 0.6013333201408386, 0.624666690826416, 0.6320000290870667, 0.5910000205039978, 0.6053333282470703, 0.5720000267028809, 0.6566666960716248, 0.6796666383743286, 0.624666690826416, 0.721666693687439, 0.6990000009536743, 0.7590000033378601, 0.7673333287239075, 0.7829999923706055, 0.7049999833106995, 0.7226666808128357, 0.778333306312561, 0.781333327293396, 0.7583333253860474]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [3, 4, 8, 0, 4, 9], [1, 0, 0, 0], [70, 60, 48, 4], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [8, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [3, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 5, 3, 3, 2, 2, 3, 1], [7, 7, 4, 3, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.4188571572303772, "mapping_values": [1, 9, 6, 3, 3, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3081421852111816, 2.2612364292144775, 2.3026652336120605, 2.2959516048431396, 2.3034451007843018, 2.2829668521881104, 2.310533285140991, 2.299705743789673, 2.2980806827545166, 2.2557156085968018, 2.264953851699829], "accuracy": [0.21080438792705536, 0.14595165848731995, 0.09945846349000931, 0.12468630075454712, 0.09681680053472519, 0.1542728841304779, 0.16510368883609772, 0.13961167633533478, 0.12812046706676483, 0.15638621151447296, 0.14330999553203583], "val_loss": [2.2387278079986572, 2.304347276687622, 2.290799856185913, 2.3037099838256836, 2.300494909286499, 1.898922324180603, 2.302353620529175, 2.3055732250213623, 2.23525333404541, 2.3057680130004883, 2.0461606979370117], "val_accuracy": [0.2070000022649765, 0.1003333330154419, 0.10133333504199982, 0.10166666656732559, 0.14499999582767487, 0.41233333945274353, 0.14800000190734863, 0.10333333164453506, 0.18933333456516266, 0.10166666656732559, 0.3006666600704193]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1], [3, 4, 8, 0, 4], [0, 0, 0, 0], [70, 23, 94, 4], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [7, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [5, 4, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 4, 1, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.34771427512168884, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.15368914604187, 3.3601555824279785, 2.304226875305176, 2.2625527381896973, 2.1466193199157715, 2.307478666305542, 2.3039495944976807, 2.3032784461975098, 2.302687168121338], "accuracy": [0.2036719024181366, 0.1022322028875351, 0.10342095047235489, 0.14674416184425354, 0.3061682879924774, 0.09840179979801178, 0.09708096832036972, 0.09879804402589798, 0.09655263274908066], "val_loss": [3.0687248706817627, 2.30645489692688, 2.2997500896453857, 1.9190819263458252, 2.3105127811431885, 2.3037874698638916, 2.3032219409942627, 2.3025803565979004, 2.3025155067443848], "val_accuracy": [0.10166666656732559, 0.10133333504199982, 0.1133333370089531, 0.34599998593330383, 0.10133333504199982, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 4, 6, 3, 4, 2, 7, 5, 3, 5, 2], [1, 0, 0, 0, 0, 2, 0, 1, 2, 2], [54, 23, 95, 4, 42], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [8, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [1, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 4, 3, 3, 2, 2, 3, 1], [7, 2, 4, 3, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [25, 94]], "fitness": -0.2822857201099396, "mapping_values": [1, 21, 11, 10, 5, 4, 2, 2, 0, 13, 6, 7, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(grad), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.multiply(beta, grad)), tf.math.multiply(sigma, tf.math.add(grad, sigma))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.378141403198242, 3.305777072906494, 2.296954393386841, 2.383979320526123, 2.304107904434204, 2.303060531616211, 2.302933692932129, 2.3031117916107178], "accuracy": [0.17580240964889526, 0.18174614012241364, 0.13393211364746094, 0.1352529376745224, 0.09457138925790787, 0.09417514503002167, 0.09787346422672272, 0.09628847241401672], "val_loss": [2.299785614013672, 2.3382210731506348, 2.1736457347869873, 2.304715156555176, 2.303144931793213, 2.302717924118042, 2.3026106357574463, 2.3025784492492676], "val_accuracy": [0.140666663646698, 0.09266666322946548, 0.28166666626930237, 0.10100000351667404, 0.10100000351667404, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 6, 0, 3, 3, 0, 3, 7, 0, 4, 9, 8, 6, 5, 3, 9, 8, 4, 1, 0, 4, 9, 6], [0, 0, 2, 2, 2, 0, 2, 2, 2, 1, 1, 3], [53, 23, 94, 4, 52, 28, 36, 25], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [8, 3, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [5, 4, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 4, 3, 3, 2, 2, 3, 1], [5, 6, 4, 3, 7, 4, 7, 2, 2], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.263142853975296, "mapping_values": [1, 34, 23, 11, 6, 4, 2, 2, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(grad))), grad), tf.math.multiply(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(grad), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(grad, grad)))))))), tf.math.subtract(tf.math.negative(alpha), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5736348628997803, 2.3419294357299805, 2.2107365131378174, 2.259949207305908, 2.323322057723999, 2.3046250343322754, 2.304003953933716], "accuracy": [0.19693566858768463, 0.160084530711174, 0.20737022161483765, 0.14476291835308075, 0.1394795924425125, 0.09681680053472519, 0.09206181764602661], "val_loss": [2.0736031532287598, 1.8939961194992065, 2.3122053146362305, 2.2859597206115723, 2.304426670074463, 2.302652597427368, 2.302720785140991], "val_accuracy": [0.15166667103767395, 0.2553333342075348, 0.10366666316986084, 0.10966666787862778, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 8, 0, 4, 4, 7, 7, 2], [1, 0, 0, 0, 1, 3, 0, 2], [35, 60, 89, 4], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [7, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [3, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 5, 3, 4, 2, 5, 3, 1], [6, 7, 4, 1, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.19942857325077057, "mapping_values": [1, 17, 9, 8, 4, 5, 3, 2, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(alpha), tf.math.negative(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.472853899002075, 2.306382656097412, 2.263056755065918, 2.7063708305358887, 2.305706739425659, 2.3035359382629395, 2.303370714187622, 2.3032381534576416], "accuracy": [0.21291771531105042, 0.1014397069811821, 0.15849953889846802, 0.15876370668411255, 0.10196803510189056, 0.09747721254825592, 0.0948355570435524, 0.09840179979801178], "val_loss": [2.314453363418579, 2.30002498626709, 4.015216827392578, 2.3081021308898926, 2.303393602371216, 2.3028342723846436, 2.3027496337890625, 2.302753210067749], "val_accuracy": [0.10233332961797714, 0.10133333504199982, 0.20000000298023224, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 5, 0, 4], [0, 0, 0, 0], [22, 39, 94, 69], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [8, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [1, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 4, 3, 3, 2, 2, 3, 1], [0, 5, 4, 3, 7, 4, 7, 2, 2], [39, 25], [0, 0, 0, 1, 1, 1, 1], [7, 9, 1, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 4, 2, 2, 0, 1, 0, 1, 1, 5, 3, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [25365382.0, 2.3141987323760986, 2.305288076400757, 2.3034937381744385, 2.302997589111328, 2.3030178546905518], "accuracy": [0.0956280529499054, 0.09800554811954498, 0.09840179979801178, 0.09800554811954498, 0.09391097724437714, 0.09655263274908066], "val_loss": [2.322169065475464, 2.30753231048584, 2.3038489818573, 2.3030896186828613, 2.302820920944214, 2.3028903007507324], "val_accuracy": [0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 8, 0, 4], [1, 0, 0, 0], [70, 60, 91, 4], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [7, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [3, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 5, 3, 3, 2, 2, 3, 1], [4, 7, 4, 3, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.929467678070068, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18914277851581573, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3355.625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 4, 8, 0, 4], [0, 0, 3, 0], [70, 60, 24, 4], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [7, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [1, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 4, 3, 3, 2, 2, 3, 1], [6, 7, 4, 3, 7, 3, 7, 4], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035242557525635, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 4, 8, 0, 4], [1, 0, 0, 0], [37, 60, 24, 4], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [7, 7, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [3, 3, 2, 4, 1, 5, 1, 4], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 5, 3, 3, 2, 2, 3, 1], [6, 7, 4, 3, 7, 3, 7, 4], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033924102783203, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]