[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 4, 8, 4, 5, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 0, 4, 1, 1, 7, 4, 8, 3, 9, 9, 6, 0, 0, 8, 9, 1, 6, 4, 5, 4, 7, 3, 7, 9], [3, 5, 1, 3, 3, 3, 3, 2, 2, 3, 1, 5, 0], [11, 56, 78, 15, 8], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.505142867565155, "mapping_values": [1, 9, 6, 3, 1, 37, 25, 12, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(alpha, grad), tf.math.sqrt(tf.math.pow(tf.math.square(alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(grad, grad)), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.sqrt(alpha), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), tf.math.pow(tf.math.add(grad, grad), tf.math.multiply(grad, beta))), beta), grad))), tf.math.add(alpha, grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3032913208007812, 2.3507039546966553, 2.302630662918091, 2.2883405685424805, 2.4600696563720703, 2.305325746536255, 2.303670883178711, 2.289466142654419, 2.1907825469970703], "accuracy": [0.20063400268554688, 0.1262712925672531, 0.09787346422672272, 0.151234969496727, 0.1504424810409546, 0.10315678268671036, 0.10791176557540894, 0.12759213149547577, 0.21991810202598572], "val_loss": [2.2050530910491943, 2.3029775619506836, 2.3011789321899414, 2.149573802947998, 2.302978277206421, 2.3032236099243164, 2.2988176345825195, 2.2530250549316406, 2.311375141143799], "val_accuracy": [0.2823333442211151, 0.10199999809265137, 0.1003333330154419, 0.4963333308696747, 0.10100000351667404, 0.1003333330154419, 0.10266666859388351, 0.1599999964237213, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 1, 0, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 4, 2, 3, 6, 0, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 1, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 8, 8, 8, 2, 3, 3, 1, 7, 2, 0, 2, 4, 6, 7, 7], [3, 7, 0, 4, 0, 3, 2, 2, 1, 4, 0, 0, 1, 6], [8, 25, 46, 52], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.47428572177886963, "mapping_values": [1, 10, 6, 4, 2, 4, 2, 2, 0, 31, 17, 14, 4, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(grad, alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.sqrt(sigma)), tf.math.sqrt(grad)), tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.negative(grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, beta))), tf.math.pow(beta, alpha)), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.942534923553467, 2.2977731227874756, 2.213942527770996, 2.304492950439453, 2.2931721210479736, 2.1127398014068604, 1.9843974113464355, 1.5687381029129028, 2.8158161640167236, 2.3044543266296387, 2.2356984615325928, 2.307227611541748], "accuracy": [0.2215031087398529, 0.1624620258808136, 0.21978603303432465, 0.10408136248588562, 0.12534672021865845, 0.282129168510437, 0.3035266101360321, 0.4861973226070404, 0.1372341811656952, 0.10421344637870789, 0.2016906589269638, 0.09866596013307571], "val_loss": [2.5846219062805176, 2.0547478199005127, 2.305382251739502, 2.3005411624908447, 2.151095151901245, 2.29903244972229, 1.5355411767959595, 2.024197816848755, 2.3038742542266846, 2.220369815826416, 2.308332920074463, 2.3032469749450684], "val_accuracy": [0.11699999868869781, 0.3696666657924652, 0.10233332961797714, 0.10233332961797714, 0.38199999928474426, 0.11400000005960464, 0.4779999852180481, 0.26233333349227905, 0.09833333641290665, 0.19166666269302368, 0.10233332961797714, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [7, 0, 9, 5, 4, 4, 2, 3, 6, 0, 2, 6, 0, 0, 8, 9, 1, 0, 6, 1, 9, 7, 9], [0, 2, 1, 3, 5, 5, 1, 3, 3, 3], [11, 56, 78, 15, 8], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 6, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 4, 3, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.43885713815689087, "mapping_values": [1, 4, 2, 2, 2, 4, 3, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2693610191345215, 2.322911262512207, 2.136601686477661, 2.2759687900543213, 2.1618309020996094, 2.2745168209075928, 2.3058106899261475, 2.303325653076172, 2.2837867736816406, 2.2993879318237305], "accuracy": [0.19535067677497864, 0.15281997621059418, 0.2386738806962967, 0.18333113193511963, 0.18478403985500336, 0.13432836532592773, 0.0944393053650856, 0.0956280529499054, 0.13842293620109558, 0.11332716792821884], "val_loss": [2.2872118949890137, 2.2192864418029785, 2.3175594806671143, 2.3191633224487305, 1.7908987998962402, 2.304152250289917, 2.3028178215026855, 2.301802396774292, 2.0729973316192627, 2.3036141395568848], "val_accuracy": [0.19833333790302277, 0.16333332657814026, 0.13600000739097595, 0.10300000011920929, 0.43833333253860474, 0.10000000149011612, 0.1003333330154419, 0.10100000351667404, 0.23800000548362732, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [3, 4, 2, 1, 4, 0, 4, 4, 2, 6, 3, 5, 6, 2, 5, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 3, 0, 1, 1, 2], [7, 93, 43, 4, 42, 35, 88, 45, 64, 49], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 1, 6, 1, 0, 7], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [16, 41], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.38857144117355347, "mapping_values": [1, 36, 20, 16, 10, 1, 0, 1, 0, 19, 12, 7, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.subtract(alpha, tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(grad)), tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), grad), sigma)), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.353171348571777, 2.2596848011016846, 2.368638277053833, 2.305706024169922, 2.303022861480713, 2.2970948219299316, 2.1949355602264404], "accuracy": [0.17870822548866272, 0.1228371411561966, 0.1962752640247345, 0.10091137140989304, 0.1006472036242485, 0.12178047746419907, 0.18755778670310974], "val_loss": [2.3089256286621094, 1.929388403892517, 2.3068430423736572, 2.3031561374664307, 2.302161931991577, 2.256282329559326, 2.31048846244812], "val_accuracy": [0.0976666659116745, 0.38966667652130127, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.17933332920074463, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 2, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [1, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 4, 6, 5, 1, 2, 2, 3, 5, 1, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 6, 0, 4, 2, 9, 3, 1, 6, 1, 0, 7], [1, 4, 0, 4, 7, 3, 1, 3, 1, 3], [25, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.37400001287460327, "mapping_values": [1, 9, 5, 4, 2, 3, 1, 2, 0, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(alpha, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad)), grad), sigma)), alpha)), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.273592710494995, 2.257312059402466, 2.2793431282043457, 2.303638458251953, 2.3034119606018066, 2.303304672241211, 2.3032546043395996], "accuracy": [0.21978603303432465, 0.1582353711128235, 0.13036586344242096, 0.09787346422672272, 0.09879804402589798, 0.09113723784685135, 0.09602430462837219], "val_loss": [2.0264925956726074, 1.9694578647613525, 2.303744316101074, 2.302718162536621, 2.3026700019836426, 2.3027656078338623, 2.302625894546509], "val_accuracy": [0.3216666579246521, 0.36766666173934937, 0.09966666996479034, 0.10133333504199982, 0.10133333504199982, 0.09600000083446503, 0.1263333261013031]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 4, 4, 4, 4, 1, 4, 2, 1, 4, 6, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 2, 1, 0, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [7, 93, 43, 4, 42, 35, 88, 45], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [46, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3142857253551483, "mapping_values": [1, 11, 5, 6, 2, 1, 0, 1, 0, 22, 13, 9, 2, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.pow(tf.math.pow(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.divide_no_nan(grad, sigma)), alpha)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), sigma)))), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.522514581680298, 2.310868501663208, 2.1907265186309814, 2.3785667419433594, 2.3035221099853516, 2.299945116043091, 2.2417831420898438, 2.3052546977996826, 2.30364727973938, 2.3027572631835938, 2.3035528659820557], "accuracy": [0.189274862408638, 0.11161009222269058, 0.187689870595932, 0.12178047746419907, 0.09760929644107819, 0.11372341960668564, 0.17382116615772247, 0.10315678268671036, 0.09893012791872025, 0.09959053993225098, 0.09536388516426086], "val_loss": [2.2835633754730225, 2.293592691421509, 2.602385997772217, 2.303467273712158, 2.301305055618286, 2.284320592880249, 2.305361270904541, 2.3027944564819336, 2.3027150630950928, 2.3026351928710938, 2.3027453422546387], "val_accuracy": [0.16033333539962769, 0.10466666519641876, 0.25733333826065063, 0.10133333504199982, 0.10133333504199982, 0.3006666600704193, 0.10166666656732559, 0.10466666519641876, 0.10133333504199982, 0.0963333323597908, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 4, 2, 3, 6, 0, 5, 6, 0, 0, 8, 9, 1, 0, 6], [2, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 4, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 0, 1, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 73], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.29600000381469727, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 22, 11, 11, 3, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.pow(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), sigma), alpha), tf.math.add(beta, alpha)))), sigma), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.418117046356201, 2.303474187850952, 2.201941728591919, 2.4400055408477783, 2.5700533390045166, 2.4686498641967773, 2.307135820388794, 2.303476095199585], "accuracy": [0.19072777032852173, 0.10949676483869553, 0.1822744756937027, 0.2254655957221985, 0.1010434553027153, 0.13419628143310547, 0.09893012791872025, 0.09285431355237961], "val_loss": [2.3091163635253906, 2.2945191860198975, 1.883792757987976, 2.4347922801971436, 2.308115005493164, 2.3101744651794434, 2.3039543628692627, 2.3017032146453857], "val_accuracy": [0.11699999868869781, 0.19300000369548798, 0.28333333134651184, 0.22066666185855865, 0.10066666454076767, 0.09700000286102295, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1, 0, 0, 3, 0, 1, 1], [38, 93, 43, 80, 42, 35], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 4, 8, 3, 8, 3, 6, 3, 9, 7, 2, 0, 2], [4, 7, 0, 4, 4, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.257999986410141, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.7876851558685303, 2.3050899505615234, 2.3034286499023438, 2.3015899658203125, 2.2641725540161133, 2.263033628463745, 2.315471649169922, 2.2991445064544678, 2.414970874786377, 2.3046061992645264], "accuracy": [0.17791573703289032, 0.09879804402589798, 0.1002509593963623, 0.09985470771789551, 0.15519747138023376, 0.23193766176700592, 0.09760929644107819, 0.11795007437467575, 0.15057456493377686, 0.10460969805717468], "val_loss": [2.306783437728882, 2.3035669326782227, 2.3025364875793457, 2.295095920562744, 1.9919723272323608, 2.327575922012329, 2.304619312286377, 2.2835676670074463, 2.3056228160858154, 2.303030014038086], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.1003333330154419, 0.12333333492279053, 0.2643333375453949, 0.10100000351667404, 0.10100000351667404, 0.21433334052562714, 0.10100000351667404, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 3, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [1, 2, 0, 0, 2, 2, 1, 2, 0, 0, 0], [32, 24, 94, 4, 69, 87, 21], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 4, 2, 1, 7, 4, 8, 3, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 8, 5, 0, 4, 2, 9, 3, 1, 6, 1, 0, 7], [3, 7, 3, 4, 7, 3, 1, 3, 1, 3], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3, 0, 2, 1, 1], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 4, 2, 3, 6, 0, 5, 6, 0, 0, 8, 9, 1, 0, 6], [2, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 7, 1, 4, 0, 3, 1, 2, 4, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 24, 13, 11, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.multiply(sigma, tf.math.sqrt(grad))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(tf.math.negative(alpha), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha)), beta), grad), sigma)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [88.65953826904297, 2.406440496444702, 2.3074309825897217, 2.303884267807007, 2.3031740188598633, 2.303133249282837], "accuracy": [0.1990489959716797, 0.09813763201236725, 0.09800554811954498, 0.09787346422672272, 0.09549596905708313, 0.09549596905708313], "val_loss": [2.8746354579925537, 2.309769630432129, 2.3043293952941895, 2.3029515743255615, 2.3028228282928467, 2.3027729988098145], "val_accuracy": [0.10199999809265137, 0.10133333504199982, 0.10199999809265137, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027]}}]