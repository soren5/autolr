[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 0, 6, 6, 7, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [19, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [19, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [42, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 4, 3, 1, 1, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.0967307090759277, 1.4702389240264893, 1.037007451057434, 0.9558983445167542, 0.8135648369789124, 0.7735134959220886, 0.7520657777786255, 0.7187007069587708, 0.680255115032196, 0.658203125, 0.6699095964431763, 0.6310245394706726, 0.615134060382843, 0.6074774265289307, 0.6014516949653625, 0.5878453254699707, 0.5812321305274963, 0.5734692811965942, 0.5629962682723999, 0.5471523404121399, 0.5465462803840637, 0.5165851712226868, 0.5248842239379883, 0.5072934031486511, 0.493795782327652, 0.48406994342803955, 0.49474260210990906, 0.47039151191711426, 0.47533249855041504, 0.45938169956207275, 0.46795180439949036, 0.4455673396587372, 0.44431084394454956, 0.43839752674102783, 0.42974692583084106, 0.4328043460845947, 0.4191824197769165, 0.4102867841720581, 0.424160897731781, 0.40256211161613464, 0.42050331830978394, 0.4122614860534668, 0.3869922459125519, 0.38640114665031433, 0.3842656910419464, 0.38401418924331665, 0.38252347707748413, 0.36625081300735474, 0.376049280166626, 0.3737843632698059, 0.37065744400024414, 0.3639456331729889], "accuracy": [0.30445119738578796, 0.4913485646247864, 0.6269977688789368, 0.6454893946647644, 0.6947563290596008, 0.7017567157745361, 0.7092854380607605, 0.726192057132721, 0.7325320243835449, 0.7424382567405701, 0.7415136694908142, 0.7547219395637512, 0.769911527633667, 0.7621186375617981, 0.765949010848999, 0.7685906887054443, 0.7741381525993347, 0.7819310426712036, 0.7817989587783813, 0.7955356240272522, 0.7924976944923401, 0.8029322624206543, 0.802800178527832, 0.8063663840293884, 0.816008448600769, 0.8148196935653687, 0.8127063512802124, 0.8226125836372375, 0.8210275769233704, 0.8296129703521729, 0.8206313848495483, 0.8368775844573975, 0.8376700282096863, 0.837537944316864, 0.8455950617790222, 0.8389908671379089, 0.8470479249954224, 0.8473120927810669, 0.8433496356010437, 0.8533879518508911, 0.841500461101532, 0.8403117060661316, 0.8568220734596252, 0.8532558679580688, 0.8551049828529358, 0.8533879518508911, 0.8561616539955139, 0.8688416481018066, 0.8562937378883362, 0.8564258217811584, 0.8614450097084045, 0.8584070801734924], "val_loss": [1.402634620666504, 0.9876835942268372, 0.8657732605934143, 0.7363383769989014, 0.6996550559997559, 0.8329573273658752, 0.684357762336731, 0.6424620747566223, 0.6198397874832153, 0.6312166452407837, 0.6163390874862671, 0.5915523767471313, 0.5710973739624023, 0.5732362866401672, 0.5370750427246094, 0.5436541438102722, 0.6012296676635742, 0.5488265156745911, 0.5321943163871765, 0.505369246006012, 0.49216166138648987, 0.56634920835495, 0.47167274355888367, 0.4598947763442993, 0.4659442901611328, 0.5018987655639648, 0.45476439595222473, 0.5122708082199097, 0.4380154311656952, 0.4993050992488861, 0.44045761227607727, 0.4395900070667267, 0.4343493580818176, 0.42998185753822327, 0.42088377475738525, 0.41858741641044617, 0.4180285930633545, 0.41792431473731995, 0.4208342432975769, 0.4445130228996277, 0.4052963852882385, 0.40345582365989685, 0.41714534163475037, 0.40465009212493896, 0.41229885816574097, 0.39569512009620667, 0.3922613263130188, 0.45750367641448975, 0.40092191100120544, 0.4424511194229126, 0.38790634274482727, 0.3959157168865204], "val_accuracy": [0.5423333048820496, 0.6370000243186951, 0.6666666865348816, 0.7120000123977661, 0.7136666774749756, 0.6613333225250244, 0.7229999899864197, 0.7483333349227905, 0.7549999952316284, 0.746666669845581, 0.7413333058357239, 0.7583333253860474, 0.7736666798591614, 0.7776666879653931, 0.7996666431427002, 0.7823333144187927, 0.7516666650772095, 0.7720000147819519, 0.7753333449363708, 0.8080000281333923, 0.8076666593551636, 0.7770000100135803, 0.8153333067893982, 0.8259999752044678, 0.812333345413208, 0.7916666865348816, 0.82833331823349, 0.79666668176651, 0.8336666822433472, 0.793666660785675, 0.8299999833106995, 0.8346666693687439, 0.8343333601951599, 0.8333333134651184, 0.8393333554267883, 0.8416666388511658, 0.8386666774749756, 0.8393333554267883, 0.8399999737739563, 0.8296666741371155, 0.8429999947547913, 0.8493333458900452, 0.8420000076293945, 0.8493333458900452, 0.840666651725769, 0.8519999980926514, 0.8586666584014893, 0.8243333101272583, 0.8476666808128357, 0.8296666741371155, 0.8543333411216736, 0.8506666421890259]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 5, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 5, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 3, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [21, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.803428590297699, "mapping_values": [1, 4, 2, 2, 0, 6, 4, 2, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(alpha), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.100741386413574, 1.4584858417510986, 1.0937069654464722, 0.8885343074798584, 0.8033134341239929, 0.775090754032135, 0.7311536073684692, 0.6977107524871826, 0.7025212645530701, 0.6628000140190125, 0.625554621219635, 0.6253620386123657, 0.5882058143615723, 0.6005954742431641, 0.5737451314926147, 0.5583785772323608, 0.5568926930427551, 0.5226995944976807, 0.5273526310920715, 0.5177571177482605, 0.5071750283241272, 0.5056083798408508, 0.49050772190093994, 0.48031100630760193, 0.46378040313720703, 0.4699094891548157, 0.4712820053100586, 0.4537721276283264], "accuracy": [0.3089420199394226, 0.4974243938922882, 0.615770697593689, 0.6709813475608826, 0.700700044631958, 0.7123233675956726, 0.7276449799537659, 0.7347774505615234, 0.7342491149902344, 0.7474573850631714, 0.7623828053474426, 0.767401933670044, 0.774798572063446, 0.7677981853485107, 0.7803460359573364, 0.7915731072425842, 0.7927618622779846, 0.8057059645652771, 0.7946110367774963, 0.8076872229576111, 0.8107251524925232, 0.8096684813499451, 0.8144234418869019, 0.821820080280304, 0.8285563588142395, 0.8252542614936829, 0.8256505131721497, 0.8310658931732178], "val_loss": [1.2994383573532104, 1.3430790901184082, 0.7970264554023743, 0.6940093636512756, 0.7360365390777588, 0.7463181018829346, 0.7169906497001648, 0.6923752427101135, 0.6101531386375427, 0.6499730348587036, 0.6054004430770874, 0.5505613088607788, 0.5303011536598206, 0.5198086500167847, 0.541509211063385, 0.5397727489471436, 0.49121829867362976, 0.505089521408081, 0.49334317445755005, 0.49646127223968506, 0.4793581962585449, 0.49538540840148926, 0.46021488308906555, 0.4777451157569885, 0.4643118381500244, 0.4627632200717926, 0.45352017879486084, 0.46211186051368713], "val_accuracy": [0.5756666660308838, 0.45399999618530273, 0.7170000076293945, 0.7369999885559082, 0.7016666531562805, 0.6953333616256714, 0.7083333134651184, 0.7206666469573975, 0.7593333125114441, 0.7403333187103271, 0.7649999856948853, 0.7766666412353516, 0.7950000166893005, 0.8003333210945129, 0.7943333387374878, 0.7923333048820496, 0.812666654586792, 0.8033333420753479, 0.8066666722297668, 0.8119999766349792, 0.8166666626930237, 0.8100000023841858, 0.8306666612625122, 0.8176666498184204, 0.8209999799728394, 0.8230000138282776, 0.8259999752044678, 0.8203333616256714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 7, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [65, 90, 80, 41, 8, 43, 2], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [42, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 7, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.7965714335441589, "mapping_values": [1, 16, 9, 7, 2, 7, 5, 2, 2, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.pow(alpha, tf.math.pow(grad, tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.add(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.28548526763916, 2.2241921424865723, 2.128924608230591, 2.0185933113098145, 1.850905418395996, 1.627299427986145, 1.429448127746582, 1.2870510816574097, 1.173624038696289, 1.0843876600265503, 1.018977165222168, 0.9640501141548157, 0.93515545129776, 0.8920748233795166, 0.8554354310035706, 0.8414390087127686, 0.8192235827445984, 0.813221275806427, 0.7939916849136353, 0.7724224925041199, 0.7709022760391235, 0.7651419639587402, 0.7442881464958191, 0.7375485897064209, 0.7277692556381226, 0.7102392911911011, 0.7044036388397217, 0.7123745083808899, 0.7021672129631042, 0.692082405090332, 0.6906020641326904, 0.6777491569519043, 0.6749881505966187, 0.6704708933830261, 0.6631461977958679, 0.6665326356887817, 0.6602738499641418, 0.6497859358787537, 0.6483300924301147, 0.6473450064659119, 0.6633413434028625, 0.6511610150337219, 0.6432431936264038, 0.6357945203781128, 0.6364348530769348, 0.6510183811187744, 0.6382788419723511, 0.6291889548301697], "accuracy": [0.14674416184425354, 0.2868841588497162, 0.37762513756752014, 0.4241183400154114, 0.4659886360168457, 0.4951789677143097, 0.5536917448043823, 0.5926561951637268, 0.6136573553085327, 0.6396777033805847, 0.6465460062026978, 0.6654338836669922, 0.6684718132019043, 0.677189290523529, 0.6868313550949097, 0.6900013089179993, 0.6988508701324463, 0.6991150379180908, 0.7119271159172058, 0.7201162576675415, 0.7132478952407837, 0.7106062769889832, 0.7251353859901428, 0.7250033020973206, 0.7265883088111877, 0.7279091477394104, 0.7388719916343689, 0.7374191284179688, 0.7405890822410583, 0.7413815855979919, 0.7403249144554138, 0.7471932172775269, 0.7481178045272827, 0.7489103078842163, 0.755118191242218, 0.7528728246688843, 0.7508915662765503, 0.7593448758125305, 0.7601373791694641, 0.7658169269561768, 0.757099449634552, 0.7652885913848877, 0.7689869403839111, 0.763439416885376, 0.7666094303131104, 0.7597411274909973, 0.7660810947418213, 0.7688548564910889], "val_loss": [2.2473294734954834, 2.1638877391815186, 2.04439377784729, 1.9039297103881836, 1.6635029315948486, 1.4191510677337646, 1.239153265953064, 1.1107577085494995, 1.009864330291748, 0.9318456053733826, 0.8662002086639404, 0.8196514248847961, 0.7851837277412415, 0.7550783753395081, 0.735876202583313, 0.7124834656715393, 0.6995720267295837, 0.6854307651519775, 0.6707697510719299, 0.6568244099617004, 0.6560784578323364, 0.6546995639801025, 0.6342894434928894, 0.6274855136871338, 0.6266748309135437, 0.6133037805557251, 0.5999285578727722, 0.5998002886772156, 0.5979892015457153, 0.5845940113067627, 0.581589937210083, 0.5742695927619934, 0.5714966654777527, 0.566710352897644, 0.5663833022117615, 0.5602588653564453, 0.5593053102493286, 0.5545564889907837, 0.5473024249076843, 0.5467477440834045, 0.5470949411392212, 0.5438711047172546, 0.5400968790054321, 0.5410332083702087, 0.5597836375236511, 0.5362139344215393, 0.5328231453895569, 0.5257034301757812], "val_accuracy": [0.39399999380111694, 0.4726666808128357, 0.5196666717529297, 0.5306666493415833, 0.5346666574478149, 0.5973333120346069, 0.6423333287239075, 0.6666666865348816, 0.6813333630561829, 0.6896666884422302, 0.6973333358764648, 0.7026666402816772, 0.7046666741371155, 0.7143333554267883, 0.7203333377838135, 0.7236666679382324, 0.7269999980926514, 0.7293333411216736, 0.734666645526886, 0.7360000014305115, 0.7406666874885559, 0.7436666488647461, 0.7446666955947876, 0.7493333220481873, 0.7433333396911621, 0.7509999871253967, 0.7570000290870667, 0.7559999823570251, 0.7613333463668823, 0.765999972820282, 0.7666666507720947, 0.7689999938011169, 0.7713333368301392, 0.7706666588783264, 0.7693333625793457, 0.777999997138977, 0.7733333110809326, 0.7803333401679993, 0.7766666412353516, 0.7820000052452087, 0.7836666703224182, 0.7839999794960022, 0.7950000166893005, 0.7863333225250244, 0.778333306312561, 0.7853333353996277, 0.7829999923706055, 0.7879999876022339]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [19, 90, 80, 41, 8, 43, 2], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [42, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.7937142848968506, "mapping_values": [1, 10, 5, 5, 0, 7, 5, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(grad, tf.math.negative(grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.286641836166382, 2.2209858894348145, 2.078308582305908, 1.7649633884429932, 1.3934746980667114, 1.1872440576553345, 1.0564872026443481, 0.9903732538223267, 0.9306226968765259, 0.8891772627830505, 0.8601481318473816, 0.8426138162612915, 0.8136652112007141, 0.7989581823348999, 0.7655614018440247, 0.7624518275260925, 0.7466692328453064, 0.7329220771789551, 0.7293579578399658, 0.7200592756271362, 0.7074588537216187, 0.7001816630363464, 0.6885837912559509, 0.6800050735473633, 0.6763656139373779, 0.6613364219665527, 0.6659435629844666, 0.6522411704063416, 0.6483039855957031, 0.6347103118896484, 0.6297473907470703, 0.6412504315376282, 0.6278824210166931, 0.6350436806678772, 0.6174861192703247], "accuracy": [0.14793290197849274, 0.2818650007247925, 0.3910976052284241, 0.4636111557483673, 0.5443138480186462, 0.5849953889846802, 0.6258090138435364, 0.6478668451309204, 0.6613393425941467, 0.683000922203064, 0.6911900639533997, 0.6929071545600891, 0.7062475085258484, 0.7079645991325378, 0.7232862114906311, 0.7213049530982971, 0.7230220437049866, 0.7306828498840332, 0.7289658188819885, 0.7364945411682129, 0.7396644949913025, 0.7415136694908142, 0.741909921169281, 0.7442874312400818, 0.7491744756698608, 0.7530049085617065, 0.7510236501693726, 0.7552502751350403, 0.763439416885376, 0.763967752456665, 0.7693831920623779, 0.759080708026886, 0.7663452625274658, 0.7606657147407532, 0.7728173136711121], "val_loss": [2.2467041015625, 2.1432294845581055, 1.8798493146896362, 1.4073801040649414, 1.0592848062515259, 0.908230721950531, 0.8310266733169556, 0.783274233341217, 0.7364210486412048, 0.709410548210144, 0.6848020553588867, 0.6737333536148071, 0.6860848069190979, 0.6377127170562744, 0.6376174092292786, 0.6204699873924255, 0.6209100484848022, 0.6061481237411499, 0.59539395570755, 0.6011688709259033, 0.5755016803741455, 0.5691958069801331, 0.5842771530151367, 0.5662987232208252, 0.5619416236877441, 0.548518180847168, 0.5427334904670715, 0.5504539608955383, 0.5382492542266846, 0.5337038636207581, 0.5318387746810913, 0.5307769775390625, 0.531758725643158, 0.555719256401062, 0.526944100856781], "val_accuracy": [0.37299999594688416, 0.4646666646003723, 0.5496666431427002, 0.6416666507720947, 0.6746666431427002, 0.6913333535194397, 0.7106666564941406, 0.7170000076293945, 0.7386666536331177, 0.7396666407585144, 0.7453333139419556, 0.7413333058357239, 0.7419999837875366, 0.7649999856948853, 0.7649999856948853, 0.7673333287239075, 0.7540000081062317, 0.7689999938011169, 0.7823333144187927, 0.7613333463668823, 0.7829999923706055, 0.7770000100135803, 0.7803333401679993, 0.7839999794960022, 0.7889999747276306, 0.7879999876022339, 0.7946666479110718, 0.7963333129882812, 0.7973333597183228, 0.7993333339691162, 0.7993333339691162, 0.7976666688919067, 0.7883333563804626, 0.7793333530426025, 0.7853333353996277]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 7, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 8, 6, 9, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 5, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.5099999904632568, "mapping_values": [1, 5, 2, 3, 0, 5, 5, 0, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [15.066020011901855, 2.3166873455047607, 2.3032374382019043, 2.2945759296417236, 2.2809531688690186, 2.231046199798584, 2.133737564086914, 2.084282159805298, 1.9573981761932373, 1.9026328325271606, 1.781027913093567, 1.6958144903182983, 1.6434645652770996, 2.279564380645752, 2.2893242835998535, 2.0271356105804443, 1.8194202184677124], "accuracy": [0.18663319945335388, 0.09945846349000931, 0.10579843819141388, 0.11411966383457184, 0.12891295552253723, 0.16642451286315918, 0.2347113937139511, 0.2818650007247925, 0.33284902572631836, 0.3549068868160248, 0.40945714712142944, 0.4239862561225891, 0.4476291239261627, 0.2583542466163635, 0.18359529972076416, 0.2843745946884155, 0.39083343744277954], "val_loss": [2.325319290161133, 2.3058316707611084, 2.2994134426116943, 2.2850358486175537, 2.2450666427612305, 2.1806986331939697, 2.032872438430786, 1.793857216835022, 1.6900484561920166, 1.5863099098205566, 1.6183862686157227, 1.4892330169677734, 1.7838590145111084, 2.0797173976898193, 2.23435640335083, 1.7133713960647583, 1.8375622034072876], "val_accuracy": [0.10199999809265137, 0.10766666382551193, 0.1066666692495346, 0.12866666913032532, 0.16366666555404663, 0.22166666388511658, 0.3296666741371155, 0.40066665410995483, 0.445333331823349, 0.4413333237171173, 0.45633333921432495, 0.5176666378974915, 0.4363333284854889, 0.24666666984558105, 0.34599998593330383, 0.45500001311302185, 0.35466668009757996]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [2, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 1, 1, 9, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.1794285774230957, "mapping_values": [1, 4, 2, 2, 0, 6, 5, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3434510231018066, 2.2592427730560303, 2.4583208560943604, 2.2628889083862305, 2.3052985668182373, 2.303072690963745], "accuracy": [0.20697398483753204, 0.1752740740776062, 0.10117553919553757, 0.15110288560390472, 0.10051512718200684, 0.09959053993225098], "val_loss": [2.1879374980926514, 3.2306888103485107, 2.3015244007110596, 2.307361602783203, 2.303053140640259, 2.3026156425476074], "val_accuracy": [0.17366667091846466, 0.09866666793823242, 0.0989999994635582, 0.10066666454076767, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [99, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 4, 6, 3, 3, 7, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 7, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [44, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 5, 3, 2, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [59389.078125, 2.313964605331421, 2.3058674335479736, 2.3035967350006104, 2.3031721115112305, 2.3030645847320557, 2.3028275966644287, 2.3029794692993164, 2.303065538406372, 2.3029093742370605], "accuracy": [0.09853387624025345, 0.09760929644107819, 0.09800554811954498, 0.0948355570435524, 0.09945846349000931, 0.09338264167308807, 0.09470347315073013, 0.0956280529499054, 0.09430722147226334, 0.09998679161071777], "val_loss": [2.3228275775909424, 2.3084678649902344, 2.3042151927948, 2.302907943725586, 2.3026511669158936, 2.3025705814361572, 2.3025693893432617, 2.302608013153076, 2.302720785140991, 2.3026881217956543], "val_accuracy": [0.10000000149011612, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714, 0.10100000351667404, 0.10233332961797714, 0.09700000286102295, 0.10100000351667404, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [3, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 4, 8, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [2, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 5, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 0, 6, 9, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [19, 90, 80, 41, 8, 43, 2], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [42, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 3, 5, 4], [7, 0, 4], [28, 94]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.309701919555664, 2.309049367904663, 2.310499668121338, 2.3091907501220703, 2.3102588653564453, 2.3109142780303955], "accuracy": [0.08426892012357712, 0.09774138033390045, 0.0820235088467598, 0.09192973375320435, 0.09285431355237961, 0.0870426595211029], "val_loss": [2.3083817958831787, 2.3083815574645996, 2.3083813190460205, 2.3083810806274414, 2.308380603790283, 2.308380126953125], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 7, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [97, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 4, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [97, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 4, 6, 3, 3, 7, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 0, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [47, 96, 60, 31, 37, 10, 11], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [43, 94]], "fitness": -0.08971428871154785, "mapping_values": [1, 13, 6, 7, 1, 5, 2, 3, 0, 36, 23, 13, 6, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, tf.math.pow(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(grad, grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.negative(sigma), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma), grad)), alpha)), tf.math.add(sigma, grad)), tf.math.square(sigma)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3096842765808105, 2.309523582458496, 2.3088037967681885, 2.3084394931793213, 2.308607339859009, 2.3069276809692383], "accuracy": [0.09179764986038208, 0.09219389408826828, 0.09126931428909302, 0.09008057415485382, 0.09668471664190292, 0.10130762308835983], "val_loss": [2.3084683418273926, 2.3081305027008057, 2.30783748626709, 2.3075754642486572, 2.307257652282715, 2.3070361614227295], "val_accuracy": [0.09000000357627869, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08933333307504654, 0.08900000154972076]}}]