[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8231428861618042, "mapping_values": [1, 40, 23, 17, 5, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.subtract(alpha, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(alpha), grad)), tf.math.divide_no_nan(grad, grad)), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.sqrt(grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), alpha)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.1434738636016846, 1.9591970443725586, 1.790360927581787, 1.4593464136123657, 1.1080322265625, 0.8011665344238281, 0.7519916296005249, 0.6834003925323486, 0.6326409578323364, 0.6413671374320984, 0.5837466716766357, 0.5800374746322632, 0.5414770245552063, 0.555122971534729, 0.5292584896087646, 0.5507094264030457, 0.5393972992897034, 0.5063865184783936, 0.48189765214920044, 0.48819050192832947, 0.4671536684036255, 0.4689041078090668, 0.45044252276420593], "accuracy": [0.27578920125961304, 0.3397173285484314, 0.38145554065704346, 0.5036323070526123, 0.5921278595924377, 0.6984546184539795, 0.7131158113479614, 0.7388719916343689, 0.761590301990509, 0.7593448758125305, 0.7750627398490906, 0.7825914621353149, 0.7950072884559631, 0.7931581139564514, 0.8020076751708984, 0.7944789528846741, 0.7969884872436523, 0.807158887386322, 0.8195747137069702, 0.8125742673873901, 0.8253863453865051, 0.8251221776008606, 0.8313300609588623], "val_loss": [2.06057071685791, 1.6371896266937256, 1.336795687675476, 1.3456109762191772, 0.7552679181098938, 0.8168074488639832, 0.6656872630119324, 0.5903600454330444, 0.6158177256584167, 0.5237746834754944, 0.5616982579231262, 0.49637553095817566, 0.5570950508117676, 0.5458298325538635, 0.4872412383556366, 0.5006818175315857, 0.49930790066719055, 0.46611034870147705, 0.46640902757644653, 0.4625570774078369, 0.4838555157184601, 0.5204237699508667, 0.5017087459564209], "val_accuracy": [0.3946666717529297, 0.36933332681655884, 0.5336666703224182, 0.4909999966621399, 0.7129999995231628, 0.6729999780654907, 0.7426666617393494, 0.765333354473114, 0.7456666827201843, 0.7973333597183228, 0.7696666717529297, 0.8173333406448364, 0.7876666784286499, 0.7986666560173035, 0.8176666498184204, 0.8080000281333923, 0.8080000281333923, 0.8320000171661377, 0.8183333277702332, 0.831333339214325, 0.815666675567627, 0.7993333339691162, 0.8029999732971191]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 2, 6, 6, 9, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8031428456306458, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 24, 15, 9, 2, 3, 2, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), tf.math.sqrt(grad)), alpha), tf.math.pow(tf.math.negative(grad), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.236070394515991, 2.2254140377044678, 2.013723611831665, 1.8848329782485962, 1.4717719554901123, 1.1612032651901245, 0.8572454452514648, 0.7820542454719543, 0.679897129535675, 0.6632386445999146, 0.6248735785484314, 0.6395814418792725, 0.6024906635284424, 0.5750343799591064, 0.56267911195755, 0.5565760731697083, 0.5593385100364685, 0.5165066123008728, 0.4858355224132538, 0.5160741209983826, 0.48028552532196045, 0.4781174659729004, 0.47125598788261414, 0.47190409898757935, 0.46402907371520996, 0.43989017605781555, 0.4382661283016205, 0.47002601623535156, 0.43288367986679077, 0.43002262711524963, 0.4090578258037567], "accuracy": [0.25056135654449463, 0.2509576082229614, 0.29058247804641724, 0.3687755763530731, 0.5348038673400879, 0.6263373494148254, 0.687491774559021, 0.7154933214187622, 0.7409853339195251, 0.7528728246688843, 0.7689869403839111, 0.7619865536689758, 0.7695152759552002, 0.7868181467056274, 0.7906485199928284, 0.7911768555641174, 0.7876105904579163, 0.8025360107421875, 0.8193105459213257, 0.8050455451011658, 0.8204993009567261, 0.8161405324935913, 0.8271034359931946, 0.8201030492782593, 0.8220842480659485, 0.8347642421722412, 0.8300092220306396, 0.8193105459213257, 0.8341038227081299, 0.8372738361358643, 0.8450667262077332], "val_loss": [1.9814069271087646, 2.188889265060425, 2.181180715560913, 1.3057770729064941, 1.2203738689422607, 0.8164569735527039, 0.6913777589797974, 0.6405407786369324, 0.6115525364875793, 0.6308789849281311, 0.6652312874794006, 0.5662432909011841, 0.5485883951187134, 0.5303811430931091, 0.5400387644767761, 0.5077660083770752, 0.486178457736969, 0.4914679229259491, 0.5004640817642212, 0.4666329026222229, 0.4801458716392517, 0.5099989175796509, 0.4771285951137543, 0.47011101245880127, 0.48262083530426025, 0.43772566318511963, 0.5652652382850647, 0.44447094202041626, 0.48444074392318726, 0.47213342785835266, 0.46343573927879333], "val_accuracy": [0.20533333718776703, 0.16966666281223297, 0.20366667211055756, 0.562666654586792, 0.640333354473114, 0.699999988079071, 0.7436666488647461, 0.7446666955947876, 0.7563333511352539, 0.7416666746139526, 0.7450000047683716, 0.7763333320617676, 0.7963333129882812, 0.8019999861717224, 0.7910000085830688, 0.8096666932106018, 0.8203333616256714, 0.8166666626930237, 0.8116666674613953, 0.828000009059906, 0.8263333439826965, 0.8146666884422302, 0.8289999961853027, 0.8326666951179504, 0.8233333230018616, 0.8496666550636292, 0.7879999876022339, 0.8426666855812073, 0.8270000219345093, 0.8183333277702332, 0.8370000123977661]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [23, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.3654285669326782, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.286001682281494, 2.2126049995422363, 2.3077425956726074, 2.3838226795196533, 2.2751548290252686, 2.4435853958129883, 2.3042867183685303, 2.303445816040039, 2.303234577178955, 2.30306339263916], "accuracy": [0.1942940205335617, 0.17553824186325073, 0.10540219396352768, 0.17699114978313446, 0.13842293620109558, 0.12323339283466339, 0.10408136248588562, 0.09391097724437714, 0.09959053993225098, 0.10130762308835983], "val_loss": [2.1240673065185547, 2.3032500743865967, 2.297717332839966, 2.3089704513549805, 2.5721585750579834, 2.3051717281341553, 2.3031697273254395, 2.302783250808716, 2.302659749984741, 2.302544593811035], "val_accuracy": [0.2826666533946991, 0.10133333504199982, 0.09966666996479034, 0.1066666692495346, 0.37466666102409363, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 5, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [0, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 27, 63, 32, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 5, 6, 0, 5, 8, 4, 0, 4, 2, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 2, 6, 1, 3, 3, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.3125714361667633, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.negative(grad))), grad), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4354302883148193, 2.3163108825683594, 2.3093340396881104, 2.3039183616638184, 2.3026325702667236, 2.2550008296966553, 2.413522243499756, 2.303788900375366, 2.3035404682159424, 2.3032281398773193, 2.3032307624816895], "accuracy": [0.1880861222743988, 0.13340377807617188, 0.09747721254825592, 0.09932637959718704, 0.09708096832036972, 0.14978206157684326, 0.14634791016578674, 0.09879804402589798, 0.0936468094587326, 0.09721305221319199, 0.09787346422672272], "val_loss": [2.2895777225494385, 2.3135769367218018, 2.303448438644409, 2.302255153656006, 2.299694299697876, 2.177666425704956, 2.3040852546691895, 2.3027780055999756, 2.302659749984741, 2.30263614654541, 2.3026845455169678], "val_accuracy": [0.14033333957195282, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.3113333284854889, 0.10333333164453506, 0.09833333641290665, 0.0963333323597908, 0.0963333323597908, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 4, 2, 1, 5, 1, 8, 6, 1, 2, 3, 3, 2, 0, 0, 0, 2, 2, 0, 8, 0], [1, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [2, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [23, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 2, 4], [50, 94]], "fitness": -0.20171429216861725, "mapping_values": [1, 32, 17, 15, 3, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.pow(alpha, tf.math.pow(tf.math.add(tf.math.subtract(grad, grad), grad), tf.math.square(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(grad, alpha)))))), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(grad, grad), tf.math.negative(grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.286847114562988, 2.305382013320923, 2.3032829761505127, 2.3014445304870605, 2.316871166229248, 2.303234338760376, 2.303095817565918, 2.3030550479888916, 2.303175926208496], "accuracy": [0.19178444147109985, 0.09708096832036972, 0.0940430611371994, 0.10936468094587326, 0.109232597053051, 0.09496764093637466, 0.09932637959718704, 0.09391097724437714, 0.09496764093637466], "val_loss": [2.306884527206421, 2.3028011322021484, 2.301936149597168, 2.2985405921936035, 2.302942991256714, 2.3025801181793213, 2.302581310272217, 2.3027355670928955, 2.3026249408721924], "val_accuracy": [0.058666665107011795, 0.10000000149011612, 0.10366666316986084, 0.20200000703334808, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10000000149011612, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 27, 63, 32, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 6, 8, 0, 5, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 4, 3, 0, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 29, 20, 9, 4, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), grad), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha), grad)), grad)), tf.math.add(tf.math.square(sigma), tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [23.29361343383789, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18835029006004333, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [49867.609375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07633333653211594, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 8, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 2, 2, 9, 6, 0, 2, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(alpha), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 6, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [2, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [56, 27, 63, 62, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 6, 6, 0, 5, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [5, 9, 5, 4], [0, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 5, 7, 6, 1, 3, 13, 7, 6, 1, 2, 1, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(grad), alpha), tf.math.subtract(tf.math.add(grad, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), alpha))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.add(grad, grad)), tf.math.add(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(grad))), grad), tf.math.square(alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303354024887085, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 2, 9, 6, 0, 2, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1], [6, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 13, 4, 6, 4, 2, 2, 0, 2, 1, 1, 0, 6, 4, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), tf.math.subtract(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 1, 9, 6, 0, 8, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 3, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.3096444606781006, 2.3094630241394043, 2.308465003967285, 2.308317184448242, 2.308539628982544, 2.306610107421875, 2.308274269104004, 2.306880235671997, 2.3078699111938477, 2.3070099353790283], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09787346422672272, 0.09259014576673508, 0.09232597798109055, 0.09509972482919693, 0.09047681838274002, 0.09536388516426086, 0.08955223858356476, 0.09496764093637466], "val_loss": [2.3086605072021484, 2.3082025051116943, 2.307772159576416, 2.3074231147766113, 2.307056188583374, 2.3068127632141113, 2.306488513946533, 2.3062291145324707, 2.305989980697632, 2.305767774581909], "val_accuracy": [0.09433333575725555, 0.09399999678134918, 0.09566666930913925, 0.09566666930913925, 0.09666666388511658, 0.0963333323597908, 0.0963333323597908, 0.0949999988079071, 0.09433333575725555, 0.09399999678134918]}}]