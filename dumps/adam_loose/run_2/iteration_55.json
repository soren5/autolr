[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 2, 0, 3], [67, 23, 94, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 6, 6, 1, 7, 2, 3, 5, 9, 5, 6, 1, 0, 8, 0, 1, 2, 6], [3, 4, 1, 3, 1, 3, 1, 1, 2, 5, 2], [11, 56, 78, 15, 8], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3814285695552826, "mapping_values": [1, 1, 0, 1, 1, 28, 17, 11, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(alpha, grad), tf.math.square(alpha)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.sqrt(alpha)), alpha), beta)))), tf.math.negative(tf.math.subtract(grad, beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.402076482772827, 2.9721689224243164, 2.304008722305298, 2.3033132553100586, 2.303004503250122, 2.302964687347412], "accuracy": [0.2090873122215271, 0.12759213149547577, 0.09774138033390045, 0.09681680053472519, 0.09549596905708313, 0.1006472036242485], "val_loss": [4.605490684509277, 2.3039090633392334, 2.302807331085205, 2.302699327468872, 2.3026676177978516, 2.3026130199432373], "val_accuracy": [0.3880000114440918, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 8, 1, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 0, 0, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 23, 43, 4, 42, 35], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 0, 6, 9, 1, 7, 0, 1, 9, 2, 5, 6, 0, 0, 8, 9, 1, 3], [1, 4, 1, 3, 1, 3, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3257142901420593, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2693021297454834, 2.882753849029541, 2.2712934017181396, 2.2858738899230957, 2.299210548400879, 2.268995761871338, 2.386751651763916, 3.3400845527648926, 2.307051658630371, 2.300462245941162, 2.282177686691284, 2.302293300628662], "accuracy": [0.22216351330280304, 0.10645885765552521, 0.1298375427722931, 0.12415797263383865, 0.11213842034339905, 0.1784440577030182, 0.1394795924425125, 0.2052568942308426, 0.10011887550354004, 0.107647605240345, 0.13393211364746094, 0.10830801725387573], "val_loss": [2.4627268314361572, 2.303616762161255, 2.018890857696533, 2.3023557662963867, 2.239013433456421, 2.6986474990844727, 1.9881595373153687, 2.311321973800659, 2.301593780517578, 2.2862110137939453, 2.301790952682495, 2.2986176013946533], "val_accuracy": [0.0989999994635582, 0.1066666692495346, 0.30133333802223206, 0.10233332961797714, 0.2653333246707916, 0.24966666102409363, 0.32100000977516174, 0.09799999743700027, 0.10100000351667404, 0.19366666674613953, 0.10066666454076767, 0.10966666787862778]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0], [67, 23, 94, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 6, 5, 7, 2, 5, 5, 9, 5, 3, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 3, 3, 3, 1, 2, 2], [11, 36, 78, 15, 8], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 8, 3, 4, 2, 5, 3, 9, 6], [0, 1, 0, 4, 7, 3, 4, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3017142713069916, "mapping_values": [1, 1, 0, 1, 0, 18, 12, 6, 1, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(alpha), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3633508682250977, 2.5869133472442627, 2.2932584285736084, 2.2612524032592773, 2.3046834468841553, 2.303675889968872], "accuracy": [0.20974771678447723, 0.1628582775592804, 0.1254788041114807, 0.1538766324520111, 0.10091137140989304, 0.09906221181154251], "val_loss": [2.0852885246276855, 2.306152105331421, 2.2920236587524414, 2.305539608001709, 2.303213119506836, 2.3029253482818604], "val_accuracy": [0.30799999833106995, 0.09666666388511658, 0.1133333370089531, 0.09833333641290665, 0.09833333641290665, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 5, 0, 3, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 0, 1, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 93, 43, 4, 42, 35], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 0, 6, 9, 1, 7, 0, 1, 9, 2, 5, 6, 0, 0, 8, 9, 1, 3, 7, 4, 5, 8, 1], [1, 4, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.26914286613464355, "mapping_values": [1, 1, 0, 1, 0, 33, 23, 10, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(grad), tf.math.subtract(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.add(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.subtract(alpha, grad))), grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9483256340026855, 2.236999750137329, 2.3217644691467285, 2.2237820625305176, 3.394268035888672, 2.3100426197052, 2.3047056198120117, 2.3044047355651855, 2.303678512573242], "accuracy": [0.18280279636383057, 0.15334829688072205, 0.1302337795495987, 0.19152027368545532, 0.1302337795495987, 0.11134592443704605, 0.09932637959718704, 0.09734513610601425, 0.09642054885625839], "val_loss": [2.2916600704193115, 2.287710666656494, 2.2848212718963623, 1.9746710062026978, 2.1896469593048096, 2.304534435272217, 2.3030762672424316, 2.3029251098632812, 2.302694082260132], "val_accuracy": [0.11266666650772095, 0.10333333164453506, 0.2056666612625122, 0.2706666588783264, 0.22766666114330292, 0.10199999809265137, 0.10199999809265137, 0.09700000286102295, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 0, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [67, 23, 94, 4, 55, 87], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 7, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 4, 1, 3, 1, 3, 1, 4, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [1, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.24400000274181366, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.346583843231201, 2.3377654552459717, 2.3052351474761963, 2.3072242736816406, 2.305807590484619, 2.3032748699188232], "accuracy": [0.20631356537342072, 0.1592920422554016, 0.09694888442754745, 0.15731078386306763, 0.10077928751707077, 0.09972262382507324], "val_loss": [2.2680282592773438, 2.307404041290283, 2.2992937564849854, 2.3067116737365723, 2.3029890060424805, 2.302058696746826], "val_accuracy": [0.2396666705608368, 0.09966666996479034, 0.14733333885669708, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 0, 2, 0, 3], [67, 59, 94, 4, 55], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 7, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 4, 1, 3, 1, 3, 1, 4, 2], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 4, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.20657142996788025, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3576207160949707, 2.2732527256011963, 2.2772796154022217, 2.3042776584625244, 2.3030967712402344, 2.302978277206421, 2.3031094074249268], "accuracy": [0.19284109771251678, 0.1410645842552185, 0.11887465417385101, 0.09602430462837219, 0.09985470771789551, 0.09721305221319199, 0.09787346422672272], "val_loss": [2.306246042251587, 1.913233995437622, 2.303818941116333, 2.3028311729431152, 2.302687883377075, 2.3026387691497803, 2.3025882244110107], "val_accuracy": [0.0989999994635582, 0.20100000500679016, 0.10366666316986084, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 8, 1, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 2, 0, 3, 1, 2, 0, 1, 3, 2, 1], [67, 23, 94, 4, 55, 87], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 9, 9, 1, 7, 2, 1, 5, 9, 5, 6, 0, 0], [3, 4, 1, 3, 1, 3, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [0, 1, 0, 4, 7, 3, 4, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.15371428430080414, "mapping_values": [1, 20, 10, 10, 3, 4, 3, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(grad, alpha), grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.426757574081421, 2.3039357662200928, 4.081949234008789, 2.3056676387786865, 2.304064989089966, 2.3034093379974365, 2.3031482696533203], "accuracy": [0.17738740146160126, 0.146479994058609, 0.1080438494682312, 0.1018359512090683, 0.0948355570435524, 0.09681680053472519, 0.10540219396352768], "val_loss": [2.302894115447998, 14.347105026245117, 2.307370662689209, 2.303611993789673, 2.3028404712677, 2.3026397228240967, 2.302870512008667], "val_accuracy": [0.10366666316986084, 0.1586666703224182, 0.1003333330154419, 0.0989999994635582, 0.0989999994635582, 0.10366666316986084, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 2, 2, 0, 3], [67, 23, 94, 4, 42, 35], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [7, 0, 6, 6, 5, 7, 2, 3, 5, 4, 5, 6, 0, 0, 8, 9, 9, 0, 6], [3, 4, 1, 3, 1, 3, 3, 4, 2], [72, 56, 78, 15, 8], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 0, 1, 1, 24, 16, 8, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))), grad)), grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4886832237243652, 2.4446566104888916, 2.308698892593384, 2.304558515548706, 2.3035073280334473, 2.302760601043701], "accuracy": [0.1868973672389984, 0.14172500371932983, 0.09668471664190292, 0.09760929644107819, 0.09879804402589798, 0.09985470771789551], "val_loss": [2.2942869663238525, 2.3133254051208496, 2.3058290481567383, 2.3031203746795654, 2.3027877807617188, 2.3025104999542236], "val_accuracy": [0.11033333092927933, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 3, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 0, 0, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 61, 43, 4, 42, 35], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 0, 6, 9, 1, 7, 0, 1, 9, 2, 5, 6, 0, 0, 8, 9, 1, 3], [1, 4, 1, 2, 1, 3, 1, 4], [11, 38, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 3, 4, 2, 5, 3, 1], [5, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [0, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 21, 16, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.negative(beta))), alpha)), tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032734394073486, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 4, 8, 0, 4, 6, 4, 4, 2, 6, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 0, 0, 0, 2, 2, 2, 2, 0, 3, 2, 0, 1, 2, 2], [38, 23, 43, 4, 42, 35], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 7, 6, 4, 0, 2, 0, 4, 5, 9, 4, 6, 0, 0, 5, 6], [3, 4, 1, 0, 1, 5, 1, 4], [11, 56, 78, 15, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 5, 3, 4, 2, 5, 3, 1], [4, 1, 0, 4, 7, 3, 4, 3, 1, 3], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09228571504354477, "mapping_values": [1, 21, 11, 10, 4, 22, 14, 8, 2, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, grad))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, grad), tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, grad)))), tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.309725522994995, 2.309575080871582, 2.309290885925293, 2.309995174407959, 2.309692144393921, 2.309985637664795], "accuracy": [0.09047681838274002, 0.09192973375320435, 0.09060890227556229, 0.0944393053650856, 0.09272222965955734, 0.09417514503002167], "val_loss": [2.30932354927063, 2.3093104362487793, 2.309298038482666, 2.309285879135132, 2.3092730045318604, 2.3092591762542725], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08799999952316284, 0.08799999952316284]}}]