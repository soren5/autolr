[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 7, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [97, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 3, 6, 3, 3, 7, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 1, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.3808571398258209, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 0, 29, 17, 12, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(sigma, grad), tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.negative(tf.math.pow(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)), grad))), tf.math.add(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.349684476852417, 2.275186538696289, 2.654513359069824, 2.3073806762695312, 2.3031177520751953, 2.2637906074523926, 3.352715015411377], "accuracy": [0.21371020376682281, 0.11517632752656937, 0.14000792801380157, 0.0940430611371994, 0.09998679161071777, 0.16166952252388, 0.1574428677558899], "val_loss": [2.0312814712524414, 2.2182605266571045, 2.3103747367858887, 2.3038995265960693, 2.300050735473633, 1.9035979509353638, 2.3045663833618164], "val_accuracy": [0.18199999630451202, 0.38966667652130127, 0.1003333330154419, 0.0989999994635582, 0.10566666722297668, 0.3476666808128357, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 3, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.3642857074737549, "mapping_values": [1, 30, 18, 12, 4, 1, 0, 1, 0, 27, 16, 11, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.pow(tf.math.sqrt(alpha), alpha), alpha))), tf.math.sqrt(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.pow(tf.math.negative(tf.math.multiply(alpha, tf.math.pow(tf.math.negative(grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.subtract(grad, grad), grad)), tf.math.pow(tf.math.sqrt(alpha), tf.math.pow(tf.math.square(grad), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(alpha), sigma), grad)))))), tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.7991223335266113, 2.252617597579956, 2.317781925201416, 2.303617477416992, 2.302955389022827, 2.3026340007781982, 2.2984068393707275], "accuracy": [0.19284109771251678, 0.17593449354171753, 0.1298375427722931, 0.09800554811954498, 0.09932637959718704, 0.09853387624025345, 0.1208558976650238], "val_loss": [2.2744758129119873, 2.2063534259796143, 2.3037610054016113, 2.3026254177093506, 2.3025736808776855, 2.3019795417785645, 2.2683815956115723], "val_accuracy": [0.15533334016799927, 0.34166666865348816, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.10433333367109299, 0.11733333021402359]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 9, 6, 0, 2, 4, 4, 8, 3, 2, 4, 0, 4, 3, 4, 9, 0, 6, 0, 6, 2, 1, 8, 0, 7], [0, 2, 1, 2, 1, 0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 49, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 4, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [4, 4, 4, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.3257142901420593, "mapping_values": [1, 3, 2, 1, 2, 3, 1, 2, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4386959075927734, 2.307145595550537, 2.701950788497925, 2.2927358150482178, 2.4245641231536865, 2.3046658039093018, 2.3036110401153564, 2.3031628131866455, 2.303447961807251], "accuracy": [0.201294407248497, 0.14951789379119873, 0.12112006545066833, 0.11478008329868317, 0.18636904656887054, 0.09681680053472519, 0.10130762308835983, 0.09985470771789551, 0.09232597798109055], "val_loss": [2.1949732303619385, 4.493538856506348, 2.1761391162872314, 2.279557228088379, 2.3046040534973145, 2.302743673324585, 2.3025457859039307, 2.302488327026367, 2.302055835723877], "val_accuracy": [0.18799999356269836, 0.2553333342075348, 0.14033333957195282, 0.30666667222976685, 0.10100000351667404, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.15399999916553497]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 4, 4, 0, 3, 4, 0, 4, 0, 0, 8, 6, 2, 1, 8, 0, 0, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 49, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 2, 2, 6, 2, 3, 8, 4, 0, 4, 5, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.27057144045829773, "mapping_values": [1, 3, 1, 2, 0, 4, 2, 2, 1, 9, 4, 5, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(grad, tf.math.add(grad, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4750871658325195, 2.364725351333618, 2.152125597000122, 2.309730052947998, 2.2791337966918945, 2.6046087741851807, 2.2923879623413086, 2.349348545074463, 2.3047783374786377, 2.303354263305664, 2.3031022548675537, 2.3030240535736084], "accuracy": [0.20261524617671967, 0.17817988991737366, 0.2180689424276352, 0.09774138033390045, 0.14251750707626343, 0.1830669641494751, 0.13221503794193268, 0.12178047746419907, 0.09642054885625839, 0.09747721254825592, 0.09681680053472519, 0.09747721254825592], "val_loss": [2.2088747024536133, 2.2474172115325928, 2.316885471343994, 2.304072856903076, 2.2856991291046143, 2.3047056198120117, 2.207956075668335, 2.3049728870391846, 2.3028955459594727, 2.302671194076538, 2.3026018142700195, 2.302600622177124], "val_accuracy": [0.2303333282470703, 0.23499999940395355, 0.09833333641290665, 0.09833333641290665, 0.1276666671037674, 0.09833333641290665, 0.2630000114440918, 0.09833333641290665, 0.10233332961797714, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 5, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 3, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.25457143783569336, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.353604316711426, 2.74609637260437, 2.241246223449707, 2.4300239086151123, 2.303485631942749, 2.3031649589538574], "accuracy": [0.19284109771251678, 0.18095363676548004, 0.1534803807735443, 0.11253467202186584, 0.09708096832036972, 0.09615638852119446], "val_loss": [2.2548344135284424, 2.3004839420318604, 2.371870517730713, 2.303769588470459, 2.302856922149658, 2.3027560710906982], "val_accuracy": [0.2523333430290222, 0.10899999737739563, 0.18333333730697632, 0.10233332961797714, 0.09700000286102295, 0.11100000143051147]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 7, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 2, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [97, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 9, 9, 3, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 1, 3, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.24314285814762115, "mapping_values": [1, 13, 6, 7, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, tf.math.pow(alpha, grad)))), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3641092777252197, 2.300178289413452, 2.200307607650757, 2.2890353202819824, 2.425675392150879, 2.3050777912139893, 2.3041296005249023], "accuracy": [0.2164839506149292, 0.11887465417385101, 0.2242768406867981, 0.13049794733524323, 0.12415797263383865, 0.10381719470024109, 0.09694888442754745], "val_loss": [2.3170502185821533, 2.0158965587615967, 2.3250985145568848, 2.1938889026641846, 2.305215835571289, 2.3034210205078125, 2.302903652191162], "val_accuracy": [0.10233332961797714, 0.23766666650772095, 0.1693333387374878, 0.16300000250339508, 0.10133333504199982, 0.09600000083446503, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 49, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 4, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [7, 1, 3, 6, 3, 4, 1, 3, 4, 1, 0, 4, 4, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 27, 16, 11, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.pow(alpha, sigma), tf.math.sqrt(tf.math.pow(grad, tf.math.square(sigma)))), grad), tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(alpha), sigma), grad))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [66.21135711669922, 6489.728515625, 2.3158490657806396, 2.3056869506835938, 2.303438425064087, 2.3030691146850586, 2.303048849105835, 2.302982807159424, 2.3029367923736572, 2.3028719425201416, 2.303029775619507], "accuracy": [0.19759608805179596, 0.1002509593963623, 0.09272222965955734, 0.09589222073554993, 0.1010434553027153, 0.09919429570436478, 0.09496764093637466, 0.0936468094587326, 0.09800554811954498, 0.09642054885625839, 0.09391097724437714], "val_loss": [5933.7421875, 2.3245861530303955, 2.307509422302246, 2.303429126739502, 2.3027379512786865, 2.3025617599487305, 2.302578926086426, 2.302643299102783, 2.3026249408721924, 2.302727222442627, 2.3026576042175293], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.09600000083446503, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 8, 4, 4, 0, 3, 4, 0, 4, 0, 0, 8, 6, 2, 1, 8, 0, 0, 2], [1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 17, 41, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 3, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 4, 2, 2, 6, 0, 3, 8, 8, 0, 4, 5, 6, 8, 6, 2, 1, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 1, 3, 0, 3, 4, 1, 3, 4, 1, 4, 4, 4, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 16, 9, 7, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(sigma, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(sigma, grad)))), tf.math.sqrt(tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5367000102996826, 16.359346389770508, 2.308032512664795, 2.3039631843566895, 2.3033080101013184, 2.3030896186828613, 2.3028807640075684, 2.3029754161834717, 2.302919626235962, 2.302877187728882, 2.302901029586792, 2.3029370307922363, 2.302875280380249], "accuracy": [0.1942940205335617, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09206181764602661, 0.09496764093637466, 0.09496764093637466, 0.09206181764602661, 0.09298639744520187, 0.09642054885625839, 0.08955223858356476, 0.09245806187391281, 0.09602430462837219], "val_loss": [2.9749066829681396, 2.3113021850585938, 2.304227590560913, 2.3028407096862793, 2.3025639057159424, 2.3026041984558105, 2.302612543106079, 2.3026328086853027, 2.302722215652466, 2.302680015563965, 2.3026483058929443, 2.302549362182617, 2.302649736404419], "val_accuracy": [0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.10266666859388351, 0.10199999809265137, 0.1003333330154419, 0.10333333164453506, 0.09866666793823242, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 2, 2, 4, 2, 8, 3, 2, 3, 0, 4, 4, 8, 9, 2, 6, 0, 6, 2, 1, 8, 0, 7], [2, 2, 1, 2, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [96, 49, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 0, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 2, 2, 6, 1, 4, 8, 4, 5, 4, 9, 4, 2, 0, 2, 0, 2, 5, 0, 5], [7, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [37, 43, 98, 31, 37], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [34, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 17, 13, 4, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(grad, alpha), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, alpha)))), tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.pow(tf.math.pow(alpha, tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 3, 6, 6, 3, 4, 4, 8, 9, 2, 4, 0, 3, 4, 0, 9, 0, 6, 0, 6, 2, 1, 8, 0], [0, 2, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [97, 95, 52, 32, 75, 87, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 7, 0, 9, 9, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 2, 1, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [30, 90, 80, 41, 8, 43, 2], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 3, 2, 2, 6, 0, 3, 8, 4, 0, 4, 5, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 0, 4, 6, 3, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [13, 96, 60, 31, 37, 10, 11], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [34, 94]], "fitness": -0.09000000357627869, "mapping_values": [1, 3, 1, 2, 1, 7, 7, 0, 3, 9, 4, 5, 1, 4, 3, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3099207878112793, 2.3103458881378174, 2.310352325439453, 2.3095924854278564, 2.3099658489227295, 2.309560537338257], "accuracy": [0.09166556596755981, 0.08717474341392517, 0.09325055778026581, 0.09549596905708313, 0.09589222073554993, 0.09153348207473755], "val_loss": [2.3088483810424805, 2.308772087097168, 2.308704137802124, 2.3086273670196533, 2.3085596561431885, 2.3084816932678223], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]