[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 8, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [5, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 4, 9, 6, 0, 8, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8265714049339294, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 12, 8, 4, 1, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.sqrt(sigma))), grad), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.6942965984344482, 2.2453346252441406, 1.930405855178833, 2.6035964488983154, 2.304943323135376, 2.3020737171173096, 2.2694692611694336, 1.8362854719161987, 1.5685384273529053, 1.4428668022155762, 1.17733633518219, 1.1076068878173828, 1.0103102922439575, 0.9664900898933411, 0.9227873086929321, 0.9096241593360901, 0.810656726360321, 0.770722508430481, 0.7929852604866028, 0.7293709516525269, 0.7088316679000854, 0.7059409618377686, 0.6767762303352356, 0.6682773232460022, 0.6356975436210632, 0.6455489993095398, 0.612105131149292, 0.6009871959686279, 0.5900015234947205, 0.5836640000343323, 0.5724723935127258, 0.5539407134056091, 0.5636662840843201, 0.544213593006134, 0.5417513251304626, 0.5326979160308838, 0.5113179683685303, 0.5159156322479248, 0.5124852657318115, 0.4881664514541626, 0.48241209983825684, 0.4761020541191101, 0.4794500470161438, 0.4709542691707611, 0.4615156650543213, 0.4624737799167633, 0.4404643774032593, 0.46282055974006653, 0.4304141700267792, 0.4379606246948242], "accuracy": [0.23986263573169708, 0.1698586642742157, 0.31105533242225647, 0.1336679458618164, 0.10117553919553757, 0.11649715900421143, 0.17923656105995178, 0.3777572214603424, 0.4542332589626312, 0.5023114681243896, 0.5647866725921631, 0.603090763092041, 0.6264694333076477, 0.6501122713088989, 0.6596222519874573, 0.658961832523346, 0.6940959095954895, 0.7189275026321411, 0.7053229212760925, 0.7275128960609436, 0.7345132827758789, 0.7317395210266113, 0.7524765729904175, 0.7498348951339722, 0.7677981853485107, 0.7604015469551086, 0.774798572063446, 0.7733456492424011, 0.7788931727409363, 0.7777044177055359, 0.7841764688491821, 0.793422281742096, 0.7872143983840942, 0.8020076751708984, 0.7977809906005859, 0.8024039268493652, 0.8076872229576111, 0.8064984679222107, 0.8086118102073669, 0.819442629814148, 0.8231409192085266, 0.8216879963874817, 0.8215559124946594, 0.8226125836372375, 0.834632158279419, 0.8255184292793274, 0.8325188159942627, 0.8290846943855286, 0.841500461101532, 0.8405758738517761], "val_loss": [2.1767683029174805, 2.2551028728485107, 2.495563268661499, 2.3046298027038574, 2.3025784492492676, 2.298027276992798, 1.8611321449279785, 1.470323920249939, 1.4809709787368774, 1.329776406288147, 0.9432582259178162, 1.028330683708191, 0.8165944218635559, 0.8311336040496826, 0.7524622678756714, 0.7303123474121094, 0.7082425355911255, 0.7533696889877319, 0.6082910895347595, 0.6598374247550964, 0.6247183680534363, 0.5693299770355225, 0.5896945595741272, 0.5616025924682617, 0.5394302606582642, 0.5376774072647095, 0.5217780470848083, 0.5394493937492371, 0.5410409569740295, 0.4846894443035126, 0.4992223381996155, 0.5101624131202698, 0.4789440929889679, 0.5085033178329468, 0.5315018892288208, 0.49528637528419495, 0.4748513996601105, 0.4559561312198639, 0.45141515135765076, 0.4647581875324249, 0.4419977068901062, 0.4683223366737366, 0.42838793992996216, 0.4334566593170166, 0.40988385677337646, 0.4521222412586212, 0.45100951194763184, 0.4357166290283203, 0.44422754645347595, 0.43046626448631287], "val_accuracy": [0.19433332979679108, 0.2723333239555359, 0.1966666728258133, 0.09700000286102295, 0.09700000286102295, 0.1459999978542328, 0.34299999475479126, 0.5026666522026062, 0.5133333206176758, 0.4533333480358124, 0.675000011920929, 0.5979999899864197, 0.6800000071525574, 0.6646666526794434, 0.6836666464805603, 0.7273333072662354, 0.7076666951179504, 0.6890000104904175, 0.7636666893959045, 0.7279999852180481, 0.7436666488647461, 0.7739999890327454, 0.7699999809265137, 0.7716666460037231, 0.79666668176651, 0.7886666655540466, 0.8056666851043701, 0.7896666526794434, 0.7820000052452087, 0.8146666884422302, 0.8113333582878113, 0.7953333258628845, 0.8163333535194397, 0.8196666836738586, 0.7879999876022339, 0.79666668176651, 0.8186666369438171, 0.8259999752044678, 0.8289999961853027, 0.8136666417121887, 0.8309999704360962, 0.8259999752044678, 0.8456666469573975, 0.8320000171661377, 0.8486666679382324, 0.8163333535194397, 0.8113333582878113, 0.8366666436195374, 0.8370000123977661, 0.8379999995231628]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 2, 9, 6, 9, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 9, 6, 3, 2, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.274657964706421, 2.1245930194854736, 2.031825065612793, 1.9513057470321655, 1.3806421756744385, 0.998478889465332, 0.8883424401283264, 0.8116457462310791, 0.7112224698066711, 0.6451879143714905, 0.6901480555534363, 0.5935618877410889, 0.615379810333252, 0.5843684077262878, 0.5443724989891052, 0.5527364015579224, 0.5223486423492432, 0.5246997475624084, 0.5100181102752686, 0.4636145234107971, 0.5050351023674011, 0.49649229645729065, 0.48868027329444885, 0.46585360169410706, 0.44558000564575195, 0.4718610346317291], "accuracy": [0.24237221479415894, 0.2530709207057953, 0.29018622636795044, 0.3362831771373749, 0.5007264614105225, 0.6234315037727356, 0.6748117804527283, 0.7042662501335144, 0.7432307600975037, 0.7503632307052612, 0.7374191284179688, 0.7733456492424011, 0.7650244235992432, 0.7778365015983582, 0.7905164361000061, 0.7868181467056274, 0.8000264167785645, 0.8033285140991211, 0.8104609847068787, 0.8289526104927063, 0.8158763647079468, 0.8142913579940796, 0.8149517774581909, 0.826310932636261, 0.8298771381378174, 0.8264430165290833], "val_loss": [2.2563202381134033, 1.8863898515701294, 1.7599995136260986, 1.5616592168807983, 0.9623509049415588, 0.7132740616798401, 0.9305952191352844, 0.6767659783363342, 0.5843400955200195, 0.6381375789642334, 0.5810050964355469, 0.5286242961883545, 0.5498304963111877, 0.5174446702003479, 0.544755220413208, 0.48603808879852295, 0.5160858631134033, 0.48745694756507874, 0.47786930203437805, 0.4615389406681061, 0.46775129437446594, 0.48974519968032837, 0.4870307743549347, 0.4711373746395111, 0.5088324546813965, 0.4768761396408081], "val_accuracy": [0.21833333373069763, 0.3736666738986969, 0.36766666173934937, 0.5143333077430725, 0.6353333592414856, 0.7263333201408386, 0.6663333177566528, 0.7443333268165588, 0.7683333158493042, 0.7559999823570251, 0.762666642665863, 0.8029999732971191, 0.7770000100135803, 0.8119999766349792, 0.7823333144187927, 0.8203333616256714, 0.8069999814033508, 0.8193333148956299, 0.8209999799728394, 0.8256666660308838, 0.8259999752044678, 0.8199999928474426, 0.812666654586792, 0.8233333230018616, 0.8103333115577698, 0.812666654586792]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 1, 2, 1, 6, 5, 9, 4, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [23, 96, 60, 31, 37, 10, 11], [1, 1, 0, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.38828572630882263, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.449843645095825, 2.273965835571289, 2.7718138694763184, 2.2973806858062744, 2.319035053253174, 2.3033175468444824, 2.303380012512207], "accuracy": [0.2681283950805664, 0.16774533689022064, 0.18993528187274933, 0.109232597053051, 0.13578127324581146, 0.10249637067317963, 0.09496764093637466], "val_loss": [2.299882411956787, 1.9268443584442139, 2.305284261703491, 2.1886630058288574, 2.303837299346924, 2.3028721809387207, 2.3028883934020996], "val_accuracy": [0.16899999976158142, 0.3733333349227905, 0.10166666656732559, 0.27300000190734863, 0.0976666659116745, 0.0976666659116745, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 5, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 2, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 27, 63, 32, 75, 72, 41, 76, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 2, 6, 6, 0, 5, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [86, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 2, 4], [50, 94]], "fitness": -0.35600000619888306, "mapping_values": [1, 19, 12, 7, 6, 1, 0, 1, 1, 26, 17, 9, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.sqrt(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.sqrt(grad))), tf.math.pow(grad, grad)), tf.math.negative(tf.math.pow(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), sigma)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.255449056625366, 2.272473096847534, 2.63958477973938, 2.3078973293304443, 2.3042874336242676, 2.302978992462158, 2.299180507659912], "accuracy": [0.2082948088645935, 0.1686699241399765, 0.151234969496727, 0.10117553919553757, 0.09338264167308807, 0.10487385839223862, 0.12613920867443085], "val_loss": [2.304877996444702, 2.787487268447876, 2.310300350189209, 2.3039748668670654, 2.302767038345337, 2.3019609451293945, 2.2665860652923584], "val_accuracy": [0.10999999940395355, 0.359333336353302, 0.09933333098888397, 0.10300000011920929, 0.10000000149011612, 0.10233332961797714, 0.10866666585206985]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 3, 9, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 9, 2, 9, 6, 0, 2, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 0, 0, 1, 1, 1], [6, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.3125714361667633, "mapping_values": [1, 7, 5, 2, 3, 7, 6, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.428549289703369, 2.3764967918395996, 2.2129786014556885, 2.285770893096924, 2.3041024208068848, 2.2424349784851074, 2.4269587993621826, 2.3057260513305664], "accuracy": [0.16153743863105774, 0.12402588874101639, 0.17434948682785034, 0.1644432693719864, 0.10091137140989304, 0.16682076454162598, 0.1450270712375641, 0.09681680053472519], "val_loss": [2.256110429763794, 2.2969019412994385, 2.0197033882141113, 2.3055202960968018, 2.299738883972168, 2.3048641681671143, 2.3092663288116455, 2.302858829498291], "val_accuracy": [0.29233333468437195, 0.12133333086967468, 0.3266666531562805, 0.1003333330154419, 0.11800000071525574, 0.12433333694934845, 0.09866666793823242, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 3, 0, 9, 8, 1, 8, 1, 2, 6, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [0, 0, 1, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 63, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [3, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 0, 2, 9, 1, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [0, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [86, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 2, 4], [50, 94]], "fitness": -0.24199999868869781, "mapping_values": [1, 9, 6, 3, 3, 1, 0, 1, 0, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.425225019454956, 2.9435296058654785, 2.298264980316162, 2.2892208099365234, 2.3039443492889404, 2.2629427909851074, 2.6744022369384766, 2.305410385131836, 2.3031845092773438, 2.3029510974884033, 2.302898406982422], "accuracy": [0.20697398483753204, 0.10315678268671036, 0.11742173880338669, 0.1344604343175888, 0.09813763201236725, 0.1460837423801422, 0.13076211512088776, 0.09879804402589798, 0.09496764093637466, 0.09721305221319199, 0.09351472556591034], "val_loss": [6.182303428649902, 2.3044276237487793, 2.2589480876922607, 2.303450107574463, 2.301089286804199, 2.0686237812042236, 2.307180404663086, 2.3031039237976074, 2.302633762359619, 2.3024909496307373, 2.3021860122680664], "val_accuracy": [0.10166666656732559, 0.09700000286102295, 0.1733333319425583, 0.10499999672174454, 0.10100000351667404, 0.25, 0.10300000011920929, 0.10300000011920929, 0.10266666859388351, 0.10100000351667404, 0.11299999803304672]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 3, 4, 4, 1, 2, 1, 5, 1, 8, 6, 1, 2, 3, 0, 2, 0, 6, 0, 2, 2, 0, 8, 0], [1, 2, 3, 2, 1, 0, 1, 2, 0, 2, 1, 1, 2, 0, 1, 1, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 45, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [7, 5, 0, 0, 6, 0, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [7, 2, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 0, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 0, 4], [50, 94]], "fitness": -0.23771429061889648, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 1, 17, 12, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.pow(grad, tf.math.negative(tf.math.pow(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.315821409225464, 2.9835376739501953, 2.31396746635437, 2.3003010749816895, 2.304940938949585, 2.2867140769958496], "accuracy": [0.1818782240152359, 0.1546691358089447, 0.11213842034339905, 0.136045441031456, 0.09972262382507324, 0.12362963706254959], "val_loss": [2.2969512939453125, 2.362511396408081, 2.253770589828491, 2.3075220584869385, 2.3025288581848145, 2.1041054725646973], "val_accuracy": [0.2396666705608368, 0.10100000351667404, 0.11866666376590729, 0.09866666793823242, 0.11366666853427887, 0.2150000035762787]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 1, 3, 2, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [93, 10, 9, 21, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [7, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 6, 2, 9, 6, 0, 9, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 4, 4, 6, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [1, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [1, 2, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 1, 0, 1, 1, 10, 8, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 3, 9, 3, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [2, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 9, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [4, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [11, 23, 80, 41, 8, 43, 2], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 2, 9, 2, 4, 2, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [3, 3, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [27, 96, 60, 31, 37, 10, 11], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [3, 1, 5, 4, 1, 7, 2, 2, 0, 9, 1, 0], [7, 0, 4, 1, 3, 6, 2, 3], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 1, 0, 1, 0, 10, 6, 4, 1, 20, 12, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(sigma)), grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.negative(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 1, 3, 3, 9, 9, 1, 8, 1, 2, 2, 9, 8, 6, 0, 2, 0, 6, 9, 6, 2, 1, 8, 0], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 0, 1, 0, 2, 1, 3, 0, 0, 1, 3, 1, 1], [40, 90, 63, 32, 75, 72, 41, 36, 92, 59, 94, 44, 32, 3, 92], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [8, 6, 1, 9, 9, 0, 9, 2, 5, 6, 2, 6, 2, 0, 2, 9, 4, 0, 6, 8, 0], [0, 1, 3, 3, 2, 0, 1, 3, 3, 3, 3, 4, 4], [56, 23, 80, 41, 8, 43, 2], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 6, 2, 9, 6, 0, 7, 8, 4, 0, 4, 9, 6, 8, 6, 2, 9, 2, 5, 0, 5, 0, 6, 8, 8, 8], [4, 4, 4, 4, 1, 4, 1, 3, 4, 3, 0, 4, 0, 6, 4, 1, 5, 2, 4, 2, 0, 0, 1], [26, 96, 60, 31, 37, 10, 11], [0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 4], [7, 2, 4], [50, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 6, 4, 2, 1, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, beta)", "other_info": {"loss": [3.620672451246618e+24, 48.295833587646484, 137.98727416992188, 273.2189025878906, 453.670166015625, 679.4452514648438], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22.71393394470215, 93.4217300415039, 209.5187225341797, 370.63934326171875, 576.8897094726562, 828.2308349609375], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]