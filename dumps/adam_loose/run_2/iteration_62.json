[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 2, 1, 3, 0, 2, 1, 1], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 6, 1, 5, 1, 3, 2, 3, 5, 0, 5, 6, 0, 0, 2, 9, 1, 0, 6, 8], [0, 2, 3, 3, 5, 5, 1, 3, 3, 3], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [1, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.3654285669326782, "mapping_values": [1, 4, 2, 2, 1, 27, 17, 10, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta), grad), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(grad))))), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))), grad), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3137600421905518, 2.186415910720825, 2.242280960083008, 2.391040563583374, 2.321471929550171, 2.304314613342285, 2.303511619567871, 2.3032724857330322], "accuracy": [0.20737022161483765, 0.19984149932861328, 0.15070664882659912, 0.19614318013191223, 0.10236428678035736, 0.10051512718200684, 0.09681680053472519, 0.0952318087220192], "val_loss": [2.2754130363464355, 2.304130792617798, 2.061281681060791, 2.3730571269989014, 2.305493116378784, 2.303281307220459, 2.302769660949707, 2.3025407791137695], "val_accuracy": [0.2526666522026062, 0.09533333033323288, 0.3799999952316284, 0.09799999743700027, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [3, 0, 2, 1, 4, 3, 4, 4, 2, 0, 3, 5, 6, 2, 5, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [28, 93, 95, 4, 42, 35, 88, 45], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [2, 4, 0, 4, 1, 3, 3, 2, 1, 3, 0], [16, 41], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.34599998593330383, "mapping_values": [1, 14, 7, 7, 5, 1, 0, 1, 0, 22, 12, 10, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, alpha), tf.math.divide_no_nan(sigma, sigma))), beta)), alpha)))), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4021806716918945, 2.2642273902893066, 2.2562472820281982, 2.312737226486206, 2.2914838790893555, 2.3050034046173096, 2.292877197265625, 2.273573160171509], "accuracy": [0.20644564926624298, 0.18491612374782562, 0.14714039862155914, 0.15136705338954926, 0.13168670237064362, 0.09853387624025345, 0.13234710693359375, 0.1368379294872284], "val_loss": [2.3067939281463623, 2.30663800239563, 1.8493009805679321, 2.289965867996216, 2.3050947189331055, 2.300856828689575, 2.2133398056030273, 2.294118881225586], "val_accuracy": [0.11766666918992996, 0.10066666454076767, 0.36266666650772095, 0.09833333641290665, 0.0976666659116745, 0.14666666090488434, 0.2486666738986969, 0.13566666841506958]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 4, 6, 2, 9, 0, 4, 4, 2, 6, 3, 8, 3, 2, 5, 2, 4, 1, 5, 2, 0, 5, 6, 3, 8, 2, 7], [3, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 1, 2, 0, 2, 2, 3, 2, 1], [38, 93, 97, 80, 42, 35], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 1, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 4, 5, 0, 0, 2, 9, 3, 9, 6, 1, 5, 7, 8, 1], [3, 7, 0, 4, 7, 3, 4, 3, 1, 3], [70, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.345714271068573, "mapping_values": [1, 46, 27, 19, 4, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.pow(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(grad)), tf.math.multiply(tf.math.add(grad, tf.math.square(grad)), tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))), tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(grad, grad)))))))), tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4068984985351562, 3.180213689804077, 2.3066024780273438, 2.3039212226867676, 2.3018527030944824, 2.442389726638794], "accuracy": [0.22137102484703064, 0.13934750854969025, 0.10289261490106583, 0.09787346422672272, 0.10540219396352768, 0.16761326789855957], "val_loss": [1.9985836744308472, 2.309511423110962, 2.3036813735961914, 2.302215814590454, 2.297908306121826, 2.663058280944824], "val_accuracy": [0.3346666693687439, 0.09799999743700027, 0.10466666519641876, 0.09799999743700027, 0.2029999941587448, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 4, 2, 4, 2, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 2, 1, 3, 0, 2, 1, 1, 2], [38, 72, 17, 4, 55, 87, 41], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 1, 1, 5, 1, 5, 2, 3, 5, 9, 5, 6, 0, 0, 2, 9, 1, 0, 6, 8, 0, 9, 1], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.3391428589820862, "mapping_values": [1, 21, 11, 10, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(grad, tf.math.add(tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(alpha, tf.math.add(tf.math.subtract(grad, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha))), alpha)))), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.254840850830078, 2.295731544494629, 2.501060962677002, 2.3065595626831055, 2.303441286087036, 2.272298812866211, 2.245408058166504], "accuracy": [0.20076608657836914, 0.13472460210323334, 0.1434420794248581, 0.09417514503002167, 0.09813763201236725, 0.14872540533542633, 0.14489498734474182], "val_loss": [2.183964490890503, 1.974697232246399, 2.308711290359497, 2.3037476539611816, 2.3018112182617188, 1.8409004211425781, 2.304189682006836], "val_accuracy": [0.20133332908153534, 0.32899999618530273, 0.09866666793823242, 0.1003333330154419, 0.0976666659116745, 0.21266666054725647, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [4, 4, 8, 4, 5, 9, 4, 2, 1, 6, 4, 7, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 2, 1, 1, 2, 3, 0, 1, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 4, 1, 1, 7, 4, 8, 3, 9, 9, 6, 0, 0, 8, 9, 1, 6, 4, 5, 4, 7, 3, 7, 9], [0, 3, 4, 3, 3, 3, 3, 2, 2, 3, 1, 5, 0], [11, 56, 78, 15, 8], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.27542856335639954, "mapping_values": [1, 30, 17, 13, 4, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.pow(alpha, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.add(grad, tf.math.add(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.339895486831665, 3.5420923233032227, 2.306638479232788, 2.3038623332977295, 2.3029797077178955, 2.3034191131591797], "accuracy": [0.19852067530155182, 0.15374454855918884, 0.09998679161071777, 0.09734513610601425, 0.10077928751707077, 0.09602430462837219], "val_loss": [2.283277750015259, 2.307741165161133, 2.303471326828003, 2.3025777339935303, 2.3026881217956543, 2.3025293350219727], "val_accuracy": [0.2680000066757202, 0.09966666996479034, 0.07599999755620956, 0.09966666996479034, 0.0976666659116745, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [5, 4, 0, 2, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 1, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 2, 9, 1, 0, 6, 8], [3, 1, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [4, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.238571435213089, "mapping_values": [1, 28, 16, 12, 3, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(alpha, grad), tf.math.square(grad))), tf.math.divide_no_nan(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.276134967803955, 2.788987874984741, 2.343578338623047, 2.304173707962036, 2.3017897605895996, 2.2622952461242676], "accuracy": [0.20499274134635925, 0.2242768406867981, 0.10421344637870789, 0.09681680053472519, 0.11055342853069305, 0.17144367098808289], "val_loss": [2.28694748878479, 2.3188469409942627, 2.3061516284942627, 2.303022861480713, 2.2970166206359863, 2.3027122020721436], "val_accuracy": [0.23233333230018616, 0.09966666996479034, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.12266666442155838]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 4, 1, 2, 4, 4, 4, 2, 5, 3, 5, 6, 2, 0, 6, 5, 1, 5, 9, 0], [3, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 30, 55, 36, 8, 39, 93, 38], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 5, 0, 4, 2, 9, 2, 1, 6, 1, 0, 7], [3, 4, 3, 4, 0, 3, 4, 2, 1, 3, 0], [39, 54, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.20628571510314941, "mapping_values": [1, 15, 7, 8, 1, 4, 2, 2, 0, 20, 12, 8, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.subtract(grad, grad), alpha), grad), tf.math.add(tf.math.pow(grad, grad), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.pow(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.negative(grad))))), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3351974487304688, 5.459254264831543, 2.325162410736084, 2.3156285285949707, 2.3948230743408203, 2.304187774658203], "accuracy": [0.19099193811416626, 0.16682076454162598, 0.10051512718200684, 0.10421344637870789, 0.1018359512090683, 0.09919429570436478], "val_loss": [2.292201519012451, 2.34295916557312, 2.307640314102173, 2.2814230918884277, 2.3037517070770264, 2.3027021884918213], "val_accuracy": [0.20600000023841858, 0.10100000351667404, 0.10100000351667404, 0.12133333086967468, 0.10100000351667404, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 6, 2, 4, 0, 4, 4, 2, 6, 3, 8, 6, 6, 1, 2, 4, 1, 5, 2, 0], [0, 0, 0, 2, 3, 0, 0, 1, 1, 0, 0, 0, 2, 1, 1, 2, 3], [7, 93, 43, 4, 42, 35, 88, 45, 46, 29], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 2, 2, 0, 4, 2, 9, 3, 2, 6, 1, 0, 7, 8, 1, 8, 7, 0], [4, 0, 0, 4, 3, 2, 1, 3, 1, 3, 0], [16, 41, 89, 94], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.17399999499320984, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 0, 29, 18, 11, 4, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.add(grad, sigma)), tf.math.sqrt(tf.math.subtract(beta, alpha))), sigma), tf.math.sqrt(tf.math.add(alpha, sigma))), tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.402622938156128, 2.29774808883667, 2.306002616882324, 2.303466558456421, 2.3032314777374268, 2.3029768466949463], "accuracy": [0.19270901381969452, 0.19772817194461823, 0.1022322028875351, 0.10051512718200684, 0.09734513610601425, 0.09536388516426086], "val_loss": [2.2916154861450195, 2.3075509071350098, 2.3031506538391113, 2.3025739192962646, 2.302370071411133, 2.302279233932495], "val_accuracy": [0.17533333599567413, 0.09933333098888397, 0.09933333098888397, 0.10166666656732559, 0.10166666656732559, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 4, 8, 5, 5, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [2, 0, 2, 1, 3, 0, 2, 1, 1], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [7, 0, 0, 1, 1, 7, 4, 8, 3, 2, 9, 4, 0, 0, 8, 9, 1, 6, 4, 2, 4, 7, 3, 3, 9], [0, 3, 1, 3, 3, 3, 3, 2, 2, 3, 1, 5, 0], [11, 56, 78, 15, 8], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [1, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 5, 3, 2, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.sqrt(grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(sigma, tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [5, 4, 0, 2, 4, 0, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 4, 1, 1, 7, 4, 8, 3, 9, 9, 6, 0, 0, 8, 9, 1, 6, 4, 5, 4, 7, 3, 7, 9], [0, 1, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 59], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3092949390411377, 2.3103108406066895, 2.3098936080932617, 2.309260845184326, 2.310971736907959, 2.310573101043701], "accuracy": [0.09087307006120682, 0.09391097724437714, 0.09232597798109055, 0.09008057415485382, 0.09126931428909302, 0.09470347315073013], "val_loss": [2.3089280128479004, 2.308915138244629, 2.308903455734253, 2.3088901042938232, 2.3088786602020264, 2.3088653087615967], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]