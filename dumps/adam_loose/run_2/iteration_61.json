[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [2, 0, 2, 1, 3, 0, 2, 1, 1], [38, 80, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 1, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 2, 9, 1, 0, 6, 8], [0, 2, 1, 3, 5, 5, 1, 3, 3, 3], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 5, 6, 1, 0, 7], [3, 4, 3, 4, 0, 2, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.29828572273254395, "mapping_values": [1, 10, 6, 4, 1, 27, 18, 9, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta), tf.math.square(alpha)), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))))), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.1627488136291504, 2.2505946159362793, 2.3656346797943115, 3.959707021713257, 2.323448896408081, 2.309317111968994], "accuracy": [0.23405098915100098, 0.24184387922286987, 0.1356491893529892, 0.12508255243301392, 0.09800554811954498, 0.09615638852119446], "val_loss": [1.8510794639587402, 2.818403720855713, 7.541431427001953, 2.3351495265960693, 2.312753915786743, 2.3049209117889404], "val_accuracy": [0.2953333258628845, 0.10133333504199982, 0.11566666513681412, 0.0989999994635582, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 4, 0, 2, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [3, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 93, 43, 80, 42, 35], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 4, 1, 1, 7, 4, 8, 3, 9, 9, 6, 0, 0, 8, 9, 1, 6, 4, 5, 4, 7, 3, 7, 9], [3, 1, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.29085713624954224, "mapping_values": [1, 25, 14, 11, 3, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.pow(alpha, tf.math.add(tf.math.multiply(grad, grad), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), grad))), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(grad, alpha), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.299145221710205, 3.0895562171936035, 2.338649034500122, 2.3870620727539062, 2.305316209793091, 2.264439344406128, 2.304993152618408, 2.30370831489563], "accuracy": [0.20261524617671967, 0.17382116615772247, 0.13578127324581146, 0.11821424216032028, 0.10513802617788315, 0.15229164063930511, 0.09589222073554993, 0.09430722147226334], "val_loss": [2.299710512161255, 2.292362928390503, 2.2643697261810303, 2.3069937229156494, 2.299971342086792, 2.3050947189331055, 2.303142786026001, 2.3027842044830322], "val_accuracy": [0.10566666722297668, 0.1783333271741867, 0.2943333387374878, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 6, 2, 4, 0, 4, 4, 2, 6, 3, 8, 6, 2, 5, 2, 4, 1, 5, 2, 0], [0, 0, 0, 0, 3, 0, 0, 1, 1, 0, 0, 0, 2, 1, 1, 2, 3], [7, 93, 43, 4, 42, 35, 88, 45, 46, 29], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 4, 5, 0, 4, 2, 9, 3, 9, 6, 1, 0, 7, 8, 1], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [16, 41, 79], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.2905714213848114, "mapping_values": [1, 38, 21, 17, 9, 1, 0, 1, 0, 22, 15, 7, 3, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(alpha, alpha)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(alpha))), tf.math.add(tf.math.negative(alpha), grad))))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.negative(grad)), tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.sqrt(tf.math.subtract(sigma, alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.726832389831543, 2.2539010047912598, 2.2762653827667236, 2.1804842948913574, 2.3224031925201416, 2.304474353790283, 2.303575277328491], "accuracy": [0.19363360106945038, 0.15731078386306763, 0.1670849323272705, 0.20353981852531433, 0.12349755316972733, 0.10038304328918457, 0.09813763201236725], "val_loss": [2.2627320289611816, 2.020901918411255, 2.3113017082214355, 2.1208245754241943, 2.3042514324188232, 2.302767038345337, 2.3027360439300537], "val_accuracy": [0.22433333098888397, 0.2906666696071625, 0.08399999886751175, 0.2863333225250244, 0.10199999809265137, 0.10199999809265137, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 4, 8, 4, 5, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [7, 0, 9, 1, 1, 7, 4, 8, 3, 2, 9, 4, 0, 0, 8, 9, 1, 6, 4, 2, 4, 7, 3, 3, 9], [0, 3, 1, 3, 3, 3, 3, 2, 2, 3, 1, 5, 0], [40, 56, 78, 15, 8], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25, 59], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.2851428687572479, "mapping_values": [1, 9, 6, 3, 1, 4, 3, 1, 2, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.sqrt(alpha), tf.math.pow(tf.math.square(grad), alpha)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.27915358543396, 2.190479040145874, 2.2668991088867188, 2.3077824115753174, 2.3036704063415527, 2.3027164936065674, 2.3035690784454346], "accuracy": [0.21595561504364014, 0.17857614159584045, 0.2005019187927246, 0.09866596013307571, 0.09747721254825592, 0.10421344637870789, 0.09945846349000931], "val_loss": [2.17466402053833, 2.0658302307128906, 2.3124520778656006, 2.3036892414093018, 2.30295991897583, 2.3027825355529785, 2.302751064300537], "val_accuracy": [0.16699999570846558, 0.28200000524520874, 0.10266666859388351, 0.10266666859388351, 0.09566666930913925, 0.09566666930913925, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 4, 4, 4, 6, 1, 4, 2, 1, 4, 6, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [0, 1, 0, 0, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2, 0], [7, 93, 43, 4, 42, 35, 88, 45], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [3, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 5, 6, 4, 2, 5, 2, 6, 4, 4, 6, 6, 5, 2, 5], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3, 4, 6], [46, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.18142856657505035, "mapping_values": [1, 36, 19, 17, 8, 1, 0, 1, 0, 28, 16, 12, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad))))), tf.math.pow(alpha, grad)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.square(grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.divide_no_nan(grad, sigma)), tf.math.divide_no_nan(tf.math.square(alpha), sigma))), alpha)), tf.math.add(sigma, grad))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.412942886352539, 2.3160250186920166, 2.3715224266052246, 2.5141708850860596, 2.3054702281951904, 2.304159641265869, 2.3035714626312256], "accuracy": [0.1912561058998108, 0.12402588874101639, 0.14740456640720367, 0.14014001190662384, 0.09615638852119446, 0.09866596013307571, 0.09496764093637466], "val_loss": [2.301568031311035, 2.229728937149048, 2.29123592376709, 2.3054308891296387, 2.3030381202697754, 2.302718162536621, 2.302668333053589], "val_accuracy": [0.09733333438634872, 0.18000000715255737, 0.1446666717529297, 0.09966666996479034, 0.1003333330154419, 0.10300000011920929, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [3, 4, 2, 1, 4, 4, 4, 4, 2, 0, 3, 5, 6, 2, 5, 6, 4, 1, 5, 0, 0], [0, 0, 0, 2, 3, 0, 0, 1, 2, 0, 0, 3, 0, 2, 1, 2], [38, 23, 17, 4, 55, 36, 8, 39, 93, 38], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 6, 5, 1, 3, 2, 3, 5, 9, 5, 6, 0, 0, 8, 9, 1, 0, 6], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 2, 5, 0, 4, 2, 9, 3, 1, 6, 1, 0, 7], [3, 4, 3, 4, 0, 3, 1, 2, 1, 3, 0], [16, 41], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.17885714769363403, "mapping_values": [1, 13, 6, 7, 5, 1, 0, 1, 0, 19, 12, 7, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.pow(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4085679054260254, 2.806203842163086, 2.47945237159729, 2.3818740844726562, 2.305281400680542, 2.296651601791382], "accuracy": [0.18940694630146027, 0.15215955674648285, 0.14370624721050262, 0.10210011899471283, 0.09655263274908066, 0.13921542465686798], "val_loss": [2.2816262245178223, 2.3034729957580566, 2.7134623527526855, 2.3042373657226562, 2.2988150119781494, 2.3069703578948975], "val_accuracy": [0.18033333122730255, 0.09933333098888397, 0.10133333504199982, 0.0989999994635582, 0.10899999737739563, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 4, 8, 4, 5, 9, 4, 2, 1, 1, 4, 5, 2, 4, 0, 6, 4, 1, 5, 0, 2], [1, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [69, 93, 43, 4, 42, 35, 88, 45], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 0, 6, 9, 1, 2, 4, 1, 5, 9, 5, 6, 0, 0, 8, 9, 1, 6], [1, 2, 1, 3, 5, 5, 1, 4, 3, 2], [11, 56, 78, 15, 8], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 2, 4, 2, 5, 2, 6, 4, 4, 6, 9, 5, 2, 5], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [10, 25, 51], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [6, 0, 4], [25, 94]], "fitness": -0.1534285694360733, "mapping_values": [1, 9, 6, 3, 1, 6, 4, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(alpha, tf.math.sqrt(tf.math.pow(tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, beta)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.408961534500122, 2.230381965637207, 2.4284095764160156, 2.9145069122314453, 2.3157174587249756, 2.3037662506103516, 2.3029706478118896], "accuracy": [0.1880861222743988, 0.18835029006004333, 0.1216483935713768, 0.20697398483753204, 0.09985470771789551, 0.1002509593963623, 0.09840179979801178], "val_loss": [2.2706284523010254, 2.2738208770751953, 2.2988107204437256, 2.363529682159424, 2.3039557933807373, 2.302701711654663, 2.30204176902771], "val_accuracy": [0.11933333426713943, 0.15533334016799927, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [1, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 0, 4, 1, 9, 7, 4, 8, 3, 9, 9, 6, 0, 6, 8, 9, 1, 6, 4, 5, 2, 7, 3, 7, 9], [3, 5, 1, 3, 2, 3, 3, 2, 2, 3, 3, 5, 0], [11, 56, 78, 15, 8], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 4, 6, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [3, 4, 3, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25], [1, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [3, 0, 4], [25, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 32, 22, 10, 4, 12, 6, 6, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(grad, grad)), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.sqrt(alpha), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(beta, tf.math.square(tf.math.add(grad, grad))), tf.math.add(beta, beta)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(sigma, grad), tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [0, 3, 0, 0, 3, 0, 0, 1, 0, 0, 0, 3, 0, 1, 1, 2], [38, 23, 17, 4, 55, 87, 41], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 5, 4, 4, 2, 3, 6, 0, 2, 6, 0, 0, 8, 9, 1, 0, 6, 1, 9, 7, 9], [3, 2, 1, 3, 5, 3, 1, 4, 3, 2], [11, 56, 78, 15, 8], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 6, 3, 8, 2, 6, 3, 1, 7, 2, 0, 2], [4, 7, 0, 4, 7, 3, 1, 3, 1, 3], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09285714477300644, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.310293197631836, 2.3107457160949707, 2.310513973236084, 2.309965133666992, 2.309401273727417, 2.3093602657318115], "accuracy": [0.09179764986038208, 0.08717474341392517, 0.09179764986038208, 0.08942015469074249, 0.09008057415485382, 0.08942015469074249], "val_loss": [2.3084657192230225, 2.308452844619751, 2.308441638946533, 2.3084299564361572, 2.308420181274414, 2.308410406112671], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 8, 0, 4, 6, 8, 4, 2, 3, 6, 5, 6, 4, 0, 6, 4, 1, 5, 0, 0], [1, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2], [38, 23, 17, 4, 55, 87, 41], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [7, 0, 2, 5, 4, 4, 2, 3, 6, 0, 2, 6, 0, 0, 8, 9, 1, 0, 6, 1, 9, 7, 9], [0, 2, 1, 3, 5, 5, 1, 3, 3, 3, 3], [91, 56, 78, 15, 8], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 5, 6, 4, 2, 5, 1, 9, 4, 4, 6, 9, 5, 2, 5], [3, 0, 0, 4, 0, 3, 1, 2, 1, 3, 0], [39, 25], [0, 0, 0, 1, 1, 1, 1], [3, 9, 5, 4], [4, 0, 4], [25, 94]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 0, 34, 23, 11, 4, 4, 2, 2, 1, 4, 3, 1, 1], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), beta)), tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(grad)), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.negative(grad), grad))), tf.math.divide_no_nan(tf.math.subtract(alpha, grad), grad))), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))", "other_info": {"loss": [2.3095803260803223, 2.3098087310791016, 2.3106086254119873, 2.3102357387542725, 2.310122013092041, 2.3101136684417725], "accuracy": [0.08889182657003403, 0.09166556596755981, 0.09259014576673508, 0.08611807972192764, 0.09206181764602661, 0.09232597798109055], "val_loss": [2.308407783508301, 2.308396577835083, 2.308385133743286, 2.3083724975585938, 2.308359384536743, 2.308346748352051], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]