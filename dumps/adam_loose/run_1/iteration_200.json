[{"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 4, 2, 7, 0, 0, 9, 3, 8], [3, 3, 1, 1, 0, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [0, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.526285707950592, "mapping_values": [1, 11, 7, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.add(grad, tf.math.negative(alpha)), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.681390762329102, 2.3075339794158936, 2.220653533935547, 1.9603257179260254, 1.9145561456680298, 2.091266632080078, 2.3083903789520264, 2.3046634197235107, 2.3038229942321777, 2.303234100341797], "accuracy": [0.19297318160533905, 0.10936468094587326, 0.1842557191848755, 0.2925637364387512, 0.34288734197616577, 0.29824328422546387, 0.09694888442754745, 0.09945846349000931, 0.09496764093637466, 0.1002509593963623], "val_loss": [2.3111913204193115, 2.297935962677002, 1.985745906829834, 1.6508004665374756, 1.569960594177246, 2.3122689723968506, 2.3041157722473145, 2.303053617477417, 2.3028199672698975, 2.302668571472168], "val_accuracy": [0.10133333504199982, 0.16599999368190765, 0.3243333399295807, 0.4699999988079071, 0.5146666765213013, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 3, 6, 0, 0, 9, 3, 9, 4, 2, 4, 4, 2, 3, 1, 8, 6, 6, 4, 4, 6, 9, 1, 1], [3, 2, 1, 0, 0, 0, 0, 2], [61, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 6, 2, 4, 4, 8, 1, 4, 5, 1, 8, 1, 2, 6, 9, 4, 0, 6, 2, 0, 8, 9, 7, 3, 6, 5, 1, 4, 3, 2, 2, 8, 1, 4, 4, 4, 7, 7, 3, 3, 7, 5, 2, 6, 3, 5, 8, 5, 5, 5, 2, 1, 8, 2, 0, 8, 3, 1, 1, 6, 9, 1, 8, 1], [3, 2, 4, 5, 7, 2, 3, 4, 2, 4, 3, 5, 7, 5, 2, 4, 5, 7, 0, 1, 4, 1, 1, 2, 6, 0, 2, 2, 7, 4, 3, 5, 0, 3, 4, 7, 2, 5, 1, 1, 1, 5, 4], [68, 15, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.26742857694625854, "mapping_values": [1, 9, 4, 5, 2, 1, 0, 1, 0, 105, 64, 41, 6, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, grad), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(sigma, beta), tf.math.add(grad, tf.math.pow(tf.math.pow(grad, tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.math.square(tf.math.subtract(beta, tf.math.sqrt(tf.math.subtract(sigma, tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.sqrt(beta)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad)), sigma)))))))), tf.math.add(grad, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(grad, tf.math.sqrt(grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), alpha)))))), tf.math.subtract(grad, tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))), tf.math.multiply(tf.math.square(tf.math.sqrt(beta)), tf.math.square(grad))), tf.math.square(grad))), sigma), grad), tf.math.square(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.negative(sigma), grad)), tf.math.sqrt(grad))))))))), tf.math.multiply(beta, tf.math.subtract(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.sqrt(alpha)))), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.371432304382324, 2.343193531036377, 2.2762484550476074, 2.284738302230835, 2.3848817348480225, 2.3054261207580566, 2.303710460662842], "accuracy": [0.19693566858768463, 0.18201030790805817, 0.16721701622009277, 0.12151630967855453, 0.13472460210323334, 0.0936468094587326, 0.09100515395402908], "val_loss": [2.2682135105133057, 2.227487802505493, 2.304786205291748, 2.183093309402466, 2.3057870864868164, 2.3030011653900146, 2.302682399749756], "val_accuracy": [0.09433333575725555, 0.27900001406669617, 0.09966666996479034, 0.10166666656732559, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 2, 7, 0, 0, 9, 3, 8], [3, 2, 1, 1, 0, 0, 0, 2], [38, 18, 26], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.23828572034835815, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 16, 9, 7, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(beta, grad), grad)), tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.subtract(grad, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8541061878204346, 2.3059744834899902, 2.3031020164489746, 2.3010408878326416, 2.278864860534668, 2.238264560699463, 2.471482992172241, 2.3041188716888428, 2.303558826446533, 2.3032093048095703, 2.303013324737549], "accuracy": [0.20023775100708008, 0.09840179979801178, 0.09549596905708313, 0.10949676483869553, 0.2078985571861267, 0.15334829688072205, 0.12455421686172485, 0.1010434553027153, 0.09893012791872025, 0.09840179979801178, 0.10130762308835983], "val_loss": [2.308344841003418, 2.3030219078063965, 2.301558494567871, 2.294280529022217, 2.306429147720337, 2.2386374473571777, 2.3047893047332764, 2.3028786182403564, 2.3026344776153564, 2.3026835918426514, 2.3028647899627686], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.17299999296665192, 0.10133333504199982, 0.24833333492279053, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09733333438634872, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 7, 2, 7, 0, 3, 9, 3, 8], [3, 2, 1, 0, 0, 0, 0, 2], [9, 12, 26], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2240000069141388, "mapping_values": [1, 12, 6, 6, 3, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.115745544433594, 2.2997961044311523, 2.2742137908935547, 2.304633140563965, 2.3033783435821533, 2.303417205810547, 2.3030292987823486], "accuracy": [0.18874652683734894, 0.1216483935713768, 0.16140536963939667, 0.09760929644107819, 0.09734513610601425, 0.09668471664190292, 0.10051512718200684], "val_loss": [2.287118911743164, 2.2101752758026123, 2.3054163455963135, 2.3026673793792725, 2.3025991916656494, 2.302661418914795, 2.302673816680908], "val_accuracy": [0.17866666615009308, 0.23000000417232513, 0.10000000149011612, 0.0963333323597908, 0.10199999809265137, 0.0976666659116745, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 2, 7, 0, 3, 9, 3, 8], [3, 2, 1, 1, 0, 0, 0, 2], [38, 18, 26], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 3, 2, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 52, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2199999988079071, "mapping_values": [1, 5, 2, 3, 0, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.454725742340088, 2.2906627655029297, 2.30369234085083, 2.3896188735961914, 2.3081326484680176, 2.303471088409424, 2.301602840423584, 2.239596128463745, 2.3051018714904785, 2.3039495944976807, 2.3032915592193604, 2.303363084793091], "accuracy": [0.19178444147109985, 0.1566503793001175, 0.10421344637870789, 0.17500990629196167, 0.09708096832036972, 0.10011887550354004, 0.11200633645057678, 0.177255317568779, 0.10355303436517715, 0.09681680053472519, 0.1006472036242485, 0.09589222073554993], "val_loss": [2.2937183380126953, 2.304046630859375, 2.298001289367676, 2.3128750324249268, 2.3039586544036865, 2.3023593425750732, 2.2856638431549072, 2.305067300796509, 2.3026485443115234, 2.3028883934020996, 2.3025336265563965, 2.302872896194458], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.13733333349227905, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.23666666448116302, 0.10499999672174454, 0.10499999672174454, 0.10000000149011612, 0.10499999672174454, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 2, 7, 0, 0, 9, 3, 8], [3, 2, 1, 1, 0, 0, 0, 2], [9, 18, 26], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 7, 0, 6, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 6], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 17, 54], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.1940000057220459, "mapping_values": [1, 1, 0, 1, 0, 82, 52, 30, 9, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.negative(alpha), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(grad, alpha))), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.square(beta)))), tf.math.negative(grad)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.sqrt(grad)))), grad))), grad))))))))))))), beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.negative(grad)), tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6222786903381348, 2.2407619953155518, 2.3036396503448486, 2.275327205657959, 3.11983585357666, 2.3052637577056885], "accuracy": [0.18451987206935883, 0.15136705338954926, 0.1014397069811821, 0.14014001190662384, 0.10249637067317963, 0.09787346422672272], "val_loss": [2.277169704437256, 2.3049826622009277, 2.300402879714966, 2.3033676147460938, 2.3052191734313965, 2.3031060695648193], "val_accuracy": [0.1889999955892563, 0.10366666316986084, 0.09700000286102295, 0.09700000286102295, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [3, 7, 2, 7, 0, 7, 9, 3, 8], [3, 2, 1, 1, 1, 0, 0, 2], [9, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 4, 5, 3, 3, 2, 0, 1, 1, 9, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 1, 3, 0, 7, 2, 4, 5, 9, 3, 6, 0, 7, 7, 3, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 2, 2, 0, 1, 2, 5, 1, 5, 0, 5, 4, 7, 1, 4, 2, 4, 4, 0, 7, 5, 1, 0, 1, 3, 5, 0, 3, 6], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.15485714375972748, "mapping_values": [1, 12, 7, 5, 1, 1, 0, 1, 0, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, alpha)), tf.math.negative(alpha)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(grad), beta), tf.math.multiply(grad, tf.math.multiply(tf.math.add(grad, tf.math.negative(tf.math.subtract(beta, beta))), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4165303707122803, 2.457489013671875, 2.3065974712371826, 2.3017005920410156, 2.3213260173797607, 2.306680679321289], "accuracy": [0.19244486093521118, 0.1970677524805069, 0.09800554811954498, 0.10566636174917221, 0.15863162279129028, 0.09906221181154251], "val_loss": [2.289896249771118, 2.3098037242889404, 2.3036444187164307, 2.2856669425964355, 2.3098909854888916, 2.303823947906494], "val_accuracy": [0.15833333134651184, 0.1003333330154419, 0.1003333330154419, 0.13199999928474426, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 2, 7, 0, 3, 9, 3, 8], [3, 2, 1, 0, 0, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.14057143032550812, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, alpha)), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2997548580169678, 2.660372257232666, 2.31296968460083, 2.3046510219573975, 2.3032143115997314, 2.302311658859253], "accuracy": [0.21238937973976135, 0.1748778223991394, 0.13247919082641602, 0.10130762308835983, 0.0940430611371994, 0.10447761416435242], "val_loss": [2.166746139526367, 2.2838058471679688, 2.3056657314300537, 2.302623748779297, 2.3020858764648438, 2.3008501529693604], "val_accuracy": [0.14266666769981384, 0.10066666454076767, 0.09799999743700027, 0.1003333330154419, 0.10433333367109299, 0.12033333629369736]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 4, 2, 7, 0, 0, 9, 3, 8], [3, 2, 1, 0, 0, 0, 0, 2], [38, 18, 26], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 11, 6, 5, 2, 4, 2, 2, 0, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.math.add(grad, alpha)), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(sigma, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [4, 7, 6, 7, 4, 3, 0, 3, 8], [0, 3, 3, 3, 0, 0, 0, 2], [9, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [52, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]