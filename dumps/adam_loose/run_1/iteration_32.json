[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 2, 2, 8, 2, 0, 9, 8, 5, 8, 8, 2, 2, 1, 1], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [65, 32, 46, 75, 64, 8, 75], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.5131428837776184, "mapping_values": [1, 4, 3, 1, 2, 16, 11, 5, 5, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(grad))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.negative(grad)), tf.math.square(tf.math.sqrt(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.531217575073242, 2.285691976547241, 2.3195958137512207, 2.161695718765259, 2.0489189624786377, 2.3101327419281006, 2.304692029953003, 2.303269386291504, 2.303070068359375], "accuracy": [0.18874652683734894, 0.1608770340681076, 0.13921542465686798, 0.20697398483753204, 0.28556331992149353, 0.09760929644107819, 0.1006472036242485, 0.09959053993225098, 0.09536388516426086], "val_loss": [2.30025053024292, 1.8989137411117554, 2.294386386871338, 1.5864934921264648, 2.3150382041931152, 2.304164171218872, 2.302889108657837, 2.3027737140655518, 2.3027663230895996], "val_accuracy": [0.12399999797344208, 0.39100000262260437, 0.10100000351667404, 0.512333333492279, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09733333438634872, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 2, 2, 8, 2, 0, 4, 2, 4, 6, 9, 3, 1, 1, 0, 9, 9], [1, 2, 0, 3, 4, 5, 1, 5, 2, 3, 3, 3], [68, 32, 45, 75, 64, 8, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [53, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.30885714292526245, "mapping_values": [1, 2, 2, 0, 1, 27, 18, 9, 4, 10, 6, 4, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(tf.math.pow(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)), grad)), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.negative(alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), beta)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.math.add(grad, grad), tf.math.negative(tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3067331314086914, 2.3860933780670166, 2.2095725536346436, 2.3715691566467285, 2.397691488265991, 2.2853634357452393, 2.4281246662139893, 2.306950092315674, 2.304360866546631, 2.303460121154785, 2.303501844406128], "accuracy": [0.19772817194461823, 0.15255580842494965, 0.18174614012241364, 0.11359133571386337, 0.15519747138023376, 0.13432836532592773, 0.13419628143310547, 0.09549596905708313, 0.09774138033390045, 0.10091137140989304, 0.09959053993225098], "val_loss": [2.249793529510498, 2.271446943283081, 2.276851177215576, 2.295647144317627, 2.3112220764160156, 2.1848511695861816, 2.309000253677368, 2.3041083812713623, 2.30307674407959, 2.302786350250244, 2.302696704864502], "val_accuracy": [0.24033333361148834, 0.10266666859388351, 0.16066665947437286, 0.09700000286102295, 0.09966666996479034, 0.3256666660308838, 0.0963333323597908, 0.10000000149011612, 0.0963333323597908, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 2, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [89, 30, 87, 88, 37], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 0, 5, 8, 2, 5, 9, 5], [6, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3085714280605316, "mapping_values": [1, 4, 3, 1, 1, 15, 10, 5, 5, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3292160034179688, 2.2217183113098145, 2.2319562435150146, 2.6259403228759766, 2.3071043491363525, 2.304133892059326], "accuracy": [0.19231277704238892, 0.16457535326480865, 0.16682076454162598, 0.12996962666511536, 0.09681680053472519, 0.10091137140989304], "val_loss": [2.171290397644043, 2.303102970123291, 2.2489006519317627, 2.308120012283325, 2.3034188747406006, 2.3025693893432617], "val_accuracy": [0.3136666715145111, 0.09733333438634872, 0.2150000035762787, 0.09933333098888397, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 2, 2, 8, 2, 0, 4, 1, 6], [2, 2, 0, 3, 4, 5, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.24228571355342865, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.4593892097473145, 11.560235023498535, 2.3026375770568848, 2.3042659759521484, 2.3032994270324707, 2.3029329776763916, 2.3031978607177734], "accuracy": [0.20657773315906525, 0.10368511080741882, 0.12098798155784607, 0.09840179979801178, 0.09298639744520187, 0.09774138033390045, 0.09549596905708313], "val_loss": [2.6511032581329346, 2.2670650482177734, 2.3045051097869873, 2.3028082847595215, 2.302584648132324, 2.30259108543396, 2.3026022911071777], "val_accuracy": [0.12399999797344208, 0.24666666984558105, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10400000214576721, 0.09433333575725555]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 2, 2, 8, 2, 0, 7, 2, 6, 5, 9, 0, 2, 9, 1], [0, 0, 0, 3, 0, 2, 4, 2, 5], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [78, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1940000057220459, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7229180335998535, 2.306580066680908, 2.2514662742614746, 3.29124116897583, 2.3041038513183594, 2.3030362129211426], "accuracy": [0.20512482523918152, 0.09813763201236725, 0.1516312211751938, 0.11015717685222626, 0.09826971590518951, 0.09906221181154251], "val_loss": [2.2841298580169678, 2.3025031089782715, 8.261252403259277, 2.304353952407837, 2.302901029586792, 2.302555561065674], "val_accuracy": [0.2006666660308838, 0.10199999809265137, 0.19433332979679108, 0.10199999809265137, 0.10199999809265137, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 2, 2, 8, 2, 0, 4, 1, 6], [1, 2, 0, 3, 4, 5, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [11, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1599999964237213, "mapping_values": [1, 2, 1, 1, 0, 13, 7, 6, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(alpha, beta), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.449782133102417, 2.333442449569702, 2.4117140769958496, 2.306210517883301, 2.303682804107666, 2.3033504486083984], "accuracy": [0.1958790123462677, 0.14978206157684326, 0.14542332291603088, 0.09972262382507324, 0.09496764093637466, 0.09509972482919693], "val_loss": [2.2995522022247314, 2.3075218200683594, 2.307756185531616, 2.303299903869629, 2.3028972148895264, 2.302565336227417], "val_accuracy": [0.16099999845027924, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 5, 2, 2, 8, 2, 0, 4, 1, 6], [0, 0, 0, 3, 0, 0, 4, 3, 0, 1, 3, 1], [68, 32, 46, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5, 3, 5, 3, 2, 9, 2], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10199999809265137, "mapping_values": [1, 7, 5, 2, 1, 6, 3, 3, 3, 23, 16, 7, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad), grad)))))), tf.math.add(beta, sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3665807247161865, 2.3342387676239014, 2.304255723953247, 2.303351879119873, 2.302985906600952, 2.3029935359954834], "accuracy": [0.19574692845344543, 0.1080438494682312, 0.09760929644107819, 0.09866596013307571, 0.09430722147226334, 0.09470347315073013], "val_loss": [2.304762601852417, 2.304826021194458, 2.3030879497528076, 2.302757978439331, 2.3025765419006348, 2.3026256561279297], "val_accuracy": [0.10266666859388351, 0.09566666930913925, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 7, 2, 9, 8, 5, 0, 3, 7, 5, 8, 8, 2, 2, 1, 1], [5, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [53, 32, 40, 16, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 0, 8, 2, 2, 5, 9, 5, 6, 4, 7, 7, 3, 7, 2, 4, 0, 9, 2, 1, 5, 4, 4, 3, 5, 6, 0, 5, 4, 9, 2, 7, 6, 6, 8, 2, 9, 8, 1, 3], [0, 5, 7, 5, 7, 2, 3, 1, 1, 2, 2, 4, 2, 0, 7, 2, 4, 6, 6, 0, 1, 4, 0], [97, 51, 29, 40, 1, 73, 47, 23], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 14, 9, 5, 4, 65, 42, 23, 8, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.square(grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(grad, grad), tf.math.add(beta, sigma)), tf.math.add(tf.math.pow(alpha, alpha), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))))), tf.math.subtract(tf.math.square(tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta)), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad))), grad), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad)))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.565084934234619, 2.742048978805542, 2.306114673614502, 2.3036391735076904, 2.3030893802642822, 2.3030266761779785], "accuracy": [0.1806894689798355, 0.12336547672748566, 0.1018359512090683, 0.09192973375320435, 0.09549596905708313, 0.09496764093637466], "val_loss": [2.3153576850891113, 2.3090336322784424, 2.3038578033447266, 2.302827835083008, 2.3026909828186035, 2.302654981613159], "val_accuracy": [0.10100000351667404, 0.09833333641290665, 0.1003333330154419, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 2, 2, 8, 2, 0, 4], [1, 2, 0, 3, 4, 5, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 3, 5, 0, 8, 2, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [78, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.036701202392578, 2.391252279281616, 2.305715322494507, 2.3034470081329346, 2.3031492233276367, 2.3031272888183594, 2.3029778003692627, 2.3030498027801514, 2.3029470443725586], "accuracy": [0.17791573703289032, 0.13234710693359375, 0.09998679161071777, 0.09998679161071777, 0.0952318087220192, 0.09576013684272766, 0.09285431355237961, 0.0952318087220192, 0.09642054885625839], "val_loss": [2.287494659423828, 2.3081347942352295, 2.3032782077789307, 2.3026390075683594, 2.3026647567749023, 2.3025615215301514, 2.3027215003967285, 2.302682399749756, 2.3025827407836914], "val_accuracy": [0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.10166666656732559, 0.0989999994635582, 0.10166666656732559, 0.0989999994635582, 0.09733333438634872, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 4, 2, 4, 8, 2, 0, 3, 7, 5, 8, 8, 2, 2, 1, 0], [0, 0, 0, 1, 0, 2, 4, 2, 5, 3, 3], [68, 32, 45, 75, 43, 8, 75], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 2, 3, 2, 5, 9, 5], [0, 5, 7, 0, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 26, 15, 11, 4, 15, 9, 6, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), alpha))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(beta))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4332826137542725, 2.417607545852661, 2.7456719875335693, 2.305093765258789, 2.303602933883667, 2.3030741214752197, 2.3028037548065186, 2.3029189109802246, 2.3028488159179688], "accuracy": [0.18663319945335388, 0.1402720957994461, 0.10011887550354004, 0.09747721254825592, 0.09576013684272766, 0.09153348207473755, 0.09681680053472519, 0.09668471664190292, 0.10130762308835983], "val_loss": [2.3025341033935547, 5.307336807250977, 2.305621385574341, 2.303018569946289, 2.3026113510131836, 2.302600145339966, 2.3025050163269043, 2.3025453090667725, 2.302211284637451], "val_accuracy": [0.10199999809265137, 0.09799999743700027, 0.09933333098888397, 0.10233332961797714, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714, 0.09600000083446503, 0.10000000149011612]}}]