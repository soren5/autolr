[{"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 1, 0, 0, 1, 1, 1], [1, 3, 2, 2], [2, 4, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2808571457862854, "mapping_values": [1, 1, 0, 1, 0, 7, 3, 4, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3700528144836426, 2.1873395442962646, 2.2810041904449463, 2.3052926063537598, 2.3037917613983154, 2.303044319152832], "accuracy": [0.20235107839107513, 0.2122572958469391, 0.1644432693719864, 0.09734513610601425, 0.09760929644107819, 0.09734513610601425], "val_loss": [2.272195816040039, 2.306708335876465, 2.305701971054077, 2.3032126426696777, 2.30293869972229, 2.302701950073242], "val_accuracy": [0.28433331847190857, 0.09733333438634872, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [7, 3, 9, 2], [2, 2, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.19114285707473755, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.587926149368286, 2.305617332458496, 2.32466197013855, 2.3045032024383545, 2.3032402992248535, 2.3029887676239014, 2.303414821624756], "accuracy": [0.1938977688550949, 0.09760929644107819, 0.1608770340681076, 0.1006472036242485, 0.09668471664190292, 0.09126931428909302, 0.09087307006120682], "val_loss": [2.3085010051727295, 2.3000645637512207, 2.306227684020996, 2.303351879119873, 2.302762508392334, 2.302656650543213, 2.302797317504883], "val_accuracy": [0.1003333330154419, 0.19099999964237213, 0.10066666454076767, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [7, 3, 9, 2], [2, 2, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.18971428275108337, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.417849540710449, 2.2979631423950195, 2.2894814014434814, 2.3076534271240234, 2.304046869277954, 2.3033485412597656, 2.3033721446990967], "accuracy": [0.17712323367595673, 0.1834632158279419, 0.17910447716712952, 0.09602430462837219, 0.09972262382507324, 0.09721305221319199, 0.09774138033390045], "val_loss": [2.2987780570983887, 1.9872773885726929, 2.312588930130005, 2.3042871952056885, 2.3026645183563232, 2.3027536869049072, 2.3025286197662354], "val_accuracy": [0.10566666722297668, 0.19366666674613953, 0.10166666656732559, 0.10233332961797714, 0.10000000149011612, 0.10233332961797714, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [1, 0, 1, 0, 1, 1], [7, 3, 9, 2], [2, 4, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.10571428388357162, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6035852432250977, 2.3649442195892334, 2.3051111698150635, 2.3032586574554443, 2.303020715713501, 2.302722454071045], "accuracy": [0.17976489663124084, 0.1492537260055542, 0.09549596905708313, 0.09536388516426086, 0.09826971590518951, 0.10672302544116974], "val_loss": [2.276641845703125, 2.3055403232574463, 2.302809715270996, 2.302615165710449, 2.3026177883148193, 2.3026373386383057], "val_accuracy": [0.10966666787862778, 0.10000000149011612, 0.10266666859388351, 0.10199999809265137, 0.09966666996479034, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [1, 0, 1, 0, 1, 1], [0, 6, 9, 2], [2, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [27, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303675413131714, 2.3030645847320557, 2.3029563426971436, 2.30300235748291, 2.302887439727783, 2.303028106689453, 2.3030412197113037, 2.3033578395843506, 2.3032543659210205, 2.3033719062805176], "accuracy": [0.09298639744520187, 0.0936468094587326, 0.09100515395402908, 0.09615638852119446, 0.09694888442754745, 0.1006472036242485, 0.0952318087220192, 0.09628847241401672, 0.09708096832036972, 0.09496764093637466], "val_loss": [2.302673101425171, 2.302598714828491, 2.302640676498413, 2.3026556968688965, 2.3027234077453613, 2.3026304244995117, 2.3027238845825195, 2.3028488159179688, 2.302980422973633, 2.302762985229492], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.10166666656732559, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [39, 39, 91, 82], [1, 1, 1, 0, 1, 1], [6, 3, 9, 2], [2, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [73, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [9, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.304115056991577, 2.3036017417907715, 2.3043572902679443, 2.304152011871338, 2.3061933517456055, 2.307706356048584, 2.306295156478882, 2.3068556785583496], "accuracy": [0.09589222073554993, 0.09245806187391281, 0.09430722147226334, 0.09417514503002167, 0.09655263274908066, 0.09509972482919693, 0.09721305221319199, 0.09747721254825592], "val_loss": [2.302734375, 2.302870273590088, 2.303133010864258, 2.3034207820892334, 2.310600996017456, 2.306891679763794, 2.3065872192382812, 2.303679943084717], "val_accuracy": [0.10166666656732559, 0.10000000149011612, 0.10199999809265137, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 2, 2, 4, 8, 3, 3, 3, 1, 7, 9], [2, 2, 0, 3, 0, 0, 1, 1, 1, 3], [92, 4, 21, 99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [10, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 1, 22, 12, 10, 4, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, alpha))), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [7.316982746124268, 338.4034729003906, 5012.26953125, 34126.5859375, 151085.984375, 490717.46875], "accuracy": [0.1026284471154213, 0.10117553919553757, 0.10302469879388809, 0.10051512718200684, 0.10091137140989304, 0.1014397069811821], "val_loss": [38.16613006591797, 1113.348876953125, 11217.861328125, 60255.32421875, 224418.796875, 660130.375], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [7, 3, 9, 2], [2, 2, 0, 3], [68, 4], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [70.84333801269531, 462.9875183105469, 1257.960205078125, 2465.828125, 4083.276123046875, 6111.6396484375], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [237.6762237548828, 866.5501708984375, 1905.8006591796875, 3357.19873046875, 5218.2587890625, 7487.69873046875], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [1, 0, 1, 0, 1, 1], [1, 3, 2, 2], [2, 2, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [8, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.434133529663086, 2.3061721324920654, 2.303668975830078, 2.30300235748291, 2.3029870986938477, 2.302995204925537], "accuracy": [0.20631356537342072, 0.09628847241401672, 0.09840179979801178, 0.09457138925790787, 0.09351472556591034, 0.09602430462837219], "val_loss": [2.3084068298339844, 2.3036906719207764, 2.302907705307007, 2.3026540279388428, 2.30281662940979, 2.302751302719116], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.09866666793823242, 0.09866666793823242, 0.0963333323597908, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [7, 3, 9, 2], [2, 2, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 5, 8, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [78.9959716796875, 475.6534423828125, 1276.3929443359375, 2477.627685546875, 4095.486572265625, 6119.41943359375], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [249.4456024169922, 875.8569946289062, 1909.4703369140625, 3353.9541015625, 5206.1279296875, 7466.36865234375], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]