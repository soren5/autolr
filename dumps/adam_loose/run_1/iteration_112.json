[{"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 5, 5, 1, 3, 5, 6, 2, 6, 5, 5, 2, 2, 2, 1, 8, 4, 7, 2, 2, 5, 9, 9, 3, 3, 3, 1, 9, 5, 6, 7, 7, 8, 4, 7, 0, 3, 5, 5, 6, 5], [2, 2, 0, 3, 4, 5, 3, 1, 3, 5, 1, 4, 1, 2, 5, 1, 3, 1, 3, 2, 5, 1, 2], [51, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 0, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.4311428666114807, "mapping_values": [1, 1, 1, 0, 1, 64, 41, 23, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(beta, tf.math.square(beta)), tf.math.square(tf.math.add(tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.subtract(grad, tf.math.sqrt(grad))))), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.math.multiply(grad, alpha), beta)))), tf.math.multiply(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.negative(alpha), tf.math.multiply(grad, beta)), tf.math.square(tf.math.square(tf.math.divide_no_nan(grad, tf.math.square(alpha)))))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.905800819396973, 2.27815580368042, 2.5092945098876953, 2.304800510406494, 2.303372383117676, 2.303149461746216, 2.3030927181243896], "accuracy": [0.1795007288455963, 0.13221503794193268, 0.17421740293502808, 0.09998679161071777, 0.10117553919553757, 0.09668471664190292, 0.09417514503002167], "val_loss": [2.315380573272705, 1.9584153890609741, 2.3062777519226074, 2.3032138347625732, 2.302734613418579, 2.3025991916656494, 2.302553653717041], "val_accuracy": [0.11766666918992996, 0.42266666889190674, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 5, 1, 1, 5, 5, 2, 4, 6, 9, 5, 8, 2, 2, 2, 8, 4, 9, 5, 2, 1, 9, 6, 3, 3, 3, 1, 9, 5, 6, 7, 6, 6, 2, 1], [5, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2, 2, 2, 4, 1, 2, 2], [29, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 2, 4, 5, 7, 2, 3, 1], [35, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 6, 3, 7, 6, 0, 2, 0], [59]], "fitness": -0.28028571605682373, "mapping_values": [1, 1, 0, 1, 0, 55, 35, 20, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.square(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.add(grad, grad)))))), tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(tf.math.subtract(grad, alpha), grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(beta, beta), beta)), grad), alpha)))))))), tf.math.subtract(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.772019386291504, 2.325897216796875, 2.2012670040130615, 2.256695032119751, 13.049219131469727, 2.352602958679199, 2.303549289703369, 2.302701473236084, 2.303208589553833], "accuracy": [0.18874652683734894, 0.12415797263383865, 0.17778365314006805, 0.12957337498664856, 0.12112006545066833, 0.10196803510189056, 0.09985470771789551, 0.10011887550354004, 0.09668471664190292], "val_loss": [2.299018383026123, 2.301694631576538, 2.3060977458953857, 2.136732339859009, 2.310035467147827, 2.3034231662750244, 2.3027443885803223, 2.3026621341705322, 2.3026390075683594], "val_accuracy": [0.10000000149011612, 0.10100000351667404, 0.10100000351667404, 0.2796666622161865, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 5, 1, 5, 5, 4, 4, 6, 5, 5, 8, 2, 2, 1, 8, 4, 7, 5, 2, 5, 9, 9, 3, 3, 3, 1, 9, 5, 6, 7], [2, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2], [29, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2337142825126648, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3625471591949463, 2.911874294281006, 2.309391736984253, 2.4261271953582764, 2.3045806884765625, 2.292140483856201, 2.3640244007110596, 2.3045060634613037, 2.3033087253570557, 2.3031015396118164, 2.302952766418457], "accuracy": [0.21252146363258362, 0.2262580841779709, 0.12376172095537186, 0.13829085230827332, 0.09840179979801178, 0.10408136248588562, 0.13868708908557892, 0.09945846349000931, 0.09496764093637466, 0.09747721254825592, 0.0944393053650856], "val_loss": [2.300687789916992, 2.299133062362671, 2.2634737491607666, 2.3067080974578857, 2.3022515773773193, 2.050187110900879, 2.3053762912750244, 2.3031163215637207, 2.3026726245880127, 2.302591562271118, 2.3026273250579834], "val_accuracy": [0.1289999932050705, 0.1120000034570694, 0.19733333587646484, 0.1003333330154419, 0.1003333330154419, 0.23633334040641785, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [6, 5, 1, 1, 5, 5, 4, 4, 6, 9, 1, 8, 2, 0, 2, 8, 4, 9, 5, 2, 1, 9, 6, 3, 3, 3, 1, 9, 5, 6, 7, 0, 1], [2, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2, 5, 1], [29, 99, 45, 75, 78, 8, 75], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 2, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2328571379184723, "mapping_values": [1, 1, 1, 0, 1, 16, 10, 6, 1, 9, 6, 3, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(beta), tf.math.subtract(tf.math.subtract(beta, tf.math.square(tf.math.square(tf.math.pow(grad, tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.338428020477295, 2.302800416946411, 2.273425817489624, 2.205024003982544, 2.3600194454193115, 2.3054418563842773, 2.3034019470214844], "accuracy": [0.19601109623908997, 0.10038304328918457, 0.15414080023765564, 0.1744815707206726, 0.1476687341928482, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026676177978516, 2.298250436782837, 2.2390825748443604, 2.211777448654175, 2.3067376613616943, 2.303071975708008, 2.302602529525757], "val_accuracy": [0.10266666859388351, 0.22866666316986084, 0.09833333641290665, 0.13466666638851166, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 5, 1, 5, 5, 4, 4, 6, 5, 5, 8, 2, 2, 1, 8, 4, 7, 5, 2, 5, 9, 9, 3, 3, 3, 1, 9, 5, 6, 7], [2, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2], [29, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2314285784959793, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.232895851135254, 3.043680191040039, 2.3044395446777344, 2.303562879562378, 2.3032169342041016, 2.303065061569214], "accuracy": [0.23814556002616882, 0.11266675591468811, 0.09509972482919693, 0.09893012791872025, 0.09787346422672272, 0.09893012791872025], "val_loss": [6.911497592926025, 2.3052968978881836, 2.303194999694824, 2.302682876586914, 2.3026697635650635, 2.3026530742645264], "val_accuracy": [0.2213333398103714, 0.0989999994635582, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 1, 1, 5, 5, 2, 4, 6, 5, 5, 5, 2, 2, 2, 8, 4, 9, 3, 2, 2, 9, 6, 3, 3, 5, 1, 9, 5, 6, 7, 0, 8], [2, 2, 3, 3, 4, 5, 3, 0, 1, 5, 3, 4, 1, 2, 5, 1, 0], [29, 99, 45, 75, 78, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.14914286136627197, "mapping_values": [1, 1, 0, 1, 0, 49, 32, 17, 5, 8, 5, 3, 3, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.subtract(beta, tf.math.subtract(tf.math.square(tf.math.square(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(grad, tf.math.square(tf.math.square(tf.math.square(tf.math.add(grad, grad)))))), grad))), tf.math.add(grad, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))))))), tf.math.multiply(grad, tf.math.add(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.multiply(grad, alpha), beta))), tf.math.square(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(tf.math.negative(alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.359785318374634, 2.302180767059326, 2.7983696460723877, 4.558841705322266, 2.3104896545410156, 2.304346799850464, 2.303180456161499], "accuracy": [0.18478403985500336, 0.11345925182104111, 0.16774533689022064, 0.1018359512090683, 0.09998679161071777, 0.09853387624025345, 0.09813763201236725], "val_loss": [2.303680896759033, 2.2895288467407227, 12.990113258361816, 2.314664363861084, 2.3046956062316895, 2.302861213684082, 2.302639961242676], "val_accuracy": [0.10000000149011612, 0.14233332872390747, 0.09566666930913925, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 5, 1, 5, 5, 4, 4, 6, 5, 5, 8, 2, 2, 1, 8, 4, 7, 5, 2, 5, 9, 9, 3, 3, 3, 1, 9, 5, 6, 7], [2, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2], [29, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.367757320404053, 2.5172541623931205e+32, 2.3322548866271973, 2.3091518878936768, 2.3042490482330322, 2.30316424369812, 2.3030195236206055], "accuracy": [0.19719983637332916, 0.10170386731624603, 0.09906221181154251, 0.09906221181154251, 0.09826971590518951, 0.09457138925790787, 0.09351472556591034], "val_loss": [3.725003480911255, 2.355849027633667, 2.3149001598358154, 2.3057987689971924, 2.3034121990203857, 2.3027331829071045, 2.3026909828186035], "val_accuracy": [0.09833333641290665, 0.10300000011920929, 0.09733333438634872, 0.09733333438634872, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 5, 1, 5, 5, 4, 4, 6, 5, 5, 8, 2, 2, 1, 8, 4, 7, 5, 2, 5, 9, 9, 3, 3, 3, 1, 9, 5, 6, 7], [2, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2], [29, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 11, 5, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(grad, tf.math.add(sigma, grad)))))", "other_info": {"loss": [19090778.0, 2.314253568649292, 2.3058178424835205, 2.3034746646881104, 2.3030331134796143, 2.3029918670654297, 2.3030402660369873, 5656193.0, 2.3028998374938965, 2.3030483722686768], "accuracy": [0.09787346422672272, 0.0936468094587326, 0.09496764093637466, 0.0940430611371994, 0.09932637959718704, 0.09893012791872025, 0.09008057415485382, 0.09536388516426086, 0.09509972482919693, 0.09377889335155487], "val_loss": [2.3236117362976074, 2.3089983463287354, 2.3041696548461914, 2.302993059158325, 2.3026576042175293, 2.302558660507202, 2.3025925159454346, 2.302556037902832, 2.3026318550109863, 2.3026459217071533], "val_accuracy": [0.09733333438634872, 0.09933333098888397, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 1, 1, 5, 5, 2, 4, 6, 9, 5, 8, 2, 2, 2, 8, 4, 9, 5, 2, 1, 9, 6, 3, 3, 3, 1, 9, 5, 6, 7], [0, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2], [29, 99, 45, 75, 78, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 3, 7, 5], [7, 0, 1, 7, 6, 7, 6, 0, 2, 0], [73, 35, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 4, 2, 2, 1, 8, 5, 3, 1, 21, 11, 10, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(grad, tf.math.square(tf.math.subtract(grad, tf.math.multiply(grad, grad)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [13018058457088.0, 1069.458984375, 2294.04736328125, 4127.97802734375, 6563.40869140625, 9631.4345703125], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [715.947021484375, 1700.193115234375, 3285.721923828125, 5490.3525390625, 8305.7861328125, 11758.181640625], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 5, 5, 0, 8, 5, 4, 4, 6, 5, 5, 8, 8, 6, 5, 8, 4, 7, 5, 2, 2, 9, 3, 3, 3, 4, 1, 9, 5, 6, 7], [3, 2, 3, 3, 4, 5, 3, 1, 1, 5, 1, 4, 1, 2, 5, 1], [29, 99, 45, 75, 78, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 8, 9, 0, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 18, 13, 5, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(grad, beta), grad), tf.math.square(tf.math.square(tf.math.sqrt(tf.math.sqrt(grad)))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]