[{"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 4, 9, 4, 1, 4, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 0, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 52, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 0, 5, 3, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 6, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 5, 0, 0, 3, 3, 1, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.6388571262359619, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.320781946182251, 2.373509168624878, 2.9910051822662354, 2.152764081954956, 2.0278573036193848, 1.7998178005218506, 1.6362215280532837, 1.5995715856552124, 1.4687083959579468, 1.2990940809249878, 1.6906837224960327, 1.5226354598999023, 1.2401686906814575, 1.1418421268463135, 1.232271432876587, NaN, NaN, NaN, NaN], "accuracy": [0.22137102484703064, 0.13921542465686798, 0.14621582627296448, 0.21080438792705536, 0.3077532649040222, 0.3987584114074707, 0.43785497546195984, 0.4616298973560333, 0.4991414546966553, 0.5517104864120483, 0.4741777777671814, 0.49029189348220825, 0.5635979175567627, 0.6008453369140625, 0.5809007883071899, 0.17091533541679382, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.168637275695801, 1.8858616352081299, 2.290191650390625, 1.936672568321228, 1.5409358739852905, 1.6040574312210083, 1.4591295719146729, 1.3800673484802246, 1.100762963294983, 1.2384777069091797, 1.3919345140457153, 1.2396230697631836, 1.078916072845459, 1.0958045721054077, 2.184687614440918, NaN, NaN, NaN, NaN], "val_accuracy": [0.21833333373069763, 0.4566666781902313, 0.1289999932050705, 0.3490000069141388, 0.5083333253860474, 0.46000000834465027, 0.5576666593551636, 0.5006666779518127, 0.5796666741371155, 0.5953333377838135, 0.4946666657924652, 0.5713333487510681, 0.6129999756813049, 0.6296666860580444, 0.5536666512489319, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 4, 9, 4, 1, 4, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 2, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [76, 56, 60, 43, 66, 52, 74, 98, 7, 45], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 5, 2, 6, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 1, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 2, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 1, 2, 5, 1, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 93, 29, 45, 56, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.5054285526275635, "mapping_values": [1, 11, 7, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad)), tf.math.subtract(tf.math.pow(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.455982208251953, 2.2960429191589355, 2.306760311126709, 2.2727909088134766, 2.3136508464813232, 1.9919211864471436, 2.132777452468872, 2.1461501121520996, 2.298570394515991, 2.31062912940979, 2.293578624725342], "accuracy": [0.18372738361358643, 0.12415797263383865, 0.10949676483869553, 0.18755778670310974, 0.17804782092571259, 0.3267732262611389, 0.24725927412509918, 0.2806762754917145, 0.12679962813854218, 0.09879804402589798, 0.1406683325767517], "val_loss": [2.3035788536071777, 2.2055575847625732, 2.298820972442627, 2.2560207843780518, 1.970351219177246, 1.5278370380401611, 1.9483238458633423, 2.311012029647827, 2.3164920806884766, 2.2976255416870117, 2.3038172721862793], "val_accuracy": [0.09733333438634872, 0.2280000001192093, 0.1693333387374878, 0.12466666847467422, 0.3083333373069763, 0.49000000953674316, 0.3476666808128357, 0.10066666454076767, 0.09733333438634872, 0.1770000010728836, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 4, 7, 4, 1, 4, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 2, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [65, 52, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 0, 5, 3, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 3, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 4, 6, 6, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 4, 2, 5, 0, 0, 3, 3, 1, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.31371429562568665, "mapping_values": [1, 13, 7, 6, 3, 1, 0, 1, 0, 61, 36, 25, 7, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(tf.math.pow(grad, grad), tf.math.subtract(tf.math.pow(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.divide_no_nan(alpha, grad), beta), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.pow(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.subtract(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.negative(alpha), tf.math.sqrt(tf.math.square(grad))), alpha), tf.math.pow(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(beta)), tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.multiply(beta, tf.math.add(grad, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.320098638534546, 2.478163719177246, 2.44095778465271, 2.3096559047698975, 2.3040246963500977, 2.30312180519104], "accuracy": [0.21582353115081787, 0.1574428677558899, 0.22374852001667023, 0.10276053100824356, 0.09734513610601425, 0.09668471664190292], "val_loss": [2.1102242469787598, 2.2979888916015625, 2.3172121047973633, 2.3045735359191895, 2.3030126094818115, 2.302746057510376], "val_accuracy": [0.3096666634082794, 0.1863333284854889, 0.10199999809265137, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [7, 4, 0, 5, 1, 8, 9, 1, 6, 3, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [3, 2, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [76, 56, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 5, 6, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 2, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 1, 2, 5, 1, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.30971428751945496, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(grad, alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.519023418426514, 2.292264699935913, 2.3037374019622803, 2.303112030029297, 2.3013839721679688, 2.2696373462677, 2.2843563556671143, 2.3055050373077393, 2.2910521030426025, 2.298798084259033, 2.305659532546997, 2.3037960529327393, 2.3030893802642822, 2.3033640384674072], "accuracy": [0.17553824186325073, 0.1356491893529892, 0.1002509593963623, 0.09589222073554993, 0.11200633645057678, 0.16259410977363586, 0.1822744756937027, 0.10527011007070541, 0.13736626505851746, 0.18002906441688538, 0.09866596013307571, 0.09496764093637466, 0.10276053100824356, 0.09826971590518951], "val_loss": [2.312758207321167, 2.3047757148742676, 2.3028931617736816, 2.3024258613586426, 2.2937519550323486, 2.303391218185425, 2.306893825531006, 2.301379680633545, 2.18765926361084, 2.3044378757476807, 2.3030059337615967, 2.3027288913726807, 2.302658796310425, 2.302708864212036], "val_accuracy": [0.0976666659116745, 0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.20266667008399963, 0.0976666659116745, 0.0976666659116745, 0.15066666901111603, 0.30399999022483826, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 4, 9, 4, 1, 4, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 52, 60, 43, 66, 52, 74, 98, 7, 45], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 2, 6, 5, 8, 2, 9, 1, 0, 2, 9, 1, 9, 5, 4, 5, 5, 3, 5, 2, 6, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 5, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 6, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 1, 2, 5, 1, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.30228570103645325, "mapping_values": [1, 5, 2, 3, 1, 12, 7, 5, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3273799419403076, 2.2929461002349854, 2.304049253463745, 2.3986575603485107, 2.3067209720611572, 2.3037467002868652], "accuracy": [0.22480517625808716, 0.15295206010341644, 0.11174217611551285, 0.15968827903270721, 0.09338264167308807, 0.1002509593963623], "val_loss": [2.2105438709259033, 2.3057751655578613, 2.2986655235290527, 2.305964231491089, 2.3043417930603027, 2.3027336597442627], "val_accuracy": [0.30033332109451294, 0.09866666793823242, 0.11666666716337204, 0.10133333504199982, 0.1003333330154419, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [7, 4, 0, 5, 1, 8, 9, 1, 6, 3, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 52, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 5, 6, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 1, 6, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 5, 0, 0, 3, 3, 1, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2874285578727722, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 62, 37, 25, 7, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.multiply(beta, grad), tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.sqrt(sigma)), tf.math.square(tf.math.pow(alpha, grad))), tf.math.subtract(alpha, grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.math.pow(tf.math.negative(alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.multiply(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), sigma), tf.math.add(sigma, tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(tf.math.divide_no_nan(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.255565643310547, 2.1961777210235596, 2.392500877380371, 2.3039236068725586, 2.3028767108917236, 2.3032968044281006, 2.303401470184326], "accuracy": [0.19838859140872955, 0.21912561357021332, 0.11900673806667328, 0.09576013684272766, 0.10157178342342377, 0.10051512718200684, 0.09311848133802414], "val_loss": [2.2081947326660156, 2.627321481704712, 2.302884817123413, 2.302804946899414, 2.3024652004241943, 2.3026182651519775, 2.3027522563934326], "val_accuracy": [0.1679999977350235, 0.28333333134651184, 0.09866666793823242, 0.09866666793823242, 0.10166666656732559, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 9, 5, 1, 2, 9, 1, 6, 3, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [76, 57, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 5, 6, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 2, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 1, 2, 5, 1, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2720000147819519, "mapping_values": [1, 4, 3, 1, 2, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(grad), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.009396076202393, 2.308518886566162, 2.3030200004577637, 2.2628488540649414, 2.306035041809082, 2.240467071533203, 3.027292013168335, 2.308173418045044, 2.304032564163208, 2.303593635559082, 2.3033382892608643], "accuracy": [0.18795403838157654, 0.0956280529499054, 0.10738343745470047, 0.15770703554153442, 0.10315678268671036, 0.18095363676548004, 0.14898955821990967, 0.09721305221319199, 0.09642054885625839, 0.09589222073554993, 0.09655263274908066], "val_loss": [2.3102779388427734, 2.3036458492279053, 2.299370050430298, 2.311605215072632, 2.2946627140045166, 1.958257794380188, 2.311985731124878, 2.304009437561035, 2.302737236022949, 2.3026962280273438, 2.30281662940979], "val_accuracy": [0.09866666793823242, 0.10100000351667404, 0.10400000214576721, 0.0976666659116745, 0.19166666269302368, 0.2783333361148834, 0.0976666659116745, 0.10400000214576721, 0.10000000149011612, 0.10100000351667404, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [7, 4, 0, 5, 1, 8, 9, 1, 6, 3, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 0, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 52, 60, 43, 66, 52, 74, 98, 7, 45], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 3, 5, 3, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 8, 6, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 5, 2, 5, 0, 0, 3, 3, 1, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2491428554058075, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3298354148864746, 2.4620256423950195, 2.3044261932373047, 2.3033392429351807, 2.3031976222991943, 2.3030521869659424], "accuracy": [0.20631356537342072, 0.16417910158634186, 0.09919429570436478, 0.10077928751707077, 0.09311848133802414, 0.09972262382507324], "val_loss": [2.238297939300537, 2.3047823905944824, 2.302976369857788, 2.3027384281158447, 2.3027079105377197, 2.302812099456787], "val_accuracy": [0.2563333213329315, 0.10333333164453506, 0.10100000351667404, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 4, 9, 4, 1, 4, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 2, 2, 0, 3, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [76, 56, 60, 43, 66, 52, 74, 98, 7, 45], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 3, 5, 3, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 2, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 5, 2, 5, 0, 0, 3, 3, 1, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3038747310638428, 2.30300235748291, 2.303037166595459, 2.302992820739746, 2.302858352661133, 2.302861452102661], "accuracy": [0.09787346422672272, 0.09430722147226334, 0.0944393053650856, 0.09602430462837219, 0.09760929644107819, 0.09536388516426086], "val_loss": [2.3025858402252197, 2.3026461601257324, 2.302708387374878, 2.3025951385498047, 2.302645444869995, 2.3025872707366943], "val_accuracy": [0.10199999809265137, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [9, 6, 3, 5, 1, 2, 9, 1, 6, 3, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [3, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [76, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 1, 9, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 8, 2, 8, 5, 4, 5, 8, 4, 3, 6, 1, 8, 6, 3, 4, 1, 0, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 2, 2, 4, 4, 4, 0, 3, 2, 4, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 54, 29, 37, 61, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 7, 3, 2, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304217576980591, 2.3029496669769287, 2.30295467376709, 2.302912712097168, 2.3028645515441895, 2.302887201309204], "accuracy": [0.09721305221319199, 0.09417514503002167, 0.09602430462837219, 0.0944393053650856, 0.09549596905708313, 0.09734513610601425], "val_loss": [2.3026363849639893, 2.3025927543640137, 2.302626132965088, 2.302626848220825, 2.302593469619751, 2.30256986618042], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.0989999994635582, 0.09600000083446503, 0.10300000011920929, 0.10233332961797714]}}]