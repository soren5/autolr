[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.4277142882347107, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3641345500946045, 2.3018908500671387, 2.3269853591918945, 2.2604176998138428, 2.2078235149383545, 2.34885573387146, 2.306288957595825, 2.3037962913513184, 2.302915573120117], "accuracy": [0.22744683921337128, 0.10976093262434006, 0.1306300312280655, 0.1460837423801422, 0.2689208686351776, 0.09866596013307571, 0.10170386731624603, 0.10117553919553757, 0.10355303436517715], "val_loss": [2.3104372024536133, 2.2276930809020996, 2.300544500350952, 2.0815811157226562, 2.3993561267852783, 2.3096699714660645, 2.303943157196045, 2.302962303161621, 2.302615165710449], "val_accuracy": [0.1003333330154419, 0.18966667354106903, 0.10899999737739563, 0.41100001335144043, 0.09266666322946548, 0.09933333098888397, 0.10233332961797714, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [77, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 9, 6, 4, 5, 6, 2, 2, 1, 2, 8, 2, 5, 2, 5, 6, 9, 3, 3, 3, 1, 1, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.385418653488159, 2.170616388320923, 2.8944594860076904, 2.30448055267334, 2.3104584217071533, 2.303412914276123, 2.2733304500579834, 2.958096504211426, 2.3067784309387207, 2.3038923740386963, 2.3029122352600098, 2.3029873371124268], "accuracy": [0.18980319797992706, 0.22361643612384796, 0.1220446452498436, 0.09813763201236725, 0.1080438494682312, 0.09893012791872025, 0.1426495909690857, 0.11108175665140152, 0.09866596013307571, 0.1014397069811821, 0.09945846349000931, 0.09945846349000931], "val_loss": [2.2733142375946045, 6.649392127990723, 2.3055310249328613, 2.30297589302063, 2.3030595779418945, 2.3016490936279297, 7.44096565246582, 2.3082191944122314, 2.303694725036621, 2.3026304244995117, 2.30259370803833, 2.3026351928710938], "val_accuracy": [0.19099999964237213, 0.1926666647195816, 0.14100000262260437, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.22200000286102295, 0.09833333641290665, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 2, 3, 1, 0, 0, 2], [66, 66], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 6, 6, 4, 5, 6, 2, 6, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 9, 0, 3, 9, 5, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 0, 0, 3, 2, 3, 3, 3, 2, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.19285714626312256, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3578712940216064, 2.307788372039795, 2.3267807960510254, 2.3048882484436035, 2.3023483753204346, 2.5630948543548584], "accuracy": [0.19270901381969452, 0.10434553027153015, 0.1694624274969101, 0.09655263274908066, 0.10355303436517715, 0.1990489959716797], "val_loss": [2.2899999618530273, 2.2940540313720703, 2.3060874938964844, 2.3024649620056152, 2.2974472045898438, 3.619194746017456], "val_accuracy": [0.19200000166893005, 0.10266666859388351, 0.1003333330154419, 0.1003333330154419, 0.15199999511241913, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 2, 3, 1, 0, 0, 2], [11, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [21, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.1542857140302658, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3802.6513671875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19204860925674438, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [799579584.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15166667103767395, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 2, 3, 1, 0, 0, 2], [16, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 5, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 1, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 2, 4, 3, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 39, 23, 16, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.pow(alpha, grad)), tf.math.square(tf.math.subtract(grad, tf.math.pow(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), grad), tf.math.divide_no_nan(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), alpha), tf.math.square(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta)), grad))), grad)))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8683383464813232, 2.3182947635650635, 2.308826446533203, 2.304295778274536, 2.303422212600708, 2.303011655807495, 2.3029377460479736], "accuracy": [0.20459648966789246, 0.14515915513038635, 0.09721305221319199, 0.09932637959718704, 0.09549596905708313, 0.09417514503002167, 0.09866596013307571], "val_loss": [2.28920316696167, 2.312911033630371, 2.304617404937744, 2.303058385848999, 2.3027050495147705, 2.3026647567749023, 2.3026490211486816], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 2, 3, 1, 0, 0, 2], [16, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 3, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 9, 5, 2, 5, 6, 3, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 9, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 2, 2, 5, 1, 5, 5, 5, 2, 0, 3], [41, 7, 45, 86, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 11, 10, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.pow(grad, grad), tf.math.multiply(tf.math.subtract(grad, tf.math.pow(beta, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.pow(grad, grad)), tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 1, 1, 9, 8, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3, 2], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 0, 4, 3, 0, 4, 2, 0, 1, 5, 5, 5, 2, 0, 3, 2, 5], [89, 7, 45, 75, 65, 8, 75, 81, 27, 3], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 79, 50, 29, 10, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 51, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.pow(grad, grad), tf.math.square(tf.math.subtract(tf.math.pow(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.divide_no_nan(beta, grad)), tf.math.add(grad, grad)), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.multiply(alpha, grad), alpha), tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))))))), tf.math.square(grad)))), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.add(grad, grad)))), grad))), beta)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), grad)))), beta), grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [1, 1, 2, 3, 1, 0, 0, 2], [77, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 1, 9, 4, 5, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(grad, tf.math.multiply(grad, grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.6693201065063477, 2.309570550918579, 2.303957939147949, 2.3035318851470947, 2.3033840656280518, 2.3031458854675293, 2.302828550338745, 2.3031094074249268, 2.3031184673309326, 2.303270101547241, 2.3030307292938232, 2.3031599521636963], "accuracy": [0.18993528187274933, 0.1002509593963623, 0.10210011899471283, 0.09708096832036972, 0.09496764093637466, 0.09866596013307571, 0.09906221181154251, 0.09919429570436478, 0.09893012791872025, 0.09774138033390045, 0.09325055778026581, 0.09549596905708313], "val_loss": [2.319138288497925, 2.3041865825653076, 2.303218364715576, 2.303302764892578, 2.3028945922851562, 2.302703857421875, 2.3026223182678223, 2.3026514053344727, 2.3027281761169434, 2.3026907444000244, 2.3027596473693848, 2.302720069885254], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 0, 2, 3, 1, 0, 0, 2], [77, 66], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 9, 6, 4, 5, 6, 2, 2, 1, 2, 8, 2, 5, 2, 5, 6, 9, 3, 3, 3, 1, 1, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [59, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 2, 3, 1, 0, 0, 2], [16, 66], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 2, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 2, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 4, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 0, 4, 3, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 0], [21, 7, 63, 42, 65, 8, 75, 3, 51], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 75, 47, 28, 9, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.pow(tf.math.square(grad), tf.math.subtract(tf.math.pow(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.divide_no_nan(beta, grad)), tf.math.add(grad, grad)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(grad, grad), beta))), tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.square(grad))))))), tf.math.negative(beta))))), grad), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.divide_no_nan(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), grad)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2902045249938965, 2.3089182376861572, 2.304473876953125, 2.3034470081329346, 2.3033182621002197, 2.3029587268829346], "accuracy": [0.17778365314006805, 0.09628847241401672, 0.1002509593963623, 0.09932637959718704, 0.09576013684272766, 0.09721305221319199], "val_loss": [2.3130321502685547, 2.3045825958251953, 2.3030331134796143, 2.302675485610962, 2.3026344776153564, 2.302584648132324], "val_accuracy": [0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.09866666793823242, 0.10133333504199982]}}]