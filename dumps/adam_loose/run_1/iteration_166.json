[{"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [3, 1, 2, 3, 1, 0, 0, 2], [37, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 3, 6, 6, 4, 9, 2, 8, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 1, 0, 2, 1, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.4425714313983917, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, alpha), grad), lambda shape,  alpha, beta, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4827539920806885, 2.3472325801849365, 2.297117233276367, 2.1631383895874023, 2.3061118125915527, 2.309487819671631, 2.30470609664917, 2.303544759750366, 2.3039047718048096], "accuracy": [0.19918107986450195, 0.10579843819141388, 0.13129045069217682, 0.22691850364208221, 0.23893804848194122, 0.10038304328918457, 0.09628847241401672, 0.09681680053472519, 0.0956280529499054], "val_loss": [2.4957048892974854, 2.3018929958343506, 2.2387888431549072, 1.7543913125991821, 2.314340591430664, 2.3042004108428955, 2.302920341491699, 2.302793264389038, 2.302757740020752], "val_accuracy": [0.10133333504199982, 0.10199999809265137, 0.3023333251476288, 0.4273333251476288, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 6, 6, 0, 0, 1, 9, 2, 6, 4, 6, 2, 0, 6, 8, 2, 8, 9, 5, 9, 5, 6, 4, 5, 6, 5, 2, 9, 0, 1, 5, 3, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 9, 0, 9, 6, 7, 3], [3, 3, 0, 3, 2, 0, 3, 1, 1, 5, 2, 2, 1, 2, 0, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [39, 16, 45, 38, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.32199999690055847, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4239096641540527, 2.241948127746582, 2.315934419631958, 2.3052475452423096, 2.3033294677734375, 2.3032355308532715, 2.303105354309082], "accuracy": [0.19310526549816132, 0.19231277704238892, 0.13657376170158386, 0.09536388516426086, 0.09576013684272766, 0.09391097724437714, 0.09377889335155487], "val_loss": [2.284958839416504, 1.9043105840682983, 2.306218385696411, 2.303556442260742, 2.302943468093872, 2.3027639389038086, 2.302823781967163], "val_accuracy": [0.20366667211055756, 0.3293333351612091, 0.10166666656732559, 0.09833333641290665, 0.10100000351667404, 0.13600000739097595, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 2, 8, 0, 3, 3, 4, 6, 8, 4, 5, 2, 0, 6, 8, 0, 5, 5, 5, 6, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 1, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [4, 3, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2257142812013626, "mapping_values": [1, 5, 2, 3, 0, 6, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(tf.math.sqrt(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4820804595947266, 2.312182664871216, 2.6862847805023193, 2.304356098175049, 2.303354263305664, 2.3032002449035645, 2.3030753135681152], "accuracy": [0.1744815707206726, 0.13472460210323334, 0.15810328722000122, 0.09509972482919693, 0.09549596905708313, 0.09602430462837219, 0.09668471664190292], "val_loss": [2.2329580783843994, 2.166757583618164, 2.3046231269836426, 2.3029632568359375, 2.302551031112671, 2.3025667667388916, 2.302461862564087], "val_accuracy": [0.2083333283662796, 0.22333332896232605, 0.0989999994635582, 0.0989999994635582, 0.09733333438634872, 0.10333333164453506, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [37, 66], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 3, 3, 1, 3, 6, 6, 4, 9, 2, 2, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [2, 1, 0, 2, 3, 3, 3, 2, 2, 5, 3, 3, 3, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3], [74, 84, 45, 75, 65, 8, 75, 30], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.19428572058677673, "mapping_values": [1, 2, 1, 1, 0, 74, 48, 26, 7, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(alpha, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, grad))), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(beta, beta)), tf.math.add(grad, tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.square(grad), grad), tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta))), tf.math.add(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(grad)))))))))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha), grad))), tf.math.divide_no_nan(grad, tf.math.add(grad, beta))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.494471311569214, 2.242189884185791, 2.3041810989379883, 2.2675065994262695, 2.3094446659088135, 2.303696870803833, 2.30237078666687, 3.2676427364349365, 2.304501533508301, 2.3031837940216064, 2.3031692504882812, 2.3029236793518066], "accuracy": [0.1838594675064087, 0.16999074816703796, 0.09628847241401672, 0.15097081661224365, 0.09813763201236725, 0.09813763201236725, 0.10447761416435242, 0.18755778670310974, 0.10170386731624603, 0.09589222073554993, 0.09338264167308807, 0.09787346422672272], "val_loss": [2.3042683601379395, 2.3050949573516846, 2.302427291870117, 2.329267740249634, 2.303802490234375, 2.302534580230713, 2.2872519493103027, 2.305067777633667, 2.303025960922241, 2.3026793003082275, 2.3026909828186035, 2.302586317062378], "val_accuracy": [0.10066666454076767, 0.10266666859388351, 0.10266666859388351, 0.09799999743700027, 0.10300000011920929, 0.09866666793823242, 0.19466666877269745, 0.10266666859388351, 0.10266666859388351, 0.09833333641290665, 0.09833333641290665, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 2, 8, 0, 3, 3, 4, 6, 8, 4, 5, 2, 0, 6, 8, 0, 5, 5, 5, 6, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 1, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [3, 3, 0, 3, 2, 0, 3, 1, 0, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [48, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.19114285707473755, "mapping_values": [1, 5, 2, 3, 0, 13, 7, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.math.negative(grad)), tf.math.multiply(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), tf.math.pow(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.365168571472168, 2.3024752140045166, 2.289414882659912, 2.3053324222564697, 2.303485631942749, 2.303095817565918], "accuracy": [0.18584071099758148, 0.20036983489990234, 0.1526878923177719, 0.09985470771789551, 0.0948355570435524, 0.09787346422672272], "val_loss": [2.2319512367248535, 2.3543310165405273, 2.306959867477417, 2.3035199642181396, 2.30283784866333, 2.30265736579895], "val_accuracy": [0.1783333271741867, 0.10066666454076767, 0.10066666454076767, 0.09733333438634872, 0.09733333438634872, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3, 8, 0], [4, 3, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 3, 0, 0, 2, 5, 2, 5, 1, 3, 3, 0, 3], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.18085713684558868, "mapping_values": [1, 1, 0, 1, 0, 77, 51, 26, 6, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.math.negative(grad), grad)), tf.math.square(tf.math.subtract(tf.math.pow(beta, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.subtract(alpha, tf.math.add(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.square(tf.math.negative(alpha)))), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.square(grad)))))))))))), tf.math.add(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(grad)), tf.math.negative(beta))), grad)))), alpha))))), grad), grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9751880168914795, 2.306271553039551, 2.3034913539886475, 2.3026540279388428, 2.299687385559082, 2.2769601345062256, 2.3276078701019287, 2.288923501968384, 2.304985761642456, 2.3033769130706787, 2.3031060695648193], "accuracy": [0.19997358322143555, 0.09972262382507324, 0.09747721254825592, 0.10130762308835983, 0.12362963706254959, 0.15757495164871216, 0.19495442509651184, 0.13300752639770508, 0.09893012791872025, 0.09377889335155487, 0.09589222073554993], "val_loss": [2.3083550930023193, 2.303386926651001, 2.302685260772705, 2.302002191543579, 2.2851722240448, 2.2405736446380615, 2.3048760890960693, 2.3064801692962646, 2.3033907413482666, 2.3027803897857666, 2.3028347492218018], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10366666316986084, 0.13500000536441803, 0.18033333122730255, 0.10066666454076767, 0.10199999809265137, 0.10199999809265137, 0.10066666454076767, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 8, 0, 3, 3, 4, 6, 8, 4, 5, 2, 0, 6, 8, 0, 5, 5, 5, 6, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 1, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [3, 2, 0, 3, 2, 0, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.14028571546077728, "mapping_values": [1, 2, 1, 1, 1, 31, 20, 11, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.negative(beta))), tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta)), tf.math.sqrt(tf.math.pow(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha)))), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.square(tf.math.square(tf.math.divide_no_nan(grad, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.473325490951538, 2.247540235519409, 2.4098942279815674, 2.3046507835388184, 2.303255319595337, 2.303253650665283, 2.303130865097046], "accuracy": [0.19152027368545532, 0.1516312211751938, 0.17540615797042847, 0.09126931428909302, 0.09893012791872025, 0.0948355570435524, 0.09298639744520187], "val_loss": [2.3051438331604004, 2.2877159118652344, 2.3043160438537598, 2.302649974822998, 2.3026373386383057, 2.302582263946533, 2.3025994300842285], "val_accuracy": [0.0989999994635582, 0.14800000190734863, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 2, 0, 2, 1, 4, 6, 3, 4, 2, 2, 6, 6, 1, 2, 8, 5, 5, 2, 4, 6, 4, 6, 8, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [4, 3, 0, 3, 2, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 3, 0, 0, 2, 5, 2, 5, 1, 3, 3, 0, 3, 2], [39, 16, 84, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.11142857372760773, "mapping_values": [1, 2, 1, 1, 0, 74, 46, 28, 6, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(beta, grad), tf.math.add(grad, tf.math.sqrt(tf.math.square(tf.math.square(alpha)))))), tf.math.add(tf.math.pow(beta, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, beta)), alpha), grad), grad))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(beta)))), grad), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), grad))), beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4331936836242676, 5.3140740394592285, 2.3077218532562256, 2.304142951965332, 2.303354024887085, 2.3031609058380127], "accuracy": [0.1686699241399765, 0.15031039714813232, 0.09708096832036972, 0.0952318087220192, 0.09840179979801178, 0.09800554811954498], "val_loss": [2.29465389251709, 2.3101413249969482, 2.303745985031128, 2.3027803897857666, 2.3025624752044678, 2.302661180496216], "val_accuracy": [0.11800000071525574, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 8, 0, 3, 3, 1, 6, 8, 3, 5, 4, 0, 6, 0, 0, 5, 8, 5, 6, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 1, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [0, 1, 0, 2, 1, 3, 3, 1, 2, 5, 2, 3, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 21, 13, 8, 2, 1, 0, 1, 1, 16, 8, 8, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, alpha)))))), tf.math.sqrt(tf.math.multiply(tf.math.square(grad), tf.math.pow(tf.math.negative(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 7, 5, 3, 1, 3, 6, 6, 4, 9, 2, 8, 0, 8, 2, 2, 2, 5, 2, 0, 6, 4, 5, 4, 2, 3, 0, 0, 6, 5, 6, 6, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3, 0], [49, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 75, 47, 28, 7, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.negative(grad))))), grad))), tf.math.sqrt(alpha)), tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.math.add(tf.math.negative(beta), grad)), tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(beta, beta), alpha)), tf.math.multiply(beta, tf.math.negative(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, beta)))))))), tf.math.divide_no_nan(grad, alpha))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.divide_no_nan(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]