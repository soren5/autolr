[{"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 0, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [68, 4], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 8, 3, 4, 5, 2, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 0, 4, 4, 1, 2, 3, 3], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.7639999985694885, "mapping_values": [1, 4, 3, 1, 1, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.196481704711914, 55.41390609741211, 2.1460907459259033, 2.0388717651367188, 1.857286810874939, 1.8003461360931396, 1.439083456993103, 1.7810015678405762, 1.7684632539749146, 1.6668757200241089, 1.3592743873596191, 1.1976842880249023, 1.1275668144226074, 1.1293483972549438, 1.0628442764282227, 1.0073654651641846, 0.9602486491203308, 0.9400690793991089, 0.9001797437667847, 0.8887476921081543, 0.8963426351547241, 0.8568906784057617, 0.8327258229255676, 0.8246708512306213, 0.8101860880851746, 0.8079248666763306, 0.7716084122657776, 0.7858928442001343, 0.7522468566894531, 0.729983925819397, 0.7532272338867188, 0.722109317779541, 0.7426788210868835, 0.7148589491844177, 0.7342113256454468, 0.7024762034416199, 0.684767484664917, 0.6847582459449768, 0.6661134362220764, 0.6638494729995728, 0.6563678979873657, 0.6609623432159424, 0.7051396369934082, 0.6256855130195618, 0.620481550693512, 0.6304921507835388, 0.6297875046730042, 0.6069812178611755, 0.6231154799461365, 0.5971582531929016, 0.5889777541160583, 0.5856072306632996, 0.5863327383995056, 0.5728825926780701, 0.6037298440933228, 2.7373883724212646, 9.928004084444787e+29, NaN, NaN], "accuracy": [0.20855897665023804, 0.11134592443704605, 0.19878484308719635, 0.2694492042064667, 0.3411702513694763, 0.3747193217277527, 0.47668737173080444, 0.3999471664428711, 0.44327038526535034, 0.4065513014793396, 0.5077268481254578, 0.5617488026618958, 0.5740324854850769, 0.5904107689857483, 0.6048077940940857, 0.6189407110214233, 0.637432336807251, 0.6373002529144287, 0.6654338836669922, 0.6619997620582581, 0.655527651309967, 0.6642451286315918, 0.6823405027389526, 0.6757363677024841, 0.6819442510604858, 0.6886804699897766, 0.6995112895965576, 0.6893408894538879, 0.7061154246330261, 0.7129837274551392, 0.7045304179191589, 0.7176066637039185, 0.7080966830253601, 0.7168141603469849, 0.7128516435623169, 0.7210407853126526, 0.7268524765968323, 0.7318716049194336, 0.7314753532409668, 0.7334566116333008, 0.7326641082763672, 0.7312111854553223, 0.724739134311676, 0.7532690763473511, 0.7506273984909058, 0.7494386434555054, 0.7510236501693726, 0.7563069462776184, 0.746268630027771, 0.7594769597053528, 0.7652885913848877, 0.7648923397064209, 0.763967752456665, 0.7697794437408447, 0.7559106945991516, 0.6975300312042236, 0.11306300014257431, 0.09998679161071777, 0.09998679161071777], "val_loss": [11.686493873596191, 2.1440000534057617, 2.0828819274902344, 1.598934531211853, 1.5568691492080688, 1.3185571432113647, 1.4434449672698975, 1.4843746423721313, 1.799494743347168, 1.3003236055374146, 1.0906550884246826, 0.9275953769683838, 0.9948625564575195, 0.8718582391738892, 0.8412566781044006, 0.8102166056632996, 0.8025693893432617, 0.7961804270744324, 0.7964306473731995, 0.7892715930938721, 0.8268656134605408, 0.7404000759124756, 0.7575048804283142, 0.7752857208251953, 0.7155300378799438, 0.7014692425727844, 0.7395217418670654, 0.7393449544906616, 0.6850739121437073, 0.7522150278091431, 0.6759960651397705, 0.7770652770996094, 0.6744520664215088, 0.7139377593994141, 0.6846219301223755, 0.6796557903289795, 0.6746244430541992, 0.7049622535705566, 0.6526601314544678, 0.6862913370132446, 0.6587896943092346, 0.6650924682617188, 0.6432895660400391, 0.6373251676559448, 0.6329542398452759, 0.6398338675498962, 0.630433976650238, 0.6590839624404907, 0.6491687297821045, 0.615003228187561, 0.6135694980621338, 0.6114248633384705, 0.6297478079795837, 0.6111600995063782, 0.617703914642334, 2.5104312896728516, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.19033333659172058, 0.3153333365917206, 0.3943333327770233, 0.5103333592414856, 0.5493333339691162, 0.5356666445732117, 0.4676666557788849, 0.289000004529953, 0.5276666879653931, 0.5886666774749756, 0.6510000228881836, 0.6293333172798157, 0.6499999761581421, 0.67166668176651, 0.671999990940094, 0.6813333630561829, 0.6836666464805603, 0.6796666383743286, 0.6806666851043701, 0.6643333435058594, 0.7013333439826965, 0.6993333101272583, 0.6980000138282776, 0.7116666436195374, 0.7143333554267883, 0.7023333311080933, 0.7009999752044678, 0.7236666679382324, 0.6913333535194397, 0.7236666679382324, 0.6710000038146973, 0.7263333201408386, 0.7149999737739563, 0.7233333587646484, 0.7206666469573975, 0.7306666374206543, 0.7073333263397217, 0.7360000014305115, 0.7170000076293945, 0.7363333106040955, 0.7350000143051147, 0.7426666617393494, 0.7463333606719971, 0.7456666827201843, 0.7386666536331177, 0.75, 0.7046666741371155, 0.7450000047683716, 0.7516666650772095, 0.7523333430290222, 0.7526666522026062, 0.7443333268165588, 0.7573333382606506, 0.7566666603088379, 0.1469999998807907, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [39, 39, 91, 82], [1, 0, 1, 0, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 8, 3, 4, 5, 6, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 0, 0, 4, 1, 2, 3, 3], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.5337142944335938, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9191794395446777, 2.4040448665618896, 2.30678129196167, 2.301598310470581, 2.2315468788146973, 2.2493209838867188, 2.274249315261841, 2.202518939971924, 2.1686480045318604, 1.8960868120193481, 2.0603082180023193, 1.6763566732406616, 2.326296329498291, 2.306492805480957, 2.3068671226501465, 2.303708553314209], "accuracy": [0.19574692845344543, 0.17183992266654968, 0.09919429570436478, 0.11676132678985596, 0.16853784024715424, 0.16180160641670227, 0.14978206157684326, 0.21238937973976135, 0.22401267290115356, 0.35147273540496826, 0.2953374683856964, 0.447761207818985, 0.09972262382507324, 0.16417910158634186, 0.09985470771789551, 0.09932637959718704], "val_loss": [2.294572591781616, 2.310074806213379, 2.3030364513397217, 2.29207444190979, 2.2129385471343994, 2.3017759323120117, 2.292433977127075, 1.95722234249115, 1.7151256799697876, 1.9058129787445068, 1.367051124572754, 2.349618434906006, 2.302093505859375, 2.3095781803131104, 2.3037145137786865, 2.302898406982422], "val_accuracy": [0.0833333358168602, 0.09966666996479034, 0.10000000149011612, 0.1483333259820938, 0.29100000858306885, 0.10166666656732559, 0.18066667020320892, 0.3623333275318146, 0.406333327293396, 0.31433331966400146, 0.534333348274231, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 6, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [1, 0, 1, 0, 1, 1], [0, 3, 9, 2], [1, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 3, 0, 5, 8, 8, 2, 5, 9, 5], [0, 0, 4, 4, 1, 2, 3, 3], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.25914284586906433, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.307478427886963, 2.6600821018218994, 2.304847002029419, 2.3437209129333496, 2.304445743560791, 2.30297589302063], "accuracy": [0.20472857356071472, 0.19535067677497864, 0.10593052208423615, 0.14661207795143127, 0.10130762308835983, 0.10051512718200684], "val_loss": [2.1998300552368164, 2.3068549633026123, 2.2949368953704834, 2.30535888671875, 2.3025364875793457, 2.301633358001709], "val_accuracy": [0.2553333342075348, 0.10133333504199982, 0.17933332920074463, 0.09933333098888397, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 0, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [76, 66], [0, 0, 1, 0, 1, 1], [0, 3, 9, 2], [3, 2, 0, 3], [68, 4], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 8, 3, 4, 5, 2, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 5, 7, 5, 7, 2, 3, 1], [6, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 0, 2, 5, 1, 6], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [93, 38]], "fitness": -0.15628571808338165, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6226701736450195, 2.3456192016601562, 2.606726884841919, 2.304569721221924, 2.303474187850952, 2.3027069568634033], "accuracy": [0.18755778670310974, 0.19152027368545532, 0.10210011899471283, 0.1014397069811821, 0.10170386731624603, 0.10091137140989304], "val_loss": [2.2592320442199707, 4.256453990936279, 2.3060834407806396, 2.3038392066955566, 2.3022959232330322, 2.3020966053009033], "val_accuracy": [0.1653333306312561, 0.12533333897590637, 0.10000000149011612, 0.10000000149011612, 0.10433333367109299, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [39, 39, 91, 82], [1, 0, 1, 0, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [92, 4], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 4, 5, 6, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 0, 0, 4, 1, 2, 3, 3], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [22, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [5199344128.0, 102042808.0, 8.547330856323242, 4.286007404327393, 162915264.0, 33.037967681884766, 17.406845092773438, 15.251291275024414], "accuracy": [0.09972262382507324, 0.09893012791872025, 0.1018359512090683, 0.09787346422672272, 0.1002509593963623, 0.09998679161071777, 0.1014397069811821, 0.09985470771789551], "val_loss": [35627588.0, 5.3858962059021, 5.3107452392578125, 4.898112773895264, 41.375850677490234, 20.73323631286621, 21.71006965637207, 11.35295295715332], "val_accuracy": [0.09966666996479034, 0.09799999743700027, 0.10100000351667404, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [76, 66], [0, 0, 1, 1, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 3, 0, 5, 8, 8, 2, 5, 9, 5], [0, 0, 4, 4, 1, 2, 3, 3], [91, 70, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [97, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 1, 4, 2, 2, 0, 6, 3, 3, 2, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [14960.564453125, 766572096.0, 2175977216.0, 7608830464.0, 1.7000507913745203e+17, 4.406224678591398e+18, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09377889335155487, 0.09668471664190292, 0.09615638852119446, 0.09457138925790787, 0.09826971590518951, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [389005760.0, 129807720.0, 288505056.0, 1178399104.0, 3.481534635127603e+16, 4.9805145139052544e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.09533333033323288, 0.09666666388511658, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [76, 66], [0, 1, 0, 0, 1, 1], [0, 6, 6, 2], [2, 2, 0, 3], [92, 4], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 8, 3, 4, 5, 2, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 0, 4, 4, 1, 2, 3, 3], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [71, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 4, 2, 2, 2, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [1, 3, 2, 3, 1, 0, 0, 2], [76, 66], [0, 0, 1, 0, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 7, 3, 4, 5, 2, 2, 9, 2, 8, 8, 4, 6, 2, 4], [0, 0, 4, 4, 1, 2, 3, 3], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [70, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 4, 3, 1, 1, 4, 2, 2, 2, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [569041944576.0, 2041.53955078125, 5851.2041015625, 11416.5908203125, 451054.375, 13091398.0], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09866596013307571, 0.1026284471154213], "val_loss": [973.60400390625, 3980.19140625, 8908.037109375, 16768.4765625, 3773295.25, 58769408.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [60, 66], [1, 0, 0, 0, 1, 1], [0, 3, 9, 2], [2, 2, 0, 3], [68, 4], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 3, 0, 5, 8, 8, 2, 5, 9, 5], [2, 3, 7, 5, 7, 2, 3, 1], [6, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 11, 7, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.add(sigma, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.304413795471191, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2118610441684723, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [84.12924194335938, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03799999877810478, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 0, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [39, 39, 91, 82], [1, 0, 1, 0, 1, 1], [0, 3, 9, 2], [4, 2, 0, 3], [92, 4], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 3, 0, 5, 9, 6, 2, 5, 9, 5], [6, 0, 4, 4, 1, 2, 3, 3], [91, 8, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 1, 7, 3, 7, 6, 0, 2, 0], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 1, 0, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303412437438965, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]