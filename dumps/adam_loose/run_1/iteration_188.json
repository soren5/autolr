[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [5, 5, 5, 9, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1], [68, 51, 90, 98], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.4779999852180481, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(grad), grad), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.1572346687316895, 2.322253465652466, 2.1305270195007324, 2.0653886795043945, 1.910568356513977, 2.326761245727539, 2.306428909301758, 2.304182291030884, 2.3046061992645264], "accuracy": [0.2106723040342331, 0.12759213149547577, 0.27116629481315613, 0.2884691655635834, 0.44049662351608276, 0.10038304328918457, 0.09972262382507324, 0.10606260597705841, 0.09879804402589798], "val_loss": [2.34724760055542, 2.276719808578491, 2.2838449478149414, 1.7289477586746216, 2.388176441192627, 2.3058078289031982, 2.304173469543457, 2.3029422760009766, 2.3030712604522705], "val_accuracy": [0.12433333694934845, 0.17933332920074463, 0.13433332741260529, 0.46399998664855957, 0.10066666454076767, 0.10166666656732559, 0.10066666454076767, 0.10066666454076767, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [6, 2, 5, 3, 6, 8, 8, 1, 1, 5, 1, 4, 1, 2, 6, 3, 3, 5, 8, 3, 8, 0, 7, 7, 5, 9, 9, 1, 0, 6, 8, 8, 1, 8, 8, 2, 5, 5], [4, 7, 4, 5, 4, 3, 3, 1, 4, 0, 3, 5, 3, 4, 2, 2, 2, 6, 2], [68, 51, 29, 56], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.337714284658432, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 57, 38, 19, 3, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(grad, grad))), tf.math.sqrt(grad)), tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(tf.math.add(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), sigma))), tf.math.subtract(grad, tf.math.negative(sigma))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, beta))), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.square(beta)), beta))))), grad))), beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.503086090087891, 2.3133795261383057, 2.3052685260772705, 2.3030500411987305, 2.3030014038085938, 2.3029685020446777, 2.3013455867767334, 2.273118734359741, 2.2574639320373535, 2.304504156112671, 2.283392906188965, 2.318862199783325, 2.3036184310913086], "accuracy": [0.1666886806488037, 0.09655263274908066, 0.09840179979801178, 0.09760929644107819, 0.09391097724437714, 0.09734513610601425, 0.12270505726337433, 0.1578391194343567, 0.14489498734474182, 0.09932637959718704, 0.13498876988887787, 0.107647605240345, 0.09813763201236725], "val_loss": [2.320773124694824, 2.3062992095947266, 2.3031673431396484, 2.3026466369628906, 2.302478075027466, 2.302034616470337, 2.2959322929382324, 1.8786256313323975, 2.303952693939209, 2.301845073699951, 2.3200974464416504, 2.3035335540771484, 2.3014156818389893], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09866666793823242, 0.12933333218097687, 0.33266666531562805, 0.10133333504199982, 0.10400000214576721, 0.1340000033378601, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 3, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 5, 7, 5, 7, 2, 3, 1], [68, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 5, 9, 1, 6, 2, 5, 1], [4, 0, 1, 0, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3271428644657135, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 8, 4, 4, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.2370171546936035, 2.322953701019287, 2.2306008338928223, 2.2990212440490723, 2.3365626335144043, 2.303690195083618, 2.3005590438842773], "accuracy": [0.1670849323272705, 0.12812046706676483, 0.19601109623908997, 0.11042134463787079, 0.16153743863105774, 0.10210011899471283, 0.11015717685222626], "val_loss": [2.3134312629699707, 2.253328561782837, 2.3037333488464355, 2.242279529571533, 2.3038322925567627, 2.3019931316375732, 2.291295051574707], "val_accuracy": [0.10000000149011612, 0.3140000104904175, 0.09966666996479034, 0.21966665983200073, 0.0989999994635582, 0.10266666859388351, 0.12033333629369736]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [6, 4, 5, 3, 6, 1, 2, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 0, 4, 4, 4, 0, 3, 1, 2, 0, 3], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.25057142972946167, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.340376138687134, 2.2521519660949707, 2.2405238151550293, 2.2993125915527344, 2.192247152328491, 2.3060145378112793, 2.305046558380127], "accuracy": [0.20182274281978607, 0.19931316375732422, 0.16536785662174225, 0.12296922504901886, 0.17699114978313446, 0.10474177449941635, 0.09840179979801178], "val_loss": [2.2659013271331787, 2.1672472953796387, 2.307157039642334, 2.156201124191284, 2.307300329208374, 2.3032033443450928, 2.302696704864502], "val_accuracy": [0.22633333504199982, 0.2523333430290222, 0.10199999809265137, 0.22300000488758087, 0.10199999809265137, 0.10100000351667404, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [7, 4, 9, 9, 4, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 5, 7, 5, 7, 2, 3, 1], [68, 48, 29], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 6, 6, 5, 1], [4, 0, 1, 6, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.16828571259975433, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 4, 1, 2, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.7684051990509033, 2.310204029083252, 2.3039066791534424, 2.297429084777832, 2.2960963249206543, 2.3033287525177, 2.3030736446380615, 2.3030338287353516], "accuracy": [0.19310526549816132, 0.09879804402589798, 0.0952318087220192, 0.11108175665140152, 0.10857218503952026, 0.09840179979801178, 0.09325055778026581, 0.09628847241401672], "val_loss": [2.3171544075012207, 2.305232524871826, 2.3005876541137695, 2.2632381916046143, 2.303452491760254, 2.302703619003296, 2.3025577068328857, 2.302546977996826], "val_accuracy": [0.09833333641290665, 0.10199999809265137, 0.16966666281223297, 0.0806666687130928, 0.09833333641290665, 0.10433333367109299, 0.10199999809265137, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [6, 2, 5, 3, 6, 8, 2, 1, 1, 5, 2, 8, 1, 8, 6, 3], [6, 3, 4, 5, 7, 2, 3, 1, 0, 3, 6], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.1331428587436676, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 24, 14, 10, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.multiply(grad, sigma)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.add(grad, beta)), tf.math.sqrt(sigma)), alpha)))), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.265338182449341, 2.3581199645996094, 2.305598258972168, 2.303321123123169, 2.3017334938049316, 2.3883960247039795], "accuracy": [0.19944524765014648, 0.18002906441688538, 0.09628847241401672, 0.1006472036242485, 0.11147800832986832, 0.13829085230827332], "val_loss": [2.2964398860931396, 2.306037187576294, 2.302823305130005, 2.302449941635132, 2.267768144607544, 2.3125195503234863], "val_accuracy": [0.13366666436195374, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.11566666513681412, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [6, 5, 5, 0, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 7, 4, 5, 7, 0, 3, 1, 2, 0, 3], [68, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 6, 4, 2, 0, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(grad), alpha), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.negative(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14661207795143127, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 5, 7, 2, 0, 9, 3, 8], [1, 1, 2, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [7, 4, 3, 9, 4, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 5, 4, 5, 7, 2, 3, 1], [68, 48, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 10, 6, 4, 2, 7, 4, 3, 1, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.square(alpha), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.multiply(grad, grad), grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [0, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 3, 3, 3, 6, 8, 9, 1, 1, 5, 1, 5, 1, 2, 6, 3], [0, 7, 4, 6, 7, 0, 3, 1, 2, 0, 3], [68, 51, 29], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 9, 6, 1, 7, 1, 5, 1], [4, 0, 1, 2, 7, 7, 6, 6, 2, 0], [75, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 19, 12, 7, 3, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.subtract(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3041694164276123, 2.303074598312378, 2.3030407428741455, 2.303042411804199, 2.30318021774292, 2.3029444217681885, 2.3028676509857178], "accuracy": [0.09311848133802414, 0.09628847241401672, 0.09232597798109055, 0.09760929644107819, 0.09338264167308807, 0.0936468094587326, 0.09509972482919693], "val_loss": [2.3025434017181396, 2.3026018142700195, 2.3026137351989746, 2.3025500774383545, 2.302554130554199, 2.302584648132324, 2.3025901317596436], "val_accuracy": [0.10100000351667404, 0.10233332961797714, 0.0989999994635582, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 3, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 7, 4, 5, 7, 0, 3, 1, 2, 0, 3], [68, 51, 29], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 6, 1, 6, 2, 5, 1], [4, 0, 1, 2, 5, 7, 7, 6, 2, 0], [5, 12]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad)", "other_info": {"loss": [2.3101041316986084, 2.307839870452881, 2.307150363922119, 2.306511640548706, 2.305302619934082, 2.3038859367370605, 2.3041510581970215, 2.3039605617523193, 2.303889751434326, 2.3027119636535645, 2.3027310371398926, 2.302504777908325, 2.302152633666992, 2.301955461502075], "accuracy": [0.09272222965955734, 0.09245806187391281, 0.0944393053650856, 0.08770307898521423, 0.09615638852119446, 0.09509972482919693, 0.09008057415485382, 0.09509972482919693, 0.09338264167308807, 0.09893012791872025, 0.09681680053472519, 0.09338264167308807, 0.09285431355237961, 0.09589222073554993], "val_loss": [2.307072639465332, 2.306016206741333, 2.3050355911254883, 2.3044426441192627, 2.304025650024414, 2.303663492202759, 2.30332612991333, 2.3031818866729736, 2.302988052368164, 2.302823543548584, 2.3026392459869385, 2.302473306655884, 2.302466869354248, 2.3024842739105225], "val_accuracy": [0.08900000154972076, 0.08966666460037231, 0.08933333307504654, 0.08966666460037231, 0.09266666322946548, 0.09600000083446503, 0.09866666793823242, 0.0976666659116745, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.0989999994635582, 0.0963333323597908, 0.09233333170413971]}}]