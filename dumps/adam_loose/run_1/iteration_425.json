[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 2, 4, 0, 1, 2, 1, 0, 6, 8, 8, 0, 3, 4, 5, 6, 2, 5, 6, 4, 3, 9], [2, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [89, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 8, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.5037142634391785, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 0, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.762383222579956, 2.274855375289917, 2.4047698974609375, 2.171379327774048, 2.9100236892700195, 2.305617094039917, 2.3035683631896973, 2.3032310009002686, 2.303098440170288], "accuracy": [0.19231277704238892, 0.14898955821990967, 0.14172500371932983, 0.17738740146160126, 0.16523577272891998, 0.09998679161071777, 0.09959053993225098, 0.09655263274908066, 0.09338264167308807], "val_loss": [2.305405616760254, 2.514113426208496, 2.3042891025543213, 1.894287109375, 2.3082640171051025, 2.3038671016693115, 2.3030660152435303, 2.3028011322021484, 2.302644968032837], "val_accuracy": [0.10333333164453506, 0.2866666615009308, 0.0989999994635582, 0.503000020980835, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [7, 2, 3, 0, 5, 1, 6, 1, 2, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [0, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [51, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 8, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 4, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.35914286971092224, "mapping_values": [1, 20, 12, 8, 3, 1, 0, 1, 0, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(tf.math.sqrt(grad))))), tf.math.negative(grad)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.258901834487915, 2.2990145683288574, 2.3210952281951904, 2.3081257343292236, 2.437716245651245, 2.5170016288757324, 2.3042609691619873], "accuracy": [0.22705058753490448, 0.14634791016578674, 0.2413155436515808, 0.10553427785634995, 0.19521859288215637, 0.10117553919553757, 0.09694888442754745], "val_loss": [2.100966453552246, 2.146972894668579, 2.3175978660583496, 2.2990176677703857, 2.5784566402435303, 2.3045859336853027, 2.3028664588928223], "val_accuracy": [0.26633334159851074, 0.34833332896232605, 0.09466666728258133, 0.1313333362340927, 0.10066666454076767, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [2, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [70, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 9, 8, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 4, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [73, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3171428442001343, "mapping_values": [1, 5, 2, 3, 1, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9002041816711426, 2.3028318881988525, 2.580347776412964, 2.30574369430542, 2.303382158279419, 2.3030412197113037, 2.303112030029297], "accuracy": [0.18716153502464294, 0.10447761416435242, 0.18570862710475922, 0.1002509593963623, 0.09866596013307571, 0.09377889335155487, 0.09853387624025345], "val_loss": [2.3077609539031982, 2.275726079940796, 2.307389974594116, 2.303528070449829, 2.302760362625122, 2.3026211261749268, 2.3026206493377686], "val_accuracy": [0.10000000149011612, 0.3089999854564667, 0.10133333504199982, 0.10133333504199982, 0.09866666793823242, 0.10000000149011612, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [0, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [55, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 3, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 0, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24457143247127533, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.6402664184570312, 2.3144185543060303, 2.2715415954589844, 2.317044496536255, 2.3038997650146484, 2.303199529647827, 2.3031530380249023], "accuracy": [0.1694624274969101, 0.1142517477273941, 0.18650111556053162, 0.09813763201236725, 0.09919429570436478, 0.09668471664190292, 0.09787346422672272], "val_loss": [2.3087832927703857, 2.291146755218506, 2.3058314323425293, 2.302957057952881, 2.302678108215332, 2.302738666534424, 2.302614450454712], "val_accuracy": [0.12333333492279053, 0.25066667795181274, 0.0976666659116745, 0.10433333367109299, 0.0976666659116745, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [3, 3, 2, 0, 3, 1, 2, 2, 1, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [89, 38, 60, 59, 65, 52, 74, 98], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 0, 2, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10885713994503021, "mapping_values": [1, 5, 2, 3, 0, 2, 2, 0, 1, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.349649429321289, 2.3863229751586914, 2.3065288066864014, 2.3036389350891113, 2.3033194541931152, 2.303229570388794], "accuracy": [0.19601109623908997, 0.18055738508701324, 0.09866596013307571, 0.09377889335155487, 0.10170386731624603, 0.09721305221319199], "val_loss": [2.2962074279785156, 2.3107962608337402, 2.3041305541992188, 2.3031084537506104, 2.3028292655944824, 2.302583932876587], "val_accuracy": [0.1080000028014183, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [7, 8, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [3, 3, 2, 1, 1, 3, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [10, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 8, 8, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.718120813369751, 2.3047258853912354, 2.303356409072876, 2.3030431270599365, 2.303006649017334, 2.302980899810791], "accuracy": [0.18399155139923096, 0.09826971590518951, 0.09998679161071777, 0.09879804402589798, 0.10051512718200684, 0.09959053993225098], "val_loss": [2.305295467376709, 2.3029348850250244, 2.302642583847046, 2.302804470062256, 2.302666664123535, 2.302682876586914], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.09666666388511658, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 2, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [0, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [92, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 8, 2, 2, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 0, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 1, 0, 1, 0, 22, 14, 8, 3, 3, 1, 2, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), tf.math.sqrt(tf.math.pow(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(sigma, tf.math.divide_no_nan(sigma, tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304565668106079, 2.3030338287353516, 2.302891731262207, 2.3029158115386963, 2.3030638694763184, 2.302964210510254], "accuracy": [0.09245806187391281, 0.09377889335155487, 0.09192973375320435, 0.09232597798109055, 0.09509972482919693, 0.09377889335155487], "val_loss": [2.302589178085327, 2.3027074337005615, 2.3026468753814697, 2.3026700019836426, 2.302706003189087, 2.3026342391967773], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 9, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [0, 3, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [67, 38, 60, 59, 65, 52, 74, 98], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 3, 1, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 0, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 2, 2, 0, 1, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304267406463623, 2.3029370307922363, 2.3029062747955322, 2.302983283996582, 2.302902936935425, 2.302945613861084, 2.3029870986938477, 2.3030543327331543, 2.3029611110687256], "accuracy": [0.0956280529499054, 0.09708096832036972, 0.09813763201236725, 0.09853387624025345, 0.09708096832036972, 0.09826971590518951, 0.09113723784685135, 0.09681680053472519, 0.09747721254825592], "val_loss": [2.3027760982513428, 2.30271053314209, 2.3026468753814697, 2.3026177883148193, 2.3026649951934814, 2.302724838256836, 2.3026673793792725, 2.302598237991333, 2.3025856018066406], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.0989999994635582, 0.10133333504199982, 0.10066666454076767, 0.09566666930913925, 0.09566666930913925, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 2, 4, 0, 4, 1, 1, 2, 6, 8, 8, 0, 3, 4, 5, 6, 2, 5, 6, 4, 3, 9], [0, 1, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [89, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 8, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 3, 1, 0, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [17.422889709472656, 2.3628947734832764, 2.310258150100708, 2.3045027256011963, 2.3034584522247314, 2.303232431411743, 2.303236246109009, 2.3030877113342285, 2.3033571243286133, 2.302823066711426], "accuracy": [0.1942940205335617, 0.10289261490106583, 0.10328886657953262, 0.0940430611371994, 0.09945846349000931, 0.10077928751707077, 0.09734513610601425, 0.09536388516426086, 0.09047681838274002, 0.10328886657953262], "val_loss": [2.5653340816497803, 2.3146562576293945, 2.3044989109039307, 2.302966594696045, 2.3026044368743896, 2.30251407623291, 2.302682399749756, 2.302722930908203, 2.302614212036133, 2.3025786876678467], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.10333333164453506, 0.1003333330154419, 0.09733333438634872, 0.1003333330154419, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 9, 3, 0, 1, 1, 6, 1, 6, 8, 8, 0, 3, 9, 5, 6, 2, 5, 6, 4, 3, 9], [3, 3, 2, 0, 3, 1, 2, 2, 1, 0, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 0, 1, 2], [67, 38, 60, 59, 65, 52, 74, 98], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 9, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 0, 8, 8, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 2, 3, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [65, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0836551189422607, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18755778670310974, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.725259304046631, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]