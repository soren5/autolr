[{"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [7, 4, 9, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 3, 5, 7, 2, 3, 1], [37, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.32685714960098267, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2769763469696045, 2.271219253540039, 2.2181265354156494, 2.2571539878845215, 2.305548906326294, 2.2971060276031494, 2.252171039581299, 2.304485559463501, 2.3032684326171875, 2.3033668994903564, 2.3031110763549805], "accuracy": [0.20684190094470978, 0.1472724825143814, 0.16166952252388, 0.13578127324581146, 0.09826971590518951, 0.12415797263383865, 0.1946902722120285, 0.09879804402589798, 0.09694888442754745, 0.09602430462837219, 0.10236428678035736], "val_loss": [2.2285594940185547, 2.0760867595672607, 2.3061907291412354, 2.3085708618164062, 2.302626371383667, 2.2196171283721924, 2.3039097785949707, 2.302813768386841, 2.3026745319366455, 2.3025879859924316, 2.302615165710449], "val_accuracy": [0.17000000178813934, 0.25433334708213806, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.32366666197776794, 0.09799999743700027, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [57, 66, 81], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 3, 6, 7, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [4, 3, 1, 3, 4, 5, 1], [51, 87, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 0, 8, 0, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 1, 7, 5, 7, 2, 3, 1], [61, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.23742857575416565, "mapping_values": [1, 8, 5, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.582197904586792, 2.3006842136383057, 2.304241180419922, 2.3030471801757812, 2.3023359775543213, 2.4185147285461426], "accuracy": [0.1760665625333786, 0.146479994058609, 0.09602430462837219, 0.09602430462837219, 0.10157178342342377, 0.17263241112232208], "val_loss": [2.293041706085205, 2.3056910037994385, 2.3032166957855225, 2.3024606704711914, 2.299076795578003, 2.311291456222534], "val_accuracy": [0.25, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.16966666281223297, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [9, 7, 3, 8, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 0, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 1, 3, 5, 7, 2, 3, 1], [61, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.23485714197158813, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.multiply(grad, grad)), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2957050800323486, 2.3516640663146973, 2.304229497909546, 2.303297758102417, 2.302936315536499, 2.3029983043670654], "accuracy": [0.2160876989364624, 0.1574428677558899, 0.1010434553027153, 0.09232597798109055, 0.09708096832036972, 0.09668471664190292], "val_loss": [2.2340474128723145, 2.3042168617248535, 2.3028223514556885, 2.3026251792907715, 2.3025550842285156, 2.3025453090667725], "val_accuracy": [0.24166665971279144, 0.10100000351667404, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 0, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 0, 5, 5, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 3, 4, 7, 2, 3, 1], [65, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.16742856800556183, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 17, 10, 7, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.pow(beta, tf.math.negative(tf.math.square(sigma))), grad)), tf.math.square(tf.math.subtract(tf.math.subtract(grad, beta), tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.913166046142578, 2.306675672531128, 2.3030757904052734, 2.2999160289764404, 2.464970588684082, 2.308854579925537, 2.3043606281280518, 2.3032467365264893, 2.3029379844665527], "accuracy": [0.19640734791755676, 0.10077928751707077, 0.09998679161071777, 0.11557257920503616, 0.17012283205986023, 0.10157178342342377, 0.09549596905708313, 0.09457138925790787, 0.09100515395402908], "val_loss": [2.3087244033813477, 2.3033337593078613, 2.3016977310180664, 2.2871947288513184, 2.3127951622009277, 2.3048954010009766, 2.303117275238037, 2.302672863006592, 2.30263352394104], "val_accuracy": [0.10166666656732559, 0.10199999809265137, 0.10000000149011612, 0.17166666686534882, 0.09966666996479034, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [9, 7, 3, 8, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 0, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 1, 4, 3, 8, 5, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 7, 5, 6, 2, 3, 1, 2], [61, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 20, 11, 9, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.subtract(beta, tf.math.subtract(tf.math.pow(grad, tf.math.multiply(tf.math.sqrt(grad), tf.math.square(tf.math.subtract(tf.math.subtract(grad, beta), tf.math.square(sigma))))), tf.math.subtract(alpha, beta)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4470953941345215, 2.2868666648864746, 2.3313560485839844, 2.3048453330993652, 2.304049491882324, 2.3038299083709717, 2.3024137020111084, 2.2687835693359375], "accuracy": [0.18518029153347015, 0.17751948535442352, 0.19402985274791718, 0.1694624274969101, 0.10077928751707077, 0.1022322028875351, 0.10196803510189056, 0.1904636174440384], "val_loss": [2.2996864318847656, 2.3050718307495117, 2.2978434562683105, 2.305671453475952, 2.3032028675079346, 2.3027474880218506, 2.2977194786071777, 2.304377555847168], "val_accuracy": [0.09933333098888397, 0.10833333432674408, 0.11433333158493042, 0.09933333098888397, 0.09533333033323288, 0.09600000083446503, 0.09700000286102295, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 3, 9, 3, 8, 0], [2, 1, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [2, 4, 9, 4, 5, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [88, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [57, 66], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 3, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [7, 4, 9, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 2, 3, 5, 7, 2, 3, 1], [37, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [74, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 7, 4, 3, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, beta)), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [9, 7, 3, 8, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 1, 3, 4, 5, 1], [80, 87, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [2, 4, 9, 4, 5, 3, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 10, 7, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), beta)), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [11.869927406311035, 2.3093044757843018, 2.3038976192474365, 2.303755521774292, 2.3031060695648193, 2.303168535232544, 2.303049325942993, 2.3030200004577637, 2.3029961585998535, 2.3029634952545166], "accuracy": [0.19019944965839386, 0.09945846349000931, 0.1006472036242485, 0.09087307006120682, 0.09311848133802414, 0.0936468094587326, 0.09747721254825592, 0.09457138925790787, 0.09813763201236725, 0.09893012791872025], "val_loss": [2.3167953491210938, 2.305889368057251, 2.303877353668213, 2.3032171726226807, 2.302905559539795, 2.302628993988037, 2.302711009979248, 2.3026390075683594, 2.302755832672119, 2.3026363849639893], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09566666930913925, 0.09566666930913925, 0.10133333504199982, 0.09566666930913925, 0.09566666930913925, 0.09833333641290665, 0.0989999994635582, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [2, 3, 0, 3, 1, 0, 0, 2], [57, 66], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [4, 3, 3, 3, 7, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 0, 0, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 0, 8, 0, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 1, 7, 5, 7, 2, 3, 1], [61, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [99, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 14, 8, 6, 2, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.square(grad)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [5, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 1, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 3, 5, 7, 2, 3, 1], [23, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [27, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.subtract(grad, tf.math.subtract(tf.math.pow(sigma, tf.math.multiply(grad, grad)), tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]