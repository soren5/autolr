[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 2, 7, 0, 0, 9, 3, 8], [3, 2, 1, 1, 0, 0, 0, 2], [9, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.7751428484916687, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, tf.math.negative(alpha))), alpha), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8274645805358887, 2.3036210536956787, 2.3004581928253174, 3.435354232788086, 2.306657075881958, 2.194864511489868, 2.3086369037628174, 2.3019096851348877, 2.178471565246582, 2.036590099334717, 2.242741823196411, 2.111780881881714, 1.8847256898880005, 2.1932973861694336, 2.227631092071533, 1.9001574516296387, 1.5489553213119507, 1.465011477470398, 1.357312798500061, 1.2130355834960938, 1.1440423727035522, 1.372772216796875, 1.0505443811416626, 0.9957029223442078, 0.92054283618927, 0.954395592212677, 0.894132673740387, 0.8583913445472717, 0.8548789620399475, 0.8653443455696106, 0.8499639630317688, 0.8696680068969727, 0.8275544047355652, 0.8218135237693787, 0.8309458494186401, 0.8258631229400635, 0.8017174601554871], "accuracy": [0.20803064107894897, 0.10038304328918457, 0.11266675591468811, 0.12812046706676483, 0.10500594228506088, 0.21344605088233948, 0.10130762308835983, 0.09893012791872025, 0.23946638405323029, 0.3197728097438812, 0.1526878923177719, 0.24725927412509918, 0.3494914770126343, 0.25003302097320557, 0.1818782240152359, 0.3551710546016693, 0.47312110662460327, 0.49412229657173157, 0.5411438345909119, 0.5723153948783875, 0.5959582328796387, 0.5342755317687988, 0.6168273687362671, 0.6379606127738953, 0.6544709801673889, 0.6499801874160767, 0.6712455153465271, 0.6770572066307068, 0.6847180128097534, 0.6781138777732849, 0.687491774559021, 0.6775855422019958, 0.693831741809845, 0.6980583667755127, 0.6902654767036438, 0.6922467350959778, 0.6971337795257568], "val_loss": [2.305055618286133, 2.303054094314575, 2.2637081146240234, 2.311306953430176, 2.301940679550171, 2.3068959712982178, 2.303116798400879, 2.278195381164551, 1.7097656726837158, 2.3132736682891846, 1.8507856130599976, 1.805294156074524, 1.7998523712158203, 2.269561767578125, 2.2357563972473145, 1.4551873207092285, 1.3608319759368896, 1.104621410369873, 0.9226536750793457, 0.8582146167755127, 0.864057719707489, 0.9481704235076904, 0.860354483127594, 0.7444409728050232, 0.7147963047027588, 0.6815065145492554, 0.6911373138427734, 0.6685124635696411, 0.6676887273788452, 0.6547136306762695, 0.7286272644996643, 0.639787495136261, 0.6391429901123047, 0.6240136027336121, 0.6225144267082214, 0.6594933271408081, 0.6233028173446655], "val_accuracy": [0.0963333323597908, 0.09733333438634872, 0.12966667115688324, 0.09799999743700027, 0.10599999874830246, 0.10233332961797714, 0.09933333098888397, 0.21299999952316284, 0.46666666865348816, 0.10233332961797714, 0.382666677236557, 0.3866666555404663, 0.5306666493415833, 0.1860000044107437, 0.19499999284744263, 0.47600001096725464, 0.5249999761581421, 0.6510000228881836, 0.6959999799728394, 0.7160000205039978, 0.6886666417121887, 0.6486666798591614, 0.6859999895095825, 0.7153333425521851, 0.7276666760444641, 0.7406666874885559, 0.7396666407585144, 0.7429999709129333, 0.7423333525657654, 0.7523333430290222, 0.7193333506584167, 0.7726666927337646, 0.7683333158493042, 0.7620000243186951, 0.7683333158493042, 0.750333309173584, 0.7566666603088379]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 7, 6, 9, 5, 3, 9, 3, 8], [3, 2, 1, 1, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3742857277393341, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.256396770477295, 2.433262825012207, 2.3045809268951416, 2.248981237411499, 2.3514084815979004, 2.3037426471710205], "accuracy": [0.21595561504364014, 0.1582353711128235, 0.1010434553027153, 0.17672698199748993, 0.11636507511138916, 0.1026284471154213], "val_loss": [2.126012086868286, 2.3063766956329346, 2.300356388092041, 2.233649730682373, 2.304979085922241, 2.2999203205108643], "val_accuracy": [0.37533333897590637, 0.13966666162014008, 0.10133333504199982, 0.18066667020320892, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 7, 6, 7, 0, 8, 9, 3, 8], [3, 2, 3, 3, 0, 0, 0, 2], [9, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2582857012748718, "mapping_values": [1, 11, 7, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.negative(grad)))), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.504833221435547, 2.263563632965088, 3.4207680225372314, 2.2902355194091797, 2.332585334777832, 2.3388283252716064, 2.3049545288085938, 2.3043103218078613, 2.3033175468444824, 2.3042633533477783], "accuracy": [0.1884823739528656, 0.14291374385356903, 0.1570466309785843, 0.12323339283466339, 0.2024831622838974, 0.11557257920503616, 0.09879804402589798, 0.10038304328918457, 0.10487385839223862, 0.09774138033390045], "val_loss": [2.3027284145355225, 2.297694444656372, 2.304286241531372, 2.2253501415252686, 2.2151660919189453, 2.3038675785064697, 2.3030014038085938, 2.302800178527832, 2.3028147220611572, 2.302809000015259], "val_accuracy": [0.10100000351667404, 0.21433334052562714, 0.09533333033323288, 0.234333336353302, 0.2549999952316284, 0.09966666996479034, 0.10300000011920929, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [7, 7, 3, 6, 0, 0, 9, 3, 9, 4, 2, 4, 4, 2, 3, 1, 8, 6, 6, 4, 4, 6, 9, 1, 1], [1, 2, 2, 3, 2, 0, 0, 2, 1, 1, 1, 0, 3, 3, 0, 1, 1, 0], [9, 66, 75, 36, 74, 35, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 46], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 4, 3, 2, 6, 4, 8, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 4, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2525714337825775, "mapping_values": [1, 11, 7, 4, 1, 2, 1, 1, 0, 11, 5, 6, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, grad), tf.math.negative(grad)), grad), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.multiply(alpha, tf.math.add(grad, grad)), grad), tf.math.divide_no_nan(grad, beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5024325847625732, 2.299086570739746, 2.306246519088745, 2.3036282062530518, 2.3031716346740723, 2.303095579147339], "accuracy": [0.18293488025665283, 0.15440496802330017, 0.09853387624025345, 0.0940430611371994, 0.10038304328918457, 0.10038304328918457], "val_loss": [2.207632541656494, 2.3075523376464844, 2.3032822608947754, 2.302623748779297, 2.3026270866394043, 2.302537679672241], "val_accuracy": [0.25833332538604736, 0.10499999672174454, 0.10000000149011612, 0.10000000149011612, 0.10166666656732559, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 7, 5, 9, 5, 3, 8], [3, 2, 3, 1, 1, 0, 0, 2], [1, 66, 83], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10857142508029938, "mapping_values": [1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(grad, tf.math.square(alpha)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.287247657775879, 2.308443069458008, 2.302799701690674, 2.3034491539001465, 2.3032000064849854, 2.303007125854492], "accuracy": [0.2040681540966034, 0.11134592443704605, 0.09509972482919693, 0.09734513610601425, 0.09853387624025345, 0.09206181764602661], "val_loss": [2.3009324073791504, 2.2922027111053467, 2.3031089305877686, 2.3027729988098145, 2.302509069442749, 2.3025574684143066], "val_accuracy": [0.11366666853427887, 0.04766666516661644, 0.10233332961797714, 0.10499999672174454, 0.10499999672174454, 0.10966666787862778]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 7, 1, 7, 5, 7, 9, 3, 8, 9], [3, 2, 3, 1, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10057143121957779, "mapping_values": [1, 9, 4, 5, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(grad, alpha))), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.551027536392212, 2.436319589614868, 2.305548667907715, 2.3034768104553223, 2.3029942512512207, 2.302966356277466], "accuracy": [0.19482234120368958, 0.10289261490106583, 0.09628847241401672, 0.09694888442754745, 0.09932637959718704, 0.09655263274908066], "val_loss": [2.336191415786743, 2.308434009552002, 2.303682565689087, 2.3028573989868164, 2.3027777671813965, 2.302687168121338], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.09833333641290665, 0.1003333330154419, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [7, 7, 3, 6, 0, 7, 9, 3, 8], [1, 1, 1, 3, 2, 0, 0, 2], [9, 66, 83], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [9, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [4, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 5, 1, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 7, 3, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 2, 1, 1, 0, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, alpha), tf.math.negative(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad)))), grad), tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [24.26402473449707, 2.2559321769408288e+33, 2.3196873664855957, 2.3069350719451904, 2.3038735389709473, 2.3031680583953857], "accuracy": [0.1904636174440384, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09642054885625839, 0.09655263274908066], "val_loss": [3004069.5, 2.330733060836792, 2.3094072341918945, 2.304164171218872, 2.302936553955078, 2.302687883377075], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 1, 7, 2, 9, 9, 1, 8, 3, 5, 7, 9, 5, 7, 8], [1, 2, 2, 3, 3, 0, 0, 2], [9, 59, 75, 36], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 1, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1512.6041259765625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20261524617671967, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [72841112.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 7, 1, 9, 4, 9, 9, 3, 8, 9], [1, 1, 1, 3, 3, 0, 0, 2], [8, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 9, 3, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(alpha), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 9, 6, 7, 5, 3, 9, 3, 8, 6, 5, 3, 6, 2, 4, 7, 5, 6, 8, 8, 3, 8, 3, 3, 8], [2, 2, 3, 1, 1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 0], [9, 66, 50, 71, 42, 32], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.square(tf.math.multiply(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9533307552337646, 2.306884765625, 2.304025173187256, 2.3042337894439697, 2.3031327724456787, 2.303138256072998, 2.303065299987793, 2.303133487701416, 2.303020715713501, 2.3030834197998047, 2.303046464920044, 2.302915573120117, 2.3030080795288086, 2.302947998046875], "accuracy": [0.18663319945335388, 0.10077928751707077, 0.09800554811954498, 0.10460969805717468, 0.09285431355237961, 0.09866596013307571, 0.09047681838274002, 0.09866596013307571, 0.09747721254825592, 0.09747721254825592, 0.09615638852119446, 0.09628847241401672, 0.09113723784685135, 0.09589222073554993], "val_loss": [2.3106610774993896, 2.3044540882110596, 2.303088903427124, 2.3026366233825684, 2.302544355392456, 2.3025755882263184, 2.3026256561279297, 2.30257511138916, 2.302567720413208, 2.302554130554199, 2.302560329437256, 2.3025741577148438, 2.302623748779297, 2.3025805950164795], "val_accuracy": [0.09933333098888397, 0.09700000286102295, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.1003333330154419, 0.09866666793823242, 0.10266666859388351, 0.10266666859388351, 0.1003333330154419, 0.09799999743700027, 0.10266666859388351, 0.10266666859388351]}}]