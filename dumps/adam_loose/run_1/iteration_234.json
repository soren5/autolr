[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [21, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.727142870426178, "mapping_values": [1, 9, 7, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4018073081970215, 2.279249668121338, 3.0966053009033203, 2.3084466457366943, 2.3030028343200684, 2.2989330291748047, 2.253159523010254, 2.0254054069519043, 1.7745620012283325, 1.7586716413497925, 1.8758268356323242, 1.7537665367126465, 1.6114147901535034, 1.2062644958496094, 1.2248802185058594, 1.1320441961288452, 0.9962212443351746, 1.3866024017333984, 1.9537423849105835, 2.022324800491333, 1.463034749031067, 1.2881240844726562], "accuracy": [0.20882314443588257, 0.13842293620109558, 0.11993131786584854, 0.10619468986988068, 0.10579843819141388, 0.11147800832986832, 0.16153743863105774, 0.30682867765426636, 0.4224012792110443, 0.39624884724617004, 0.3863426148891449, 0.4105137884616852, 0.46968695521354675, 0.5831462144851685, 0.549068808555603, 0.59225994348526, 0.6345264911651611, 0.540219247341156, 0.3155461549758911, 0.29480913281440735, 0.47985735535621643, 0.5542200207710266], "val_loss": [2.3192503452301025, 2.157794713973999, 2.307093858718872, 2.3020598888397217, 2.3008034229278564, 2.2913308143615723, 2.036608934402466, 1.8538739681243896, 2.0008394718170166, 1.4517461061477661, 1.557869791984558, 1.3306368589401245, 1.0297937393188477, 0.8727042078971863, 0.9976993799209595, 0.7411054968833923, 0.7075152397155762, 1.038106918334961, 1.2357356548309326, 1.3941712379455566, 1.0393157005310059, 1.0586546659469604], "val_accuracy": [0.10000000149011612, 0.265666663646698, 0.10000000149011612, 0.10333333164453506, 0.12800000607967377, 0.18833333253860474, 0.312666654586792, 0.437333345413208, 0.3463333249092102, 0.5533333420753479, 0.45533332228660583, 0.5770000219345093, 0.6603333353996277, 0.643666684627533, 0.6626666784286499, 0.7279999852180481, 0.7350000143051147, 0.6886666417121887, 0.6043333411216736, 0.5, 0.6513333320617676, 0.6499999761581421]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 6, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [21, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.5137143135070801, "mapping_values": [1, 3, 1, 2, 0, 81, 50, 31, 9, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, beta), tf.math.square(tf.math.subtract(tf.math.square(alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta), grad))), tf.math.square(tf.math.sqrt(tf.math.multiply(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(grad, grad)), tf.math.square(beta)), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)))), grad))), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha), grad))), tf.math.divide_no_nan(grad, tf.math.subtract(alpha, beta))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.multiply(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.289076328277588, 2.2713258266448975, 2.300224542617798, 2.131977081298828, 2.391587018966675, 2.304166316986084, 2.3035101890563965, 2.303152561187744, 2.302884817123413], "accuracy": [0.19653943181037903, 0.13868708908557892, 0.11847840249538422, 0.2355038970708847, 0.1442345827817917, 0.09734513610601425, 0.09602430462837219, 0.09628847241401672, 0.1006472036242485], "val_loss": [2.2494893074035645, 2.30208420753479, 2.2765092849731445, 1.5396978855133057, 2.3053884506225586, 2.302976608276367, 2.3027350902557373, 2.302511692047119, 2.3019182682037354], "val_accuracy": [0.2633333206176758, 0.12066666781902313, 0.22100000083446503, 0.5230000019073486, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 0, 6, 2, 3, 1, 5, 4, 1, 3, 1, 2, 6, 3, 1, 3, 2, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 2, 0, 4, 2, 3, 1, 2, 5, 1, 1, 0, 0, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0, 0, 0, 5, 3, 5, 1, 1], [49, 51, 29, 63, 84, 13, 74, 53, 85, 69, 68], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.36314284801483154, "mapping_values": [1, 9, 7, 2, 1, 1, 0, 1, 1, 82, 49, 33, 11, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(alpha), tf.math.square(tf.math.sqrt(tf.math.square(tf.math.subtract(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.multiply(tf.math.subtract(tf.math.square(beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.pow(tf.math.subtract(beta, tf.math.multiply(tf.math.subtract(sigma, alpha), beta)), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(alpha, alpha)), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(beta)), tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), sigma)), sigma), tf.math.multiply(tf.math.add(tf.math.add(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(tf.math.add(tf.math.pow(tf.math.sqrt(sigma), tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.divide_no_nan(grad, alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6372687816619873, 2.2355313301086426, 2.3069310188293457, 2.2988154888153076, 2.234050750732422, 2.1833977699279785, 2.3048312664031982, 2.30361270904541, 2.303481101989746, 2.303306818008423], "accuracy": [0.19218069314956665, 0.18319904804229736, 0.1002509593963623, 0.12389380484819412, 0.1562541276216507, 0.22031435370445251, 0.09694888442754745, 0.09338264167308807, 0.09549596905708313, 0.0956280529499054], "val_loss": [2.2922284603118896, 2.310753107070923, 2.303166389465332, 2.2722620964050293, 1.7943916320800781, 2.305271863937378, 2.302962303161621, 2.3026366233825684, 2.302839756011963, 2.3027665615081787], "val_accuracy": [0.24933333694934845, 0.10233332961797714, 0.10000000149011612, 0.09866666793823242, 0.3696666657924652, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [1, 3, 5, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.35685715079307556, "mapping_values": [1, 3, 1, 2, 0, 84, 52, 32, 8, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.math.square(beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta))), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(grad, beta), tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.negative(grad)), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)), tf.math.subtract(grad, tf.math.multiply(grad, alpha))))), beta)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad), grad)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.pow(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2409651279449463, 2.2706139087677, 2.223423957824707, 2.1364502906799316, 2.3039958477020264, 2.3765196800231934, 2.3056533336639404], "accuracy": [0.19957733154296875, 0.14529123902320862, 0.18134988844394684, 0.2226918488740921, 0.1018359512090683, 0.1690661758184433, 0.09509972482919693], "val_loss": [2.3037824630737305, 1.821356177330017, 2.2771246433258057, 2.306269645690918, 2.2948460578918457, 2.306396245956421, 2.302971601486206], "val_accuracy": [0.10066666454076767, 0.3529999852180481, 0.10999999940395355, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [0, 1, 1, 2, 1, 2, 0, 2], [20, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 6, 6, 4, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 2, 2, 4, 2, 2, 1, 2, 5, 4, 1, 0, 3, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3199999928474426, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.divide_no_nan(beta, beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2720863819122314, 2.3185009956359863, 2.251418113708496, 2.087735414505005, 2.2899508476257324, 2.2918734550476074], "accuracy": [0.22137102484703064, 0.13908334076404572, 0.16140536963939667, 0.260071337223053, 0.14674416184425354, 0.12270505726337433], "val_loss": [1.9850094318389893, 2.3055849075317383, 2.201439380645752, 2.2874953746795654, 2.304212808609009, 2.221383571624756], "val_accuracy": [0.30399999022483826, 0.0976666659116745, 0.18700000643730164, 0.10866666585206985, 0.10066666454076767, 0.1576666682958603]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 6, 1, 9, 7, 8, 2, 2, 4, 9], [2, 3, 1, 1, 0, 0, 0, 2], [20, 44, 97, 49], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [1, 0, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 4, 9, 6, 2, 0, 1, 9, 6, 1, 3, 1, 5, 2, 3, 8, 3, 8, 1, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 4, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [92, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.27000001072883606, "mapping_values": [1, 17, 11, 6, 3, 7, 4, 3, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(alpha, tf.math.subtract(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.445361614227295, 2.259148120880127, 2.2644193172454834, 2.3072316646575928, 2.2997334003448486, 2.4509429931640625, 2.306609630584717], "accuracy": [0.18795403838157654, 0.17382116615772247, 0.1896711140871048, 0.09945846349000931, 0.11662924289703369, 0.14621582627296448, 0.10011887550354004], "val_loss": [2.296621322631836, 2.247603416442871, 2.311410665512085, 2.303332567214966, 2.260093927383423, 2.310410976409912, 2.304572582244873], "val_accuracy": [0.109333336353302, 0.2720000147819519, 0.09866666793823242, 0.09866666793823242, 0.17366667091846466, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 6, 1, 7, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 0, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 4, 1, 4, 2, 0, 1, 9, 6, 1, 3, 1, 5, 2, 3, 8, 3, 8, 1, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 4, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 3, 4, 2, 7, 1, 3, 0, 3, 5, 1, 4, 7, 4, 7, 7, 2, 0, 7, 2, 4, 7, 6, 5, 6, 4, 7, 0, 3, 2, 0], [72, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [3, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 1, 14, 7, 7, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, sigma), tf.math.pow(tf.math.subtract(tf.math.pow(grad, beta), grad), tf.math.add(alpha, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [20, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.499433994293213, 2.3314664363861084, 2.3055198192596436, 2.3034145832061768, 2.303088665008545, 2.302932024002075, 2.3029935359954834, 2.3030529022216797, 2.302887201309204, 2.3029251098632812, 2.3030056953430176], "accuracy": [0.1802932173013687, 0.13129045069217682, 0.09760929644107819, 0.09642054885625839, 0.09034473448991776, 0.09826971590518951, 0.09840179979801178, 0.09325055778026581, 0.09840179979801178, 0.09338264167308807, 0.09628847241401672], "val_loss": [2.298353433609009, 2.3066246509552, 2.3029706478118896, 2.302583694458008, 2.3025736808776855, 2.3025739192962646, 2.3025808334350586, 2.3027138710021973, 2.302595615386963, 2.3024909496307373, 2.3025407791137695], "val_accuracy": [0.09566666930913925, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.10199999809265137, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 2, 1, 9, 7, 8, 2, 2, 4, 9], [2, 1, 1, 1, 0, 0, 0, 2], [20, 44, 97, 49], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 2, 2, 4, 2, 3, 4, 2, 5, 1, 1, 0, 3, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0], [42, 51, 29, 45, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 0, 1, 0, 1, 0, 32, 18, 14, 2, 3, 1, 2, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.multiply(tf.math.subtract(tf.math.subtract(beta, beta), grad), tf.math.pow(tf.math.subtract(beta, tf.math.multiply(sigma, grad)), tf.math.subtract(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(alpha, alpha)), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303799629211426, 2.30289888381958, 2.3030498027801514, 2.30306077003479, 2.3029775619506836, 2.3029208183288574, 2.3030905723571777, 2.302910566329956, 2.3031044006347656, 2.3029944896698], "accuracy": [0.09615638852119446, 0.09945846349000931, 0.09866596013307571, 0.09457138925790787, 0.09325055778026581, 0.09800554811954498, 0.0936468094587326, 0.09298639744520187, 0.09285431355237961, 0.09721305221319199], "val_loss": [2.3026442527770996, 2.302682638168335, 2.3025777339935303, 2.302605390548706, 2.3025615215301514, 2.302619218826294, 2.302617311477661, 2.3026468753814697, 2.3025875091552734, 2.302609920501709], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 1, 1, 1, 0, 0, 0, 2], [20, 44, 97, 49], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 7, 1, 1, 6, 3, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.subtract(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(alpha, tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [599.3541259765625, 1.03258392065523e+31, 2.3349666595458984, 2.3108131885528564, 2.3048410415649414, 2.303274393081665, 2.303060293197632], "accuracy": [0.21252146363258362, 0.10342095047235489, 0.10011887550354004, 0.10011887550354004, 0.09589222073554993, 0.09694888442754745, 0.09470347315073013], "val_loss": [179681.75, 2.3537728786468506, 2.3153367042541504, 2.305720090866089, 2.30314302444458, 2.3026480674743652, 2.3026700019836426], "val_accuracy": [0.09700000286102295, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419]}}]