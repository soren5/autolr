[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 2, 3, 1, 0, 0, 2], [11, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [1, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.48257142305374146, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.398411273956299, 2.2723541259765625, 2.293182373046875, 2.306013345718384, 2.2844433784484863, 2.6296348571777344, 2.304455280303955, 2.2968051433563232, 2.3041305541992188, 2.3023574352264404], "accuracy": [0.18940694630146027, 0.17633073031902313, 0.2262580841779709, 0.1010434553027153, 0.13076211512088776, 0.2118610441684723, 0.11015717685222626, 0.1402720957994461, 0.09813763201236725, 0.10302469879388809], "val_loss": [2.3021554946899414, 2.1884922981262207, 2.3075056076049805, 2.302736282348633, 1.8437250852584839, 2.3081676959991455, 2.2648966312408447, 2.3039615154266357, 2.302320718765259, 2.2970869541168213], "val_accuracy": [0.11966666579246521, 0.24766667187213898, 0.10199999809265137, 0.10199999809265137, 0.49300000071525574, 0.09799999743700027, 0.19900000095367432, 0.09966666996479034, 0.10300000011920929, 0.13966666162014008]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 4, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.40457141399383545, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.323754072189331, 4.369289875030518, 2.305966377258301, 2.3034451007843018, 2.30285906791687, 2.302903890609741], "accuracy": [0.2211068570613861, 0.1394795924425125, 0.09866596013307571, 0.09774138033390045, 0.10328886657953262, 0.09893012791872025], "val_loss": [1.8718973398208618, 2.3082401752471924, 2.3039958477020264, 2.302936553955078, 2.3025474548339844, 2.302320718765259], "val_accuracy": [0.40700000524520874, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09933333098888397, 0.11666666716337204]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [1, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 1, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 1, 1, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.2240000069141388, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 3, 4, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.233901262283325, 2.421138048171997, 2.4828765392303467, 2.3117847442626953, 2.302783250808716, 2.2120361328125, 2.3069329261779785, 2.3031294345855713, 2.3014988899230957, 2.2752974033355713], "accuracy": [0.20842689275741577, 0.16721701622009277, 0.19231277704238892, 0.09866596013307571, 0.11755382269620895, 0.20763438940048218, 0.09813763201236725, 0.10289261490106583, 0.10540219396352768, 0.13934750854969025], "val_loss": [2.287768602371216, 2.290008544921875, 2.318209409713745, 2.304954767227173, 2.2944400310516357, 2.309663772583008, 2.3033244609832764, 2.3019120693206787, 2.2988665103912354, 2.2640655040740967], "val_accuracy": [0.18266665935516357, 0.1599999964237213, 0.0976666659116745, 0.10100000351667404, 0.22066666185855865, 0.0976666659116745, 0.13699999451637268, 0.12666666507720947, 0.10066666454076767, 0.15466666221618652]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [29, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10285714268684387, "mapping_values": [1, 5, 2, 3, 1, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6966652870178223, 2.4167592525482178, 2.311345100402832, 2.30401349067688, 2.3030784130096436, 2.30285906791687], "accuracy": [0.18650111556053162, 0.151234969496727, 0.09747721254825592, 0.0948355570435524, 0.09642054885625839, 0.10091137140989304], "val_loss": [2.307400941848755, 2.3183298110961914, 2.3037314414978027, 2.302603244781494, 2.302452802658081, 2.3024284839630127], "val_accuracy": [0.10466666519641876, 0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.10133333504199982, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [1, 2, 2, 3, 1, 0, 0, 2], [20, 66], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [29, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 3, 6, 8, 7, 2, 5, 1, 1, 8, 7, 0, 7, 7, 5, 2, 2, 4, 0, 3, 8, 6, 2, 1, 9, 7], [1, 0, 1, 2, 3, 7, 6, 0, 2, 0, 5, 0, 7, 5, 5, 0, 3, 6], [5, 12, 90, 56, 52, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0, 44, 26, 18, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(alpha), beta))), tf.math.add(sigma, grad)))), tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 2, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 5, 6, 1, 7, 2, 5, 5], [5, 0, 1, 3, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 1, 9, 5, 4, 1, 13, 7, 6, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(alpha), sigma), sigma)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [4, 0, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [7, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 3, 6, 1, 1, 2, 5, 1, 6, 9], [1, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 0, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10.444684982299805, 585.5992431640625, 8903.75390625, 63034.12890625, 273106.78125, 893358.6875], "accuracy": [0.09549596905708313, 0.10315678268671036, 0.1026284471154213, 0.10500594228506088, 0.10038304328918457, 0.09998679161071777], "val_loss": [59.57548522949219, 1984.80517578125, 20377.97265625, 109873.640625, 409773.40625, 1206103.625], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [29, 7, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 3, 4, 1, 7, 2, 5, 1, 7, 7, 7], [5, 0, 1, 2, 3, 7, 6, 7, 2, 0, 6], [5, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 1, 22, 11, 11, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(alpha), beta), tf.math.subtract(sigma, tf.math.add(grad, grad)))), grad), tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 0, 2, 3, 1, 0, 0, 2], [11, 66], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 4, 5, 1, 4, 4, 6, 4, 5, 6, 2, 2, 1, 2, 8, 7, 5, 2, 5, 6, 9, 3, 3, 3, 1, 9, 5, 6, 5, 6, 9, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 3, 3, 2, 3, 3, 3, 0, 5, 1, 4, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [76, 7, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 9, 2, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 5, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 4, 2, 2, 1, 7, 4, 3, 1, 16, 8, 8, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]