[{"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 3, 1, 6, 5, 9, 4, 7, 5, 1, 8, 2, 2, 1, 8, 4, 7, 5, 2, 5, 7, 9, 3, 3, 3, 1, 9, 5, 6, 7], [3, 2, 3, 3, 4, 5, 1], [34, 99, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3942857086658478, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.434506416320801, 2.3011200428009033, 2.286958932876587, 2.303450584411621, 2.247774124145508, 2.263800859451294, 2.261803388595581, 2.308269500732422, 2.3053956031799316, 2.3033549785614014], "accuracy": [0.19521859288215637, 0.12296922504901886, 0.14080041646957397, 0.1002509593963623, 0.17553824186325073, 0.21820102632045746, 0.19204860925674438, 0.09430722147226334, 0.09615638852119446, 0.10077928751707077], "val_loss": [2.3041810989379883, 2.282952070236206, 2.3039302825927734, 2.300213098526001, 2.058457612991333, 2.2691144943237305, 2.316016912460327, 2.303405523300171, 2.3027822971343994, 2.3026232719421387], "val_accuracy": [0.10133333504199982, 0.19900000095367432, 0.10333333164453506, 0.1223333328962326, 0.38600000739097595, 0.15266667306423187, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10333333164453506]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [5, 5, 3, 1, 6, 0, 9, 4, 7, 5, 2, 2, 2, 2, 1, 1, 4, 8, 5, 2, 5, 8, 9, 3, 9], [2, 4, 3, 3, 4, 5, 3, 5, 2, 0, 1, 4, 1, 1, 3, 3, 3, 3], [34, 99, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.32028570771217346, "mapping_values": [1, 1, 0, 1, 0, 10, 7, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.multiply(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3515403270721436, 2.380642890930176, 2.286999464035034, 2.1874823570251465, 2.326793670654297, 2.3051397800445557, 2.303162097930908, 2.303267002105713, 2.3031787872314453], "accuracy": [0.21265354752540588, 0.20420023798942566, 0.22586184740066528, 0.1748778223991394, 0.13274335861206055, 0.09893012791872025, 0.09959053993225098, 0.09906221181154251, 0.09774138033390045], "val_loss": [2.2516446113586426, 2.3152551651000977, 2.3168070316314697, 2.201064348220825, 2.3037784099578857, 2.302705764770508, 2.3026392459869385, 2.302649736404419, 2.3026864528656006], "val_accuracy": [0.3073333203792572, 0.13500000536441803, 0.10000000149011612, 0.31700000166893005, 0.10133333504199982, 0.10133333504199982, 0.10233332961797714, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 6, 5, 9, 4, 7, 5, 1, 8, 2, 2, 8, 8, 4, 7, 5, 2, 5, 8, 9, 1, 2, 3, 1, 9, 2, 6, 7], [2, 1, 3, 0, 4, 5, 3, 5, 2, 0, 1, 4, 1, 1, 3, 3, 2, 3], [85, 99, 45, 75, 78, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.25371429324150085, "mapping_values": [1, 1, 0, 1, 0, 21, 13, 8, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.square(tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, grad))), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.571218252182007, 2.2407288551330566, 2.7724485397338867, 2.3046085834503174, 2.3033745288848877, 2.3031020164489746, 2.303257703781128], "accuracy": [0.1912561058998108, 0.1764628142118454, 0.14278165996074677, 0.09959053993225098, 0.09747721254825592, 0.10210011899471283, 0.09206181764602661], "val_loss": [2.3028883934020996, 1.9890068769454956, 2.3064537048339844, 2.303236961364746, 2.30314040184021, 2.3027217388153076, 2.3026247024536133], "val_accuracy": [0.12533333897590637, 0.2486666738986969, 0.09566666930913925, 0.09933333098888397, 0.0989999994635582, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [9, 0, 7, 1, 9, 5, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [34, 99, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [2, 64]], "fitness": -0.10971428453922272, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3486135005950928, 2.6221187114715576, 2.305372476577759, 2.3700685501098633, 2.362673759460449, 2.306403636932373, 2.303779363632202], "accuracy": [0.18953903019428253, 0.17263241112232208, 0.09985470771789551, 0.14476291835308075, 0.10236428678035736, 0.09787346422672272, 0.09813763201236725], "val_loss": [2.2958977222442627, 2.3075554370880127, 2.299931049346924, 2.6509435176849365, 2.306129217147827, 2.3029112815856934, 2.3026351928710938], "val_accuracy": [0.10199999809265137, 0.10999999940395355, 0.10199999809265137, 0.0989999994635582, 0.09733333438634872, 0.09933333098888397, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [9, 0, 7, 1, 9, 5, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 4, 3, 0, 4, 5, 3, 5, 2, 0, 1, 4, 1, 1, 3, 3, 3, 3], [32, 99, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [309.664306640625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1842557191848755, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21722416.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [7, 5, 3, 1, 6, 0, 9, 4, 7, 5, 2, 8, 2, 2, 1, 0, 4, 7, 5, 2, 5, 7, 9, 3], [2, 2, 3, 3, 4, 5, 1], [34, 99, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 2, 1, 7, 4, 5, 9, 4], [7, 0, 3, 7, 3, 7, 6, 2, 2, 0], [4, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 9, 7, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(sigma, tf.math.add(tf.math.pow(grad, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(grad, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [9, 0, 7, 1, 9, 5, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 3, 3, 4, 5, 1], [34, 99, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [7, 9, 6, 1, 7, 2, 5, 1, 3, 4, 6, 6, 9, 8, 8, 0], [7, 3, 1, 7, 3, 7, 6, 0, 2, 0], [36, 41, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 25, 16, 9, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(sigma, tf.math.square(alpha)), grad), tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(sigma, grad), tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.negative(beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [7, 5, 3, 1, 6, 0, 9, 0, 7, 5, 2, 8, 2, 2, 1, 0, 4, 7, 5, 2, 5, 7, 9, 3], [3, 2, 3, 3, 3, 5, 1], [31, 93, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 4, 6, 0, 2, 0], [62, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 15, 10, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), tf.math.add(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [3, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [9, 0, 7, 1, 9, 5, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 3, 3, 4, 5, 1], [34, 99, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 0, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 0, 5, 7, 2, 3, 1], [56, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [8.397323608398438, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20552106201648712, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [110.8563003540039, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [7, 6, 2, 1, 6, 0, 9, 4, 7, 5, 2, 8, 2, 6, 1, 0, 4, 7, 5, 2, 5, 7, 9, 3], [2, 4, 3, 0, 4, 3, 4, 3, 2, 3, 1, 4, 1, 1], [31, 93, 45, 75, 64, 8, 75], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 19, 11, 8, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(grad, tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.6583244800567627, 2.6266329288482666, 2.3069841861724854, 2.303912878036499, 2.3034827709198, 2.3034565448760986, 2.302387237548828, 2.3015527725219727], "accuracy": [0.24356095492839813, 0.09919429570436478, 0.10051512718200684, 0.10487385839223862, 0.10051512718200684, 0.09470347315073013, 0.1002509593963623, 0.11068551242351532], "val_loss": [4.382205963134766, 2.308255672454834, 2.304150342941284, 2.3028244972229004, 2.3025472164154053, 2.3025429248809814, 2.3019707202911377, 2.2991392612457275], "val_accuracy": [0.0976666659116745, 0.09833333641290665, 0.10266666859388351, 0.10066666454076767, 0.10133333504199982, 0.10266666859388351, 0.0976666659116745, 0.10266666859388351]}}]