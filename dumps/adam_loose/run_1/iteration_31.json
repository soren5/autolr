[{"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 2, 2, 8, 2, 0, 4], [1, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 0, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [78, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4929325580596924, 2.2821130752563477, 2.239035129547119, 2.1324195861816406, 2.2778983116149902, 2.2385716438293457, 1.7084487676620483, 1.5597496032714844, 1.2185325622558594, 1.0692261457443237, 0.9457438588142395, 0.9044351577758789, 0.8193776607513428, 0.8356696963310242, 0.7549117207527161, 0.7087949514389038, 0.7353333234786987, 0.7189306616783142, 0.6622710227966309, 0.6394810676574707, 0.6533514261245728, 0.6133356094360352, 0.6858541965484619, 0.6230628490447998, 0.5994260907173157, 0.5777454376220703, 0.5737558603286743], "accuracy": [0.19442610442638397, 0.16563200950622559, 0.16761326789855957, 0.23656055331230164, 0.17421740293502808, 0.2071060687303543, 0.4065513014793396, 0.4842160940170288, 0.6022982597351074, 0.6415268778800964, 0.6601505875587463, 0.674679696559906, 0.7021529674530029, 0.6950204968452454, 0.7185312509536743, 0.7338528633117676, 0.7314753532409668, 0.7276449799537659, 0.7508915662765503, 0.7613261342048645, 0.7534011602401733, 0.7692511081695557, 0.7430986762046814, 0.761590301990509, 0.7724210619926453, 0.7828556299209595, 0.7808743715286255], "val_loss": [2.300861358642578, 2.3175041675567627, 2.2444775104522705, 2.1021289825439453, 2.0721211433410645, 2.2176449298858643, 1.3643866777420044, 1.3587135076522827, 1.0702251195907593, 0.9969714879989624, 0.675386369228363, 0.718172013759613, 0.8204575777053833, 0.6871788501739502, 0.6530834436416626, 0.7546703219413757, 0.6280310750007629, 0.6134815216064453, 0.5669915080070496, 0.5590484738349915, 0.5272293090820312, 0.5217170715332031, 0.5858805179595947, 0.5708648562431335, 0.5295684933662415, 0.5352044105529785, 0.5206918716430664], "val_accuracy": [0.0976666659116745, 0.10633333027362823, 0.14433333277702332, 0.3959999978542328, 0.28833332657814026, 0.20866666734218597, 0.5619999766349792, 0.6273333430290222, 0.6396666765213013, 0.6423333287239075, 0.7506666779518127, 0.7260000109672546, 0.6850000023841858, 0.7393333315849304, 0.7706666588783264, 0.6673333048820496, 0.7609999775886536, 0.7509999871253967, 0.7903333306312561, 0.7789999842643738, 0.8003333210945129, 0.8113333582878113, 0.7933333516120911, 0.7829999923706055, 0.7983333468437195, 0.7960000038146973, 0.8043333292007446]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 4, 2, 2, 8, 2, 0, 9, 3, 5, 8, 8, 2, 2, 1, 1], [1, 2, 0, 3, 4, 5, 0], [89, 30, 87], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.5077142715454102, "mapping_values": [1, 4, 3, 1, 1, 17, 11, 6, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), tf.math.square(grad)))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.313584566116333, 2.384373188018799, 2.304335117340088, 2.2756900787353516, 2.2901129722595215, 2.2313196659088135, 2.2049474716186523, 2.178262948989868, 2.097414970397949, 1.98994779586792, 2.3161418437957764, 2.3092105388641357, 2.305893898010254, 2.306133985519409], "accuracy": [0.19495442509651184, 0.15493330359458923, 0.09840179979801178, 0.15070664882659912, 0.1954827606678009, 0.16642451286315918, 0.19984149932861328, 0.2405230551958084, 0.28358209133148193, 0.33562275767326355, 0.18623696267604828, 0.09549596905708313, 0.10091137140989304, 0.09192973375320435], "val_loss": [2.2743303775787354, 2.3059945106506348, 2.298767328262329, 2.061532735824585, 2.290982484817505, 2.2940163612365723, 2.1817071437835693, 2.2825775146484375, 1.4090371131896973, 2.300252676010132, 2.307610511779785, 2.303189516067505, 2.3050124645233154, 2.3029253482818604], "val_accuracy": [0.09966666996479034, 0.10233332961797714, 0.16866666078567505, 0.25, 0.13466666638851166, 0.1456666737794876, 0.19166666269302368, 0.15733332931995392, 0.5136666893959045, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 3, 7, 5, 8, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [68, 32, 46, 75, 64, 8, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.48485714197158813, "mapping_values": [1, 4, 3, 1, 2, 24, 15, 9, 6, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.sqrt(grad))))))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.1818549633026123, 2.2468130588531494, 2.136654853820801, 2.408015012741089, 2.3039517402648926, 2.3032326698303223, 2.303209066390991, 2.303335189819336], "accuracy": [0.2032756507396698, 0.1640470176935196, 0.24435345828533173, 0.1332716941833496, 0.09457138925790787, 0.09945846349000931, 0.09800554811954498, 0.09879804402589798], "val_loss": [2.305786609649658, 2.216359853744507, 2.026378870010376, 2.3037984371185303, 2.3029818534851074, 2.302752733230591, 2.3028371334075928, 2.302644968032837], "val_accuracy": [0.09933333098888397, 0.18266665935516357, 0.4803333282470703, 0.1003333330154419, 0.1003333330154419, 0.09666666388511658, 0.09666666388511658, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 7, 2, 9, 8, 5, 0, 3, 7, 5, 8, 8, 2, 2, 1, 1], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [53, 32, 40, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 3, 5, 0, 8, 2, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [97, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.4065714180469513, "mapping_values": [1, 4, 3, 1, 1, 14, 9, 5, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.42225980758667, 2.1761648654937744, 2.314389705657959, 2.235989570617676, 2.3041746616363525, 2.2895989418029785, 2.3048505783081055, 2.3034863471984863], "accuracy": [0.19270901381969452, 0.18742570281028748, 0.13313961029052734, 0.22295601665973663, 0.10513802617788315, 0.1838594675064087, 0.09932637959718704, 0.09417514503002167], "val_loss": [2.222100257873535, 2.3974251747131348, 2.0569615364074707, 2.3150429725646973, 2.228795289993286, 2.3065478801727295, 2.302884101867676, 2.3026933670043945], "val_accuracy": [0.14266666769981384, 0.10199999809265137, 0.40033334493637085, 0.10466666519641876, 0.27000001072883606, 0.10066666454076767, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [51, 66], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 3, 2, 2, 8, 2, 0, 7, 2, 6, 5, 9, 0, 2, 9, 1], [0, 0, 0, 3, 0, 2, 4, 2, 5], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3182857036590576, "mapping_values": [1, 4, 3, 1, 1, 23, 15, 8, 6, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.425765037536621, 2.8616559505462646, 2.313422441482544, 2.3046443462371826, 2.303187131881714, 2.303138256072998], "accuracy": [0.2226918488740921, 0.19521859288215637, 0.09998679161071777, 0.09866596013307571, 0.09655263274908066, 0.09470347315073013], "val_loss": [1.930911660194397, 2.3253862857818604, 2.3048348426818848, 2.3026506900787354, 2.3024253845214844, 2.302570104598999], "val_accuracy": [0.328000009059906, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10266666859388351, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 2, 2, 8, 2, 0, 4, 1, 6], [4, 2, 5, 3, 4, 5, 1, 1, 4], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2628571391105652, "mapping_values": [1, 2, 1, 1, 0, 13, 7, 6, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(grad, beta), grad), grad), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2428386211395264, 2.3387951850891113, 2.2327072620391846, 3.4619977474212646, 2.307682514190674, 2.3038742542266846], "accuracy": [0.21437062323093414, 0.12851670384407043, 0.1702549159526825, 0.13961167633533478, 0.09628847241401672, 0.09826971590518951], "val_loss": [2.218557596206665, 2.2984511852264404, 2.268673896789551, 2.3122851848602295, 2.3044943809509277, 2.303173065185547], "val_accuracy": [0.26733332872390747, 0.09700000286102295, 0.20366667211055756, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 2, 2, 8, 2, 0, 0, 9, 6, 6], [1, 1, 0, 3, 4, 5, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 0, 0, 5, 7, 2, 3, 1], [97, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [72, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 13, 7, 6, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [2, 2, 2, 4, 8, 4, 7, 2, 7, 0, 0, 5, 2, 9], [4, 2, 1, 3, 4, 5, 1, 1, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 3, 5, 0, 8, 2, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [97, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 23, 14, 9, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.sqrt(tf.math.pow(beta, tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), grad)))), tf.math.negative(alpha)), alpha), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 2, 2, 8, 2, 0, 0, 9, 6, 6], [3, 0, 3, 3, 0, 2, 4, 3, 0, 1, 3, 1], [68, 85, 87, 96, 65], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 14, 9, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.negative(grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 8, 2, 4, 8, 4, 7, 2, 8, 0], [4, 3, 5, 3, 1, 5, 1, 1], [68, 6], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 3, 5, 0, 8, 2, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [26, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 15, 8, 7, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.pow(grad, grad), tf.math.sqrt(grad))), tf.math.pow(tf.math.add(tf.math.add(grad, alpha), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3400.049072265625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1884823739528656, 0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9775566848.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]