[{"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.48742857575416565, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.466266393661499, 2.278925657272339, 2.363050699234009, 2.3164865970611572, 2.247711658477783, 2.263442039489746, 2.024306297302246, 1.8998607397079468, 1.8407219648361206, 2.1239333152770996, 3.4979255199432373, 2.9372899532318115], "accuracy": [0.1896711140871048, 0.14634791016578674, 0.1554616242647171, 0.10791176557540894, 0.17897239327430725, 0.15097081661224365, 0.33284902572631836, 0.38343679904937744, 0.39849424362182617, 0.34539690613746643, 0.2005019187927246, 0.09826971590518951], "val_loss": [2.275493621826172, 2.0764811038970947, 2.3698997497558594, 2.296973943710327, 2.304809331893921, 1.9993642568588257, 1.5921788215637207, 1.5617514848709106, 1.8173673152923584, 2.126905679702759, 5.960742950439453, 2.3079545497894287], "val_accuracy": [0.10400000214576721, 0.23999999463558197, 0.09866666793823242, 0.1456666737794876, 0.10633333027362823, 0.3486666679382324, 0.4886666536331177, 0.4819999933242798, 0.37933334708213806, 0.210999995470047, 0.10100000351667404, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 6, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [5, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.25771427154541016, "mapping_values": [1, 8, 4, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.263845682144165, 2.404080867767334, 2.340381145477295, 2.304100751876831, 2.3032610416412354, 2.303105592727661, 2.3031105995178223], "accuracy": [0.2164839506149292, 0.14489498734474182, 0.13353586196899414, 0.09602430462837219, 0.09509972482919693, 0.09959053993225098, 0.09628847241401672], "val_loss": [2.7214930057525635, 2.1777350902557373, 2.3045146465301514, 2.3029422760009766, 2.3026845455169678, 2.3026187419891357, 2.302642345428467], "val_accuracy": [0.17266666889190674, 0.25033333897590637, 0.10300000011920929, 0.10599999874830246, 0.10300000011920929, 0.09966666996479034, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 6, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.19142857193946838, "mapping_values": [1, 2, 1, 1, 0, 3, 1, 2, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6645946502685547, 2.3052821159362793, 2.3032002449035645, 2.301923990249634, 2.2420971393585205, 2.354733943939209, 2.303622007369995, 2.3031909465789795, 2.303010940551758, 2.302391767501831], "accuracy": [0.19521859288215637, 0.09655263274908066, 0.09932637959718704, 0.10130762308835983, 0.14634791016578674, 0.10896842926740646, 0.1010434553027153, 0.09047681838274002, 0.09232597798109055, 0.10077928751707077], "val_loss": [2.307983636856079, 2.303257942199707, 2.3027079105377197, 2.2879555225372314, 2.459108352661133, 2.3043298721313477, 2.302902936935425, 2.302769422531128, 2.3025479316711426, 2.298619031906128], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.18033333122730255, 0.19099999964237213, 0.09533333033323288, 0.09933333098888397, 0.09533333033323288, 0.1003333330154419, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [63, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 0, 5, 2, 3, 1, 1, 0, 1, 0, 11, 5, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(grad, beta), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), sigma), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [95, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 6, 3, 3, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.add(beta, beta)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3221049308776855, 173.3500518798828, 10347.8828125, 38017.859375, 86700.359375, 161544.859375], "accuracy": [0.09774138033390045, 0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.870438814163208, 3507.557373046875, 23769.23828125, 62271.1796875, 125398.9140625, 220847.578125], "val_accuracy": [0.10000000149011612, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [11, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [55, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [4659479.5, 13042450432000.0, 7652.22509765625, 21357.814453125, 45792.58203125, 84053.4921875], "accuracy": [0.11213842034339905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [501.6609191894531, 4170.08935546875, 14134.7041015625, 33773.953125, 66271.2109375, 115386.3125], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [82, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 8, 6, 1, 1, 4, 5, 2], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [20, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304218292236328, 2.302973985671997, 2.3029191493988037, 2.3030452728271484, 2.3029422760009766, 2.3029286861419678], "accuracy": [0.09576013684272766, 0.09338264167308807, 0.09311848133802414, 0.09787346422672272, 0.09694888442754745, 0.09536388516426086], "val_loss": [2.302680730819702, 2.3027148246765137, 2.3028297424316406, 2.3027093410491943, 2.302604913711548, 2.302625894546509], "val_accuracy": [0.10166666656732559, 0.09799999743700027, 0.0976666659116745, 0.09799999743700027, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [6, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [57, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 11, 5, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(alpha, grad), tf.math.add(sigma, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12059172987937927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.948836326599121, Infinity, 2.3277134895324707, 2.307549238204956, 2.303838014602661, 2.3031015396118164, 2.302879810333252], "accuracy": [0.20301149785518646, 0.10249637067317963, 0.09576013684272766, 0.09919429570436478, 0.0956280529499054, 0.10117553919553757, 0.09615638852119446], "val_loss": [80.00672912597656, 2.345585823059082, 2.3101706504821777, 2.303776264190674, 2.302563428878784, 2.3025412559509277, 2.302578926086426], "val_accuracy": [0.05000000074505806, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10100000351667404, 0.10166666656732559, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 7, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [20, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 14, 7, 7, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(grad, tf.math.add(tf.math.add(sigma, tf.math.square(grad)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]