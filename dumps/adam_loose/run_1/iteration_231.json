[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [4, 4, 2, 1, 0, 3, 0, 1, 3, 5, 2, 0, 1, 3, 1, 3, 0, 3, 2, 3, 1, 2, 5, 5, 2, 0, 3, 3, 0, 5, 0, 0, 3, 3, 1, 1, 3, 0, 3, 5, 4], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 9, 1, 1, 6, 2, 0, 1, 1, 6, 1, 3, 1, 2, 6, 3, 8, 3, 8, 8, 5, 6, 2, 3, 2, 6, 2, 4, 4, 0, 7, 2, 2, 7, 9, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 2, 2, 7, 2, 3, 1, 2, 5, 1, 1, 0, 3, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 6, 1, 7, 9, 5, 9, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2848571538925171, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.270289182662964, 2.3091275691986084, 2.292874813079834, 2.305476427078247, 2.216623544692993, 2.301844835281372], "accuracy": [0.22678641974925995, 0.1912561058998108, 0.12442214041948318, 0.109232597053051, 0.17884030938148499, 0.10711926966905594], "val_loss": [2.045657157897949, 2.308659553527832, 2.173795461654663, 2.294328212738037, 2.3055880069732666, 2.2708821296691895], "val_accuracy": [0.29766666889190674, 0.10166666656732559, 0.27533334493637085, 0.1706666648387909, 0.10133333504199982, 0.17033334076404572]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 5, 8, 6, 9, 7, 8, 0, 1, 4, 9], [0, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 8, 5, 1, 4, 6, 6, 0, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [3, 4, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 5, 6, 6, 0, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 1, 8, 5, 4, 1, 3, 2, 9, 2, 4, 4, 0, 4, 1, 8, 0, 1, 8, 6, 0, 7, 7, 9, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 1, 2, 3, 1, 2, 3, 1, 1, 4, 4, 7, 7, 3, 2, 2, 4, 2, 4, 0, 4, 2, 1, 3, 2, 4, 5, 3], [78, 51, 27, 82, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.27971428632736206, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 0, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.subtract(tf.math.sqrt(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(grad, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, grad), tf.math.negative(grad)))), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3596997261047363, 5.711055755615234, 2.313042163848877, 2.305091381072998, 2.3033175468444824, 2.3032970428466797], "accuracy": [0.22322018444538116, 0.15110288560390472, 0.09893012791872025, 0.09800554811954498, 0.09787346422672272, 0.09325055778026581], "val_loss": [1.8976516723632812, 2.3217504024505615, 2.3064465522766113, 2.3034231662750244, 2.3028228282928467, 2.302804946899414], "val_accuracy": [0.2853333353996277, 0.09933333098888397, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2645714282989502, "mapping_values": [1, 9, 7, 2, 1, 1, 0, 1, 1, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.305976152420044, 2.808807611465454, 2.2965505123138428, 2.389674425125122, 2.351423501968384, 2.304823398590088], "accuracy": [0.19918107986450195, 0.16853784024715424, 0.17751948535442352, 0.11227050423622131, 0.1302337795495987, 0.09919429570436478], "val_loss": [2.1925971508026123, 2.209784507751465, 2.536614179611206, 2.28462553024292, 2.3050992488861084, 2.3028736114501953], "val_accuracy": [0.26600000262260437, 0.20499999821186066, 0.1263333261013031, 0.22733333706855774, 0.10166666656732559, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 8, 8, 6, 9, 7, 8, 2, 2, 4, 9], [2, 0, 1, 1, 0, 0, 0, 2], [20, 23, 97, 49], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 4, 1, 6, 2, 0, 1, 1, 6, 1, 3, 1, 5, 2, 3, 8, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 4, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 4, 2, 2, 5, 1, 4, 2, 4, 7, 7, 2, 0, 7, 2, 4, 7, 6, 4, 4, 4, 4, 4, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.26171427965164185, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 1, 36, 20, 16, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, beta), tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.negative(grad)), tf.math.subtract(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(beta, beta)), tf.math.multiply(grad, tf.math.subtract(tf.math.square(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.math.multiply(tf.math.sqrt(grad), beta)), tf.math.sqrt(grad))), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.321253776550293, 2.2673771381378174, 2.1773204803466797, 2.7180638313293457, 2.306993007659912, 2.3033833503723145], "accuracy": [0.18478403985500336, 0.14978206157684326, 0.21397437155246735, 0.13961167633533478, 0.1002509593963623, 0.09945846349000931], "val_loss": [2.236935615539551, 2.220973014831543, 2.3273613452911377, 2.3089559078216553, 2.302325963973999, 2.2973852157592773], "val_accuracy": [0.2606666684150696, 0.1733333319425583, 0.218666672706604, 0.0989999994635582, 0.109333336353302, 0.19466666877269745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 5, 5, 0, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97, 88], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [3, 4, 2, 1, 0, 3, 0, 1, 3, 5, 2, 0, 1, 3, 1, 3, 0, 3, 2, 3, 1, 2, 5, 5, 2, 0, 3, 3, 0, 5, 0, 0, 3, 3, 1, 1, 3, 0, 3, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 2, 1, 1, 5, 1, 2, 1, 2, 9, 3, 9, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 6, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 8, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 4, 4, 7, 4, 3, 0, 3, 5, 1, 4, 7, 4, 7, 7, 2, 0, 7, 2, 4, 7, 6, 5, 6, 4, 7, 0, 3, 2, 0], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2582857012748718, "mapping_values": [1, 8, 6, 2, 1, 2, 1, 1, 0, 26, 15, 11, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.square(tf.math.negative(tf.math.square(grad)))), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(grad)))), sigma), tf.math.subtract(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.377573251724243, 2.2934744358062744, 2.323101282119751, 2.416177988052368, 2.3033063411712646, 2.303375720977783, 2.302964448928833, 2.3029379844665527], "accuracy": [0.19521859288215637, 0.2005019187927246, 0.18214239180088043, 0.11147800832986832, 0.10011887550354004, 0.09747721254825592, 0.10091137140989304, 0.09800554811954498], "val_loss": [2.220271587371826, 2.2697339057922363, 2.6080658435821533, 2.303443670272827, 2.3027560710906982, 2.3030264377593994, 2.302649974822998, 2.3028206825256348], "val_accuracy": [0.24633333086967468, 0.2083333283662796, 0.2603333294391632, 0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.10000000149011612, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [3, 4, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 42, 12, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 5, 9, 6, 6, 2, 9, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 1, 8, 5, 4, 1, 3, 2, 9, 2, 4, 4, 0, 4, 1, 8, 0, 1, 8, 6, 0, 7, 7, 9, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 4, 5, 7, 2, 3, 1, 4, 5, 1, 2, 5, 4, 3, 5, 7, 5, 0, 2, 1, 4, 7, 2, 4, 6, 4, 6, 0, 3, 2], [78, 51, 27, 82, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.1997142881155014, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 0, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(grad, tf.math.subtract(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.449268341064453, 2.331066131591797, 2.6716160774230957, 2.304619312286377, 2.3017122745513916, 2.29744553565979], "accuracy": [0.20023775100708008, 0.1628582775592804, 0.17474573850631714, 0.09747721254825592, 0.09668471664190292, 0.09853387624025345], "val_loss": [2.2718024253845215, 2.3069100379943848, 2.3048415184020996, 2.30157208442688, 2.2985899448394775, 2.288374423980713], "val_accuracy": [0.19966666400432587, 0.10899999737739563, 0.0976666659116745, 0.09333333373069763, 0.10366666316986084, 0.16500000655651093]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 5, 5, 0, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 7, 5, 3, 6, 2, 3, 1, 1, 5, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 1, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 2, 0, 7, 2, 4, 7, 6, 5, 6, 4, 4, 4, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.16828571259975433, "mapping_values": [1, 1, 1, 0, 1, 83, 52, 31, 10, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad), beta), tf.math.subtract(tf.math.square(alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta), grad))), tf.math.square(tf.math.sqrt(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha)), tf.math.subtract(grad, tf.math.multiply(grad, alpha)))))), beta))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), grad))), grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.352151870727539, 2.280994176864624, 2.414139747619629, 2.3201956748962402, 2.304612874984741, 2.3032376766204834], "accuracy": [0.18597279489040375, 0.1670849323272705, 0.18570862710475922, 0.10170386731624603, 0.09998679161071777, 0.09576013684272766], "val_loss": [2.296008825302124, 2.299990653991699, 2.392390727996826, 2.304823398590088, 2.3029208183288574, 2.3026740550994873], "val_accuracy": [0.17166666686534882, 0.10233332961797714, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [9, 5, 5, 0, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [68, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 1, 1, 2, 5, 5, 4, 6, 6, 9, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 3, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [82, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 5, 5, 3, 6, 2, 0, 1, 4, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 2, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 4, 0, 7, 7, 4, 2, 5, 0, 2, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [42, 51, 81, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.898747682571411, 2.3082656860351562, 2.3031420707702637, 2.3030784130096436, 2.3031375408172607, 2.3031365871429443, 2.303086757659912, 2.3031108379364014, 2.3028199672698975, 2.303039073944092, 2.302891492843628], "accuracy": [0.17580240964889526, 0.09721305221319199, 0.09721305221319199, 0.09298639744520187, 0.09272222965955734, 0.09576013684272766, 0.0956280529499054, 0.09430722147226334, 0.09945846349000931, 0.09298639744520187, 0.09734513610601425], "val_loss": [2.3157496452331543, 2.303175687789917, 2.30271315574646, 2.302600145339966, 2.3026609420776367, 2.3024680614471436, 2.302579402923584, 2.3026962280273438, 2.3030130863189697, 2.302340269088745, 2.30253005027771], "val_accuracy": [0.09933333098888397, 0.0989999994635582, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10433333367109299, 0.09733333438634872, 0.09966666996479034, 0.10000000149011612, 0.10199999809265137, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 8, 0, 8, 6, 9, 7, 8, 2, 2, 4, 9], [2, 0, 1, 1, 0, 0, 0, 2], [20, 23, 97, 49, 73], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 1, 6, 5, 5, 4, 6, 6, 9, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 42, 12, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 7, 1, 3, 6, 2, 3, 1, 1, 5, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 3, 8, 6, 0, 7, 7, 4, 1, 2, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 4, 3, 4, 2, 5, 1, 4, 4, 4, 7, 7, 2, 0, 7, 2, 4, 7, 2, 5, 6, 4, 4, 3, 3, 2, 1, 6, 6, 7, 0], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 5, 3, 1, 2, 0, 82, 47, 35, 3, 1, 0, 1, 0], "tree_depth": 51, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(tf.math.subtract(grad, tf.math.multiply(tf.math.subtract(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.pow(grad, beta)))), grad), tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.pow(grad, tf.math.negative(tf.math.add(tf.math.add(grad, grad), tf.math.sqrt(grad)))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(beta, grad))), tf.math.negative(tf.math.add(grad, beta))), tf.math.add(tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(grad, tf.math.negative(grad))), sigma))))), sigma), tf.math.negative(beta)))))))), alpha), tf.math.multiply(grad, tf.math.square(grad))), grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6738998889923096, 2.736654758453369, 33.16990661621094, 2.318953514099121, 2.3069159984588623, 2.303593635559082, 2.303152561187744], "accuracy": [0.20499274134635925, 0.15295206010341644, 0.10051512718200684, 0.09853387624025345, 0.0956280529499054, 0.09721305221319199, 0.09668471664190292], "val_loss": [2.3049111366271973, 29.463916778564453, 2.32853627204895, 2.309574842453003, 2.303776979446411, 2.3028948307037354, 2.302675724029541], "val_accuracy": [0.0989999994635582, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [9, 5, 5, 0, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [4, 4, 2, 1, 0, 3, 0, 1, 3, 5, 2, 0, 1, 3, 1, 3, 0, 3, 2, 3, 1, 2, 5, 5, 2, 0, 3, 3, 0, 5, 0, 0, 3, 3, 1, 1, 3, 0, 3, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 1, 1, 6, 2, 0, 1, 1, 6, 1, 3, 1, 5, 6, 3, 8, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 3, 5, 1, 2, 5, 4, 3, 5, 7, 5, 0, 2, 1, 4, 7, 2, 4, 6, 4, 6, 0, 3, 2], [78, 51, 27, 82, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036739826202393, 2.303050994873047, 2.3029375076293945, 2.30298113822937, 2.3030405044555664, 2.30310320854187, 2.302964210510254, 2.30307674407959], "accuracy": [0.09536388516426086, 0.0956280529499054, 0.09536388516426086, 0.09272222965955734, 0.09245806187391281, 0.09642054885625839, 0.09866596013307571, 0.09021265059709549], "val_loss": [2.3025412559509277, 2.302584648132324, 2.302635669708252, 2.302734136581421, 2.302760362625122, 2.302659749984741, 2.302666187286377, 2.3026013374328613], "val_accuracy": [0.09933333098888397, 0.0989999994635582, 0.10166666656732559, 0.09966666996479034, 0.0976666659116745, 0.09799999743700027, 0.09700000286102295, 0.0976666659116745]}}]