[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 8, 0, 3, 3, 4, 6, 8, 4, 5, 2, 0, 6, 8, 0, 5, 5, 5, 6, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 1, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [3, 3, 0, 3, 2, 0, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [2, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.42485713958740234, "mapping_values": [1, 2, 1, 1, 0, 39, 26, 13, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(grad, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)))), tf.math.sqrt(alpha)))))), tf.math.negative(tf.math.square(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.square(beta), grad)))))), tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5081703662872314, 2.232646942138672, 2.2393996715545654, 2.2249529361724854, 2.220517158508301, 3.3480098247528076, 2.306210517883301], "accuracy": [0.19336943328380585, 0.1666886806488037, 0.14317791163921356, 0.17804782092571259, 0.15057456493377686, 0.14159291982650757, 0.09998679161071777], "val_loss": [2.2994377613067627, 1.6791679859161377, 2.2602946758270264, 2.2925920486450195, 2.231459379196167, 2.308779239654541, 2.304086923599243], "val_accuracy": [0.08033332973718643, 0.40799999237060547, 0.13566666841506958, 0.09966666996479034, 0.2396666705608368, 0.10133333504199982, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [37, 66], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 3, 6, 6, 4, 9, 2, 8, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 1, 0, 2, 1, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [49, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3479999899864197, "mapping_values": [1, 4, 3, 1, 1, 23, 13, 10, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.subtract(beta, alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(alpha, beta)), tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.357043981552124, 2.34417462348938, 2.309213161468506, 2.3085999488830566, 2.3033668994903564, 2.2948105335235596, 2.3380625247955322, 2.3047056198120117, 2.303598642349243, 2.303328514099121, 2.283841848373413], "accuracy": [0.2156914472579956, 0.13551710546016693, 0.20618148148059845, 0.09893012791872025, 0.09866596013307571, 0.13313961029052734, 0.1418570876121521, 0.09694888442754745, 0.0940430611371994, 0.09628847241401672, 0.14291374385356903], "val_loss": [2.5554141998291016, 2.14951229095459, 2.3134219646453857, 2.303603410720825, 2.301427125930786, 2.1311137676239014, 2.3061792850494385, 2.302734851837158, 2.302461862564087, 2.3017020225524902, 2.1885690689086914], "val_accuracy": [0.12833333015441895, 0.2966666519641876, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.35333332419395447, 0.0963333323597908, 0.10166666656732559, 0.10166666656732559, 0.10366666316986084, 0.2953333258628845]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 6, 0, 0, 1, 4, 2, 6, 4, 6, 2, 0, 6, 8, 2, 8, 9, 5, 9, 5, 6, 4, 5, 6, 2, 3, 9, 0, 6, 5, 3, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 9, 0, 9, 6, 7, 3], [4, 3, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [6, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2831428647041321, "mapping_values": [1, 5, 2, 3, 0, 11, 6, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.316676616668701, 2.286224365234375, 11.769885063171387, 2.327822685241699, 2.3040854930877686, 2.3030049800872803, 2.3029513359069824], "accuracy": [0.19244486093521118, 0.19601109623908997, 0.17738740146160126, 0.09668471664190292, 0.09470347315073013, 0.09813763201236725, 0.09998679161071777], "val_loss": [2.2150275707244873, 2.1503801345825195, 2.292647361755371, 2.3044614791870117, 2.3029940128326416, 2.3028013706207275, 2.3027079105377197], "val_accuracy": [0.2783333361148834, 0.2980000078678131, 0.09600000083446503, 0.09700000286102295, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 8, 0, 3, 3, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 5, 5, 5, 3, 5, 5, 4, 5, 9, 2, 3, 4, 0, 6, 5, 6, 8, 5, 3, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [2, 1, 0, 2, 3, 3, 3, 2, 2, 5, 3, 3, 3, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75, 30], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2777142822742462, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.324782609939575, 2.9495129585266113, 2.3153975009918213, 2.3070099353790283, 2.3047451972961426, 2.3037269115448], "accuracy": [0.20420023798942566, 0.1748778223991394, 0.09800554811954498, 0.10236428678035736, 0.09774138033390045, 0.09866596013307571], "val_loss": [2.276154041290283, 2.3228743076324463, 2.3067803382873535, 2.303649425506592, 2.30370831489563, 2.3027780055999756], "val_accuracy": [0.2696666717529297, 0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [4, 3, 0, 3, 2, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 3, 0, 0, 2, 5, 2, 5, 1, 3, 3, 0, 3], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.24857142567634583, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9243991374969482, 2.323969602584839, 2.303746223449707, 2.303133249282837, 2.303121328353882, 2.3028502464294434], "accuracy": [0.19376568496227264, 0.1570466309785843, 0.09998679161071777, 0.09496764093637466, 0.09576013684272766, 0.10632677376270294], "val_loss": [2.217069625854492, 2.3040266036987305, 2.3028340339660645, 2.302668333053589, 2.302623987197876, 2.302584648132324], "val_accuracy": [0.24433332681655884, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [3, 6, 4, 1, 3, 1, 4, 6, 6, 4, 2, 2, 0, 0, 1, 2, 2, 5, 5, 6, 0, 6, 4, 5, 9, 2, 3, 9, 5, 6, 5, 6, 0, 5, 0, 0, 6, 5, 5, 2, 6, 8, 1, 2, 1, 9, 9, 7, 3, 8, 4, 3], [4, 3, 3, 3, 2, 3, 3, 1, 1, 5, 0, 0, 1, 2, 2, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 2, 3, 5, 0, 3], [54, 16, 45, 75, 65, 8, 75, 30], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.22685714066028595, "mapping_values": [1, 5, 2, 3, 0, 11, 5, 6, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.subtract(tf.math.multiply(grad, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3512868881225586, 2.3153493404388428, 2.3760581016540527, 2.693629026412964, 2.3050243854522705, 2.3038413524627686, 2.3030872344970703], "accuracy": [0.19693566858768463, 0.11332716792821884, 0.19138818979263306, 0.10170386731624603, 0.10038304328918457, 0.0952318087220192, 0.09760929644107819], "val_loss": [2.2597947120666504, 2.299410104751587, 4.502537250518799, 2.3061611652374268, 2.303440809249878, 2.3027307987213135, 2.3026185035705566], "val_accuracy": [0.17933332920074463, 0.2303333282470703, 0.10266666859388351, 0.10199999809265137, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 8, 8, 0, 3, 3, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 5, 5, 5, 3, 5, 6, 5, 5, 9, 2, 3, 9, 0, 6, 5, 4, 8, 5, 0, 0, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [2, 1, 0, 1, 2, 3, 3, 2, 2, 5, 2, 2, 3, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3], [66, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 39, 26, 13, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.multiply(beta, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(beta, tf.math.square(grad))), tf.math.add(tf.math.negative(grad), beta)))))), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.square(tf.math.square(tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))))))), grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.432924509048462, 2.308818817138672, 2.3041810989379883, 2.3032007217407227, 2.302926778793335, 2.302896499633789], "accuracy": [0.18623696267604828, 0.09800554811954498, 0.09879804402589798, 0.09668471664190292, 0.09787346422672272, 0.09760929644107819], "val_loss": [2.314648151397705, 2.305528402328491, 2.303431987762451, 2.3029277324676514, 2.3030338287353516, 2.3026628494262695], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09733333438634872, 0.09533333033323288]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 6, 1, 3, 1, 4, 6, 6, 5, 2, 2, 0, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 3, 2, 3, 9, 0, 6, 5, 1, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3, 8, 4, 3], [3, 3, 0, 3, 2, 0, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 2, 5, 3, 0], [66, 17, 45, 75, 79, 8, 75, 20], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 6, 6, 1, 4, 1, 4, 6, 6, 8, 2, 2, 0, 0, 8, 8, 2, 5, 5, 2, 0, 4, 2, 5, 9, 1, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 8, 1, 9, 6, 7, 3, 2, 4, 3], [3, 3, 0, 2, 2, 3, 3, 1, 1, 5, 2, 0, 2, 2, 4, 3, 3, 4, 2, 5, 1, 5, 2, 5, 2, 0, 3, 5, 0, 5], [17, 16, 45, 46, 65, 8, 75, 81], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 76, 50, 26, 6, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.negative(grad)), alpha))), tf.math.negative(alpha))), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.pow(tf.math.add(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.negative(beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.square(grad)))))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.sqrt(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.add(grad, beta))))))))), grad))))), beta), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.78937029838562, 2.30898118019104, 2.3043341636657715, 2.303251028060913, 2.3029332160949707, 2.302992820739746], "accuracy": [0.18055738508701324, 0.09998679161071777, 0.09298639744520187, 0.0956280529499054, 0.09893012791872025, 0.09047681838274002], "val_loss": [2.3145530223846436, 2.305480480194092, 2.3034160137176514, 2.302921772003174, 2.3026299476623535, 2.302597999572754], "val_accuracy": [0.10199999809265137, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 5, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 5, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 2, 8, 5, 0, 2, 3, 8, 5, 2, 6, 8, 8, 4, 1, 9, 6, 7, 1, 0], [3, 3, 1, 3, 2, 0, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.08914285898208618, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3093957901000977, 2.308762788772583, 2.308110237121582, 2.30936861038208, 2.3090503215789795, 2.308440923690796], "accuracy": [0.09338264167308807, 0.09206181764602661, 0.09708096832036972, 0.0948355570435524, 0.09602430462837219, 0.09391097724437714], "val_loss": [2.3090317249298096, 2.3090317249298096, 2.3090317249298096, 2.3090317249298096, 2.3090317249298096, 2.3090317249298096], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]