[{"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5, 4, 5, 2, 9, 3, 1], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.44685715436935425, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 23, 16, 7, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))))))), tf.math.subtract(beta, sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4363961219787598, 2.4660229682922363, 2.3046720027923584, 2.301060199737549, 2.1697964668273926, 2.35625958442688, 2.302929401397705, 2.288163900375366, 2.3050241470336914, 2.3029892444610596], "accuracy": [0.2032756507396698, 0.10566636174917221, 0.1006472036242485, 0.10962884873151779, 0.2222955971956253, 0.1294412910938263, 0.10117553919553757, 0.14000792801380157, 0.09747721254825592, 0.10659094154834747], "val_loss": [3.031906843185425, 2.3049652576446533, 2.3024137020111084, 2.291023015975952, 1.5410996675491333, 2.303192138671875, 2.293181896209717, 2.3064956665039062, 2.3032333850860596, 2.3029134273529053], "val_accuracy": [0.0989999994635582, 0.10100000351667404, 0.10133333504199982, 0.18066667020320892, 0.4726666808128357, 0.10100000351667404, 0.17133332788944244, 0.0976666659116745, 0.0976666659116745, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [89, 30, 87, 88, 37], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 7, 3], [5, 5, 7, 5, 7, 2, 3, 1, 4], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2857142984867096, "mapping_values": [1, 4, 2, 2, 1, 7, 4, 3, 2, 25, 16, 9, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(beta, sigma)), alpha)))))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.439012289047241, 2.5299270153045654, 2.263244152069092, 2.292463541030884, 2.279202461242676, 2.278797149658203], "accuracy": [0.19653943181037903, 0.14621582627296448, 0.13815876841545105, 0.11517632752656937, 0.13089419901371002, 0.13313961029052734], "val_loss": [2.035607099533081, 2.3021652698516846, 2.0143051147460938, 2.303103446960449, 2.115556240081787, 2.3041176795959473], "val_accuracy": [0.28866666555404663, 0.10066666454076767, 0.2540000081062317, 0.10066666454076767, 0.19699999690055847, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 68, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.21199999749660492, "mapping_values": [1, 4, 2, 2, 0, 5, 2, 3, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.586082696914673, 2.188683032989502, 2.312798500061035, 2.3401079177856445, 2.2781169414520264, 4.636654376983643, 2.3060290813446045, 2.3040854930877686, 2.303473711013794, 2.303196907043457], "accuracy": [0.19574692845344543, 0.18319904804229736, 0.14621582627296448, 0.14661207795143127, 0.2164839506149292, 0.12323339283466339, 0.09708096832036972, 0.09219389408826828, 0.09747721254825592, 0.09628847241401672], "val_loss": [2.2870514392852783, 2.3026223182678223, 2.2894084453582764, 2.312554359436035, 3.790135145187378, 2.3062283992767334, 2.303473711013794, 2.3029279708862305, 2.3027501106262207, 2.302671432495117], "val_accuracy": [0.09933333098888397, 0.10266666859388351, 0.09966666996479034, 0.1003333330154419, 0.21699999272823334, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [95, 57]], "fitness": -0.14828571677207947, "mapping_values": [1, 2, 1, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.445214033126831, 2.229031562805176, 2.3206210136413574, 2.3082258701324463, 2.2547523975372314, 2.3057260513305664], "accuracy": [0.18280279636383057, 0.20182274281978607, 0.1608770340681076, 0.10302469879388809, 0.15678246319293976, 0.09760929644107819], "val_loss": [2.293741226196289, 2.301680326461792, 2.3180723190307617, 2.2959868907928467, 2.3074960708618164, 2.303218364715576], "val_accuracy": [0.14433333277702332, 0.13500000536441803, 0.10233332961797714, 0.10199999809265137, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 2, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [68, 50, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.11457142978906631, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2908875942230225, 2.631861925125122, 3.0335874557495117, 3.6036722660064697, 4.384354591369629, 5.911571025848389], "accuracy": [0.18082155287265778, 0.1368379294872284, 0.12957337498664856, 0.11055342853069305, 0.09549596905708313, 0.08585391938686371], "val_loss": [2.4215035438537598, 2.7833495140075684, 3.2253313064575195, 3.81717848777771, 4.7881693840026855, 6.67807149887085], "val_accuracy": [0.11999999731779099, 0.0963333323597908, 0.07533333450555801, 0.08799999952316284, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 7, 1, 3, 8, 0], [2, 3, 0, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [4, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8, 7], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [63, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 1, 5, 2, 3, 1, 1, 0, 1, 0, 17, 9, 8, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(grad, beta), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha), grad), tf.math.sqrt(sigma))), tf.math.add(grad, grad)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 6, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 7, 3, 7, 6, 0, 2, 0], [80, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [28, 56, 29], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 1, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [13, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(grad, tf.math.subtract(tf.math.add(sigma, tf.math.square(grad)), tf.math.subtract(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [15, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 0, 0, 3, 0, 2, 4, 3, 0, 1, 3, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5, 7, 7, 9, 6, 2, 1, 2, 6, 5, 9], [1, 5, 7, 5, 7, 2, 3, 1, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [2, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 3, 1, 2, 1, 29, 20, 9, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(grad, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.subtract(beta, sigma))))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036887645721436, 3.019350051879883, 27.73389434814453, 107.96957397460938, 246.04959106445312, 442.08624267578125], "accuracy": [0.10421344637870789, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3218765258789062, 9.10120964050293, 65.4912338256836, 179.44970703125, 350.767333984375, 579.3486938476562], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 6, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [5, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]