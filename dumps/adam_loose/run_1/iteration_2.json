[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 5, 2, 7, 7], [0, 0, 3, 0, 3, 0], [39, 39, 91, 82], [1], [0, 3, 9, 9], [0, 2, 0, 3], [31], [0, 1], [0], [0], [59], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 9, 6, 8, 1, 4, 1, 4, 2, 0], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [86, 92, 1, 7, 46, 35]], "fitness": -0.8377143144607544, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5516417026519775, 2.1917426586151123, 2.1885697841644287, 1.7220536470413208, 1.9688506126403809, 1.3931269645690918, 1.128786325454712, 0.8448205590248108, 0.7750082015991211, 0.751093864440918, 0.6989920735359192, 0.6854756474494934, 0.6568750739097595, 0.6270552277565002, 0.5941407084465027, 0.6169061064720154, 0.5754920840263367, 0.5733440518379211, 0.5358330011367798, 0.5569922924041748, 0.5298343896865845, 0.5153839588165283, 0.4962861239910126, 0.4910098612308502, 0.4880509674549103, 0.47249099612236023, 0.47111043334007263, 0.45962783694267273, 0.44288861751556396, 0.4422977566719055, 0.44250619411468506], "accuracy": [0.2673358917236328, 0.22401267290115356, 0.2619204819202423, 0.42491084337234497, 0.3403777480125427, 0.4991414546966553, 0.5892220139503479, 0.6857746839523315, 0.7073041796684265, 0.722229540348053, 0.7333245277404785, 0.7416457533836365, 0.7547219395637512, 0.7688548564910889, 0.7790252566337585, 0.7648923397064209, 0.7827235460281372, 0.785101056098938, 0.7994980812072754, 0.793422281742096, 0.8021397590637207, 0.8079513907432556, 0.8157442808151245, 0.8191784620285034, 0.8214238286018372, 0.8259146809577942, 0.829216718673706, 0.8278959393501282, 0.8370096683502197, 0.8364813327789307, 0.8338396549224854], "val_loss": [2.0216758251190186, 2.2686283588409424, 2.0064120292663574, 1.5733802318572998, 1.4145289659500122, 0.9747084975242615, 0.7392653822898865, 0.6783803701400757, 0.7443339824676514, 0.6236696839332581, 0.5862740874290466, 0.5691521167755127, 0.5651735663414001, 0.5562002658843994, 0.5499138236045837, 0.5389412641525269, 0.5479771494865417, 0.4892443120479584, 0.5118649005889893, 0.5168172121047974, 0.4796079993247986, 0.5191639065742493, 0.4567980468273163, 0.5261815786361694, 0.4662235379219055, 0.43721097707748413, 0.43582016229629517, 0.43364056944847107, 0.4362887442111969, 0.46473461389541626, 0.4398517310619354], "val_accuracy": [0.27133333683013916, 0.10999999940395355, 0.45100000500679016, 0.4959999918937683, 0.47866666316986084, 0.6200000047683716, 0.7139999866485596, 0.7203333377838135, 0.7053333520889282, 0.7553333044052124, 0.7699999809265137, 0.777999997138977, 0.7876666784286499, 0.7896666526794434, 0.7663333415985107, 0.7860000133514404, 0.778333306312561, 0.8096666932106018, 0.7916666865348816, 0.8023333549499512, 0.8149999976158142, 0.7940000295639038, 0.8203333616256714, 0.7860000133514404, 0.8226666450500488, 0.840666651725769, 0.8373333215713501, 0.8370000123977661, 0.8330000042915344, 0.8270000219345093, 0.8306666612625122]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 0, 9, 3, 8, 0], [2, 3, 2, 3], [76], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [8, 4, 7, 2, 0, 6, 6, 0, 5, 9, 4, 6, 6, 7, 4, 8, 6, 6, 1, 7, 4, 7, 2, 3, 5, 2, 1, 8, 8, 8, 8, 7, 0, 4, 4, 7, 5, 8, 5], [1, 3, 2, 5, 3, 4, 3, 3, 5, 5, 1, 5, 2, 4, 5, 3, 4, 1, 3, 5, 3, 0, 2, 4, 4, 5, 0], [55, 99, 68], [1], [0], [2], [62], [1, 1, 0, 0, 1, 0, 0, 1, 1], [8], [5, 7, 3, 5], []], "fitness": -0.4251428544521332, "mapping_values": [1, 8, 6, 2, 1, 21, 13, 8, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad), beta)), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.491907835006714, 2.2974066734313965, 2.2682759761810303, 2.4832825660705566, 2.308917999267578, 2.2375290393829346, 2.2438347339630127], "accuracy": [0.17500990629196167, 0.12759213149547577, 0.23444722592830658, 0.1516312211751938, 0.10315678268671036, 0.18082155287265778, 0.20340773463249207], "val_loss": [2.3026275634765625, 2.2052223682403564, 2.3045992851257324, 2.3127074241638184, 2.3002779483795166, 2.2641613483428955, 2.3088314533233643], "val_accuracy": [0.10499999672174454, 0.4176666736602783, 0.17100000381469727, 0.09966666996479034, 0.1003333330154419, 0.16866666078567505, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 6, 1, 2, 7, 7], [0, 0, 3, 0, 3, 0, 3], [88, 39, 91, 82], [1], [], [0, 2, 0, 3], [66], [0, 1], [0], [1], [59], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8], [3, 4, 0, 3, 0, 3, 3, 4, 2, 0], [86, 92, 1, 7, 46, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 6, 7, 4, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [8608.5146484375, 5.224983215332031, 11.744527816772461, 21.635631561279297, 36.16013717651367, 59.29164505004883, 91.10577392578125, 131.75717163085938, 215.5856170654297, 388.7157897949219, 480.0534973144531, 639.0596313476562, 919.9033813476562], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09800554811954498, 0.09721305221319199, 0.10276053100824356, 0.09787346422672272, 0.09747721254825592, 0.09549596905708313, 0.09813763201236725, 0.09998679161071777, 0.09945846349000931, 0.09959053993225098, 0.09998679161071777], "val_loss": [3.4911296367645264, 8.548834800720215, 17.24092674255371, 29.219432830810547, 47.95808792114258, 78.21355438232422, 114.52452087402344, 170.1198272705078, 313.9562072753906, 469.84637451171875, 523.4996337890625, 819.343505859375, 1024.0831298828125], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.09866666793823242, 0.09666666388511658, 0.10233332961797714, 0.1003333330154419, 0.0963333323597908, 0.10466666519641876, 0.1003333330154419, 0.1003333330154419, 0.09666666388511658, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [68], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 9, 9], [1], [16, 16], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 5, 8, 6, 5, 3, 3, 5], [2, 3, 5, 7], [], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 9, 6, 8, 1, 4, 1, 4, 2, 0], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [31, 51, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 4, 0, 2, 12, 8, 4, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(beta, tf.math.multiply(sigma, grad))), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [661.2762451171875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16193369030952454, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17250.162109375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [3, 9, 3, 0, 9, 7, 1], [0, 3, 2, 3, 0], [45, 97], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 9], [5, 3, 4], [99], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 7, 3, 5, 3, 6, 0, 8, 7, 6, 3, 7, 0], [7, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 7, 3, 1, 2, 1, 1, 1, 22, 13, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(sigma), alpha)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1], [0, 2, 3, 0, 3], [3, 1, 0, 2], [35], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 9, 9, 7, 8], [1], [16, 16], [1], [0], [3], [], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 6, 7, 7, 3, 4, 4, 0, 3, 0], [31, 51, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 3, 3, 0, 2, 1, 0, 1, 0, 17, 9, 8, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, grad))), tf.math.subtract(sigma, tf.math.pow(grad, grad)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1], [3], [3, 0], [], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 9, 9], [0, 0, 4, 1], [73, 94, 9], [1], [0], [2], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 1, 2, 2, 6, 2, 0, 6], [30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 4, 0, 2, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, alpha)", "other_info": {"loss": [601223069696.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0069850608416825e+24, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 2, 5, 2, 7, 7], [2, 2, 2, 3, 0, 0], [39, 39, 91, 82], [0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 6, 9], [5, 5, 0, 1, 0], [63, 57], [1], [0], [1], [62], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8], [3, 4, 0, 3, 0, 3, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.add(grad, grad)), tf.math.add(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [569432512.0, 11.220925331115723, 28.811059951782227, 101.27175903320312, 233.63462829589844, 364.1777648925781, 797.3887329101562, 1276.1824951171875], "accuracy": [0.09747721254825592, 0.09721305221319199, 0.10170386731624603, 0.09576013684272766, 0.09972262382507324, 0.1006472036242485, 0.09998679161071777, 0.1002509593963623], "val_loss": [6.498225688934326, 17.05392074584961, 66.04501342773438, 184.11529541015625, 277.4883728027344, 534.0225830078125, 1138.2532958984375, 1639.0228271484375], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404]}}, {"genotype": [[0], [1], [3], [3, 0], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [3, 0, 4, 3, 0, 1, 9], [0, 2, 4, 0], [73, 94, 9], [1], [], [6], [61], [1], [], [5], [30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.2478413581848145, 31.48208236694336, 2.3056764602661133, 2.3034486770629883, 2.3029210567474365, 2.30312442779541], "accuracy": [0.18399155139923096, 0.09734513610601425, 0.09628847241401672, 0.09760929644107819, 0.09694888442754745, 0.0948355570435524], "val_loss": [189.58663940429688, 2.3086793422698975, 2.3042891025543213, 2.303115129470825, 2.3026819229125977, 2.3027470111846924], "val_accuracy": [0.10300000011920929, 0.0976666659116745, 0.10100000351667404, 0.09600000083446503, 0.09600000083446503, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 2, 3, 0, 3, 0, 0, 5], [0, 2, 1, 2, 3], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 3, 0, 3], [49, 16], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 2, 3, 8, 1, 4], [0, 3, 2, 7, 1, 4], [99], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 0, 3, 1, 8, 2, 4, 2, 4, 2, 6, 2, 3, 6, 8, 2, 8, 1, 8], [0, 0, 4, 1, 0, 1, 3, 1, 2, 0, 7, 0, 0, 1, 4], [16, 99, 17, 0, 61, 1, 69, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 1, 2, 1, 1, 1, 12, 6, 6, 1, 17, 9, 8, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), tf.math.negative(tf.math.multiply(grad, tf.math.negative(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(beta, grad))), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.pow(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha))))), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]