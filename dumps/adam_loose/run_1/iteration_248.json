[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 7, 4, 5, 1, 0, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.43542855978012085, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(grad, tf.math.pow(tf.math.square(alpha), grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(sigma, beta), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.052457332611084, 2.2347092628479004, 2.2667672634124756, 2.3053500652313232, 2.265697956085205, 2.2412638664245605, 2.830195188522339, 2.306633234024048, 2.303772449493408, 2.303169012069702, 2.3031301498413086], "accuracy": [0.2020869106054306, 0.15334829688072205, 0.1950865089893341, 0.09708096832036972, 0.15229164063930511, 0.18650111556053162, 0.1426495909690857, 0.10157178342342377, 0.10038304328918457, 0.09655263274908066, 0.09417514503002167], "val_loss": [2.3110201358795166, 2.2938270568847656, 2.3089494705200195, 2.299954652786255, 2.3204102516174316, 2.266371011734009, 2.308539390563965, 2.3038523197174072, 2.3029367923736572, 2.3026318550109863, 2.3026516437530518], "val_accuracy": [0.09133332967758179, 0.10366666316986084, 0.09866666793823242, 0.10700000077486038, 0.09300000220537186, 0.42633333802223206, 0.10300000011920929, 0.10300000011920929, 0.10100000351667404, 0.10300000011920929, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 6, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 2, 0, 5, 1, 5, 6, 6, 1, 1, 1, 3, 6, 2, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 5, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 0, 2, 1, 1, 1, 2, 0, 2, 3, 2, 3, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3700000047683716, "mapping_values": [1, 1, 0, 1, 0, 79, 49, 30, 8, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(alpha, tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.sqrt(alpha)), beta))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), grad), tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(beta), tf.math.add(grad, grad)), grad), grad), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), beta))), tf.math.add(tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(grad, grad)))), tf.math.subtract(alpha, beta)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.multiply(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.157520055770874, 2.2706127166748047, 2.246197462081909, 2.3071208000183105, 2.303948163986206, 2.3033974170684814, 2.3032052516937256], "accuracy": [0.18742570281028748, 0.13881917297840118, 0.19284109771251678, 0.09893012791872025, 0.09945846349000931, 0.09285431355237961, 0.09351472556591034], "val_loss": [2.3099515438079834, 2.0158538818359375, 2.3064324855804443, 2.303619146347046, 2.3030221462249756, 2.302647113800049, 2.3025598526000977], "val_accuracy": [0.10400000214576721, 0.3643333315849304, 0.1003333330154419, 0.10100000351667404, 0.09566666930913925, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 6, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 6, 2, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 3, 0, 3, 4, 3, 0, 1, 2, 5, 4, 1, 0, 4, 6, 0, 0, 7, 2, 0, 4, 3, 0, 6, 2, 0, 0, 4, 1, 4, 5, 1, 1], [74, 42, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.36800000071525574, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 7, 4, 3, 3, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.422929048538208, 2.240940809249878, 2.331169843673706, 2.2995550632476807, 2.2110438346862793, 2.3088181018829346, 2.303661346435547, 2.300731897354126, 2.2748396396636963], "accuracy": [0.2067098170518875, 0.1888786107301712, 0.09285431355237961, 0.12812046706676483, 0.23312640190124512, 0.09681680053472519, 0.1010434553027153, 0.107647605240345, 0.16919825971126556], "val_loss": [2.2847278118133545, 2.422645092010498, 2.3034932613372803, 2.274108648300171, 2.320056915283203, 2.303537368774414, 2.3020758628845215, 2.2929818630218506, 2.3080155849456787], "val_accuracy": [0.19066666066646576, 0.09600000083446503, 0.0976666659116745, 0.3683333396911621, 0.0989999994635582, 0.0989999994635582, 0.0976666659116745, 0.2626666724681854, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 6, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 6, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [3, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.35857143998146057, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3129680156707764, 2.2048871517181396, 2.502786636352539, 2.308243989944458, 2.303788185119629, 2.3032000064849854, 2.303020715713501], "accuracy": [0.22995641827583313, 0.1880861222743988, 0.16919825971126556, 0.09272222965955734, 0.09998679161071777, 0.09628847241401672, 0.09470347315073013], "val_loss": [2.257068634033203, 1.9381632804870605, 2.313587188720703, 2.304187059402466, 2.302868604660034, 2.302628517150879, 2.3024649620056152], "val_accuracy": [0.20333333313465118, 0.3700000047683716, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [1, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24457143247127533, "mapping_values": [1, 6, 4, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(sigma, beta), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.261587381362915, 2.281717538833618, 2.239078998565674, 2.305440902709961, 2.153658390045166, 60.25201416015625], "accuracy": [0.20618148148059845, 0.17672698199748993, 0.15968827903270721, 0.11042134463787079, 0.2678642272949219, 0.108440101146698], "val_loss": [2.2297627925872803, 2.303954839706421, 2.326451539993286, 2.2809062004089355, 2.3145205974578857, 2.365432024002075], "val_accuracy": [0.24799999594688416, 0.09866666793823242, 0.1003333330154419, 0.1613333374261856, 0.16433332860469818, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [6, 6, 7, 7, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 6, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 4, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.16200000047683716, "mapping_values": [1, 7, 3, 4, 0, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(grad, alpha)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(sigma, beta), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3647942543029785, 2.310624837875366, 2.3083667755126953, 2.303220510482788, 2.289231061935425, 2.3290188312530518, 2.3042898178100586, 2.3014578819274902, 2.2784197330474854, 2.3064916133880615, 2.303366184234619, 2.303624391555786, 2.302696943283081, 2.3015174865722656, 2.249246597290039, 2.303476572036743, 2.289823055267334, 2.304556369781494], "accuracy": [0.18491612374782562, 0.24078720808029175, 0.09998679161071777, 0.10157178342342377, 0.15136705338954926, 0.1290450394153595, 0.09668471664190292, 0.10830801725387573, 0.16682076454162598, 0.09826971590518951, 0.09747721254825592, 0.09602430462837219, 0.09853387624025345, 0.11676132678985596, 0.17474573850631714, 0.09721305221319199, 0.1822744756937027, 0.09694888442754745], "val_loss": [2.2995376586914062, 2.3141231536865234, 2.304189443588257, 2.300995111465454, 2.2970783710479736, 2.303990602493286, 2.3026397228240967, 2.2968218326568604, 2.3093385696411133, 2.303642749786377, 2.3029353618621826, 2.3025810718536377, 2.301901340484619, 2.294809103012085, 2.303541898727417, 2.2962889671325684, 2.305655002593994, 2.302983522415161], "val_accuracy": [0.09666666388511658, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10266666859388351, 0.09799999743700027, 0.09666666388511658, 0.13300000131130219, 0.10199999809265137, 0.09933333098888397, 0.09666666388511658, 0.10266666859388351, 0.1616666615009308, 0.10733333230018616, 0.10066666454076767, 0.10333333164453506, 0.10199999809265137, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 9, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.11085714399814606, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.square(sigma), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.709099769592285, 2.2385342121124268, 2.291193723678589, 2.3060574531555176, 2.3037939071655273, 2.303043842315674], "accuracy": [0.18570862710475922, 0.16391493380069733, 0.15400871634483337, 0.09734513610601425, 0.09642054885625839, 0.09747721254825592], "val_loss": [2.2946102619171143, 2.305288553237915, 2.3088667392730713, 2.303738832473755, 2.3031368255615234, 2.302726984024048], "val_accuracy": [0.11433333158493042, 0.10233332961797714, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 6, 7, 9, 4, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 2, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(sigma, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9986181259155273, 2.3024895191192627, 2.3504955768585205, 5.9975409507751465, 2.3074445724487305, 2.303964138031006, 2.3031842708587646], "accuracy": [0.1846519559621811, 0.10659094154834747, 0.15717871487140656, 0.09681680053472519, 0.09694888442754745, 0.09457138925790787, 0.10157178342342377], "val_loss": [2.3041088581085205, 2.289973497390747, 28.053245544433594, 2.311688184738159, 2.304696559906006, 2.303189754486084, 2.302952527999878], "val_accuracy": [0.10333333164453506, 0.10700000077486038, 0.10333333164453506, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 6, 7, 9, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 6, 5, 1, 5, 6, 1, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 1, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 1, 3, 3, 3, 1, 1, 1], [29, 15, 80, 75, 17, 70, 82, 92, 89, 48, 89, 74], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 1, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [3, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 85, 53, 32, 9, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(grad), tf.math.subtract(tf.math.square(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.subtract(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.math.square(beta), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(beta, tf.math.divide_no_nan(grad, beta)), tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha)), tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), alpha))), beta)))))), tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad))))), grad), tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha)))), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(alpha, grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2426633834838867, 2.6432595252990723, 2.316709041595459, 2.5406887531280518, 2.253140926361084, 2.30926251411438, 2.303757429122925, 2.3037569522857666], "accuracy": [0.24078720808029175, 0.22282393276691437, 0.10210011899471283, 0.16351869702339172, 0.17738740146160126, 0.09853387624025345, 0.09708096832036972, 0.09813763201236725], "val_loss": [2.300880193710327, 2.3750784397125244, 2.2984673976898193, 2.5494160652160645, 2.3126039505004883, 2.303504228591919, 2.3027572631835938, 2.303016185760498], "val_accuracy": [0.10133333504199982, 0.09799999743700027, 0.10333333164453506, 0.0976666659116745, 0.10166666656732559, 0.10166666656732559, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 7, 0, 5, 1, 0, 7, 8, 2, 2, 4, 9], [3, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [4, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 5, 9, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 3, 4, 3, 4, 3, 0, 1, 2, 5, 4, 1, 0, 4, 6, 0, 0, 7, 2, 0, 4, 3, 0, 6, 2, 0, 0, 4, 1, 4, 5, 1, 1], [42, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.add(grad, tf.math.negative(tf.math.square(alpha)))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.574526786804199, 2.307330846786499, 2.303889274597168, 2.303274631500244, 2.303161859512329, 2.3029959201812744], "accuracy": [0.1974640041589737, 0.09919429570436478, 0.09628847241401672, 0.09470347315073013, 0.10091137140989304, 0.09430722147226334], "val_loss": [2.311899423599243, 2.304556369781494, 2.303205966949463, 2.3028318881988525, 2.302664279937744, 2.30273699760437], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]