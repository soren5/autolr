[{"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.39571428298950195, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.911559820175171, 2.305471420288086, 2.298900604248047, 2.3677563667297363, 2.302002191543579, 2.257715940475464, 2.8081419467926025, 2.3090951442718506, 2.3042032718658447, 2.3031578063964844, 2.302954912185669], "accuracy": [0.20155857503414154, 0.10328886657953262, 0.1258750557899475, 0.12851670384407043, 0.11015717685222626, 0.16470743715763092, 0.16378284990787506, 0.09972262382507324, 0.09998679161071777, 0.09853387624025345, 0.09576013684272766], "val_loss": [2.3073830604553223, 2.3024587631225586, 2.2792201042175293, 2.305605173110962, 2.2786526679992676, 1.7206964492797852, 2.313659429550171, 2.3047678470611572, 2.3027350902557373, 2.3024730682373047, 2.302487850189209], "val_accuracy": [0.0989999994635582, 0.09833333641290665, 0.16766667366027832, 0.09600000083446503, 0.09933333098888397, 0.39633333683013916, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 1, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.28999999165534973, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.6361217498779297, 2.261631488800049, 2.7563674449920654, 2.306508779525757, 2.303880214691162, 2.303734064102173, 2.3032102584838867], "accuracy": [0.19759608805179596, 0.15017831325531006, 0.13895125687122345, 0.09232597798109055, 0.09721305221319199, 0.09932637959718704, 0.09140139818191528], "val_loss": [2.3174805641174316, 2.0664260387420654, 2.3075783252716064, 2.303229808807373, 2.302716016769409, 2.302572011947632, 2.3026273250579834], "val_accuracy": [0.10066666454076767, 0.2836666703224182, 0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [2, 4, 9, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 3, 5, 7, 2, 3, 1], [37, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.22285714745521545, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(beta, beta), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.381255626678467, 2.5678374767303467, 2.3059170246124268, 2.2510955333709717, 2.4076645374298096, 2.303945779800415], "accuracy": [0.19270901381969452, 0.20803064107894897, 0.09945846349000931, 0.15797120332717896, 0.11610091477632523, 0.09879804402589798], "val_loss": [2.2757046222686768, 2.3082568645477295, 2.300184488296509, 2.6918580532073975, 2.3038620948791504, 2.302846670150757], "val_accuracy": [0.22766666114330292, 0.11666666716337204, 0.1003333330154419, 0.1576666682958603, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 2, 2, 3, 1, 0, 0, 2], [79, 66], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 3, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 4, 9, 6, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 1, 7, 5, 7, 2, 3, 1], [61, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1851428598165512, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(beta, alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3590245246887207, 2.2835373878479004, 2.591840982437134, 2.259220600128174, 2.3550024032592773, 2.3043699264526367], "accuracy": [0.21476687490940094, 0.2040681540966034, 0.1010434553027153, 0.15480121970176697, 0.11293092370033264, 0.1002509593963623], "val_loss": [2.774824857711792, 4.082950115203857, 2.3022007942199707, 2.2436602115631104, 2.3050284385681152, 2.303515911102295], "val_accuracy": [0.18766666948795319, 0.10066666454076767, 0.09700000286102295, 0.13899999856948853, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 1, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(beta, tf.math.subtract(tf.math.pow(sigma, tf.math.multiply(grad, grad)), tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [705.0345458984375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1846519559621811, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [555985.0625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 0, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 3, 4, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(alpha, beta), tf.math.divide_no_nan(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.230672359466553, 9156.0498046875, 2.309013843536377, 2.304049253463745, 2.3031721115112305, 2.3031833171844482], "accuracy": [0.16074495017528534, 0.10038304328918457, 0.09853387624025345, 0.09457138925790787, 0.09615638852119446, 0.09760929644107819], "val_loss": [2.368605852127075, 2.312666654586792, 2.304393768310547, 2.3028485774993896, 2.302579641342163, 2.302745819091797], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [45, 66], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 3, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 4, 9, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 3, 5, 7, 2, 3, 1], [37, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1043825856.0, 165184651264.0, 2857456631808.0, 19360844349440.0, 87339007213568.0, 286819425976320.0], "accuracy": [0.09457138925790787, 0.09602430462837219, 0.09747721254825592, 0.09879804402589798, 0.10355303436517715, 0.09496764093637466], "val_loss": [11474430976.0, 618563043328.0, 6639242969088.0, 36195404873728.0, 135573285109760.0, 399932791980032.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [0, 1, 0, 3, 1, 0, 0, 2], [57, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 1, 4, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [11.350963592529297, Infinity, 2.328207492828369, 2.3086531162261963, 2.3040552139282227, 2.303154468536377, 2.303004741668701, 2.302964210510254, 2.3029329776763916], "accuracy": [0.1946902722120285, 0.09298639744520187, 0.09509972482919693, 0.09866596013307571, 0.09457138925790787, 0.09787346422672272, 0.09734513610601425, 0.09628847241401672, 0.09219389408826828], "val_loss": [1208.085205078125, 2.3438992500305176, 2.312692403793335, 2.304647445678711, 2.302884101867676, 2.3025925159454346, 2.302501678466797, 2.302595376968384, 2.3025786876678467], "val_accuracy": [0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10266666859388351, 0.10266666859388351, 0.10000000149011612, 0.10266666859388351, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 3, 9, 3, 8, 0], [2, 1, 0, 3, 1, 0, 0, 2], [57, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 4, 0, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 1, 3, 5, 1, 2, 3, 1], [23, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 7, 3, 7, 6, 0, 2, 0], [65, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 11, 7, 4, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.negative(alpha)), tf.math.sqrt(sigma)), grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 2, 2, 3, 1, 0, 0, 2], [57, 66], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 2, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 2, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 4, 9, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 2, 3, 5, 7, 2, 3, 1], [23, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, beta), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(beta, tf.math.square(tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]