[{"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [7, 7, 9, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [56, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 1, 3, 4, 5, 1], [87, 32, 45, 75, 64, 8, 75], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 6, 4, 5, 1, 0, 2, 6, 5, 1, 8, 1, 3, 6, 3], [2, 4, 4, 5, 7, 2, 3, 1], [7, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.37857142090797424, "mapping_values": [1, 5, 3, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3279600143432617, 2.237962484359741, 2.3216562271118164, 2.2885689735412598, 2.3048009872436523, 2.2969179153442383, 2.2801990509033203, 2.3034095764160156, 2.301693916320801, 2.2857203483581543, 2.2270021438598633, 2.257124662399292, 2.305269241333008, 2.303743362426758, 2.3035240173339844], "accuracy": [0.19402985274791718, 0.17250032722949982, 0.16259410977363586, 0.19191652536392212, 0.09800554811954498, 0.1228371411561966, 0.14529123902320862, 0.1080438494682312, 0.10870426893234253, 0.15255580842494965, 0.2226918488740921, 0.18451987206935883, 0.1018359512090683, 0.0948355570435524, 0.09008057415485382], "val_loss": [2.300170421600342, 2.3046693801879883, 2.3032588958740234, 2.306610107421875, 2.302236557006836, 2.1003968715667725, 2.304415702819824, 2.3021140098571777, 2.2987313270568848, 2.0267059803009033, 2.269411325454712, 2.3069212436676025, 2.303238868713379, 2.3027853965759277, 2.3025875091552734], "val_accuracy": [0.15266667306423187, 0.10199999809265137, 0.16333332657814026, 0.10000000149011612, 0.10000000149011612, 0.3726666569709778, 0.0989999994635582, 0.1536666601896286, 0.14900000393390656, 0.3736666738986969, 0.18133333325386047, 0.0989999994635582, 0.1003333330154419, 0.1003333330154419, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [56, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 1, 3, 4, 5, 1], [65, 43, 45, 75, 64, 8, 75], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 6, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 4, 5, 7, 2, 3, 1], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.30485713481903076, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5495169162750244, 2.265239953994751, 2.532503604888916, 2.2624289989471436, 2.5004687309265137, 2.301788568496704, 2.25032114982605], "accuracy": [0.19653943181037903, 0.14674416184425354, 0.1604807823896408, 0.1442345827817917, 0.12455421686172485, 0.12521463632583618, 0.11966715008020401], "val_loss": [1.932778000831604, 1.9896743297576904, 2.305208683013916, 3.5224976539611816, 2.108785629272461, 2.0604348182678223, 2.303148031234741], "val_accuracy": [0.31433331966400146, 0.3186666667461395, 0.0976666659116745, 0.18000000715255737, 0.1236666664481163, 0.18133333325386047, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [4, 7, 7, 3, 8, 0], [1, 3, 2, 3, 0, 0, 0, 2], [87, 66], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [5, 2, 1, 3, 4, 5, 1], [65, 43, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 6, 4, 5, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 7, 5, 7, 0, 0, 1, 7, 5, 4], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.27799999713897705, "mapping_values": [1, 9, 4, 5, 1, 1, 0, 1, 0, 10, 5, 5, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.multiply(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.pow(alpha, grad), grad), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.409389019012451, 2.3105380535125732, 2.274394989013672, 2.22245454788208, 2.197349786758423, 2.3044724464416504, 2.1806280612945557, 1.9922966957092285], "accuracy": [0.20657773315906525, 0.12613920867443085, 0.1426495909690857, 0.1806894689798355, 0.19759608805179596, 0.12613920867443085, 0.2052568942308426, 0.31197991967201233], "val_loss": [2.233876943588257, 2.300002336502075, 2.0970349311828613, 2.2275850772857666, 2.289870500564575, 2.2948250770568848, 2.214726448059082, 2.2676424980163574], "val_accuracy": [0.21533332765102386, 0.17766666412353516, 0.27799999713897705, 0.22100000083446503, 0.09700000286102295, 0.09933333098888397, 0.2383333295583725, 0.16899999976158142]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [56, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 1, 3, 4, 5, 1], [65, 43, 45, 75, 64, 8, 75], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 6, 4, 0, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 4, 5, 4, 2, 3, 1], [7, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2362857162952423, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.pow(beta, grad), tf.math.negative(tf.math.sqrt(grad))), grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8120055198669434, 2.3041601181030273, 2.254906177520752, 2.305027484893799, 2.303114414215088, 2.3033764362335205], "accuracy": [0.21172896027565002, 0.14515915513038635, 0.15281997621059418, 0.09576013684272766, 0.09972262382507324, 0.09945846349000931], "val_loss": [2.2372982501983643, 2.2998404502868652, 2.30629825592041, 2.303262233734131, 2.3026540279388428, 2.30259108543396], "val_accuracy": [0.2303333282470703, 0.09200000017881393, 0.1003333330154419, 0.09866666793823242, 0.09966666996479034, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 7, 6, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [56, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 3, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 5, 1, 2, 5, 8, 2, 5, 9, 5, 3, 8, 4, 3, 2, 1], [0, 4, 7, 3, 7, 2, 3, 1, 7], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1080000028014183, "mapping_values": [1, 7, 3, 4, 0, 7, 4, 3, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, grad), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.pow(beta, tf.math.add(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.sqrt(grad))))), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7168731689453125, 2.2686927318573, 2.3105218410491943, 2.3043031692504883, 2.303178071975708, 2.303013563156128], "accuracy": [0.1978602558374405, 0.14410249888896942, 0.09813763201236725, 0.09840179979801178, 0.10170386731624603, 0.09338264167308807], "val_loss": [2.307281970977783, 2.319427013397217, 2.306197166442871, 2.303805112838745, 2.3030951023101807, 2.302610397338867], "val_accuracy": [0.10899999737739563, 0.09700000286102295, 0.09533333033323288, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 7, 6, 3, 8, 0], [2, 2, 1, 3, 1, 0, 0, 2], [87, 66], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 5, 5, 4, 5, 8, 2, 5, 9, 5, 3, 8, 4, 3, 2, 1], [0, 4, 7, 5, 7, 2, 3, 1], [92, 54, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [60, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 12, 9, 3, 2, 16, 8, 8, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.multiply(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 2, 3, 3, 1, 0, 0, 2], [84, 66], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [5, 7, 2, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [67, 32, 45, 75, 64, 8, 75], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 2, 6, 4, 5, 1, 0, 2, 6, 5, 1, 8, 1, 3, 6, 3], [1, 4, 7, 5, 7, 2, 3, 1], [7, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.4282281398773193, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19772817194461823, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.385382652282715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0416666679084301, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [56, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [9, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 9, 0, 5, 8, 2, 5, 7, 5, 3, 8, 4, 3, 2, 1], [0, 4, 7, 5, 7, 2, 3, 1, 7], [92, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [20, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.304163694381714, 2.3029539585113525, 2.3031086921691895, 2.3030593395233154, 2.3029191493988037, 2.303020715713501, 2.303030014038086, 2.302945852279663], "accuracy": [0.09166556596755981, 0.09589222073554993, 0.09747721254825592, 0.09668471664190292, 0.0940430611371994, 0.09602430462837219, 0.09972262382507324, 0.09602430462837219], "val_loss": [2.3026437759399414, 2.3025519847869873, 2.3026201725006104, 2.302647829055786, 2.302741050720215, 2.302722692489624, 2.302574634552002, 2.302694082260132], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10233332961797714, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [4, 7, 7, 3, 8, 0], [0, 2, 1, 3, 1, 0, 0, 2], [87, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [5, 2, 1, 3, 4, 5, 1], [34, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 6, 4, 3, 5, 9, 2, 1, 5, 1, 8, 1, 2, 6, 3], [2, 2, 3, 5, 7, 2, 3, 1, 7, 5], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 20, 12, 8, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(beta, beta), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.add(tf.math.subtract(grad, tf.math.square(grad)), tf.math.subtract(beta, tf.math.sqrt(sigma)))), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1445.809814453125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2032756507396698, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [572024.3125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 7, 3, 8, 0], [2, 2, 1, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 2, 3, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 1, 1, 4, 4, 5, 1], [65, 43, 45, 75, 64, 8, 75], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 2, 6, 4, 5, 1, 0, 2, 6, 5, 1, 8, 1, 3, 6, 3], [1, 7, 7, 5, 7, 0, 0, 1, 7, 5, 4], [60, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], [47, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 0, 2, 1, 1, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.add(grad, grad), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]