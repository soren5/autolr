[{"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 3, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 5, 7, 5, 7, 2, 3, 1], [68, 51, 29], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [4, 0, 1, 0, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.40400001406669617, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 11, 6, 5, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.740978956222534, 2.1940879821777344, 2.4143002033233643, 2.213144063949585, 2.7055270671844482, 2.3053972721099854, 2.3035590648651123], "accuracy": [0.19957733154296875, 0.17197199165821075, 0.15995244681835175, 0.1628582775592804, 0.11161009222269058, 0.09166556596755981, 0.09430722147226334], "val_loss": [2.2648468017578125, 1.7701181173324585, 2.3050851821899414, 2.289613962173462, 2.305891275405884, 2.303091287612915, 2.3026301860809326], "val_accuracy": [0.10433333367109299, 0.4050000011920929, 0.10166666656732559, 0.10566666722297668, 0.10166666656732559, 0.10966666787862778, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [6, 5, 5, 0, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3, 7, 2, 9, 6, 2, 9, 0, 9, 6, 2, 1, 2, 6, 2, 4, 0, 6, 3, 8, 9, 2, 5, 2, 0, 2, 9, 8, 2, 6, 0, 3, 4, 5, 6, 3, 0, 7, 5, 8, 9, 9, 8, 0], [4, 1, 4, 5, 7, 0, 3, 1, 2, 0, 3, 4, 4, 0, 3, 4, 5, 0, 0, 0, 6, 2, 6, 3, 0, 4, 1], [68, 51, 29, 56, 49, 74, 12, 93, 85, 26, 0, 70, 70, 76], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3959999978542328, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 86, 59, 27, 14, 1, 0, 1, 0], "tree_depth": 48, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.add(grad, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.math.add(sigma, grad)), grad)))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.square(tf.math.divide_no_nan(grad, beta)), tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.square(sigma))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.negative(alpha))))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3544511795043945, 2.216596841812134, 2.6688053607940674, 2.304717779159546, 2.303151845932007, 2.3033816814422607, 2.3029298782348633], "accuracy": [0.19561484456062317, 0.1842557191848755, 0.19112402200698853, 0.09589222073554993, 0.09509972482919693, 0.09945846349000931, 0.10276053100824356], "val_loss": [2.2265877723693848, 2.0381035804748535, 2.3054428100585938, 2.3028080463409424, 2.3026082515716553, 2.3026745319366455, 2.301954507827759], "val_accuracy": [0.24066667258739471, 0.40166667103767395, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [6, 2, 5, 3, 6, 0, 4, 1, 1, 5, 2, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 90, 98], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3954285681247711, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 25, 14, 11, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(grad), alpha), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.multiply(alpha, grad)), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.add(grad, beta)), tf.math.sqrt(sigma)), alpha)))), tf.math.subtract(beta, tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4307072162628174, 2.233008623123169, 2.356675386428833, 2.302572727203369, 2.284630537033081, 2.3039169311523438, 2.303194522857666], "accuracy": [0.18438778817653656, 0.2016906589269638, 0.12759213149547577, 0.1072513535618782, 0.13815876841545105, 0.10157178342342377, 0.09945846349000931], "val_loss": [2.2859222888946533, 1.7608460187911987, 2.304185390472412, 2.285656213760376, 2.3035993576049805, 2.302677631378174, 2.302647590637207], "val_accuracy": [0.25466665625572205, 0.4026666581630707, 0.09933333098888397, 0.26766666769981384, 0.09966666996479034, 0.09966666996479034, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 5, 3, 6, 8, 8, 1, 0, 5, 4, 4, 6, 2, 6, 3, 3, 5, 8, 3, 8, 0, 7, 7, 5, 9, 0, 1, 0, 6, 8, 8, 1, 8, 9, 2, 5, 5, 8], [1, 5, 7, 5, 7, 4, 3, 4, 4, 4, 5, 1, 5, 0, 3, 6, 4, 7, 0], [68, 51, 29, 2], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.26485714316368103, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 57, 39, 18, 3, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.multiply(alpha, tf.math.divide_no_nan(grad, grad))), tf.math.sqrt(grad)), tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.square(sigma), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.negative(grad)), tf.math.subtract(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.square(tf.math.square(grad)))), tf.math.sqrt(grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.63503885269165, 2.267796277999878, 2.3034896850585938, 2.3030219078063965, 2.303225040435791, 2.3029494285583496], "accuracy": [0.186104878783226, 0.13313961029052734, 0.0956280529499054, 0.1002509593963623, 0.09245806187391281, 0.0952318087220192], "val_loss": [2.1598801612854004, 2.3032116889953613, 2.3029000759124756, 2.3023171424865723, 2.302556037902832, 2.3025689125061035], "val_accuracy": [0.2720000147819519, 0.10233332961797714, 0.09566666930913925, 0.10366666316986084, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 0, 7, 2, 0, 9, 3, 8], [0, 1, 3, 3, 1, 0, 0, 2], [17, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 3, 3, 3, 6, 8, 8, 1, 1, 5, 1, 5, 1, 2, 6, 3], [0, 7, 4, 6, 7, 0, 3, 1, 2, 0, 3], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 9, 6, 1, 7, 1, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [75, 12]], "fitness": -0.26257142424583435, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4926211833953857, 2.1810715198516846, 2.248534917831421, 2.3085286617279053, 2.303680419921875, 2.3033764362335205, 2.3032007217407227], "accuracy": [0.20420023798942566, 0.19310526549816132, 0.20340773463249207, 0.1006472036242485, 0.10315678268671036, 0.08928807079792023, 0.10421344637870789], "val_loss": [2.2043099403381348, 2.2629752159118652, 2.316117286682129, 2.3039886951446533, 2.3026418685913086, 2.3026418685913086, 2.3026139736175537], "val_accuracy": [0.10333333164453506, 0.26100000739097595, 0.10133333504199982, 0.10133333504199982, 0.10300000011920929, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [5, 5, 5, 9, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 0, 4, 4, 4, 0, 3, 1, 2, 0, 3], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.17228572070598602, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.389899253845215, 2.22135066986084, 2.304086685180664, 2.2933974266052246, 2.3043010234832764, 2.3037467002868652, 2.303246021270752, 2.30324387550354], "accuracy": [0.19772817194461823, 0.2036719024181366, 0.107647605240345, 0.16299036145210266, 0.09430722147226334, 0.09826971590518951, 0.09377889335155487, 0.09893012791872025], "val_loss": [2.2939465045928955, 2.309474229812622, 2.2804954051971436, 2.30535888671875, 2.3031461238861084, 2.303030014038086, 2.3027546405792236, 2.302712917327881], "val_accuracy": [0.14366666972637177, 0.10333333164453506, 0.17533333599567413, 0.1003333330154419, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 4, 3, 6, 8, 8, 1, 1, 5, 1, 4, 1, 2, 6, 3, 3, 5, 8, 3, 8, 0, 7, 7, 5, 9, 9, 1, 0, 6, 8, 8, 1, 8, 8, 2, 5, 5], [4, 7, 4, 5, 4, 3, 3, 1, 4, 0, 3, 5, 3, 4, 2, 2, 2, 6, 2], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 5, 9, 1, 6, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 7, 3, 4, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.310681104660034, 2.287116050720215, 2.2841949462890625, 2.322964668273926, 2.3037874698638916, 2.3034050464630127], "accuracy": [0.19970941543579102, 0.15202747285366058, 0.15797120332717896, 0.1014397069811821, 0.09853387624025345, 0.09932637959718704], "val_loss": [2.293987274169922, 2.3045032024383545, 2.3831491470336914, 2.3031485080718994, 2.3030004501342773, 2.302553176879883], "val_accuracy": [0.10899999737739563, 0.09600000083446503, 0.10066666454076767, 0.09966666996479034, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 5, 3, 6, 8, 0, 1, 1, 5, 6, 4, 1, 2, 6, 3, 3, 5, 8, 3, 8, 0, 7, 7, 5, 9, 9, 1, 0, 6, 8, 8, 1, 2, 8, 2, 5, 5], [4, 7, 4, 5, 4, 3, 3, 1, 4, 0, 3, 5, 3, 4, 3, 3, 2, 6, 2], [68, 51, 90, 98], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 42, 26, 16, 2, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(grad), grad), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.negative(grad))), tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.pow(sigma, sigma))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma))), grad)), sigma)), tf.math.sqrt(tf.math.negative(grad)))))), tf.math.add(sigma, tf.math.add(tf.math.square(sigma), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.478666067123413, 2.2797980308532715, 2.3099124431610107, 2.3036839962005615, 2.3033852577209473, 2.3031022548675537], "accuracy": [0.18914277851581573, 0.1504424810409546, 0.09496764093637466, 0.10011887550354004, 0.09351472556591034, 0.09576013684272766], "val_loss": [2.3022871017456055, 2.316741943359375, 2.304011821746826, 2.3029367923736572, 2.3026328086853027, 2.3026368618011475], "val_accuracy": [0.10199999809265137, 0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 4, 5, 3, 6, 1, 2, 1, 1, 5, 1, 8, 1, 2, 6, 3, 1, 3], [4, 0, 4, 4, 4, 0, 3, 1, 2, 0, 3, 4, 6, 2, 6, 4], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 34, 18, 16, 3, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.subtract(grad, tf.math.sqrt(grad))), grad), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(alpha, tf.math.divide_no_nan(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.multiply(sigma, tf.math.subtract(grad, grad))))), beta), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [148.4564971923828, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20512482523918152, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3752.340576171875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 2, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 5, 7, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 5, 9, 1, 6, 2, 5, 1], [2, 0, 1, 0, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(alpha), alpha), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310251235961914, 2.3106746673583984, 2.309713840484619, 2.31107234954834, 2.309223175048828, 2.309476852416992], "accuracy": [0.08651433140039444, 0.09628847241401672, 0.09192973375320435, 0.0886276587843895, 0.0956280529499054, 0.08691058307886124], "val_loss": [2.307558536529541, 2.307558536529541, 2.307558536529541, 2.307558536529541, 2.307558536529541, 2.307558536529541], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]