[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 3, 1, 4, 6, 6, 4, 8, 1, 2, 6, 9, 3, 8, 5, 5, 3, 2, 3, 6, 9, 9, 5, 3, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [3, 0, 3, 3, 1, 3, 3, 1, 1, 3, 2, 0, 1, 2, 3, 3, 0, 4, 3, 5, 1, 5, 5, 2, 3, 2, 3, 0, 2, 5], [42, 15, 80, 75, 65, 8, 75, 92, 32, 83, 74], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3757142722606659, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3086347579956055, 2.5409839153289795, 2.2866978645324707, 2.3254013061523438, 2.3005897998809814, 2.2426741123199463], "accuracy": [0.19442610442638397, 0.1504424810409546, 0.1442345827817917, 0.17078325152397156, 0.1200634017586708, 0.15731078386306763], "val_loss": [2.1125428676605225, 2.28796124458313, 2.224989891052246, 2.31347393989563, 2.071234703063965, 2.304685115814209], "val_accuracy": [0.3733333349227905, 0.18533332645893097, 0.16366666555404663, 0.10066666454076767, 0.2626666724681854, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 1, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 9, 1, 3, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 5, 7, 3, 8, 6, 4, 3, 2, 4, 5, 8, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 4, 2, 1, 1, 3, 3, 1, 1, 2, 2, 0, 1, 3, 4, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [42, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3691428601741791, "mapping_values": [1, 1, 0, 1, 0, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), beta)), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2593913078308105, 2.313274383544922, 2.1890432834625244, 5.552619457244873, 2.3089897632598877, 2.3037726879119873, 2.3031046390533447, 2.3026561737060547], "accuracy": [0.2417117953300476, 0.10698718577623367, 0.2036719024181366, 0.14172500371932983, 0.09959053993225098, 0.09800554811954498, 0.09430722147226334, 0.09853387624025345], "val_loss": [2.3538589477539062, 2.298222780227661, 2.0802979469299316, 2.3129467964172363, 2.304326057434082, 2.302718162536621, 2.302192449569702, 2.302029848098755], "val_accuracy": [0.10266666859388351, 0.10233332961797714, 0.36000001430511475, 0.10100000351667404, 0.10100000351667404, 0.0976666659116745, 0.15199999511241913, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [48, 5, 97], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [2, 4, 1, 0, 5, 1, 4, 6, 6, 4, 1, 1, 2, 6, 1, 3, 8, 5, 5, 2, 5, 8, 3, 6, 9, 2, 3, 5, 6, 2, 5, 4, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 1, 3, 2, 0, 4, 3, 2, 4, 3, 8, 6, 0, 6, 8, 6, 7, 7, 8, 5, 8, 5], [0, 4, 2, 1, 1, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 4, 2, 1, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [30, 15, 80, 75, 65, 8, 75, 92, 63, 86, 5], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.25628572702407837, "mapping_values": [1, 1, 0, 1, 0, 109, 68, 41, 10, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.subtract(beta, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.subtract(alpha, tf.math.multiply(tf.math.sqrt(tf.math.square(grad)), tf.math.square(grad)))), beta), tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), alpha)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.square(grad)), tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), grad)), grad)), grad))), tf.math.pow(beta, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))))), grad), tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)))), grad))))), tf.math.sqrt(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3083925247192383, 2.2469396591186523, 2.234741687774658, 2.304262638092041, 5.880290508270264, 2.3597800731658936, 2.406564950942993, 2.3044955730438232, 2.303128480911255, 2.3027539253234863, 2.3005800247192383], "accuracy": [0.19535067677497864, 0.18293488025665283, 0.20103025436401367, 0.11293092370033264, 0.20274733006954193, 0.1224408894777298, 0.14714039862155914, 0.10157178342342377, 0.10117553919553757, 0.1006472036242485, 0.1208558976650238], "val_loss": [2.300635814666748, 2.382550001144409, 2.313292980194092, 2.258991003036499, 2.7087082862854004, 2.199678659439087, 2.305905342102051, 2.303154468536377, 2.3026914596557617, 2.3016653060913086, 2.3007261753082275], "val_accuracy": [0.12833333015441895, 0.10199999809265137, 0.09966666996479034, 0.234333336353302, 0.09966666996479034, 0.25999999046325684, 0.10000000149011612, 0.10266666859388351, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [0, 2, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 7, 1, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3], [3, 0, 3, 3, 1, 3, 3, 1, 1, 3, 2, 0, 1, 2, 3, 3, 0, 4, 3, 5, 1, 5, 5, 2, 3, 2, 3, 0, 2, 5], [42, 15, 80, 75, 46, 8, 75, 92, 32, 83, 89], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.23971427977085114, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3492977619171143, 2.464517593383789, 2.352818727493286, 2.3062689304351807, 2.3026485443115234, 2.240656614303589, 2.3093414306640625, 2.303427219390869, 2.3032407760620117, 2.3034749031066895], "accuracy": [0.20393607020378113, 0.19865275919437408, 0.16140536963939667, 0.09998679161071777, 0.10434553027153015, 0.19719983637332916, 0.09589222073554993, 0.10315678268671036, 0.0944393053650856, 0.09008057415485382], "val_loss": [2.2815442085266113, 2.360372304916382, 2.3083555698394775, 2.3031458854675293, 2.296290636062622, 2.314645290374756, 2.3044564723968506, 2.3030383586883545, 2.302602529525757, 2.3028030395507812], "val_accuracy": [0.14866666495800018, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.2356666624546051, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.10233332961797714, 0.0949999988079071]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 3, 1, 4, 6, 6, 4, 8, 1, 2, 6, 9, 3, 8, 5, 5, 3, 2, 3, 6, 9, 9, 5, 3, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [1, 0, 3, 3, 1, 3, 3, 1, 1, 3, 2, 0, 1, 2, 3, 3, 0, 4, 3, 5, 1, 5, 5, 2, 3, 2, 3, 0, 2, 5], [42, 15, 80, 75, 46, 8, 75, 92, 32, 83, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.1631428599357605, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4590933322906494, 2.7570464611053467, 2.3063886165618896, 2.2641918659210205, 2.3037962913513184, 2.3035478591918945, 2.3031005859375, 2.3030080795288086], "accuracy": [0.15876370668411255, 0.16034869849681854, 0.09721305221319199, 0.14132875204086304, 0.1026284471154213, 0.09813763201236725, 0.09826971590518951, 0.09655263274908066], "val_loss": [2.302440881729126, 2.3135476112365723, 2.289839744567871, 2.3042426109313965, 2.303243637084961, 2.3027503490448, 2.3025803565979004, 2.3025758266448975], "val_accuracy": [0.10100000351667404, 0.09933333098888397, 0.17100000381469727, 0.09533333033323288, 0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [0, 2, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 7, 1, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3], [2, 4, 2, 5, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [42, 15, 80, 75, 65, 8, 75, 92], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [2, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036811351776123, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 3, 1, 4, 6, 6, 4, 8, 1, 2, 6, 9, 3, 8, 5, 5, 3, 2, 3, 6, 9, 9, 5, 3, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [3, 0, 3, 3, 1, 3, 3, 1, 1, 3, 2, 0, 1, 2, 3, 3, 0, 4, 3, 5, 1, 5, 5, 2, 3, 2, 3, 0, 2, 5], [42, 15, 80, 75, 46, 8, 75, 92, 32, 83, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [0, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033998012542725, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 2, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 3, 1, 4, 6, 6, 4, 8, 1, 2, 6, 9, 3, 8, 5, 5, 3, 2, 3, 6, 9, 9, 5, 3, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [3, 0, 3, 3, 1, 3, 3, 1, 1, 3, 2, 0, 1, 2, 3, 3, 0, 4, 3, 5, 1, 5, 5, 2, 3, 2, 3, 0, 2, 5], [42, 15, 80, 75, 65, 8, 75, 92], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3], [0, 4, 2, 2, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [6, 15, 80, 75, 65, 8, 75, 92, 32, 83, 74], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9, 5], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 21, 12, 9, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.square(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(beta, tf.math.add(sigma, grad)))), grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), beta)", "other_info": {"loss": [4.398669719696045, 8.389531135559082, 64.56465148925781, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09272222965955734, 0.07621186226606369, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.543998718261719, 18.209667205810547, 1141133.625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.0716666653752327, 0.057999998331069946, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [48, 5, 97], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 8, 1, 4, 2, 1, 4, 6, 6, 4, 6, 1, 2, 6, 1, 0, 8, 5, 5, 6, 1, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 2, 5, 0, 1, 6, 8, 8, 5, 6, 2, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 0, 7, 6, 4, 4, 3, 4, 7, 0, 0, 7, 6, 0], [0, 4, 2, 2, 1, 0, 3, 1, 1, 5, 2, 1, 1, 2, 4, 1, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 1, 5, 0, 5, 2, 4, 5, 5, 2, 3, 2, 3, 0, 3, 3], [30, 15, 80, 19, 65, 11, 75, 92, 63, 86, 88], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [4, 12]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 0, 106, 65, 41, 9, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.subtract(beta, tf.math.pow(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.square(grad)))), tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(beta, alpha), tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta))), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)), tf.math.add(grad, tf.math.multiply(grad, grad))))), beta)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)))))))), tf.math.negative(grad)), tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(beta)))))), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(grad, tf.math.negative(tf.math.negative(beta)))), tf.math.add(grad, tf.math.divide_no_nan(beta, grad))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3093667030334473, 2.3085944652557373, 2.3090991973876953, 2.3084452152252197, 2.3086471557617188, 2.3089547157287598], "accuracy": [0.0948355570435524, 0.09694888442754745, 0.09470347315073013, 0.09285431355237961, 0.09615638852119446, 0.09285431355237961], "val_loss": [2.3077666759490967, 2.3076064586639404, 2.3074474334716797, 2.3072867393493652, 2.3071279525756836, 2.30696702003479], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]