[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 2, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [82, 66], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 6, 6, 1, 3, 1, 4, 6, 6, 4, 2, 2, 0, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3, 8, 4, 3], [4, 3, 0, 3, 2, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [54, 16, 45, 75, 65, 8, 75, 30], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.4740000069141388, "mapping_values": [1, 5, 2, 3, 0, 82, 52, 30, 8, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.negative(grad)), alpha), tf.math.negative(alpha)), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.square(tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.square(beta)))), tf.math.negative(grad))))))))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.sqrt(grad)))), grad))), grad)))))), beta))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(grad, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.456559419631958, 2.9557044506073, 2.2918620109558105, 2.302741289138794, 2.3267526626586914, 2.237034797668457], "accuracy": [0.21172896027565002, 0.15598995983600616, 0.14780081808567047, 0.11478008329868317, 0.1620657742023468, 0.17474573850631714], "val_loss": [1.7093894481658936, 2.274277448654175, 2.3050291538238525, 2.2966296672821045, 2.2917652130126953, 2.038008689880371], "val_accuracy": [0.4753333330154419, 0.06733333319425583, 0.10000000149011612, 0.10266666859388351, 0.12566666305065155, 0.3186666667461395]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 6, 0, 0, 1, 4, 2, 6, 4, 6, 2, 0, 6, 8, 2, 8, 9, 5, 9, 5, 6, 4, 5, 6, 2, 3, 9, 0, 6, 5, 3, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 9, 0, 9, 6, 7, 3], [4, 3, 0, 3, 2, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 3, 0, 0, 2, 5, 2, 5, 1, 3, 3, 0, 3], [39, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3822857141494751, "mapping_values": [1, 5, 2, 3, 0, 11, 6, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.242734909057617, 2.4100334644317627, 3.59834361076355, 2.3022401332855225, 2.2304275035858154, 2.3046958446502686, 2.3038980960845947], "accuracy": [0.19601109623908997, 0.13908334076404572, 0.1468762308359146, 0.10989301651716232, 0.17619864642620087, 0.09879804402589798, 0.0952318087220192], "val_loss": [3.0270345211029053, 2.0139384269714355, 2.304856061935425, 2.2490954399108887, 2.30539608001709, 2.303067445755005, 2.3027827739715576], "val_accuracy": [0.09733333438634872, 0.37700000405311584, 0.10066666454076767, 0.13366666436195374, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 5, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 5, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 2, 8, 5, 0, 2, 3, 8, 5, 2, 6, 8, 8, 4, 1, 9, 6, 7, 1, 0], [3, 3, 0, 3, 2, 0, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 1, 2, 0, 3], [66, 17, 45, 75, 79, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3045714199542999, "mapping_values": [1, 2, 1, 1, 0, 74, 50, 24, 6, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(grad)), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))))), tf.math.square(beta)), tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, tf.math.sqrt(beta)))))), tf.math.square(tf.math.add(grad, grad)))), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))), tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.negative(grad)))), grad)))))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.415933847427368, 2.2899081707000732, 2.2796213626861572, 2.520935297012329, 2.3088977336883545, 2.304293632507324, 2.3031811714172363, 2.3028180599212646], "accuracy": [0.21172896027565002, 0.15215955674648285, 0.13472460210323334, 0.2281072586774826, 0.09840179979801178, 0.09866596013307571, 0.09945846349000931, 0.1018359512090683], "val_loss": [2.310957908630371, 2.312591791152954, 2.0632710456848145, 2.313387155532837, 2.3044795989990234, 2.302834987640381, 2.302553176879883, 2.3026161193847656], "val_accuracy": [0.09866666793823242, 0.13600000739097595, 0.3016666769981384, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10233332961797714, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 0, 3, 3, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 5, 5, 5, 3, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 4, 8, 5, 0, 9, 6, 8, 5, 5, 6, 8, 8, 2, 1, 9, 6, 7, 1, 9], [2, 1, 0, 2, 2, 3, 3, 2, 2, 5, 2, 2, 3, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3], [66, 15, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2694285809993744, "mapping_values": [1, 2, 1, 1, 0, 51, 36, 15, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.multiply(beta, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), beta)), tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(grad, grad)))), tf.math.sqrt(beta))), tf.math.add(tf.math.square(tf.math.square(tf.math.square(tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, beta), beta)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.pow(grad, tf.math.sqrt(tf.math.square(beta)))), tf.math.negative(grad))))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2870686054229736, 2.198923110961914, 2.320932626724243, 2.2918198108673096, 2.2525501251220703, 2.30587100982666, 2.303495168685913, 2.3033132553100586, 2.3034043312072754], "accuracy": [0.20618148148059845, 0.18557654321193695, 0.21463479101657867, 0.10989301651716232, 0.16853784024715424, 0.09602430462837219, 0.09932637959718704, 0.09919429570436478, 0.09179764986038208], "val_loss": [2.226010322570801, 2.2898716926574707, 2.3094892501831055, 2.014033079147339, 2.308011293411255, 2.303856372833252, 2.303101062774658, 2.3029942512512207, 2.302748203277588], "val_accuracy": [0.21066667139530182, 0.1836666613817215, 0.10000000149011612, 0.2709999978542328, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 4, 6, 6, 4, 9, 2, 8, 0, 8, 2, 2, 5, 5, 2, 0, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [2, 1, 0, 2, 1, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [49, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2680000066757202, "mapping_values": [1, 5, 3, 2, 1, 23, 13, 10, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.subtract(beta, alpha), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(alpha, beta)), tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.393097162246704, 3.7330236434936523, 2.306795597076416, 2.303569793701172, 2.3031630516052246, 2.30322265625], "accuracy": [0.19957733154296875, 0.20974771678447723, 0.09998679161071777, 0.09787346422672272, 0.09179764986038208, 0.09060890227556229], "val_loss": [2.0891454219818115, 2.3102078437805176, 2.3038835525512695, 2.3028335571289062, 2.3028793334960938, 2.302807569503784], "val_accuracy": [0.27000001072883606, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.09799999743700027, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 0, 7, 0, 3, 3, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 5, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 3, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [66, 17, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.24714285135269165, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [2.3376922607421875, 2.3663692474365234, 2.3041958808898926, 2.296581983566284, 2.141289472579956, 2.489243745803833, 2.1895673274993896, 2.3009796142578125, 2.3003971576690674], "accuracy": [0.20420023798942566, 0.17791573703289032, 0.09774138033390045, 0.12270505726337433, 0.2234843522310257, 0.13010171055793762, 0.17395325005054474, 0.109232597053051, 0.14740456640720367], "val_loss": [2.294745922088623, 2.30491304397583, 2.3012073040008545, 2.2597813606262207, 2.6816961765289307, 2.2179038524627686, 2.3027639389038086, 2.292694330215454, 2.3062167167663574], "val_accuracy": [0.17033334076404572, 0.0989999994635582, 0.13633333146572113, 0.24799999594688416, 0.1289999932050705, 0.16366666555404663, 0.11533333361148834, 0.14766666293144226, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [1, 1, 2, 3, 1, 0, 0, 2], [82, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.2337142825126648, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.42824649810791, 2.2705941200256348, 2.2873454093933105, 2.2973883152008057, 2.3063814640045166, 2.3032803535461426, 2.301208972930908, 2.2638795375823975, 2.304230213165283, 2.3033196926116943, 2.3030078411102295, 2.3033413887023926], "accuracy": [0.19614318013191223, 0.18451987206935883, 0.13868708908557892, 0.18676528334617615, 0.09602430462837219, 0.09536388516426086, 0.10711926966905594, 0.17012283205986023, 0.09509972482919693, 0.1022322028875351, 0.09826971590518951, 0.09589222073554993], "val_loss": [2.216780185699463, 2.278700113296509, 2.2444655895233154, 2.3082211017608643, 2.3033223152160645, 2.3021438121795654, 2.2925732135772705, 2.304348945617676, 2.3029725551605225, 2.3026909828186035, 2.3028557300567627, 2.3026936054229736], "val_accuracy": [0.2006666660308838, 0.1889999955892563, 0.21433334052562714, 0.0989999994635582, 0.0989999994635582, 0.1003333330154419, 0.22466666996479034, 0.0989999994635582, 0.0989999994635582, 0.10566666722297668, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [82, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.22857142984867096, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.408703327178955, 2.295438051223755, 2.3040692806243896, 2.297410011291504, 2.3033764362335205, 2.303104877471924, 2.303046464920044, 2.3030920028686523], "accuracy": [0.19152027368545532, 0.14449875056743622, 0.10236428678035736, 0.120459645986557, 0.09998679161071777, 0.09642054885625839, 0.09021265059709549, 0.0940430611371994], "val_loss": [2.28969407081604, 2.306666374206543, 2.2977206707000732, 2.3031227588653564, 2.302757740020752, 2.302550792694092, 2.302628993988037, 2.30275821685791], "val_accuracy": [0.22699999809265137, 0.10333333164453506, 0.22766666114330292, 0.0976666659116745, 0.10333333164453506, 0.10100000351667404, 0.0976666659116745, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [82, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3047778606414795, 2.3025970458984375, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09259014576673508, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025906085968018, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [72, 66], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [5, 2, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [66, 17, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [75728696.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20697398483753204, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.483691310335394e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03533333167433739, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]