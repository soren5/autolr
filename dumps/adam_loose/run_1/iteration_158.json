[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [55, 66], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 9, 7, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.3248571455478668, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3509089946746826, 2.313667058944702, 2.2339258193969727, 2.301786422729492, 2.3049871921539307, 2.303363084793091, 2.3027594089508057, 2.302044630050659], "accuracy": [0.21674811840057373, 0.1768590658903122, 0.14014001190662384, 0.15915995836257935, 0.09338264167308807, 0.0956280529499054, 0.09536388516426086, 0.1018359512090683], "val_loss": [2.212526321411133, 2.137810230255127, 2.254051685333252, 2.3065736293792725, 2.303494691848755, 2.3029210567474365, 2.302478790283203, 2.290848970413208], "val_accuracy": [0.18566666543483734, 0.30133333802223206, 0.32199999690055847, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.26100000739097595]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [72, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [1, 1, 5, 3, 2, 3, 3, 3, 2, 3, 1, 4, 1, 3, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.28142857551574707, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3169820308685303, 2.34468150138855, 2.5129570960998535, 2.3063647747039795, 2.3034629821777344, 2.3031551837921143, 2.3032712936401367], "accuracy": [0.21754062175750732, 0.177255317568779, 0.15810328722000122, 0.09787346422672272, 0.09747721254825592, 0.09906221181154251, 0.09179764986038208], "val_loss": [2.1657378673553467, 2.180638074874878, 2.308839797973633, 2.3037290573120117, 2.3028900623321533, 2.3026695251464844, 2.302762985229492], "val_accuracy": [0.24433332681655884, 0.2836666703224182, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.0976666659116745, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.27885714173316956, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4201552867889404, 2.244354009628296, 2.252924919128418, 2.1221179962158203, 2.515584945678711, 2.3109424114227295, 2.305198907852173, 2.304182529449463, 2.303536891937256], "accuracy": [0.20314356684684753, 0.16734910011291504, 0.17633073031902313, 0.24144762754440308, 0.20433232188224792, 0.10381719470024109, 0.09919429570436478, 0.09642054885625839, 0.09655263274908066], "val_loss": [2.319427490234375, 2.29909348487854, 2.2805933952331543, 2.1871798038482666, 2.3204123973846436, 2.303830623626709, 2.302943468093872, 2.302842140197754, 2.3027477264404297], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.11800000071525574, 0.27300000190734863, 0.10166666656732559, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 0, 0, 1, 3, 3, 3, 3, 2, 2, 1, 0, 1, 2, 4, 1, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.27142858505249023, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.176257371902466, 2.285287857055664, 2.4520201683044434, 2.2956016063690186, 2.3626434803009033, 2.29787015914917, 2.3779726028442383], "accuracy": [0.1954827606678009, 0.13829085230827332, 0.1826707124710083, 0.11940298229455948, 0.13340377807617188, 0.11900673806667328, 0.16100911796092987], "val_loss": [2.309483289718628, 1.9586249589920044, 2.3063557147979736, 1.9266940355300903, 2.304032802581787, 2.2492945194244385, 2.28458571434021], "val_accuracy": [0.10199999809265137, 0.26499998569488525, 0.18833333253860474, 0.2163333296775818, 0.10966666787862778, 0.1979999989271164, 0.2473333328962326]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.20028571784496307, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.689788818359375, 2.30124568939209, 2.4141199588775635, 2.3080172538757324, 2.304176092147827, 2.3029472827911377, 2.3025832176208496], "accuracy": [0.1990489959716797, 0.1026284471154213, 0.17038699984550476, 0.10170386731624603, 0.09945846349000931, 0.09694888442754745, 0.10381719470024109], "val_loss": [2.304837942123413, 2.2521719932556152, 2.312465190887451, 2.3036673069000244, 2.302809476852417, 2.3021862506866455, 2.301781177520752], "val_accuracy": [0.10166666656732559, 0.1940000057220459, 0.10266666859388351, 0.10266666859388351, 0.1003333330154419, 0.1003333330154419, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [3, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.19828571379184723, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4123308658599854, 2.9278953075408936, 2.309889554977417, 2.3023078441619873, 2.2803401947021484, 2.3045430183410645, 2.3032562732696533, 2.3031044006347656, 2.302969455718994], "accuracy": [0.18438778817653656, 0.17870822548866272, 0.10077928751707077, 0.1146479994058609, 0.17051908373832703, 0.09998679161071777, 0.09496764093637466, 0.0956280529499054, 0.09285431355237961], "val_loss": [2.291464328765869, 2.313992500305176, 2.303414821624756, 2.2936787605285645, 2.3063783645629883, 2.303410053253174, 2.3029894828796387, 2.3027093410491943, 2.3025293350219727], "val_accuracy": [0.15333333611488342, 0.09833333641290665, 0.09833333641290665, 0.19866666197776794, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.1899999976158142, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.334728479385376, 2.3017351627349854, 2.380450487136841, 2.304976224899292, 2.303373336791992, 2.3031909465789795, 2.303201913833618], "accuracy": [0.20631356537342072, 0.10949676483869553, 0.11728965491056442, 0.09549596905708313, 0.09945846349000931, 0.09826971590518951, 0.09259014576673508], "val_loss": [2.310997724533081, 2.2318804264068604, 2.3072991371154785, 2.3038439750671387, 2.3029732704162598, 2.303218126296997, 2.3027842044830322], "val_accuracy": [0.09933333098888397, 0.19200000166893005, 0.10199999809265137, 0.10199999809265137, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [3, 0, 2, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 9, 7, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [0, 3, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 3, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2504.4453125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19019944965839386, 0.10672302544116974, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [159844.46875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 9, 3, 8, 0], [0, 1, 2, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 6, 7, 0, 3, 1, 4, 6, 6, 4, 5, 2, 0, 6, 8, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [1, 1, 5, 3, 2, 3, 3, 3, 2, 3, 1, 4, 1, 3, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 75, 65, 8, 75], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [68, 51, 29], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 2, 3, 7, 6, 0, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), alpha), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [6438098.5, 2.314561128616333, 2.305936098098755, 2.3037331104278564, 2.3031435012817383, 2.3030364513397217, 2.302914619445801, 2.3030779361724854, 2.3030152320861816], "accuracy": [0.09879804402589798, 0.09576013684272766, 0.09760929644107819, 0.09906221181154251, 0.09311848133802414, 0.08849557489156723, 0.09879804402589798, 0.09893012791872025, 0.09721305221319199], "val_loss": [2.324064016342163, 2.3087031841278076, 2.304344415664673, 2.303022861480713, 2.3027403354644775, 2.302654266357422, 2.3026978969573975, 2.302668333053589, 2.3026926517486572], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.09799999743700027, 0.10266666859388351, 0.0976666659116745, 0.09799999743700027, 0.0963333323597908, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 0, 2, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 3, 7, 0, 5, 1, 4, 6, 6, 4, 5, 2, 2, 6, 1, 2, 8, 5, 5, 2, 5, 6, 4, 5, 9, 2, 3, 9, 0, 6, 5, 6, 8, 5, 0, 2, 6, 8, 5, 2, 6, 8, 8, 2, 1, 9, 6, 7, 3], [1, 5, 0, 3, 2, 3, 3, 1, 2, 5, 2, 2, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3], [54, 16, 45, 46, 65, 8, 75], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 7, 9, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 4, 4, 5, 7, 2, 3, 1], [51, 51, 29], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 1, 7, 2, 7, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 46, 29, 17, 4, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.square(alpha)), grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), grad), tf.math.add(alpha, beta)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.add(tf.math.sqrt(beta), alpha)), tf.math.square(tf.math.square(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, grad), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]