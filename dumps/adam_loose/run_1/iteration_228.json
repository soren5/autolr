[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 4, 2, 1, 0, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 3, 0, 5, 0, 0, 3, 3, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.35771429538726807, "mapping_values": [1, 1, 0, 1, 0, 111, 71, 40, 12, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.sqrt(grad)))), tf.math.square(beta)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.square(alpha), grad), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), beta), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), grad)))), beta), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(grad, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad))))))), tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.add(grad, tf.math.sqrt(alpha)))), alpha))))), tf.math.square(grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.square(alpha)))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), grad)))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.38151216506958, 3.0560050010681152, 2.310642957687378, 2.304199457168579, 2.3033246994018555, 2.301609754562378], "accuracy": [0.1958790123462677, 0.23061682283878326, 0.10011887550354004, 0.09668471664190292, 0.09945846349000931, 0.10896842926740646], "val_loss": [2.2276694774627686, 2.3295960426330566, 2.303941488265991, 2.302917242050171, 2.3020455837249756, 2.2996299266815186], "val_accuracy": [0.35499998927116394, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [5, 4, 1, 0, 5, 1, 4, 6, 6, 4, 1, 1, 2, 6, 1, 3, 8, 5, 5, 2, 5, 8, 3, 6, 1, 2, 3, 5, 6, 2, 5, 4, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 6, 9, 6, 1, 3, 9, 0, 4, 3, 2, 4, 3, 8, 6, 0, 6, 8, 6, 3, 7, 8, 5, 8, 5], [3, 4, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [55, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2782857120037079, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 16, 8, 8, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, sigma))))", "other_info": {"loss": [2.7132179737091064, 2.4432966709136963, 2.300161838531494, 2.2896218299865723, 2.3805952072143555, 2.3040783405303955, 2.3033287525177, 2.30303955078125], "accuracy": [0.2145027071237564, 0.1728965789079666, 0.10870426893234253, 0.16880200803279877, 0.11517632752656937, 0.09998679161071777, 0.09813763201236725, 0.09734513610601425], "val_loss": [2.2783203125, 2.3022356033325195, 2.279975175857544, 2.503709554672241, 2.306070327758789, 2.303502321243286, 2.3029258251190186, 2.3020033836364746], "val_accuracy": [0.11133333295583725, 0.10233332961797714, 0.27900001406669617, 0.25833332538604736, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 1, 8, 5, 1, 4, 6, 6, 0, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 42, 12, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2751428484916687, "mapping_values": [1, 1, 0, 1, 0, 48, 33, 15, 8, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(grad), beta)), tf.math.square(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta))))), beta))), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.295980930328369, 2.282552480697632, 2.269367218017578, 2.410747528076172, 2.3022756576538086, 2.25447154045105, 2.3035597801208496, 2.3033454418182373, 2.303050994873047, 2.3031909465789795], "accuracy": [0.19178444147109985, 0.149649977684021, 0.13961167633533478, 0.18412363529205322, 0.11742173880338669, 0.1344604343175888, 0.09642054885625839, 0.09655263274908066, 0.09576013684272766, 0.1010434553027153], "val_loss": [2.294023275375366, 2.360931396484375, 2.292919158935547, 2.2892956733703613, 2.153334379196167, 2.30301833152771, 2.302647352218628, 2.3026506900787354, 2.302673816680908, 2.3025903701782227], "val_accuracy": [0.11233333498239517, 0.10133333504199982, 0.10366666316986084, 0.20266667008399963, 0.27900001406669617, 0.09833333641290665, 0.10366666316986084, 0.10366666316986084, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 9, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 9, 1, 3, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 5, 7, 3, 8, 6, 4, 3, 2, 4, 5, 8, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 1, 3, 3, 1, 1, 2, 2, 0, 1, 3, 4, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [42, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22657142579555511, "mapping_values": [1, 13, 9, 4, 2, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.368626832962036, 2.2956693172454834, 2.279600143432617, 3.5485000610351562, 2.3093669414520264, 2.304015874862671, 2.303363800048828, 2.303161382675171], "accuracy": [0.20235107839107513, 0.1460837423801422, 0.11927089840173721, 0.11557257920503616, 0.09906221181154251, 0.10157178342342377, 0.09655263274908066, 0.09219389408826828], "val_loss": [2.3006439208984375, 2.3029677867889404, 3.947423219680786, 2.313291549682617, 2.304851531982422, 2.3031280040740967, 2.3027281761169434, 2.302704095840454], "val_accuracy": [0.09833333641290665, 0.10199999809265137, 0.22100000083446503, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [5, 6, 9, 0, 5, 1, 4, 6, 6, 4, 1, 1, 2, 6, 1, 9, 8, 9, 5, 2, 4, 8, 3, 9, 1, 2, 3, 5, 6, 2, 5, 4, 5, 5, 0, 2, 6, 8, 2, 2, 6, 8, 8, 6, 6, 9, 6, 1, 3, 9, 0, 8, 3, 2, 4, 3, 8, 6, 0, 6, 8, 6, 3, 7, 8, 5, 8, 5, 0], [0, 4, 2, 3, 3, 3, 3, 1, 3, 3, 2, 2, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 3, 3, 1, 1, 1, 3, 0, 1, 5, 4], [23, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.164000004529953, "mapping_values": [1, 1, 0, 1, 0, 4, 3, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9367265701293945, 2.429997682571411, 2.3091108798980713, 2.3031084537506104, 2.2820775508880615, 2.304384469985962], "accuracy": [0.19521859288215637, 0.13049794733524323, 0.09932637959718704, 0.09826971590518951, 0.12693171203136444, 0.09879804402589798], "val_loss": [2.3041086196899414, 2.338334560394287, 2.3031156063079834, 2.302487850189209, 2.3051223754882812, 2.303004741668701], "val_accuracy": [0.1653333306312561, 0.07333333045244217, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [0, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 3, 1, 0, 6, 1, 5, 6, 6, 4, 8, 1, 3, 6, 9, 5, 8, 5, 5, 6, 2, 9, 6, 6, 4, 5, 5, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [0, 4, 2, 1, 3, 3, 3, 3, 3, 5, 2, 0, 1, 3, 1, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 43, 72, 75, 14, 8, 75, 92, 32, 83, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 30, 19, 11, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.math.square(grad)), tf.math.sqrt(grad)), tf.math.square(grad))))), tf.math.square(grad)), beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [14.31826400756836, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19944524765014648, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12093.6611328125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [2, 1, 8, 8, 5, 1, 4, 6, 6, 4, 8, 1, 2, 9, 1, 6, 4, 0, 5, 2, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 9, 0, 8, 2, 3, 2, 6, 6, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 8, 8, 4, 4, 8, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 2, 2, 1, 1, 3, 2, 1, 2, 2, 2, 0, 0, 3, 3, 3, 0, 0, 2, 5, 1, 5, 5, 2, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [36, 15, 80, 75, 46, 8, 3, 92, 32, 48, 89, 11], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 30, 18, 12, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), beta), tf.math.subtract(beta, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad)), beta), tf.math.subtract(alpha, tf.math.divide_no_nan(beta, tf.math.pow(beta, tf.math.negative(beta))))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [31813.853515625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19574692845344543, 0.10645885765552521, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [664119168.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0860000029206276, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [5, 4, 1, 6, 1, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 9, 5, 5, 2, 5, 8, 3, 8, 1, 2, 0, 0, 6, 2, 5, 4, 8, 5, 0, 2, 5, 8, 4, 2, 6, 8, 8, 6, 6, 9, 6, 1, 3, 9, 0, 4, 3, 2, 9, 3, 8, 6, 0, 6, 8, 6, 3, 7, 8, 5, 6, 5, 0], [0, 4, 3, 1, 3, 3, 3, 0, 3, 5, 3, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 1, 3, 2, 0, 0, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 62, 39, 23, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.subtract(grad, grad)), tf.math.multiply(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.math.square(grad)), grad), tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, grad)), tf.math.add(grad, tf.math.negative(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), beta), tf.math.pow(alpha, tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.add(tf.math.square(alpha), tf.math.sqrt(tf.math.pow(grad, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.915619134902954, 2.3091418743133545, 2.4565188884735107, 2.3094301223754883, 2.3034024238586426, 2.3030142784118652], "accuracy": [0.17963281273841858, 0.10051512718200684, 0.16840575635433197, 0.09879804402589798, 0.09655263274908066, 0.09800554811954498], "val_loss": [2.3134357929229736, 2.3037707805633545, 2.3213119506835938, 2.303370714187622, 2.3027637004852295, 2.3026750087738037], "val_accuracy": [0.1003333330154419, 0.0976666659116745, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 7, 1, 0, 3, 1, 4, 6, 6, 4, 8, 1, 2, 6, 9, 3, 8, 5, 5, 3, 2, 3, 6, 9, 9, 5, 3, 9, 8, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 4, 3, 5], [0, 5, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 16, 8, 8, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad))), tf.math.subtract(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 1, 1, 8, 5, 1, 4, 6, 6, 4, 8, 1, 2, 5, 1, 3, 8, 9, 5, 1, 5, 6, 6, 0, 9, 2, 3, 1, 9, 5, 4, 0, 8, 2, 3, 8, 6, 8, 2, 2, 6, 8, 8, 6, 1, 9, 3, 7, 3, 8, 8, 9, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [1, 4, 2, 2, 3, 3, 2, 1, 2, 0, 2, 0, 0, 3, 3, 3, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [42, 15, 80, 75, 79, 8, 31, 71, 15, 48, 89, 80, 37], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.931889295578003, 5917747183616.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18570862710475922, 0.09351472556591034, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10.262232780456543, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.059333331882953644, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]