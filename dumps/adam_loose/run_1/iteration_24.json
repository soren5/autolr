[{"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [1, 3, 2, 2], [3, 0, 0, 3], [68, 4], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 0, 5, 6, 8, 2, 5, 9, 5], [5, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.4117142856121063, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6148862838745117, 2.288916826248169, 2.2877554893493652, 2.4182257652282715, 2.303788661956787, 2.3029396533966064, 2.3019015789031982], "accuracy": [0.2032756507396698, 0.1290450394153595, 0.17936864495277405, 0.12851670384407043, 0.1010434553027153, 0.10196803510189056, 0.10632677376270294], "val_loss": [2.306903600692749, 1.9792916774749756, 2.1349241733551025, 2.30403995513916, 2.3027029037475586, 2.302232027053833, 2.2987260818481445], "val_accuracy": [0.10000000149011612, 0.4189999997615814, 0.38333332538604736, 0.1003333330154419, 0.17166666686534882, 0.0989999994635582, 0.1966666728258133]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 0, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [1, 3, 2, 2], [2, 2, 0, 3], [69, 4], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 0, 5, 8, 2, 5, 9, 5], [1, 0, 0, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2971428632736206, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8450846672058105, 2.2168614864349365, 2.294613838195801, 2.2167840003967285, 2.307401418685913, 2.3033831119537354, 2.3030991554260254, 2.303675651550293], "accuracy": [0.20578522980213165, 0.19442610442638397, 0.15453705191612244, 0.18372738361358643, 0.09919429570436478, 0.10236428678035736, 0.1010434553027153, 0.09589222073554993], "val_loss": [2.292752981185913, 2.2892425060272217, 1.9642544984817505, 2.310004472732544, 2.303145170211792, 2.3027234077453613, 2.3027379512786865, 2.302560806274414], "val_accuracy": [0.13500000536441803, 0.16633333265781403, 0.30533334612846375, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09799999743700027, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 5, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 2, 2, 3, 7, 3, 1, 0, 2, 2, 4, 3], [2, 2, 2, 3, 1, 4, 1, 4, 5, 4, 3, 3, 2], [68, 4], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 7, 8, 2, 5, 9, 5], [0, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.28114286065101624, "mapping_values": [1, 1, 0, 1, 0, 26, 13, 13, 0, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(beta, beta), grad), alpha), grad), tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.add(grad, grad)), tf.math.add(grad, tf.math.pow(tf.math.multiply(grad, grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), grad))), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3301749229431152, 3.364469051361084, 2.3075110912323, 2.3004186153411865, 2.3556454181671143, 2.2766685485839844], "accuracy": [0.19970941543579102, 0.15902787446975708, 0.09496764093637466, 0.11834631860256195, 0.16219785809516907, 0.13313961029052734], "val_loss": [1.9163066148757935, 2.3118555545806885, 2.3035378456115723, 2.232846736907959, 2.1774818897247314, 2.303959608078003], "val_accuracy": [0.29366666078567505, 0.1366666704416275, 0.0963333323597908, 0.156333327293396, 0.2723333239555359, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [1, 1, 0, 0, 1, 1, 1], [1, 3, 2, 2], [4, 2, 0, 3], [63, 4], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 8, 0, 5, 8, 8, 2, 5, 9, 5], [7, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.27485713362693787, "mapping_values": [1, 4, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.math.negative(grad)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4333388805389404, 2.293321371078491, 2.807335138320923, 2.3048856258392334, 2.3032639026641846, 2.3032209873199463, 2.3029727935791016], "accuracy": [0.189274862408638, 0.14991414546966553, 0.16021661460399628, 0.09655263274908066, 0.09628847241401672, 0.09377889335155487, 0.09602430462837219], "val_loss": [2.304213285446167, 2.075089454650879, 2.306034803390503, 2.303283929824829, 2.302849531173706, 2.302656650543213, 2.302726984024048], "val_accuracy": [0.10000000149011612, 0.2786666750907898, 0.10199999809265137, 0.10199999809265137, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [6, 3, 2, 1, 3], [5, 0, 2, 3, 1, 5], [68, 4], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 5, 8, 8, 2, 5, 9, 5], [1, 5, 0, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2711428701877594, "mapping_values": [1, 1, 0, 1, 0, 9, 4, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), beta), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.376703977584839, 2.594095230102539, 2.2421674728393555, 2.2549502849578857, 2.305454969406128, 2.3034512996673584, 2.3032162189483643, 2.303447723388672], "accuracy": [0.21925769746303558, 0.17870822548866272, 0.1806894689798355, 0.23801347613334656, 0.09681680053472519, 0.10038304328918457, 0.0940430611371994, 0.09972262382507324], "val_loss": [2.3051960468292236, 2.3072304725646973, 2.0295510292053223, 2.305694341659546, 2.302708625793457, 2.30259108543396, 2.3026609420776367, 2.30259108543396], "val_accuracy": [0.12733332812786102, 0.11566666513681412, 0.27266666293144226, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 2, 2, 8], [2, 0, 0, 5, 3], [69, 4], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 0, 5, 4, 8, 2, 5, 9, 5], [0, 5, 4, 5, 7, 2, 3, 1], [31, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.25371429324150085, "mapping_values": [1, 1, 0, 1, 0, 10, 5, 5, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.pow(grad, tf.math.sqrt(grad))))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.502166748046875, 2.3403711318969727, 2.2875750064849854, 2.4412035942077637, 2.305347442626953, 2.3034698963165283, 2.303006172180176, 2.302966356277466], "accuracy": [0.1608770340681076, 0.1080438494682312, 0.1270637959241867, 0.13274335861206055, 0.09998679161071777, 0.09998679161071777, 0.09813763201236725, 0.0948355570435524], "val_loss": [2.3067433834075928, 2.3036956787109375, 2.149806261062622, 2.30802321434021, 2.3037526607513428, 2.3028838634490967, 2.3026721477508545, 2.302588939666748], "val_accuracy": [0.10133333504199982, 0.09866666793823242, 0.2516666650772095, 0.10000000149011612, 0.10000000149011612, 0.09866666793823242, 0.09866666793823242, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 0, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 0, 1, 1], [6, 3, 2, 2, 3], [2, 2, 0, 3], [68, 4], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 1, 0, 6, 5, 8, 2, 5, 9, 5], [1, 5, 0, 5, 7, 2, 3, 1], [96, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1891428530216217, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(grad)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3448352813720703, 2.3049886226654053, 2.30570125579834, 2.296389579772949, 2.2023863792419434, 2.337644577026367, 2.406923294067383, 2.3052146434783936, 2.304494619369507], "accuracy": [0.19059570133686066, 0.1504424810409546, 0.09734513610601425, 0.12336547672748566, 0.19957733154296875, 0.1398758441209793, 0.0952318087220192, 0.09774138033390045, 0.09813763201236725], "val_loss": [2.30075740814209, 2.308450937271118, 2.303164482116699, 2.2747750282287598, 2.2789838314056396, 2.8844335079193115, 2.3071095943450928, 2.3030192852020264, 2.303419351577759], "val_accuracy": [0.10199999809265137, 0.10633333027362823, 0.09700000286102295, 0.19233334064483643, 0.10000000149011612, 0.10166666656732559, 0.09733333438634872, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 6, 4, 5, 2], [2, 2, 0, 3], [58, 4], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 0, 5, 8, 8, 2, 5, 9, 5], [1, 5, 0, 5, 7, 2, 3, 1], [91, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.13514286279678345, "mapping_values": [1, 1, 0, 1, 0, 8, 4, 4, 1, 11, 9, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1291.0841064453125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1880861222743988, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [35238760.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13233333826065063, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [3, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 0, 0, 1, 1, 1], [1, 3, 2, 2], [1, 2, 0, 3], [68, 4], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 0, 5, 8, 8, 2, 5, 9, 5], [7, 5, 7, 5, 7, 2, 3, 1], [91, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 7, 3, 7, 6, 0, 2, 0], [53, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [4, 39, 91, 82], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 1, 7, 2, 2, 2, 4, 4, 3, 1, 5, 1, 8, 1, 7, 6, 8, 3, 7, 5, 8, 8, 1, 5, 0, 9, 6, 2, 3, 4, 5, 7, 6, 0, 4, 0, 6, 3, 3, 3, 7, 2, 5, 0, 8, 1, 1, 8, 7, 7, 7, 4, 2, 0, 5, 7, 1, 2, 1, 2, 1, 8], [2, 0, 1, 3, 1, 5, 5, 1, 2, 2, 3, 0, 5, 5, 2, 3, 0, 5, 3, 1, 4, 2, 2, 1, 1, 5, 1, 1, 1, 2, 5, 1, 1, 1, 0, 5, 0, 4, 4, 5, 1, 1, 2], [69, 4, 8, 76, 87, 8], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 5, 1, 8, 2, 5, 9, 5], [1, 5, 0, 5, 7, 2, 3, 1], [35, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 105, 62, 43, 6, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, grad), tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.math.subtract(grad, grad)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.sqrt(tf.math.multiply(beta, tf.math.add(tf.math.square(grad), tf.math.sqrt(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.square(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad)))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.square(tf.math.add(tf.math.divide_no_nan(beta, tf.math.negative(grad)), tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(grad)), alpha)), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(beta), tf.math.negative(tf.math.sqrt(tf.math.subtract(beta, alpha)))), tf.math.subtract(alpha, grad)), alpha), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.math.pow(alpha, alpha), beta), tf.math.add(tf.math.negative(tf.math.square(grad)), tf.math.add(alpha, tf.math.subtract(alpha, alpha)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), grad), grad)))))), tf.math.sqrt(alpha)), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.square(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [9.768712997436523, 2.327043056488037, 2.3069491386413574, 2.3049750328063965, 2.3043394088745117, 2.3038151264190674, 2.3029794692993164, 2.303359031677246, 2.3031673431396484, 2.3028664588928223, 2.3032641410827637], "accuracy": [0.19891692698001862, 0.1018359512090683, 0.10513802617788315, 0.0936468094587326, 0.09470347315073013, 0.1002509593963623, 0.09496764093637466, 0.09589222073554993, 0.0948355570435524, 0.10130762308835983, 0.09813763201236725], "val_loss": [2.3630106449127197, 2.3072266578674316, 2.304241418838501, 2.30279541015625, 2.302798271179199, 2.3025779724121094, 2.3025667667388916, 2.30271315574646, 2.302609920501709, 2.302678108215332, 2.302644968032837], "val_accuracy": [0.09700000286102295, 0.09966666996479034, 0.09700000286102295, 0.09966666996479034, 0.09799999743700027, 0.10300000011920929, 0.09966666996479034, 0.10300000011920929, 0.09966666996479034, 0.10300000011920929, 0.09866666793823242]}}]