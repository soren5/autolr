[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [5, 3, 5, 9, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.4011428654193878, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.316286087036133, 2.3832175731658936, 2.3036673069000244, 2.2720959186553955, 2.3968505859375, 2.282294750213623], "accuracy": [0.2188614457845688, 0.15374454855918884, 0.10210011899471283, 0.15176330506801605, 0.18953903019428253, 0.15440496802330017], "val_loss": [2.1481189727783203, 2.303864002227783, 2.2967164516448975, 1.8191910982131958, 2.0663726329803467, 2.305602788925171], "val_accuracy": [0.40566667914390564, 0.09966666996479034, 0.1106666699051857, 0.40066665410995483, 0.31833332777023315, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 4, 0, 2, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [5, 3, 3, 3, 3, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3, 3, 0, 2, 9, 8, 1, 9, 3, 1, 5, 9, 7, 0], [1, 7, 4, 5, 1, 2, 3, 1, 4, 5, 1, 1, 4, 0], [7, 51, 90, 98, 7], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.38199999928474426, "mapping_values": [1, 6, 3, 3, 0, 11, 6, 5, 1, 40, 27, 13, 4, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(grad, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.subtract(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(grad)))), tf.math.subtract(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(alpha, tf.math.subtract(tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4611258506774902, 2.4716408252716064, 2.268104076385498, 2.3328535556793213, 2.3055779933929443, 2.303614854812622, 2.303074598312378, 2.302971601486206], "accuracy": [0.19178444147109985, 0.21820102632045746, 0.15070664882659912, 0.15863162279129028, 0.09998679161071777, 0.10011887550354004, 0.09906221181154251, 0.10170386731624603], "val_loss": [2.1769022941589355, 2.3088295459747314, 1.7911288738250732, 2.3072946071624756, 2.3032469749450684, 2.3027637004852295, 2.3026726245880127, 2.3025949001312256], "val_accuracy": [0.3233333230018616, 0.09966666996479034, 0.3773333430290222, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 7, 1, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 3, 3, 6, 1, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 90, 98], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.2671428620815277, "mapping_values": [1, 9, 4, 5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.subtract(alpha, alpha), grad), tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3632254600524902, 2.3792617321014404, 2.280832052230835, 2.302760124206543, 2.287459135055542, 2.310060739517212], "accuracy": [0.22057852149009705, 0.13578127324581146, 0.13142253458499908, 0.10645885765552521, 0.18755778670310974, 0.10289261490106583], "val_loss": [2.442002773284912, 2.1961474418640137, 2.3031764030456543, 2.2983734607696533, 2.3201191425323486, 2.304615020751953], "val_accuracy": [0.2720000147819519, 0.25466665625572205, 0.09866666793823242, 0.0989999994635582, 0.10166666656732559, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [5, 5, 5, 9, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2522857189178467, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.402878522872925, 2.4410476684570312, 2.5590686798095703, 2.2958340644836426, 2.304863929748535, 2.300280809402466, 2.3306639194488525], "accuracy": [0.18584071099758148, 0.11900673806667328, 0.14621582627296448, 0.1278562992811203, 0.09734513610601425, 0.10289261490106583, 0.12217672914266586], "val_loss": [2.288605213165283, 2.307119131088257, 2.303873062133789, 2.3070003986358643, 2.3016583919525146, 2.2577319145202637, 2.307588815689087], "val_accuracy": [0.1066666692495346, 0.2436666637659073, 0.09733333438634872, 0.10499999672174454, 0.10499999672174454, 0.09700000286102295, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 2, 3, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 6, 0, 2, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 16, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 4, 5, 8, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3, 9, 0, 5, 9, 4, 5, 0, 5, 5, 1, 1, 1, 4, 5, 8, 0, 8], [1, 5, 7, 5, 7, 2, 3, 1, 2, 2, 3, 0, 1, 5], [19, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.23257142305374146, "mapping_values": [1, 11, 6, 5, 0, 7, 4, 3, 2, 47, 33, 14, 3, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(grad, grad)), tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.square(tf.math.sqrt(alpha)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.square(grad), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)), tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.square(tf.math.negative(alpha)), tf.math.square(beta)))), tf.math.square(tf.math.subtract(beta, tf.math.subtract(sigma, tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(alpha), tf.math.sqrt(tf.math.negative(tf.math.sqrt(grad)))))))))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5457842350006104, 2.3140811920166016, 2.304018259048462, 2.3030056953430176, 2.302605390548706, 2.2997629642486572, 2.3046717643737793, 2.3032472133636475, 2.3024306297302246, 2.2841298580169678, 2.3218629360198975, 2.303994655609131, 2.3169360160827637, 2.305687665939331, 2.3015449047088623, 2.349982261657715, 2.306779623031616, 2.303522825241089, 2.3027236461639404, 2.2740230560302734], "accuracy": [0.2133139669895172, 0.09628847241401672, 0.09351472556591034, 0.09496764093637466, 0.09853387624025345, 0.13459251821041107, 0.09351472556591034, 0.10276053100824356, 0.10130762308835983, 0.12521463632583618, 0.10632677376270294, 0.09866596013307571, 0.16299036145210266, 0.09721305221319199, 0.11055342853069305, 0.16391493380069733, 0.09615638852119446, 0.0940430611371994, 0.10751552134752274, 0.16497160494327545], "val_loss": [2.354199171066284, 2.3040807247161865, 2.3026764392852783, 2.3022279739379883, 2.3004720211029053, 2.3045456409454346, 2.303347110748291, 2.3026325702667236, 2.3023905754089355, 2.3395023345947266, 2.3042516708374023, 2.3021299839019775, 2.308377504348755, 2.302933931350708, 2.2827577590942383, 2.3068132400512695, 2.303452253341675, 2.302151679992676, 2.298978567123413, 2.8652992248535156], "val_accuracy": [0.0989999994635582, 0.09833333641290665, 0.10199999809265137, 0.0989999994635582, 0.11999999731779099, 0.09933333098888397, 0.1003333330154419, 0.10233332961797714, 0.09933333098888397, 0.14166666567325592, 0.09933333098888397, 0.10000000149011612, 0.09933333098888397, 0.10233332961797714, 0.22366666793823242, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.16433332860469818, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [82, 66, 23], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 3, 3, 6, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [4, 5, 7, 5, 7, 2, 3, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [4, 0, 1, 0, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.22114285826683044, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6790876388549805, 2.3109207153320312, 2.2908451557159424, 2.3035171031951904, 2.3032944202423096, 2.302933692932129, 2.3029322624206543], "accuracy": [0.1740853190422058, 0.1732928305864334, 0.11227050423622131, 0.09694888442754745, 0.09536388516426086, 0.09879804402589798, 0.09708096832036972], "val_loss": [2.296738624572754, 2.0898001194000244, 2.3034355640411377, 2.302640914916992, 2.3026468753814697, 2.302625894546509, 2.302597999572754], "val_accuracy": [0.10100000351667404, 0.21833333373069763, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [3, 2, 3, 3, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [5, 5, 3, 9, 6, 8, 7, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.20828571915626526, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2394375801086426, 3.0651721954345703, 2.3092048168182373, 2.480717182159424, 2.3134658336639404, 2.3051133155822754, 2.3033862113952637, 2.3030264377593994], "accuracy": [0.2001056671142578, 0.22665433585643768, 0.09879804402589798, 0.20182274281978607, 0.09655263274908066, 0.09972262382507324, 0.09998679161071777, 0.09760929644107819], "val_loss": [2.2947630882263184, 2.320840358734131, 2.26375675201416, 2.3223137855529785, 2.306680917739868, 2.3036153316497803, 2.3030993938446045, 2.302804946899414], "val_accuracy": [0.1993333399295807, 0.09666666388511658, 0.21033333241939545, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09666666388511658, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 6, 5, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [0, 5, 0, 2, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 55, 45, 75, 65, 8, 75], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 5, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 0, 4, 4, 4, 3, 1, 2, 0, 3, 4, 4, 2, 4, 4, 4, 5, 2, 3, 1, 4, 4, 7, 3, 6, 3, 0, 4, 4, 0, 1, 3, 0, 0, 2, 6], [68, 51, 90, 98], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.1362857073545456, "mapping_values": [1, 6, 3, 3, 0, 10, 6, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.negative(alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.444244861602783, 2.4293088912963867, 2.305452585220337, 2.3034982681274414, 2.3030543327331543, 2.3030807971954346], "accuracy": [0.2001056671142578, 0.1450270712375641, 0.09985470771789551, 0.09879804402589798, 0.09906221181154251, 0.09655263274908066], "val_loss": [2.286851167678833, 2.309098720550537, 2.3042492866516113, 2.303107738494873, 2.303140878677368, 2.302671432495117], "val_accuracy": [0.1509999930858612, 0.0976666659116745, 0.0976666659116745, 0.1133333370089531, 0.0976666659116745, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [1, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 1, 0, 5, 9, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 3, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [36, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [5, 3, 3, 3, 1, 8, 9, 2, 1, 5, 1, 8, 1, 2, 6, 3, 5, 2, 2, 0, 0, 2, 2, 4, 7, 0, 4, 8, 2, 1, 1, 5, 1, 0, 9, 9, 5, 2, 8, 7, 6, 6, 1, 6, 4, 9, 7, 9, 5, 6, 9, 2, 3, 6, 6, 1, 4, 5, 6, 1, 2, 9, 6], [1, 7, 4, 1, 7, 2, 3, 1, 2, 5, 1, 2, 7, 5, 6, 5, 2, 2, 7, 1, 4, 1, 4, 4, 0, 1, 3, 1, 4, 4, 5, 4, 1, 1, 2, 5], [68, 51, 90, 98, 37, 54, 83, 29, 42], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 2, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 1, 96, 62, 34, 8, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), tf.math.subtract(tf.math.square(alpha), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), beta), tf.math.add(sigma, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.negative(tf.math.pow(beta, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.subtract(beta, tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.negative(grad), grad)), grad)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(grad, beta))))), tf.math.sqrt(beta)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)))), grad)))), tf.math.square(tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.divide_no_nan(sigma, alpha)), tf.math.subtract(grad, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))), grad), grad), alpha))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3819098472595215, 2.387949228286743, 2.305349349975586, 2.30366587638855, 2.3029630184173584, 2.303309440612793, 2.3031606674194336, 2.303144693374634, 2.3028981685638428], "accuracy": [0.18623696267604828, 0.09826971590518951, 0.09259014576673508, 0.09813763201236725, 0.1006472036242485, 0.09774138033390045, 0.09628847241401672, 0.09576013684272766, 0.10170386731624603], "val_loss": [2.440837860107422, 2.303577423095703, 2.3028860092163086, 2.3026299476623535, 2.3025941848754883, 2.302619218826294, 2.302452802658081, 2.3024556636810303, 2.3020830154418945], "val_accuracy": [0.09200000017881393, 0.09866666793823242, 0.1003333330154419, 0.10266666859388351, 0.09733333438634872, 0.10266666859388351, 0.09866666793823242, 0.10266666859388351, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 7, 0, 7, 2, 0, 9, 3, 8], [2, 1, 3, 3, 1, 0, 0, 2], [9, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0, 2, 7], [2, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 8], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [6, 5, 4, 3, 6, 1, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 8, 8, 8, 5, 4, 1, 3, 2, 5, 2, 2, 6, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 9, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 8, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 4, 4, 4, 3, 1, 2, 0, 3, 4, 4, 2, 4, 4, 4, 4, 4, 3, 1, 4, 4, 7, 3, 6, 3, 0, 4, 3, 0, 4, 3, 0, 0, 2, 6], [68, 51, 85, 79, 14, 91, 85, 62, 46, 40], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 1, 6, 2, 5, 1], [0, 0, 1, 2, 3, 7, 6, 6, 2, 0], [26, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 82, 53, 29, 8, 78, 50, 28, 5, 1, 0, 1, 1], "tree_depth": 57, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.pow(grad, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.subtract(alpha, tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.multiply(tf.math.square(alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(alpha)))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(grad))))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, beta), tf.math.sqrt(grad)), tf.math.negative(alpha))), grad)))), grad)))))))), grad)))), beta), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(beta, grad)), tf.math.subtract(grad, tf.math.negative(tf.math.subtract(tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(tf.math.sqrt(sigma), tf.math.sqrt(alpha))), tf.math.sqrt(tf.math.square(tf.math.pow(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.negative(beta))))), tf.math.add(tf.math.add(grad, grad), tf.math.sqrt(grad))), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))))), grad), tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.negative(grad))))))))), tf.math.multiply(grad, sigma)), grad))), tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304131031036377, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]