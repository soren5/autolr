[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 4, 9, 1, 6, 8, 0, 2, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [73, 56, 60, 43, 12, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 4, 3, 7, 8, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3254285752773285, "mapping_values": [1, 4, 2, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.438725709915161, 2.3215396404266357, 2.2322990894317627, 2.290994644165039, 2.304109811782837, 2.303316116333008, 2.3035311698913574, 2.3028454780578613], "accuracy": [0.19521859288215637, 0.1142517477273941, 0.17817988991737366, 0.1258750557899475, 0.0948355570435524, 0.0944393053650856, 0.0944393053650856, 0.10606260597705841], "val_loss": [2.2948086261749268, 2.299034833908081, 1.9502652883529663, 2.303767681121826, 2.302966833114624, 2.302657127380371, 2.3027403354644775, 2.3027236461639404], "val_accuracy": [0.09933333098888397, 0.16866666078567505, 0.3346666693687439, 0.09933333098888397, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 2, 3, 1, 1, 8, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [22, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2822857201099396, "mapping_values": [1, 3, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2713143825531006, 2.440183401107788, 2.268968343734741, 2.349684953689575, 2.305867910385132, 2.303469181060791], "accuracy": [0.20816272497177124, 0.16483952105045319, 0.1398758441209793, 0.1476687341928482, 0.1002509593963623, 0.09853387624025345], "val_loss": [2.256420850753784, 2.306980848312378, 2.439023971557617, 2.3083603382110596, 2.303392171859741, 2.3029167652130127], "val_accuracy": [0.29600000381469727, 0.10333333164453506, 0.10166666656732559, 0.10000000149011612, 0.09933333098888397, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [85, 86, 60, 43, 65, 52, 74, 98, 7, 45], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.27057144045829773, "mapping_values": [1, 3, 1, 2, 2, 6, 4, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.340561866760254, 2.2231645584106445, 2.3287105560302734, 2.430419445037842, 2.643336534500122, 2.3143727779388428], "accuracy": [0.22137102484703064, 0.19138818979263306, 0.13591335713863373, 0.18412363529205322, 0.14132875204086304, 0.10619468986988068], "val_loss": [2.2100436687469482, 2.211189031600952, 2.2906932830810547, 2.3092353343963623, 2.3261797428131104, 2.306688070297241], "val_accuracy": [0.265666663646698, 0.2593333423137665, 0.14499999582767487, 0.09700000286102295, 0.0989999994635582, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 2, 3, 2, 1, 8, 9, 1, 2, 8, 1, 1, 3, 0, 2, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 1, 1, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [73, 47, 60, 43, 65, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 9, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 2, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 2, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24799999594688416, "mapping_values": [1, 28, 16, 12, 5, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.subtract(tf.math.sqrt(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(grad, tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad))), grad)))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2522823810577393, 2.289353609085083, 2.2959532737731934, 2.701469659805298, 2.227163553237915, 2.3085644245147705], "accuracy": [0.18980319797992706, 0.1340641975402832, 0.12270505726337433, 0.18438778817653656, 0.1868973672389984, 0.09945846349000931], "val_loss": [2.201209783554077, 2.3029966354370117, 2.2260494232177734, 2.3088107109069824, 2.313774347305298, 2.3045578002929688], "val_accuracy": [0.25200000405311584, 0.1003333330154419, 0.20600000023841858, 0.11866666376590729, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 2, 8, 1, 5, 8, 3, 0, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 2, 2, 1, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [71, 86, 60, 43, 65, 52, 74, 98, 7, 45], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22228571772575378, "mapping_values": [1, 13, 8, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(grad))), tf.math.multiply(tf.math.negative(grad), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.274606704711914, 2.42863392829895, 2.2914516925811768, 2.3699777126312256, 2.3040871620178223, 2.3001914024353027, 2.3299505710601807, 2.304094076156616, 2.3037636280059814, 2.303163528442383, 2.3021645545959473], "accuracy": [0.20618148148059845, 0.15638621151447296, 0.13630960881710052, 0.10593052208423615, 0.09787346422672272, 0.11649715900421143, 0.1628582775592804, 0.09681680053472519, 0.1014397069811821, 0.10381719470024109, 0.10302469879388809], "val_loss": [2.279627561569214, 2.304637908935547, 2.6179161071777344, 2.3039932250976562, 2.3018317222595215, 2.276336193084717, 2.303330659866333, 2.3024489879608154, 2.302431344985962, 2.3023853302001953, 2.3005783557891846], "val_accuracy": [0.10633333027362823, 0.10000000149011612, 0.1616666615009308, 0.0989999994635582, 0.16699999570846558, 0.22300000488758087, 0.10566666722297668, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.21433334052562714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 2, 2, 8, 1, 1, 6, 1, 6, 0, 1, 8, 3, 3, 4, 0, 1, 5, 2, 4, 3, 2, 0, 1, 5, 6], [1, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [37, 86, 60, 43, 24, 52, 74, 98, 7, 45], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.1542857140302658, "mapping_values": [1, 29, 16, 13, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad)), tf.math.multiply(tf.math.multiply(tf.math.pow(alpha, tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.570357322692871, 2.3667054176330566, 2.3030967712402344, 2.3029797077178955, 2.3025155067443848, 2.2960550785064697], "accuracy": [0.17936864495277405, 0.10500594228506088, 0.09721305221319199, 0.09919429570436478, 0.10355303436517715, 0.12719587981700897], "val_loss": [2.5713083744049072, 2.3026976585388184, 2.3025598526000977, 2.3025400638580322, 2.300110101699829, 2.3066208362579346], "val_accuracy": [0.16099999845027924, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.12600000202655792, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [8, 2, 2, 8, 1, 1, 6, 1, 6, 0, 1, 1, 3, 3, 4, 0, 1, 5, 2, 4, 3, 2, 0, 1, 5, 6], [2, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [37, 86, 60, 43, 65, 52, 74, 98, 7, 45], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [55, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.11085714399814606, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [40.76784133911133, 143.84820556640625, 2.3078532218933105, 2.3026599884033203, 2.3032162189483643, 2.303208827972412, 2.3032376766204834, 2.3031980991363525], "accuracy": [0.18201030790805817, 0.09628847241401672, 0.09972262382507324, 0.1018359512090683, 0.10157178342342377, 0.09417514503002167, 0.0940430611371994, 0.09311848133802414], "val_loss": [1197.1002197265625, 2.311779260635376, 2.2935030460357666, 2.303276777267456, 2.3026797771453857, 2.3025269508361816, 2.302654981613159, 2.302595615386963], "val_accuracy": [0.09666666388511658, 0.0976666659116745, 0.10999999940395355, 0.10133333504199982, 0.09966666996479034, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 1, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [82, 56, 60, 43, 65, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 3, 7, 4, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.subtract(grad, tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.subtract(grad, tf.math.negative(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303828001022339, 2.303013324737549, 2.3029673099517822, 2.3029396533966064, 2.3029978275299072, 2.302872657775879], "accuracy": [0.09457138925790787, 0.0948355570435524, 0.09959053993225098, 0.09708096832036972, 0.09826971590518951, 0.09576013684272766], "val_loss": [2.3026797771453857, 2.3026280403137207, 2.302624464035034, 2.302593231201172, 2.3026442527770996, 2.3025944232940674], "val_accuracy": [0.10199999809265137, 0.09733333438634872, 0.0989999994635582, 0.10100000351667404, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [8, 2, 2, 8, 1, 1, 6, 1, 6, 0, 1, 1, 3, 3, 4, 0, 1, 5, 2, 4, 3, 2, 0, 1, 5, 6], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [73, 56, 60, 43, 65, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [55, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 4, 3, 7, 8, 8, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 0, 4, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(grad, tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.475380897521973, 2.387282609939575, 2.3050074577331543, 2.3033034801483154, 2.303069829940796, 2.3028764724731445, 2.302793264389038, 2.302888870239258, 2.30305814743042, 2.3030128479003906, 2.302997350692749, 2.3029420375823975, 2.3030154705047607], "accuracy": [0.17276449501514435, 0.09259014576673508, 0.09285431355237961, 0.09655263274908066, 0.09760929644107819, 0.09721305221319199, 0.10130762308835983, 0.09708096832036972, 0.09232597798109055, 0.09708096832036972, 0.09853387624025345, 0.09734513610601425, 0.09496764093637466], "val_loss": [2.706803798675537, 2.306007146835327, 2.30352783203125, 2.302764892578125, 2.302624464035034, 2.302658796310425, 2.3026461601257324, 2.302581310272217, 2.3027474880218506, 2.3025693893432617, 2.302609920501709, 2.3025741577148438, 2.302699327468872], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10100000351667404, 0.10066666454076767, 0.09700000286102295, 0.10199999809265137, 0.09700000286102295, 0.09700000286102295, 0.10100000351667404, 0.10100000351667404, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [4, 2, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [71, 86, 60, 43, 65, 52, 74, 98, 7, 45], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [93, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 6, 3, 7, 9, 4, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [7, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [1, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 16, 13, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.sqrt(alpha), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad))), grad)), tf.math.multiply(tf.math.pow(tf.math.pow(alpha, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]