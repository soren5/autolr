[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 6, 8, 2, 2, 1, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 1, 2, 3, 0, 0, 1, 3], [85, 5, 81, 3, 41, 46], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.35857143998146057, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.276343584060669, 2.3944010734558105, 2.228071689605713, 2.382341146469116, 2.2784199714660645, 2.2924277782440186, 2.299182653427124, 2.3046889305114746], "accuracy": [0.2082948088645935, 0.16682076454162598, 0.1666886806488037, 0.14793290197849274, 0.14053626358509064, 0.1228371411561966, 0.13815876841545105, 0.09826971590518951], "val_loss": [2.2830121517181396, 2.291585683822632, 2.030701160430908, 2.3034868240356445, 1.823613166809082, 2.2737438678741455, 2.3050172328948975, 2.303288459777832], "val_accuracy": [0.17666666209697723, 0.10899999737739563, 0.36033332347869873, 0.10000000149011612, 0.3199999928474426, 0.20900000631809235, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 6, 9, 7, 5, 1, 0, 2, 8, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 1, 0, 0, 3, 0, 0, 2, 3], [24, 98, 97, 0, 98], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [92, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.33485713601112366, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.268221139907837, 2.2431130409240723, 2.409501791000366, 2.287473201751709, 2.306447982788086, 2.303556442260742], "accuracy": [0.19033153355121613, 0.23220182955265045, 0.17593449354171753, 0.18451987206935883, 0.09747721254825592, 0.09417514503002167], "val_loss": [2.088265895843506, 2.1968512535095215, 2.3183114528656006, 2.3094899654388428, 2.3035473823547363, 2.302722692489624], "val_accuracy": [0.34166666865348816, 0.10300000011920929, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 1, 5, 1, 1, 2, 8, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [1, 2, 0, 0, 2, 0, 0, 1, 3], [24, 98, 97, 70, 98], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [88, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3288571536540985, "mapping_values": [1, 18, 10, 8, 4, 3, 1, 2, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.square(grad), tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.add(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.438300609588623, 2.292074203491211, 2.20192813873291, 2.249657154083252, 2.303776264190674, 2.3032379150390625, 2.303203582763672, 2.3029747009277344], "accuracy": [0.1810857206583023, 0.1896711140871048, 0.19997358322143555, 0.1430458277463913, 0.09985470771789551, 0.09985470771789551, 0.09932637959718704, 0.09893012791872025], "val_loss": [2.2752597332000732, 2.2131261825561523, 1.8212484121322632, 2.3044986724853516, 2.303307294845581, 2.3031296730041504, 2.3027827739715576, 2.302640676498413], "val_accuracy": [0.12999999523162842, 0.20366667211055756, 0.33399999141693115, 0.09666666388511658, 0.09666666388511658, 0.09833333641290665, 0.09666666388511658, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [9, 6, 5, 1, 5, 1, 1, 2, 8, 5, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 0, 0, 2, 0, 0, 1, 3], [24, 98, 97, 0, 80], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 5, 2, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 1, 9, 2, 3, 4, 0, 2, 0, 8, 6, 2, 2, 4, 2, 5, 2, 0, 6, 3, 8, 2, 0, 0, 8, 6, 2, 2, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 0, 3, 2, 3, 2, 3, 3, 3, 3, 3, 1, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.27228569984436035, "mapping_values": [1, 1, 1, 0, 1, 30, 19, 11, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.negative(tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(beta, grad))), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3148114681243896, 2.256249189376831, 2.2928807735443115, 2.356121778488159, 2.3042283058166504, 2.302924394607544, 2.3029706478118896, 2.303002119064331], "accuracy": [0.21054022014141083, 0.15097081661224365, 0.12151630967855453, 0.17461365461349487, 0.09668471664190292, 0.09919429570436478, 0.09602430462837219, 0.09787346422672272], "val_loss": [2.286785840988159, 2.3035025596618652, 2.1722817420959473, 2.3042519092559814, 2.302776575088501, 2.3026034832000732, 2.302692174911499, 2.3026466369628906], "val_accuracy": [0.1576666682958603, 0.10366666316986084, 0.2653333246707916, 0.10233332961797714, 0.09666666388511658, 0.09933333098888397, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [2, 3, 8, 2, 2, 1, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 3, 0, 0, 1, 3], [85, 5, 81, 3, 41, 46], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.25342857837677, "mapping_values": [1, 23, 16, 7, 5, 3, 1, 2, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.negative(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.1089813709259033, 2.30464768409729, 2.3037683963775635, 2.303255081176758, 2.3031225204467773, 2.301572799682617, 2.52523136138916, 2.3037993907928467, 2.303124189376831, 2.3028573989868164, 2.3030660152435303], "accuracy": [0.18570862710475922, 0.10500594228506088, 0.09536388516426086, 0.0944393053650856, 0.09774138033390045, 0.11094967275857925, 0.17263241112232208, 0.09998679161071777, 0.09721305221319199, 0.09932637959718704, 0.09536388516426086], "val_loss": [2.307206392288208, 2.3034613132476807, 2.3029234409332275, 2.302612066268921, 2.302455186843872, 2.293813705444336, 2.3042984008789062, 2.3027684688568115, 2.3028101921081543, 2.302778720855713, 2.302664041519165], "val_accuracy": [0.09833333641290665, 0.09433333575725555, 0.09433333575725555, 0.10333333164453506, 0.09433333575725555, 0.25200000405311584, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.10066666454076767, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 6, 3, 1, 3, 1, 1, 2, 8, 8, 2, 0, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [1, 0, 2, 0, 3, 0, 0, 2, 3, 2], [24, 98, 98, 0, 39], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 0, 2, 3, 1, 1, 2, 0, 2, 3, 2, 3, 3, 1, 3, 2, 0, 0, 2, 5, 1, 5, 5, 3, 2, 0, 2, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 2, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24400000274181366, "mapping_values": [1, 21, 11, 10, 4, 1, 0, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(grad, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.499950885772705, 2.24027156829834, 2.537058115005493, 2.393770217895508, 2.2333436012268066, 2.3007187843322754, 2.303982973098755, 2.3036110401153564, 2.3033368587493896, 2.303011655807495], "accuracy": [0.18570862710475922, 0.1534803807735443, 0.16457535326480865, 0.14132875204086304, 0.14212125539779663, 0.1274600476026535, 0.09906221181154251, 0.09840179979801178, 0.09840179979801178, 0.09140139818191528], "val_loss": [2.2962489128112793, 3.4491777420043945, 2.30737042427063, 2.3048994541168213, 2.110905408859253, 2.3052303791046143, 2.3029510974884033, 2.3026607036590576, 2.3026649951934814, 2.3025739192962646], "val_accuracy": [0.1326666623353958, 0.1889999955892563, 0.09966666996479034, 0.10300000011920929, 0.24799999594688416, 0.09966666996479034, 0.10133333504199982, 0.10066666454076767, 0.09566666930913925, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 6, 8, 2, 5, 2, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 2, 1, 2, 3, 0, 0, 0, 3], [24, 98, 97, 0, 98], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 0, 0, 5, 2, 1, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 8, 2, 2, 6, 3, 8, 2, 6, 0, 8, 1, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 3, 1, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.20885714888572693, "mapping_values": [1, 19, 13, 6, 2, 79, 49, 30, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(grad, alpha), tf.math.subtract(tf.math.sqrt(grad), tf.math.sqrt(tf.math.negative(tf.math.square(grad)))))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.math.add(tf.math.subtract(tf.math.square(tf.math.negative(grad)), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(beta)))))), tf.math.multiply(tf.math.sqrt(tf.math.square(grad)), tf.math.multiply(beta, tf.math.multiply(grad, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.pow(beta, tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.negative(grad)))), beta), tf.math.sqrt(tf.math.subtract(grad, alpha))), grad), tf.math.add(alpha, grad))), tf.math.square(grad)), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3869669437408447, 2.2582788467407227, 2.4847381114959717, 2.8545234203338623, 2.311521530151367, 2.304699420928955, 2.3034725189208984, 2.3029730319976807], "accuracy": [0.23259806632995605, 0.15031039714813232, 0.1612732857465744, 0.16629242897033691, 0.09919429570436478, 0.09496764093637466, 0.09853387624025345, 0.10038304328918457], "val_loss": [2.3278748989105225, 2.21502947807312, 2.24996280670166, 2.3177249431610107, 2.3047194480895996, 2.3028647899627686, 2.302478790283203, 2.3024117946624756], "val_accuracy": [0.0989999994635582, 0.10366666316986084, 0.21266666054725647, 0.10133333504199982, 0.10133333504199982, 0.10199999809265137, 0.10333333164453506, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 9, 1, 5, 0, 0, 2, 8, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [1, 0, 0, 2, 3, 0, 0, 2, 3], [24, 98, 97, 0, 98], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [88, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.20571428537368774, "mapping_values": [1, 8, 5, 3, 3, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.add(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.320524215698242, 2.2315776348114014, 2.453786611557007, 2.3038511276245117, 2.304410696029663, 2.303917407989502, 2.7126359939575195], "accuracy": [0.20116232335567474, 0.17170783877372742, 0.14898955821990967, 0.10157178342342377, 0.18016114830970764, 0.09906221181154251, 0.14463083446025848], "val_loss": [2.267040729522705, 2.1113717555999756, 2.3092665672302246, 2.2959952354431152, 2.3054134845733643, 2.296369791030884, 2.467621326446533], "val_accuracy": [0.10766666382551193, 0.21299999952316284, 0.0976666659116745, 0.10433333367109299, 0.10000000149011612, 0.11033333092927933, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 6, 9, 1, 5, 0, 0, 6, 8, 9, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 1, 0, 0, 3, 0, 0, 2, 3], [24, 98, 14, 0, 98], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [92, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 5, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.12800000607967377, "mapping_values": [1, 8, 5, 3, 2, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(alpha))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [11.155698776245117, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21265354752540588, 0.11227050423622131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.371872901916504, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13366666436195374, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 2, 1, 6, 1, 6, 2, 8, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 0, 0, 2, 0, 0, 1, 3, 3], [24, 98, 97, 57, 31], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 1, 2, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 5, 1, 0, 1, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.042410135269165, 2.3052477836608887, 2.3034520149230957, 2.3031740188598633, 2.3030834197998047, 2.3029472827911377], "accuracy": [0.18742570281028748, 0.09747721254825592, 0.09602430462837219, 0.0956280529499054, 0.09628847241401672, 0.09219389408826828], "val_loss": [2.306112051010132, 2.303098678588867, 2.3026018142700195, 2.3025929927825928, 2.3024966716766357, 2.302574634552002], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]