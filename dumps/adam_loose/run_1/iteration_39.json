[{"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 2, 0, 5, 2, 2, 5, 1, 6, 4, 5, 2, 9, 3, 1, 1, 3, 6, 0, 4, 8, 3, 2, 6, 6, 5, 3, 7, 5], [5, 0, 7, 5, 7, 2, 3, 4, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2985714375972748, "mapping_values": [1, 5, 3, 2, 1, 8, 5, 3, 1, 51, 30, 21, 3, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), tf.math.subtract(beta, sigma)), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.pow(beta, sigma)), grad))), sigma))), tf.math.sqrt(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(sigma), grad))), tf.math.multiply(tf.math.add(grad, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3414578437805176, 2.262403726577759, 2.238232374191284, 2.2386069297790527, 2.296318292617798, 2.181572198867798, 2.2980499267578125, 2.2180018424987793, 2.298825740814209, 2.3046791553497314, 2.3032941818237305, 2.3041369915008545], "accuracy": [0.2024831622838974, 0.17751948535442352, 0.1670849323272705, 0.1558578759431839, 0.12336547672748566, 0.2102760523557663, 0.11900673806667328, 0.26376965641975403, 0.11530841141939163, 0.09787346422672272, 0.10276053100824356, 0.09813763201236725], "val_loss": [2.289931535720825, 2.2181270122528076, 2.2515158653259277, 2.3023500442504883, 2.144835948944092, 2.3056740760803223, 2.1638340950012207, 2.252532482147217, 2.3033316135406494, 2.3028361797332764, 2.302609920501709, 2.3026158809661865], "val_accuracy": [0.09866666793823242, 0.2006666660308838, 0.24833333492279053, 0.09700000286102295, 0.24066667258739471, 0.10100000351667404, 0.29766666889190674, 0.16599999368190765, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 7, 4, 9, 8, 2, 0, 5, 5, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [89, 30, 87, 88, 37], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 0, 2, 0, 5, 8, 2, 5, 9, 5, 1, 8, 2, 1, 9, 1], [5, 0, 7, 5, 1, 2, 3, 1, 4], [0, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2557142972946167, "mapping_values": [1, 4, 3, 1, 2, 8, 5, 3, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), beta), beta), tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(grad), tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3843419551849365, 2.313415765762329, 2.307438373565674, 2.3315587043762207, 2.314833164215088, 2.2705752849578857], "accuracy": [0.204860657453537, 0.15414080023765564, 0.10315678268671036, 0.20433232188224792, 0.108440101146698, 0.1554616242647171], "val_loss": [2.2403438091278076, 2.3119077682495117, 2.2985453605651855, 2.373595952987671, 2.2733771800994873, 2.304476261138916], "val_accuracy": [0.2540000081062317, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.15333333611488342, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 3, 2, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 0, 2, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 2, 1], [3, 5, 7, 5, 4, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.1225714311003685, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 0, 24, 16, 8, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(sigma), tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(grad, grad), tf.math.subtract(beta, sigma)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [144.89645385742188, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18531237542629242, 0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22142290.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12999999523162842, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 6, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 2, 3], [5, 5, 7, 5, 7, 1, 3, 4, 4], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.11742857098579407, "mapping_values": [1, 7, 3, 4, 1, 1, 0, 1, 0, 23, 15, 8, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), grad), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(grad, tf.math.multiply(grad, alpha))))))), tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3379.100830078125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19363360106945038, 0.109232597053051, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16295828.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12066666781902313, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [3, 7, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 1, 4, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 7, 3], [5, 5, 7, 5, 7, 1, 3, 1, 4], [66, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 1, 7, 3, 7, 6, 0, 2, 0], [61]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 8, 5, 3, 4, 14, 10, 4, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.math.negative(grad), tf.math.square(tf.math.sqrt(tf.math.square(grad))))), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033790588378906, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 6, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 0, 7, 3], [5, 5, 7, 5, 7, 1, 2, 1, 4], [39, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [69, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 1, 0, 1, 0, 14, 10, 4, 1, 16, 8, 8, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, grad))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [3, 5, 7, 5, 4, 2, 3, 1], [28, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [10]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 5, 2, 3, 1, 2, 2, 0, 1, 15, 8, 7, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 6, 7, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 7, 3], [3, 5, 7, 5, 4, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 7, 5, 2, 1, 23, 15, 8, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(grad, tf.math.multiply(grad, beta))))))), tf.math.add(sigma, alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.319078207015991, 2.3099989891052246, 2.59149169921875, 2.3053040504455566, 2.3037946224212646, 2.3034324645996094, 2.3032004833221436, 2.3031680583953857, 2.3029770851135254], "accuracy": [0.2094835489988327, 0.18214239180088043, 0.10460969805717468, 0.10210011899471283, 0.09496764093637466, 0.09047681838274002, 0.10091137140989304, 0.09985470771789551, 0.09694888442754745], "val_loss": [2.3369388580322266, 4.361025333404541, 2.306492567062378, 2.303497552871704, 2.3029561042785645, 2.302802324295044, 2.3026089668273926, 2.3027334213256836, 2.302762746810913], "val_accuracy": [0.09933333098888397, 0.09700000286102295, 0.09799999743700027, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 4, 3, 8, 0], [1, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [89, 68, 13, 88, 37], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 8, 0, 5, 8, 2, 5, 9, 8, 4, 0, 0, 3, 2, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 12, 10, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.6140241622924805, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16021661460399628, 0.08598599582910538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [91.67426300048828, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01666666753590107, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 3, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 7, 3, 7, 2, 4, 3, 6, 1, 7, 5, 8, 1, 4, 2, 4, 0, 3, 6, 1, 2, 9, 8, 1, 0, 4, 1, 7, 7, 5, 4], [3, 0, 7, 5, 4, 3, 3, 1, 3, 7, 4, 6, 5, 5, 7, 1, 6, 1, 1, 1, 4, 7, 2, 0, 7, 7, 7, 0, 1], [19, 51, 29, 77, 23], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 5, 2, 3, 1, 73, 44, 29, 5, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, beta), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(sigma, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(grad, tf.math.add(grad, tf.math.multiply(tf.math.add(grad, sigma), sigma))), alpha)))))))), tf.math.add(sigma, tf.math.pow(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.square(grad), grad), tf.math.sqrt(tf.math.subtract(grad, grad))), tf.math.pow(tf.math.add(tf.math.pow(tf.math.negative(grad), alpha), tf.math.multiply(grad, alpha)), alpha)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(grad))))))), tf.math.subtract(tf.math.negative(tf.math.pow(beta, tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2957.52392578125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1814819723367691, 0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [573408256.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07466666400432587, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]