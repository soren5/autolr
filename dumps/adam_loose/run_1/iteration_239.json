[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 0, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 5, 4, 6, 2, 1, 0, 5, 2, 1, 0, 1, 2, 9, 3, 0, 5, 2, 2, 5, 4, 1, 3, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 2, 3, 4, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.4342857003211975, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2258291244506836, 2.361668109893799, 2.299670934677124, 2.4763247966766357, 2.3038747310638428, 2.2851240634918213], "accuracy": [0.21635186672210693, 0.16034869849681854, 0.136045441031456, 0.13697001338005066, 0.1026284471154213, 0.14489498734474182], "val_loss": [1.6507115364074707, 2.308286666870117, 2.9247629642486572, 2.304046630859375, 2.3003463745117188, 2.1468491554260254], "val_accuracy": [0.41733333468437195, 0.10000000149011612, 0.22300000488758087, 0.10400000214576721, 0.10400000214576721, 0.3466666638851166]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 9, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [0, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.31685712933540344, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.395495653152466, 2.4704134464263916, 2.3309521675109863, 2.309380054473877, 2.305100917816162, 2.2946066856384277], "accuracy": [0.19931316375732422, 0.18095363676548004, 0.16497160494327545, 0.09813763201236725, 0.09298639744520187, 0.13076211512088776], "val_loss": [2.268756628036499, 2.3066413402557373, 2.314101457595825, 2.3038113117218018, 2.300525665283203, 2.3049938678741455], "val_accuracy": [0.33399999141693115, 0.10133333504199982, 0.09733333438634872, 0.09733333438634872, 0.13899999856948853, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 0, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 4, 6, 8, 9, 0, 6, 2, 1, 3, 1, 2, 6, 3, 1, 5, 2, 8, 5, 4, 1, 3, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 4, 4, 2, 5, 4, 4, 2, 4, 1, 7, 4, 0, 7, 4, 4, 4, 6, 3, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2557142972946167, "mapping_values": [1, 3, 2, 1, 0, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3042688369750977, 2.2683069705963135, 2.1188549995422363, 2.326826333999634, 2.2912559509277344, 2.1364071369171143], "accuracy": [0.19284109771251678, 0.18174614012241364, 0.24659886956214905, 0.13749834895133972, 0.2222955971956253, 0.20776647329330444], "val_loss": [2.2962193489074707, 2.0778090953826904, 2.308589458465576, 2.3346974849700928, 2.3098340034484863, 2.292499542236328], "val_accuracy": [0.2566666603088379, 0.19200000166893005, 0.09666666388511658, 0.10166666656732559, 0.09666666388511658, 0.11599999666213989]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 8, 9, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 5, 0, 6, 2, 3, 2, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 4, 4, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.20800000429153442, "mapping_values": [1, 4, 2, 2, 0, 7, 4, 3, 0, 35, 20, 15, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(grad, tf.math.multiply(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.multiply(grad, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.math.multiply(sigma, grad)), tf.math.subtract(beta, grad)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.sqrt(grad), beta)), tf.math.sqrt(grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.347317695617676, 2.3760716915130615, 2.346672296524048, 2.3049120903015137, 2.3033788204193115, 2.3030846118927], "accuracy": [0.18095363676548004, 0.16774533689022064, 0.13512085378170013, 0.09879804402589798, 0.1018359512090683, 0.09800554811954498], "val_loss": [2.298792600631714, 2.3000142574310303, 2.3058831691741943, 2.3031933307647705, 2.3026881217956543, 2.302278757095337], "val_accuracy": [0.20533333718776703, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.09799999743700027, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 6, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 4, 6, 2, 1, 0, 6, 2, 3, 3, 1, 2, 6, 3, 1, 5, 2, 8, 5, 4, 1, 3, 3, 6, 2, 5, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 1, 0, 3, 4, 3, 0, 1, 2, 5, 1, 1, 0, 4, 6, 0, 0, 7, 2, 0, 4, 3, 0, 6, 2, 0, 0, 4, 1, 4, 5, 1, 1], [42, 51, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2054285705089569, "mapping_values": [1, 9, 7, 2, 1, 1, 0, 1, 0, 62, 35, 27, 10, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.square(tf.math.sqrt(tf.math.square(tf.math.subtract(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.multiply(tf.math.multiply(grad, tf.math.subtract(sigma, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.sqrt(alpha), beta))), tf.math.square(tf.math.pow(grad, tf.math.subtract(alpha, alpha)))), tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, beta)))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.square(grad))), tf.math.pow(sigma, tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.multiply(beta, tf.math.add(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3143436908721924, 2.246413469314575, 2.3000245094299316, 2.3584511280059814, 2.3037819862365723, 2.303307056427002], "accuracy": [0.20142649114131927, 0.2078985571861267, 0.17500990629196167, 0.10157178342342377, 0.09945846349000931, 0.0944393053650856], "val_loss": [2.29406476020813, 2.300203800201416, 2.671651601791382, 2.3040711879730225, 2.3025100231170654, 2.302122116088867], "val_accuracy": [0.20100000500679016, 0.10233332961797714, 0.09933333098888397, 0.1003333330154419, 0.10199999809265137, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 4, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [0, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 2, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 3, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.19028571248054504, "mapping_values": [1, 5, 3, 2, 1, 4, 2, 2, 0, 55, 30, 25, 2, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.pow(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.math.multiply(grad, tf.math.subtract(beta, tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(grad, beta)), tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.sqrt(grad), beta)), tf.math.sqrt(grad)), grad), grad), tf.math.square(tf.math.pow(tf.math.subtract(grad, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.pow(grad, tf.math.pow(grad, grad))), grad))), tf.math.negative(grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1252.0396728515625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19231277704238892, 0.11081759631633759, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [18284898.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.18766666948795319, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 9, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [0, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 4, 6, 0, 1, 0, 6, 2, 1, 3, 1, 2, 6, 3, 3, 2, 2, 8, 5, 4, 1, 3, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 4, 2, 4, 4, 2, 4, 1, 0, 2, 1, 4, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.1128571406006813, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 0, 32, 17, 15, 2, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, beta), grad), tf.math.add(grad, tf.math.divide_no_nan(beta, tf.math.multiply(grad, tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), beta), alpha)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3538687229156494, 2.3424880504608154, 2.3040835857391357, 2.3031718730926514, 2.3030264377593994, 2.3030006885528564], "accuracy": [0.1868973672389984, 0.15532954037189484, 0.09694888442754745, 0.09047681838274002, 0.09457138925790787, 0.09536388516426086], "val_loss": [2.279831886291504, 2.3048627376556396, 2.303030490875244, 2.3027145862579346, 2.3026375770568848, 2.3026673793792725], "val_accuracy": [0.11533333361148834, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 0, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 2, 4, 8, 2, 1, 0, 5, 2, 1, 0, 1, 2, 1, 3, 0, 5, 2, 8, 5, 4, 1, 3, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 4, 5, 1, 4, 2, 4, 1, 7, 4, 0, 7, 4, 4, 4, 6, 3, 6, 1, 4, 3, 3, 2, 1], [64, 51, 29, 45, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 0, 1, 0, 1, 0, 34, 20, 14, 1, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.math.negative(alpha), tf.math.square(grad)))), tf.math.add(tf.math.subtract(beta, tf.math.negative(sigma)), tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(grad, grad))), grad), alpha), grad), beta))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303982734680176, 2.3030779361724854, 2.3029747009277344, 2.302995443344116, 2.3029487133026123, 2.303091526031494, 2.3029232025146484], "accuracy": [0.09457138925790787, 0.09430722147226334, 0.09813763201236725, 0.09589222073554993, 0.09628847241401672, 0.09285431355237961, 0.09272222965955734], "val_loss": [2.3026392459869385, 2.3025643825531006, 2.302548408508301, 2.3026583194732666, 2.302588939666748, 2.3025808334350586, 2.3026084899902344], "val_accuracy": [0.10000000149011612, 0.10300000011920929, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10300000011920929, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [3, 6, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 4, 4, 2, 3, 0, 8, 2, 1, 2, 3, 5, 6, 3, 1, 5, 2, 8, 5, 4, 8, 0, 2, 6, 1, 2, 8, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 2, 3, 4, 2, 4, 4, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 3, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [62, 87, 37, 77, 84, 13, 68, 53, 85, 69, 68], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 0, 1, 0, 1, 0, 49, 29, 20, 4, 3, 1, 2, 1], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.sqrt(grad))), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(beta, grad), tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), tf.math.add(sigma, tf.math.subtract(grad, beta))), tf.math.add(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.square(grad)), grad)), tf.math.pow(tf.math.sqrt(beta), grad)), alpha), grad)), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))), alpha)), tf.math.subtract(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), sigma)), tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3039228916168213, 2.303039073944092, 2.3029894828796387, 2.3028953075408936, 2.30295991897583, 2.302854299545288, 2.3029515743255615, 2.303056001663208, 2.3030145168304443, 2.3029892444610596, 2.3031423091888428, 2.302987813949585, 2.302865743637085], "accuracy": [0.0948355570435524, 0.09536388516426086, 0.09351472556591034, 0.09721305221319199, 0.09509972482919693, 0.09655263274908066, 0.09826971590518951, 0.09496764093637466, 0.09919429570436478, 0.09325055778026581, 0.09008057415485382, 0.09655263274908066, 0.09576013684272766], "val_loss": [2.302670478820801, 2.302726984024048, 2.3026037216186523, 2.302664279937744, 2.302565336227417, 2.3025965690612793, 2.3026070594787598, 2.3026649951934814, 2.3025929927825928, 2.302549362182617, 2.302569627761841, 2.302527666091919, 2.3025856018066406], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10266666859388351, 0.10266666859388351, 0.10166666656732559, 0.09933333098888397, 0.10266666859388351, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 0, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 4, 6, 2, 1, 0, 6, 2, 9, 3, 1, 2, 6, 3, 1, 5, 2, 8, 5, 4, 1, 3, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 8, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 4, 4, 2, 5, 4, 4, 2, 4, 1, 7, 4, 0, 7, 4, 4, 4, 6, 3, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3042824268341064, 2.302924871444702, 2.3028645515441895, 2.3030953407287598, 2.303115129470825, 2.3030917644500732, 2.3029367923736572], "accuracy": [0.09457138925790787, 0.09642054885625839, 0.09906221181154251, 0.09866596013307571, 0.09642054885625839, 0.09113723784685135, 0.09668471664190292], "val_loss": [2.302584409713745, 2.3025686740875244, 2.302659749984741, 2.3026387691497803, 2.302701711654663, 2.3027007579803467, 2.30269193649292], "val_accuracy": [0.10199999809265137, 0.10400000214576721, 0.09933333098888397, 0.10000000149011612, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582]}}]