[{"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 4, 2, 7, 0, 0, 9, 3, 8], [3, 2, 1, 1, 0, 0, 0, 2], [38, 18, 26], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.628000020980835, "mapping_values": [1, 9, 4, 5, 1, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(alpha, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7244107723236084, 2.320079803466797, 2.291764736175537, 2.252943754196167, 2.304049015045166, 2.3026905059814453, 2.289952278137207, 2.1955950260162354, 2.19441556930542, 2.1089935302734375, 2.3128199577331543, 2.109757423400879, 1.8425817489624023, 1.700419306755066, 1.656662940979004, 1.9469993114471436, 1.4519037008285522, 1.332133412361145, 1.2722657918930054, 2.9925119876861572, 2.32641339302063], "accuracy": [0.17091533541679382, 0.09549596905708313, 0.12217672914266586, 0.1752740740776062, 0.0944393053650856, 0.10236428678035736, 0.13049794733524323, 0.1868973672389984, 0.20974771678447723, 0.24303261935710907, 0.11174217611551285, 0.23101307451725006, 0.4091929793357849, 0.43323206901550293, 0.44908201694488525, 0.36362436413764954, 0.5061418414115906, 0.5340113639831543, 0.5535596609115601, 0.17131158709526062, 0.10011887550354004], "val_loss": [2.330842971801758, 2.300945520401001, 2.187225580215454, 2.305896759033203, 2.303039073944092, 2.301670551300049, 2.064509153366089, 1.825250267982483, 1.8877023458480835, 2.2558460235595703, 2.3016817569732666, 1.579743504524231, 1.8646146059036255, 1.3591541051864624, 1.5681709051132202, 1.2142287492752075, 1.181996464729309, 1.3473756313323975, 1.9226365089416504, 2.340794563293457, 2.3073575496673584], "val_accuracy": [0.09933333098888397, 0.13766667246818542, 0.35633334517478943, 0.09233333170413971, 0.10100000351667404, 0.09266666322946548, 0.0989999994635582, 0.4399999976158142, 0.367333322763443, 0.27033331990242004, 0.10733333230018616, 0.5496666431427002, 0.39366665482521057, 0.5336666703224182, 0.4466666579246521, 0.628333330154419, 0.5996666550636292, 0.4699999988079071, 0.3293333351612091, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 2, 7, 0, 3, 9, 3, 8], [3, 2, 1, 0, 0, 0, 0, 2], [9, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 3, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2825714349746704, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, alpha)), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3862974643707275, 2.304839611053467, 2.294158458709717, 4.84462833404541, 2.3447916507720947, 2.2963743209838867, 2.2753005027770996, 2.2686219215393066], "accuracy": [0.1938977688550949, 0.09800554811954498, 0.12178047746419907, 0.20182274281978607, 0.10011887550354004, 0.11240258812904358, 0.16259410977363586, 0.1352529376745224], "val_loss": [2.3037214279174805, 2.301530361175537, 2.0739779472351074, 2.5016965866088867, 2.2991418838500977, 2.2831690311431885, 2.283220052719116, 2.2135746479034424], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.28466665744781494, 0.09700000286102295, 0.09866666793823242, 0.10899999737739563, 0.12300000339746475, 0.18833333253860474]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [4, 7, 6, 7, 4, 3, 0, 3, 8], [3, 2, 3, 3, 0, 0, 0, 2], [9, 66], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [6, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.23514285683631897, "mapping_values": [1, 5, 2, 3, 0, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, grad), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3052496910095215, 2.783073663711548, 2.3069324493408203, 2.302271604537964, 2.2555088996887207, 2.2645175457000732, 2.3159823417663574, 2.303485870361328, 2.3034300804138184], "accuracy": [0.19931316375732422, 0.0944393053650856, 0.10011887550354004, 0.10302469879388809, 0.1578391194343567, 0.15810328722000122, 0.09853387624025345, 0.1014397069811821, 0.09536388516426086], "val_loss": [3.722630500793457, 2.3094065189361572, 2.3031623363494873, 2.2971813678741455, 2.302908182144165, 2.3770148754119873, 2.3042571544647217, 2.303013324737549, 2.302873134613037], "val_accuracy": [0.12266666442155838, 0.10233332961797714, 0.10233332961797714, 0.23233333230018616, 0.09799999743700027, 0.10066666454076767, 0.0989999994635582, 0.0989999994635582, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [3, 7, 2, 7, 0, 7, 9, 3, 8], [3, 2, 1, 1, 1, 0, 0, 2], [9, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1, 5, 0, 5, 4, 7, 1, 1, 2, 4, 4, 0, 7, 5, 1, 0, 3, 5, 5, 0, 3, 6], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.17142857611179352, "mapping_values": [1, 12, 7, 5, 1, 1, 0, 1, 0, 82, 50, 32, 6, 1, 0, 1, 0], "tree_depth": 42, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, alpha)), tf.math.negative(alpha)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(grad), beta), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.math.subtract(grad, beta), tf.math.square(sigma)))), tf.math.subtract(tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(alpha)), tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.pow(alpha, tf.math.negative(beta)), tf.math.add(grad, grad))), tf.math.add(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(grad), grad)))))), tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), sigma), tf.math.multiply(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), sigma))), grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3775644302368164, 2.269179582595825, 2.2116565704345703, 2.3320488929748535, 2.276139259338379, 2.3051369190216064, 2.303354024887085], "accuracy": [0.19138818979263306, 0.1776515692472458, 0.20895522832870483, 0.12270505726337433, 0.17078325152397156, 0.09959053993225098, 0.10196803510189056], "val_loss": [2.302107095718384, 2.27999210357666, 2.2951910495758057, 2.3023791313171387, 2.3064284324645996, 2.3028290271759033, 2.302628517150879], "val_accuracy": [0.15433333814144135, 0.1743333339691162, 0.09833333641290665, 0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 7, 6, 9, 5, 3, 9, 3, 8], [3, 2, 3, 1, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [0, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.12200000137090683, "mapping_values": [1, 8, 5, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad), tf.math.square(grad)), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [8.558258056640625, Infinity, 2.3230435848236084, 2.306837558746338, 2.3036537170410156, 2.3030712604522705], "accuracy": [0.17553824186325073, 0.11042134463787079, 0.09998679161071777, 0.1010434553027153, 0.09998679161071777, 0.09906221181154251], "val_loss": [51.67611312866211, 2.340985059738159, 2.310826063156128, 2.3045220375061035, 2.303001880645752, 2.3027286529541016], "val_accuracy": [0.11599999666213989, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 7, 6, 2, 5, 3, 9, 3, 8], [3, 2, 2, 1, 1, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [2, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0, 16, 8, 8, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.math.multiply(grad, alpha)), alpha))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 7, 6, 7, 0, 8, 9, 3, 8], [3, 2, 3, 3, 0, 0, 0, 2], [9, 66], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 4, 3, 2, 6, 4, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [5, 7, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9361345767974854, 2.3410933017730713, 2.303541898727417, 2.303190231323242, 2.3031086921691895, 2.30299973487854], "accuracy": [0.1982565075159073, 0.10606260597705841, 0.10117553919553757, 0.0936468094587326, 0.09932637959718704, 0.09509972482919693], "val_loss": [2.47263240814209, 2.3034119606018066, 2.3027689456939697, 2.3027617931365967, 2.3027031421661377, 2.302651882171631], "val_accuracy": [0.10133333504199982, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 3, 6, 0, 0, 9, 3, 9, 4, 2, 4, 4, 2, 3, 1, 8, 6, 6, 4, 4, 6, 9, 1, 1], [3, 2, 1, 1, 0, 0, 0, 2], [23, 18, 26], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 6, 2, 6, 4, 8, 1, 4, 5, 1, 8, 1, 2, 6, 3, 4, 0, 6, 2, 0, 8, 9, 7, 3, 6, 5, 1, 4, 3, 2, 2, 8, 1, 4, 4, 4, 7, 7, 5, 3, 7, 5, 2, 6, 3, 5, 8, 5, 0, 5, 2, 1, 8, 3, 5, 0, 3, 1, 1, 6, 9, 1, 8, 1], [4, 2, 4, 5, 7, 2, 3, 1, 2, 4, 1, 5, 7, 5, 2, 4, 5, 7, 0, 1, 4, 1, 1, 2, 6, 0, 2, 2, 7, 4, 3, 5, 7, 3, 2, 7, 2, 5, 1, 5, 1, 5, 4], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 108, 65, 43, 4, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.negative(alpha))), alpha), tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, beta), tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.math.square(tf.math.subtract(beta, tf.math.sqrt(tf.math.subtract(sigma, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.sqrt(alpha)), grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad))))))), tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.pow(beta, tf.math.multiply(grad, grad)), tf.math.add(grad, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha)))), grad), tf.math.sqrt(alpha)))))), tf.math.subtract(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(alpha, beta), tf.math.add(tf.math.square(tf.math.multiply(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.square(tf.math.sqrt(beta)), tf.math.square(grad))))), tf.math.negative(grad))), sigma)), grad), tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.square(sigma), beta)), tf.math.negative(grad))))), tf.math.multiply(beta, tf.math.subtract(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.sqrt(grad)))), alpha)))))), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2847.256591796875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19865275919437408, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3233030.25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08633333444595337, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [3, 7, 2, 7, 0, 0, 9, 3, 8], [3, 2, 2, 3, 2, 0, 0, 2, 1, 1, 1, 0, 3, 3, 0, 1, 1, 0], [9, 18, 26], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 46], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 4, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [1, 7, 4, 5, 7, 2, 4, 1, 2, 5, 1], [68, 51, 29, 6, 84, 13, 74, 53], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, grad), grad), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3369696140289307, 3.976489305496216, 2.308457374572754, 2.3037588596343994, 2.250430107116699, 2.4222254753112793, 2.3079540729522705, 2.304035186767578, 2.3032760620117188], "accuracy": [0.19957733154296875, 0.1142517477273941, 0.10302469879388809, 0.10527011007070541, 0.16100911796092987, 0.16933034360408783, 0.09972262382507324, 0.1014397069811821, 0.09470347315073013], "val_loss": [2.397001028060913, 2.3048930168151855, 2.302894115447998, 2.292853593826294, 2.304579257965088, 2.311990261077881, 2.304407835006714, 2.303037643432617, 2.302638292312622], "val_accuracy": [0.08699999749660492, 0.09933333098888397, 0.10100000351667404, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [7, 7, 3, 6, 0, 5, 9, 3, 9, 4, 2, 4, 4, 2, 3, 1, 8, 6, 6, 4, 4, 6, 9, 1, 1], [3, 2, 1, 2, 0, 0, 0, 2], [9, 18, 26], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [1, 0, 0, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 4, 4, 2, 6, 4, 8, 1, 1, 5, 6, 8, 6, 2, 6, 3, 7, 3, 1, 5, 6, 6, 4, 2, 7, 2, 6, 2, 2, 3, 8, 6, 7, 4, 9, 6, 6, 3, 5, 4, 3, 9, 2, 1, 0, 9, 1, 6, 4, 6, 5, 5, 3, 1, 8, 9, 8, 5, 9, 5, 3], [6, 2, 4, 4, 7, 4, 3, 1, 2, 4, 1, 4, 0, 1, 0, 0, 3, 7, 0, 4, 2, 5, 5, 0, 1, 6, 4, 4, 7, 1, 4, 3, 6, 5, 6, 0, 5, 7, 4, 1, 0], [68, 28, 54, 6, 84, 13, 74, 53, 57, 64, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [7, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.09828571230173111, "mapping_values": [1, 11, 7, 4, 1, 2, 1, 1, 0, 98, 60, 38, 11, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.negative(alpha)), grad), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.pow(grad, beta), tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, grad), tf.math.square(sigma)))), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.divide_no_nan(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.math.divide_no_nan(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.add(grad, tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), beta)), tf.math.divide_no_nan(grad, grad))), tf.math.add(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(tf.math.pow(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.square(grad)))), alpha), tf.math.multiply(tf.math.subtract(grad, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(sigma)))))), grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [13596952.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19640734791755676, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [268537462784.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]