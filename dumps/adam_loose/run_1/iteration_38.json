[{"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 8, 0, 5, 8, 2, 5, 9, 5, 4, 0, 0, 3, 2, 5], [3, 5, 7, 5, 4, 2, 3, 1], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.40942856669425964, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 12, 10, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), sigma))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.55047607421875, 2.3061368465423584, 2.65425181388855, 2.252207040786743, 2.337613821029663, 2.2932896614074707, 2.1705517768859863, 2.221787929534912, 2.3047544956207275, 2.297879457473755, 1.9339430332183838, 1.8430812358856201], "accuracy": [0.22440892457962036, 0.10117553919553757, 0.17963281273841858, 0.1530841439962387, 0.13261127471923828, 0.13617752492427826, 0.2211068570613861, 0.15836745500564575, 0.09826971590518951, 0.11755382269620895, 0.35385021567344666, 0.3943996727466583], "val_loss": [2.309877395629883, 2.299603223800659, 2.31638765335083, 2.3109066486358643, 2.298046588897705, 2.297625780105591, 1.9397542476654053, 2.3056774139404297, 2.301863193511963, 2.2543327808380127, 2.0293140411376953, 1.9782731533050537], "val_accuracy": [0.1003333330154419, 0.10199999809265137, 0.10000000149011612, 0.10066666454076767, 0.1459999978542328, 0.10266666859388351, 0.398333340883255, 0.1003333330154419, 0.14033333957195282, 0.3059999942779541, 0.3173333406448364, 0.3083333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 1, 7, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 7, 3], [5, 5, 7, 5, 7, 1, 3, 1, 4], [19, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.27799999713897705, "mapping_values": [1, 4, 3, 1, 2, 8, 5, 3, 2, 23, 15, 8, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.subtract(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(grad, tf.math.multiply(grad, alpha))))))), tf.math.add(sigma, alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.34747314453125, 2.3002963066101074, 2.286043405532837, 2.4494123458862305, 2.308002471923828, 2.3039357662200928, 2.2986114025115967, 2.245004892349243, 2.303664445877075, 2.303542137145996, 2.303147315979004, 2.3032984733581543], "accuracy": [0.19191652536392212, 0.1562541276216507, 0.1795007288455963, 0.12376172095537186, 0.09721305221319199, 0.1002509593963623, 0.11042134463787079, 0.16391493380069733, 0.09932637959718704, 0.0956280529499054, 0.09760929644107819, 0.09509972482919693], "val_loss": [2.2974917888641357, 2.286025285720825, 2.2898178100585938, 2.314079999923706, 2.3042314052581787, 2.302186965942383, 2.1967544555664062, 2.3036322593688965, 2.3026340007781982, 2.3025615215301514, 2.3027331829071045, 2.3026936054229736], "val_accuracy": [0.13566666841506958, 0.1756666600704193, 0.12933333218097687, 0.10066666454076767, 0.10066666454076767, 0.10266666859388351, 0.2709999978542328, 0.10066666454076767, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 4, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 2, 3, 4, 5, 1], [89, 30, 87, 88, 37], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 0, 2, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 9, 1], [5, 5, 7, 5, 1, 2, 3, 1, 4], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.26028570532798767, "mapping_values": [1, 1, 0, 1, 0, 14, 9, 5, 1, 20, 15, 5, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(grad), tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad), alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.423826217651367, 2.2718708515167236, 2.2378358840942383, 2.3037688732147217, 2.3033034801483154, 2.3032121658325195, 2.3032424449920654], "accuracy": [0.20301149785518646, 0.13934750854969025, 0.14700831472873688, 0.10011887550354004, 0.09985470771789551, 0.09694888442754745, 0.09866596013307571], "val_loss": [2.2965891361236572, 2.111048698425293, 2.3041441440582275, 2.3028359413146973, 2.3026697635650635, 2.302471160888672, 2.302584409713745], "val_accuracy": [0.09799999743700027, 0.25033333897590637, 0.10066666454076767, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [89, 30, 87, 88, 37], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 1, 7, 2, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 7, 3], [5, 0, 7, 5, 7, 2, 3, 4, 4, 2], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.23999999463558197, "mapping_values": [1, 5, 3, 2, 1, 7, 3, 4, 1, 26, 16, 10, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), grad)), tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(grad, tf.math.multiply(beta, sigma)), grad), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3092563152313232, 2.466151237487793, 2.6153924465179443, 2.3133528232574463, 2.3047661781311035, 2.3035666942596436, 2.3034255504608154], "accuracy": [0.19680359959602356, 0.17923656105995178, 0.1802932173013687, 0.09787346422672272, 0.09496764093637466, 0.09549596905708313, 0.09417514503002167], "val_loss": [2.3015716075897217, 4.47024393081665, 2.328805923461914, 2.305603504180908, 2.303403615951538, 2.3030080795288086, 2.3026177883148193], "val_accuracy": [0.10566666722297668, 0.2396666705608368, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [2, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 2, 0, 5, 2, 2, 5, 1, 5, 4, 5, 2, 9, 3, 1, 1, 3, 6, 0, 3, 8, 3, 9], [1, 4, 7, 5, 7, 2, 1, 1, 7, 1, 2, 4, 7, 3], [75, 15, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [95, 57]], "fitness": -0.21628572046756744, "mapping_values": [1, 5, 3, 2, 1, 6, 4, 2, 1, 38, 24, 14, 2, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))))), tf.math.subtract(beta, alpha))), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.negative(grad)), tf.math.multiply(alpha, beta)), grad)))), grad), tf.math.sqrt(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.294123888015747, 2.9341678619384766, 2.3094191551208496, 2.30417537689209, 2.3028461933135986, 2.298049211502075, 2.2935380935668945, 2.319801092147827, 2.306992292404175, 2.3038341999053955, 2.303292989730835], "accuracy": [0.2036719024181366, 0.14093250036239624, 0.0956280529499054, 0.09853387624025345, 0.09985470771789551, 0.11834631860256195, 0.14251750707626343, 0.23444722592830658, 0.10038304328918457, 0.09813763201236725, 0.09642054885625839], "val_loss": [2.2692112922668457, 2.313511371612549, 2.3046457767486572, 2.3027234077453613, 2.301257371902466, 2.277909755706787, 2.2620956897735596, 2.3102681636810303, 2.30346417427063, 2.3026978969573975, 2.3025941848754883], "val_accuracy": [0.19599999487400055, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09866666793823242, 0.2199999988079071, 0.15299999713897705, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 9, 3, 8, 0], [1, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 68, 13, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.13571429252624512, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7118425369262695, 2.3045403957366943, 2.2886440753936768, 2.304274797439575, 2.303316354751587, 2.3031084537506104, 2.3027095794677734], "accuracy": [0.1784440577030182, 0.1138555034995079, 0.18121780455112457, 0.10328886657953262, 0.0886276587843895, 0.10210011899471283, 0.09840179979801178], "val_loss": [2.3258092403411865, 2.28835129737854, 2.3043267726898193, 2.3025529384613037, 2.30253005027771, 2.3024494647979736, 2.300650119781494], "val_accuracy": [0.09666666388511658, 0.13866665959358215, 0.10199999809265137, 0.10199999809265137, 0.0949999988079071, 0.10199999809265137, 0.10733333230018616]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 1, 5, 0, 2, 5, 9, 5, 3, 5, 2, 9, 3, 3], [0, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [98]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 20, 14, 6, 3, 15, 8, 7, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(grad, tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad)), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [5, 3, 6, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [89, 30, 87, 88, 37], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [5, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 0, 0, 3, 0, 2, 4, 2, 5], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 1, 7, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 6, 1, 7, 2, 5, 1, 6, 8, 1, 9], [4, 0, 1, 6, 6, 7, 6, 0, 2, 0], [57, 12, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0, 20, 12, 8, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, tf.math.square(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))))), tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 1, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 2, 0, 5, 8, 2, 5, 9, 5], [1, 5, 7, 5, 7, 2, 3, 1], [75, 51, 29], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8, 4, 2, 3, 6], [4, 2, 1, 7, 3, 7, 6, 0, 2, 0, 7], [53, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 23, 12, 11, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, alpha), tf.math.add(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(beta), alpha), grad), tf.math.sqrt(sigma))), tf.math.pow(grad, tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), beta), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]