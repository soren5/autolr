[{"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 5, 3, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 2, 1], [1, 4, 7, 5, 7, 2, 3, 1], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.7562857270240784, "mapping_values": [1, 1, 0, 1, 0, 7, 5, 2, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.multiply(tf.math.negative(grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2608911991119385, 2.3098697662353516, 2.304407835006714, 2.3040106296539307, 2.3033053874969482, 2.303455114364624, 2.5688281059265137, 2.299555540084839, 2.1583709716796875, 1.9244232177734375, 1.6702404022216797, 1.7453389167785645, 1.4773584604263306, 1.3730354309082031, 1.8035567998886108, 1.355849027633667, 1.1941128969192505, 1.1539676189422607, 1.0411370992660522, 0.9918731451034546, 1.0569814443588257, 0.9212853312492371, 0.8553177118301392, 0.834810197353363, 0.7843942046165466, 0.7300360798835754, 0.7132721543312073, 0.7440956830978394, 0.751417338848114, 0.7210012674331665, 0.6473711729049683], "accuracy": [0.18478403985500336, 0.10157178342342377, 0.09681680053472519, 0.09074098616838455, 0.09708096832036972, 0.09047681838274002, 0.11266675591468811, 0.12072381377220154, 0.2308809906244278, 0.37722888588905334, 0.4414212107658386, 0.41289129853248596, 0.47972527146339417, 0.5321621894836426, 0.44010037183761597, 0.5458987951278687, 0.579447865486145, 0.594241201877594, 0.624620258808136, 0.6392814517021179, 0.6264694333076477, 0.6633205413818359, 0.6779817938804626, 0.6971337795257568, 0.7078325152397156, 0.7223616242408752, 0.7306828498840332, 0.7209087014198303, 0.7180029153823853, 0.7327961921691895, 0.7568352818489075], "val_loss": [2.3141937255859375, 2.304234743118286, 2.303027868270874, 2.3028135299682617, 2.3024661540985107, 2.302522897720337, 2.304654598236084, 2.2274458408355713, 1.870517611503601, 1.7728047370910645, 1.5433796644210815, 1.4202808141708374, 1.3121492862701416, 1.4133881330490112, 1.3204891681671143, 1.0943137407302856, 1.0001760721206665, 0.9303410053253174, 0.8575827479362488, 1.020555853843689, 0.8404380083084106, 0.8344526290893555, 0.9015004634857178, 0.7126739621162415, 0.6904780864715576, 0.6530774235725403, 0.6156504154205322, 0.6424602270126343, 0.6894851326942444, 0.6455400586128235, 0.6385753750801086], "val_accuracy": [0.09933333098888397, 0.09966666996479034, 0.09933333098888397, 0.09533333033323288, 0.10266666859388351, 0.10000000149011612, 0.11599999666213989, 0.16966666281223297, 0.35899999737739563, 0.4166666567325592, 0.5356666445732117, 0.5199999809265137, 0.5476666688919067, 0.48500001430511475, 0.5873333215713501, 0.624666690826416, 0.653333306312561, 0.6700000166893005, 0.6853333115577698, 0.6813333630561829, 0.6956666707992554, 0.6826666593551636, 0.687333345413208, 0.7400000095367432, 0.7326666712760925, 0.7663333415985107, 0.7616666555404663, 0.7509999871253967, 0.7400000095367432, 0.7356666922569275, 0.7580000162124634]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 6, 9, 4, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [8, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [4, 5, 7, 5, 4, 2, 3, 1], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.4731428623199463, "mapping_values": [1, 8, 4, 4, 0, 7, 4, 3, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.459543466567993, 2.300112009048462, 2.329721689224243, 2.1705689430236816, 2.1513683795928955, 2.300623893737793, 2.295973539352417, 2.275156021118164, 2.304490327835083, 2.304511547088623], "accuracy": [0.20380398631095886, 0.11438383162021637, 0.20697398483753204, 0.21252146363258362, 0.24382512271404266, 0.20314356684684753, 0.1154404953122139, 0.1302337795495987, 0.10513802617788315, 0.09866596013307571], "val_loss": [2.3078153133392334, 2.2257606983184814, 2.297534227371216, 2.2896838188171387, 1.5356944799423218, 2.3058369159698486, 2.053772211074829, 2.304898977279663, 2.302680730819702, 2.302929401397705], "val_accuracy": [0.0989999994635582, 0.19833333790302277, 0.10633333027362823, 0.14800000190734863, 0.4790000021457672, 0.09799999743700027, 0.2796666622161865, 0.09933333098888397, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [1, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [4, 2, 2, 2, 5, 8, 5, 5, 4, 5, 1, 8, 4, 3, 2, 3, 1, 6, 5, 8, 6, 4, 9], [5, 0, 7, 2, 7, 4, 3, 0, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3871428668498993, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 1, 37, 23, 14, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.pow(beta, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.square(grad), tf.math.subtract(tf.math.sqrt(tf.math.pow(beta, tf.math.multiply(grad, tf.math.add(tf.math.multiply(grad, sigma), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(beta), tf.math.sqrt(sigma)))))), grad)), tf.math.divide_no_nan(sigma, tf.math.pow(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.369279146194458, 2.2106680870056152, 2.982069969177246, 2.308335781097412, 2.3039257526397705, 2.302126407623291], "accuracy": [0.21991810202598572, 0.23233389854431152, 0.1398758441209793, 0.09747721254825592, 0.09853387624025345, 0.10579843819141388], "val_loss": [2.176988363265991, 2.0082385540008545, 2.311483144760132, 2.304309844970703, 2.302617073059082, 2.2974629402160645], "val_accuracy": [0.3883333206176758, 0.2893333435058594, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [1, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 4, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [4, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [0, 0, 7, 5, 7, 2, 3, 4, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 4, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3791428506374359, "mapping_values": [1, 5, 2, 3, 0, 15, 9, 6, 1, 3, 2, 1, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(grad, grad)))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2945189476013184, 2.3858695030212402, 2.345700263977051, 2.3042845726013184, 2.2812702655792236, 2.218048334121704, 2.2090368270874023, 2.690680980682373, 2.304755926132202, 2.3034865856170654, 2.3032195568084717, 2.3032562732696533], "accuracy": [0.19865275919437408, 0.1604807823896408, 0.09721305221319199, 0.10077928751707077, 0.14489498734474182, 0.1962752640247345, 0.19376568496227264, 0.160084530711174, 0.1006472036242485, 0.09906221181154251, 0.09879804402589798, 0.09747721254825592], "val_loss": [2.301281690597534, 2.5456395149230957, 2.3052613735198975, 2.3003597259521484, 2.2361528873443604, 2.2994182109832764, 2.080061912536621, 2.3048763275146484, 2.3030905723571777, 2.30298113822937, 2.3026254177093506, 2.3026700019836426], "val_accuracy": [0.1653333306312561, 0.10700000077486038, 0.09966666996479034, 0.17733334004878998, 0.23466666042804718, 0.10433333367109299, 0.3610000014305115, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [5, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 6, 2, 5, 8, 5, 2, 9, 9, 4, 8, 6, 3, 2, 3], [4, 5, 7, 5, 4, 2, 3, 1], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.3240000009536743, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, grad), tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.math.sqrt(grad)), tf.math.square(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2769129276275635, 2.243882179260254, 2.3316612243652344, 2.303741216659546, 2.275669574737549, 2.356801986694336, 2.257550001144409, 2.4048001766204834, 2.3038132190704346, 2.303776741027832], "accuracy": [0.2094835489988327, 0.18623696267604828, 0.11979923397302628, 0.09760929644107819, 0.14080041646957397, 0.11808215826749802, 0.1814819723367691, 0.11979923397302628, 0.10421344637870789, 0.0952318087220192], "val_loss": [2.079333543777466, 2.1964707374572754, 2.3035647869110107, 2.3014469146728516, 2.3022823333740234, 2.3035755157470703, 2.707821846008301, 2.303135633468628, 2.3027708530426025, 2.30267071723938], "val_accuracy": [0.25200000405311584, 0.23866666853427887, 0.0976666659116745, 0.16099999845027924, 0.3256666660308838, 0.10000000149011612, 0.3100000023841858, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [4, 2, 6, 2, 5, 6, 0, 2, 9, 5, 1, 8, 1, 3, 6, 3], [5, 0, 7, 2, 7, 4, 4, 4, 4, 4, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.30714285373687744, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 19, 12, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.subtract(tf.math.sqrt(grad), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.507939100265503, 2.2620105743408203, 2.3025271892547607, 2.2530128955841064, 2.3120319843292236, 2.304001808166504, 2.3034157752990723, 2.3032727241516113, 2.3030905723571777], "accuracy": [0.1736890822649002, 0.15995244681835175, 0.10474177449941635, 0.16114120185375214, 0.1508387327194214, 0.09985470771789551, 0.09589222073554993, 0.09694888442754745, 0.09642054885625839], "val_loss": [2.2863781452178955, 2.3039042949676514, 2.2896552085876465, 1.9928110837936401, 2.304421901702881, 2.3030426502227783, 2.3026719093322754, 2.3026535511016846, 2.302694082260132], "val_accuracy": [0.15166667103767395, 0.10166666656732559, 0.10100000351667404, 0.30433332920074463, 0.09833333641290665, 0.09833333641290665, 0.10166666656732559, 0.10066666454076767, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [3, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 0, 3, 0, 5, 2, 2, 5, 9, 5, 1, 8, 4, 3, 2, 1], [4, 0, 7, 5, 4, 2, 3, 1], [14, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [73, 0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [89, 68, 13, 88, 37], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [8, 1, 8, 0, 2, 8, 2, 0, 9, 8, 4, 0, 0, 3, 2, 5], [4, 5, 7, 5, 7, 1, 3, 4, 4], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 1, 7, 3, 7, 6, 0, 2, 0], [70]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039557933807373, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 4, 2, 6, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 3, 1, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 7, 3, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 2, 1], [4, 5, 7, 5, 4, 2, 3, 1], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 1, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 4, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 6, 2, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 2, 3], [5, 0, 7, 2, 7, 4, 3, 0, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [34, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 0, 13, 8, 5, 1, 1, 0, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.add(tf.math.multiply(grad, grad), grad), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, alpha)), tf.math.add(tf.math.negative(tf.math.square(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]