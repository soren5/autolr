[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [1, 1, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [0, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.417428582906723, "mapping_values": [1, 3, 1, 2, 0, 8, 4, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.626891136169434, 2.3370673656463623, 2.2591238021850586, 2.28566312789917, 2.304677724838257, 2.3038599491119385, 2.303417682647705, 2.3032174110412598], "accuracy": [0.18201030790805817, 0.17421740293502808, 0.15995244681835175, 0.1504424810409546, 0.10368511080741882, 0.10130762308835983, 0.09813763201236725, 0.09589222073554993], "val_loss": [2.334550142288208, 2.3093719482421875, 2.214824914932251, 2.303982973098755, 2.303290605545044, 2.3027658462524414, 2.30265474319458, 2.302680730819702], "val_accuracy": [0.1003333330154419, 0.09799999743700027, 0.42366665601730347, 0.09799999743700027, 0.0976666659116745, 0.0976666659116745, 0.1003333330154419, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [0, 2, 1, 3, 0, 0, 0, 2], [20, 5, 97], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [0, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [56, 15, 45, 75, 65, 8, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.2997142970561981, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6026997566223145, 2.7095818519592285, 2.3218722343444824, 2.298705577850342, 2.1276962757110596, 2.300659418106079, 2.3042125701904297, 2.2910473346710205, 2.2791616916656494, 2.272630214691162, 2.3048648834228516, 2.3032286167144775, 2.240309476852417, 2.2179489135742188], "accuracy": [0.2020869106054306, 0.1430458277463913, 0.12178047746419907, 0.11702549457550049, 0.24607053399085999, 0.11768590658903122, 0.09945846349000931, 0.13300752639770508, 0.21555937826633453, 0.1208558976650238, 0.09932637959718704, 0.10368511080741882, 0.15361246466636658, 0.1868973672389984], "val_loss": [2.2750613689422607, 2.188016653060913, 2.304149866104126, 2.2162463665008545, 2.0967907905578613, 2.3030779361724854, 2.3019046783447266, 2.297076940536499, 1.9466841220855713, 2.3035786151885986, 2.303077220916748, 2.3021979331970215, 2.2277214527130127, 2.2982518672943115], "val_accuracy": [0.09833333641290665, 0.21533332765102386, 0.09866666793823242, 0.24833333492279053, 0.23933333158493042, 0.09966666996479034, 0.10000000149011612, 0.09866666793823242, 0.3160000145435333, 0.10133333504199982, 0.10166666656732559, 0.10633333027362823, 0.20933333039283752, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 9, 5, 7, 0, 4, 9, 9, 8], [0, 2, 1, 1, 0, 0, 0, 2], [20, 18, 26], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 1, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 6, 8, 8, 5, 4, 4, 3, 2, 6, 2, 4, 4, 9, 7, 2, 8, 7, 9, 8, 6, 0, 7, 6, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 4, 5, 7, 2, 1, 1, 2, 4, 3, 5, 4, 4, 5, 1, 2, 1, 3, 6, 2, 5, 0, 2, 3, 1, 0, 4, 4, 6, 3], [98, 2, 29, 6, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.2628571391105652, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 61, 36, 25, 3, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.subtract(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(beta))))), alpha), tf.math.subtract(tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(sigma)), grad), tf.math.square(grad))), tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, alpha), beta), tf.math.add(tf.math.pow(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(grad, tf.math.add(beta, grad)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)))), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.341975450515747, 2.305399179458618, 2.306316375732422, 2.307844400405884, 2.301909923553467, 2.274413585662842], "accuracy": [0.2020869106054306, 0.23035265505313873, 0.14568749070167542, 0.09642054885625839, 0.10474177449941635, 0.13881917297840118], "val_loss": [2.2979815006256104, 2.3084893226623535, 2.3131868839263916, 2.302677631378174, 2.2781190872192383, 2.3048007488250732], "val_accuracy": [0.2590000033378601, 0.09866666793823242, 0.09866666793823242, 0.09600000083446503, 0.1003333330154419, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 3, 7, 0, 4, 8, 3, 8], [0, 2, 1, 3, 0, 0, 0, 2], [20, 18, 26], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 4, 5, 7, 2, 3, 1, 2, 5, 1], [98, 51, 29, 6, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.21114285290241241, "mapping_values": [1, 1, 1, 0, 1, 6, 4, 2, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.9117465019226074, 2.3188178539276123, 2.304656505584717, 2.2981088161468506, 2.2845473289489746, 2.2188501358032227, 2.2488338947296143, 2.3071088790893555, 2.303900957107544, 2.303213596343994], "accuracy": [0.18584071099758148, 0.09972262382507324, 0.10672302544116974, 0.1006472036242485, 0.12059172987937927, 0.14410249888896942, 0.13921542465686798, 0.09774138033390045, 0.09826971590518951, 0.09642054885625839], "val_loss": [2.3426849842071533, 2.3062360286712646, 2.299302816390991, 2.3001747131347656, 2.1924004554748535, 2.253371000289917, 2.3097290992736816, 2.304136037826538, 2.302804946899414, 2.3026139736175537], "val_accuracy": [0.10266666859388351, 0.10066666454076767, 0.12133333086967468, 0.10566666722297668, 0.21266666054725647, 0.18933333456516266, 0.10166666656732559, 0.10066666454076767, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [4, 2, 5, 3, 5, 0, 9, 3, 8], [0, 2, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [3, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 1, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 4, 5, 7, 2, 1, 1, 2, 5, 1, 5, 4, 4, 5, 1, 0, 1, 3, 6, 5, 5, 0, 2, 3, 1, 0, 7, 0, 6, 3], [2, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.12085714191198349, "mapping_values": [1, 13, 9, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(tf.math.square(tf.math.negative(grad)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.5557708740234375, 2.304870843887329, 2.302584171295166, 2.288773536682129, 2.3183045387268066, 2.301565408706665, 2.293072462081909, 2.303891658782959, 2.303071975708008, 2.302907705307007, 2.3031017780303955], "accuracy": [0.1744815707206726, 0.10196803510189056, 0.10342095047235489, 0.13036586344242096, 0.10342095047235489, 0.09893012791872025, 0.1212521493434906, 0.09774138033390045, 0.09721305221319199, 0.0956280529499054, 0.09708096832036972], "val_loss": [2.305344343185425, 2.3027172088623047, 2.2996041774749756, 2.234694719314575, 2.3031203746795654, 2.297546148300171, 2.303830146789551, 2.3028767108917236, 2.302602529525757, 2.3027408123016357, 2.3028206825256348], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09866666793823242, 0.0976666659116745, 0.0989999994635582, 0.11533333361148834, 0.0989999994635582, 0.0989999994635582, 0.0963333323597908, 0.0963333323597908, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [1, 1, 1, 1, 0, 0, 0, 2], [20, 13, 65], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [56, 15, 45, 75, 65, 8, 75], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 6, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [98, 51, 29, 6, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 1, 2, 3, 7, 6, 6, 2, 0], [5, 12]], "fitness": -0.10771428793668747, "mapping_values": [1, 3, 1, 2, 0, 3, 2, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.5304696559906006, 2.288969039916992, 2.3169217109680176, 2.2801730632781982, 2.3034539222717285, 2.303347110748291, 2.303011178970337], "accuracy": [0.19336943328380585, 0.12230881303548813, 0.15519747138023376, 0.15493330359458923, 0.09826971590518951, 0.1002509593963623, 0.09417514503002167], "val_loss": [2.310565710067749, 2.3013691902160645, 2.300640344619751, 2.3037326335906982, 2.3031165599823, 2.302748918533325, 2.302654266357422], "val_accuracy": [0.10066666454076767, 0.11166666448116302, 0.10366666316986084, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 9, 5, 7, 0, 4, 9, 9, 8], [0, 2, 1, 1, 0, 0, 0, 2], [20, 18, 26], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [98, 51, 29, 6, 84, 13, 74, 53], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 2, 3, 7, 6, 6, 2, 0], [29, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0, 16, 8, 8, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)), tf.math.subtract(grad, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 4, 4, 7, 0, 4, 9, 3, 8, 6, 1, 9, 5, 3, 4, 0, 9, 5, 3, 7, 1, 2, 8, 5, 4, 0, 2, 3, 6, 6, 9, 4, 7, 2, 5, 6, 3, 6, 2, 8, 6, 8, 3, 8, 6, 2, 9, 5, 5, 7, 3, 3, 2, 6, 8, 9, 8], [2, 1, 1, 1, 3, 0, 0, 2, 0, 0, 1, 1, 0, 0, 2, 2, 0, 2, 3, 0, 1, 1, 1, 1, 2, 1, 0, 3, 3, 0], [20, 92, 26, 58, 21, 60, 59, 50, 43, 33, 61, 87, 37, 2, 28, 73], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [6, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [2, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [94, 24, 45, 75, 65, 8, 75], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 4, 5, 3, 6, 2, 0, 1, 1, 6, 1, 3, 0, 3, 6, 3, 1, 3, 2, 8, 5, 4, 1, 3, 2, 6, 1, 4, 4, 0, 9, 2, 9, 7, 6, 8, 6, 0, 7, 7, 4, 2, 5, 2, 0, 2, 5, 2, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [98, 51, 29, 6, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [0, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 87, 57, 30, 16, 3, 2, 1, 1, 17, 9, 8, 0, 1, 0, 1, 1], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.pow(tf.math.pow(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(alpha), tf.math.divide_no_nan(alpha, tf.math.subtract(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(grad)), tf.math.multiply(tf.math.pow(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(alpha, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), grad), grad))))))))), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(grad, beta), grad)), tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.subtract(grad, beta), sigma))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.305694341659546, 2.302595615386963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025879859924316, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 7, 0, 4, 8, 3, 8], [1, 1, 1, 1, 0, 0, 0, 2], [20, 18, 26], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [98, 51, 29, 6, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 6, 4, 2, 2, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.306199073791504, 2.3025991916656494, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0940430611371994, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025856018066406, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [1, 1, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 9, 7, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 6, 1, 3, 8, 5, 5, 3, 5, 3, 6, 5, 9, 2, 3, 9, 6, 6, 5, 6, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 6, 7, 3, 8, 0], [5, 0, 3, 3, 1, 3, 3, 1, 1, 5, 2, 0, 1, 2, 4, 3, 0, 4, 2, 5, 1, 5, 5, 5, 2, 0, 3, 5, 0, 5], [2, 15, 45, 75, 65, 8, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [2, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [1, 0, 6, 2, 3, 7, 6, 3, 2, 0], [5, 12]], "fitness": -0.0917142853140831, "mapping_values": [1, 13, 9, 4, 1, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3105430603027344, 2.308882474899292, 2.3103339672088623, 2.3105931282043457, 2.3096277713775635, 2.310353994369507], "accuracy": [0.08558975160121918, 0.09219389408826828, 0.09113723784685135, 0.09430722147226334, 0.09311848133802414, 0.09179764986038208], "val_loss": [2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]