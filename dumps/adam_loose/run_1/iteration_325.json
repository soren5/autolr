[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 6, 9, 4, 1, 0, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 1, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 1, 0, 4, 1, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 5, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [7, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [19, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3985714316368103, "mapping_values": [1, 5, 4, 1, 2, 7, 3, 4, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(beta, grad), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5119943618774414, 2.303201675415039, 2.2875592708587646, 2.30429744720459, 2.3042757511138916, 2.302382707595825, 2.2571139335632324, 2.3060250282287598, 2.2801401615142822, 2.2681849002838135, 2.249337673187256, 2.3045544624328613, 2.303478479385376, 2.30303692817688], "accuracy": [0.17421740293502808, 0.10170386731624603, 0.12376172095537186, 0.10210011899471283, 0.10130762308835983, 0.10170386731624603, 0.12970545887947083, 0.09589222073554993, 0.1368379294872284, 0.14859332144260406, 0.14859332144260406, 0.09642054885625839, 0.0948355570435524, 0.09721305221319199], "val_loss": [2.3038179874420166, 2.3036389350891113, 2.3036208152770996, 2.3033535480499268, 2.302598714828491, 2.2977497577667236, 2.3086698055267334, 2.302670478820801, 1.5699846744537354, 2.29801082611084, 2.3041841983795166, 2.3029749393463135, 2.3027536869049072, 2.3026740550994873], "val_accuracy": [0.10000000149011612, 0.10266666859388351, 0.1003333330154419, 0.09966666996479034, 0.10000000149011612, 0.1823333352804184, 0.0976666659116745, 0.10000000149011612, 0.39266666769981384, 0.12433333694934845, 0.09866666793823242, 0.10000000149011612, 0.09966666996479034, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 9, 6, 0, 3, 4, 1, 9, 2, 8, 3, 4, 3, 2, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 65, 52, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 8, 2, 6, 2, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [24, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.32828572392463684, "mapping_values": [1, 5, 3, 2, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3647990226745605, 2.296246290206909, 2.3031692504882812, 2.4569249153137207, 2.3071787357330322, 2.3037893772125244, 2.303102731704712, 2.303154706954956], "accuracy": [0.21238937973976135, 0.15255580842494965, 0.10474177449941635, 0.1604807823896408, 0.09694888442754745, 0.0944393053650856, 0.09628847241401672, 0.09338264167308807], "val_loss": [2.3083226680755615, 2.305798292160034, 2.2656490802764893, 2.3107707500457764, 2.3042829036712646, 2.303046703338623, 2.302715539932251, 2.3026092052459717], "val_accuracy": [0.13500000536441803, 0.10166666656732559, 0.3269999921321869, 0.0989999994635582, 0.0989999994635582, 0.10000000149011612, 0.10166666656732559, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 0, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 65, 52, 29, 98], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 1, 0, 4, 1, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 5, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 1, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [19, 39, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.27628570795059204, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3705976009368896, 2.2470524311065674, 2.271730899810791, 2.48179292678833, 2.3071157932281494, 2.3036768436431885, 2.3013224601745605, 2.294429063796997], "accuracy": [0.19944524765014648, 0.17382116615772247, 0.16166952252388, 0.12653546035289764, 0.09747721254825592, 0.10460969805717468, 0.11174217611551285, 0.11795007437467575], "val_loss": [2.1621036529541016, 2.284123420715332, 2.205521821975708, 2.305506944656372, 2.303342342376709, 2.303091049194336, 2.3016226291656494, 2.3075520992279053], "val_accuracy": [0.24966666102409363, 0.09733333438634872, 0.2776666581630707, 0.10366666316986084, 0.09566666930913925, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [3, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [7, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [54, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24085713922977448, "mapping_values": [1, 5, 3, 2, 1, 10, 6, 4, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.pow(tf.math.divide_no_nan(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.512282133102417, 2.295208692550659, 2.4807662963867188, 2.302530288696289, 2.354524850845337, 2.5044472217559814, 2.3064935207366943], "accuracy": [0.1706511676311493, 0.15889579057693481, 0.12613920867443085, 0.10474177449941635, 0.12178047746419907, 0.13789460062980652, 0.09655263274908066], "val_loss": [2.3072731494903564, 2.204429864883423, 2.303203582763672, 2.296572208404541, 2.212423086166382, 2.309934139251709, 2.303825616836548], "val_accuracy": [0.09833333641290665, 0.23366667330265045, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 9, 6, 0, 3, 4, 1, 9, 2, 8, 3, 4, 3, 2, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [19, 30, 38, 59, 65, 52, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 8, 2, 6, 2, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [24, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.24057142436504364, "mapping_values": [1, 5, 3, 2, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.35068941116333, 2.3272199630737305, 2.5530855655670166, 2.3115358352661133, 2.304029703140259, 2.3033294677734375], "accuracy": [0.20420023798942566, 0.16166952252388, 0.20472857356071472, 0.0940430611371994, 0.1010434553027153, 0.09642054885625839], "val_loss": [2.284977912902832, 2.1634128093719482, 2.3381614685058594, 2.3041086196899414, 2.3027474880218506, 2.3023533821105957], "val_accuracy": [0.23533333837985992, 0.1836666613817215, 0.09933333098888397, 0.09600000083446503, 0.09833333641290665, 0.13366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [6, 5, 6, 9, 4, 1, 0, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 1, 0, 0, 0, 0, 3], [98, 30, 38, 59, 65, 52, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 0, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [24, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.19857142865657806, "mapping_values": [1, 6, 4, 2, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3919742107391357, 2.262197732925415, 2.6157453060150146, 2.3067221641540527, 2.3037209510803223, 2.303210735321045], "accuracy": [0.19336943328380585, 0.22018226981163025, 0.16616034507751465, 0.10011887550354004, 0.10157178342342377, 0.1026284471154213], "val_loss": [2.294412136077881, 2.277451276779175, 2.3081960678100586, 2.303417205810547, 2.3026340007781982, 2.302562952041626], "val_accuracy": [0.20266667008399963, 0.12333333492279053, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 9, 3, 0, 3, 4, 1, 9, 2, 8, 3, 4, 3, 2, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 10, 59, 65, 52, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 8, 2, 6, 2, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [24, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.19828571379184723, "mapping_values": [1, 3, 2, 1, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4554874897003174, 2.282329797744751, 2.2954256534576416, 2.2111804485321045, 2.2738442420959473, 2.3069727420806885, 2.3037941455841064, 2.3031835556030273, 2.3033018112182617], "accuracy": [0.1868973672389984, 0.14938580989837646, 0.12508255243301392, 0.22335226833820343, 0.1888786107301712, 0.10011887550354004, 0.09787346422672272, 0.09087307006120682, 0.0940430611371994], "val_loss": [2.296070098876953, 2.303408622741699, 2.2027831077575684, 2.2129085063934326, 2.309962749481201, 2.3039326667785645, 2.3027031421661377, 2.3024966716766357, 2.302593946456909], "val_accuracy": [0.10000000149011612, 0.10499999672174454, 0.1496666669845581, 0.19333332777023315, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [7, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.13114285469055176, "mapping_values": [1, 2, 1, 1, 1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.66478157043457, 2.3056278228759766, 2.3023293018341064, 2.2863991260528564, 8.213589668273926, 2.307626962661743, 2.3037869930267334, 2.303290843963623, 2.303096055984497], "accuracy": [0.18359529972076416, 0.10011887550354004, 0.10619468986988068, 0.11808215826749802, 0.10606260597705841, 0.09576013684272766, 0.09985470771789551, 0.0956280529499054, 0.09774138033390045], "val_loss": [2.308781147003174, 2.303466320037842, 2.299628734588623, 3.864794969558716, 2.3095130920410156, 2.3036975860595703, 2.3026647567749023, 2.302551507949829, 2.302638053894043], "val_accuracy": [0.09966666996479034, 0.07366666942834854, 0.0976666659116745, 0.12700000405311584, 0.10433333367109299, 0.10300000011920929, 0.09799999743700027, 0.09799999743700027, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 9, 6, 0, 3, 4, 1, 9, 2, 8, 3, 4, 3, 2, 5, 5, 2, 5, 6, 4, 3, 9], [0, 3, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 65, 52, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 8, 2, 6, 2, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [24, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10028571635484695, "mapping_values": [1, 5, 3, 2, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.351090669631958, 2.275110960006714, 2.341132164001465, 2.472548484802246, 2.3088393211364746, 2.303999662399292, 2.303159236907959, 2.3032402992248535], "accuracy": [0.21978603303432465, 0.16114120185375214, 0.15321621298789978, 0.1846519559621811, 0.10011887550354004, 0.09668471664190292, 0.09787346422672272, 0.09589222073554993], "val_loss": [2.2978389263153076, 2.2781708240509033, 2.314744234085083, 2.3118951320648193, 2.3035364151000977, 2.3026299476623535, 2.302753210067749, 2.3029043674468994], "val_accuracy": [0.10233332961797714, 0.10100000351667404, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10100000351667404, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 0, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 1, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 1, 0, 4, 1, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 5, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [5, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [19, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.908774375915527, 2.3066718578338623, 2.303873300552368, 2.30311918258667, 2.3030383586883545, 2.302940607070923], "accuracy": [0.18650111556053162, 0.09998679161071777, 0.09708096832036972, 0.09998679161071777, 0.09166556596755981, 0.09985470771789551], "val_loss": [2.30916166305542, 2.3043317794799805, 2.302931070327759, 2.3026413917541504, 2.302556037902832, 2.302631139755249], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09700000286102295]}}]