[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [0, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.6679999828338623, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [10.85544204711914, 2.695722818374634, 1.9718561172485352, 1.7968711853027344, 1.696617841720581, 1.5013246536254883, 1.4258716106414795, 1.4666544198989868, 1.6076186895370483, 1.2835636138916016, 1.2213491201400757, 1.2255547046661377, 2.421854019165039, 2.315855026245117, 2.308241844177246, 2.3066823482513428], "accuracy": [0.201294407248497, 0.16166952252388, 0.3403777480125427, 0.39426758885383606, 0.4589882493019104, 0.4702152907848358, 0.5143309831619263, 0.5200105905532837, 0.4694227874279022, 0.5567296147346497, 0.5744287371635437, 0.5962224006652832, 0.2495046854019165, 0.09879804402589798, 0.09866596013307571, 0.0948355570435524], "val_loss": [5.740267753601074, 2.0574514865875244, 2.153562545776367, 1.5230114459991455, 1.6327763795852661, 1.239427089691162, 1.054350733757019, 1.1755715608596802, 1.0719718933105469, 1.018731951713562, 0.9955424666404724, 1.3750253915786743, 2.3194525241851807, 2.3064045906066895, 2.3057408332824707, 2.3039023876190186], "val_accuracy": [0.09966666996479034, 0.2836666703224182, 0.17533333599567413, 0.45366665720939636, 0.3853333294391632, 0.5870000123977661, 0.6356666684150696, 0.6209999918937683, 0.6140000224113464, 0.628000020980835, 0.6710000038146973, 0.5316666960716248, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 5, 9, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 6, 5, 0, 6, 2, 3, 1, 5, 4, 1, 3, 1, 2, 6, 3, 1, 4, 2, 8, 5, 4, 1, 6, 2, 6, 2, 2, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 2, 0, 4, 2, 3, 3, 2, 5, 1, 1, 0, 0, 6, 0, 0, 7, 2, 0, 4, 3, 5, 6, 3, 0, 0, 4, 1, 3, 5, 1, 1], [49, 51, 29, 63, 84, 13, 74, 53, 85, 69, 68], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.4011428654193878, "mapping_values": [1, 7, 6, 1, 1, 1, 0, 1, 1, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(alpha), tf.math.square(tf.math.sqrt(tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, beta)))), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4102730751037598, 2.2587344646453857, 2.2653510570526123, 2.969583511352539, 2.3356974124908447, 2.305609703063965, 2.302253246307373, 2.2972278594970703], "accuracy": [0.1814819723367691, 0.1592920422554016, 0.16338661313056946, 0.18319904804229736, 0.09879804402589798, 0.10051512718200684, 0.09681680053472519, 0.1534803807735443], "val_loss": [2.283517360687256, 2.300891876220703, 1.5853476524353027, 2.321951389312744, 2.307441473007202, 2.30330753326416, 2.2937700748443604, 2.2975761890411377], "val_accuracy": [0.31166666746139526, 0.11999999731779099, 0.39399999380111694, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.13099999725818634, 0.19733333587646484]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 3, 1, 0, 5, 1, 6, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 5, 6, 0, 2, 0, 5, 6, 2, 2, 9, 2, 5, 0, 2, 6, 8, 8, 2, 8, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [1, 3, 5, 1, 1, 1, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 3, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 63, 28, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.345714271068573, "mapping_values": [1, 9, 7, 2, 1, 67, 43, 24, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.subtract(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta), grad))), tf.math.square(tf.math.sqrt(tf.math.square(beta)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad), beta))), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.sqrt(grad)))))))))), alpha), grad)), tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.sqrt(alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7672765254974365, 2.3002779483795166, 2.3378326892852783, 2.303453207015991, 2.303126096725464, 2.3030354976654053, 2.302992343902588], "accuracy": [0.16655659675598145, 0.12296922504901886, 0.13974376022815704, 0.09826971590518951, 0.09615638852119446, 0.09417514503002167, 0.09760929644107819], "val_loss": [2.31093430519104, 2.198972702026367, 2.302609443664551, 2.3025341033935547, 2.3026223182678223, 2.302588939666748, 2.302562713623047], "val_accuracy": [0.09933333098888397, 0.33766666054725647, 0.10433333367109299, 0.10166666656732559, 0.10433333367109299, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 8, 2, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3408571481704712, "mapping_values": [1, 19, 11, 8, 2, 1, 0, 1, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(grad, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, alpha))), grad)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2830281257629395, 2.29205060005188, 2.3632991313934326, 2.304863691329956, 2.303433656692505, 2.303205966949463, 2.303126811981201], "accuracy": [0.2110685557126999, 0.18544445931911469, 0.15902787446975708, 0.09853387624025345, 0.09655263274908066, 0.09536388516426086, 0.0952318087220192], "val_loss": [2.0593814849853516, 2.1204488277435303, 2.3048737049102783, 2.3028852939605713, 2.302608013153076, 2.3025784492492676, 2.3025624752044678], "val_accuracy": [0.2293333262205124, 0.33766666054725647, 0.10233332961797714, 0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 1, 1, 2, 1, 2, 0, 2], [21, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 9, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 6, 6, 4, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 7, 2, 2, 4, 2, 2, 1, 2, 5, 4, 1, 0, 3, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2954285740852356, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 1, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4667365550994873, 2.271450996398926, 2.294862747192383, 2.938749313354492, 2.306941270828247, 2.3038244247436523, 2.3030948638916016, 2.303056240081787], "accuracy": [0.17619864642620087, 0.16761326789855957, 0.11398758739233017, 0.14198917150497437, 0.09325055778026581, 0.10011887550354004, 0.09787346422672272, 0.09932637959718704], "val_loss": [2.302461862564087, 2.3146071434020996, 2.185595750808716, 2.3093984127044678, 2.3040688037872314, 2.302981376647949, 2.302694320678711, 2.302593469619751], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.30399999022483826, 0.10166666656732559, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [5, 8, 5, 8, 8, 1, 9, 7, 8, 2, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [21, 5, 97, 21], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 1, 0, 5, 1, 1, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 6, 2, 5, 8, 3, 6, 5, 2, 0, 1, 6, 2, 6, 4, 2, 9, 0, 2, 6, 8, 8, 2, 8, 4, 2, 6, 2, 2, 6, 1, 3, 9, 4, 1, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [1, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 0, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22057142853736877, "mapping_values": [1, 3, 2, 1, 0, 84, 49, 35, 8, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.multiply(beta, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(grad, beta)))), tf.math.square(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(grad), alpha), tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.divide_no_nan(grad, grad), alpha), tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)))), grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, grad))), grad), tf.math.subtract(grad, tf.math.multiply(alpha, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.125757217407227, 2.309382915496826, 2.3043017387390137, 2.302959442138672, 2.270448923110962, 2.2500338554382324, 2.3059871196746826, 2.303565502166748, 2.302940607070923, 2.3026866912841797], "accuracy": [0.16629242897033691, 0.09668471664190292, 0.09377889335155487, 0.1006472036242485, 0.136045441031456, 0.1706511676311493, 0.10170386731624603, 0.09932637959718704, 0.09549596905708313, 0.10857218503952026], "val_loss": [2.3139166831970215, 2.304908037185669, 2.3029043674468994, 2.3012259006500244, 2.2179462909698486, 2.3074467182159424, 2.3037948608398438, 2.3027706146240234, 2.3025362491607666, 2.301846504211426], "val_accuracy": [0.10000000149011612, 0.09866666793823242, 0.10000000149011612, 0.10000000149011612, 0.21566666662693024, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [46, 5, 97], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 7, 5, 0, 6, 2, 3, 9, 1, 4, 2, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [49, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.1948571354150772, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 0, 23, 14, 9, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))), grad), tf.math.pow(tf.math.add(tf.math.multiply(beta, tf.math.subtract(sigma, grad)), beta), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0495007038116455, 2.3124618530273438, 2.3045613765716553, 2.303171157836914, 2.302396535873413, 2.29905366897583, 2.255540609359741, 2.3426551818847656, 2.3037641048431396, 2.303826332092285, 2.3036420345306396, 2.3032357692718506], "accuracy": [0.21304979920387268, 0.09628847241401672, 0.09351472556591034, 0.09536388516426086, 0.10962884873151779, 0.11781799048185349, 0.18253862857818604, 0.11319508403539658, 0.09708096832036972, 0.09906221181154251, 0.09628847241401672, 0.09853387624025345], "val_loss": [2.329287528991699, 2.304788589477539, 2.302919387817383, 2.302408218383789, 2.301046133041382, 2.290297746658325, 2.3276939392089844, 2.303178310394287, 2.3026816844940186, 2.3026115894317627, 2.3026530742645264, 2.3027284145355225], "val_accuracy": [0.10066666454076767, 0.09866666793823242, 0.09833333641290665, 0.09866666793823242, 0.1003333330154419, 0.14166666567325592, 0.19300000369548798, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.0963333323597908, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 5, 8, 5, 1, 9, 7, 8, 2, 2, 4, 9], [1, 2, 1, 2, 1, 2, 0, 2], [20, 5, 97, 21], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 4, 3, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [1, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 6, 6, 4, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 2, 2, 2, 4, 2, 2, 1, 2, 5, 4, 1, 0, 3, 6, 0, 0, 7, 2, 0, 3, 3, 5, 6, 3, 0], [49, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3044064044952393, 2.3029558658599854, 2.303178548812866, 2.3028676509857178, 2.303011178970337, 2.3030569553375244, 2.302957057952881, 2.30300235748291, 2.302933692932129, 2.302947998046875], "accuracy": [0.09668471664190292, 0.09774138033390045, 0.09245806187391281, 0.09417514503002167, 0.09668471664190292, 0.09893012791872025, 0.1006472036242485, 0.09734513610601425, 0.09906221181154251, 0.09708096832036972], "val_loss": [2.302603244781494, 2.3026282787323, 2.3026673793792725, 2.3026175498962402, 2.302619457244873, 2.3026256561279297, 2.3026139736175537, 2.302579641342163, 2.302595615386963, 2.302635669708252], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 8, 5, 6, 6, 2, 9, 0, 2, 2, 2, 4, 9], [2, 0, 1, 2, 1, 2, 0, 2], [21, 5, 97, 21], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 1, 5, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 4, 9, 6, 2, 0, 1, 9, 6, 1, 3, 1, 5, 2, 3, 8, 3, 8, 1, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 4, 8, 6, 0, 6, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 0, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [42, 51, 29, 45, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 3, 7, 4, 3, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha))), grad))), tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.256382942199707, 2.313870906829834, 2.5321531295776367, 2.311502695083618, 2.30448055267334, 2.303818702697754], "accuracy": [0.2090873122215271, 0.11253467202186584, 0.18399155139923096, 0.09998679161071777, 0.09681680053472519, 0.09998679161071777], "val_loss": [2.330890655517578, 2.2993674278259277, 2.329766273498535, 2.304171562194824, 2.30301570892334, 2.303020715713501], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [2, 8, 5, 8, 6, 1, 6, 7, 8, 4, 2, 4, 9], [2, 2, 1, 2, 1, 2, 0, 2], [20, 44, 97, 49], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 1, 0, 3, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 8, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 5, 4, 2, 5, 0, 2, 2, 2, 8, 2, 6, 3, 8, 6, 2, 9, 6, 1, 6, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [1, 3, 3, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 1, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 23, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 7, 5, 0, 6, 2, 3, 1, 1, 4, 1, 3, 1, 9, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 1, 7, 2, 3, 4, 2, 5, 1, 4, 2, 4, 7, 7, 4, 0, 7, 4, 4, 4, 6, 5, 6, 1, 4, 3, 3, 2, 1], [78, 32, 27, 75, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [0, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 0, 81, 50, 31, 7, 4, 2, 2, 0, 1, 0, 1, 1], "tree_depth": 51, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.add(grad, alpha)), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.sqrt(grad))), beta))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), grad), tf.math.add(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad))), tf.math.negative(grad)))), tf.math.add(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)), grad)), grad), tf.math.subtract(alpha, beta))))))), alpha)), grad), tf.math.divide_no_nan(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), grad))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031439781188965, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]