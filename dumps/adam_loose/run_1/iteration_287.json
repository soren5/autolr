[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 2, 8, 1, 2, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 2, 2, 0, 2, 0, 0, 1, 3], [64, 98, 97, 0, 80], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 0, 3, 0, 5, 2, 2, 5, 1, 0, 6, 1, 1, 9, 0, 9, 5, 5, 3, 3, 8, 8, 3, 4, 0, 9, 9, 2, 6, 2, 4, 4, 2, 2, 6, 2, 6, 8, 8, 8, 6, 8, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 2, 3, 0, 3, 1, 3, 0, 3, 3, 5, 3, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [2, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.34542858600616455, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.316420078277588, 3.948298215866089, 2.308211088180542, 2.303860902786255, 2.300997018814087, 2.221479892730713], "accuracy": [0.2078985571861267, 0.2262580841779709, 0.09760929644107819, 0.09893012791872025, 0.10342095047235489, 0.18676528334617615], "val_loss": [2.0869557857513428, 2.3121259212493896, 2.3037803173065186, 2.302177906036377, 2.295868158340454, 1.9818538427352905], "val_accuracy": [0.34166666865348816, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.10999999940395355, 0.3073333203792572]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 8, 1, 9, 1, 1, 2, 5, 6, 0, 8, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 2, 0, 0, 1, 3], [43, 98, 97, 0, 80], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 6, 9, 3, 5, 8, 0, 5, 0, 6, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 2, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [30, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3451428711414337, "mapping_values": [1, 1, 0, 1, 0, 11, 8, 3, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.square(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.285499095916748, 2.3322181701660156, 2.2485339641571045, 2.2974605560302734, 2.779205322265625, 2.3038244247436523], "accuracy": [0.19733192026615143, 0.1798969805240631, 0.1500462293624878, 0.15017831325531006, 0.1162329912185669, 0.10408136248588562], "val_loss": [2.2834601402282715, 2.3087668418884277, 2.297424554824829, 4.956068515777588, 2.3042995929718018, 2.2993640899658203], "val_accuracy": [0.3513333201408386, 0.10066666454076767, 0.1586666703224182, 0.24799999594688416, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 2, 8, 4, 2, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 2, 2, 1, 2, 0, 0, 1, 3], [85, 5, 58, 77, 3, 46], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 0, 5, 2, 2, 5, 1, 0, 6, 1, 1, 9, 0, 3, 5, 5, 3, 3, 8, 8, 3, 4, 0, 6, 9, 8, 6, 2, 4, 4, 2, 5, 6, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 0, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 0, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2637142837047577, "mapping_values": [1, 10, 5, 5, 0, 69, 44, 25, 5, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(tf.math.pow(grad, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.square(grad)), tf.math.add(tf.math.add(tf.math.square(tf.math.subtract(grad, alpha)), alpha), grad)), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.square(tf.math.square(tf.math.multiply(tf.math.multiply(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(beta, grad)))))))), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.pow(grad, tf.math.add(grad, grad)), tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), grad)), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), grad), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2684524059295654, 2.369333505630493, 2.339698553085327, 2.4916818141937256, 2.304983377456665, 2.3036015033721924, 2.3029918670654297], "accuracy": [0.2250693440437317, 0.21635186672210693, 0.2082948088645935, 0.10698718577623367, 0.09655263274908066, 0.09655263274908066, 0.09906221181154251], "val_loss": [2.2923314571380615, 2.2441201210021973, 3.2354698181152344, 2.304816484451294, 2.3028273582458496, 2.3025588989257812, 2.30222225189209], "val_accuracy": [0.09833333641290665, 0.26866665482521057, 0.14766666293144226, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [9, 1, 2, 8, 2, 1, 1, 2, 5, 3, 0, 8, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 1, 2, 0, 2, 1, 0, 1, 3], [24, 98, 97, 0, 80], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 4, 9, 3, 5, 4, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [85, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [61, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22857142984867096, "mapping_values": [1, 1, 1, 0, 1, 78, 48, 30, 5, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 54, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(grad, tf.math.negative(grad)), tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.sqrt(alpha)), beta), grad))), tf.math.multiply(tf.math.pow(tf.math.negative(beta), grad), tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(beta), tf.math.add(grad, grad)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, grad)))))), tf.math.add(tf.math.square(alpha), grad)), grad), alpha))), tf.math.pow(beta, grad))))), grad))))), grad), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(grad), grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.45188045501709, 2.2684924602508545, 2.4729137420654297, 2.2478623390197754, 3.3800246715545654, 2.3079721927642822, 2.305859327316284], "accuracy": [0.190859854221344, 0.1666886806488037, 0.2565050721168518, 0.1328754425048828, 0.12349755316972733, 0.10355303436517715, 0.09628847241401672], "val_loss": [2.302701234817505, 2.2860846519470215, 2.308321714401245, 2.1008729934692383, 2.313711166381836, 2.3060238361358643, 2.3025546073913574], "val_accuracy": [0.10000000149011612, 0.22699999809265137, 0.10199999809265137, 0.19200000166893005, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 8, 1, 2, 1, 1, 9, 5, 8, 1, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 2, 0, 0, 1, 3], [85, 5, 96, 77, 3, 46], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 3, 0, 5, 2, 2, 5, 1, 5, 6, 1, 1, 0, 0, 3, 5, 5, 3, 3, 8, 8, 3, 4, 0, 6, 9, 8, 6, 2, 4, 4, 2, 5, 6, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 0, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 0, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [74, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [2, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.17428570985794067, "mapping_values": [1, 20, 13, 7, 6, 3, 1, 2, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.add(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad)))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(grad), grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.209850311279297, 2.3967573642730713, 2.3039703369140625, 2.590825080871582, 2.309216022491455, 2.304074287414551, 2.30309796333313, 2.303149461746216], "accuracy": [0.1916523575782776, 0.16061286628246307, 0.1088363528251648, 0.1760665625333786, 0.09826971590518951, 0.10038304328918457, 0.10011887550354004, 0.09747721254825592], "val_loss": [2.291100025177002, 2.307548999786377, 2.2904295921325684, 2.3134167194366455, 2.3030846118927, 2.3023929595947266, 2.302478075027466, 2.3025171756744385], "val_accuracy": [0.1536666601896286, 0.09566666930913925, 0.17133332788944244, 0.10166666656732559, 0.10166666656732559, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 1, 2, 1, 1, 2, 5, 5, 0, 8, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 2, 2, 0, 1, 3], [56, 98, 97, 0, 80], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 2, 3, 2, 3, 1, 1, 3, 2, 3, 2, 3, 3, 3, 2, 3, 1, 0, 3, 5, 1, 0, 3, 1, 2, 3, 3, 1, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.13457143306732178, "mapping_values": [1, 22, 15, 7, 4, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.square(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.square(grad))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4879989624023438, 2.25663423538208, 2.233433485031128, 2.30678391456604, 2.303814172744751, 2.303225517272949], "accuracy": [0.1806894689798355, 0.14489498734474182, 0.18372738361358643, 0.10289261490106583, 0.08968432247638702, 0.09721305221319199], "val_loss": [2.249873638153076, 2.2998931407928467, 2.312869071960449, 2.302985429763794, 2.3026583194732666, 2.3027689456939697], "val_accuracy": [0.13199999928474426, 0.09833333641290665, 0.09866666793823242, 0.10066666454076767, 0.09799999743700027, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 2, 1, 2, 5, 1, 2, 5, 5, 0, 8, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 2, 1, 0, 2, 0, 1, 3], [24, 98, 97, 0, 80], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 9, 3, 5, 4, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 2, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 5, 6, 3, 9, 2, 6, 0, 8, 2, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 0, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 52, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 5, 3, 2, 0, 3, 1, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3043065071105957, 2.3029117584228516, 2.3029041290283203, 2.302887439727783, 2.3030266761779785, 2.3030593395233154], "accuracy": [0.09325055778026581, 0.0956280529499054, 0.09377889335155487, 0.09721305221319199, 0.09536388516426086, 0.09430722147226334], "val_loss": [2.302647352218628, 2.3026282787323, 2.302788496017456, 2.302694320678711, 2.3026628494262695, 2.302659034729004], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.09966666996479034, 0.10233332961797714, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 2, 1, 2, 1, 3, 2, 5, 5, 0, 8, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [1, 2, 0, 0, 3, 0, 0, 2, 3], [85, 5, 58, 77, 3, 46], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 3, 0, 5, 2, 2, 5, 1, 0, 6, 1, 1, 9, 0, 3, 5, 5, 3, 3, 8, 8, 3, 5, 0, 6, 9, 8, 6, 2, 4, 4, 2, 2, 6, 2, 6, 8, 5, 2, 6, 8, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 1, 3, 3, 3, 1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 3, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [54, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 73, 47, 26, 5, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.negative(alpha), tf.math.square(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(grad, tf.math.square(grad)))), tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(alpha)), beta), grad))), tf.math.multiply(tf.math.square(tf.math.negative(grad)), grad))), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))), tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(grad, grad))), tf.math.add(tf.math.square(alpha), grad)))), grad), alpha))))), tf.math.pow(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.830766201019287, 2.399104118347168, 2.3057727813720703, 2.3034887313842773, 2.303054094314575, 2.3029730319976807, 2.302910804748535], "accuracy": [0.17514199018478394, 0.15797120332717896, 0.09721305221319199, 0.09272222965955734, 0.09813763201236725, 0.0952318087220192, 0.09998679161071777], "val_loss": [2.3056282997131348, 2.3084239959716797, 2.30374813079834, 2.3029885292053223, 2.3026905059814453, 2.302727222442627, 2.3026130199432373], "val_accuracy": [0.09700000286102295, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09566666930913925, 0.09566666930913925, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 2, 8, 1, 2, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 2, 0, 0, 1, 3], [85, 5, 58, 77, 3, 46], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 5, 3, 0, 2, 2, 2, 5, 1, 0, 6, 1, 1, 9, 0, 3, 5, 5, 3, 3, 8, 8, 2, 4, 0, 6, 9, 8, 6, 2, 4, 4, 8, 5, 6, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 1, 1, 3, 3, 1, 3, 0, 2, 3, 2, 3, 3, 3, 1, 3, 0, 3, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 49, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [2, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.371676445007324, 2.3199656009674072, 2.3068015575408936, 2.3037757873535156, 2.3031985759735107, 2.3030619621276855, 2.3029534816741943, 2.3030076026916504, 2.302903413772583, 2.3031091690063477, 2.3030617237091064], "accuracy": [0.19574692845344543, 0.09853387624025345, 0.09285431355237961, 0.09721305221319199, 0.0944393053650856, 0.09655263274908066, 0.09074098616838455, 0.09457138925790787, 0.1002509593963623, 0.09708096832036972, 0.09087307006120682], "val_loss": [2.3322715759277344, 2.3089404106140137, 2.3039584159851074, 2.3028223514556885, 2.3025126457214355, 2.302602767944336, 2.3026082515716553, 2.3028366565704346, 2.3025295734405518, 2.3025670051574707, 2.302614212036133], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10233332961797714, 0.10499999672174454, 0.0989999994635582, 0.09533333033323288, 0.0989999994635582, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 8, 1, 4, 1, 1, 9, 5, 8, 2, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 1, 2, 0, 2, 0, 0, 1, 3], [85, 5, 58, 77, 7, 46], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 8, 9, 3, 5, 8, 0, 5, 0, 6, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 3, 2, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [74, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [2, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, alpha), tf.math.subtract(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.625761032104492, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20340773463249207, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [54.38285446166992, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]