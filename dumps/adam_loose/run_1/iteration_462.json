[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [3, 0, 3, 0, 3, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [0, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 3, 2, 8, 5, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 0, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.42742857336997986, "mapping_values": [1, 3, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2773025035858154, 2.2481906414031982, 4.007986545562744, 2.3088736534118652, 2.3042635917663574, 2.3032524585723877, 2.3031837940216064], "accuracy": [0.20314356684684753, 0.1978602558374405, 0.19812442362308502, 0.09774138033390045, 0.09774138033390045, 0.09840179979801178, 0.09325055778026581], "val_loss": [2.261033773422241, 1.664955735206604, 2.312603712081909, 2.3044676780700684, 2.3028311729431152, 2.3026340007781982, 2.3025760650634766], "val_accuracy": [0.20533333718776703, 0.4176666736602783, 0.10100000351667404, 0.10400000214576721, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [3, 0, 3, 0, 3, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [22, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 1, 7, 8, 4, 3, 5, 8, 1, 3, 6, 1, 9, 6, 2, 4, 4, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 2, 5, 0, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.329714298248291, "mapping_values": [1, 3, 1, 2, 1, 2, 1, 1, 0, 12, 6, 6, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(sigma, beta), beta), tf.math.sqrt(grad)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.320030689239502, 2.270291566848755, 2.5787441730499268, 2.366846799850464, 2.269369602203369, 2.288893938064575, 2.303739547729492, 2.303074359893799, 2.301985502243042, 2.2589645385742188], "accuracy": [0.19918107986450195, 0.13036586344242096, 0.17461365461349487, 0.10157178342342377, 0.14740456640720367, 0.12402588874101639, 0.09721305221319199, 0.09602430462837219, 0.10553427785634995, 0.1550653874874115], "val_loss": [2.2849247455596924, 2.2831835746765137, 2.679492950439453, 2.304605484008789, 2.1502838134765625, 2.3028910160064697, 2.3024699687957764, 2.3019864559173584, 2.2985644340515137, 2.0264124870300293], "val_accuracy": [0.10766666382551193, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.3323333263397217, 0.10100000351667404, 0.0989999994635582, 0.10633333027362823, 0.12999999523162842, 0.3293333351612091]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 2, 3, 1, 1, 8, 9, 1, 6, 8, 5, 5, 2, 2, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 0, 3, 0, 3, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [22, 56, 60, 43, 66, 52, 74, 98, 7, 45], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 0, 5, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 3, 7, 8, 4, 3, 5, 8, 1, 3, 6, 1, 9, 6, 2, 4, 4, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 2, 2, 5, 0, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [46, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3005714416503906, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6321821212768555, 2.305018186569214, 2.3020060062408447, 2.289280891418457, 2.2461915016174316, 2.3040478229522705, 2.3037867546081543, 2.303133964538574, 2.299347400665283], "accuracy": [0.1784440577030182, 0.10170386731624603, 0.11451591551303864, 0.1578391194343567, 0.1850482076406479, 0.09285431355237961, 0.0948355570435524, 0.09879804402589798, 0.12442214041948318], "val_loss": [2.3067562580108643, 2.303015947341919, 2.2962396144866943, 2.258596897125244, 2.3041865825653076, 2.30259108543396, 2.302433967590332, 2.301478862762451, 2.2807457447052], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.19233334064483643, 0.2983333468437195, 0.10000000149011612, 0.10400000214576721, 0.10000000149011612, 0.10400000214576721, 0.16733333468437195]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 52, 60, 43, 66, 52, 74, 98, 7, 45], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 6, 5, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 9, 3, 7, 8, 4, 3, 5, 8, 1, 3, 6, 1, 9, 6, 2, 4, 4, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 2, 2, 5, 0, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2751428484916687, "mapping_values": [1, 6, 3, 3, 3, 1, 0, 1, 0, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4098026752471924, 2.5156779289245605, 2.243767738342285, 2.3113112449645996, 2.2941672801971436, 2.2356784343719482, 2.3077733516693115, 2.2810308933258057], "accuracy": [0.18940694630146027, 0.18438778817653656, 0.17144367098808289, 0.13974376022815704, 0.12600713968276978, 0.19138818979263306, 0.09998679161071777, 0.17897239327430725], "val_loss": [2.285459041595459, 2.229217767715454, 2.2623889446258545, 2.303084373474121, 2.1657137870788574, 2.312814712524414, 2.3010547161102295, 2.308342695236206], "val_accuracy": [0.23933333158493042, 0.16899999976158142, 0.28200000524520874, 0.10066666454076767, 0.27399998903274536, 0.10066666454076767, 0.1106666699051857, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [36, 56, 60, 43, 66, 52, 74, 98, 7, 45], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 0, 5, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 3, 2, 8, 5, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 8, 1, 3, 2, 6, 2, 4, 4, 0, 5, 3, 2, 7, 2, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 2, 2, 0, 3, 0, 3, 3, 2, 2, 1, 2, 0, 0, 6, 1, 0, 7, 2, 0, 3, 4, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 34, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.25, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 71, 43, 28, 10, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(beta))))), beta), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(sigma, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.sqrt(beta), tf.math.sqrt(tf.math.square(beta))), tf.math.sqrt(tf.math.subtract(alpha, beta))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.math.pow(tf.math.negative(alpha), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.square(tf.math.multiply(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(sigma, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(beta), grad)))), tf.math.add(tf.math.add(tf.math.pow(tf.math.sqrt(sigma), tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.497816562652588, 2.300240993499756, 2.3025448322296143, 2.2438442707061768, 2.316103935241699, 2.3035848140716553, 2.303203582763672, 2.303133487701416, 2.3031485080718994], "accuracy": [0.17804782092571259, 0.16814158856868744, 0.10593052208423615, 0.19112402200698853, 0.11451591551303864, 0.10091137140989304, 0.09919429570436478, 0.09985470771789551, 0.09866596013307571], "val_loss": [2.3001866340637207, 2.303879976272583, 2.2988665103912354, 2.287292718887329, 2.302856206893921, 2.302774667739868, 2.302504777908325, 2.3026280403137207, 2.3025834560394287], "val_accuracy": [0.19466666877269745, 0.10266666859388351, 0.12966667115688324, 0.25433334708213806, 0.10100000351667404, 0.09833333641290665, 0.10266666859388351, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [2, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 7, 5, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 3, 2, 8, 3, 3, 6, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 8, 1, 3, 2, 6, 2, 4, 4, 0, 5, 3, 2, 7, 2, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 2, 2, 0, 3, 5, 3, 3, 2, 2, 1, 2, 0, 0, 6, 1, 0, 7, 2, 0, 3, 4, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2014285773038864, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 1, 17, 9, 8, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta)), tf.math.multiply(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.divide_no_nan(grad, tf.math.sqrt(sigma))), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.2636117935180664, 2.2983765602111816, 2.338009834289551, 2.2966504096984863, 2.320641040802002, 2.305612564086914, 2.3037750720977783], "accuracy": [0.1802932173013687, 0.11887465417385101, 0.13551710546016693, 0.12759213149547577, 0.1398758441209793, 0.09840179979801178, 0.09470347315073013], "val_loss": [2.3041584491729736, 2.165923595428467, 2.304455518722534, 2.2139720916748047, 2.3072948455810547, 2.3033409118652344, 2.3026676177978516], "val_accuracy": [0.10100000351667404, 0.19900000095367432, 0.10333333164453506, 0.18299999833106995, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 1, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 6, 5, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 4, 0, 7, 8, 4, 3, 5, 8, 1, 3, 6, 1, 9, 6, 2, 4, 4, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 2, 6, 5, 0, 0, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.20028571784496307, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.35630202293396, 2.331554412841797, 2.3046929836273193, 2.253857374191284, 2.235335350036621, 2.273267984390259], "accuracy": [0.19799233973026276, 0.14872540533542633, 0.09734513610601425, 0.15453705191612244, 0.19680359959602356, 0.1946902722120285], "val_loss": [2.2891223430633545, 2.3055336475372314, 2.2988038063049316, 2.2641851902008057, 2.292785882949829, 2.3235316276550293], "val_accuracy": [0.20233333110809326, 0.10433333367109299, 0.09600000083446503, 0.1626666635274887, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [5, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [1, 2, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [35, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [1, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 4, 3, 7, 8, 4, 3, 5, 8, 1, 3, 6, 1, 9, 6, 2, 4, 4, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 4, 3, 0, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [11759.4599609375, NaN, 2.328270435333252, 2.308610677719116, 2.3040390014648438, 2.3031094074249268], "accuracy": [0.20142649114131927, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09576013684272766, 0.09628847241401672], "val_loss": [12566129.0, 2.343090772628784, 2.311641216278076, 2.3042519092559814, 2.302875280380249, 2.302680730819702], "val_accuracy": [0.10966666787862778, 0.10199999809265137, 0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [0, 0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [92, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [4, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 3, 2, 8, 5, 0, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 0, 3, 2, 3, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 12, 7, 5, 1, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(beta)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3041718006134033, 2.3029332160949707, 2.3029160499572754, 2.3029608726501465, 2.302935838699341, 2.303098201751709, 2.303187131881714, 2.302870273590088], "accuracy": [0.09259014576673508, 0.09536388516426086, 0.09615638852119446, 0.09668471664190292, 0.0936468094587326, 0.09509972482919693, 0.0940430611371994, 0.09272222965955734], "val_loss": [2.302612543106079, 2.3025689125061035, 2.302534580230713, 2.3025455474853516, 2.3025667667388916, 2.3025894165039062, 2.3026394844055176, 2.3026793003082275], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.10199999809265137, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 8, 3, 1, 1, 8, 9, 1, 6, 8, 1, 1, 3, 4, 4, 2, 1, 8, 2, 9, 3, 5, 0, 1, 5, 1, 4, 1, 1, 2, 4, 9, 6, 0, 4, 3, 4, 6, 3, 3, 4, 3, 4], [2, 1, 3, 0, 3, 0, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 1, 2, 3, 2, 0, 1, 2], [97, 56, 60, 43, 66, 52, 74, 98, 7, 45], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 1, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 0, 5, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [96, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 7, 2, 8, 5, 3, 5, 8, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 8, 1, 3, 2, 6, 2, 4, 4, 0, 5, 3, 2, 7, 2, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [3, 2, 2, 0, 0, 0, 3, 3, 2, 2, 1, 2, 0, 0, 6, 1, 0, 7, 2, 0, 3, 4, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [20, 94, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [3, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.09228571504354477, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.309832811355591, 2.3105239868164062, 2.3105297088623047, 2.310391664505005, 2.3108553886413574, 2.3101518154144287], "accuracy": [0.09126931428909302, 0.09259014576673508, 0.09470347315073013, 0.09351472556591034, 0.0878351628780365, 0.08915598690509796], "val_loss": [2.3083858489990234, 2.3083858489990234, 2.3083858489990234, 2.3083858489990234, 2.3083858489990234, 2.3083858489990234], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]