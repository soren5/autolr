[{"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 4, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 3, 1, 3, 4, 5, 1], [89, 13, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 0, 3, 0, 5, 8, 2, 5, 9, 5, 1, 8, 4, 3, 2, 1], [4, 5, 7, 5, 4, 2, 3, 1], [60, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.5460000038146973, "mapping_values": [1, 1, 0, 1, 0, 13, 8, 5, 1, 12, 9, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha)), tf.math.add(tf.math.negative(tf.math.square(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(grad), tf.math.multiply(tf.math.negative(grad), tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.692697763442993, 3.088352918624878, 2.1073660850524902, 2.096987724304199, 2.217750310897827, 2.2957937717437744, 2.306033134460449, 2.3045806884765625, 2.304314613342285], "accuracy": [0.16457535326480865, 0.14278165996074677, 0.266939640045166, 0.3043191134929657, 0.2690529525279999, 0.12917712330818176, 0.09932637959718704, 0.10117553919553757, 0.1018359512090683], "val_loss": [6.928485870361328, 2.084505558013916, 1.752969741821289, 1.7492797374725342, 2.3165037631988525, 2.304025173187256, 2.3026366233825684, 2.302924394607544, 2.3026607036590576], "val_accuracy": [0.09600000083446503, 0.28966665267944336, 0.4269999861717224, 0.5440000295639038, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.0989999994635582, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [5, 0, 7, 5, 7, 2, 3, 4, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.31542858481407166, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4427316188812256, 2.623767137527466, 2.3041164875030518, 2.3028078079223633, 2.301208019256592, 2.205113649368286, 2.3151438236236572, 2.302982807159424, 2.2400600910186768, 2.3911924362182617, 2.3059585094451904], "accuracy": [0.20604939758777618, 0.10936468094587326, 0.09906221181154251, 0.10276053100824356, 0.11187426000833511, 0.20472857356071472, 0.1208558976650238, 0.10289261490106583, 0.17884030938148499, 0.18953903019428253, 0.1010434553027153], "val_loss": [3.8713219165802, 2.3055009841918945, 2.303368091583252, 2.302043914794922, 2.296027421951294, 2.2657699584960938, 2.3033199310302734, 2.2998127937316895, 2.206402540206909, 2.3062660694122314, 2.3027987480163574], "val_accuracy": [0.17399999499320984, 0.09700000286102295, 0.09700000286102295, 0.13600000739097595, 0.1576666682958603, 0.31466665863990784, 0.10300000011920929, 0.10066666454076767, 0.2473333328962326, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 9, 3, 8, 0], [1, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 8, 0, 5, 8, 2, 5, 9, 8, 4, 0, 0, 3, 2, 5], [1, 5, 7, 5, 7, 2, 3, 1], [14, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.25057142972946167, "mapping_values": [1, 5, 3, 2, 1, 8, 5, 3, 2, 12, 10, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), alpha))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6313283443450928, 2.278064250946045, 2.297107458114624, 2.341001033782959, 2.303337574005127, 2.3026106357574463, 2.2785661220550537, 2.378084421157837, 2.3413233757019043, 2.3050107955932617, 2.3038387298583984, 2.303161859512329, 2.3030571937561035], "accuracy": [0.18161405622959137, 0.1394795924425125, 0.11610091477632523, 0.15017831325531006, 0.09893012791872025, 0.1026284471154213, 0.15070664882659912, 0.14397041499614716, 0.1220446452498436, 0.09285431355237961, 0.09787346422672272, 0.09747721254825592, 0.09338264167308807], "val_loss": [2.3025095462799072, 2.3045876026153564, 2.16994047164917, 2.3035337924957275, 2.302612066268921, 2.3001112937927246, 3.0133018493652344, 2.123265027999878, 2.303530693054199, 2.3029706478118896, 2.3026576042175293, 2.3026933670043945, 2.3026039600372314], "val_accuracy": [0.09733333438634872, 0.1303333342075348, 0.17000000178813934, 0.10133333504199982, 0.10166666656732559, 0.10700000077486038, 0.09799999743700027, 0.2526666522026062, 0.09933333098888397, 0.10199999809265137, 0.0976666659116745, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 4, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 1, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 2, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 2, 3], [5, 0, 7, 2, 7, 4, 3, 0, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.22114285826683044, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 26, 16, 10, 3, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.multiply(grad, sigma))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), grad)), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4219138622283936, 2.2338414192199707, 2.206606149673462, 2.3260669708251953, 2.303642988204956, 2.3027396202087402], "accuracy": [0.1896711140871048, 0.18491612374782562, 0.20499274134635925, 0.1006472036242485, 0.09734513610601425, 0.10302469879388809], "val_loss": [2.289853811264038, 2.299107313156128, 2.2638955116271973, 2.303652286529541, 2.302659749984741, 2.294722557067871], "val_accuracy": [0.22166666388511658, 0.10533333569765091, 0.10233332961797714, 0.09666666388511658, 0.09933333098888397, 0.12800000607967377]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [1, 3, 2, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 6, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 2, 3], [5, 5, 7, 5, 7, 1, 3, 4, 4], [28, 56, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [0, 0, 1, 7, 3, 7, 6, 0, 2, 0], [90]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 0, 1, 0, 1, 0, 23, 15, 8, 1, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(grad, tf.math.multiply(grad, alpha))))))), tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303466558456421, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [4, 0, 1, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 3, 0, 5, 8, 5, 2, 9, 5, 1, 8, 4, 3, 7, 3, 7, 2, 4, 3, 6, 1, 2, 5, 8, 1, 4, 2, 4, 0, 3, 6, 1, 2, 9, 8, 1, 0, 4, 1, 7, 7, 5, 4], [3, 0, 7, 5, 4, 3, 3, 1, 3, 7, 4, 6, 5, 5, 7, 1, 6, 1, 1, 1, 4, 7, 2, 0, 7, 7, 4, 0, 4], [19, 51, 31, 77, 23], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 0, 73, 44, 29, 5, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.negative(grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(sigma, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(grad, tf.math.add(grad, tf.math.multiply(tf.math.add(grad, sigma), sigma))), alpha)))))))), tf.math.add(sigma, tf.math.pow(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.square(grad), grad), tf.math.sqrt(tf.math.subtract(grad, grad))), tf.math.pow(tf.math.add(tf.math.pow(tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(alpha, grad))), alpha), tf.math.subtract(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(alpha))), tf.math.subtract(grad, tf.math.negative(tf.math.pow(tf.math.subtract(grad, beta), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), grad))))), tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1043.4034423828125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19653943181037903, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [19777.57421875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 3, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [0, 0, 7, 5, 7, 2, 3, 4, 4, 2, 3, 7, 3, 7, 7, 3, 5, 6, 0, 4, 7], [92, 51, 29], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8, 7], [4, 0, 4, 7, 3, 7, 6, 0, 2, 0], [10, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 0, 1, 0, 1, 0, 2, 1, 1, 1, 17, 9, 8, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, grad), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.sqrt(sigma)), tf.math.add(grad, grad)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [2, 2, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [1, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 9, 8, 0, 5, 8, 5, 6, 9, 5, 4, 0, 0, 3, 2, 5], [3, 5, 7, 5, 4, 2, 3, 1], [20, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [10]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 0, 3, 1, 2, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.431365966796875, 2.3039472103118896, 2.3032000064849854, 2.3029966354370117, 2.303025007247925, 2.3028347492218018, 2.3027679920196533, 2.302777051925659, 2.300966262817383], "accuracy": [0.18901069462299347, 0.09549596905708313, 0.09417514503002167, 0.1014397069811821, 0.09589222073554993, 0.09985470771789551, 0.09945846349000931, 0.09655263274908066, 0.1138555034995079], "val_loss": [2.304229497909546, 2.3029532432556152, 2.302621841430664, 2.3024539947509766, 2.302544593811035, 2.3025104999542236, 2.3023064136505127, 2.301927089691162, 2.2861757278442383], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10466666519641876, 0.09799999743700027, 0.0976666659116745, 0.09799999743700027, 0.10400000214576721, 0.10466666519641876]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 2, 3, 8, 0], [0, 3, 2, 3, 1, 0, 0, 2], [78, 66], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [3, 2, 0, 3, 4, 5, 1], [89, 68, 13, 88, 37], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [8, 1, 8, 0, 5, 8, 2, 0, 9, 8, 4, 0, 0, 3, 2, 5], [5, 5, 7, 5, 7, 1, 3, 4, 4], [75, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 11, 9, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.negative(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [54.89075469970703, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19984149932861328, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [120457.640625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 1, 3, 8, 0], [0, 3, 1, 3, 1, 0, 0, 2], [78, 66], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 7, 2, 9, 8, 2, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 0, 3, 4, 5, 1], [68, 32, 45, 75, 64, 8, 75], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 6, 0, 5, 8, 5, 2, 9, 9, 1, 4, 4, 3, 2, 3], [5, 5, 4, 5, 7, 0, 3, 4, 4], [28, 56, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 8], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [68]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 1, 1, 0, 1, 0, 13, 10, 3, 2, 15, 8, 7, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), alpha), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(grad)))), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]