[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [2, 6, 9, 7, 5, 5, 0, 2, 8, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 1, 0, 0, 3, 0, 0, 2, 3], [85, 5, 81, 3, 41, 46], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3311428427696228, "mapping_values": [1, 10, 7, 3, 2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.square(grad)), tf.math.negative(alpha))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4372949600219727, 2.3992156982421875, 2.3609371185302734, 2.3031234741210938, 2.2727274894714355, 2.3060359954833984], "accuracy": [0.19455818831920624, 0.15017831325531006, 0.17223615944385529, 0.09853387624025345, 0.1834632158279419, 0.09906221181154251], "val_loss": [2.145012617111206, 2.1648306846618652, 2.304138660430908, 2.2957000732421875, 2.3077077865600586, 2.3027780055999756], "val_accuracy": [0.3240000009536743, 0.2280000001192093, 0.09799999743700027, 0.22833333909511566, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 8, 2, 2, 1, 1, 9, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 3, 0, 0, 1, 3], [85, 5, 81, 3, 3, 46], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.313142865896225, "mapping_values": [1, 18, 12, 6, 4, 3, 1, 2, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(grad))))), tf.math.negative(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.478665828704834, 2.2747862339019775, 2.4451377391815186, 2.3034942150115967, 2.295701265335083, 2.24371600151062, 2.1365861892700195, 2.0960700511932373, 1.9938230514526367, 2.545774221420288, 2.306063652038574, 2.304542064666748, 2.3045613765716553, 2.303884506225586], "accuracy": [0.19138818979263306, 0.13036586344242096, 0.13432836532592773, 0.09642054885625839, 0.10289261490106583, 0.15519747138023376, 0.2522784173488617, 0.26337340474128723, 0.30365869402885437, 0.12270505726337433, 0.09813763201236725, 0.09919429570436478, 0.09325055778026581, 0.09800554811954498], "val_loss": [2.3270928859710693, 2.2301673889160156, 2.3049089908599854, 2.2971625328063965, 2.2735183238983154, 2.1041316986083984, 2.0675599575042725, 1.9593720436096191, 3.548699140548706, 2.3043081760406494, 2.303389072418213, 2.303340435028076, 2.303004503250122, 2.3027186393737793], "val_accuracy": [0.10300000011920929, 0.2706666588783264, 0.10066666454076767, 0.10700000077486038, 0.13600000739097595, 0.2696666717529297, 0.2893333435058594, 0.2863333225250244, 0.3166666626930237, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 5, 1, 5, 1, 1, 2, 8, 5, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 0, 0, 2, 0, 0, 1, 3], [24, 98, 97, 0, 80], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 1, 2, 5, 6, 2, 3, 0, 0, 1, 1, 2, 2, 0, 3, 8, 5, 3, 1, 9, 2, 3, 4, 0, 2, 0, 8, 6, 2, 2, 4, 2, 5, 2, 0, 6, 3, 8, 2, 0, 0, 8, 6, 2, 2, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 1, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.2199999988079071, "mapping_values": [1, 19, 13, 6, 5, 68, 42, 26, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, tf.math.negative(tf.math.negative(grad))), tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(grad))), grad), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.multiply(beta, grad))), beta))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.pow(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.sqrt(grad))), tf.math.divide_no_nan(grad, grad))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(grad)), tf.math.add(grad, alpha)))), tf.math.negative(tf.math.negative(beta))))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.415055513381958, 2.56034255027771, 2.301643133163452, 2.3954179286956787, 2.3037919998168945, 2.301713228225708], "accuracy": [0.18953903019428253, 0.17197199165821075, 0.10777968913316727, 0.12508255243301392, 0.09668471664190292, 0.11147800832986832], "val_loss": [2.264819622039795, 2.305410861968994, 2.220332145690918, 2.3047027587890625, 2.3026628494262695, 2.2970314025878906], "val_accuracy": [0.2253333330154419, 0.10266666859388351, 0.21466666460037231, 0.0976666659116745, 0.09933333098888397, 0.10966666787862778]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [8, 3, 8, 2, 2, 1, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 3, 0, 0, 1, 3], [85, 5, 81, 3, 41, 46], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 5, 2, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 1, 9, 2, 3, 4, 0, 2, 0, 8, 6, 2, 2, 4, 2, 5, 2, 0, 6, 3, 8, 2, 0, 0, 8, 6, 2, 2, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.168857142329216, "mapping_values": [1, 2, 1, 1, 0, 3, 1, 2, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4329335689544678, 3.1287436485290527, 2.314488410949707, 2.3041486740112305, 2.30318284034729, 2.3028950691223145], "accuracy": [0.18570862710475922, 0.1604807823896408, 0.09945846349000931, 0.09813763201236725, 0.09760929644107819, 0.10196803510189056], "val_loss": [2.303593873977661, 2.3116657733917236, 2.304314374923706, 2.30316424369812, 2.3028104305267334, 2.3027796745300293], "val_accuracy": [0.16466666758060455, 0.14533333480358124, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 6, 8, 2, 2, 1, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 1, 2, 3, 0, 0, 1, 3], [85, 5, 81, 3, 41, 46], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.12971428036689758, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3879120349884033, 2.5665488243103027, 2.3187811374664307, 2.3046715259552, 2.3035218715667725, 2.302945613861084], "accuracy": [0.20578522980213165, 0.17580240964889526, 0.1632545292377472, 0.09998679161071777, 0.09906221181154251, 0.09893012791872025], "val_loss": [2.302872657775879, 2.3096272945404053, 2.305145740509033, 2.303396463394165, 2.3022923469543457, 2.3017427921295166], "val_accuracy": [0.12800000607967377, 0.10100000351667404, 0.09966666996479034, 0.10199999809265137, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 6, 8, 2, 2, 1, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 1, 0, 0, 3, 0, 0, 2, 3], [85, 5, 81, 3, 41, 46], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 1, 2, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.874964475631714, 2.30556583404541, 2.3036537170410156, 2.3029022216796875, 2.3031466007232666, 2.3029134273529053, 2.302924394607544, 2.302839517593384, 2.320850133895874], "accuracy": [0.20116232335567474, 0.09998679161071777, 0.09391097724437714, 0.09377889335155487, 0.09496764093637466, 0.09589222073554993, 0.10130762308835983, 0.09721305221319199, 0.11200633645057678], "val_loss": [2.3069117069244385, 2.3034634590148926, 2.3028368949890137, 2.302618980407715, 2.302593469619751, 2.3025314807891846, 2.302583932876587, 2.3019723892211914, 2.303034543991089], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10100000351667404, 0.09833333641290665, 0.1003333330154419, 0.10000000149011612, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [2, 3, 8, 2, 2, 1, 1, 9, 8, 2, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 2, 0, 3, 0, 0, 1, 3], [24, 98, 97, 0, 98], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 1, 2, 2, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [79, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3044164180755615, 2.3028719425201416, 2.30293869972229, 2.3029093742370605, 2.302912950515747, 2.3028738498687744, 2.302975654602051, 2.303022861480713, 2.3029654026031494, 2.302976608276367], "accuracy": [0.08889182657003403, 0.09417514503002167, 0.09615638852119446, 0.09747721254825592, 0.09245806187391281, 0.09457138925790787, 0.09391097724437714, 0.09100515395402908, 0.09747721254825592, 0.09060890227556229], "val_loss": [2.3025991916656494, 2.302677869796753, 2.3025782108306885, 2.302633047103882, 2.3025286197662354, 2.3026280403137207, 2.3026280403137207, 2.302654504776001, 2.302555561065674, 2.3025662899017334], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09799999743700027, 0.10366666316986084, 0.10499999672174454, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 4, 2, 2, 5, 2, 1, 1, 8, 8, 0, 5, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 2, 1, 2, 3, 0, 0, 0, 3], [85, 5, 81, 3, 41, 46], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 4, 9, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [59, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 14, 7, 3, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(alpha)), tf.math.negative(tf.math.square(grad)))), grad))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [17.22920036315918, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19310526549816132, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4639.193359375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 6, 3, 1, 3, 1, 1, 2, 8, 0, 2, 0, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [2, 0, 0, 0, 1, 0, 0, 1, 3, 0], [24, 98, 98, 0, 39, 52], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 3, 0, 5, 2, 2, 5, 0, 0, 6, 5, 2, 4, 0, 3, 8, 5, 3, 3, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 3, 3, 3, 2, 0, 3, 2, 3, 2, 3, 3, 3, 3, 3, 1, 0, 3, 5, 1, 3, 3, 1, 2, 3, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 6, 23, 15, 8, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.negative(alpha), tf.math.square(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.negative(tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.math.pow(beta, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [728.904052734375, 2.701465129852295, 2.308875560760498, 2.3040356636047363, 2.303170680999756, 2.303083896636963, 2.302870750427246, 2.302948474884033, 2.302968978881836], "accuracy": [0.19878484308719635, 0.09774138033390045, 0.09760929644107819, 0.09774138033390045, 0.09589222073554993, 0.09496764093637466, 0.0940430611371994, 0.09747721254825592, 0.09021265059709549], "val_loss": [5.301647186279297, 2.311922550201416, 2.3041815757751465, 2.3027031421661377, 2.3026602268218994, 2.302678346633911, 2.302703619003296, 2.3026375770568848, 2.302669048309326], "val_accuracy": [0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10333333164453506, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 1, 5, 1, 1, 3, 0, 8, 0, 4, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [1, 2, 0, 0, 2, 3, 0, 1, 3], [24, 98, 97, 70, 98], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 3, 5, 8, 2, 5, 0, 0, 6, 1, 2, 2, 0, 1, 8, 5, 3, 4, 5, 8, 3, 4, 0, 2, 0, 8, 6, 2, 6, 4, 2, 5, 2, 2, 6, 3, 8, 2, 6, 0, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 1, 1, 1, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [99, 15, 31, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [6, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [94, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [0, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 74, 47, 27, 4, 11, 6, 5, 1, 1, 0, 1, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.subtract(alpha, tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.square(beta), grad), beta))))), tf.math.sqrt(tf.math.multiply(tf.math.pow(grad, beta), tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, tf.math.square(grad)), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, tf.math.divide_no_nan(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, grad))))), tf.math.add(tf.math.square(alpha), grad))), grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.pow(beta, grad)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(tf.math.pow(grad, grad)), tf.math.divide_no_nan(beta, sigma)), tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035902976989746, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]