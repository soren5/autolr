[{"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 5, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.2928571403026581, "mapping_values": [1, 1, 1, 0, 1, 12, 8, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.multiply(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4461276531219482, 2.2222840785980225, 2.30517578125, 2.2862112522125244, 2.2135586738586426, 2.3057878017425537, 2.303513288497925, 2.303184986114502, 2.3033862113952637], "accuracy": [0.20921939611434937, 0.19231277704238892, 0.09470347315073013, 0.15242372453212738, 0.22493726015090942, 0.1006472036242485, 0.09721305221319199, 0.10091137140989304, 0.09219389408826828], "val_loss": [2.3003604412078857, 2.3068766593933105, 2.3014893531799316, 2.1772098541259766, 2.312166929244995, 2.3036417961120605, 2.3028621673583984, 2.303027868270874, 2.3028926849365234], "val_accuracy": [0.10700000077486038, 0.10166666656732559, 0.10166666656732559, 0.29233333468437195, 0.09799999743700027, 0.09833333641290665, 0.09966666996479034, 0.09799999743700027, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 1, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.21628572046756744, "mapping_values": [1, 1, 0, 1, 0, 12, 8, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.multiply(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.265960931777954, 2.3106400966644287, 2.3033840656280518, 2.303032159805298, 2.302187204360962, 2.298962354660034, 2.226466178894043, 2.3086085319519043, 2.303797960281372, 2.302908420562744, 2.303269863128662], "accuracy": [0.19323734939098358, 0.09813763201236725, 0.10117553919553757, 0.09668471664190292, 0.1014397069811821, 0.13736626505851746, 0.19997358322143555, 0.09338264167308807, 0.09945846349000931, 0.09747721254825592, 0.09021265059709549], "val_loss": [2.3390822410583496, 2.3035624027252197, 2.302675247192383, 2.3023407459259033, 2.300888776779175, 2.290588140487671, 2.3110742568969727, 2.3029537200927734, 2.302473545074463, 2.3026843070983887, 2.3027379512786865], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.17466667294502258, 0.2070000022649765, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 3, 5, 1, 8, 0, 0, 7, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 5, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 6, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10857142508029938, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), grad), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.808167934417725, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.189274862408638, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [34.888675689697266, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 0, 3, 1, 0, 0, 2], [39, 66, 81], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 4, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 3, 5, 3, 4, 5, 1], [34, 59, 45, 75, 64, 8, 75], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 7, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 1, 4, 5, 7, 2, 3, 1], [93, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [59, 0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 8, 4, 4, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(sigma, alpha), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 0, 3, 1, 0, 0, 2], [5, 66], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 5, 5, 8, 0, 0, 7, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 5, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [27, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 8, 5, 3, 1, 5, 2, 3, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11966715008020401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [9, 2, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [2, 2, 5, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], [76, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3042049407958984, 2.3070335388183594, 2.323029041290283, 2.400026559829712, 2.910956859588623, 4.2377166748046875, 10.654356002807617, 56.432769775390625], "accuracy": [0.10236428678035736, 0.09470347315073013, 0.09338264167308807, 0.10011887550354004, 0.10434553027153015, 0.1022322028875351, 0.09866596013307571, 0.09668471664190292], "val_loss": [2.3067591190338135, 2.3066697120666504, 2.35107421875, 2.675645589828491, 2.9390316009521484, 6.8883256912231445, 29.186054229736328, 118.8246841430664], "val_accuracy": [0.0963333323597908, 0.10100000351667404, 0.10199999809265137, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10199999809265137, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 0, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [1, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 5, 2, 3, 2, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [9, 2, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 1, 5, 3, 4, 5, 1], [43, 87, 45, 75, 64, 8, 75], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [1, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [5, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [221.50619506835938, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19865275919437408, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [51870700.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [0, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 5, 3, 8, 0, 0, 7, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 5, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 0, 4, 5, 7, 2, 3, 1], [73, 51, 29], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [4, 0, 1, 7, 3, 7, 6, 0, 2, 0], [65, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 8, 4, 4, 1, 3, 1, 2, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, sigma)), tf.math.square(grad)), tf.math.subtract(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.305187225341797, 2.308251142501831, 2.3154208660125732, 2.4359145164489746, 2.737403154373169, 3.6177124977111816, 7.616071701049805], "accuracy": [0.09642054885625839, 0.09496764093637466, 0.09906221181154251, 0.09298639744520187, 0.09708096832036972, 0.10077928751707077, 0.10157178342342377], "val_loss": [2.303591728210449, 2.314478874206543, 2.3347418308258057, 2.481869697570801, 3.4049694538116455, 5.613470077514648, 17.985645294189453], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10100000351667404, 0.09866666793823242, 0.0963333323597908, 0.10166666656732559, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [9, 7, 9, 3, 8, 0], [2, 0, 0, 3, 1, 0, 0, 2], [55, 66], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 3, 9, 0, 0, 5, 7, 5, 2, 8, 2, 2, 1, 0], [0, 2, 1, 3, 4, 5, 1], [34, 87, 45, 75, 64, 8, 75], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 9, 4, 1, 8, 9, 1, 1, 5, 1, 8, 1, 2, 6, 3], [3, 2, 4, 5, 7, 2, 3, 1], [73, 51, 29], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1], [3, 0, 1, 7, 3, 7, 6, 0, 2, 0], []], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 0, 12, 8, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.multiply(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.309204578399658, 2.3107011318206787, 2.309361457824707, 2.3095455169677734, 2.309584379196167, 2.311143636703491], "accuracy": [0.09866596013307571, 0.08400475233793259, 0.09285431355237961, 0.09549596905708313, 0.0940430611371994, 0.08506141602993011], "val_loss": [2.3097598552703857, 2.3097598552703857, 2.3097598552703857, 2.3097598552703857, 2.3097598552703857, 2.3097598552703857], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]