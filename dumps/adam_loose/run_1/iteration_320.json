[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 9, 4, 1, 0, 9, 6, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 4, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [19, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 0, 7, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.7994285821914673, "mapping_values": [1, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [2.7744011878967285, 2.326228141784668, 2.3044302463531494, 2.303382635116577, 2.303260564804077, 2.303293228149414, 2.301793098449707, 2.217048168182373, 2.2713241577148438, 2.305917739868164, 2.6100542545318604, 2.239107847213745, 2.2911269664764404, 2.1358063220977783, 1.9636869430541992, 2.0521488189697266, 1.9657492637634277, 1.8718069791793823, 1.7008309364318848, 1.5583417415618896, 1.6571379899978638, 1.3884921073913574, 1.3686360120773315, 1.0871119499206543, 0.9950050115585327, 0.901596188545227, 0.9134227633476257, 0.8702462315559387, 0.7591321468353271, 0.8271021842956543, 0.7640429735183716, 0.7203696966171265, 0.7517816424369812, 0.7633546590805054, 0.7329610586166382, 0.7058857083320618, 0.6584867835044861, 0.6911731958389282, 0.6045255661010742, 0.6146743893623352, 0.5939112305641174, 0.5892988443374634, 0.5757490396499634, 0.5414074063301086, 0.5575324296951294, 0.5352026224136353, 0.5370614528656006, 0.5222486853599548, 0.5168737769126892, 0.5060750842094421, 0.5148197412490845, 0.4617546796798706, 0.48116591572761536], "accuracy": [0.17302866280078888, 0.10249637067317963, 0.09668471664190292, 0.09760929644107819, 0.09628847241401672, 0.09774138033390045, 0.1072513535618782, 0.18214239180088043, 0.15968827903270721, 0.09919429570436478, 0.1484612375497818, 0.1682736724615097, 0.11306300014257431, 0.23405098915100098, 0.31462156772613525, 0.29480913281440735, 0.311319500207901, 0.3879276216030121, 0.4049663245677948, 0.47193238139152527, 0.4167217016220093, 0.5190860033035278, 0.522520124912262, 0.5988640785217285, 0.6288469433784485, 0.661471426486969, 0.665830135345459, 0.6692643165588379, 0.7137762308120728, 0.6839255094528198, 0.7128516435623169, 0.7284374833106995, 0.7129837274551392, 0.7104741930961609, 0.7176066637039185, 0.7345132827758789, 0.7475894689559937, 0.7386078238487244, 0.7629110813140869, 0.7602694630622864, 0.7733456492424011, 0.7703077793121338, 0.7788931727409363, 0.7901201844215393, 0.785629391670227, 0.7948752045631409, 0.793950617313385, 0.7989697456359863, 0.8035926818847656, 0.8012151718139648, 0.8030643463134766, 0.8244617581367493, 0.8104609847068787], "val_loss": [2.366572618484497, 2.305255651473999, 2.302933931350708, 2.302797555923462, 2.302744150161743, 2.302464246749878, 2.296698808670044, 2.307036876678467, 2.308643102645874, 2.3017144203186035, 2.1521568298339844, 2.3050904273986816, 2.1421122550964355, 1.9106138944625854, 1.9910497665405273, 2.1028618812561035, 1.2680941820144653, 1.6313600540161133, 1.2686125040054321, 2.0794241428375244, 1.0706334114074707, 1.2067943811416626, 0.9113816618919373, 0.9058746099472046, 0.7918299436569214, 0.7868440747261047, 0.7948557138442993, 0.6866945028305054, 0.878620445728302, 0.6225579380989075, 0.6505666375160217, 0.6319898962974548, 0.6780809164047241, 0.6931844353675842, 0.642056941986084, 0.6317800879478455, 0.6758926510810852, 0.5901428461074829, 0.5403594374656677, 0.5946791768074036, 0.5627447366714478, 0.5569846034049988, 0.5334738492965698, 0.5548796653747559, 0.5524216294288635, 0.5314291715621948, 0.514367938041687, 0.5217276811599731, 0.5518898963928223, 0.552824854850769, 0.5307960510253906, 0.5411845445632935, 0.570951521396637], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.10233332961797714, 0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10000000149011612, 0.24799999594688416, 0.10166666656732559, 0.15399999916553497, 0.34700000286102295, 0.33399999141693115, 0.24899999797344208, 0.5636666417121887, 0.43433332443237305, 0.5633333325386047, 0.22366666793823242, 0.5996666550636292, 0.5619999766349792, 0.6643333435058594, 0.6359999775886536, 0.7020000219345093, 0.7116666436195374, 0.6766666769981384, 0.7250000238418579, 0.5983333587646484, 0.7483333349227905, 0.7229999899864197, 0.7513333559036255, 0.7160000205039978, 0.7226666808128357, 0.7419999837875366, 0.753333330154419, 0.7366666793823242, 0.7543333172798157, 0.7786666750907898, 0.7833333611488342, 0.7876666784286499, 0.7683333158493042, 0.7896666526794434, 0.7889999747276306, 0.7933333516120911, 0.7973333597183228, 0.79666668176651, 0.7983333468437195, 0.7943333387374878, 0.7820000052452087, 0.7983333468437195, 0.7850000262260437, 0.7696666717529297]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [20, 30, 38, 59, 92, 78, 29, 98], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 7, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 4, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [17, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 5, 6, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.7491428852081299, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(beta, sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.431004524230957, 2.299983024597168, 2.2773945331573486, 2.2879178524017334, 2.341343641281128, 2.1062941551208496, 1.7467435598373413, 1.5149242877960205, 1.2476938962936401, 1.2116121053695679, 1.0523910522460938, 1.0072107315063477, 1.0184237957000732, 0.9356448650360107, 0.9560157060623169, 0.9219019412994385, 0.9181540012359619, 0.8832272291183472, 0.874030351638794, 0.8446966409683228, 0.8429820537567139, 0.8358708620071411, 0.8175809383392334, 0.8362559080123901, 0.7907752394676208, 0.814544141292572], "accuracy": [0.1732928305864334, 0.12296922504901886, 0.11530841141939163, 0.21991810202598572, 0.13472460210323334, 0.2401268035173416, 0.37485140562057495, 0.45449742674827576, 0.5398229956626892, 0.5580504536628723, 0.6012415885925293, 0.6242240071296692, 0.6196011304855347, 0.64667809009552, 0.651168942451477, 0.6580372452735901, 0.6540747880935669, 0.6641130447387695, 0.6650376319885254, 0.672698438167572, 0.6763967871665955, 0.68101966381073, 0.6921146512031555, 0.6856426000595093, 0.7005679607391357, 0.693831741809845], "val_loss": [2.3002779483795166, 2.2689926624298096, 2.2929327487945557, 2.3247385025024414, 2.1500251293182373, 1.8665615320205688, 1.6662213802337646, 1.0999541282653809, 1.1450637578964233, 0.9638036489486694, 0.8261282444000244, 0.8428444266319275, 0.7818590402603149, 0.7721136808395386, 0.7862526774406433, 0.9957529306411743, 0.7693421840667725, 0.7084606885910034, 0.7371149063110352, 0.7638335824012756, 0.6835302114486694, 0.7327603101730347, 0.7556874752044678, 0.7295671105384827, 0.7517009973526001, 0.707815945148468], "val_accuracy": [0.10066666454076767, 0.10400000214576721, 0.2173333317041397, 0.27933332324028015, 0.17633333802223206, 0.40433332324028015, 0.4206666648387909, 0.625333309173584, 0.5669999718666077, 0.6209999918937683, 0.6769999861717224, 0.6433333158493042, 0.6923333406448364, 0.6986666917800903, 0.7110000252723694, 0.6136666536331177, 0.6663333177566528, 0.7046666741371155, 0.7123333215713501, 0.6909999847412109, 0.7400000095367432, 0.7106666564941406, 0.6776666641235352, 0.7326666712760925, 0.6513333320617676, 0.7253333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 9, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 5, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [6, 2, 7, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.36171427369117737, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4231748580932617, 2.69303560256958, 2.3038687705993652, 2.30307674407959, 2.3031723499298096, 2.3032310009002686], "accuracy": [0.20538897812366486, 0.18438778817653656, 0.09959053993225098, 0.09721305221319199, 0.09972262382507324, 0.09642054885625839], "val_loss": [2.2003397941589355, 2.303814172744751, 2.30269455909729, 2.3026628494262695, 2.302664041519165, 2.3027727603912354], "val_accuracy": [0.3569999933242798, 0.10066666454076767, 0.10166666656732559, 0.10066666454076767, 0.09933333098888397, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [55, 30, 38, 59, 92, 78, 29, 98], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 9, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 0, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 5, 2, 4, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 4, 0, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 7, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3108571469783783, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 2, 15, 9, 6, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2262988090515137, 2.342264175415039, 2.2845871448516846, 2.36230206489563, 2.3733890056610107, 2.30530047416687, 2.3035390377044678, 2.3028879165649414], "accuracy": [0.19878484308719635, 0.16114120185375214, 0.16536785662174225, 0.16391493380069733, 0.1002509593963623, 0.09589222073554993, 0.09681680053472519, 0.09338264167308807], "val_loss": [2.2637360095977783, 2.293009042739868, 2.124135732650757, 2.706287145614624, 2.306288480758667, 2.303380250930786, 2.3026068210601807, 2.3015618324279785], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.3086666762828827, 0.10000000149011612, 0.09966666996479034, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [20, 30, 38, 59, 92, 78, 29, 98], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 5, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 8, 2, 6, 2, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 4, 2, 3, 4, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 2, 0, 5, 1, 6, 2, 9], [6, 2, 7, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22914285957813263, "mapping_values": [1, 18, 14, 4, 5, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(grad), tf.math.negative(grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.692728042602539, 2.8214283992692315e+26, 2.3752596378326416, 2.3193416595458984, 2.30649733543396, 2.3034567832946777], "accuracy": [0.19772817194461823, 0.1080438494682312, 0.09760929644107819, 0.09800554811954498, 0.0944393053650856, 0.09668471664190292], "val_loss": [3.3640196323394775, NaN, 2.3290810585021973, 2.3073902130126953, 2.3032805919647217, 2.3025684356689453], "val_accuracy": [0.23066666722297668, 0.11033333092927933, 0.10066666454076767, 0.10066666454076767, 0.09933333098888397, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 9, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [20, 30, 38, 59, 92, 78, 29, 98], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 2, 9, 0, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 4, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 3, 4, 7, 1, 8, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [69, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.22457142174243927, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.math.sqrt(beta), sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.417034864425659, 3.1494250297546387, 2.3081159591674805, 2.30391001701355, 2.30344295501709, 2.3030896186828613], "accuracy": [0.20538897812366486, 0.23114515841007233, 0.0956280529499054, 0.1002509593963623, 0.09417514503002167, 0.0936468094587326], "val_loss": [2.056466817855835, 2.313100576400757, 2.304828405380249, 2.303164482116699, 2.3026516437530518, 2.3026018142700195], "val_accuracy": [0.22699999809265137, 0.0976666659116745, 0.09866666793823242, 0.0976666659116745, 0.09733333438634872, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [0, 0, 3, 2, 0, 0, 0, 0, 3], [20, 30, 38, 59, 92, 78, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [2, 4, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 2, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [37, 1, 29, 45, 84, 13, 74, 53, 87, 59], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 2, 0, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.20399999618530273, "mapping_values": [1, 12, 9, 3, 4, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.493199586868286, 2.889815330505371, 2.3062736988067627, 2.305246114730835, 2.303792953491211, 2.304258346557617], "accuracy": [0.17051908373832703, 0.12891295552253723, 0.09932637959718704, 0.10117553919553757, 0.09734513610601425, 0.09509972482919693], "val_loss": [2.2548558712005615, 2.305144786834717, 2.303138494491577, 2.3026552200317383, 2.3031253814697266, 2.3025104999542236], "val_accuracy": [0.19433332979679108, 0.10400000214576721, 0.10366666316986084, 0.10000000149011612, 0.09933333098888397, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [3, 1, 3, 2, 0, 0, 0, 0, 3], [90, 30, 38, 59, 92, 78, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 5, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [35, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 2, 0, 5, 1, 6, 2, 9], [1, 2, 3, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(beta, sigma))", "other_info": {"loss": [45026467840.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16840575635433197, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.529365735161486e+23, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [3, 0, 3, 2, 0, 0, 0, 0, 3], [20, 30, 38, 59, 92, 78, 29, 98], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 2, 9, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [5, 4, 0, 4, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [73, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 5, 4, 2, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [19, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [7, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 5, 3, 2, 1, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303999900817871, 2.302924156188965, 2.3030388355255127, 2.302950620651245, 2.3029210567474365, 2.3030683994293213, 2.3030080795288086, 2.3029990196228027, 2.3029298782348633, 2.3029022216796875, 2.303013563156128], "accuracy": [0.09576013684272766, 0.09932637959718704, 0.09325055778026581, 0.09840179979801178, 0.09893012791872025, 0.09325055778026581, 0.09272222965955734, 0.09708096832036972, 0.09245806187391281, 0.09311848133802414, 0.09430722147226334], "val_loss": [2.3026514053344727, 2.302659511566162, 2.3025996685028076, 2.3026175498962402, 2.302586793899536, 2.302534580230713, 2.3025918006896973, 2.3025643825531006, 2.3026437759399414, 2.3026318550109863, 2.302687883377075], "val_accuracy": [0.0989999994635582, 0.09700000286102295, 0.1003333330154419, 0.09700000286102295, 0.10133333504199982, 0.10499999672174454, 0.1003333330154419, 0.10133333504199982, 0.10066666454076767, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 6, 9, 4, 1, 1, 9, 5, 8, 0, 6, 9, 8, 5, 5, 2, 5, 6, 4, 3, 9], [3, 1, 3, 2, 0, 0, 0, 0, 3], [98, 30, 38, 59, 92, 78, 29, 98], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 1, 5, 8, 2, 5, 1, 0, 2, 1, 1, 9, 5, 3, 5, 5, 3, 5, 8, 1, 9, 4, 0, 6, 9, 8, 6, 0, 4, 4, 2, 5, 8, 3, 6, 8, 8, 2, 6, 5, 8, 6, 2, 5, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [3, 5, 0, 2, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 0, 3, 5, 1, 3, 3, 0, 2, 3, 0, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 5, 4, 6, 0, 3, 1, 9, 4, 3, 6, 1, 9, 6, 3, 4, 1, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 3, 2, 7, 9, 8, 6, 0, 7, 7, 4, 8, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [0, 4, 2, 3, 0, 2, 3, 3, 2, 5, 1, 4, 0, 0, 6, 1, 0, 7, 2, 0, 3, 3, 2, 6, 3, 0, 0, 4, 1, 4, 5, 1, 1], [35, 1, 29, 45, 84, 13, 74, 53, 87, 59], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 2, 0, 5, 1, 6, 2, 9], [6, 2, 7, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(beta, grad))", "other_info": {"loss": [2.312464714050293, 8305234631720960.0, 2.3109967708587646, 2.306950092315674, 2.305305242538452, 2.304194211959839, 2.30354642868042], "accuracy": [0.20816272497177124, 0.1014397069811821, 0.09826971590518951, 0.09457138925790787, 0.09509972482919693, 0.09377889335155487, 0.09259014576673508], "val_loss": [4.599218845367432, 2.3135976791381836, 2.3080859184265137, 2.30584716796875, 2.3045260906219482, 2.303560495376587, 2.303011655807495], "val_accuracy": [0.10199999809265137, 0.10300000011920929, 0.09700000286102295, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.10266666859388351]}}]