[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 1, 6, 5, 5, 4, 6, 6, 9, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 1, 3, 2, 0, 2, 3, 2, 0, 3, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 42, 12, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1, 1, 4, 1, 7, 7, 3, 2, 2, 7, 2, 4, 0, 4, 2, 1, 3, 2, 4, 5, 3], [42, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.34057143330574036, "mapping_values": [1, 1, 0, 1, 0, 11, 6, 5, 1, 79, 48, 31, 3, 1, 0, 1, 0], "tree_depth": 51, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, beta), alpha)), tf.math.square(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(tf.math.subtract(beta, tf.math.multiply(tf.math.subtract(sigma, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(beta, tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad))), alpha)), tf.math.pow(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(alpha, tf.math.pow(tf.math.negative(tf.math.add(grad, grad)), tf.math.add(sigma, tf.math.sqrt(beta)))), beta), grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(alpha)), tf.math.negative(sigma)), beta), grad))))))), tf.math.negative(tf.math.multiply(grad, tf.math.square(sigma)))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.345595359802246, 2.4327781200408936, 2.299121379852295, 2.3274929523468018, 2.2984538078308105, 2.4174463748931885, 2.246890068054199, 2.3034050464630127, 2.2900946140289307, 2.3387045860290527, 2.3050127029418945], "accuracy": [0.22374852001667023, 0.146479994058609, 0.12679962813854218, 0.11187426000833511, 0.11834631860256195, 0.137630432844162, 0.18451987206935883, 0.09906221181154251, 0.13459251821041107, 0.13261127471923828, 0.09774138033390045], "val_loss": [2.3038101196289062, 2.3134713172912598, 2.404345989227295, 2.302839756011963, 2.2530879974365234, 1.9625751972198486, 2.3060879707336426, 2.301506280899048, 1.9652376174926758, 2.304558277130127, 2.302851915359497], "val_accuracy": [0.10100000351667404, 0.10433333367109299, 0.2290000021457672, 0.10133333504199982, 0.3070000112056732, 0.34066668152809143, 0.09700000286102295, 0.09700000286102295, 0.25200000405311584, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [2, 2, 5, 5, 8, 6, 9, 7, 8, 0, 1, 4, 9], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97, 88], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 1, 8, 5, 1, 4, 6, 6, 0, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [5, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [77, 42, 12, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1, 4, 7, 4, 7, 7, 2, 0, 7, 2, 4, 7, 6, 5, 6, 4, 7, 0, 3, 2, 0], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [4, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.3354285657405853, "mapping_values": [1, 18, 13, 5, 4, 9, 5, 4, 1, 79, 48, 31, 5, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.square(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.pow(alpha, alpha), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), beta), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(tf.math.subtract(beta, tf.math.multiply(tf.math.subtract(sigma, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(beta, tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad))), alpha)), tf.math.pow(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.add(grad, grad)), tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), grad), beta), tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(grad), grad))))), tf.math.add(tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.square(grad)), tf.math.negative(grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), sigma))))))), tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3478763103485107, 2.258781909942627, 2.363050937652588, 2.2865495681762695, 2.280686378479004, 2.3008995056152344, 2.242422342300415], "accuracy": [0.20961563289165497, 0.18980319797992706, 0.20420023798942566, 0.1402720957994461, 0.13129045069217682, 0.10830801725387573, 0.19719983637332916], "val_loss": [2.203256845474243, 1.699519395828247, 2.303698778152466, 1.9521269798278809, 2.3026504516601562, 2.2956666946411133, 2.323166847229004], "val_accuracy": [0.2613333463668823, 0.3240000009536743, 0.09533333033323288, 0.3163333237171173, 0.10066666454076767, 0.1003333330154419, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 0, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 2, 2, 6, 8, 8, 2, 6, 9, 8, 6, 2, 9, 4, 1, 3, 9, 4, 5, 0, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 1, 3, 1, 5, 0, 9], [0, 4, 2, 1, 0, 3, 0, 1, 3, 5, 2, 0, 1, 3, 1, 3, 0, 3, 2, 3, 1, 2, 5, 5, 2, 0, 3, 3, 0, 5, 0, 0, 3, 3, 1, 1, 3, 0, 3, 5, 4], [42, 15, 80, 75, 17, 70, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.31228572130203247, "mapping_values": [1, 14, 9, 5, 2, 79, 50, 29, 10, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.multiply(alpha, tf.math.sqrt(alpha)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))))), tf.math.square(grad)), tf.math.multiply(grad, beta)), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)))))))), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)))))))), tf.math.pow(tf.math.subtract(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.multiply(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2691829204559326, 2.668210983276367, 2.3028571605682373, 2.2880215644836426, 2.3066678047180176, 2.3040332794189453, 2.3035717010498047, 2.3031818866729736], "accuracy": [0.20380398631095886, 0.1468762308359146, 0.11042134463787079, 0.20472857356071472, 0.09615638852119446, 0.09734513610601425, 0.09734513610601425, 0.1014397069811821], "val_loss": [2.2934603691101074, 2.312563896179199, 2.224125385284424, 2.3089678287506104, 2.3034329414367676, 2.302649974822998, 2.3025624752044678, 2.302490234375], "val_accuracy": [0.09866666793823242, 0.08366666734218597, 0.3153333365917206, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [3, 4, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 6, 1, 7, 9, 5, 9, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 7, 2, 0], [68, 12]], "fitness": -0.22771428525447845, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 11, 6, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta), sigma)))", "other_info": {"loss": [2.8614039421081543, 2.2731075286865234, 2.2698986530303955, 2.3541324138641357, 2.3039145469665527, 2.303511142730713], "accuracy": [0.16312244534492493, 0.16312244534492493, 0.15889579057693481, 0.10579843819141388, 0.09153348207473755, 0.09787346422672272], "val_loss": [2.2925965785980225, 2.301109790802002, 2.5818514823913574, 2.3030152320861816, 2.3030221462249756, 2.3028624057769775], "val_accuracy": [0.23133333027362823, 0.1003333330154419, 0.1783333271741867, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [3, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [5, 4, 1, 0, 5, 1, 5, 6, 6, 1, 1, 1, 2, 6, 1, 3, 8, 5, 3, 2, 5, 8, 3, 6, 0, 2, 0, 5, 6, 2, 6, 4, 2, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 2, 9, 6, 1, 3, 9, 4, 4, 3, 2, 1, 3, 8, 8, 0, 6, 8, 6, 3, 7, 8, 2, 8, 5, 5, 5, 9], [0, 4, 2, 3, 3, 3, 3, 1, 3, 3, 2, 2, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 3, 3, 1, 1, 1, 3, 0, 1, 5, 4], [42, 15, 80, 75, 17, 8, 82, 92, 32, 48, 89, 74], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.121714286506176, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.338240623474121, 2.4233901500701904, 2.439211130142212, 2.3033695220947266, 2.2039995193481445, 2.3072755336761475, 2.3034934997558594], "accuracy": [0.20261524617671967, 0.17342491447925568, 0.1298375427722931, 0.10685510188341141, 0.2028794139623642, 0.09760929644107819, 0.09998679161071777], "val_loss": [2.3023691177368164, 2.2310569286346436, 2.303257703781128, 2.291090488433838, 2.312434434890747, 2.304532766342163, 2.3030776977539062], "val_accuracy": [0.10166666656732559, 0.12200000137090683, 0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [0, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [9, 1, 1, 8, 5, 1, 4, 6, 6, 4, 8, 1, 2, 5, 1, 3, 8, 9, 5, 1, 5, 6, 6, 0, 9, 2, 3, 1, 9, 5, 4, 0, 8, 2, 3, 8, 6, 8, 2, 2, 6, 8, 8, 6, 1, 9, 3, 7, 3, 8, 8, 9, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [1, 4, 2, 2, 3, 3, 2, 1, 2, 0, 2, 0, 0, 3, 3, 3, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [42, 15, 80, 75, 79, 8, 31, 71, 15, 48, 89, 80, 37], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.450434684753418, 2.2878215312957764, 2.1804966926574707, 2.8928515911102295, 2.3060691356658936, 2.303720712661743, 2.303196907043457, 2.303075075149536], "accuracy": [0.18940694630146027, 0.11689341068267822, 0.20552106201648712, 0.11742173880338669, 0.09998679161071777, 0.09800554811954498, 0.1018359512090683, 0.09338264167308807], "val_loss": [2.3047170639038086, 2.3075668811798096, 2.3052220344543457, 2.308425188064575, 2.3035101890563965, 2.302839756011963, 2.3027262687683105, 2.3027515411376953], "val_accuracy": [0.09799999743700027, 0.09966666996479034, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 5, 3, 5, 0, 1, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [5, 4, 1, 0, 5, 1, 4, 6, 6, 4, 1, 1, 2, 6, 1, 3, 8, 5, 5, 2, 5, 8, 3, 6, 1, 2, 3, 5, 6, 2, 5, 4, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 6, 9, 6, 1, 3, 9, 0, 4, 3, 2, 4, 3, 8, 6, 0, 6, 8, 6, 3, 7, 8, 5, 8, 5], [3, 4, 2, 1, 3, 3, 3, 1, 3, 5, 2, 0, 1, 3, 4, 3, 0, 3, 2, 1, 1, 3, 5, 5, 2, 0, 3, 5, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0, 1, 5, 4], [55, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 7, 2, 5, 1, 6, 2, 9], [1, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.121927499771118, 84.8740234375, 1.3845086000508537e+29, 2.303130626678467, 2.3038318157196045, 2.3050055503845215], "accuracy": [0.09708096832036972, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.3160786628723145, 1379.091552734375, 2.3030107021331787, 2.3037831783294678, 2.304962158203125, 2.3065829277038574], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [8, 2, 2, 3, 5, 0, 1, 1, 8, 1, 5], [3, 0, 0, 1, 0, 1, 0, 2], [20, 1, 97], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [2, 1, 9, 0, 5, 1, 4, 6, 6, 4, 8, 1, 2, 9, 1, 3, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 8, 5, 0, 2, 6, 8, 8, 2, 6, 8, 8, 6, 1, 9, 5, 7, 3, 8, 6, 4, 3, 2, 4, 5, 8, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 1, 3, 3, 1, 1, 2, 2, 0, 1, 3, 4, 3, 0, 4, 2, 5, 1, 5, 5, 3, 2, 0, 3, 5, 0, 0, 3, 0, 3, 1, 1, 1], [55, 15, 80, 75, 46, 8, 82, 92, 32, 48, 89], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [2, 6, 4, 5, 7, 2, 3, 1, 2, 5, 1], [68, 51, 29, 63, 84, 13, 74, 53], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 8, 7, 2, 5, 1, 6, 2, 9], [5, 0, 4, 2, 3, 7, 0, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 1, 0, 1, 0, 13, 7, 6, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.math.add(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.add(beta, sigma), tf.math.square(grad)))))", "other_info": {"loss": [3.268198273719447e+30, 2.433567523956299, 2.332756519317627, 2.3098933696746826, 2.3043830394744873, 2.3033087253570557, 2.3031437397003174], "accuracy": [0.10236428678035736, 0.09602430462837219, 0.09708096832036972, 0.09747721254825592, 0.09879804402589798, 0.09813763201236725, 0.08836349099874496], "val_loss": [2.529653549194336, 2.351268768310547, 2.314009428024292, 2.304879665374756, 2.3031671047210693, 2.302715539932251, 2.3026249408721924], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 6, 9, 0, 5, 1, 4, 6, 6, 4, 1, 1, 2, 6, 1, 9, 8, 9, 5, 2, 4, 8, 3, 9, 1, 2, 3, 5, 6, 2, 5, 4, 5, 5, 0, 2, 6, 8, 2, 2, 6, 8, 8, 6, 6, 9, 6, 1, 3, 9, 0, 8, 3, 2, 4, 3, 8, 6, 0, 6, 8, 6, 3, 7, 8, 5, 8, 5, 0], [0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [23, 24, 80, 75, 46, 8, 82, 92, 32, 48, 89], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [78, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 3, 1, 2, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036863803863525, 2.302936553955078, 2.3030407428741455, 2.3029747009277344, 2.3029909133911133, 2.3030035495758057], "accuracy": [0.09747721254825592, 0.09377889335155487, 0.09126931428909302, 0.0952318087220192, 0.09576013684272766, 0.09549596905708313], "val_loss": [2.3026175498962402, 2.302610397338867, 2.302673101425171, 2.3025755882263184, 2.302703857421875, 2.3026537895202637], "val_accuracy": [0.10100000351667404, 0.09966666996479034, 0.10100000351667404, 0.0989999994635582, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 3, 5, 0, 9, 3, 8], [2, 0, 1, 1, 0, 0, 0, 2], [20, 5, 97], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 1, 2, 8, 5, 1, 4, 6, 6, 0, 8, 1, 2, 9, 1, 5, 8, 5, 5, 3, 5, 6, 6, 6, 9, 2, 3, 9, 6, 6, 5, 0, 9, 2, 3, 2, 6, 8, 8, 2, 6, 6, 8, 6, 9, 9, 5, 7, 3, 8, 4, 4, 3, 2, 4, 5, 6, 0, 0, 6, 8, 1, 7, 7, 2, 5], [0, 3, 2, 1, 1, 3, 3, 0, 2, 2, 2, 0, 0, 3, 3, 2, 0, 0, 2, 5, 1, 5, 5, 1, 2, 0, 3, 5, 0, 3, 3, 3, 3, 1, 1, 1], [42, 42, 84, 75, 46, 8, 31, 92, 99, 48, 89, 80, 66], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 7, 5, 3, 6, 2, 0, 1, 1, 5, 1, 3, 1, 2, 6, 3, 1, 3, 8, 8, 5, 4, 1, 3, 2, 6, 2, 4, 4, 0, 7, 2, 8, 7, 9, 8, 6, 0, 7, 7, 4, 2, 5, 0, 0, 3, 5, 9, 6, 8, 3, 3, 1, 0, 6, 8, 0, 1, 2, 9, 8, 8, 2, 8], [4, 2, 4, 5, 7, 2, 3, 1, 2, 5, 1], [10, 51, 29, 63, 84, 13, 74, 53], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 6, 1, 7, 2, 5, 1, 6, 2, 9], [5, 0, 6, 2, 3, 7, 6, 3, 2, 0], [68, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 23, 14, 9, 3, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), beta)), tf.math.square(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.sqrt(tf.math.subtract(grad, grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3043768405914307, 2.3030264377593994, 2.3030362129211426, 2.3030049800872803, 2.3028571605682373, 2.3029916286468506, 2.3029332160949707, 2.303126096725464, 2.303021192550659], "accuracy": [0.09153348207473755, 0.09430722147226334, 0.09179764986038208, 0.09734513610601425, 0.09681680053472519, 0.09655263274908066, 0.09826971590518951, 0.09377889335155487, 0.09298639744520187], "val_loss": [2.3026552200317383, 2.3025500774383545, 2.3025448322296143, 2.3025896549224854, 2.3025295734405518, 2.3026888370513916, 2.3026790618896484, 2.302661895751953, 2.3027145862579346], "val_accuracy": [0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.09866666793823242, 0.10000000149011612, 0.09866666793823242, 0.09799999743700027]}}]