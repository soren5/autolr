[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086695194244385, 1.1288950443267822, 0.7705909609794617, 0.6684213280677795, 0.6113235354423523, 0.5598296523094177, 0.5276572704315186, 0.4952450692653656, 0.47331947088241577, 0.45150572061538696, 0.4311385452747345, 0.40501564741134644, 0.393027126789093, 0.3863146901130676, 0.3800889253616333, 0.36045703291893005, 0.35171425342559814, 0.34107154607772827, 0.32068926095962524, 0.3191593885421753, 0.3060292899608612, 0.2992090582847595, 0.29536113142967224, 0.28661835193634033, 0.2747335731983185, 0.2697893977165222, 0.25803467631340027, 0.24984346330165863, 0.24563796818256378, 0.24293723702430725, 0.23833253979682922, 0.2306571751832962, 0.22463658452033997, 0.22176042199134827, 0.2121746987104416, 0.19701816141605377, 0.19187892973423004, 0.18850626051425934, 0.1938662976026535, 0.18981686234474182, 0.17513568699359894, 0.17845050990581512, 0.16374047100543976, 0.1627049595117569, 0.16293229162693024, 0.1608225405216217, 0.16340014338493347, 0.15293151140213013, 0.14543390274047852, 0.15497933328151703, 0.13535737991333008, 0.14357921481132507, 0.13364310562610626], "accuracy": [0.28424251079559326, 0.6123365759849548, 0.7123233675956726, 0.7477215528488159, 0.767401933670044, 0.7891955971717834, 0.7979130744934082, 0.8140271902084351, 0.8203672170639038, 0.8298771381378174, 0.8384625315666199, 0.8462554216384888, 0.8474441766738892, 0.8545766472816467, 0.8570862412452698, 0.8652753829956055, 0.872407853603363, 0.872407853603363, 0.8815215826034546, 0.8791441321372986, 0.8848236799240112, 0.8837670087814331, 0.8869370222091675, 0.8901069760322571, 0.8971073627471924, 0.8969752788543701, 0.89988112449646, 0.9046360850334167, 0.9091269373893738, 0.9076740145683289, 0.9071456789970398, 0.9115044474601746, 0.9129573106765747, 0.9141460657119751, 0.9181085824966431, 0.9247127175331116, 0.9222031235694885, 0.9252410531044006, 0.9241843819618225, 0.9288073182106018, 0.9305243492126465, 0.9318451881408691, 0.9385814070701599, 0.9381851553916931, 0.9379209876060486, 0.9401664137840271, 0.9344868659973145, 0.941091001033783, 0.9434685111045837, 0.9381851553916931, 0.950468897819519, 0.94558185338974, 0.9490159749984741], "val_loss": [1.135210633277893, 0.7034205794334412, 0.6200851798057556, 0.5685670375823975, 0.5225690603256226, 0.48798617720603943, 0.45845067501068115, 0.4466003477573395, 0.42649608850479126, 0.41432690620422363, 0.4066751301288605, 0.3922073245048523, 0.39636310935020447, 0.3949252963066101, 0.37349602580070496, 0.37519973516464233, 0.37423592805862427, 0.36534854769706726, 0.37613704800605774, 0.3537689745426178, 0.3586438000202179, 0.35678690671920776, 0.3658125698566437, 0.3550025224685669, 0.3521706461906433, 0.3612290918827057, 0.35216569900512695, 0.3580978512763977, 0.34706541895866394, 0.3620050847530365, 0.3585434854030609, 0.35542118549346924, 0.37169909477233887, 0.3568453788757324, 0.36463260650634766, 0.36916258931159973, 0.36460766196250916, 0.37031278014183044, 0.3689993619918823, 0.36874300241470337, 0.37947261333465576, 0.38180094957351685, 0.3874278664588928, 0.4032210409641266, 0.38796287775039673, 0.3866422474384308, 0.38430583477020264, 0.4010760188102722, 0.4146553874015808, 0.3991786241531372, 0.41994768381118774, 0.4028191864490509, 0.43447449803352356], "val_accuracy": [0.6039999723434448, 0.7406666874885559, 0.7576666474342346, 0.7720000147819519, 0.7923333048820496, 0.8066666722297668, 0.828000009059906, 0.8263333439826965, 0.8426666855812073, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.8539999723434448, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8730000257492065, 0.8709999918937683, 0.8706666827201843, 0.8619999885559082, 0.8673333525657654, 0.8759999871253967, 0.8733333349227905, 0.875333309173584, 0.875, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.878000020980835, 0.8820000290870667, 0.8803333044052124, 0.8806666731834412, 0.8843333125114441, 0.8803333044052124, 0.8859999775886536, 0.8823333382606506, 0.8793333172798157, 0.8836666941642761, 0.887333333492279, 0.8830000162124634, 0.8836666941642761, 0.887666642665863, 0.8816666603088379, 0.8880000114440918, 0.8763333559036255, 0.8849999904632568, 0.8863333463668823, 0.8820000290870667, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 9, 0], [0, 0, 3, 3], [16, 88, 83], [0, 1, 1], [9], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8725714087486267, "mapping_values": [1, 9, 5, 4, 2, 11, 8, 3, 3, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1067168712615967, 1.1570429801940918, 0.791723370552063, 0.6744901537895203, 0.5997067093849182, 0.5578604936599731, 0.529360294342041, 0.4958288073539734, 0.47613662481307983, 0.45500728487968445, 0.4277213513851166, 0.405477911233902, 0.393879771232605, 0.39928367733955383, 0.37490376830101013, 0.363654762506485, 0.3491666316986084, 0.34309402108192444, 0.3483777940273285, 0.32526519894599915, 0.31052595376968384, 0.3025135099887848, 0.30235692858695984, 0.293917179107666, 0.28201258182525635, 0.27186885476112366, 0.2638873755931854, 0.25263547897338867, 0.2572380304336548, 0.2416294366121292, 0.24831336736679077, 0.24163375794887543], "accuracy": [0.28239333629608154, 0.5951657891273499, 0.6992471218109131, 0.7390040755271912, 0.7683265209197998, 0.7820631265640259, 0.7992339134216309, 0.8127063512802124, 0.8235371708869934, 0.8300092220306396, 0.8404437899589539, 0.8462554216384888, 0.8541803956031799, 0.8508783578872681, 0.8569541573524475, 0.8613129258155823, 0.867520809173584, 0.8679170608520508, 0.8650112152099609, 0.8734645247459412, 0.8796724081039429, 0.8862766027450562, 0.8856161832809448, 0.8857482671737671, 0.893541157245636, 0.8968431949615479, 0.900409460067749, 0.9062210917472839, 0.8996169567108154, 0.9079381823539734, 0.8985602855682373, 0.9058248400688171], "val_loss": [1.0868721008300781, 0.7426469922065735, 0.640805721282959, 0.577933669090271, 0.5346234440803528, 0.5034752488136292, 0.4819295108318329, 0.458067387342453, 0.44259345531463623, 0.4234495460987091, 0.41734179854393005, 0.4081710875034332, 0.4026371240615845, 0.403668612241745, 0.39873218536376953, 0.3919360041618347, 0.3803846538066864, 0.37449130415916443, 0.38672250509262085, 0.3734606206417084, 0.3768748641014099, 0.37296468019485474, 0.3751404285430908, 0.3707457184791565, 0.37482044100761414, 0.3622901737689972, 0.359296590089798, 0.36245113611221313, 0.36232978105545044, 0.38217198848724365, 0.3639569878578186, 0.368257075548172], "val_accuracy": [0.6453333497047424, 0.7116666436195374, 0.7576666474342346, 0.7736666798591614, 0.79666668176651, 0.8043333292007446, 0.8103333115577698, 0.8206666707992554, 0.8366666436195374, 0.8450000286102295, 0.8510000109672546, 0.8489999771118164, 0.8576666712760925, 0.8566666841506958, 0.856333315372467, 0.8619999885559082, 0.8666666746139526, 0.8686666488647461, 0.8576666712760925, 0.8713333606719971, 0.874666690826416, 0.8703333139419556, 0.8700000047683716, 0.8769999742507935, 0.875, 0.8776666522026062, 0.8833333253860474, 0.875, 0.8823333382606506, 0.8686666488647461, 0.8763333559036255, 0.8813333511352539]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [75, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 9, 0], [0, 2, 3, 3], [16, 67], [0, 1, 1], [1], [7, 4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.7985714077949524, "mapping_values": [1, 9, 5, 4, 2, 11, 8, 3, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.242217540740967, 1.7345197200775146, 1.2007932662963867, 1.0542296171188354, 0.8792802095413208, 0.8455042243003845, 0.7895293235778809, 0.7411192059516907, 0.7169034481048584, 0.7352753281593323, 0.6983255743980408, 0.6913361549377441, 0.6704980731010437, 0.6453873515129089, 0.6605847477912903, 0.6252954006195068, 0.6227294206619263, 0.6176519393920898, 0.6104040145874023, 0.593388020992279, 0.5958239436149597], "accuracy": [0.2316734939813614, 0.4500066041946411, 0.5758816599845886, 0.6210539937019348, 0.6796988248825073, 0.6806234121322632, 0.7025492191314697, 0.7236824631690979, 0.7360982894897461, 0.719852089881897, 0.733060359954834, 0.7308149337768555, 0.7428345084190369, 0.7536653280258179, 0.748778223991394, 0.7629110813140869, 0.7589486241340637, 0.7647602558135986, 0.7693831920623779, 0.7729493975639343, 0.7703077793121338], "val_loss": [2.0557734966278076, 1.1260759830474854, 1.1151149272918701, 0.791670024394989, 0.7391694188117981, 0.6962228417396545, 0.699399471282959, 0.6485326290130615, 0.6676318645477295, 0.6300104260444641, 0.6517667770385742, 0.6302065253257751, 0.5957064628601074, 0.6235687136650085, 0.5762388110160828, 0.5636374354362488, 0.5997140407562256, 0.5565756559371948, 0.5790340304374695, 0.5406714677810669, 0.5525903105735779], "val_accuracy": [0.47699999809265137, 0.6330000162124634, 0.6320000290870667, 0.7143333554267883, 0.7133333086967468, 0.731333315372467, 0.734666645526886, 0.7570000290870667, 0.7379999756813049, 0.7583333253860474, 0.7423333525657654, 0.7409999966621399, 0.7593333125114441, 0.7423333525657654, 0.7823333144187927, 0.79666668176651, 0.7793333530426025, 0.7900000214576721, 0.7753333449363708, 0.7913333177566528, 0.781333327293396]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 3, 4, 8, 5, 6, 0, 0, 2], [0, 1, 0, 2, 3, 1, 0, 1], [39, 39, 32], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 9], [0, 3, 3, 3], [16, 88], [1, 1, 1], [1], [5, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 3, 9, 5, 4, 1, 1, 0, 1, 0, 21, 11, 10, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(grad, alpha))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 4, 3, 0, 3], [0, 0, 0, 0], [39, 39, 57, 89], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 0, 0, 1, 1], [1, 0, 2], [0, 6, 2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 4, 11, 7, 4, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [83882590208.0, 13033193603072.0, 210835716702208.0, 1533124546658304.0, 6664132996628480.0, 2.208346555809792e+16], "accuracy": [0.1010434553027153, 0.09972262382507324, 0.10315678268671036, 0.09509972482919693, 0.1002509593963623, 0.09959053993225098], "val_loss": [858985922560.0, 46310765887488.0, 497085623304192.0, 2710511179268096.0, 1.0150968373018624e+16, 2.993673809690624e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]