[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226348876953125, 1.8794918060302734, 1.417793869972229, 1.1052825450897217, 0.9593082070350647, 0.8663129806518555, 0.7892252206802368, 0.7527231574058533, 0.7167013883590698, 0.6855252981185913, 0.6524377465248108, 0.6317535638809204, 0.6140557527542114, 0.5916767716407776, 0.5752793550491333, 0.5591614842414856, 0.5403441786766052, 0.5304502248764038, 0.5286852121353149, 0.5207974910736084, 0.49958497285842896, 0.5010033845901489, 0.48574531078338623, 0.4809221923351288, 0.4685618281364441, 0.4554644525051117, 0.4499361515045166, 0.4439038336277008, 0.4420427083969116, 0.41955462098121643, 0.4230092465877533, 0.412030428647995, 0.4072582721710205, 0.40039676427841187, 0.3976851999759674, 0.3918563723564148, 0.38185927271842957, 0.37996265292167664, 0.3791578412055969, 0.36817070841789246, 0.37058204412460327, 0.3493867814540863, 0.3543159067630768, 0.34348005056381226, 0.3391079604625702, 0.33907392621040344, 0.3294035792350769, 0.3289995789527893, 0.3135201632976532, 0.3127898871898651, 0.3111494779586792, 0.306598037481308, 0.30500975251197815, 0.2976189851760864], "accuracy": [0.2661471366882324, 0.4703473746776581, 0.5525029897689819, 0.6139215230941772, 0.6565843224525452, 0.6944921612739563, 0.7173424959182739, 0.7306828498840332, 0.7411174178123474, 0.7483819723129272, 0.7642319202423096, 0.7733456492424011, 0.7820631265640259, 0.789988100528717, 0.7957997918128967, 0.8000264167785645, 0.809140145778656, 0.8095363974571228, 0.811649739742279, 0.8211596608161926, 0.8216879963874817, 0.8265751004219055, 0.8300092220306396, 0.8338396549224854, 0.8330471515655518, 0.8407079577445984, 0.8444063067436218, 0.8413683772087097, 0.8425571322441101, 0.852859616279602, 0.8488970994949341, 0.8537842035293579, 0.8514066934585571, 0.8564258217811584, 0.859199583530426, 0.8610487580299377, 0.863558292388916, 0.8639545440673828, 0.8650112152099609, 0.8685774803161621, 0.8673887252807617, 0.8741249442100525, 0.8739928603172302, 0.8796724081039429, 0.8815215826034546, 0.8803328275680542, 0.8809932470321655, 0.8824461698532104, 0.8878615498542786, 0.887597382068634, 0.8893144726753235, 0.8899748921394348, 0.8873332738876343, 0.8907673954963684], "val_loss": [2.0458626747131348, 1.5252926349639893, 1.052628517150879, 0.8405277729034424, 0.7562106251716614, 0.7009351253509521, 0.6561484932899475, 0.627610981464386, 0.5985882878303528, 0.5773906111717224, 0.5564173460006714, 0.5499028563499451, 0.5310032367706299, 0.5183689594268799, 0.5061983466148376, 0.4947974383831024, 0.4873294234275818, 0.4778987169265747, 0.47643911838531494, 0.4636084735393524, 0.4534182846546173, 0.452301025390625, 0.443564772605896, 0.43724218010902405, 0.43908748030662537, 0.42712298035621643, 0.42414647340774536, 0.41837114095687866, 0.4150601923465729, 0.4146635830402374, 0.40978679060935974, 0.404580682516098, 0.4008660912513733, 0.39463624358177185, 0.39234936237335205, 0.3874043822288513, 0.38637402653694153, 0.3821287751197815, 0.3819471001625061, 0.37730884552001953, 0.37681838870048523, 0.3726356327533722, 0.3718409836292267, 0.36555907130241394, 0.365915447473526, 0.3645326793193817, 0.36497762799263, 0.362476110458374, 0.3640541732311249, 0.35964512825012207, 0.3545864522457123, 0.3588787317276001, 0.3534260392189026, 0.3523516058921814], "val_accuracy": [0.5196666717529297, 0.6453333497047424, 0.6673333048820496, 0.703000009059906, 0.721666693687439, 0.7429999709129333, 0.7573333382606506, 0.7646666765213013, 0.7763333320617676, 0.7829999923706055, 0.7956666946411133, 0.7896666526794434, 0.8033333420753479, 0.8149999976158142, 0.8153333067893982, 0.8173333406448364, 0.8233333230018616, 0.8276666402816772, 0.8240000009536743, 0.824999988079071, 0.8346666693687439, 0.8366666436195374, 0.8389999866485596, 0.843666672706604, 0.8383333086967468, 0.8463333249092102, 0.8503333330154419, 0.8510000109672546, 0.8486666679382324, 0.8463333249092102, 0.8503333330154419, 0.8523333072662354, 0.8553333282470703, 0.8553333282470703, 0.8566666841506958, 0.859333336353302, 0.856333315372467, 0.862666666507721, 0.856333315372467, 0.8586666584014893, 0.8629999756813049, 0.8619999885559082, 0.862333357334137, 0.8653333187103271, 0.8659999966621399, 0.8676666617393494, 0.8633333444595337, 0.8616666793823242, 0.8696666955947876, 0.8643333315849304, 0.8666666746139526, 0.8696666955947876, 0.8679999709129333, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [57, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 2, 3, 0, 4, 5, 8, 1, 3, 0, 1, 1, 5, 8, 6, 3, 9, 9, 2, 3, 1, 3, 6, 9, 4, 0, 8, 5, 2, 9], [1, 2, 0, 3, 1, 5, 5, 5, 5, 4, 0, 0, 4, 4], [16, 16, 23, 43, 7, 83, 26], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 9, 8], [3, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.572857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.square(beta), tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(alpha)))))), grad), tf.math.subtract(tf.math.subtract(grad, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(grad, tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3094100952148438, 2.3086445331573486, 2.3066415786743164, 2.3045542240142822, 2.304037570953369, 2.301982879638672, 2.2993812561035156, 2.2982547283172607, 2.2974131107330322, 2.2950758934020996, 2.293327569961548, 2.2908620834350586, 2.2902231216430664, 2.288904905319214, 2.2882096767425537, 2.285052537918091, 2.2855565547943115, 2.28381085395813, 2.282088041305542, 2.281123399734497, 2.2789418697357178, 2.276949405670166, 2.275381088256836, 2.2733423709869385, 2.272575855255127, 2.270798444747925, 2.2681965827941895, 2.267172336578369, 2.2656819820404053, 2.264859914779663, 2.2624363899230957, 2.260234832763672, 2.2599520683288574, 2.257906675338745, 2.254122257232666, 2.2537903785705566, 2.252690076828003, 2.24973201751709, 2.24756121635437, 2.245753526687622, 2.2448482513427734, 2.2431652545928955, 2.2400200366973877, 2.2379655838012695, 2.2369632720947266, 2.232732057571411, 2.230648994445801, 2.2289934158325195, 2.2269842624664307, 2.2243525981903076, 2.2222275733947754, 2.2201602458953857, 2.2189109325408936, 2.2148473262786865, 2.2102832794189453, 2.207947015762329, 2.2053704261779785, 2.202488422393799, 2.2011501789093018, 2.1977932453155518, 2.1933398246765137, 2.1891393661499023, 2.1866283416748047, 2.1830949783325195, 2.181434154510498, 2.176274538040161, 2.1737282276153564, 2.1698060035705566, 2.16725492477417, 2.1620287895202637, 2.157733678817749, 2.15289306640625, 2.148519992828369, 2.1460444927215576, 2.1405229568481445, 2.1353328227996826, 2.1302218437194824, 2.1262378692626953, 2.1227290630340576, 2.1176366806030273, 2.111969470977783, 2.103569269180298, 2.098069906234741, 2.092092752456665, 2.087592601776123, 2.0801422595977783, 2.0763328075408936, 2.071784019470215, 2.0601515769958496, 2.0560126304626465, 2.0448198318481445, 2.0386362075805664, 2.0346169471740723, 2.028367042541504, 2.0164825916290283, 2.013139009475708, 2.0015640258789062, 1.9945484399795532, 1.9852665662765503, 1.9748938083648682], "accuracy": [0.09681680053472519, 0.09430722147226334, 0.09589222073554993, 0.10342095047235489, 0.10566636174917221, 0.10460969805717468, 0.11068551242351532, 0.10896842926740646, 0.11319508403539658, 0.11478008329868317, 0.12759213149547577, 0.12996962666511536, 0.13142253458499908, 0.13657376170158386, 0.12957337498664856, 0.1414608359336853, 0.13868708908557892, 0.14476291835308075, 0.14859332144260406, 0.15176330506801605, 0.15982036292552948, 0.16299036145210266, 0.17170783877372742, 0.17395325005054474, 0.17144367098808289, 0.18095363676548004, 0.18795403838157654, 0.1900673657655716, 0.19653943181037903, 0.201294407248497, 0.2028794139623642, 0.21159687638282776, 0.20723815262317657, 0.21265354752540588, 0.2281072586774826, 0.22876766324043274, 0.23365473747253418, 0.2359001487493515, 0.2436930388212204, 0.24818386137485504, 0.2513538599014282, 0.2499009370803833, 0.24739135801792145, 0.25795799493789673, 0.270109623670578, 0.27182671427726746, 0.27103421092033386, 0.2693171203136444, 0.2740721106529236, 0.28463876247406006, 0.2860916554927826, 0.28899750113487244, 0.2863558232784271, 0.29705455899238586, 0.30445119738578796, 0.30643242597579956, 0.30563995242118835, 0.310130774974823, 0.31118741631507874, 0.31765949726104736, 0.3269053101539612, 0.3276977837085724, 0.3315281867980957, 0.3343019485473633, 0.33443403244018555, 0.34064191579818726, 0.3447364866733551, 0.3419627547264099, 0.3413023352622986, 0.3564918637275696, 0.35543522238731384, 0.35702019929885864, 0.3649451732635498, 0.35702019929885864, 0.36560559272766113, 0.36283186078071594, 0.368511438369751, 0.3731343150138855, 0.3703605830669403, 0.3667943477630615, 0.37287017703056335, 0.3831726312637329, 0.38343679904937744, 0.38766345381736755, 0.39241844415664673, 0.3955884277820587, 0.3913617730140686, 0.3917580246925354, 0.4010038375854492, 0.40324923396110535, 0.4103817343711853, 0.4123629629611969, 0.4049663245677948, 0.4081363081932068, 0.41764628887176514, 0.4161933660507202, 0.41606128215789795, 0.4147404432296753, 0.4262316823005676, 0.43323206901550293], "val_loss": [2.3074066638946533, 2.3055975437164307, 2.303842067718506, 2.3020708560943604, 2.3003346920013428, 2.298588752746582, 2.296865463256836, 2.2951576709747314, 2.293461799621582, 2.2918009757995605, 2.290144920349121, 2.288487434387207, 2.286842107772827, 2.2852046489715576, 2.2836062908172607, 2.2819626331329346, 2.2803516387939453, 2.278728723526001, 2.2771129608154297, 2.2755091190338135, 2.273878574371338, 2.2722415924072266, 2.270568609237671, 2.268887996673584, 2.267209053039551, 2.265512466430664, 2.263791084289551, 2.2620720863342285, 2.260333776473999, 2.2585549354553223, 2.256756544113159, 2.254934072494507, 2.253074884414673, 2.2512009143829346, 2.2492802143096924, 2.247335195541382, 2.2453629970550537, 2.24332332611084, 2.24125337600708, 2.2391538619995117, 2.237004280090332, 2.2348415851593018, 2.232604742050171, 2.23032546043396, 2.2280168533325195, 2.225627899169922, 2.223198175430298, 2.2207210063934326, 2.218188524246216, 2.215602159500122, 2.212973117828369, 2.2102766036987305, 2.20752215385437, 2.2046797275543213, 2.201721429824829, 2.1986992359161377, 2.1956064701080322, 2.192448854446411, 2.18920636177063, 2.185866594314575, 2.182436943054199, 2.1789181232452393, 2.175278663635254, 2.1715595722198486, 2.1677706241607666, 2.1638426780700684, 2.159844160079956, 2.155726909637451, 2.151503801345825, 2.147167205810547, 2.1427159309387207, 2.1381280422210693, 2.133355140686035, 2.128526210784912, 2.123532295227051, 2.1184043884277344, 2.1131091117858887, 2.107706308364868, 2.1021859645843506, 2.0965170860290527, 2.090681552886963, 2.0846002101898193, 2.078348159790039, 2.071906328201294, 2.065321445465088, 2.0585222244262695, 2.051569938659668, 2.044525623321533, 2.0371286869049072, 2.0296168327331543, 2.021791458129883, 2.0137715339660645, 2.0055654048919678, 1.9972217082977295, 1.9885284900665283, 1.97968590259552, 1.9705532789230347, 1.9612730741500854, 1.9516905546188354, 1.941860318183899], "val_accuracy": [0.0963333323597908, 0.0976666659116745, 0.09866666793823242, 0.09933333098888397, 0.10300000011920929, 0.10733333230018616, 0.11166666448116302, 0.11633333563804626, 0.12033333629369736, 0.1263333261013031, 0.1326666623353958, 0.14000000059604645, 0.14866666495800018, 0.15733332931995392, 0.16366666555404663, 0.17466667294502258, 0.1836666613817215, 0.19099999964237213, 0.19900000095367432, 0.2083333283662796, 0.21899999678134918, 0.22966666519641876, 0.2423333376646042, 0.2540000081062317, 0.2643333375453949, 0.27399998903274536, 0.2823333442211151, 0.2913333475589752, 0.3006666600704193, 0.31700000166893005, 0.3310000002384186, 0.34033334255218506, 0.3583333194255829, 0.36800000071525574, 0.3773333430290222, 0.38366666436195374, 0.3903333246707916, 0.39399999380111694, 0.39800000190734863, 0.4026666581630707, 0.40433332324028015, 0.4103333353996277, 0.414000004529953, 0.4183333218097687, 0.42133334279060364, 0.42266666889190674, 0.4283333420753479, 0.42899999022483826, 0.4309999942779541, 0.4323333203792572, 0.43433332443237305, 0.4350000023841858, 0.437666654586792, 0.43933331966400146, 0.4413333237171173, 0.44433334469795227, 0.4436666667461395, 0.44733333587646484, 0.44866666197776794, 0.45100000500679016, 0.45266667008399963, 0.453000009059906, 0.4556666612625122, 0.4573333263397217, 0.45899999141693115, 0.460999995470047, 0.4636666774749756, 0.4646666646003723, 0.4650000035762787, 0.4676666557788849, 0.46966665983200073, 0.4713333249092102, 0.47466665506362915, 0.4779999852180481, 0.48233333230018616, 0.48533332347869873, 0.49133333563804626, 0.49266666173934937, 0.4950000047683716, 0.4983333349227905, 0.5, 0.503000020980835, 0.5073333382606506, 0.5113333463668823, 0.5183333158493042, 0.5213333368301392, 0.5256666541099548, 0.5289999842643738, 0.5326666831970215, 0.5353333353996277, 0.5363333225250244, 0.5389999747276306, 0.5423333048820496, 0.5450000166893005, 0.54666668176651, 0.550000011920929, 0.5536666512489319, 0.5540000200271606, 0.5553333163261414, 0.5590000152587891]}, "mapping_values": [1, 6, 3, 3, 2, 44, 30, 14, 7, 2, 1, 1, 1, 10, 5, 5, 2], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [75, 15], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 8], [0, 0, 0, 3], [83, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 27, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [50, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 8, 3, 0, 3, 6], [0, 2, 0, 3], [16, 26], [0, 0, 1], [0, 0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 4, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 38, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 3, 2, 1, 1, 22, 12, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha)))), grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 6, 3, 0, 3, 2, 7], [0, 1, 0, 2, 1, 3, 1], [39, 3], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 8], [1, 2, 0, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 3, 2, 4, 8, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0, 2, 1], [16, 99, 96, 34, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 14, 7, 7, 2, 10, 5, 5, 2, 2, 1, 1, 1, 26, 14, 12, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.multiply(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.sqrt(beta)), alpha)))", "other_info": {"loss": [2.310762643814087, 2.309610605239868, 2.3104147911071777, 2.310129404067993, 2.3096728324890137, 2.3102946281433105], "accuracy": [0.09140139818191528, 0.09470347315073013, 0.09694888442754745, 0.09219389408826828, 0.09021265059709549, 0.09325055778026581], "val_loss": [2.3083548545837402, 2.3083548545837402, 2.3083548545837402, 2.3083548545837402, 2.3083548545837402, 2.3083548545837402], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]