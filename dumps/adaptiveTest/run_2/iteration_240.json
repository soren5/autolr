[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 9], [0, 5, 6], [99, 59], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [4, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.3125714361667633, "mapping_values": [1, 7, 4, 3, 2, 10, 7, 3, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.48313570022583, 2.3032310009002686, 2.6451804637908936, 2.320594310760498, 2.2669243812561035, 2.3043158054351807, 2.3000097274780273, 2.221158504486084, 2.301866292953491, 2.1059460639953613, 13.691027641296387, 2.250638484954834, 2.3110218048095703, 2.3035948276519775, 2.3022408485412598], "accuracy": [0.17580240964889526, 0.10500594228506088, 0.15281997621059418, 0.11649715900421143, 0.16312244534492493, 0.0956280529499054, 0.11768590658903122, 0.1666886806488037, 0.10434553027153015, 0.2312772423028946, 0.17355699837207794, 0.15149913728237152, 0.09906221181154251, 0.10302469879388809, 0.10077928751707077], "val_loss": [2.3069560527801514, 2.303356170654297, 2.3074538707733154, 2.2608063220977783, 2.3078157901763916, 2.3023273944854736, 2.278888463973999, 2.307380199432373, 2.2592780590057373, 1.7993499040603638, 2.3209102153778076, 2.320269823074341, 2.3039450645446777, 2.302737236022949, 2.302659749984741], "val_accuracy": [0.11033333092927933, 0.09266666322946548, 0.09966666996479034, 0.15733332931995392, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09966666996479034, 0.2529999911785126, 0.304666668176651, 0.0976666659116745, 0.09666666388511658, 0.09700000286102295, 0.09833333641290665, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 5, 7, 3, 2, 6, 2, 9, 3, 1, 5, 1, 5], [0, 1, 0, 2, 3, 3, 3, 0, 1], [60, 39, 73, 13], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [9, 2, 3, 8, 3, 5, 9], [1, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 5, 3, 1, 4, 6, 9, 3, 3, 2, 7, 7, 3, 1, 7, 5, 6, 5, 5, 6, 5, 2, 7, 1, 6, 5, 4, 3, 7, 5, 5], [0, 1, 6, 2, 7, 1, 6, 3, 3, 7, 2, 5, 7, 6, 7, 2, 5, 2, 2, 6, 7, 2], [99, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10171428322792053, "mapping_values": [1, 23, 14, 9, 4, 1, 1, 0, 1, 53, 31, 22, 2, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.square(grad), grad))), grad))), grad)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(grad, alpha), tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.add(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.square(sigma))), grad)), tf.math.square(beta)), tf.math.divide_no_nan(grad, tf.math.square(grad)))), tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(tf.math.multiply(beta, grad), beta))), beta)), tf.math.add(tf.math.square(grad), tf.math.square(grad)))), beta)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034703731536865, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10685510188341141, 0.10566636174917221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.326808214187622, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 1, 8, 0, 8, 5, 9], [3, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [8, 0, 3], [0, 1, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 6, 2, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.sqrt(grad))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.3735764026641846, 2.065678883381838e+19, 3.404287576675415, 3.2830846309661865, 2.8638699054718018, 3.0523593425750732, 3.2693727016448975, 3.3558502197265625, 2.9034769535064697, 3.088563919067383, 3.4199302196502686], "accuracy": [0.18821820616722107, 0.1010434553027153, 0.09906221181154251, 0.10315678268671036, 0.09879804402589798, 0.10077928751707077, 0.1006472036242485, 0.08902391046285629, 0.10170386731624603, 0.09800554811954498, 0.09813763201236725], "val_loss": [4648.703125, 3.2591230869293213, 3.3087542057037354, 3.012430429458618, 3.6230742931365967, 2.7189204692840576, 3.573967456817627, 3.0334885120391846, 3.283928632736206, 3.1696019172668457, 3.2875916957855225], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.09700000286102295, 0.09833333641290665, 0.09966666996479034, 0.10066666454076767, 0.09833333641290665, 0.10066666454076767, 0.09966666996479034, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [58, 88], [0, 0, 1, 0, 0, 1], [1, 0, 9], [0, 5, 3], [99, 48], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 7, 3, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [57511256.0, 8450040832.0, 142842036224.0, 1045129461760.0, 4566935928832.0, 14735297740800.0], "accuracy": [0.09642054885625839, 0.09879804402589798, 0.09985470771789551, 0.09826971590518951, 0.10091137140989304, 0.10447761416435242], "val_loss": [585495552.0, 31555028992.0, 338676842496.0, 1846344155136.0, 6915794927616.0, 20399586803712.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]