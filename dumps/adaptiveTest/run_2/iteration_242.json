[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1, 0, 1, 0], [1, 0, 3], [0, 5, 6], [48], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8745714426040649, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110597610473633, 1.146119236946106, 0.7935106158256531, 0.6773402690887451, 0.612202525138855, 0.555974006652832, 0.520135223865509, 0.4878731369972229, 0.47294092178344727, 0.4596002995967865, 0.42789626121520996, 0.4100674092769623, 0.3999907076358795, 0.3915543258190155, 0.37374621629714966, 0.3565715551376343, 0.3509090542793274, 0.33791741728782654, 0.3249821960926056, 0.3287085294723511, 0.3068277835845947, 0.2991634011268616, 0.28134191036224365, 0.28037503361701965, 0.28200533986091614, 0.2690894901752472, 0.26400136947631836, 0.25738802552223206, 0.2487717866897583, 0.24573519825935364, 0.23528876900672913, 0.2318730354309082, 0.23055800795555115, 0.21879777312278748, 0.2151409238576889, 0.20502601563930511, 0.20018357038497925, 0.19672603905200958, 0.2008557915687561], "accuracy": [0.2871483266353607, 0.5950337052345276, 0.7080966830253601, 0.7371549606323242, 0.7691190242767334, 0.7868181467056274, 0.8035926818847656, 0.8187822103500366, 0.8202351331710815, 0.8253863453865051, 0.8392550349235535, 0.846387505531311, 0.8544445633888245, 0.8577466607093811, 0.8617091774940491, 0.8679170608520508, 0.872407853603363, 0.8759741187095642, 0.8787478804588318, 0.8809932470321655, 0.8831065893173218, 0.887201189994812, 0.8976356983184814, 0.893541157245636, 0.8944657444953918, 0.9005415439605713, 0.900409460067749, 0.8985602855682373, 0.9076740145683289, 0.906749427318573, 0.9128252267837524, 0.9100515246391296, 0.9128252267837524, 0.9171839952468872, 0.9186369180679321, 0.9223352074623108, 0.9237881302833557, 0.9227314591407776, 0.9218068718910217], "val_loss": [1.0899795293807983, 0.7350896000862122, 0.6354600191116333, 0.5710398554801941, 0.5258172154426575, 0.486472487449646, 0.4596824645996094, 0.4378945827484131, 0.43925386667251587, 0.41381576657295227, 0.4159056544303894, 0.3960791528224945, 0.406840443611145, 0.3880666494369507, 0.39055994153022766, 0.38946518301963806, 0.377648264169693, 0.3755975663661957, 0.3649637997150421, 0.3666773736476898, 0.3720114827156067, 0.36762645840644836, 0.3571940064430237, 0.3675711154937744, 0.3737397789955139, 0.35850879549980164, 0.364217072725296, 0.36462751030921936, 0.3661741614341736, 0.35622456669807434, 0.37056583166122437, 0.37056997418403625, 0.3732703924179077, 0.3587881624698639, 0.36011964082717896, 0.36897143721580505, 0.3800422251224518, 0.375713050365448, 0.38869068026542664], "val_accuracy": [0.6470000147819519, 0.7083333134651184, 0.7549999952316284, 0.7770000100135803, 0.793666660785675, 0.8149999976158142, 0.8213333487510681, 0.8316666483879089, 0.8333333134651184, 0.8450000286102295, 0.8446666598320007, 0.8556666374206543, 0.8386666774749756, 0.8510000109672546, 0.8546666502952576, 0.8536666631698608, 0.8633333444595337, 0.8616666793823242, 0.8659999966621399, 0.8629999756813049, 0.862666666507721, 0.8659999966621399, 0.8703333139419556, 0.8646666407585144, 0.8669999837875366, 0.8666666746139526, 0.8713333606719971, 0.8756666779518127, 0.8709999918937683, 0.8773333430290222, 0.8733333349227905, 0.8726666569709778, 0.8733333349227905, 0.8786666393280029, 0.8773333430290222, 0.8740000128746033, 0.8773333430290222, 0.8706666827201843, 0.874666690826416]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [3, 3, 0, 2], [6, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 5, 5, 9], [0, 2, 3, 3], [31, 88], [0, 1, 1, 1, 1, 0], [1, 0, 3], [1, 5, 0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.13600000739097595, "mapping_values": [1, 2, 1, 1, 0, 8, 5, 3, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7.434447765350342, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1748778223991394, 0.11121384054422379, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.438213348388672, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12966667115688324, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 74], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 4, 3, 5, 2, 1], [3, 5, 6, 2, 4, 3], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 13, 7, 6, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(sigma), tf.math.pow(tf.math.multiply(grad, grad), tf.math.square(tf.math.add(tf.math.subtract(beta, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038575649261475, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 9, 3, 0, 3, 5, 9], [0, 2, 3, 3], [14, 88], [0, 0, 1, 0, 1, 0, 1], [1, 0, 3, 5], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034987449645996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]