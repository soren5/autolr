[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [8, 7, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [1, 0, 1, 0, 1, 1], [1, 0, 8], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8634285926818848, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.118479013442993, 1.1332749128341675, 0.8193421363830566, 0.7017128467559814, 0.6297340989112854, 0.5787060856819153, 0.5431700944900513, 0.5146222710609436, 0.48597076535224915, 0.4632059335708618, 0.4428897500038147, 0.4282599985599518, 0.4007740616798401, 0.38659512996673584, 0.3851045072078705, 0.3728807270526886, 0.35485580563545227, 0.3446849584579468, 0.33590778708457947, 0.33172109723091125, 0.3075381815433502, 0.3050762116909027, 0.2907254099845886, 0.29017144441604614, 0.2722768783569336, 0.2835961878299713, 0.26661497354507446, 0.26069608330726624, 0.2523447275161743, 0.24426300823688507, 0.24397510290145874, 0.24161654710769653, 0.23544186353683472, 0.22876138985157013, 0.21950438618659973, 0.20238341391086578, 0.20412519574165344, 0.21486659348011017, 0.2130422294139862, 0.20406891405582428, 0.19487768411636353], "accuracy": [0.2709021270275116, 0.5996565818786621, 0.6907938122749329, 0.7191916704177856, 0.7569673657417297, 0.7744023203849792, 0.7910447716712952, 0.8061022162437439, 0.8166688680648804, 0.82683926820755, 0.8360850811004639, 0.8428213000297546, 0.8520671129226685, 0.8568220734596252, 0.8576145768165588, 0.8626337051391602, 0.8683133125305176, 0.8742570281028748, 0.8697662353515625, 0.8786157965660095, 0.889578640460968, 0.8907673954963684, 0.8965790271759033, 0.8908994793891907, 0.9022586345672607, 0.897899866104126, 0.9001452922821045, 0.9019944667816162, 0.9009377956390381, 0.9060890078544617, 0.9039757251739502, 0.9093911051750183, 0.9126931428909302, 0.9173160791397095, 0.9177123308181763, 0.9229956269264221, 0.9218068718910217, 0.9152027368545532, 0.9186369180679321, 0.9206181764602661, 0.9301280975341797], "val_loss": [1.123744249343872, 0.7484785914421082, 0.6637482643127441, 0.5717400312423706, 0.5363389253616333, 0.5024673938751221, 0.4757540225982666, 0.45887017250061035, 0.43776634335517883, 0.4274790585041046, 0.417401522397995, 0.40336719155311584, 0.38726529479026794, 0.39577698707580566, 0.3746429979801178, 0.3786013126373291, 0.3788165748119354, 0.3685818612575531, 0.367448091506958, 0.3648703694343567, 0.36215612292289734, 0.3627357482910156, 0.36299392580986023, 0.35524407029151917, 0.36666569113731384, 0.35641878843307495, 0.3697679042816162, 0.37425699830055237, 0.3531621992588043, 0.3608270585536957, 0.3704083263874054, 0.36472761631011963, 0.3679559826850891, 0.36270901560783386, 0.3709184229373932, 0.37015292048454285, 0.3648085594177246, 0.37751951813697815, 0.3895406126976013, 0.37524545192718506, 0.3823848068714142], "val_accuracy": [0.6166666746139526, 0.7073333263397217, 0.734333336353302, 0.7723333239555359, 0.79666668176651, 0.812333345413208, 0.8143333196640015, 0.8356666564941406, 0.8410000205039978, 0.8420000076293945, 0.8429999947547913, 0.8553333282470703, 0.859000027179718, 0.8566666841506958, 0.8653333187103271, 0.859333336353302, 0.8656666874885559, 0.8709999918937683, 0.8676666617393494, 0.8673333525657654, 0.874666690826416, 0.8709999918937683, 0.8726666569709778, 0.874666690826416, 0.8730000257492065, 0.8773333430290222, 0.8759999871253967, 0.878000020980835, 0.8759999871253967, 0.8796666860580444, 0.871999979019165, 0.878000020980835, 0.8759999871253967, 0.8776666522026062, 0.8799999952316284, 0.8823333382606506, 0.8786666393280029, 0.8786666393280029, 0.8759999871253967, 0.8769999742507935, 0.8769999742507935]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 3, 2, 0, 3, 0, 7, 0, 8], [0, 5, 6, 4, 7, 4], [26], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.negative(grad), grad))), tf.math.add(tf.math.negative(grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [59905600.0, 8423202816.0, 145056530432.0, 1050366050304.0, 4562921455616.0, 14943138086912.0], "accuracy": [0.1022322028875351, 0.10553427785634995, 0.1018359512090683, 0.09906221181154251, 0.09509972482919693, 0.09959053993225098], "val_loss": [588844608.0, 31735797760.0, 340614840320.0, 1856924155904.0, 6955410128896.0, 20516194746368.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 1, 0, 3, 8, 2, 9], [0, 1, 3, 2, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [0, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 2, 10, 6, 4, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), grad), tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.multiply(grad, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [2, 2, 9, 0, 0, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1, 0, 1, 1], [7, 0, 4], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 4, 2, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1640203648.0, 243987513344.0, 4149420490752.0, 30015848710144.0, 131463630553088.0, 431640790695936.0], "accuracy": [0.09681680053472519, 0.09549596905708313, 0.10157178342342377, 0.09628847241401672, 0.09932637959718704, 0.10051512718200684], "val_loss": [16315380736.0, 879537881088.0, 9440452411392.0, 51468677677056.0, 192771184918528.0, 568642060156928.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]