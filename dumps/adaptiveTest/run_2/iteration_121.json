[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 3], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 2, 1, 0, 3, 5, 9], [0, 2, 3, 2], [16, 88], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 6, 3, 1, 7], [2, 5, 6, 2, 1, 3], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8645714521408081, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 1, 11, 5, 6, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(beta, alpha))), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.111121416091919, 1.178898572921753, 0.8461434841156006, 0.6921924948692322, 0.6284881830215454, 0.5766059160232544, 0.556855320930481, 0.5186562538146973, 0.5155307054519653, 0.4949270486831665, 0.46860843896865845, 0.4532347619533539, 0.43546754121780396, 0.4164227843284607, 0.39691004157066345, 0.3764689564704895, 0.35895606875419617, 0.3541785478591919, 0.349558562040329, 0.339031457901001, 0.3222940266132355, 0.3172333836555481, 0.3110211193561554, 0.3047387897968292, 0.3017362952232361, 0.29016247391700745, 0.2890348732471466, 0.27776652574539185, 0.2662959396839142, 0.2575686275959015, 0.24641497433185577], "accuracy": [0.2863558232784271, 0.5926561951637268, 0.6892088055610657, 0.7354378700256348, 0.763967752456665, 0.7827235460281372, 0.7907806038856506, 0.8033285140991211, 0.8010830879211426, 0.8142913579940796, 0.8220842480659485, 0.8247259259223938, 0.8381983637809753, 0.8462554216384888, 0.8516708612442017, 0.8605204224586487, 0.8668603897094727, 0.8647470474243164, 0.8673887252807617, 0.872407853603363, 0.8800686597824097, 0.8778232932090759, 0.878879964351654, 0.8856161832809448, 0.8893144726753235, 0.8883898854255676, 0.8910315632820129, 0.8948619961738586, 0.8981640338897705, 0.8994848728179932, 0.9022586345672607], "val_loss": [1.1227877140045166, 0.8224220275878906, 0.6643772721290588, 0.5833665132522583, 0.5400660634040833, 0.5149203538894653, 0.4919978082180023, 0.48747768998146057, 0.4745240807533264, 0.45042943954467773, 0.43261653184890747, 0.42765697836875916, 0.4225892722606659, 0.41307270526885986, 0.39764249324798584, 0.38826286792755127, 0.3859305679798126, 0.3923417627811432, 0.3896540105342865, 0.38103052973747253, 0.38130468130111694, 0.37844523787498474, 0.37422677874565125, 0.3731387257575989, 0.3704667091369629, 0.3564578592777252, 0.37837499380111694, 0.37571245431900024, 0.36371394991874695, 0.38644587993621826, 0.3738047182559967], "val_accuracy": [0.6150000095367432, 0.6940000057220459, 0.7429999709129333, 0.7666666507720947, 0.7886666655540466, 0.8066666722297668, 0.812333345413208, 0.8140000104904175, 0.8240000009536743, 0.8323333263397217, 0.8423333168029785, 0.8446666598320007, 0.8426666855812073, 0.843666672706604, 0.8516666889190674, 0.8583333492279053, 0.8633333444595337, 0.8619999885559082, 0.8550000190734863, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8679999709129333, 0.8640000224113464, 0.875333309173584, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8669999837875366, 0.8666666746139526]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 3, 0, 2], [39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 3, 0, 3, 5, 9], [0, 1, 3, 3], [52, 88], [1, 0, 1, 0, 1, 1], [1, 8, 3], [2, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [5, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.35171428322792053, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.271118402481079, 2.673994541168213, 2.267014503479004, 2.5403525829315186, 2.307382106781006, 2.303837537765503, 2.3030612468719482, 2.2969181537628174], "accuracy": [0.2300885021686554, 0.1608770340681076, 0.18663319945335388, 0.1624620258808136, 0.10117553919553757, 0.09945846349000931, 0.10077928751707077, 0.1266675442457199], "val_loss": [2.17518949508667, 2.299912691116333, 1.9885722398757935, 2.30656361579895, 2.3032026290893555, 2.302424669265747, 2.300762891769409, 2.262183666229248], "val_accuracy": [0.3153333365917206, 0.09933333098888397, 0.3490000069141388, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.16633333265781403, 0.20900000631809235]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [63, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 4, 0, 7, 9, 9], [0, 2, 3, 3], [16, 88], [1, 1, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 6, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3719349.0, 2.303077459335327, 2.3030014038085938, 2.302945375442505, 2.3028972148895264, 66737053696.0], "accuracy": [0.09642054885625839, 0.09866596013307571, 0.09932637959718704, 0.09642054885625839, 0.09721305221319199, 0.09840179979801178], "val_loss": [2.302947998046875, 2.3028879165649414, 2.3028359413146973, 2.3027894496917725, 2.3027541637420654, 2.304762125015259], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [3, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 4], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 6, 3, 3, 1, 6, 3, 3, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]