[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 1], [16, 88], [0, 0, 1, 0, 0, 1], [7, 0, 7, 9], [0, 5, 3], [99, 23], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8619999885559082, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1108713150024414, 1.1560890674591064, 0.7988573908805847, 0.6709495186805725, 0.6063958406448364, 0.5549719929695129, 0.5194824934005737, 0.49536392092704773, 0.47836554050445557, 0.4644591510295868, 0.4418336749076843, 0.42628738284111023, 0.4091850519180298, 0.39466601610183716, 0.37042316794395447, 0.3567034602165222, 0.35259875655174255, 0.33403223752975464, 0.3290700614452362, 0.32303231954574585, 0.3139815330505371, 0.3003929853439331, 0.2867928147315979, 0.2840111553668976, 0.29098498821258545, 0.2750740945339203, 0.2731073200702667], "accuracy": [0.28899750113487244, 0.6057323813438416, 0.7017567157745361, 0.7477215528488159, 0.770439863204956, 0.7940827012062073, 0.8006868362426758, 0.8142913579940796, 0.8204993009567261, 0.8240655064582825, 0.8381983637809753, 0.8438779711723328, 0.8540483713150024, 0.8553691506385803, 0.8642187118530273, 0.8685774803161621, 0.8688416481018066, 0.8762382864952087, 0.878351628780365, 0.8772949576377869, 0.8821820020675659, 0.8865407705307007, 0.8924844861030579, 0.8914278149604797, 0.8901069760322571, 0.8985602855682373, 0.8948619961738586], "val_loss": [1.1116137504577637, 0.7393482327461243, 0.6337189674377441, 0.5515428781509399, 0.5118035078048706, 0.49375683069229126, 0.4698314964771271, 0.46649637818336487, 0.4426344931125641, 0.42019516229629517, 0.40661540627479553, 0.39109355211257935, 0.3897755444049835, 0.38457393646240234, 0.37745195627212524, 0.3698992431163788, 0.3631476163864136, 0.360180139541626, 0.3795224726200104, 0.35898450016975403, 0.3554096817970276, 0.34704476594924927, 0.3538070023059845, 0.36710605025291443, 0.37093791365623474, 0.3738809823989868, 0.36850497126579285], "val_accuracy": [0.6179999709129333, 0.7256666421890259, 0.7673333287239075, 0.7900000214576721, 0.8023333549499512, 0.8069999814033508, 0.8186666369438171, 0.8243333101272583, 0.8349999785423279, 0.847000002861023, 0.8573333621025085, 0.8619999885559082, 0.8633333444595337, 0.8650000095367432, 0.8693333268165588, 0.8676666617393494, 0.8766666650772095, 0.8773333430290222, 0.8573333621025085, 0.8730000257492065, 0.8766666650772095, 0.8820000290870667, 0.8820000290870667, 0.8706666827201843, 0.8696666955947876, 0.8700000047683716, 0.874666690826416]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 1, 2], [39, 70], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 2, 6, 0, 3, 5, 9], [0, 3, 3, 3], [16, 88], [0, 0, 1, 1, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [7, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.3285714387893677, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.395735740661621, 2.3266687393188477, 2.2541182041168213, 2.3988821506500244, 2.3084611892700195, 2.304269552230835], "accuracy": [0.20737022161483765, 0.1962752640247345, 0.13472460210323334, 0.16602826118469238, 0.10236428678035736, 0.09681680053472519], "val_loss": [2.2150461673736572, 2.308345317840576, 2.300576686859131, 2.313337802886963, 2.304393768310547, 2.3025667667388916], "val_accuracy": [0.33033332228660583, 0.09866666793823242, 0.09833333641290665, 0.10333333164453506, 0.10333333164453506, 0.07233333587646484]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1], [8, 2, 9, 0, 3], [2, 1, 0, 2], [39, 64], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3, 3, 9], [2, 2, 3, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 8, 7], [0, 2, 6], [23], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 5, 5, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, beta)), grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 3, 0, 2], [39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [5, 7, 3, 0, 3, 4, 9], [1, 2, 3, 3], [16, 88], [0, 0, 1, 0, 0, 0], [1, 0, 9], [0, 5, 6], [99, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.09028571099042892, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 0, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(alpha, tf.math.negative(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310879707336426, 2.30869197845459, 2.3096585273742676, 2.3105502128601074, 2.3101189136505127, 2.310802698135376], "accuracy": [0.09457138925790787, 0.09351472556591034, 0.08902391046285629, 0.08796724677085876, 0.09311848133802414, 0.09536388516426086], "val_loss": [2.309128999710083, 2.309128999710083, 2.309128999710083, 2.309128999710083, 2.309128999710083, 2.309128999710083], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]