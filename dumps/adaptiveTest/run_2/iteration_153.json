[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 0, 3, 3], [16, 88, 56], [1, 0, 0, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.871999979019165, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1133387088775635, 1.3062845468521118, 0.8718932867050171, 0.7315415740013123, 0.6535974144935608, 0.6044052243232727, 0.5557678937911987, 0.5330876111984253, 0.5031080842018127, 0.4757867157459259, 0.4518339931964874, 0.4435802102088928, 0.42925456166267395, 0.4109308123588562, 0.3954932987689972, 0.39266714453697205, 0.3904712498188019, 0.38078126311302185, 0.3621038794517517, 0.3571155369281769, 0.3429119288921356, 0.3312867283821106, 0.32312023639678955, 0.3111819326877594, 0.29645368456840515, 0.30169376730918884, 0.296943724155426, 0.28288373351097107, 0.2776590883731842, 0.27347323298454285, 0.2533299922943115, 0.2394493818283081, 0.2465897649526596, 0.24469298124313354, 0.24242180585861206, 0.24024401605129242], "accuracy": [0.2876766622066498, 0.5737683176994324, 0.6750759482383728, 0.7253995537757874, 0.7467969655990601, 0.7713643908500671, 0.7885351777076721, 0.806630551815033, 0.8123101592063904, 0.8238013386726379, 0.8329150676727295, 0.8358209133148193, 0.8421608805656433, 0.848368763923645, 0.8564258217811584, 0.8574824929237366, 0.8556333184242249, 0.8551049828529358, 0.863558292388916, 0.8667283058166504, 0.8721436858177185, 0.8771628737449646, 0.8762382864952087, 0.8824461698532104, 0.8856161832809448, 0.8881257176399231, 0.8854840993881226, 0.8910315632820129, 0.8942015767097473, 0.8927486538887024, 0.8989565372467041, 0.9050323367118835, 0.9035794734954834, 0.9084665179252625, 0.9051644206047058, 0.9055606722831726], "val_loss": [1.085428237915039, 0.8086570501327515, 0.665276288986206, 0.5806506276130676, 0.5275377631187439, 0.4971136152744293, 0.46562543511390686, 0.4519944190979004, 0.43501728773117065, 0.4091442823410034, 0.3927539885044098, 0.38935473561286926, 0.3778231739997864, 0.3658721148967743, 0.37699469923973083, 0.38142699003219604, 0.3689030408859253, 0.3586692810058594, 0.35740363597869873, 0.34716251492500305, 0.3416942059993744, 0.34067389369010925, 0.34329360723495483, 0.3323155641555786, 0.3435433804988861, 0.3444405198097229, 0.3355138897895813, 0.3319680094718933, 0.3276754915714264, 0.3219819664955139, 0.3278769850730896, 0.33374181389808655, 0.33721399307250977, 0.3300984799861908, 0.3340105712413788, 0.32515189051628113], "val_accuracy": [0.6460000276565552, 0.6863333582878113, 0.7519999742507935, 0.7743333578109741, 0.7933333516120911, 0.8086666464805603, 0.8223333358764648, 0.8246666789054871, 0.8416666388511658, 0.8450000286102295, 0.8526666760444641, 0.856333315372467, 0.859333336353302, 0.8643333315849304, 0.8573333621025085, 0.8506666421890259, 0.859333336353302, 0.8656666874885559, 0.8656666874885559, 0.8736666440963745, 0.8726666569709778, 0.8703333139419556, 0.8743333220481873, 0.878333330154419, 0.8740000128746033, 0.8690000176429749, 0.8809999823570251, 0.8820000290870667, 0.8833333253860474, 0.8806666731834412, 0.8859999775886536, 0.8849999904632568, 0.8820000290870667, 0.8853333592414856, 0.8813333511352539, 0.8813333511352539]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [5, 8, 3, 0, 2, 5, 9, 5], [0, 4, 3, 3], [16, 88], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 2, 3, 7, 2, 2, 1, 4, 2, 8, 4, 5], [3, 5, 6, 4, 1, 2, 5, 0, 1, 1, 4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 8, 2, 2, 23, 12, 11, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, tf.math.multiply(grad, tf.math.add(tf.math.add(grad, tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.sqrt(alpha), beta)), tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), alpha))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [56209156.0, 8611762176.0, 146899976192.0, 1015862001664.0, 4499982778368.0, 15059170361344.0], "accuracy": [0.10157178342342377, 0.09589222073554993, 0.09417514503002167, 0.09826971590518951, 0.09985470771789551, 0.09893012791872025], "val_loss": [584465536.0, 31499751424.0, 338084134912.0, 1843104317440.0, 6903889395712.0, 20363733893120.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 6, 8, 5], [0, 1, 0, 1, 0], [39, 39, 87], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 5, 3, 0, 3, 2, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [15], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 6, 4, 2, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)), tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3031766414642334, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [5, 2, 3, 0, 3, 0, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [3, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 3, 3, 1, 10, 7, 3, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310899019241333, 2.3114662170410156, 2.3104474544525146, 2.3114235401153564, 2.311197519302368, 2.308773994445801], "accuracy": [0.09192973375320435, 0.09113723784685135, 0.08770307898521423, 0.08677849918603897, 0.08942015469074249, 0.09879804402589798], "val_loss": [2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]