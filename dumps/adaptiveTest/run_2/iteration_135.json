[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 3, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [4, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8700000047683716, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1191251277923584, 1.1822222471237183, 0.8203740119934082, 0.699263334274292, 0.6159518957138062, 0.587882399559021, 0.535416305065155, 0.5065367817878723, 0.4779934287071228, 0.45367729663848877, 0.4332258105278015, 0.4111083745956421, 0.40616798400878906, 0.38284456729888916, 0.3822254538536072, 0.3769512176513672, 0.354265421628952, 0.3386440575122833, 0.3306775987148285, 0.32211923599243164, 0.30314332246780396, 0.2969812750816345, 0.27935782074928284, 0.2777489125728607, 0.2756462097167969, 0.2653779685497284, 0.24750389158725739, 0.2519434690475464, 0.2377185821533203, 0.23465202748775482, 0.2294284850358963, 0.21107375621795654, 0.21154451370239258, 0.20803740620613098, 0.21080628037452698, 0.20065118372440338, 0.19477207958698273, 0.1975039541721344, 0.18397662043571472, 0.1800922155380249, 0.1709349900484085, 0.17557616531848907, 0.1669771671295166, 0.16562561690807343, 0.15630416572093964, 0.16095080971717834, 0.15748901665210724, 0.15826532244682312, 0.14986813068389893], "accuracy": [0.2856954038143158, 0.5896182656288147, 0.691850483417511, 0.7228899598121643, 0.7593448758125305, 0.7740060687065125, 0.7960638999938965, 0.8074230551719666, 0.8195747137069702, 0.8293488025665283, 0.8372738361358643, 0.8462554216384888, 0.8470479249954224, 0.856689989566803, 0.8590674996376038, 0.8599920868873596, 0.870030403137207, 0.873860776424408, 0.8767666220664978, 0.8787478804588318, 0.8889182209968567, 0.8898428082466125, 0.8934090733528137, 0.8963148593902588, 0.8973715305328369, 0.9037115573883057, 0.9075419306755066, 0.9029190540313721, 0.9111081957817078, 0.9079381823539734, 0.9104477763175964, 0.9187690019607544, 0.9182406663894653, 0.9192973375320435, 0.9214106202125549, 0.9231277108192444, 0.9248448014259338, 0.9227314591407776, 0.9277506470680237, 0.9276185631752014, 0.9331660270690918, 0.9315810203552246, 0.9338264465332031, 0.9356756210327148, 0.9371285438537598, 0.9360718727111816, 0.9375247359275818, 0.937656819820404, 0.9434685111045837], "val_loss": [1.0930392742156982, 0.7510706186294556, 0.6715186834335327, 0.5764556527137756, 0.5422322154045105, 0.511400043964386, 0.4755486249923706, 0.4672662019729614, 0.4357358515262604, 0.42522358894348145, 0.4189007580280304, 0.3964780271053314, 0.3890124559402466, 0.39269474148750305, 0.3982674181461334, 0.39254963397979736, 0.36218908429145813, 0.362015962600708, 0.3742360770702362, 0.3511594235897064, 0.3485879600048065, 0.3503037989139557, 0.36217382550239563, 0.35442280769348145, 0.3420180678367615, 0.3419816195964813, 0.3390570282936096, 0.34972456097602844, 0.34541064500808716, 0.3415587544441223, 0.33408671617507935, 0.35467755794525146, 0.3446032702922821, 0.35395297408103943, 0.34647172689437866, 0.34643590450286865, 0.33643871545791626, 0.34318551421165466, 0.35412850975990295, 0.34923359751701355, 0.3728197515010834, 0.34217849373817444, 0.36785513162612915, 0.348408967256546, 0.3682064116001129, 0.36752229928970337, 0.3576744496822357, 0.3647099733352661, 0.3701615035533905], "val_accuracy": [0.6456666588783264, 0.7116666436195374, 0.7490000128746033, 0.7646666765213013, 0.7889999747276306, 0.8040000200271606, 0.8216666579246521, 0.8243333101272583, 0.8473333120346069, 0.8426666855812073, 0.8420000076293945, 0.8489999771118164, 0.8666666746139526, 0.8550000190734863, 0.8533333539962769, 0.8619999885559082, 0.8703333139419556, 0.8743333220481873, 0.8556666374206543, 0.8776666522026062, 0.8756666779518127, 0.8786666393280029, 0.8740000128746033, 0.8736666440963745, 0.8799999952316284, 0.8830000162124634, 0.8826666474342346, 0.8823333382606506, 0.8856666684150696, 0.8853333592414856, 0.8846666812896729, 0.8806666731834412, 0.8863333463668823, 0.8833333253860474, 0.8830000162124634, 0.8866666555404663, 0.8896666765213013, 0.8843333125114441, 0.8870000243186951, 0.8863333463668823, 0.8849999904632568, 0.8913333415985107, 0.8896666765213013, 0.8976666927337646, 0.8853333592414856, 0.8916666507720947, 0.8893333077430725, 0.8930000066757202, 0.8880000114440918]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 7, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 2, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 1, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [4, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.2782857120037079, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3781068325042725, 2.184016227722168, 2.363886833190918, 2.381185293197632, 2.3042972087860107, 2.286630392074585, 2.306173086166382], "accuracy": [0.23418307304382324, 0.19838859140872955, 0.13630960881710052, 0.14476291835308075, 0.0956280529499054, 0.1460837423801422, 0.09642054885625839], "val_loss": [2.3005435466766357, 2.2197070121765137, 2.179201126098633, 2.3042938709259033, 2.3013651371002197, 2.306199550628662, 2.3033483028411865], "val_accuracy": [0.09799999743700027, 0.2696666717529297, 0.1626666635274887, 0.10333333164453506, 0.10333333164453506, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 2, 8, 0, 7, 5, 9], [0, 2, 3, 3], [54, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [2, 1, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(beta), tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303772211074829, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 1, 3], [16, 88], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 0, 3, 5, 7, 3, 9, 5, 3, 7, 1, 2, 7, 3, 7, 2, 8, 7, 4, 6, 5, 6, 2, 6, 9, 0, 6, 0], [0, 5, 6, 5, 7, 4, 6, 1, 2, 0, 5, 3, 4, 0, 6, 6, 3, 5], [99, 37, 18, 98, 88], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 46, 28, 18, 5, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(grad, grad), tf.math.multiply(tf.math.add(grad, grad), alpha)), tf.math.add(beta, tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(sigma, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.negative(grad), sigma)))))), grad)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036489486694336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]