[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 8, 9, 6, 3], [0, 1, 0, 2], [49, 39], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [7, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.2822857201099396, "mapping_values": [1, 3, 2, 1, 1, 2, 1, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3418467044830322, 2.2561538219451904, 2.320465564727783, 2.4192023277282715, 2.3116440773010254, 2.30220890045166, 2.2804436683654785, 2.303942918777466], "accuracy": [0.19970941543579102, 0.15810328722000122, 0.11530841141939163, 0.20684190094470978, 0.09668471664190292, 0.1018359512090683, 0.13578127324581146, 0.09787346422672272], "val_loss": [2.2977702617645264, 2.288041591644287, 2.248584270477295, 2.3249688148498535, 2.3030593395233154, 2.2934508323669434, 2.303570032119751, 2.302717447280884], "val_accuracy": [0.1236666664481163, 0.10433333367109299, 0.28600001335144043, 0.10133333504199982, 0.10133333504199982, 0.20133332908153534, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 3], [39, 59], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 2, 5, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 1, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303163528442383, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 3, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 3, 5, 7, 5, 1, 6, 9, 0, 5, 9], [0, 0, 6, 5], [99, 89, 65, 71], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.09571428596973419, "mapping_values": [1, 9, 5, 4, 1, 9, 5, 4, 1, 16, 12, 4, 4, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.307849645614624, 2.3034169673919678, 2.301961660385132, 2.301816463470459, 2.3019607067108154, 2.3017852306365967], "accuracy": [0.09721305221319199, 0.09800554811954498, 0.10368511080741882, 0.08677849918603897, 0.08453308790922165, 0.09126931428909302], "val_loss": [2.3054285049438477, 2.3027000427246094, 2.30192232131958, 2.3018641471862793, 2.301997423171997, 2.3020730018615723], "val_accuracy": [0.09700000286102295, 0.09533333033323288, 0.07599999755620956, 0.06400000303983688, 0.06266666948795319, 0.07800000160932541]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 7, 0, 7, 5, 4, 9, 0, 0], [0, 1, 0, 2, 1, 1], [39, 39, 43], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [6, 0, 3], [0, 5, 7], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 19, 13, 6, 3, 10, 7, 3, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)))), alpha), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310213088989258, 2.309398889541626, 2.309690237045288, 2.309988260269165, 2.309485912322998, 2.3094851970672607], "accuracy": [0.09166556596755981, 0.09087307006120682, 0.09021265059709549, 0.09338264167308807, 0.09126931428909302, 0.08875974267721176], "val_loss": [2.3084261417388916, 2.3084261417388916, 2.3084261417388916, 2.3084261417388916, 2.3084261417388916, 2.3084261417388916], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]