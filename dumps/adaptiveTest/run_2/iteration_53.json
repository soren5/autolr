[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086695194244385, 1.1288950443267822, 0.7705909609794617, 0.6684213280677795, 0.6113235354423523, 0.5598296523094177, 0.5276572704315186, 0.4952450692653656, 0.47331947088241577, 0.45150572061538696, 0.4311385452747345, 0.40501564741134644, 0.393027126789093, 0.3863146901130676, 0.3800889253616333, 0.36045703291893005, 0.35171425342559814, 0.34107154607772827, 0.32068926095962524, 0.3191593885421753, 0.3060292899608612, 0.2992090582847595, 0.29536113142967224, 0.28661835193634033, 0.2747335731983185, 0.2697893977165222, 0.25803467631340027, 0.24984346330165863, 0.24563796818256378, 0.24293723702430725, 0.23833253979682922, 0.2306571751832962, 0.22463658452033997, 0.22176042199134827, 0.2121746987104416, 0.19701816141605377, 0.19187892973423004, 0.18850626051425934, 0.1938662976026535, 0.18981686234474182, 0.17513568699359894, 0.17845050990581512, 0.16374047100543976, 0.1627049595117569, 0.16293229162693024, 0.1608225405216217, 0.16340014338493347, 0.15293151140213013, 0.14543390274047852, 0.15497933328151703, 0.13535737991333008, 0.14357921481132507, 0.13364310562610626], "accuracy": [0.28424251079559326, 0.6123365759849548, 0.7123233675956726, 0.7477215528488159, 0.767401933670044, 0.7891955971717834, 0.7979130744934082, 0.8140271902084351, 0.8203672170639038, 0.8298771381378174, 0.8384625315666199, 0.8462554216384888, 0.8474441766738892, 0.8545766472816467, 0.8570862412452698, 0.8652753829956055, 0.872407853603363, 0.872407853603363, 0.8815215826034546, 0.8791441321372986, 0.8848236799240112, 0.8837670087814331, 0.8869370222091675, 0.8901069760322571, 0.8971073627471924, 0.8969752788543701, 0.89988112449646, 0.9046360850334167, 0.9091269373893738, 0.9076740145683289, 0.9071456789970398, 0.9115044474601746, 0.9129573106765747, 0.9141460657119751, 0.9181085824966431, 0.9247127175331116, 0.9222031235694885, 0.9252410531044006, 0.9241843819618225, 0.9288073182106018, 0.9305243492126465, 0.9318451881408691, 0.9385814070701599, 0.9381851553916931, 0.9379209876060486, 0.9401664137840271, 0.9344868659973145, 0.941091001033783, 0.9434685111045837, 0.9381851553916931, 0.950468897819519, 0.94558185338974, 0.9490159749984741], "val_loss": [1.135210633277893, 0.7034205794334412, 0.6200851798057556, 0.5685670375823975, 0.5225690603256226, 0.48798617720603943, 0.45845067501068115, 0.4466003477573395, 0.42649608850479126, 0.41432690620422363, 0.4066751301288605, 0.3922073245048523, 0.39636310935020447, 0.3949252963066101, 0.37349602580070496, 0.37519973516464233, 0.37423592805862427, 0.36534854769706726, 0.37613704800605774, 0.3537689745426178, 0.3586438000202179, 0.35678690671920776, 0.3658125698566437, 0.3550025224685669, 0.3521706461906433, 0.3612290918827057, 0.35216569900512695, 0.3580978512763977, 0.34706541895866394, 0.3620050847530365, 0.3585434854030609, 0.35542118549346924, 0.37169909477233887, 0.3568453788757324, 0.36463260650634766, 0.36916258931159973, 0.36460766196250916, 0.37031278014183044, 0.3689993619918823, 0.36874300241470337, 0.37947261333465576, 0.38180094957351685, 0.3874278664588928, 0.4032210409641266, 0.38796287775039673, 0.3866422474384308, 0.38430583477020264, 0.4010760188102722, 0.4146553874015808, 0.3991786241531372, 0.41994768381118774, 0.4028191864490509, 0.43447449803352356], "val_accuracy": [0.6039999723434448, 0.7406666874885559, 0.7576666474342346, 0.7720000147819519, 0.7923333048820496, 0.8066666722297668, 0.828000009059906, 0.8263333439826965, 0.8426666855812073, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.8539999723434448, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8730000257492065, 0.8709999918937683, 0.8706666827201843, 0.8619999885559082, 0.8673333525657654, 0.8759999871253967, 0.8733333349227905, 0.875333309173584, 0.875, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.878000020980835, 0.8820000290870667, 0.8803333044052124, 0.8806666731834412, 0.8843333125114441, 0.8803333044052124, 0.8859999775886536, 0.8823333382606506, 0.8793333172798157, 0.8836666941642761, 0.887333333492279, 0.8830000162124634, 0.8836666941642761, 0.887666642665863, 0.8816666603088379, 0.8880000114440918, 0.8763333559036255, 0.8849999904632568, 0.8863333463668823, 0.8820000290870667, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5, 9], [1, 2, 1, 3], [16, 88], [0, 1, 1], [1], [3, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8662857413291931, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.negative(beta), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.10492205619812, 1.1831623315811157, 0.818598747253418, 0.7018770575523376, 0.6293143033981323, 0.5896894931793213, 0.5460145473480225, 0.5190372467041016, 0.49531835317611694, 0.48046621680259705, 0.45012468099594116, 0.4345357418060303, 0.41460126638412476, 0.41178232431411743, 0.38514772057533264, 0.375863641500473, 0.3657698631286621, 0.35459622740745544, 0.34593939781188965, 0.33774757385253906, 0.32672303915023804, 0.3221350610256195, 0.3027019798755646, 0.2871219217777252, 0.2831111550331116, 0.2839902937412262, 0.27886828780174255], "accuracy": [0.3003566265106201, 0.5982036590576172, 0.6896050572395325, 0.7294940948486328, 0.7556465268135071, 0.7759873270988464, 0.7947431206703186, 0.802271842956543, 0.8125742673873901, 0.8226125836372375, 0.8342359066009521, 0.8389908671379089, 0.8466516733169556, 0.8485008478164673, 0.8532558679580688, 0.8605204224586487, 0.8664641380310059, 0.8646149635314941, 0.8714832663536072, 0.8735966086387634, 0.8737286925315857, 0.8787478804588318, 0.8864086866378784, 0.8920882344245911, 0.8938053250312805, 0.8934090733528137, 0.894069492816925], "val_loss": [1.0918498039245605, 0.763016939163208, 0.629518985748291, 0.5721962451934814, 0.5351378321647644, 0.48891931772232056, 0.47056901454925537, 0.4465584456920624, 0.42285895347595215, 0.40732961893081665, 0.38810694217681885, 0.3792317807674408, 0.371050626039505, 0.36524057388305664, 0.35372257232666016, 0.35997986793518066, 0.3333996534347534, 0.3481467664241791, 0.34306246042251587, 0.327339768409729, 0.3400971293449402, 0.32122886180877686, 0.3296365737915039, 0.326537549495697, 0.3254953622817993, 0.33095747232437134, 0.32860392332077026], "val_accuracy": [0.6446666717529297, 0.7213333249092102, 0.7586666941642761, 0.7696666717529297, 0.7820000052452087, 0.8019999861717224, 0.8069999814033508, 0.8226666450500488, 0.8293333053588867, 0.8349999785423279, 0.8533333539962769, 0.8550000190734863, 0.8566666841506958, 0.8606666922569275, 0.8656666874885559, 0.8573333621025085, 0.8786666393280029, 0.8703333139419556, 0.871999979019165, 0.8786666393280029, 0.8709999918937683, 0.8823333382606506, 0.8820000290870667, 0.8759999871253967, 0.8790000081062317, 0.8803333044052124, 0.8813333511352539]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 9, 2, 9, 9], [0, 0, 3, 3], [16, 10, 54, 13], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.093634843826294, 1.2087904214859009, 0.8574110269546509, 0.7545270919799805, 0.6761358976364136, 0.6127616763114929, 0.5760080814361572, 0.5418452024459839, 0.5258863568305969, 0.49560025334358215, 0.4693281650543213, 0.46166911721229553, 0.4277970492839813, 0.41917070746421814, 0.4126029908657074, 0.392994225025177, 0.37378808856010437, 0.36035454273223877, 0.36741939187049866, 0.35532495379447937, 0.33748534321784973, 0.3526402413845062, 0.30955028533935547, 0.331264853477478, 0.329590380191803, 0.32572051882743835, 0.32918059825897217, 0.3322486877441406, 0.3385140001773834, 0.33034148812294006], "accuracy": [0.27816668152809143, 0.6016378402709961, 0.6742834448814392, 0.7113987803459167, 0.750231146812439, 0.7664773464202881, 0.7707040309906006, 0.7954035401344299, 0.793950617313385, 0.8099326491355896, 0.8207634687423706, 0.8244617581367493, 0.8317263126373291, 0.841500461101532, 0.8437458872795105, 0.8479725122451782, 0.8548408150672913, 0.863029956817627, 0.8582749962806702, 0.8613129258155823, 0.8709549307823181, 0.8659358024597168, 0.8775591254234314, 0.8676528930664062, 0.8734645247459412, 0.8757099509239197, 0.8729361891746521, 0.8691058158874512, 0.8737286925315857, 0.8737286925315857], "val_loss": [1.059767246246338, 0.7768679857254028, 0.7311191558837891, 0.6262998580932617, 0.566982090473175, 0.552854061126709, 0.52431720495224, 0.5112988352775574, 0.49150341749191284, 0.46940991282463074, 0.47314661741256714, 0.4611695408821106, 0.46609944105148315, 0.444975882768631, 0.4217284619808197, 0.4347449243068695, 0.42228344082832336, 0.461650550365448, 0.4529658257961273, 0.44446825981140137, 0.48131051659584045, 0.43879401683807373, 0.44293665885925293, 0.4587862193584442, 0.41927510499954224, 0.45431509613990784, 0.467296838760376, 0.488369882106781, 0.46159160137176514, 0.4742242693901062], "val_accuracy": [0.6266666650772095, 0.7129999995231628, 0.7326666712760925, 0.7596666812896729, 0.7913333177566528, 0.781333327293396, 0.8073333501815796, 0.8096666932106018, 0.8316666483879089, 0.8306666612625122, 0.8379999995231628, 0.8386666774749756, 0.8506666421890259, 0.8506666421890259, 0.859333336353302, 0.859666645526886, 0.8633333444595337, 0.8573333621025085, 0.8650000095367432, 0.8543333411216736, 0.8546666502952576, 0.8616666793823242, 0.8489999771118164, 0.8659999966621399, 0.8683333396911621, 0.8610000014305115, 0.8523333072662354, 0.8556666374206543, 0.846666693687439, 0.8486666679382324]}, "mapping_values": [1, 8, 4, 4, 2, 8, 6, 2, 4, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 9, 0, 3], [3, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 2, 7, 5, 1, 3, 5, 3, 1, 4, 0, 9, 2, 2, 6, 6, 8, 9, 5, 6, 4, 9, 2, 3, 2, 0, 0, 6, 6, 7, 9, 6, 2, 7, 7, 3, 7, 6, 0, 8, 6, 1, 8, 5, 6, 5, 0, 0, 0], [0, 5, 3, 3, 5, 0, 3, 3, 5, 0, 2, 3, 1, 0, 4, 3, 5, 1, 4, 4, 0, 0, 1, 3, 3, 0, 2, 4, 0], [16, 88, 3, 29, 96, 54, 66, 80, 35, 34, 3, 28], [0, 1, 1], [1], [1, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 83, 54, 29, 12, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(grad, tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, grad))), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.divide_no_nan(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), alpha), tf.math.divide_no_nan(tf.math.square(grad), grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), beta))), grad)))), tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039608001708984, 2.7455713748931885, 19.897193908691406, 88.96992492675781, 215.70993041992188, 400.2911376953125], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.321608066558838, 6.054376125335693, 51.40874099731445, 154.52249145507812, 315.20538330078125, 533.3384399414062], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 2, 4], [2, 0, 0, 2, 1], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [5], [0, 6], [5], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]