[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086695194244385, 1.1288950443267822, 0.7705909609794617, 0.6684213280677795, 0.6113235354423523, 0.5598296523094177, 0.5276572704315186, 0.4952450692653656, 0.47331947088241577, 0.45150572061538696, 0.4311385452747345, 0.40501564741134644, 0.393027126789093, 0.3863146901130676, 0.3800889253616333, 0.36045703291893005, 0.35171425342559814, 0.34107154607772827, 0.32068926095962524, 0.3191593885421753, 0.3060292899608612, 0.2992090582847595, 0.29536113142967224, 0.28661835193634033, 0.2747335731983185, 0.2697893977165222, 0.25803467631340027, 0.24984346330165863, 0.24563796818256378, 0.24293723702430725, 0.23833253979682922, 0.2306571751832962, 0.22463658452033997, 0.22176042199134827, 0.2121746987104416, 0.19701816141605377, 0.19187892973423004, 0.18850626051425934, 0.1938662976026535, 0.18981686234474182, 0.17513568699359894, 0.17845050990581512, 0.16374047100543976, 0.1627049595117569, 0.16293229162693024, 0.1608225405216217, 0.16340014338493347, 0.15293151140213013, 0.14543390274047852, 0.15497933328151703, 0.13535737991333008, 0.14357921481132507, 0.13364310562610626], "accuracy": [0.28424251079559326, 0.6123365759849548, 0.7123233675956726, 0.7477215528488159, 0.767401933670044, 0.7891955971717834, 0.7979130744934082, 0.8140271902084351, 0.8203672170639038, 0.8298771381378174, 0.8384625315666199, 0.8462554216384888, 0.8474441766738892, 0.8545766472816467, 0.8570862412452698, 0.8652753829956055, 0.872407853603363, 0.872407853603363, 0.8815215826034546, 0.8791441321372986, 0.8848236799240112, 0.8837670087814331, 0.8869370222091675, 0.8901069760322571, 0.8971073627471924, 0.8969752788543701, 0.89988112449646, 0.9046360850334167, 0.9091269373893738, 0.9076740145683289, 0.9071456789970398, 0.9115044474601746, 0.9129573106765747, 0.9141460657119751, 0.9181085824966431, 0.9247127175331116, 0.9222031235694885, 0.9252410531044006, 0.9241843819618225, 0.9288073182106018, 0.9305243492126465, 0.9318451881408691, 0.9385814070701599, 0.9381851553916931, 0.9379209876060486, 0.9401664137840271, 0.9344868659973145, 0.941091001033783, 0.9434685111045837, 0.9381851553916931, 0.950468897819519, 0.94558185338974, 0.9490159749984741], "val_loss": [1.135210633277893, 0.7034205794334412, 0.6200851798057556, 0.5685670375823975, 0.5225690603256226, 0.48798617720603943, 0.45845067501068115, 0.4466003477573395, 0.42649608850479126, 0.41432690620422363, 0.4066751301288605, 0.3922073245048523, 0.39636310935020447, 0.3949252963066101, 0.37349602580070496, 0.37519973516464233, 0.37423592805862427, 0.36534854769706726, 0.37613704800605774, 0.3537689745426178, 0.3586438000202179, 0.35678690671920776, 0.3658125698566437, 0.3550025224685669, 0.3521706461906433, 0.3612290918827057, 0.35216569900512695, 0.3580978512763977, 0.34706541895866394, 0.3620050847530365, 0.3585434854030609, 0.35542118549346924, 0.37169909477233887, 0.3568453788757324, 0.36463260650634766, 0.36916258931159973, 0.36460766196250916, 0.37031278014183044, 0.3689993619918823, 0.36874300241470337, 0.37947261333465576, 0.38180094957351685, 0.3874278664588928, 0.4032210409641266, 0.38796287775039673, 0.3866422474384308, 0.38430583477020264, 0.4010760188102722, 0.4146553874015808, 0.3991786241531372, 0.41994768381118774, 0.4028191864490509, 0.43447449803352356], "val_accuracy": [0.6039999723434448, 0.7406666874885559, 0.7576666474342346, 0.7720000147819519, 0.7923333048820496, 0.8066666722297668, 0.828000009059906, 0.8263333439826965, 0.8426666855812073, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.8539999723434448, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8730000257492065, 0.8709999918937683, 0.8706666827201843, 0.8619999885559082, 0.8673333525657654, 0.8759999871253967, 0.8733333349227905, 0.875333309173584, 0.875, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.878000020980835, 0.8820000290870667, 0.8803333044052124, 0.8806666731834412, 0.8843333125114441, 0.8803333044052124, 0.8859999775886536, 0.8823333382606506, 0.8793333172798157, 0.8836666941642761, 0.887333333492279, 0.8830000162124634, 0.8836666941642761, 0.887666642665863, 0.8816666603088379, 0.8880000114440918, 0.8763333559036255, 0.8849999904632568, 0.8863333463668823, 0.8820000290870667, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226348876953125, 1.8794918060302734, 1.417793869972229, 1.1052825450897217, 0.9593082070350647, 0.8663129806518555, 0.7892252206802368, 0.7527231574058533, 0.7167013883590698, 0.6855252981185913, 0.6524377465248108, 0.6317535638809204, 0.6140557527542114, 0.5916767716407776, 0.5752793550491333, 0.5591614842414856, 0.5403441786766052, 0.5304502248764038, 0.5286852121353149, 0.5207974910736084, 0.49958497285842896, 0.5010033845901489, 0.48574531078338623, 0.4809221923351288, 0.4685618281364441, 0.4554644525051117, 0.4499361515045166, 0.4439038336277008, 0.4420427083969116, 0.41955462098121643, 0.4230092465877533, 0.412030428647995, 0.4072582721710205, 0.40039676427841187, 0.3976851999759674, 0.3918563723564148, 0.38185927271842957, 0.37996265292167664, 0.3791578412055969, 0.36817070841789246, 0.37058204412460327, 0.3493867814540863, 0.3543159067630768, 0.34348005056381226, 0.3391079604625702, 0.33907392621040344, 0.3294035792350769, 0.3289995789527893, 0.3135201632976532, 0.3127898871898651, 0.3111494779586792, 0.306598037481308, 0.30500975251197815, 0.2976189851760864], "accuracy": [0.2661471366882324, 0.4703473746776581, 0.5525029897689819, 0.6139215230941772, 0.6565843224525452, 0.6944921612739563, 0.7173424959182739, 0.7306828498840332, 0.7411174178123474, 0.7483819723129272, 0.7642319202423096, 0.7733456492424011, 0.7820631265640259, 0.789988100528717, 0.7957997918128967, 0.8000264167785645, 0.809140145778656, 0.8095363974571228, 0.811649739742279, 0.8211596608161926, 0.8216879963874817, 0.8265751004219055, 0.8300092220306396, 0.8338396549224854, 0.8330471515655518, 0.8407079577445984, 0.8444063067436218, 0.8413683772087097, 0.8425571322441101, 0.852859616279602, 0.8488970994949341, 0.8537842035293579, 0.8514066934585571, 0.8564258217811584, 0.859199583530426, 0.8610487580299377, 0.863558292388916, 0.8639545440673828, 0.8650112152099609, 0.8685774803161621, 0.8673887252807617, 0.8741249442100525, 0.8739928603172302, 0.8796724081039429, 0.8815215826034546, 0.8803328275680542, 0.8809932470321655, 0.8824461698532104, 0.8878615498542786, 0.887597382068634, 0.8893144726753235, 0.8899748921394348, 0.8873332738876343, 0.8907673954963684], "val_loss": [2.0458626747131348, 1.5252926349639893, 1.052628517150879, 0.8405277729034424, 0.7562106251716614, 0.7009351253509521, 0.6561484932899475, 0.627610981464386, 0.5985882878303528, 0.5773906111717224, 0.5564173460006714, 0.5499028563499451, 0.5310032367706299, 0.5183689594268799, 0.5061983466148376, 0.4947974383831024, 0.4873294234275818, 0.4778987169265747, 0.47643911838531494, 0.4636084735393524, 0.4534182846546173, 0.452301025390625, 0.443564772605896, 0.43724218010902405, 0.43908748030662537, 0.42712298035621643, 0.42414647340774536, 0.41837114095687866, 0.4150601923465729, 0.4146635830402374, 0.40978679060935974, 0.404580682516098, 0.4008660912513733, 0.39463624358177185, 0.39234936237335205, 0.3874043822288513, 0.38637402653694153, 0.3821287751197815, 0.3819471001625061, 0.37730884552001953, 0.37681838870048523, 0.3726356327533722, 0.3718409836292267, 0.36555907130241394, 0.365915447473526, 0.3645326793193817, 0.36497762799263, 0.362476110458374, 0.3640541732311249, 0.35964512825012207, 0.3545864522457123, 0.3588787317276001, 0.3534260392189026, 0.3523516058921814], "val_accuracy": [0.5196666717529297, 0.6453333497047424, 0.6673333048820496, 0.703000009059906, 0.721666693687439, 0.7429999709129333, 0.7573333382606506, 0.7646666765213013, 0.7763333320617676, 0.7829999923706055, 0.7956666946411133, 0.7896666526794434, 0.8033333420753479, 0.8149999976158142, 0.8153333067893982, 0.8173333406448364, 0.8233333230018616, 0.8276666402816772, 0.8240000009536743, 0.824999988079071, 0.8346666693687439, 0.8366666436195374, 0.8389999866485596, 0.843666672706604, 0.8383333086967468, 0.8463333249092102, 0.8503333330154419, 0.8510000109672546, 0.8486666679382324, 0.8463333249092102, 0.8503333330154419, 0.8523333072662354, 0.8553333282470703, 0.8553333282470703, 0.8566666841506958, 0.859333336353302, 0.856333315372467, 0.862666666507721, 0.856333315372467, 0.8586666584014893, 0.8629999756813049, 0.8619999885559082, 0.862333357334137, 0.8653333187103271, 0.8659999966621399, 0.8676666617393494, 0.8633333444595337, 0.8616666793823242, 0.8696666955947876, 0.8643333315849304, 0.8666666746139526, 0.8696666955947876, 0.8679999709129333, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [14, 16], [1, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 3, 3, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 1, 0, 1, 0, 20, 10, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.pow(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 4, 0, 0, 3, 3, 2, 0], [57, 99, 96, 99, 29, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [41, 99, 96, 99, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), beta), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.309570789337158, 2.308786630630493, 2.3090059757232666, 2.3101110458374023, 2.3103208541870117, 2.309520721435547], "accuracy": [0.09192973375320435, 0.09140139818191528, 0.09113723784685135, 0.09549596905708313, 0.09008057415485382, 0.09708096832036972], "val_loss": [2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]