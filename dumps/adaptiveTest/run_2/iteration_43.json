[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086695194244385, 1.1288950443267822, 0.7705909609794617, 0.6684213280677795, 0.6113235354423523, 0.5598296523094177, 0.5276572704315186, 0.4952450692653656, 0.47331947088241577, 0.45150572061538696, 0.4311385452747345, 0.40501564741134644, 0.393027126789093, 0.3863146901130676, 0.3800889253616333, 0.36045703291893005, 0.35171425342559814, 0.34107154607772827, 0.32068926095962524, 0.3191593885421753, 0.3060292899608612, 0.2992090582847595, 0.29536113142967224, 0.28661835193634033, 0.2747335731983185, 0.2697893977165222, 0.25803467631340027, 0.24984346330165863, 0.24563796818256378, 0.24293723702430725, 0.23833253979682922, 0.2306571751832962, 0.22463658452033997, 0.22176042199134827, 0.2121746987104416, 0.19701816141605377, 0.19187892973423004, 0.18850626051425934, 0.1938662976026535, 0.18981686234474182, 0.17513568699359894, 0.17845050990581512, 0.16374047100543976, 0.1627049595117569, 0.16293229162693024, 0.1608225405216217, 0.16340014338493347, 0.15293151140213013, 0.14543390274047852, 0.15497933328151703, 0.13535737991333008, 0.14357921481132507, 0.13364310562610626], "accuracy": [0.28424251079559326, 0.6123365759849548, 0.7123233675956726, 0.7477215528488159, 0.767401933670044, 0.7891955971717834, 0.7979130744934082, 0.8140271902084351, 0.8203672170639038, 0.8298771381378174, 0.8384625315666199, 0.8462554216384888, 0.8474441766738892, 0.8545766472816467, 0.8570862412452698, 0.8652753829956055, 0.872407853603363, 0.872407853603363, 0.8815215826034546, 0.8791441321372986, 0.8848236799240112, 0.8837670087814331, 0.8869370222091675, 0.8901069760322571, 0.8971073627471924, 0.8969752788543701, 0.89988112449646, 0.9046360850334167, 0.9091269373893738, 0.9076740145683289, 0.9071456789970398, 0.9115044474601746, 0.9129573106765747, 0.9141460657119751, 0.9181085824966431, 0.9247127175331116, 0.9222031235694885, 0.9252410531044006, 0.9241843819618225, 0.9288073182106018, 0.9305243492126465, 0.9318451881408691, 0.9385814070701599, 0.9381851553916931, 0.9379209876060486, 0.9401664137840271, 0.9344868659973145, 0.941091001033783, 0.9434685111045837, 0.9381851553916931, 0.950468897819519, 0.94558185338974, 0.9490159749984741], "val_loss": [1.135210633277893, 0.7034205794334412, 0.6200851798057556, 0.5685670375823975, 0.5225690603256226, 0.48798617720603943, 0.45845067501068115, 0.4466003477573395, 0.42649608850479126, 0.41432690620422363, 0.4066751301288605, 0.3922073245048523, 0.39636310935020447, 0.3949252963066101, 0.37349602580070496, 0.37519973516464233, 0.37423592805862427, 0.36534854769706726, 0.37613704800605774, 0.3537689745426178, 0.3586438000202179, 0.35678690671920776, 0.3658125698566437, 0.3550025224685669, 0.3521706461906433, 0.3612290918827057, 0.35216569900512695, 0.3580978512763977, 0.34706541895866394, 0.3620050847530365, 0.3585434854030609, 0.35542118549346924, 0.37169909477233887, 0.3568453788757324, 0.36463260650634766, 0.36916258931159973, 0.36460766196250916, 0.37031278014183044, 0.3689993619918823, 0.36874300241470337, 0.37947261333465576, 0.38180094957351685, 0.3874278664588928, 0.4032210409641266, 0.38796287775039673, 0.3866422474384308, 0.38430583477020264, 0.4010760188102722, 0.4146553874015808, 0.3991786241531372, 0.41994768381118774, 0.4028191864490509, 0.43447449803352356], "val_accuracy": [0.6039999723434448, 0.7406666874885559, 0.7576666474342346, 0.7720000147819519, 0.7923333048820496, 0.8066666722297668, 0.828000009059906, 0.8263333439826965, 0.8426666855812073, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.8539999723434448, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8730000257492065, 0.8709999918937683, 0.8706666827201843, 0.8619999885559082, 0.8673333525657654, 0.8759999871253967, 0.8733333349227905, 0.875333309173584, 0.875, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.878000020980835, 0.8820000290870667, 0.8803333044052124, 0.8806666731834412, 0.8843333125114441, 0.8803333044052124, 0.8859999775886536, 0.8823333382606506, 0.8793333172798157, 0.8836666941642761, 0.887333333492279, 0.8830000162124634, 0.8836666941642761, 0.887666642665863, 0.8816666603088379, 0.8880000114440918, 0.8763333559036255, 0.8849999904632568, 0.8863333463668823, 0.8820000290870667, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 4, 3, 0, 9, 5, 9], [0, 2, 3, 3], [42, 43], [0, 1, 1], [1], [0, 5], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [6, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.558571457862854, "mapping_values": [1, 2, 1, 1, 1, 8, 6, 2, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6293649673461914, 2.3181917667388916, 3.939424753189087, 2.259106397628784, 2.1067981719970703, 2.1175551414489746, 2.0491576194763184, 1.8238517045974731, 1.7518020868301392, 1.8640486001968384, 1.6135677099227905, 1.9248905181884766, 1.6868304014205933, 1.5461452007293701], "accuracy": [0.19099193811416626, 0.1500462293624878, 0.14740456640720367, 0.16061286628246307, 0.23893804848194122, 0.2715625464916229, 0.25941091775894165, 0.3928146958351135, 0.42068418860435486, 0.39189010858535767, 0.44802534580230713, 0.37802138924598694, 0.4007396697998047, 0.459780752658844], "val_loss": [2.3059566020965576, 1.9457786083221436, 2.3068935871124268, 1.9941012859344482, 2.0486738681793213, 2.227658748626709, 1.8119953870773315, 1.584589958190918, 1.5377941131591797, 1.6696408987045288, 1.4623069763183594, 1.8610455989837646, 1.6514545679092407, 1.3609930276870728], "val_accuracy": [0.10100000351667404, 0.2226666659116745, 0.11933333426713943, 0.296999990940094, 0.2746666669845581, 0.17366667091846466, 0.3596666753292084, 0.5260000228881836, 0.5456666946411133, 0.41866666078567505, 0.46700000762939453, 0.351666659116745, 0.44999998807907104, 0.515333354473114]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [1, 1, 2, 1], [39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 10, 6, 4, 1, 3, 1, 2, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 2, 3, 6, 3, 1, 6, 5, 7, 6, 8, 6, 5, 5, 4, 9, 6, 5, 7, 3, 6, 4, 1, 0, 6, 3, 9], [0, 0, 0, 2, 2, 0, 0, 3, 3, 3, 0, 1, 1, 1, 2, 3, 3], [39, 39, 22, 88, 34, 52, 49, 21], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 2, 5, 9], [0, 2, 3, 3], [16, 18], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 8, 8, 2, 2, 1, 6], [0, 4, 6, 4, 3, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 27, 17, 8, 10, 7, 3, 2, 13, 7, 6, 1, 21, 11, 10, 3], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)))))), grad)), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), alpha)), alpha)), grad), grad))))))), grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.add(grad, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, grad), sigma), sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 1, 2, 3], [2, 3, 0, 2], [39, 39], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [5, 2, 3, 0, 4, 5, 0], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 3, 1, 2, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]