[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086695194244385, 1.1288950443267822, 0.7705909609794617, 0.6684213280677795, 0.6113235354423523, 0.5598296523094177, 0.5276572704315186, 0.4952450692653656, 0.47331947088241577, 0.45150572061538696, 0.4311385452747345, 0.40501564741134644, 0.393027126789093, 0.3863146901130676, 0.3800889253616333, 0.36045703291893005, 0.35171425342559814, 0.34107154607772827, 0.32068926095962524, 0.3191593885421753, 0.3060292899608612, 0.2992090582847595, 0.29536113142967224, 0.28661835193634033, 0.2747335731983185, 0.2697893977165222, 0.25803467631340027, 0.24984346330165863, 0.24563796818256378, 0.24293723702430725, 0.23833253979682922, 0.2306571751832962, 0.22463658452033997, 0.22176042199134827, 0.2121746987104416, 0.19701816141605377, 0.19187892973423004, 0.18850626051425934, 0.1938662976026535, 0.18981686234474182, 0.17513568699359894, 0.17845050990581512, 0.16374047100543976, 0.1627049595117569, 0.16293229162693024, 0.1608225405216217, 0.16340014338493347, 0.15293151140213013, 0.14543390274047852, 0.15497933328151703, 0.13535737991333008, 0.14357921481132507, 0.13364310562610626], "accuracy": [0.28424251079559326, 0.6123365759849548, 0.7123233675956726, 0.7477215528488159, 0.767401933670044, 0.7891955971717834, 0.7979130744934082, 0.8140271902084351, 0.8203672170639038, 0.8298771381378174, 0.8384625315666199, 0.8462554216384888, 0.8474441766738892, 0.8545766472816467, 0.8570862412452698, 0.8652753829956055, 0.872407853603363, 0.872407853603363, 0.8815215826034546, 0.8791441321372986, 0.8848236799240112, 0.8837670087814331, 0.8869370222091675, 0.8901069760322571, 0.8971073627471924, 0.8969752788543701, 0.89988112449646, 0.9046360850334167, 0.9091269373893738, 0.9076740145683289, 0.9071456789970398, 0.9115044474601746, 0.9129573106765747, 0.9141460657119751, 0.9181085824966431, 0.9247127175331116, 0.9222031235694885, 0.9252410531044006, 0.9241843819618225, 0.9288073182106018, 0.9305243492126465, 0.9318451881408691, 0.9385814070701599, 0.9381851553916931, 0.9379209876060486, 0.9401664137840271, 0.9344868659973145, 0.941091001033783, 0.9434685111045837, 0.9381851553916931, 0.950468897819519, 0.94558185338974, 0.9490159749984741], "val_loss": [1.135210633277893, 0.7034205794334412, 0.6200851798057556, 0.5685670375823975, 0.5225690603256226, 0.48798617720603943, 0.45845067501068115, 0.4466003477573395, 0.42649608850479126, 0.41432690620422363, 0.4066751301288605, 0.3922073245048523, 0.39636310935020447, 0.3949252963066101, 0.37349602580070496, 0.37519973516464233, 0.37423592805862427, 0.36534854769706726, 0.37613704800605774, 0.3537689745426178, 0.3586438000202179, 0.35678690671920776, 0.3658125698566437, 0.3550025224685669, 0.3521706461906433, 0.3612290918827057, 0.35216569900512695, 0.3580978512763977, 0.34706541895866394, 0.3620050847530365, 0.3585434854030609, 0.35542118549346924, 0.37169909477233887, 0.3568453788757324, 0.36463260650634766, 0.36916258931159973, 0.36460766196250916, 0.37031278014183044, 0.3689993619918823, 0.36874300241470337, 0.37947261333465576, 0.38180094957351685, 0.3874278664588928, 0.4032210409641266, 0.38796287775039673, 0.3866422474384308, 0.38430583477020264, 0.4010760188102722, 0.4146553874015808, 0.3991786241531372, 0.41994768381118774, 0.4028191864490509, 0.43447449803352356], "val_accuracy": [0.6039999723434448, 0.7406666874885559, 0.7576666474342346, 0.7720000147819519, 0.7923333048820496, 0.8066666722297668, 0.828000009059906, 0.8263333439826965, 0.8426666855812073, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.8539999723434448, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8730000257492065, 0.8709999918937683, 0.8706666827201843, 0.8619999885559082, 0.8673333525657654, 0.8759999871253967, 0.8733333349227905, 0.875333309173584, 0.875, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.878000020980835, 0.8820000290870667, 0.8803333044052124, 0.8806666731834412, 0.8843333125114441, 0.8803333044052124, 0.8859999775886536, 0.8823333382606506, 0.8793333172798157, 0.8836666941642761, 0.887333333492279, 0.8830000162124634, 0.8836666941642761, 0.887666642665863, 0.8816666603088379, 0.8880000114440918, 0.8763333559036255, 0.8849999904632568, 0.8863333463668823, 0.8820000290870667, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 3, 0, 3, 5, 9], [5, 2, 3, 3], [16, 88], [1, 1, 0], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8694285750389099, "mapping_values": [1, 9, 5, 4, 2, 9, 6, 3, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.square(beta))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.107628345489502, 1.2588095664978027, 0.8529178500175476, 0.7145105004310608, 0.6247782707214355, 0.5732579827308655, 0.5356417298316956, 0.5143855810165405, 0.486406534910202, 0.4619297683238983, 0.44862812757492065, 0.42596232891082764, 0.42159363627433777, 0.39494550228118896, 0.39358124136924744, 0.3837311565876007, 0.37844914197921753, 0.35856595635414124, 0.34811538457870483, 0.34012943506240845, 0.3320036828517914, 0.3200198709964752, 0.30860334634780884, 0.2925029397010803, 0.2789561152458191], "accuracy": [0.2817329168319702, 0.5803724527359009, 0.687491774559021, 0.7329282760620117, 0.7569673657417297, 0.7816668748855591, 0.796328067779541, 0.8053097128868103, 0.8204993009567261, 0.8230088353157043, 0.8321225643157959, 0.8342359066009521, 0.8446704745292664, 0.8525954484939575, 0.8520671129226685, 0.8536521196365356, 0.8584070801734924, 0.8687095642089844, 0.8688416481018066, 0.869502067565918, 0.8753136992454529, 0.8805969953536987, 0.882710337638855, 0.8923524022102356, 0.8949940800666809], "val_loss": [1.1470979452133179, 0.8596919178962708, 0.6942007541656494, 0.580345094203949, 0.5412240028381348, 0.5039195418357849, 0.4912245273590088, 0.45952409505844116, 0.4497412145137787, 0.43697506189346313, 0.4357226490974426, 0.43785640597343445, 0.4202578067779541, 0.42379000782966614, 0.41127434372901917, 0.40782609581947327, 0.4056984484195709, 0.401882529258728, 0.3920838236808777, 0.38456234335899353, 0.38732457160949707, 0.3908858597278595, 0.38332852721214294, 0.38223937153816223, 0.3966117203235626], "val_accuracy": [0.5910000205039978, 0.7053333520889282, 0.7426666617393494, 0.7639999985694885, 0.7860000133514404, 0.8076666593551636, 0.8190000057220459, 0.8263333439826965, 0.824999988079071, 0.8410000205039978, 0.8360000252723694, 0.8366666436195374, 0.8386666774749756, 0.8476666808128357, 0.8479999899864197, 0.8463333249092102, 0.8489999771118164, 0.8523333072662354, 0.8573333621025085, 0.859333336353302, 0.8536666631698608, 0.8516666889190674, 0.8586666584014893, 0.8543333411216736, 0.856333315372467]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 6, 3, 1, 9, 1, 2, 4, 1, 0, 1, 7, 3, 7, 6], [0, 0, 0, 2, 2, 0, 0, 0, 1, 3, 0, 2, 1, 2], [39, 39, 4, 86, 69, 30, 48, 85], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 2, 3, 8, 3, 6, 9], [0, 2, 3, 3], [16, 88], [0, 1, 1], [1], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [4, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.21857142448425293, "mapping_values": [1, 32, 18, 14, 8, 11, 7, 4, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad), alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), beta))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3143866062164307, 2.3754007816314697, 2.3068971633911133, 2.2929561138153076, 2.3412184715270996, 2.303856611251831], "accuracy": [0.20393607020378113, 0.18742570281028748, 0.09932637959718704, 0.16100911796092987, 0.09681680053472519, 0.09893012791872025], "val_loss": [2.263051748275757, 2.309433937072754, 2.302971363067627, 2.522491693496704, 2.3037660121917725, 2.3023688793182373], "val_accuracy": [0.20933333039283752, 0.09866666793823242, 0.09866666793823242, 0.10066666454076767, 0.0976666659116745, 0.11933333426713943]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 0, 0, 3], [0, 0, 0, 0], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5, 9], [0, 2, 5, 3], [16, 84], [0, 1, 0, 1, 0], [1, 3, 9], [6, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 7, 4, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037750720977783, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 4, 0, 5], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5, 9], [2, 4, 3, 3], [16, 22], [0, 1, 0, 1, 1], [7, 7], [1, 6, 2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 11, 7, 4, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(beta, tf.math.square(grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]