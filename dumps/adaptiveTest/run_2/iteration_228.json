[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 88], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8834285736083984, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1156113147735596, 1.1266285181045532, 0.7543179392814636, 0.6674520969390869, 0.594718337059021, 0.5494779348373413, 0.51642906665802, 0.4823608100414276, 0.45740458369255066, 0.43341064453125, 0.42064666748046875, 0.39770862460136414, 0.37768059968948364, 0.36111369729042053, 0.35074546933174133, 0.34457799792289734, 0.33335381746292114, 0.32452669739723206, 0.30748414993286133, 0.30316776037216187, 0.2939970791339874, 0.2862822413444519, 0.2835896909236908, 0.26758840680122375, 0.2618829011917114, 0.25047022104263306, 0.2522719204425812, 0.24194647371768951, 0.22833606600761414, 0.23130740225315094, 0.21273569762706757, 0.21779876947402954, 0.2148962765932083, 0.20656786859035492, 0.20062801241874695, 0.1934412568807602, 0.1893332600593567, 0.18692182004451752, 0.19163726270198822, 0.18172459304332733], "accuracy": [0.29943203926086426, 0.611411988735199, 0.7193237543106079, 0.7491744756698608, 0.776251494884491, 0.7922335267066956, 0.8103289008140564, 0.8198388814926147, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8506141901016235, 0.8565579056739807, 0.8642187118530273, 0.8687095642089844, 0.8726720213890076, 0.8713511824607849, 0.8745211958885193, 0.8842953443527222, 0.8842953443527222, 0.8877294659614563, 0.8898428082466125, 0.8914278149604797, 0.8965790271759033, 0.9000132083892822, 0.9050323367118835, 0.900409460067749, 0.9088627696037292, 0.9108440279960632, 0.91124027967453, 0.9181085824966431, 0.9152027368545532, 0.9157310724258423, 0.9196935892105103, 0.9196935892105103, 0.9215427041053772, 0.9257693886756897, 0.9286752343177795, 0.923920214176178, 0.9289394021034241], "val_loss": [1.1158771514892578, 0.720619797706604, 0.6438841819763184, 0.5833433270454407, 0.5310829877853394, 0.5047516226768494, 0.46038752794265747, 0.4345139265060425, 0.4191552400588989, 0.40692687034606934, 0.39764681458473206, 0.3792993426322937, 0.37137851119041443, 0.3763577342033386, 0.36554303765296936, 0.37070712447166443, 0.3574792146682739, 0.3483291566371918, 0.35181424021720886, 0.345668226480484, 0.3381510078907013, 0.3481258153915405, 0.3348238468170166, 0.3433367609977722, 0.34518131613731384, 0.3487726151943207, 0.3362666070461273, 0.34566232562065125, 0.33847224712371826, 0.34271329641342163, 0.3436060845851898, 0.34208664298057556, 0.34048113226890564, 0.35149699449539185, 0.3490248918533325, 0.35518592596054077, 0.34679466485977173, 0.3605789840221405, 0.3382059335708618, 0.354250967502594], "val_accuracy": [0.6226666569709778, 0.7246666550636292, 0.7593333125114441, 0.7683333158493042, 0.8009999990463257, 0.8046666383743286, 0.8246666789054871, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8619999885559082, 0.8673333525657654, 0.8650000095367432, 0.8683333396911621, 0.8703333139419556, 0.8656666874885559, 0.8786666393280029, 0.878000020980835, 0.8740000128746033, 0.8809999823570251, 0.8726666569709778, 0.8796666860580444, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8843333125114441, 0.8840000033378601, 0.8830000162124634, 0.8840000033378601, 0.8833333253860474, 0.8846666812896729, 0.8793333172798157, 0.8816666603088379, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 4, 9], [0, 5, 3, 3], [16, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 3, 4, 1, 1, 9, 7], [0, 5, 6, 6, 4, 5], [82, 59], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.8605714440345764, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1222004890441895, 1.1546354293823242, 0.8025235533714294, 0.6914390325546265, 0.6050910949707031, 0.5553091168403625, 0.516595184803009, 0.5019000172615051, 0.46849486231803894, 0.4554283320903778, 0.440071165561676, 0.41843241453170776, 0.4050544798374176, 0.3896355926990509, 0.3674885928630829, 0.35816293954849243, 0.35519281029701233, 0.3434353768825531, 0.3319610357284546, 0.33391377329826355, 0.3256458640098572, 0.31270328164100647, 0.3007124364376068, 0.29126253724098206, 0.2779802083969116, 0.2755759358406067, 0.26927486062049866, 0.25712820887565613, 0.25573232769966125, 0.24426649510860443, 0.23921716213226318, 0.2398994117975235, 0.24376820027828217, 0.22136129438877106], "accuracy": [0.28001585602760315, 0.590278685092926, 0.6985867023468018, 0.7382115721702576, 0.7689869403839111, 0.7814027070999146, 0.8010830879211426, 0.809140145778656, 0.8210275769233704, 0.8267071843147278, 0.8337075710296631, 0.8429533839225769, 0.846387505531311, 0.8544445633888245, 0.8603883385658264, 0.8623695969581604, 0.8597279191017151, 0.8693699836730957, 0.8757099509239197, 0.8698983192443848, 0.8754457831382751, 0.8823140859603882, 0.8836349248886108, 0.8873332738876343, 0.8898428082466125, 0.8947299122810364, 0.8942015767097473, 0.8981640338897705, 0.8967111110687256, 0.9041078090667725, 0.9058248400688171, 0.910711944103241, 0.906749427318573, 0.9141460657119751], "val_loss": [1.1038365364074707, 0.7502389550209045, 0.648379385471344, 0.5454985499382019, 0.5097960829734802, 0.47993728518486023, 0.45298120379447937, 0.4332018196582794, 0.4243510663509369, 0.4165474474430084, 0.40677255392074585, 0.3845764994621277, 0.37636134028434753, 0.3784833252429962, 0.3664807975292206, 0.3724260628223419, 0.3631601631641388, 0.36108675599098206, 0.3569120168685913, 0.3504604399204254, 0.36384379863739014, 0.36015141010284424, 0.35520076751708984, 0.35883837938308716, 0.35352855920791626, 0.35108867287635803, 0.3528960049152374, 0.355187326669693, 0.35062506794929504, 0.35793665051460266, 0.3552943170070648, 0.3518323302268982, 0.3453468084335327, 0.3642958998680115], "val_accuracy": [0.6399999856948853, 0.7360000014305115, 0.7680000066757202, 0.793666660785675, 0.8080000281333923, 0.8226666450500488, 0.8349999785423279, 0.8386666774749756, 0.8410000205039978, 0.8429999947547913, 0.862333357334137, 0.862666666507721, 0.8679999709129333, 0.856333315372467, 0.8696666955947876, 0.8676666617393494, 0.871666669845581, 0.8666666746139526, 0.8703333139419556, 0.8730000257492065, 0.8686666488647461, 0.8766666650772095, 0.8686666488647461, 0.8743333220481873, 0.8806666731834412, 0.8759999871253967, 0.8759999871253967, 0.8809999823570251, 0.8833333253860474, 0.8759999871253967, 0.8813333511352539, 0.8799999952316284, 0.8776666522026062, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 7], [0, 1, 0, 2, 0], [39, 39, 14], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 6, 3, 8, 3, 5, 9], [0, 3, 4, 3], [16, 88], [0, 0, 1, 1, 1, 0], [1, 2, 0], [0, 5, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2], [0, 1, 2, 0, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5, 9], [3, 4, 2, 3], [16, 88], [0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 3, 4], [0, 6, 6, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [1, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 7, 3, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [32513.66796875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18835029006004333, 0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [195713504.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 82], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3, 2], [16, 88], [0, 0, 1, 0, 1, 1], [1, 8, 3], [1, 5, 6], [78], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 2, 5], [3, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 11, 6, 5, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), grad), tf.math.multiply(tf.math.square(grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(alpha), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [13253103616.0, 3.0637362003326416, 3.9615769386291504, 4.989603042602539, 6.134042739868164, 7.417635440826416], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09972262382507324, 0.09866596013307571], "val_loss": [2.737300395965576, 3.5924384593963623, 4.58314323425293, 5.697200298309326, 6.938034534454346, 8.294723510742188], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0989999994635582]}}]