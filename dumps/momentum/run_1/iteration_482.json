[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932956218719482, 2.188028573989868, 1.775041103363037, 1.3455121517181396, 1.0619428157806396, 0.92228102684021, 0.8430049419403076, 0.8199909329414368, 0.7568596005439758, 0.7359412908554077, 0.7086564898490906, 0.6797590851783752, 0.6524872779846191, 0.6278973817825317, 0.5969333052635193, 0.5990408658981323, 0.5702816247940063, 0.5591545701026917, 0.5548741817474365, 0.5481007695198059, 0.5172759294509888, 0.5222700834274292, 0.5135830044746399, 0.49930495023727417, 0.4933805763721466, 0.4689371585845947, 0.4667786657810211, 0.45447617769241333, 0.4373144507408142, 0.44475623965263367, 0.4398553669452667, 0.4431994557380676, 0.43089359998703003, 0.41775837540626526, 0.41096031665802, 0.4118885099887848, 0.39424213767051697, 0.3823627233505249, 0.38321229815483093, 0.37896645069122314, 0.37579309940338135, 0.36700326204299927], "accuracy": [0.12798838317394257, 0.3409060835838318, 0.431779146194458, 0.5489367246627808, 0.640338122844696, 0.6629242897033691, 0.6935675740242004, 0.69673752784729, 0.7131158113479614, 0.715889573097229, 0.7380794882774353, 0.7433628439903259, 0.748778223991394, 0.7644960880279541, 0.7668735980987549, 0.7714964747428894, 0.7828556299209595, 0.7906485199928284, 0.789988100528717, 0.7882710099220276, 0.800290584564209, 0.8047813773155212, 0.8055738806724548, 0.8152159452438354, 0.8117818236351013, 0.8245938420295715, 0.8276317715644836, 0.8259146809577942, 0.8363492488861084, 0.83119797706604, 0.8318583965301514, 0.8314621448516846, 0.8381983637809753, 0.8403117060661316, 0.8433496356010437, 0.8428213000297546, 0.8475762605667114, 0.852859616279602, 0.8580108284950256, 0.8521991968154907, 0.854708731174469, 0.8593316674232483], "val_loss": [2.246509552001953, 2.018099069595337, 1.1415724754333496, 0.8554231524467468, 0.7385315895080566, 0.6811103224754333, 0.6434733867645264, 0.6172937154769897, 0.6234867572784424, 0.6006008386611938, 0.5674808621406555, 0.5354141592979431, 0.5188382267951965, 0.5211273431777954, 0.49576419591903687, 0.4876853823661804, 0.49838265776634216, 0.4906822144985199, 0.4774414896965027, 0.4708291292190552, 0.4648526906967163, 0.46229442954063416, 0.45469751954078674, 0.4509935677051544, 0.44290658831596375, 0.44165295362472534, 0.4349842071533203, 0.4225786030292511, 0.4163309633731842, 0.4114348888397217, 0.40468311309814453, 0.413886159658432, 0.4142082929611206, 0.39876440167427063, 0.39595332741737366, 0.3970978856086731, 0.3962743878364563, 0.4025525450706482, 0.3984947204589844, 0.3926106095314026, 0.39686524868011475, 0.39773300290107727], "val_accuracy": [0.4046666622161865, 0.45633333921432495, 0.6476666927337646, 0.6990000009536743, 0.7333333492279053, 0.7493333220481873, 0.7573333382606506, 0.7743333578109741, 0.7596666812896729, 0.7816666960716248, 0.784333348274231, 0.800000011920929, 0.8033333420753479, 0.7893333435058594, 0.8153333067893982, 0.815666675567627, 0.8143333196640015, 0.8130000233650208, 0.8203333616256714, 0.8220000267028809, 0.8196666836738586, 0.8296666741371155, 0.831333339214325, 0.8363333344459534, 0.8413333296775818, 0.8403333425521851, 0.8396666646003723, 0.8446666598320007, 0.8489999771118164, 0.8519999980926514, 0.8523333072662354, 0.8519999980926514, 0.8446666598320007, 0.8513333201408386, 0.8566666841506958, 0.8610000014305115, 0.8659999966621399, 0.8643333315849304, 0.8643333315849304, 0.8656666874885559, 0.8643333315849304, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3], [0, 0, 2, 0, 2], [65, 99, 11], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0], [0, 4, 6, 9], [3, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(sigma, grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [42177355776.0, 6001457102848.0, 106118349062144.0, 735553616084992.0, 3280679630536704.0, 1.0745001004761088e+16], "accuracy": [0.09840179979801178, 0.10117553919553757, 0.09774138033390045, 0.09932637959718704, 0.1018359512090683, 0.10117553919553757], "val_loss": [418671853568.0, 22571806359552.0, 242270683004928.0, 1320800019808256.0, 4947371217649664.0, 1.4591890468896768e+16], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 3, 8, 3, 7, 9], [0, 0, 1, 0, 2], [83, 99, 27, 10], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 5, 6, 7, 6, 9, 1, 4, 3, 2, 8, 5, 0], [0, 5, 2, 4, 3, 1, 7], [88, 7], [0, 0, 1, 1], [0, 3], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 3, 3, 0, 1, 20, 13, 7, 2, 4, 2, 2, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), sigma), tf.math.sqrt(tf.math.square(alpha)))), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, grad))", "other_info": {"loss": [408.5449523925781, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5805513199583232.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 3, 1, 1, 0, 4, 5, 5, 9, 4, 0, 2, 0, 9], [0, 0, 1, 0, 1, 1], [83, 99, 67, 76, 0], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 15, 6, 5, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.pow(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 0], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [1], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45461832.0, 2.694350004196167, 2.478241205215454, 2.5553767681121826, 2.658038854598999, 2.5224218368530273, 2.636322498321533, 2.6017062664031982, 2.593947410583496], "accuracy": [0.0956280529499054, 0.10236428678035736, 0.10051512718200684, 0.10091137140989304, 0.10038304328918457, 0.09945846349000931, 0.09945846349000931, 0.10381719470024109, 0.10408136248588562], "val_loss": [2.708595037460327, 2.6127727031707764, 2.708190679550171, 2.6126599311828613, 2.7568469047546387, 2.5299324989318848, 2.571747064590454, 2.828416347503662, 2.4628939628601074], "val_accuracy": [0.10066666454076767, 0.10166666656732559, 0.09799999743700027, 0.10199999809265137, 0.10166666656732559, 0.09799999743700027, 0.10199999809265137, 0.10166666656732559, 0.10199999809265137]}}]