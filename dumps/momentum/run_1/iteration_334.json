[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2911715507507324, 2.184706211090088, 1.756888747215271, 1.3583585023880005, 1.0668145418167114, 0.9358812570571899, 0.8566783666610718, 0.8234099745750427, 0.769000232219696, 0.7529886364936829, 0.7022491097450256, 0.695645809173584, 0.6612648963928223, 0.6446910500526428, 0.6321671009063721, 0.6108691692352295, 0.5913214087486267, 0.5896809697151184, 0.5637866854667664, 0.5592523813247681, 0.5443878173828125, 0.527988612651825, 0.5090519785881042, 0.5064713358879089, 0.5105844140052795, 0.48878610134124756, 0.4979546070098877, 0.4797332286834717, 0.46834906935691833, 0.45651164650917053, 0.4511270225048065, 0.4379846751689911, 0.42811012268066406, 0.41550418734550476, 0.41348326206207275, 0.4020678400993347, 0.4035046100616455, 0.40045759081840515, 0.39072713255882263, 0.3786611557006836], "accuracy": [0.13736626505851746, 0.33905693888664246, 0.4340245723724365, 0.5458987951278687, 0.6287148594856262, 0.6633205413818359, 0.6907938122749329, 0.6933034062385559, 0.7021529674530029, 0.7074362635612488, 0.7337207794189453, 0.7367587089538574, 0.7497028112411499, 0.7581561207771301, 0.7543256878852844, 0.7676661014556885, 0.7786290049552917, 0.7786290049552917, 0.7882710099220276, 0.7877426743507385, 0.7907806038856506, 0.7935543656349182, 0.8105930685997009, 0.8094043135643005, 0.8033285140991211, 0.8137630224227905, 0.8124422430992126, 0.817989706993103, 0.81548011302948, 0.8305375576019287, 0.8264430165290833, 0.8333113193511963, 0.8384625315666199, 0.8388587832450867, 0.8399154543876648, 0.8455950617790222, 0.8475762605667114, 0.8515387773513794, 0.8518029451370239, 0.8588033318519592], "val_loss": [2.246016025543213, 2.0132083892822266, 1.1203070878982544, 0.8625152707099915, 0.7787814140319824, 0.7217028737068176, 0.6753672957420349, 0.6458656191825867, 0.6563934087753296, 0.6308117508888245, 0.5851016640663147, 0.5677556991577148, 0.559837818145752, 0.5382966995239258, 0.5310760140419006, 0.5185155272483826, 0.5085193514823914, 0.5022262930870056, 0.49911555647850037, 0.48664066195487976, 0.4814527630805969, 0.47139108180999756, 0.4724665582180023, 0.4650881886482239, 0.45154568552970886, 0.4588940441608429, 0.4434412717819214, 0.4328235983848572, 0.4306562840938568, 0.4342438876628876, 0.4286181628704071, 0.42425641417503357, 0.4163459539413452, 0.41776156425476074, 0.4133601784706116, 0.42023196816444397, 0.42321065068244934, 0.4199674427509308, 0.428267240524292, 0.4313696622848511], "val_accuracy": [0.4183333218097687, 0.43966665863990784, 0.6510000228881836, 0.70333331823349, 0.7196666598320007, 0.734666645526886, 0.7429999709129333, 0.7553333044052124, 0.7643333077430725, 0.750333309173584, 0.7760000228881836, 0.7760000228881836, 0.7853333353996277, 0.8023333549499512, 0.7996666431427002, 0.8056666851043701, 0.8119999766349792, 0.8140000104904175, 0.8043333292007446, 0.815666675567627, 0.8309999704360962, 0.8303333520889282, 0.8266666531562805, 0.8253333568572998, 0.8410000205039978, 0.8259999752044678, 0.8403333425521851, 0.8446666598320007, 0.8403333425521851, 0.8429999947547913, 0.8410000205039978, 0.8516666889190674, 0.8533333539962769, 0.8523333072662354, 0.8610000014305115, 0.859000027179718, 0.859666645526886, 0.8583333492279053, 0.8543333411216736, 0.8610000014305115]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 1, 3], [2, 0, 1, 0, 2], [83, 21, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 2], [0], [0, 0, 1, 1, 0, 1, 1], [2, 4, 7], [1, 1, 4, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 5, 3, 2, 1, 7, 3, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(alpha, alpha), tf.math.add(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 6, 3], [0, 0, 1, 0, 2], [78, 0, 27], [0, 0, 0], [0, 8, 9], [0], [74], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [10], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 0, 6, 3, 7, 3, 6, 2, 8, 1, 0, 5, 7, 5], [1, 0, 7, 1, 3, 0, 7, 0, 1, 2], [0, 16, 94]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(alpha), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 8, 4, 4, 3, 3, 3, 0, 1, 2, 1, 1, 1, 24, 14, 10, 3], "tree_depth": 24}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 8], [0, 0, 3, 0, 1], [83, 99, 27], [0, 1, 0], [0, 8, 7], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [32710904.0, 2.69844388961792, 2.47926664352417, 2.568557024002075, 2.6457951068878174, 2.5197079181671143, 2.6201908588409424, 2.6030826568603516, 2.544579029083252, 2.668036937713623, 2.5788378715515137, 2.5691475868225098], "accuracy": [0.10474177449941635, 0.1014397069811821, 0.1014397069811821, 0.1010434553027153, 0.10619468986988068, 0.09893012791872025, 0.10236428678035736, 0.09998679161071777, 0.09734513610601425, 0.09932637959718704, 0.10077928751707077, 0.09734513610601425], "val_loss": [2.73110294342041, 2.6349289417266846, 2.701212167739868, 2.6087028980255127, 2.7498843669891357, 2.570871353149414, 2.5748205184936523, 2.814239025115967, 2.489065170288086, 2.5375185012817383, 2.838131904602051, 2.5113234519958496], "val_accuracy": [0.09866666793823242, 0.10066666454076767, 0.10133333504199982, 0.10000000149011612, 0.10066666454076767, 0.10133333504199982, 0.10300000011920929, 0.10066666454076767, 0.10133333504199982, 0.10300000011920929, 0.10066666454076767, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 2, 0, 2], [83, 30, 52], [1, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [6.2629988261571536e+22, 2.4315531253814697, 2.394432544708252, 2.3833131790161133, 2.428126096725464, 2.411015748977661, 2.3992486000061035, 2.421776294708252], "accuracy": [0.20697398483753204, 0.09721305221319199, 0.09879804402589798, 0.09932637959718704, 0.10196803510189056, 0.09998679161071777, 0.09457138925790787, 0.09840179979801178], "val_loss": [2.4079830646514893, 2.378302812576294, 2.4287142753601074, 2.4399287700653076, 2.354079008102417, 2.3799853324890137, 2.4751644134521484, 2.358945369720459], "val_accuracy": [0.0976666659116745, 0.10066666454076767, 0.10366666316986084, 0.10133333504199982, 0.10066666454076767, 0.10366666316986084, 0.09833333641290665, 0.10366666316986084]}}]