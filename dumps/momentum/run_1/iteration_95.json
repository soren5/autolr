[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930169105529785, 2.187958002090454, 1.7732429504394531, 1.3440207242965698, 1.0824304819107056, 0.930844247341156, 0.8745206594467163, 0.826537013053894, 0.7872820496559143, 0.7489787340164185, 0.7145651578903198, 0.6997219920158386, 0.6772007346153259, 0.6372751593589783, 0.6068478226661682, 0.5982583165168762, 0.5976704359054565, 0.5734412670135498, 0.5798258185386658, 0.5673952102661133, 0.5515658259391785, 0.5241138935089111, 0.5017098784446716, 0.4953443109989166, 0.4967309832572937, 0.48407042026519775, 0.47154125571250916, 0.4651179909706116, 0.44458886981010437, 0.4362742304801941, 0.4147128462791443, 0.42542508244514465, 0.41398894786834717, 0.4030567407608032, 0.39034542441368103, 0.37260258197784424, 0.37697866559028625, 0.369269460439682, 0.3620072305202484, 0.371665358543396, 0.3480730354785919, 0.3478977084159851, 0.33087489008903503, 0.3241921067237854, 0.3161255419254303, 0.32116129994392395, 0.3232109546661377, 0.3033527135848999, 0.30994877219200134, 0.3092986047267914, 0.28759661316871643, 0.29676583409309387, 0.2914011478424072, 0.2816934585571289, 0.2765233814716339, 0.27996164560317993, 0.2851339280605316, 0.276784747838974, 0.26764345169067383], "accuracy": [0.12838461995124817, 0.3179236650466919, 0.43666622042655945, 0.5429930090904236, 0.6320168972015381, 0.6664905548095703, 0.6888125538825989, 0.698190450668335, 0.7000396251678467, 0.7100779414176941, 0.7264562249183655, 0.7343811988830566, 0.7405890822410583, 0.755118191242218, 0.7663452625274658, 0.7734777331352234, 0.77677983045578, 0.7821952104568481, 0.7777044177055359, 0.7819310426712036, 0.785629391670227, 0.7946110367774963, 0.802800178527832, 0.8062343001365662, 0.8103289008140564, 0.8150838613510132, 0.8183859586715698, 0.8203672170639038, 0.8281601071357727, 0.8289526104927063, 0.8412362933158875, 0.8368775844573975, 0.8407079577445984, 0.8467837572097778, 0.847840428352356, 0.8553691506385803, 0.8515387773513794, 0.8525954484939575, 0.8573504090309143, 0.8548408150672913, 0.8648791313171387, 0.86553955078125, 0.8671245574951172, 0.8696341514587402, 0.8746532797813416, 0.8732003569602966, 0.8730682730674744, 0.8792761564254761, 0.878351628780365, 0.8770307898521423, 0.8881257176399231, 0.8796724081039429, 0.8821820020675659, 0.8862766027450562, 0.8870691061019897, 0.8905032277107239, 0.8943336606025696, 0.8919561505317688, 0.8952582478523254], "val_loss": [2.246001720428467, 2.0188910961151123, 1.1482967138290405, 0.8821682929992676, 0.7731651067733765, 0.7150426506996155, 0.6815101504325867, 0.645581066608429, 0.6571416258811951, 0.6144745945930481, 0.5742554664611816, 0.5545894503593445, 0.5454757809638977, 0.5301322340965271, 0.5125417709350586, 0.49926620721817017, 0.4992004334926605, 0.49707719683647156, 0.4865345358848572, 0.47566255927085876, 0.4657447636127472, 0.4648453891277313, 0.4515228569507599, 0.44242456555366516, 0.4433315098285675, 0.4453399181365967, 0.43068140745162964, 0.4300961494445801, 0.42646241188049316, 0.41650325059890747, 0.41054871678352356, 0.4114963412284851, 0.4083031117916107, 0.403898686170578, 0.4030087888240814, 0.4136340320110321, 0.4000491797924042, 0.39357495307922363, 0.40308406949043274, 0.40703555941581726, 0.4033086895942688, 0.4045808017253876, 0.42555150389671326, 0.42690178751945496, 0.4231899380683899, 0.4210543632507324, 0.4249929189682007, 0.42315998673439026, 0.433897465467453, 0.43863624334335327, 0.4393947720527649, 0.433027058839798, 0.43003755807876587, 0.42619654536247253, 0.4469899535179138, 0.4713791608810425, 0.470799058675766, 0.4514952301979065, 0.4438968002796173], "val_accuracy": [0.41333332657814026, 0.43299999833106995, 0.6503333449363708, 0.6963333487510681, 0.7173333168029785, 0.7379999756813049, 0.7350000143051147, 0.7513333559036255, 0.7593333125114441, 0.765666663646698, 0.7723333239555359, 0.7829999923706055, 0.7900000214576721, 0.7876666784286499, 0.7976666688919067, 0.8009999990463257, 0.8033333420753479, 0.8080000281333923, 0.8003333210945129, 0.8086666464805603, 0.812666654586792, 0.8149999976158142, 0.8203333616256714, 0.8386666774749756, 0.8270000219345093, 0.8293333053588867, 0.8373333215713501, 0.8403333425521851, 0.846666693687439, 0.8503333330154419, 0.8546666502952576, 0.8539999723434448, 0.8536666631698608, 0.8533333539962769, 0.8516666889190674, 0.8550000190734863, 0.8586666584014893, 0.8613333106040955, 0.856333315372467, 0.8576666712760925, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8629999756813049, 0.8666666746139526, 0.8669999837875366, 0.8656666874885559, 0.8686666488647461, 0.8706666827201843, 0.8709999918937683, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8776666522026062, 0.875, 0.8766666650772095, 0.8713333606719971, 0.8773333430290222, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [6, 1, 3, 1, 5], [1, 0, 1, 0, 2], [66, 99, 27], [1, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 1], [0, 5, 6, 5], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 1, 0, 1, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 3, 6, 3, 4, 7, 4, 9, 2, 6, 3, 1, 5, 3, 4, 1, 1], [0, 0, 1, 0, 2, 0, 0, 0, 1, 3, 0, 2, 1, 2, 1, 1], [83, 99, 27, 24, 95, 5, 12, 43], [1, 0, 0], [4, 8, 9], [0], [55], [0, 1, 0, 0, 0], [0, 5, 6], [0, 5], [0], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 20, 16, 8, 1, 0, 1, 1, 2, 1, 1, 1, 3, 2, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.pow(tf.math.add(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)), alpha)))))), grad)), alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 9, 2, 9, 1, 5], [0, 0, 1, 0, 2, 1], [83, 19, 27, 65, 98], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 5, 3, 3, 0, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [324354432.0, 2.3139941692352295, 2.3114876747131348, 2.3127036094665527, 2.3116891384124756, 2.3141303062438965], "accuracy": [0.1022322028875351, 0.10130762308835983, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025829792022705, 2.3025898933410645, 2.3025994300842285, 2.3026156425476074, 2.302635431289673, 2.3026678562164307], "val_accuracy": [0.10166666656732559, 0.09866666793823242, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [4, 1, 7, 1, 3, 1, 4], [0, 0, 1, 1, 2, 3, 2, 3], [27, 99, 6], [1, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 1], [0, 7, 6], [0, 5, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 7, 8, 2, 1, 0, 1, 1, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.subtract(grad, grad))), tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]