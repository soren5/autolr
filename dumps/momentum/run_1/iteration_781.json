[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293036937713623, 2.1891634464263916, 1.7673946619033813, 1.3440349102020264, 1.0872305631637573, 0.9229787588119507, 0.8504146933555603, 0.8121796250343323, 0.7511358857154846, 0.7260285019874573, 0.6953241229057312, 0.6704400181770325, 0.6442228555679321, 0.6198384165763855, 0.612220287322998, 0.5918542742729187, 0.5754175782203674, 0.5688351988792419, 0.5525268912315369, 0.5484357476234436, 0.5327892303466797, 0.5176073908805847, 0.5179165601730347, 0.5079817175865173, 0.4990203082561493, 0.49251627922058105, 0.4763014614582062, 0.46494001150131226, 0.454113632440567, 0.45376694202423096, 0.4512895345687866, 0.43156254291534424, 0.4270760416984558, 0.4220970571041107, 0.40967637300491333, 0.42059239745140076, 0.4076068699359894, 0.3894604444503784, 0.3918459415435791, 0.3853641152381897, 0.37691351771354675, 0.37211987376213074], "accuracy": [0.1332716941833496, 0.3335094451904297, 0.44128912687301636, 0.5464271306991577, 0.6339981555938721, 0.6732267737388611, 0.691850483417511, 0.7066437602043152, 0.7144366502761841, 0.7264562249183655, 0.7362303733825684, 0.7450799345970154, 0.7553823590278625, 0.7664773464202881, 0.7662131786346436, 0.7792893648147583, 0.7827235460281372, 0.7853652238845825, 0.7887993454933167, 0.7889314293861389, 0.7980451583862305, 0.8058380484580994, 0.8045172095298767, 0.8083476424217224, 0.8057059645652771, 0.8168009519577026, 0.8187822103500366, 0.8214238286018372, 0.829216718673706, 0.8261788487434387, 0.8264430165290833, 0.832650899887085, 0.8367455005645752, 0.8422929644584656, 0.8437458872795105, 0.8367455005645752, 0.8487650156021118, 0.8498216867446899, 0.850350022315979, 0.845859169960022, 0.8569541573524475, 0.8576145768165588], "val_loss": [2.2447080612182617, 2.0129618644714355, 1.1286735534667969, 0.8716381192207336, 0.7552263140678406, 0.701611340045929, 0.6511009335517883, 0.633825421333313, 0.6293432712554932, 0.5979576110839844, 0.5629355311393738, 0.5454175472259521, 0.5397558808326721, 0.5219730734825134, 0.5062512755393982, 0.5059462189674377, 0.4962519407272339, 0.4916105270385742, 0.4876176416873932, 0.4773188531398773, 0.46801045536994934, 0.47075480222702026, 0.4593508243560791, 0.45162907242774963, 0.46150556206703186, 0.4613185226917267, 0.45070505142211914, 0.44827646017074585, 0.434653639793396, 0.43195414543151855, 0.42766863107681274, 0.4237538278102875, 0.42237216234207153, 0.42023950815200806, 0.4161718487739563, 0.4077285826206207, 0.40903568267822266, 0.4138919413089752, 0.4105939567089081, 0.4106341004371643, 0.4339211881160736, 0.4062615931034088], "val_accuracy": [0.4099999964237213, 0.4569999873638153, 0.6483333110809326, 0.7026666402816772, 0.737666666507721, 0.7433333396911621, 0.7593333125114441, 0.765999972820282, 0.765333354473114, 0.7720000147819519, 0.7739999890327454, 0.796999990940094, 0.7976666688919067, 0.8076666593551636, 0.8103333115577698, 0.8076666593551636, 0.8176666498184204, 0.8173333406448364, 0.8143333196640015, 0.8243333101272583, 0.8253333568572998, 0.8276666402816772, 0.8266666531562805, 0.8303333520889282, 0.8326666951179504, 0.8299999833106995, 0.8336666822433472, 0.8399999737739563, 0.8423333168029785, 0.840666651725769, 0.8446666598320007, 0.843999981880188, 0.8416666388511658, 0.8453333377838135, 0.8496666550636292, 0.8519999980926514, 0.8546666502952576, 0.8493333458900452, 0.8433333039283752, 0.8483333587646484, 0.8523333072662354, 0.8536666631698608]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1], [0, 8, 9], [0], [36], [1, 0, 0, 0, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1151216512.0, 21174818816.0, 97805541376.0, 275415236608.0, 593070260224.0, 1080207867904.0], "accuracy": [0.09694888442754745, 0.09668471664190292, 0.1026284471154213, 0.10249637067317963, 0.09747721254825592, 0.09760929644107819], "val_loss": [5154372608.0, 41229848576.0, 139145216000.0, 329818406912.0, 644171431936.0, 1113120178176.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 2, 5, 7, 2, 5, 3, 8, 4, 4, 0, 3, 7, 4, 3, 8], [0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 3, 0, 1, 0], [83, 99, 27, 75, 41, 39, 34], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 8, 9, 2, 8, 5, 1, 3, 7], [0, 0, 1, 0, 4], [0, 65, 32, 66], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 19, 14, 7, 14, 9, 5, 4, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), grad), tf.math.sqrt(alpha))), tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [7, 1, 3, 1, 3], [0, 3, 1, 0, 3, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.0917142853140831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.311124801635742, 2.310807228088379, 2.309246063232422, 2.310366630554199, 2.3106162548065186, 2.309390068054199], "accuracy": [0.09074098616838455, 0.09047681838274002, 0.09787346422672272, 0.08730682730674744, 0.09338264167308807, 0.09734513610601425], "val_loss": [2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}, "mapping_values": [1, 11, 5, 6, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 99, 65], [0, 1, 0], [0, 8, 9], [0], [71], [0, 0, 0, 0, 1, 1, 1], [0, 5, 6, 2], [3, 2, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(sigma, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3080129623413086, 2.3099255561828613, 2.3089511394500732, 2.3106977939605713, 2.3105084896087646, 2.309978485107422], "accuracy": [0.09642054885625839, 0.08915598690509796, 0.09589222073554993, 0.08928807079792023, 0.09549596905708313, 0.09338264167308807], "val_loss": [2.3090832233428955, 2.3090832233428955, 2.3090832233428955, 2.3090832233428955, 2.3090832233428955, 2.3090832233428955], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]