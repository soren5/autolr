[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2919533252716064, 2.1890783309936523, 1.7748481035232544, 1.3578437566757202, 1.058030605316162, 0.916318953037262, 0.8562531471252441, 0.8130311965942383, 0.7638089656829834, 0.7386972904205322, 0.7065736055374146, 0.679377555847168, 0.6605575084686279, 0.6292645931243896, 0.6124411821365356, 0.6020787954330444, 0.5823236703872681, 0.5635629892349243, 0.5646923780441284, 0.5433695316314697, 0.5391474962234497, 0.5178017020225525, 0.5189608335494995, 0.4989652931690216, 0.49007806181907654, 0.47586989402770996, 0.473173588514328, 0.46784842014312744, 0.46140190958976746, 0.4592302441596985, 0.43891429901123047, 0.438249409198761, 0.4375850260257721, 0.4247937500476837, 0.42165812849998474, 0.4079311192035675, 0.3989388346672058, 0.40220344066619873, 0.3968864679336548, 0.3824653625488281, 0.37488803267478943, 0.36988961696624756, 0.3600318431854248, 0.3542632460594177, 0.3565804064273834, 0.34733062982559204, 0.34364739060401917, 0.34186819195747375, 0.3266829550266266], "accuracy": [0.1302337795495987, 0.3288865387439728, 0.43547746539115906, 0.5404834151268005, 0.6338660717010498, 0.6630563735961914, 0.6897371411323547, 0.6985867023468018, 0.7173424959182739, 0.7140403985977173, 0.7326641082763672, 0.7461365461349487, 0.7441553473472595, 0.7614582180976868, 0.7703077793121338, 0.7629110813140869, 0.7754589915275574, 0.7839123010635376, 0.7891955971717834, 0.7922335267066956, 0.7928939461708069, 0.7991018295288086, 0.7997622489929199, 0.8103289008140564, 0.8152159452438354, 0.8164047002792358, 0.8202351331710815, 0.8177255392074585, 0.8207634687423706, 0.824329674243927, 0.8334434032440186, 0.833179235458374, 0.837537944316864, 0.8367455005645752, 0.8442742228507996, 0.8446704745292664, 0.8455950617790222, 0.846387505531311, 0.8466516733169556, 0.8548408150672913, 0.8545766472816467, 0.8565579056739807, 0.8593316674232483, 0.8602562546730042, 0.8609166741371155, 0.8621054291725159, 0.8669924736022949, 0.8650112152099609, 0.8722757697105408], "val_loss": [2.2450883388519287, 2.014681339263916, 1.1349127292633057, 0.8350522518157959, 0.7701230645179749, 0.7111456990242004, 0.6676213145256042, 0.6334594488143921, 0.6092492341995239, 0.5933060646057129, 0.587885320186615, 0.556830644607544, 0.5356517434120178, 0.5291642546653748, 0.5177672505378723, 0.5022063255310059, 0.4993533790111542, 0.49120327830314636, 0.4800757169723511, 0.4728562831878662, 0.4663277566432953, 0.4668876826763153, 0.45546427369117737, 0.4505225419998169, 0.44478386640548706, 0.4451065957546234, 0.43674805760383606, 0.4333248734474182, 0.4328122138977051, 0.4275805652141571, 0.4216240346431732, 0.4178538918495178, 0.4140269458293915, 0.4011167287826538, 0.3975217342376709, 0.39988598227500916, 0.41435009241104126, 0.39821499586105347, 0.4034251570701599, 0.4059735834598541, 0.4157719612121582, 0.41444411873817444, 0.4081352651119232, 0.40291231870651245, 0.4186365008354187, 0.43136271834373474, 0.4095080494880676, 0.4074460566043854, 0.398873895406723], "val_accuracy": [0.41066667437553406, 0.4483333230018616, 0.6503333449363708, 0.6983333230018616, 0.7123333215713501, 0.7256666421890259, 0.7476666569709778, 0.7710000276565552, 0.7670000195503235, 0.7710000276565552, 0.7699999809265137, 0.7763333320617676, 0.7889999747276306, 0.7836666703224182, 0.8040000200271606, 0.8040000200271606, 0.8069999814033508, 0.8113333582878113, 0.8133333325386047, 0.8136666417121887, 0.8113333582878113, 0.8169999718666077, 0.8236666917800903, 0.8286666870117188, 0.8353333473205566, 0.8376666903495789, 0.8376666903495789, 0.8403333425521851, 0.8339999914169312, 0.8386666774749756, 0.8416666388511658, 0.8463333249092102, 0.8526666760444641, 0.8539999723434448, 0.8523333072662354, 0.8546666502952576, 0.8539999723434448, 0.859666645526886, 0.8516666889190674, 0.859666645526886, 0.8573333621025085, 0.8613333106040955, 0.8619999885559082, 0.8663333058357239, 0.856333315372467, 0.8550000190734863, 0.8650000095367432, 0.8659999966621399, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 3, 1, 3, 3, 2, 4, 6, 6, 2, 0, 7, 0, 9, 9, 4, 2, 2, 5, 1, 4, 8, 4, 0, 3, 2, 3, 7, 4, 2, 5, 2, 0, 9], [0, 0, 1, 0, 2, 3, 1, 2, 1, 0, 1, 1, 2, 0, 2, 0, 2, 1, 0, 1, 2, 0], [83, 99, 27, 69, 40, 50, 5, 20, 13, 90, 42], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 9, 3, 1, 5, 1], [0, 2, 4, 0], [0, 45, 77], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [7], [0]], "fitness": -0.2362857162952423, "mapping_values": [1, 57, 35, 22, 11, 11, 7, 4, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(grad, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(alpha), grad)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.square(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(tf.math.multiply(alpha, tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.multiply(grad, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha))))), tf.math.add(tf.math.square(grad), tf.math.add(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta), tf.math.square(tf.math.subtract(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3065061569213867, 2.787090301513672, 2.307748794555664, 2.303661823272705, 2.3034439086914062, 2.3034627437591553], "accuracy": [0.2075023055076599, 0.19204860925674438, 0.1002509593963623, 0.09681680053472519, 0.09747721254825592, 0.09417514503002167], "val_loss": [2.2202582359313965, 2.3122689723968506, 2.304252862930298, 2.3031694889068604, 2.3029074668884277, 2.3026952743530273], "val_accuracy": [0.23633334040641785, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303525924682617, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 5, 2, 7, 1, 9, 3, 4], [0, 0, 1, 0, 2, 3, 3, 2], [43, 99, 27, 97], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 8, 3, 1, 7, 3], [0, 4, 1, 2, 0], [60, 71], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 4, 11, 6, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(grad, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.math.multiply(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 4, 6, 6, 3, 6, 4, 9, 4, 3, 0, 0, 4, 8, 2, 7, 7, 9, 3, 0, 9], [0, 5, 6, 4, 6, 3, 1, 1, 1, 7, 7], [77, 69, 27, 25], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 32, 21, 11, 4, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(grad, grad), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma)), alpha), alpha)))))), alpha), grad), tf.math.negative(grad))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034791946411133, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]