[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293682813644409, 2.187365770339966, 1.753970980644226, 1.3661030530929565, 1.052968144416809, 0.9106239676475525, 0.8366144299507141, 0.800203800201416, 0.7428696751594543, 0.735370934009552, 0.6844018697738647, 0.6714776158332825, 0.6342264413833618, 0.6134840250015259, 0.6054121255874634, 0.5874864459037781, 0.5706954598426819, 0.5461970567703247, 0.5490217208862305, 0.522563099861145, 0.5174444913864136, 0.5081167221069336, 0.49931880831718445, 0.4912949800491333, 0.4893200993537903, 0.48625314235687256, 0.4681924283504486, 0.4682717025279999, 0.4535232186317444, 0.4462067186832428, 0.4366750121116638, 0.4270884692668915, 0.4200102686882019, 0.3986915349960327, 0.4063378870487213, 0.3993337154388428, 0.3844375014305115, 0.3748815953731537, 0.38753318786621094, 0.36466503143310547, 0.3499075174331665, 0.3486010432243347, 0.3435158431529999, 0.342105895280838, 0.34022000432014465, 0.32652732729911804, 0.3247669041156769, 0.31873732805252075, 0.31856516003608704, 0.306186318397522], "accuracy": [0.12613920867443085, 0.33483028411865234, 0.44406285881996155, 0.5420684218406677, 0.6429798007011414, 0.6633205413818359, 0.6868313550949097, 0.713379979133606, 0.7165499925613403, 0.7125874757766724, 0.7449478507041931, 0.7440232634544373, 0.7511557340621948, 0.7667415142059326, 0.7625148296356201, 0.774270236492157, 0.7833839654922485, 0.7911768555641174, 0.7891955971717834, 0.7993659973144531, 0.7948752045631409, 0.8006868362426758, 0.8100647330284119, 0.8152159452438354, 0.8099326491355896, 0.8128384351730347, 0.817989706993103, 0.8234050869941711, 0.8236692547798157, 0.828820526599884, 0.8256505131721497, 0.8354246616363525, 0.8367455005645752, 0.8462554216384888, 0.8413683772087097, 0.8462554216384888, 0.8533879518508911, 0.8556333184242249, 0.8516708612442017, 0.8610487580299377, 0.8663320541381836, 0.872407853603363, 0.8698983192443848, 0.8706908226013184, 0.867520809173584, 0.8708229064941406, 0.8749174475669861, 0.8772949576377869, 0.8800686597824097, 0.8799365758895874], "val_loss": [2.246365785598755, 2.0156242847442627, 1.132757544517517, 0.889666736125946, 0.776524007320404, 0.7148554921150208, 0.7030486464500427, 0.6659963726997375, 0.6412667036056519, 0.6210374236106873, 0.595467746257782, 0.5848674774169922, 0.5539870858192444, 0.5418316125869751, 0.5328636765480042, 0.5108129382133484, 0.5022358894348145, 0.5017848610877991, 0.4956972599029541, 0.48324349522590637, 0.47990503907203674, 0.4773285686969757, 0.47108495235443115, 0.4523535966873169, 0.44417935609817505, 0.44373267889022827, 0.4540400505065918, 0.4409828186035156, 0.4315151274204254, 0.42579057812690735, 0.4206264615058899, 0.4238187372684479, 0.42013296484947205, 0.41344404220581055, 0.41933560371398926, 0.4244810938835144, 0.4189091920852661, 0.416359543800354, 0.4147537350654602, 0.4083627462387085, 0.40936556458473206, 0.4158380925655365, 0.3982801139354706, 0.396226167678833, 0.3915739357471466, 0.38538050651550293, 0.3935356140136719, 0.4190026819705963, 0.4164835512638092, 0.41226518154144287], "val_accuracy": [0.42800000309944153, 0.45399999618530273, 0.6493333578109741, 0.6933333277702332, 0.718666672706604, 0.7266666889190674, 0.7289999723434448, 0.7429999709129333, 0.7556666731834412, 0.7606666684150696, 0.7673333287239075, 0.7549999952316284, 0.7786666750907898, 0.7836666703224182, 0.7960000038146973, 0.7996666431427002, 0.8003333210945129, 0.8080000281333923, 0.8043333292007446, 0.8053333163261414, 0.8140000104904175, 0.8116666674613953, 0.8100000023841858, 0.8306666612625122, 0.8349999785423279, 0.8349999785423279, 0.8343333601951599, 0.8446666598320007, 0.8426666855812073, 0.8420000076293945, 0.8506666421890259, 0.8456666469573975, 0.8443333506584167, 0.8476666808128357, 0.8529999852180481, 0.8476666808128357, 0.8529999852180481, 0.8546666502952576, 0.8536666631698608, 0.8516666889190674, 0.8586666584014893, 0.859000027179718, 0.8653333187103271, 0.8629999756813049, 0.8656666874885559, 0.859333336353302, 0.8573333621025085, 0.8600000143051147, 0.859000027179718, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1], [0, 9, 9], [0], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 6, 6, 1, 0, 4, 1, 7, 6, 2, 0, 0, 2, 7, 4, 6, 5, 3, 5, 6, 1, 2, 3, 2, 0, 2, 2, 2, 9, 7, 4, 0, 8, 5, 2, 9, 5, 3, 6, 6, 2, 3, 1, 7, 0, 2, 2, 6, 5, 4, 0, 5, 3, 1, 6, 2, 5, 4, 1, 5, 3, 4, 4, 4, 7, 5, 2, 5, 5, 3, 8, 5, 3, 7, 8, 2, 7, 6, 7, 2, 7, 0, 8, 2, 2, 2, 5, 0, 2, 8, 7, 7, 8, 7, 3, 1, 2, 7], [0, 5, 1, 7, 0, 7, 1, 3, 4, 6, 2, 7, 7, 0, 5, 0, 0, 0, 7, 2, 7, 4, 7, 0, 1, 5, 4, 6, 4, 6, 0, 6, 5, 0, 3, 0, 5, 3, 4, 3, 0, 0, 0, 5, 0, 1, 6, 4, 2, 6, 7, 1, 4, 0, 1, 7, 0, 5, 2, 0, 0, 6, 0, 4, 2, 3, 0], [0, 58, 56, 88, 9, 76, 8, 7, 83, 77, 1, 69, 82, 58, 57, 34, 21, 29, 10, 77, 26, 60], [0, 1], [0], [1], [0]], "fitness": -0.8354285955429077, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 166, 99, 67, 22, 2, 1, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.add(grad, alpha), grad), tf.math.divide_no_nan(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.negative(tf.math.add(alpha, sigma))))), grad)), tf.math.add(grad, beta)), tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.square(grad), grad)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)), beta)), tf.math.sqrt(grad)), tf.math.square(tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(grad))), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.math.pow(tf.math.negative(tf.math.square(grad)), tf.math.multiply(tf.math.subtract(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), grad), tf.math.pow(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, sigma))), tf.math.square(tf.math.square(tf.math.multiply(tf.math.sqrt(grad), tf.math.square(sigma)))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.negative(tf.math.sqrt(beta))), tf.math.add(grad, grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))))))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), beta), sigma)))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2910869121551514, 2.169403314590454, 1.6751656532287598, 1.3088295459747314, 0.9939181208610535, 0.8873053193092346, 0.8387972116470337, 0.7885298728942871, 0.7438158392906189, 0.714855968952179, 0.6994606256484985, 0.6725293397903442, 0.6420252919197083, 0.6085487604141235, 0.602663516998291, 0.5834475755691528, 0.5732183456420898, 0.5724086761474609, 0.5538302659988403, 0.5328117609024048, 0.5307812690734863, 0.5103853344917297, 0.5204365253448486, 0.5003276467323303, 0.4835418164730072, 0.47880661487579346, 0.47604089975357056, 0.451587975025177, 0.45781761407852173, 0.4425186216831207, 0.44127166271209717, 0.4468482434749603, 0.4464900493621826], "accuracy": [0.1438383311033249, 0.33747193217277527, 0.4555540978908539, 0.5641262531280518, 0.6523576974868774, 0.6730946898460388, 0.6935675740242004, 0.7021529674530029, 0.7135120630264282, 0.7276449799537659, 0.7347774505615234, 0.7401928305625916, 0.7585523724555969, 0.7650244235992432, 0.7693831920623779, 0.7746664881706238, 0.7815347909927368, 0.7815347909927368, 0.783119797706604, 0.7926297783851624, 0.7944789528846741, 0.8018755912780762, 0.798309326171875, 0.8054417967796326, 0.8152159452438354, 0.8168009519577026, 0.8169330358505249, 0.8253863453865051, 0.8204993009567261, 0.8293488025665283, 0.82683926820755, 0.830669641494751, 0.8248580098152161], "val_loss": [2.2411136627197266, 1.9625862836837769, 1.033444881439209, 0.8659767508506775, 0.8082959055900574, 0.6870455145835876, 0.6738207340240479, 0.65836501121521, 0.6602809429168701, 0.6034371852874756, 0.5765866041183472, 0.5644867420196533, 0.5571793913841248, 0.5608420968055725, 0.5375116467475891, 0.5262137651443481, 0.5261310935020447, 0.534976065158844, 0.5015154480934143, 0.5119900107383728, 0.4986732602119446, 0.5072968006134033, 0.5055250525474548, 0.48830363154411316, 0.48573440313339233, 0.47971564531326294, 0.4819124639034271, 0.4781971871852875, 0.47054070234298706, 0.47034814953804016, 0.46572571992874146, 0.4622768461704254, 0.46285319328308105], "val_accuracy": [0.4283333420753479, 0.46433332562446594, 0.6470000147819519, 0.687333345413208, 0.6980000138282776, 0.7310000061988831, 0.7406666874885559, 0.7580000162124634, 0.7549999952316284, 0.7620000243186951, 0.7696666717529297, 0.7806666493415833, 0.7860000133514404, 0.7743333578109741, 0.7913333177566528, 0.7956666946411133, 0.7946666479110718, 0.7973333597183228, 0.8040000200271606, 0.8073333501815796, 0.809333324432373, 0.8133333325386047, 0.8050000071525574, 0.8176666498184204, 0.8263333439826965, 0.8316666483879089, 0.8230000138282776, 0.8353333473205566, 0.8306666612625122, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8330000042915344]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 9, 3], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45646716928.0, 6742777790464.0, 116187639840768.0, 824174293549056.0, 3625317201608704.0, 1.1845823671304192e+16], "accuracy": [0.10236428678035736, 0.10051512718200684, 0.09972262382507324, 0.0952318087220192, 0.09866596013307571, 0.09694888442754745], "val_loss": [457293266944.0, 24653737230336.0, 264641976467456.0, 1442713740247040.0, 5403190191194112.0, 1.5937105364516864e+16], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [78, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 4], [23], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 5, 6, 8, 3, 0, 5], [3, 0, 0, 0, 2, 3, 0], [83, 99, 27, 35], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 8, 9, 2, 6, 6, 8, 3], [0, 3, 2, 0, 5], [0, 13, 57], [0, 0, 0, 1, 1], [0, 5, 6], [0, 7], [0], [1, 1], [7], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 4, 13, 8, 5, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.multiply(grad, tf.math.negative(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad), beta), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]