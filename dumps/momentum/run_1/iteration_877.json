[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931172847747803, 2.188572406768799, 1.7653136253356934, 1.3539735078811646, 1.0600210428237915, 0.9006247520446777, 0.8158237934112549, 0.7995592951774597, 0.7483888268470764, 0.7360526919364929, 0.6894121170043945, 0.6643146276473999, 0.6542649865150452, 0.6275257468223572, 0.6027460694313049, 0.5939199924468994, 0.5742299556732178, 0.5753180384635925, 0.5568282008171082, 0.5389457941055298, 0.5360924601554871, 0.5271021723747253, 0.5158100724220276, 0.5021912455558777, 0.4889599084854126, 0.48516368865966797, 0.4763886034488678, 0.46085870265960693, 0.45853838324546814, 0.4467393755912781, 0.43133074045181274, 0.422660768032074, 0.42554670572280884, 0.40880143642425537, 0.40174710750579834, 0.39658695459365845, 0.39074090123176575, 0.37820613384246826, 0.381663978099823, 0.38030803203582764, 0.3559425175189972, 0.3658711016178131, 0.349471777677536, 0.357005774974823, 0.3477509021759033, 0.34913522005081177, 0.3561134338378906, 0.33976876735687256, 0.33486026525497437], "accuracy": [0.13142253458499908, 0.3229427933692932, 0.43970412015914917, 0.5433892607688904, 0.6394135355949402, 0.6641130447387695, 0.6956809163093567, 0.7055870890617371, 0.7124554514884949, 0.7131158113479614, 0.739928662776947, 0.7460044622421265, 0.746268630027771, 0.7580240368843079, 0.7648923397064209, 0.7796856164932251, 0.7807422876358032, 0.7825914621353149, 0.7862898111343384, 0.7927618622779846, 0.7905164361000061, 0.7964601516723633, 0.8031964302062988, 0.8082155585289001, 0.8142913579940796, 0.8162726163864136, 0.8187822103500366, 0.8215559124946594, 0.8253863453865051, 0.8323867321014404, 0.8378021121025085, 0.8380662798881531, 0.837537944316864, 0.8453308939933777, 0.852859616279602, 0.8519350290298462, 0.8533879518508911, 0.8580108284950256, 0.8529917001724243, 0.8609166741371155, 0.8681812286376953, 0.8648791313171387, 0.863558292388916, 0.8607845902442932, 0.8632941246032715, 0.8652753829956055, 0.8672566413879395, 0.8712190985679626, 0.8710870146751404], "val_loss": [2.2454159259796143, 2.014268159866333, 1.1295419931411743, 0.8701140880584717, 0.7578058838844299, 0.7089791893959045, 0.6796656847000122, 0.6633768081665039, 0.637998640537262, 0.6191880106925964, 0.5910897850990295, 0.5745615363121033, 0.5563768148422241, 0.5458059310913086, 0.552695095539093, 0.5273967981338501, 0.5238168239593506, 0.510672390460968, 0.5359770655632019, 0.5205457806587219, 0.5080069899559021, 0.5001023411750793, 0.5035229325294495, 0.49157026410102844, 0.47401025891304016, 0.4691387116909027, 0.4606302082538605, 0.4655442237854004, 0.4548763036727905, 0.43718045949935913, 0.4350774884223938, 0.4374193847179413, 0.43617480993270874, 0.4275686740875244, 0.4230667054653168, 0.410752534866333, 0.40486931800842285, 0.411641925573349, 0.4074725806713104, 0.3999154567718506, 0.4162311553955078, 0.43505963683128357, 0.4108183681964874, 0.39489659667015076, 0.4152347147464752, 0.42145490646362305, 0.4196958839893341, 0.420077383518219, 0.4059735834598541], "val_accuracy": [0.4233333468437195, 0.44566667079925537, 0.640666663646698, 0.6779999732971191, 0.7123333215713501, 0.7243333458900452, 0.7516666650772095, 0.750333309173584, 0.7516666650772095, 0.7616666555404663, 0.7639999985694885, 0.7726666927337646, 0.7873333096504211, 0.7860000133514404, 0.7873333096504211, 0.7979999780654907, 0.8046666383743286, 0.8130000233650208, 0.8106666803359985, 0.8040000200271606, 0.8073333501815796, 0.8096666932106018, 0.8223333358764648, 0.8223333358764648, 0.8286666870117188, 0.8326666951179504, 0.8396666646003723, 0.8386666774749756, 0.8450000286102295, 0.8503333330154419, 0.8506666421890259, 0.8493333458900452, 0.8566666841506958, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8676666617393494, 0.859666645526886, 0.8686666488647461, 0.8676666617393494, 0.8636666536331177, 0.8619999885559082, 0.8693333268165588, 0.8730000257492065, 0.8606666922569275, 0.8640000224113464, 0.8703333139419556, 0.8636666536331177, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 4, 1, 3], [1, 0, 1, 0, 1], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [4, 5, 0], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 3, 1, 3, 3, 8, 2, 4, 8, 7, 9], [0, 0, 2, 0, 2, 1, 0, 0], [83, 99, 27, 72, 12, 47], [0, 0, 0], [0, 8, 9], [0], [34], [0, 0, 0, 1, 1, 0, 1, 0], [1, 5, 6, 1, 9], [0, 5, 2], [0, 11], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 6, 3, 3, 0, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), alpha), tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [8, 1, 3, 8, 7], [3, 2, 0, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 8, 3, 7, 0, 1, 1, 4, 8, 1, 2, 7, 9, 4, 4, 2, 6, 3, 1, 8, 6, 8, 7, 1, 9, 1, 6, 7, 9, 7, 9, 1], [0, 4, 4, 2, 2, 2, 0, 2, 4, 0, 3, 2, 5, 2, 2, 1, 5, 0, 0], [0, 79, 75, 86, 46, 9, 3, 75, 43], [0, 1, 0, 1, 1], [0, 5, 6], [0, 7], [95], [0, 0, 0, 0, 1, 1], [5, 8, 0, 7], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 51, 32, 19, 9, 2, 1, 1, 1, 6, 4, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.sqrt(grad), grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), beta)), tf.math.pow(beta, beta)), tf.math.add(tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.subtract(tf.math.sqrt(grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad))), beta)), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.subtract(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 9, 3, 1, 7, 0, 8, 4, 2, 7, 0, 3, 4, 1, 4, 3, 9, 7, 1, 5], [0, 2, 1, 0, 2, 0, 1, 0, 1, 2, 3, 2, 2, 0, 0, 0], [52, 99, 31, 90, 83, 87, 17, 78, 60], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [6, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.subtract(alpha, tf.math.pow(tf.math.multiply(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)), grad)), grad)), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 40, 24, 16, 9, 3, 3, 0, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 26}]