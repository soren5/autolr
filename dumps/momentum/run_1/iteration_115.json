[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293325901031494, 2.190478801727295, 1.7745400667190552, 1.3495001792907715, 1.0844861268997192, 0.9176824688911438, 0.8557441234588623, 0.8241028189659119, 0.7555144429206848, 0.7575896382331848, 0.7133850455284119, 0.6900724172592163, 0.6494936943054199, 0.6213207840919495, 0.6130746006965637, 0.5853741765022278, 0.5900774002075195, 0.5605182647705078, 0.5553894639015198, 0.5466436147689819, 0.5432802438735962, 0.541093111038208, 0.5074744820594788, 0.5090823173522949, 0.5002728700637817, 0.48255160450935364, 0.48526161909103394, 0.4676927626132965, 0.4627378284931183, 0.45259925723075867, 0.4370954930782318, 0.43363234400749207, 0.42833760380744934, 0.4035472869873047, 0.4050159752368927, 0.40400686860084534, 0.38731807470321655, 0.3780471980571747, 0.3849734663963318, 0.35961660742759705, 0.3804413676261902, 0.36867067217826843, 0.36412927508354187, 0.346280962228775, 0.34603559970855713, 0.3429184854030609, 0.3331625759601593, 0.32954859733581543, 0.3336607813835144], "accuracy": [0.1320829540491104, 0.3255844712257385, 0.43059042096138, 0.5449742674827576, 0.6250165104866028, 0.6634526252746582, 0.6947563290596008, 0.6919825673103333, 0.7094175219535828, 0.7049266695976257, 0.7343811988830566, 0.7283053994178772, 0.7586844563484192, 0.765949010848999, 0.7594769597053528, 0.7736098170280457, 0.7753269076347351, 0.7812706232070923, 0.7893276810646057, 0.7905164361000061, 0.7932901978492737, 0.7869502305984497, 0.8053097128868103, 0.8080834746360779, 0.8123101592063904, 0.8127063512802124, 0.8146876096725464, 0.8195747137069702, 0.8232730031013489, 0.8249900937080383, 0.835160493850708, 0.8360850811004639, 0.8347642421722412, 0.8482366800308228, 0.8467837572097778, 0.8481045961380005, 0.8494254350662231, 0.8574824929237366, 0.8532558679580688, 0.8628978729248047, 0.8595958352088928, 0.8573504090309143, 0.863029956817627, 0.8687095642089844, 0.8705587387084961, 0.8687095642089844, 0.8733324408531189, 0.8733324408531189, 0.872407853603363], "val_loss": [2.2452898025512695, 2.015319585800171, 1.1248613595962524, 0.8772609233856201, 0.7506738305091858, 0.6912959814071655, 0.663648247718811, 0.6434698104858398, 0.6319503784179688, 0.5911998152732849, 0.5635513663291931, 0.5614882111549377, 0.5546361207962036, 0.5320744514465332, 0.5294214487075806, 0.5161317586898804, 0.5125892162322998, 0.5204265117645264, 0.5007486343383789, 0.49577856063842773, 0.48746004700660706, 0.4869596064090729, 0.4812587797641754, 0.4660225510597229, 0.4657665193080902, 0.4563113749027252, 0.4570915102958679, 0.4459015429019928, 0.448325514793396, 0.4362207055091858, 0.42491447925567627, 0.4162387549877167, 0.41572675108909607, 0.4099748134613037, 0.41964012384414673, 0.42401203513145447, 0.4152827262878418, 0.4052400588989258, 0.40364712476730347, 0.42027905583381653, 0.42041894793510437, 0.4215497374534607, 0.42234838008880615, 0.4237293004989624, 0.43006062507629395, 0.42211538553237915, 0.4221319556236267, 0.43977898359298706, 0.4360269010066986], "val_accuracy": [0.4143333435058594, 0.45766666531562805, 0.6600000262260437, 0.6933333277702332, 0.7250000238418579, 0.7360000014305115, 0.7440000176429749, 0.7556666731834412, 0.7556666731834412, 0.7736666798591614, 0.7716666460037231, 0.762666642665863, 0.7846666574478149, 0.7950000166893005, 0.7913333177566528, 0.7993333339691162, 0.8016666769981384, 0.8003333210945129, 0.8080000281333923, 0.8119999766349792, 0.8203333616256714, 0.8143333196640015, 0.8169999718666077, 0.8236666917800903, 0.8236666917800903, 0.8323333263397217, 0.8323333263397217, 0.8396666646003723, 0.8336666822433472, 0.8473333120346069, 0.8443333506584167, 0.8493333458900452, 0.8529999852180481, 0.8606666922569275, 0.859000027179718, 0.8616666793823242, 0.8619999885559082, 0.8640000224113464, 0.8633333444595337, 0.8643333315849304, 0.8666666746139526, 0.8663333058357239, 0.8693333268165588, 0.8726666569709778, 0.8676666617393494, 0.8706666827201843, 0.8703333139419556, 0.8713333606719971, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 6, 3], [0, 0, 1, 0, 2, 3, 0], [83, 51, 27, 20], [1, 0, 0], [0, 4, 6], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 7, 6, 9, 3, 4, 8, 1, 0], [1, 0, 2, 7, 6], [0, 75]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)), tf.math.subtract(grad, tf.math.negative(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 14, 7, 7, 4, 1, 0, 1, 1, 5, 3, 2, 1, 14, 9, 5, 2], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [9, 4, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 1], [2, 5], [0], [1, 1], [4], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 3, 3, 0, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47687696384.0, 6991984459776.0, 119892577615872.0, 835776275283968.0, 3717394321113088.0, 1.2117727313395712e+16], "accuracy": [0.10302469879388809, 0.09602430462837219, 0.1026284471154213, 0.09985470771789551, 0.10170386731624603, 0.10698718577623367], "val_loss": [476226879488.0, 25674937008128.0, 275601424384000.0, 1502542366244864.0, 5629029235294208.0, 1.6602075823603712e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [5, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 19], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 6, 2, 4, 0, 5, 4, 2], [0, 5, 4, 3, 7, 5, 3, 2, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 3, 0, 1, 20, 11, 9, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.pow(sigma, tf.math.negative(tf.math.square(grad)))), tf.math.pow(grad, tf.math.add(sigma, beta))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303616762161255, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [5, 8, 3, 1, 7], [0, 0, 1, 0, 2], [89, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [1, 0], [0], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 7, 4, 3, 2, 3, 3, 0, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3092124462127686, 2.310645341873169, 2.3101747035980225, 2.310072422027588, 2.30966854095459, 2.3096120357513428], "accuracy": [0.09338264167308807, 0.08889182657003403, 0.0952318087220192, 0.09166556596755981, 0.0956280529499054, 0.0956280529499054], "val_loss": [2.3084263801574707, 2.3084263801574707, 2.3084263801574707, 2.3084263801574707, 2.3084263801574707, 2.3084263801574707], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]