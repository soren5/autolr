[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939274311065674, 2.192793846130371, 1.7863487005233765, 1.374947428703308, 1.0744214057922363, 0.9096736907958984, 0.8525521755218506, 0.8156422972679138, 0.7602589726448059, 0.7271299362182617, 0.6938346028327942, 0.6726680397987366, 0.644683301448822, 0.6237836480140686, 0.6115070581436157, 0.5950518250465393, 0.5963296890258789, 0.5600250959396362, 0.566609799861908, 0.5537048578262329, 0.5497434735298157, 0.5224838852882385, 0.5143743753433228, 0.4966091215610504, 0.47991132736206055, 0.4808940291404724, 0.4700540602207184, 0.45589810609817505, 0.43968838453292847, 0.44195812940597534, 0.4282262325286865, 0.42707768082618713, 0.41491377353668213, 0.4015001654624939, 0.40474197268486023, 0.394909530878067, 0.38833966851234436, 0.382259726524353, 0.36297285556793213, 0.355533242225647, 0.36168012022972107, 0.349942147731781, 0.3497268855571747, 0.3539944589138031], "accuracy": [0.12257297337055206, 0.31779158115386963, 0.4348170757293701, 0.5440496802330017, 0.6306960582733154, 0.663848876953125, 0.6885483860969543, 0.6933034062385559, 0.711530864238739, 0.7268524765968323, 0.7372870445251465, 0.744419515132904, 0.7497028112411499, 0.7621186375617981, 0.7600052952766418, 0.769911527633667, 0.7769119143486023, 0.7841764688491821, 0.7874785661697388, 0.7936864495277405, 0.7938185334205627, 0.7991018295288086, 0.8090080618858337, 0.8144234418869019, 0.8169330358505249, 0.8166688680648804, 0.8226125836372375, 0.8313300609588623, 0.8330471515655518, 0.8314621448516846, 0.8385946154594421, 0.8348963260650635, 0.8397833704948425, 0.8425571322441101, 0.8455950617790222, 0.8516708612442017, 0.852859616279602, 0.8551049828529358, 0.8685774803161621, 0.8656716346740723, 0.8580108284950256, 0.8660678863525391, 0.8665962219238281, 0.8668603897094727], "val_loss": [2.2466773986816406, 2.0275142192840576, 1.171204924583435, 0.9077188372612, 0.7876406311988831, 0.7061715722084045, 0.6794847249984741, 0.6485003232955933, 0.6337698698043823, 0.625471830368042, 0.5955862402915955, 0.5570308566093445, 0.5570388436317444, 0.5339066386222839, 0.522190272808075, 0.528366208076477, 0.5115819573402405, 0.5041447877883911, 0.4875514805316925, 0.49114322662353516, 0.4843837022781372, 0.46849876642227173, 0.4725034236907959, 0.4654383957386017, 0.4560111463069916, 0.4519047141075134, 0.45108118653297424, 0.45223918557167053, 0.43948543071746826, 0.43614721298217773, 0.4390242397785187, 0.43314021825790405, 0.42851415276527405, 0.4212460517883301, 0.4140641391277313, 0.4071071445941925, 0.4127667546272278, 0.41222262382507324, 0.40558549761772156, 0.4098295569419861, 0.411055326461792, 0.41834089159965515, 0.42051059007644653, 0.41786226630210876], "val_accuracy": [0.42366665601730347, 0.4723333418369293, 0.6476666927337646, 0.6850000023841858, 0.7160000205039978, 0.7323333621025085, 0.7423333525657654, 0.7516666650772095, 0.7673333287239075, 0.7593333125114441, 0.765666663646698, 0.7803333401679993, 0.7926666736602783, 0.79666668176651, 0.8029999732971191, 0.7950000166893005, 0.8013333082199097, 0.8166666626930237, 0.8199999928474426, 0.8173333406448364, 0.8233333230018616, 0.8206666707992554, 0.8270000219345093, 0.8349999785423279, 0.8376666903495789, 0.8366666436195374, 0.8429999947547913, 0.843666672706604, 0.8426666855812073, 0.847000002861023, 0.8403333425521851, 0.8476666808128357, 0.8483333587646484, 0.8529999852180481, 0.8513333201408386, 0.8536666631698608, 0.859333336353302, 0.8619999885559082, 0.862333357334137, 0.856333315372467, 0.8569999933242798, 0.859666645526886, 0.859000027179718, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 0, 3, 9], [0, 0, 1, 0, 2], [83, 7, 27], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 9, 2, 4, 1, 5, 2, 8], [0, 0, 5, 5, 0], [0, 1, 33, 86], [0, 0, 0, 1, 1, 1], [0, 1, 6], [4, 5, 6], [0], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, grad)))), tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1066666692495346, 0.1066666692495346, 0.1066666692495346, 0.1066666692495346, 0.1066666692495346, 0.1066666692495346]}, "mapping_values": [1, 9, 6, 3, 3, 14, 9, 5, 4, 6, 3, 3, 0, 3, 2, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 0, 9], [0], [0], [0, 1, 0, 1, 1], [0, 5, 9], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [11.32404613494873, 4.162908103433397e+29, 4.37833833694458, 3.9583675861358643, 3.4299774169921875, 4.169743537902832, 4.000463008880615], "accuracy": [0.2086910605430603, 0.10011887550354004, 0.10091137140989304, 0.09734513610601425, 0.09985470771789551, 0.09998679161071777, 0.09919429570436478], "val_loss": [9.340546607971191, 4.5824503898620605, 4.256135940551758, 3.377612590789795, 4.237344264984131, 4.100062370300293, 4.325096130371094], "val_accuracy": [0.06733333319425583, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.09966666996479034, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 4, 0, 8, 5, 0], [0, 0, 1, 1, 2, 2], [83, 99, 27], [1, 0, 1], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 2, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(alpha), tf.math.sqrt(tf.math.square(tf.math.negative(alpha)))))), grad), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12600713968276978, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 7, 6, 6, 8, 3, 0, 5], [0, 2, 1, 0, 2, 1, 3, 1], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 0, 1], [0, 5, 6], [0, 5], [0], [0, 1], [5], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 19, 11, 8, 2, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.multiply(alpha, tf.math.negative(tf.math.square(grad)))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3101840019226074, 2.3094613552093506, 2.3098204135894775, 2.3103277683258057, 2.3102807998657227, 2.3093717098236084], "accuracy": [0.09153348207473755, 0.09113723784685135, 0.09153348207473755, 0.08902391046285629, 0.08585391938686371, 0.09047681838274002], "val_loss": [2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]