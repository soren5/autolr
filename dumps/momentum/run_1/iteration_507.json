[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943830490112305, 2.1921911239624023, 1.787719488143921, 1.3533456325531006, 1.0865087509155273, 0.9281553030014038, 0.854668140411377, 0.8309134244918823, 0.7751863598823547, 0.7583738565444946, 0.7237555384635925, 0.6975538730621338, 0.658464252948761, 0.646503746509552, 0.61883544921875, 0.5987756848335266, 0.586483895778656, 0.5951056480407715, 0.5683512091636658, 0.5534051060676575, 0.5436000227928162, 0.5386353135108948, 0.5135403871536255, 0.5089736580848694, 0.5062819123268127, 0.5136711001396179, 0.49395057559013367, 0.47927218675613403, 0.4748194217681885, 0.4733218848705292, 0.4606207609176636, 0.45264336466789246, 0.44975394010543823, 0.4433712959289551, 0.425905704498291, 0.4272398054599762, 0.4101480543613434, 0.42168131470680237, 0.39424824714660645], "accuracy": [0.1302337795495987, 0.3291507065296173, 0.42887333035469055, 0.5404834151268005, 0.6363756656646729, 0.6563201546669006, 0.6824725866317749, 0.698190450668335, 0.6977941989898682, 0.7087571024894714, 0.728701651096344, 0.7359662055969238, 0.7465327978134155, 0.7530049085617065, 0.759609043598175, 0.7666094303131104, 0.7740060687065125, 0.7663452625274658, 0.7814027070999146, 0.7903843522071838, 0.7852331399917603, 0.7882710099220276, 0.8026680946350098, 0.8101968169212341, 0.8092722296714783, 0.7993659973144531, 0.804649293422699, 0.817461371421814, 0.8210275769233704, 0.819442629814148, 0.8153480291366577, 0.8197067975997925, 0.8219521641731262, 0.8296129703521729, 0.8342359066009521, 0.8381983637809753, 0.8444063067436218, 0.8354246616363525, 0.8498216867446899], "val_loss": [2.246368885040283, 2.0252814292907715, 1.1650017499923706, 0.8781040906906128, 0.7655311822891235, 0.7125384211540222, 0.6710724234580994, 0.6628276705741882, 0.6701453328132629, 0.6310175657272339, 0.5954023003578186, 0.5614054203033447, 0.5496293902397156, 0.5346873998641968, 0.530116617679596, 0.523566722869873, 0.5108413100242615, 0.5121108293533325, 0.49516192078590393, 0.4988015592098236, 0.47824251651763916, 0.46992868185043335, 0.4579959213733673, 0.46511706709861755, 0.4637596905231476, 0.467734158039093, 0.4551895260810852, 0.4425974488258362, 0.4432106912136078, 0.43828386068344116, 0.44647639989852905, 0.42933350801467896, 0.42600858211517334, 0.42048847675323486, 0.4259788393974304, 0.434782475233078, 0.42625313997268677, 0.4207412898540497, 0.4148347079753876], "val_accuracy": [0.4519999921321869, 0.4819999933242798, 0.6520000100135803, 0.6996666789054871, 0.7296666502952576, 0.734333336353302, 0.7476666569709778, 0.7436666488647461, 0.7553333044052124, 0.7583333253860474, 0.7763333320617676, 0.7879999876022339, 0.7879999876022339, 0.7990000247955322, 0.8056666851043701, 0.8026666641235352, 0.8036666512489319, 0.8050000071525574, 0.8063333630561829, 0.8019999861717224, 0.812666654586792, 0.8273333311080933, 0.8363333344459534, 0.8289999961853027, 0.8266666531562805, 0.828000009059906, 0.8333333134651184, 0.8366666436195374, 0.840666651725769, 0.840666651725769, 0.840666651725769, 0.8413333296775818, 0.8493333458900452, 0.8550000190734863, 0.8483333587646484, 0.847000002861023, 0.8479999899864197, 0.8513333201408386, 0.8546666502952576]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 1, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 0, 1], [7, 8, 9], [0], [0, 90], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 3, 6, 7, 5, 3, 6, 2, 8, 7, 7, 8], [0, 5, 0, 0, 5, 3, 0, 1, 4], [0, 77, 51, 47], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 2, 21, 12, 9, 4, 2, 1, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), sigma)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3037915229797363, 2.3025832176208496, 2.3025832176208496, 2.3025853633880615, 2.3025858402252197, 2.3025853633880615], "accuracy": [0.10157178342342377, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10077928751707077], "val_loss": [2.302584648132324, 2.3025853633880615, 2.302586793899536, 2.3025858402252197, 2.3025879859924316, 2.302588939666748], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09933333098888397, 0.09933333098888397, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [8, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [61], [0, 0, 1, 1, 1], [0, 5, 6], [6, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47438905344.0, 6893886504960.0, 121075950157824.0, 829490657755136.0, 3694448458334208.0, 1.2037003403067392e+16], "accuracy": [0.09840179979801178, 0.09760929644107819, 0.0940430611371994, 0.10091137140989304, 0.10276053100824356, 0.09800554811954498], "val_loss": [474785808384.0, 25596442705920.0, 274735216721920.0, 1497600872153088.0, 5611891242041344.0, 1.6552377683279872e+16], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 0], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 3, 3, 0, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1172369024.0, 22370383872.0, 103133765632.0, 287634587648.0, 607864881152.0, 1123124772864.0], "accuracy": [0.09998679161071777, 0.09985470771789551, 0.09866596013307571, 0.10460969805717468, 0.09589222073554993, 0.09787346422672272], "val_loss": [5311504896.0, 42486521856.0, 143387246592.0, 339872808960.0, 663809294336.0, 1147046592512.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [6, 1, 3, 1, 3], [0, 3, 1, 0, 1], [83, 99, 27], [0, 0, 0], [0, 9, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 2], [0, 5], [0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 4, 3, 4, 3, 3, 7, 7, 0, 7, 7, 1, 5, 5, 8, 8, 0], [5, 6, 6, 0, 4, 0, 4, 3, 7, 2, 7], [0, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 5, 3, 2, 1, 28, 17, 11, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.square(sigma)))), grad), tf.math.sqrt(tf.math.sqrt(tf.math.negative(beta)))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]