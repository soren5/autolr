[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936508655548096, 2.189168930053711, 1.7792141437530518, 1.3277618885040283, 1.068351149559021, 0.907402515411377, 0.8413210511207581, 0.8021000027656555, 0.7687159180641174, 0.7370449304580688, 0.6875056624412537, 0.6857415437698364, 0.6628963351249695, 0.6310058832168579, 0.6131873726844788, 0.6027685403823853, 0.5802304744720459, 0.5630912184715271, 0.5823125243186951, 0.5567474365234375, 0.5476851463317871, 0.5469544529914856, 0.5354616641998291, 0.5230984091758728, 0.5103476643562317, 0.4916830062866211, 0.4886857867240906, 0.4787156283855438, 0.47179028391838074, 0.46921247243881226, 0.4662840962409973, 0.4393767714500427, 0.4352802038192749, 0.43048095703125, 0.4276731014251709, 0.41667020320892334, 0.4120963513851166, 0.3979630172252655, 0.3986135423183441, 0.39669039845466614, 0.4005267918109894, 0.38463976979255676, 0.3705873489379883, 0.36474546790122986, 0.37111496925354004, 0.35534143447875977, 0.35479462146759033, 0.3719165325164795], "accuracy": [0.12772421538829803, 0.3267732262611389, 0.4319112300872803, 0.5444459319114685, 0.64231938123703, 0.6606789231300354, 0.6948884129524231, 0.6971337795257568, 0.7124554514884949, 0.7191916704177856, 0.7454761862754822, 0.7495707273483276, 0.7400607466697693, 0.765949010848999, 0.767401933670044, 0.7677981853485107, 0.778761088848114, 0.7866860628128052, 0.7788931727409363, 0.7897239327430725, 0.785101056098938, 0.789459764957428, 0.7955356240272522, 0.7969884872436523, 0.8063663840293884, 0.8128384351730347, 0.8119139075279236, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8219521641731262, 0.8277638554573059, 0.8304054737091064, 0.8310658931732178, 0.8379341959953308, 0.8380662798881531, 0.8354246616363525, 0.847840428352356, 0.8407079577445984, 0.8454629778862, 0.8385946154594421, 0.8462554216384888, 0.857218325138092, 0.860652506351471, 0.8625016212463379, 0.8661999702453613, 0.8580108284950256, 0.8551049828529358], "val_loss": [2.2461507320404053, 2.0207412242889404, 1.1475117206573486, 0.9195407032966614, 0.7530849575996399, 0.7043895721435547, 0.6651559472084045, 0.6659298539161682, 0.6314122080802917, 0.6081305146217346, 0.5842130780220032, 0.5640867352485657, 0.5482835173606873, 0.539605975151062, 0.5328664183616638, 0.5335026979446411, 0.5247265100479126, 0.5036712884902954, 0.4938073754310608, 0.49497950077056885, 0.5042617917060852, 0.4813046157360077, 0.47694799304008484, 0.483567476272583, 0.4620662033557892, 0.45242762565612793, 0.45849061012268066, 0.43685537576675415, 0.4394480884075165, 0.44681379199028015, 0.44237980246543884, 0.43348681926727295, 0.42854663729667664, 0.43468770384788513, 0.4251081645488739, 0.414899080991745, 0.4118248224258423, 0.4179360270500183, 0.41470223665237427, 0.40771403908729553, 0.4039005637168884, 0.3919682502746582, 0.4013310670852661, 0.424409955739975, 0.41070377826690674, 0.4018740653991699, 0.3966435194015503, 0.40175533294677734], "val_accuracy": [0.4243333339691162, 0.46666666865348816, 0.6453333497047424, 0.6846666932106018, 0.7229999899864197, 0.7436666488647461, 0.7473333477973938, 0.7616666555404663, 0.7670000195503235, 0.7820000052452087, 0.7766666412353516, 0.7903333306312561, 0.7896666526794434, 0.7946666479110718, 0.79666668176651, 0.7973333597183228, 0.8006666898727417, 0.8026666641235352, 0.8083333373069763, 0.8103333115577698, 0.8143333196640015, 0.8246666789054871, 0.82833331823349, 0.8263333439826965, 0.8330000042915344, 0.8330000042915344, 0.8323333263397217, 0.8443333506584167, 0.8426666855812073, 0.8413333296775818, 0.8396666646003723, 0.8423333168029785, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8550000190734863, 0.8546666502952576, 0.8489999771118164, 0.8543333411216736, 0.8539999723434448, 0.8573333621025085, 0.8619999885559082, 0.8640000224113464, 0.8573333621025085, 0.8569999933242798, 0.8616666793823242, 0.8640000224113464, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 5, 1, 3, 7], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 8, 2, 1, 5, 6, 4, 4, 2, 2, 9], [0, 2, 1, 5, 3, 5, 4], [82, 51], [0, 0, 0, 1, 1], [0, 5, 6], [4, 5], [0], [0, 1, 0, 0, 1, 1], [6, 4, 0], [1, 2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 18, 11, 7, 2, 5, 3, 2, 0, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.pow(alpha, tf.math.add(grad, grad)), tf.math.add(grad, grad)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.negative(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 3, 0, 2], [0, 4, 5], [0], [0, 1, 1, 1, 1], [0, 5, 6], [7, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038411140441895, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 7, 2], [0, 3, 1, 0, 2, 1, 3], [83, 99, 27], [0, 0, 0, 0, 1, 1], [4, 8, 9, 4], [0, 4], [0, 87], [0, 0, 0, 1, 1], [0, 5, 7], [0, 3], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 2, 6, 4, 2, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 1, 3, 1, 3, 0, 8, 1, 5, 8, 2, 5, 8, 2, 2, 0, 1, 4, 7, 6, 0], [0, 0, 1, 0, 2, 0, 2, 0, 3, 3, 2, 1, 1, 0], [83, 99, 27, 38, 46, 57], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 5, 6, 5, 6, 9], [0, 2], [0, 74], [0, 0, 0, 1, 0, 1, 1], [0, 4, 4, 0], [1, 3, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 21, 14, 6, 3, 3, 0, 1, 8, 6, 2, 2, 7, 4, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(alpha))), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.math.sqrt(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.math.pow(grad, grad), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.negative(alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(alpha, tf.math.negative(sigma)), tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1118335488.0, 21472325632.0, 101128953856.0, 276833107968.0, 588844433408.0, 1090019983360.0], "accuracy": [0.10381719470024109, 0.09985470771789551, 0.09668471664190292, 0.09694888442754745, 0.1014397069811821, 0.09840179979801178], "val_loss": [5158580224.0, 41263562752.0, 139257921536.0, 330088251392.0, 644689690624.0, 1114016579584.0], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]