[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920799255371094, 2.188297748565674, 1.7705800533294678, 1.3497850894927979, 1.0970454216003418, 0.9468854069709778, 0.8640716075897217, 0.8372356295585632, 0.7798826098442078, 0.7628266215324402, 0.7100294828414917, 0.6776933073997498, 0.6611392498016357, 0.6262268424034119, 0.6120668053627014, 0.5976137518882751, 0.5783921480178833, 0.5706745386123657, 0.562915027141571, 0.549915611743927, 0.529926598072052, 0.5238845944404602, 0.5065662860870361, 0.4935337007045746, 0.4713045358657837, 0.46484601497650146, 0.461458295583725, 0.4410180449485779, 0.43073293566703796, 0.42398902773857117, 0.4136689007282257, 0.4112134873867035, 0.4081684350967407, 0.3940751552581787, 0.3884868025779724, 0.3734648823738098, 0.3652586340904236, 0.3698483407497406, 0.3562857508659363, 0.35666269063949585, 0.34452882409095764, 0.3386387526988983, 0.3256320655345917, 0.32173648476600647, 0.3328530788421631, 0.327572226524353, 0.31686046719551086], "accuracy": [0.12838461995124817, 0.3163386583328247, 0.42808082699775696, 0.5411438345909119, 0.6306960582733154, 0.6577730774879456, 0.6837934255599976, 0.7017567157745361, 0.6936996579170227, 0.7083608508110046, 0.7306828498840332, 0.7437590956687927, 0.7450799345970154, 0.7553823590278625, 0.76542067527771, 0.77677983045578, 0.78113853931427, 0.7799497842788696, 0.7910447716712952, 0.7852331399917603, 0.7992339134216309, 0.7968564033508301, 0.8092722296714783, 0.8132346868515015, 0.8222163319587708, 0.8235371708869934, 0.821820080280304, 0.8359529972076416, 0.8363492488861084, 0.8404437899589539, 0.8454629778862, 0.847840428352356, 0.8477083444595337, 0.8499537706375122, 0.8515387773513794, 0.8574824929237366, 0.8578787446022034, 0.8588033318519592, 0.859199583530426, 0.863029956817627, 0.8660678863525391, 0.8714832663536072, 0.8746532797813416, 0.8799365758895874, 0.8701624870300293, 0.871879518032074, 0.8808611631393433], "val_loss": [2.2446517944335938, 2.0106842517852783, 1.1117491722106934, 0.8224567174911499, 0.7486101984977722, 0.7285209894180298, 0.664677083492279, 0.6328570246696472, 0.6244653463363647, 0.6217191815376282, 0.5730487704277039, 0.5520272850990295, 0.5374054312705994, 0.5303803086280823, 0.5251421928405762, 0.5198506712913513, 0.49554067850112915, 0.4920681118965149, 0.48588237166404724, 0.49137523770332336, 0.47461217641830444, 0.458204984664917, 0.4466593563556671, 0.4435172379016876, 0.43121016025543213, 0.4360256493091583, 0.42290568351745605, 0.416325181722641, 0.4133581519126892, 0.40805697441101074, 0.39488911628723145, 0.4012177288532257, 0.39896687865257263, 0.3958423137664795, 0.38844165205955505, 0.3903138041496277, 0.38527026772499084, 0.39116138219833374, 0.39027780294418335, 0.38253235816955566, 0.38805925846099854, 0.3810310363769531, 0.39608055353164673, 0.38175907731056213, 0.39353451132774353, 0.37938398122787476, 0.3902314305305481], "val_accuracy": [0.41866666078567505, 0.47333332896232605, 0.6723333597183228, 0.7020000219345093, 0.7206666469573975, 0.7393333315849304, 0.7549999952316284, 0.7596666812896729, 0.7746666669845581, 0.7590000033378601, 0.7773333191871643, 0.7806666493415833, 0.7906666398048401, 0.793666660785675, 0.796999990940094, 0.7986666560173035, 0.8100000023841858, 0.8083333373069763, 0.8106666803359985, 0.8103333115577698, 0.8163333535194397, 0.824999988079071, 0.8303333520889282, 0.8370000123977661, 0.8493333458900452, 0.8463333249092102, 0.8493333458900452, 0.8510000109672546, 0.8489999771118164, 0.8550000190734863, 0.8586666584014893, 0.8566666841506958, 0.8636666536331177, 0.8616666793823242, 0.8643333315849304, 0.8673333525657654, 0.8700000047683716, 0.8659999966621399, 0.8723333477973938, 0.8726666569709778, 0.8766666650772095, 0.8803333044052124, 0.878000020980835, 0.878333330154419, 0.8700000047683716, 0.8786666393280029, 0.878000020980835]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 0, 2], [83, 63, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 0, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 6, 2, 6, 5, 3, 6, 7, 9, 6, 1, 3, 3, 1, 5, 8, 4], [1, 6, 4, 3, 6, 4, 4, 0, 5, 6, 6, 7, 4], [0, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 2, 1, 1, 1, 31, 18, 13, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, grad), sigma), tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(grad, grad))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(grad, tf.math.subtract(grad, tf.math.square(tf.math.sqrt(grad)))), tf.math.pow(grad, grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 3], [1, 0, 3, 3, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [56], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [9042726912.0, 169647947776.0, 795180072960.0, 2239082790912.0, 4704988823552.0, 8799957024768.0], "accuracy": [0.09998679161071777, 0.1006472036242485, 0.10130762308835983, 0.09866596013307571, 0.10460969805717468, 0.09800554811954498], "val_loss": [42338516992.0, 338685231104.0, 1143044308992.0, 2709426536448.0, 5291669716992.0, 9143836475392.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 0], [8, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 6, 7, 0, 3], [0, 5, 3, 4, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 11, 6, 5, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.multiply(sigma, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310431480407715, 2.3099052906036377, 2.3115532398223877, 2.310612201690674, 2.310295820236206, 2.3094120025634766], "accuracy": [0.0878351628780365, 0.09047681838274002, 0.08796724677085876, 0.09285431355237961, 0.09298639744520187, 0.09311848133802414], "val_loss": [2.309904098510742, 2.309904098510742, 2.309904098510742, 2.309904098510742, 2.309904098510742, 2.309904098510742], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 5, 8], [0, 0, 0, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1], [0, 8, 4, 7], [0, 3, 5], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0], [0, 9], [7], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 10, 6, 4, 3, 7, 4, 3, 1, 3, 2, 1, 1, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310235023498535, 2.309403419494629, 2.308624505996704, 2.3103015422821045, 2.3096132278442383, 2.3092713356018066], "accuracy": [0.09417514503002167, 0.09285431355237961, 0.0940430611371994, 0.09166556596755981, 0.09576013684272766, 0.08968432247638702], "val_loss": [2.308785915374756, 2.308785915374756, 2.308785915374756, 2.308785915374756, 2.308785915374756, 2.308785915374756], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]