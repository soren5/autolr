[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924044132232666, 2.1867117881774902, 1.7493014335632324, 1.3512250185012817, 1.0684744119644165, 0.9265823364257812, 0.8422110676765442, 0.8065209984779358, 0.7695361375808716, 0.7465326189994812, 0.692753255367279, 0.6741043925285339, 0.6459420919418335, 0.616699755191803, 0.598767876625061, 0.5862603187561035, 0.5819361209869385, 0.5589733719825745, 0.5611221194267273, 0.5419453382492065, 0.5342982411384583, 0.5290632843971252, 0.5142078995704651, 0.5033414363861084, 0.49433034658432007, 0.47811996936798096, 0.46267572045326233, 0.454471230506897, 0.45349252223968506, 0.4557444155216217, 0.4519488513469696, 0.43600496649742126, 0.42663294076919556, 0.4244750142097473, 0.41291168332099915, 0.4084296226501465, 0.40541568398475647, 0.398027628660202, 0.38161328434944153, 0.397155225276947, 0.381366491317749, 0.37481117248535156], "accuracy": [0.12534672021865845, 0.3275656998157501, 0.4447232782840729, 0.5498613119125366, 0.6363756656646729, 0.6660943031311035, 0.6903975605964661, 0.707568347454071, 0.707040011882782, 0.7185312509536743, 0.7366266250610352, 0.7471932172775269, 0.7473253011703491, 0.765949010848999, 0.7664773464202881, 0.7693831920623779, 0.7746664881706238, 0.7876105904579163, 0.785629391670227, 0.7884030938148499, 0.7964601516723633, 0.7957997918128967, 0.8018755912780762, 0.8061022162437439, 0.8121780753135681, 0.822348415851593, 0.8202351331710815, 0.8210275769233704, 0.8251221776008606, 0.8190463781356812, 0.8267071843147278, 0.8309338092803955, 0.8368775844573975, 0.8359529972076416, 0.8343679904937744, 0.8442742228507996, 0.8462554216384888, 0.8488970994949341, 0.8527275323867798, 0.8492933511734009, 0.8543124794960022, 0.8525954484939575], "val_loss": [2.2449021339416504, 2.0140371322631836, 1.1255356073379517, 0.9053799510002136, 0.7656546831130981, 0.7329176664352417, 0.687727153301239, 0.6507791876792908, 0.6410673260688782, 0.6292725205421448, 0.5829244256019592, 0.5536523461341858, 0.5294642448425293, 0.5314373970031738, 0.5231761932373047, 0.5053097605705261, 0.497525155544281, 0.49928051233291626, 0.4997063875198364, 0.4974360466003418, 0.4787651300430298, 0.47644174098968506, 0.4654467701911926, 0.4679253399372101, 0.4682202935218811, 0.4559691548347473, 0.45084643363952637, 0.4509125053882599, 0.4572197198867798, 0.4500384032726288, 0.45503678917884827, 0.45021694898605347, 0.4449521005153656, 0.4287140965461731, 0.429999440908432, 0.43308931589126587, 0.4286907911300659, 0.42771413922309875, 0.4414774477481842, 0.44151410460472107, 0.4311806559562683, 0.42642202973365784], "val_accuracy": [0.42500001192092896, 0.46666666865348816, 0.6473333239555359, 0.6833333373069763, 0.718666672706604, 0.715666651725769, 0.7406666874885559, 0.7486666440963745, 0.7549999952316284, 0.7443333268165588, 0.7643333077430725, 0.7676666378974915, 0.7900000214576721, 0.781333327293396, 0.7886666655540466, 0.7950000166893005, 0.8013333082199097, 0.8066666722297668, 0.8036666512489319, 0.8053333163261414, 0.8066666722297668, 0.8119999766349792, 0.8166666626930237, 0.8180000185966492, 0.8230000138282776, 0.8259999752044678, 0.8289999961853027, 0.8346666693687439, 0.828000009059906, 0.8333333134651184, 0.8363333344459534, 0.8420000076293945, 0.8360000252723694, 0.8426666855812073, 0.8413333296775818, 0.8483333587646484, 0.8533333539962769, 0.8496666550636292, 0.8483333587646484, 0.8446666598320007, 0.8433333039283752, 0.8453333377838135]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 0, 2], [2, 0, 1, 1, 2, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 0, 1], [2, 8, 9, 1, 2, 5], [0, 1, 4], [5, 79], [0, 0, 0, 0, 1, 1], [0, 5, 6, 5], [0, 1], [0], [0, 1, 0, 1], [2, 8], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 1, 9, 6, 3, 2, 6, 4, 2, 1, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), alpha), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 4, 1, 3, 6, 4, 3, 4, 9, 2, 6, 2, 4, 8], [0, 2, 1, 0, 2, 2, 0, 3, 1, 2, 2, 3], [83, 14, 27, 15], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 0, 7, 4, 0, 3, 0, 5], [2, 1, 4, 5, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 15, 12, 4, 3, 3, 0, 1, 5, 3, 2, 1, 13, 8, 5, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad), grad)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.add(grad, tf.math.pow(tf.math.sqrt(grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.square(alpha)), grad))), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 14, 27], [0, 1, 0], [0, 8, 9], [0], [57], [0, 0, 0, 1, 1], [0, 9, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037681579589844, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 1, 3, 1, 3], [0, 0, 1, 0, 2, 1], [83, 99, 77], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 1, 1], [7, 3, 6], [4, 5, 3], [0], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 3, 3, 0, 1, 5, 2, 3, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [24.67641830444336, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20512482523918152, 0.11808215826749802, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [23733.50390625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}]