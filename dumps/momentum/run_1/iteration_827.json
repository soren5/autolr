[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935454845428467, 2.1882519721984863, 1.765105962753296, 1.3747786283493042, 1.0638195276260376, 0.9099547266960144, 0.8365651965141296, 0.8170467615127563, 0.7596510648727417, 0.7522972226142883, 0.7052194476127625, 0.6854277849197388, 0.6455948352813721, 0.6295273303985596, 0.6157682538032532, 0.6042748689651489, 0.585453987121582, 0.5687142610549927, 0.5525606870651245, 0.5452388525009155, 0.5180484056472778, 0.5235005617141724, 0.5152194499969482, 0.4940655827522278, 0.4893057346343994, 0.4886869788169861, 0.47912025451660156, 0.4673858880996704, 0.46052688360214233, 0.44704413414001465, 0.44798821210861206, 0.4259313642978668, 0.43089064955711365, 0.420925498008728, 0.4184975028038025, 0.4049602150917053, 0.3961029350757599, 0.3936389982700348, 0.4021482467651367, 0.37768128514289856, 0.37860262393951416, 0.3602837920188904], "accuracy": [0.12600713968276978, 0.33007529377937317, 0.43125081062316895, 0.5383700728416443, 0.6283186078071594, 0.6655659675598145, 0.6954167485237122, 0.7034738063812256, 0.7107383608818054, 0.7077004313468933, 0.7263241410255432, 0.7360982894897461, 0.7553823590278625, 0.7621186375617981, 0.7623828053474426, 0.7753269076347351, 0.7761194109916687, 0.7832518815994263, 0.7938185334205627, 0.7927618622779846, 0.7996301651000977, 0.8031964302062988, 0.8080834746360779, 0.81548011302948, 0.8131026029586792, 0.8165367841720581, 0.822348415851593, 0.821820080280304, 0.8289526104927063, 0.8329150676727295, 0.8360850811004639, 0.8404437899589539, 0.8399154543876648, 0.8457271456718445, 0.8347642421722412, 0.8454629778862, 0.8499537706375122, 0.8524633646011353, 0.8499537706375122, 0.8585391640663147, 0.8565579056739807, 0.8581429123878479], "val_loss": [2.2462000846862793, 2.0186328887939453, 1.1279367208480835, 0.8466513752937317, 0.7507063746452332, 0.6931886672973633, 0.6500546336174011, 0.6353484988212585, 0.6291166543960571, 0.595981776714325, 0.5613532066345215, 0.5439189672470093, 0.5317817330360413, 0.5190650820732117, 0.5120107531547546, 0.5136137008666992, 0.495128333568573, 0.4889650046825409, 0.48435652256011963, 0.4723760187625885, 0.46070006489753723, 0.46599361300468445, 0.4592779576778412, 0.4544282555580139, 0.44833242893218994, 0.43722352385520935, 0.4300393760204315, 0.4255719482898712, 0.4337801933288574, 0.42963850498199463, 0.40720826387405396, 0.4077279567718506, 0.39986205101013184, 0.3934389650821686, 0.4004383981227875, 0.39174535870552063, 0.38441258668899536, 0.39493945240974426, 0.38969194889068604, 0.3856467008590698, 0.37992316484451294, 0.3946821987628937], "val_accuracy": [0.4203333258628845, 0.4716666638851166, 0.6570000052452087, 0.7059999704360962, 0.7206666469573975, 0.7419999837875366, 0.7516666650772095, 0.746666669845581, 0.7443333268165588, 0.7710000276565552, 0.7676666378974915, 0.7829999923706055, 0.7866666913032532, 0.8026666641235352, 0.8009999990463257, 0.8013333082199097, 0.8230000138282776, 0.8103333115577698, 0.8169999718666077, 0.8293333053588867, 0.8276666402816772, 0.824999988079071, 0.8333333134651184, 0.8306666612625122, 0.8330000042915344, 0.8426666855812073, 0.8403333425521851, 0.8389999866485596, 0.8413333296775818, 0.843666672706604, 0.8560000061988831, 0.8556666374206543, 0.8523333072662354, 0.8496666550636292, 0.8503333330154419, 0.8610000014305115, 0.8653333187103271, 0.8583333492279053, 0.862666666507721, 0.8616666793823242, 0.8603333234786987, 0.8636666536331177]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 3], [0, 0, 1, 0, 0], [83, 50, 27], [0, 0, 1], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 6, 4, 6, 7, 1, 5, 1, 5, 9], [2, 5, 6, 2, 2, 5], [0], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 17, 11, 6, 1, 3, 2, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, grad), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(beta, beta)), tf.math.square(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [46595694592.0, 6975454707712.0, 118440635400192.0, 836385019789312.0, 3700401283006464.0, 1.2255207069057024e+16], "accuracy": [0.09787346422672272, 0.09893012791872025, 0.10130762308835983, 0.09866596013307571, 0.09840179979801178, 0.10381719470024109], "val_loss": [478247419904.0, 25783863083008.0, 276749824819200.0, 1509009379033088.0, 5652455597539328.0, 1.6674993630871552e+16], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [8, 1, 3, 1, 3, 8, 6, 8], [0, 0, 1, 0, 2, 3], [83, 30, 27], [1, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 1], [0, 7, 6], [0, 3, 7], [0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 8, 3, 1, 8, 6, 9, 3, 9, 9], [1, 2, 2], [0, 74, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 1, 0, 1, 1, 6, 3, 3, 1, 13, 10, 3, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.sqrt(tf.math.multiply(beta, tf.math.subtract(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [269533088.0, 1.67008700734199e+29, 37397.90625, 11780217.0, NaN, NaN, NaN, NaN], "accuracy": [0.2078985571861267, 0.09747721254825592, 0.09959053993225098, 0.10593052208423615, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2107404172698707e+30, 1290.835205078125, 362687.09375, 125119040.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.10266666859388351, 0.10266666859388351, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 3, 1, 3, 4, 0, 4, 3, 5, 4, 9], [0, 0, 2, 0, 2, 1, 3, 2], [83, 74, 27, 79], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 20, 12, 8, 4, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.multiply(grad, alpha), tf.math.square(tf.math.pow(grad, grad))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309504747390747, 2.30900239944458, 2.310269594192505, 2.3109240531921387, 2.3085148334503174, 2.3097174167633057], "accuracy": [0.08968432247638702, 0.09694888442754745, 0.09457138925790787, 0.09060890227556229, 0.09470347315073013, 0.09192973375320435], "val_loss": [2.308401107788086, 2.308401107788086, 2.308401107788086, 2.308401107788086, 2.308401107788086, 2.308401107788086], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]