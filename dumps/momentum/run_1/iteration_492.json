[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928457260131836, 2.1889984607696533, 1.775441288948059, 1.3420608043670654, 1.0849589109420776, 0.9262602925300598, 0.8494245409965515, 0.8125300407409668, 0.7640546560287476, 0.7284301519393921, 0.7056755423545837, 0.6855054497718811, 0.6634484529495239, 0.6200776100158691, 0.5996964573860168, 0.5935022234916687, 0.5790270566940308, 0.5778992176055908, 0.5509184002876282, 0.5409172773361206, 0.5298208594322205, 0.5194243788719177, 0.5057770609855652, 0.49863383173942566, 0.4930308163166046, 0.47325748205184937, 0.47396549582481384, 0.46358540654182434, 0.45485949516296387, 0.4398486614227295, 0.4376736581325531, 0.41645514965057373, 0.4143001139163971, 0.40249791741371155, 0.4050461947917938, 0.39154404401779175, 0.3945057690143585, 0.38251087069511414, 0.36916276812553406, 0.3563317060470581, 0.3742719292640686, 0.3646748661994934, 0.3561059832572937, 0.34517091512680054], "accuracy": [0.1310262829065323, 0.3280940353870392, 0.43811914324760437, 0.5395588278770447, 0.627129852771759, 0.6577730774879456, 0.6936996579170227, 0.7049266695976257, 0.7046625018119812, 0.7165499925613403, 0.7368907928466797, 0.7308149337768555, 0.7489103078842163, 0.7650244235992432, 0.7664773464202881, 0.7788931727409363, 0.7790252566337585, 0.7770439982414246, 0.7910447716712952, 0.7882710099220276, 0.7932901978492737, 0.8005547523498535, 0.8063663840293884, 0.8042530417442322, 0.8109893202781677, 0.8190463781356812, 0.8096684813499451, 0.8203672170639038, 0.8208954930305481, 0.8264430165290833, 0.828292191028595, 0.8374059200286865, 0.8412362933158875, 0.8442742228507996, 0.845859169960022, 0.8491612672805786, 0.8466516733169556, 0.8524633646011353, 0.8548408150672913, 0.8661999702453613, 0.8536521196365356, 0.8581429123878479, 0.8626337051391602, 0.8663320541381836], "val_loss": [2.2454967498779297, 2.017460823059082, 1.136586308479309, 0.8512954711914062, 0.7590873837471008, 0.7028383016586304, 0.6615163683891296, 0.6356101036071777, 0.6241898536682129, 0.6054413914680481, 0.5657442808151245, 0.5431647300720215, 0.53768390417099, 0.5260607004165649, 0.5109086036682129, 0.5046651363372803, 0.49915608763694763, 0.4921712577342987, 0.47992846369743347, 0.4799880087375641, 0.4710652232170105, 0.4836001694202423, 0.4658057391643524, 0.4579448103904724, 0.4635658264160156, 0.44627684354782104, 0.4423714280128479, 0.4494076371192932, 0.4325581192970276, 0.4250718653202057, 0.42013654112815857, 0.4220150411128998, 0.41155412793159485, 0.40201273560523987, 0.40440723299980164, 0.41087719798088074, 0.4029633700847626, 0.39288967847824097, 0.38985466957092285, 0.3972027897834778, 0.39164119958877563, 0.3818837106227875, 0.37697282433509827, 0.3779754936695099], "val_accuracy": [0.4230000078678131, 0.4909999966621399, 0.6553333401679993, 0.6949999928474426, 0.7200000286102295, 0.7350000143051147, 0.7403333187103271, 0.7596666812896729, 0.7463333606719971, 0.7636666893959045, 0.7730000019073486, 0.7929999828338623, 0.7903333306312561, 0.781333327293396, 0.7946666479110718, 0.7916666865348816, 0.7926666736602783, 0.7993333339691162, 0.809333324432373, 0.8066666722297668, 0.8096666932106018, 0.8006666898727417, 0.8083333373069763, 0.8190000057220459, 0.812666654586792, 0.8203333616256714, 0.8186666369438171, 0.8196666836738586, 0.8286666870117188, 0.8343333601951599, 0.8346666693687439, 0.8376666903495789, 0.840666651725769, 0.843666672706604, 0.8483333587646484, 0.8453333377838135, 0.8506666421890259, 0.8576666712760925, 0.859000027179718, 0.8513333201408386, 0.8493333458900452, 0.8579999804496765, 0.8569999933242798, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 0], [83, 99, 27, 22], [0, 1, 1], [0, 5, 9], [0], [0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 5, 6, 6, 6, 9, 8, 8], [7, 5, 7, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 2, 1, 1, 1, 12, 8, 4, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, grad)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3057522773742676, 2.302586555480957, 2.302586317062378, 2.3025879859924316, 2.302586793899536, 2.302586555480957], "accuracy": [0.09642054885625839, 0.09034473448991776, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302584409713745, 2.3025848865509033, 2.302584648132324, 2.302584409713745, 2.302584409713745, 2.302584171295166], "val_accuracy": [0.10266666859388351, 0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 7, 2, 0, 3], [0, 5, 5, 0], [0, 87, 51], [1, 0, 0, 1, 1], [7, 5, 4], [0, 5], [0], [0, 1, 0, 1], [1, 8], [1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 11, 7, 4, 3, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 3, 1, 3, 1, 9, 2, 6, 3, 0, 4, 8, 3, 0, 1, 5, 6, 5, 0, 4, 4, 3, 5, 0, 5, 7, 7, 9], [0, 0, 1, 0, 2, 2, 1, 0, 0, 3, 3, 3, 1, 2, 0, 0, 3, 0], [83, 99, 27, 70, 73, 61, 10, 74, 40, 20], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 5, 6, 4, 7, 9], [0, 5, 0], [44, 15, 36], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 31, 18, 10, 3, 3, 0, 1, 9, 6, 3, 3, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.multiply(tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.divide_no_nan(grad, tf.math.square(tf.math.negative(tf.math.pow(tf.math.pow(alpha, tf.math.multiply(grad, tf.math.square(tf.math.negative(tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 3, 1, 3], [0, 0, 2, 0, 2], [83, 97, 90], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 6, 4, 2], [0, 5, 1, 7, 6], [0], [0, 1], [8], [1], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 7, 4, 3, 2, 3, 3, 0, 1, 10, 5, 5, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [2.309861660003662, 2.3080055713653564, 2.308765411376953, 2.3079071044921875, 2.306461811065674, 2.307389974594116], "accuracy": [0.0952318087220192, 0.0936468094587326, 0.09034473448991776, 0.09615638852119446, 0.08466517180204391, 0.08466517180204391], "val_loss": [2.3089280128479004, 2.3084006309509277, 2.3077621459960938, 2.307074785232544, 2.306450605392456, 2.305868148803711], "val_accuracy": [0.08833333104848862, 0.08699999749660492, 0.08433333039283752, 0.0846666693687439, 0.08299999684095383, 0.08166666328907013]}}]