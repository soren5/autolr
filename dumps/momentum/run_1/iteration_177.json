[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2944698333740234, 2.189880847930908, 1.7831344604492188, 1.3524765968322754, 1.106734037399292, 0.9327858090400696, 0.8640900254249573, 0.8225681781768799, 0.7858473062515259, 0.7477051019668579, 0.6986727118492126, 0.6862091422080994, 0.650619387626648, 0.6257311105728149, 0.600915253162384, 0.5939885973930359, 0.5826557874679565, 0.5654850006103516, 0.5664875507354736, 0.548098623752594, 0.5358135104179382, 0.5400121808052063, 0.5252813100814819, 0.5161876082420349, 0.49998024106025696, 0.4859619736671448, 0.46705594658851624, 0.46028491854667664, 0.4495388865470886, 0.4393698573112488, 0.44673073291778564, 0.43827328085899353, 0.42465946078300476], "accuracy": [0.12759213149547577, 0.32584863901138306, 0.4237220883369446, 0.5452384352684021, 0.6390172839164734, 0.6609430909156799, 0.684982180595398, 0.696209192276001, 0.6950204968452454, 0.7150970697402954, 0.7339849472045898, 0.7345132827758789, 0.7549861073493958, 0.7565711140632629, 0.7668735980987549, 0.7732135653495789, 0.7728173136711121, 0.7823272943496704, 0.7779685854911804, 0.7857614755630493, 0.7936864495277405, 0.7956677079200745, 0.7954035401344299, 0.7984414100646973, 0.8059701323509216, 0.8140271902084351, 0.8244617581367493, 0.8198388814926147, 0.824329674243927, 0.8294808864593506, 0.8248580098152161, 0.8289526104927063, 0.8321225643157959], "val_loss": [2.247697353363037, 2.0263240337371826, 1.160862922668457, 0.8977465033531189, 0.7881871461868286, 0.7263361215591431, 0.6710855960845947, 0.6717962026596069, 0.6542348861694336, 0.6279192566871643, 0.590689480304718, 0.5546278357505798, 0.5497612953186035, 0.534713625907898, 0.5142670273780823, 0.5078608393669128, 0.5091191530227661, 0.5109183192253113, 0.5093224048614502, 0.5002907514572144, 0.5048190355300903, 0.4884251356124878, 0.478485107421875, 0.47586849331855774, 0.47011083364486694, 0.465958833694458, 0.45458725094795227, 0.45331671833992004, 0.45773518085479736, 0.44656136631965637, 0.43951860070228577, 0.43339693546295166, 0.43033480644226074], "val_accuracy": [0.4313333332538605, 0.4650000035762787, 0.6460000276565552, 0.6903333067893982, 0.7276666760444641, 0.7353333234786987, 0.7403333187103271, 0.7480000257492065, 0.7446666955947876, 0.7673333287239075, 0.7689999938011169, 0.7863333225250244, 0.7856666445732117, 0.8013333082199097, 0.8029999732971191, 0.8073333501815796, 0.8109999895095825, 0.8106666803359985, 0.8006666898727417, 0.812666654586792, 0.8169999718666077, 0.8220000267028809, 0.8259999752044678, 0.8286666870117188, 0.8326666951179504, 0.8343333601951599, 0.8383333086967468, 0.8413333296775818, 0.840666651725769, 0.8383333086967468, 0.8336666822433472, 0.8336666822433472, 0.8360000252723694]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 5, 3, 3, 1, 1, 1, 7, 1, 6, 4, 4, 1, 2, 1, 8, 3, 2, 5, 2, 9, 6, 0, 6, 4, 3, 6, 0, 4, 3, 7, 7, 7, 7, 4, 3, 6, 6, 8, 9], [0, 0, 1, 0, 3, 3, 1, 0, 1, 3, 2, 1, 3, 3, 0, 3, 1, 2, 1, 0, 1, 2, 0, 0, 2, 3, 0, 1, 0, 2, 2, 2, 0, 0], [83, 79, 27, 11, 69, 42, 35, 33, 95, 41, 89, 77, 34, 92], [1, 0, 0], [0, 8, 7], [0], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 5, 6, 4, 0, 6, 0, 6, 2, 0, 1, 1, 3, 0, 4, 0, 5, 9, 9, 2, 0, 2, 4, 5, 7, 7, 5, 3, 4, 1, 5, 6, 2, 3, 4, 3, 6, 7, 6, 9, 4, 5, 0, 7, 7, 5, 6, 1, 1, 0, 5, 0, 3, 5, 3, 0, 9], [7, 3, 7, 4, 3, 6, 1, 7, 0, 6, 7, 7, 2, 4, 1, 0, 1, 4, 2, 5, 4, 5, 3, 4, 5, 5, 4, 2, 0, 0], [0, 84, 53, 99, 71, 49, 39, 35], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 78, 44, 34, 14, 1, 0, 1, 1, 87, 57, 30, 8, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(alpha, tf.math.subtract(tf.math.add(grad, grad), alpha)), grad)), tf.math.subtract(grad, tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), grad), alpha), tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), grad), grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), grad), grad)))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.negative(grad), tf.math.pow(grad, tf.math.negative(sigma))), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)), grad)))), tf.math.negative(tf.math.add(tf.math.pow(tf.math.square(tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.pow(beta, tf.math.multiply(grad, alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha), grad))), beta)))), tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(grad, grad))), grad)), sigma)), grad), tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.subtract(tf.math.negative(tf.math.square(beta)), tf.math.negative(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 8], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 0, 1], [0, 8, 5], [0], [0], [1, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1095421312.0, 21575624704.0, 98926108672.0, 275916816384.0, 597471068160.0, 1087717900288.0], "accuracy": [0.09919429570436478, 0.09377889335155487, 0.09694888442754745, 0.10011887550354004, 0.09826971590518951, 0.10170386731624603], "val_loss": [5051749376.0, 40408817664.0, 136373747712.0, 323250061312.0, 631342563328.0, 1090959245312.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 89], [0, 0, 0], [8, 8, 9], [0], [0], [0, 1, 1, 1, 0], [0, 5, 6], [4, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.0925714299082756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310471296310425, 2.311492681503296, 2.309319496154785, 2.309495449066162, 2.3104240894317627, 2.30898118019104], "accuracy": [0.09153348207473755, 0.08902391046285629, 0.09457138925790787, 0.09615638852119446, 0.09100515395402908, 0.09325055778026581], "val_loss": [2.3093740940093994, 2.3093740940093994, 2.3093740940093994, 2.3093740940093994, 2.3093740940093994, 2.3093740940093994], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 8], [0, 0, 1, 0, 2], [83, 49, 21], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 2, 6, 2, 4, 0, 9], [2, 5, 0, 1], [0, 56], [0, 1, 1], [1], [1, 1], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 1, 11, 7, 4, 2, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, grad), tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, alpha)", "other_info": {"loss": [2.310778856277466, 2.309481620788574, 2.3110694885253906, 2.3097453117370605, 2.3100149631500244, 2.308880567550659], "accuracy": [0.09219389408826828, 0.09774138033390045, 0.08691058307886124, 0.09391097724437714, 0.09681680053472519, 0.08875974267721176], "val_loss": [2.309206962585449, 2.309206962585449, 2.309206962585449, 2.309206962585449, 2.309206962585449, 2.309206962585449], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]