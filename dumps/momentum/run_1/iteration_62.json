[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292945384979248, 2.192328453063965, 1.774018406867981, 1.353202223777771, 1.0921913385391235, 0.9348784685134888, 0.8494668006896973, 0.8171622157096863, 0.774059534072876, 0.7281811833381653, 0.7162209749221802, 0.6846350431442261, 0.6414853930473328, 0.6386528611183167, 0.6139335632324219, 0.6112937331199646, 0.5796117782592773, 0.5688290596008301, 0.5625976324081421, 0.5536097884178162, 0.5354846715927124, 0.527993381023407, 0.5139351487159729, 0.4948439300060272, 0.4910154640674591, 0.48771584033966064, 0.47444868087768555, 0.46746066212654114, 0.45449697971343994, 0.4536294937133789, 0.44150981307029724, 0.43810710310935974, 0.43743225932121277, 0.42580533027648926, 0.4063129127025604, 0.41725432872772217, 0.3981376588344574, 0.37524011731147766, 0.37197789549827576, 0.37888461351394653, 0.37279850244522095, 0.3732382357120514, 0.3631124198436737, 0.35494983196258545, 0.35014745593070984], "accuracy": [0.1270637959241867, 0.3151499032974243, 0.44591203331947327, 0.548540472984314, 0.6347906589508057, 0.6610751748085022, 0.685510516166687, 0.7066437602043152, 0.6960771083831787, 0.7255316376686096, 0.7343811988830566, 0.7436270117759705, 0.7559106945991516, 0.7586844563484192, 0.7724210619926453, 0.7700436115264893, 0.7781006693840027, 0.7810064554214478, 0.7874785661697388, 0.7860256433486938, 0.7975168228149414, 0.7942147850990295, 0.8030643463134766, 0.8119139075279236, 0.8171972036361694, 0.8112534880638123, 0.8178576231002808, 0.8211596608161926, 0.8238013386726379, 0.8289526104927063, 0.8274996876716614, 0.833179235458374, 0.8293488025665283, 0.8378021121025085, 0.839519202709198, 0.843481719493866, 0.8504821062088013, 0.8533879518508911, 0.8610487580299377, 0.8536521196365356, 0.8581429123878479, 0.8605204224586487, 0.8609166741371155, 0.8602562546730042, 0.8634262084960938], "val_loss": [2.2464704513549805, 2.0195469856262207, 1.1326329708099365, 0.851810872554779, 0.7401027083396912, 0.6833572387695312, 0.6579920649528503, 0.6202686429023743, 0.6033836007118225, 0.5917690992355347, 0.5432078242301941, 0.5315549373626709, 0.4991503059864044, 0.49354344606399536, 0.4829936623573303, 0.4780644178390503, 0.46999841928482056, 0.46546614170074463, 0.46164384484291077, 0.44316160678863525, 0.4332003593444824, 0.4336149990558624, 0.4236716628074646, 0.4265557527542114, 0.42872777581214905, 0.40762344002723694, 0.3960361182689667, 0.3929457664489746, 0.39169156551361084, 0.39449453353881836, 0.3895190358161926, 0.3837428390979767, 0.37457379698753357, 0.37348484992980957, 0.39211389422416687, 0.38974031805992126, 0.38516008853912354, 0.3778017461299896, 0.3718109130859375, 0.3743151128292084, 0.38323697447776794, 0.37652623653411865, 0.3864278495311737, 0.4018252491950989, 0.3887445330619812], "val_accuracy": [0.43033334612846375, 0.46700000762939453, 0.6476666927337646, 0.7026666402816772, 0.7289999723434448, 0.7593333125114441, 0.7519999742507935, 0.7606666684150696, 0.7706666588783264, 0.7836666703224182, 0.7863333225250244, 0.7910000085830688, 0.8009999990463257, 0.8083333373069763, 0.8130000233650208, 0.8143333196640015, 0.8100000023841858, 0.8140000104904175, 0.8133333325386047, 0.8209999799728394, 0.8256666660308838, 0.8333333134651184, 0.8420000076293945, 0.8379999995231628, 0.8483333587646484, 0.8533333539962769, 0.8560000061988831, 0.8566666841506958, 0.8526666760444641, 0.8516666889190674, 0.8556666374206543, 0.862333357334137, 0.8629999756813049, 0.8669999837875366, 0.8619999885559082, 0.8610000014305115, 0.8613333106040955, 0.8683333396911621, 0.8669999837875366, 0.871666669845581, 0.8693333268165588, 0.8683333396911621, 0.8690000176429749, 0.8679999709129333, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 5], [0, 5], [0], [1, 1], [4], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9329084562813747e+19, 30.26923942565918, 79.25995635986328, 137.59298706054688, 199.843994140625, 264.50836181640625], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14.267650604248047, 57.013282775878906, 112.99004364013672, 173.6722869873047, 237.45181274414062, 303.0386962890625], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 0, 3], [0, 0, 1, 0, 2, 0], [83, 28, 27, 46], [0, 0, 0, 0, 0, 1], [0, 7, 9, 0, 0], [0], [0, 23], [0, 0, 0, 1, 1], [0, 5, 6], [3, 5], [0], [0, 0, 1, 1, 1], [7, 2], [1, 3, 3], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, sigma), sigma)", "other_info": {"loss": [2.303617238998413, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.302584648132324, 2.3025851249694824, 2.302584409713745, 2.302584171295166], "accuracy": [0.10157178342342377, 0.10328886657953262, 0.09840179979801178, 0.10011887550354004, 0.1002509593963623, 0.1014397069811821, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.10342095047235489], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025856018066406, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025858402252197, 2.302586317062378], "val_accuracy": [0.09733333438634872, 0.09700000286102295, 0.09733333438634872, 0.09733333438634872, 0.10166666656732559, 0.10000000149011612, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09733333438634872]}, "mapping_values": [1, 13, 7, 6, 4, 6, 5, 1, 2, 5, 3, 2, 0, 5, 2, 3, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 3, 5, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 8, 4, 4, 9, 8, 1], [0, 1, 4], [0, 40], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 7, 3, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1111941632.0, 21289318400.0, 95882182656.0, 276726841344.0, 588407898112.0, 1089232502784.0], "accuracy": [0.1014397069811821, 0.10434553027153015, 0.10210011899471283, 0.09747721254825592, 0.09853387624025345, 0.09879804402589798], "val_loss": [5105042432.0, 40835284992.0, 137813704704.0, 326662848512.0, 638008688640.0, 1102460354560.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 93], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4084.526123046875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21344605088233948, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [45205569536.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.05833333358168602, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]