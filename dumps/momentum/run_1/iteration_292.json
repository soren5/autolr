[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292980909347534, 2.188849449157715, 1.7639951705932617, 1.350969672203064, 1.0613888502120972, 0.9071721434593201, 0.8263253569602966, 0.8042820692062378, 0.7555232048034668, 0.7352901101112366, 0.7007855772972107, 0.665014386177063, 0.6514461040496826, 0.629172682762146, 0.6075624227523804, 0.5918999910354614, 0.5782337188720703, 0.5808094143867493, 0.5557575821876526, 0.5518810749053955, 0.5446037650108337, 0.528043806552887, 0.5199048519134521, 0.5012201070785522, 0.49836546182632446, 0.48646554350852966, 0.46816933155059814, 0.46165731549263, 0.46358051896095276, 0.44953951239585876, 0.44042539596557617, 0.42058637738227844, 0.42459380626678467, 0.4117487072944641, 0.4068194031715393, 0.40084517002105713, 0.3860190212726593, 0.3796856105327606, 0.3862471580505371, 0.37167319655418396, 0.3775549829006195, 0.3580664098262787, 0.3578381836414337, 0.3470737338066101, 0.3551095128059387], "accuracy": [0.13195087015628815, 0.34447231888771057, 0.4410249590873718, 0.5493329763412476, 0.6351869106292725, 0.6680755615234375, 0.7029454708099365, 0.7104741930961609, 0.7088891863822937, 0.7220974564552307, 0.7316074371337891, 0.7481178045272827, 0.7560427784919739, 0.7531369924545288, 0.7714964747428894, 0.7726852297782898, 0.780610203742981, 0.7841764688491821, 0.789459764957428, 0.7930260300636292, 0.7932901978492737, 0.7985734939575195, 0.802800178527832, 0.8103289008140564, 0.8105930685997009, 0.8094043135643005, 0.8231409192085266, 0.8251221776008606, 0.8284242749214172, 0.828292191028595, 0.8301413059234619, 0.8358209133148193, 0.8384625315666199, 0.8448025584220886, 0.8432175517082214, 0.850350022315979, 0.8529917001724243, 0.8541803956031799, 0.8539162874221802, 0.8557654023170471, 0.8558974862098694, 0.8569541573524475, 0.8613129258155823, 0.8647470474243164, 0.8621054291725159], "val_loss": [2.247009515762329, 2.0180139541625977, 1.1258938312530518, 0.8563655614852905, 0.7684406638145447, 0.7120893001556396, 0.6965051889419556, 0.6584240198135376, 0.6374707818031311, 0.6298835277557373, 0.5876197218894958, 0.5738338232040405, 0.5535141825675964, 0.5481628179550171, 0.5444677472114563, 0.5319543480873108, 0.5224776268005371, 0.5109848380088806, 0.5140109658241272, 0.5011873841285706, 0.5000511407852173, 0.4874047040939331, 0.4758835434913635, 0.4842830300331116, 0.4668809473514557, 0.46412304043769836, 0.46111825108528137, 0.46722713112831116, 0.4437849223613739, 0.4454214572906494, 0.4575253129005432, 0.4416123926639557, 0.43769076466560364, 0.43696606159210205, 0.42714232206344604, 0.42490315437316895, 0.4294833242893219, 0.4287703335285187, 0.41082316637039185, 0.4160066246986389, 0.42043954133987427, 0.43241044878959656, 0.4395313262939453, 0.42218393087387085, 0.4195365011692047], "val_accuracy": [0.41600000858306885, 0.46299999952316284, 0.6430000066757202, 0.6936666369438171, 0.7110000252723694, 0.7316666841506958, 0.7333333492279053, 0.7429999709129333, 0.7506666779518127, 0.7513333559036255, 0.7723333239555359, 0.7726666927337646, 0.7716666460037231, 0.7806666493415833, 0.7919999957084656, 0.800000011920929, 0.7983333468437195, 0.8009999990463257, 0.8113333582878113, 0.8109999895095825, 0.79666668176651, 0.8180000185966492, 0.8206666707992554, 0.8180000185966492, 0.8266666531562805, 0.8293333053588867, 0.831333339214325, 0.8349999785423279, 0.8376666903495789, 0.8366666436195374, 0.8353333473205566, 0.847000002861023, 0.8446666598320007, 0.843999981880188, 0.8503333330154419, 0.8546666502952576, 0.8510000109672546, 0.8550000190734863, 0.8573333621025085, 0.8586666584014893, 0.8566666841506958, 0.8539999723434448, 0.8550000190734863, 0.8550000190734863, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 2, 2], [83, 99, 27], [0, 0, 0, 1], [0, 8, 0], [0], [0], [0, 0, 0, 1, 1], [0, 5, 2], [0, 5], [0], [0, 1, 1], [2], [3, 0], [0]], "fitness": -0.10999999940395355, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.308586359024048, 2.3028736114501953, 2.302023410797119, 2.302428960800171, 2.3027303218841553, 2.302769184112549, 2.302793025970459, 2.3028509616851807, 2.303053855895996], "accuracy": [0.0944393053650856, 0.09272222965955734, 0.09113723784685135, 0.0940430611371994, 0.11359133571386337, 0.10276053100824356, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3031742572784424, 2.301086187362671, 2.30212664604187, 2.30261492729187, 2.3027706146240234, 2.302811622619629, 2.3028993606567383, 2.3030683994293213, 2.303312301635742], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.10533333569765091, 0.11766666918992996, 0.10100000351667404, 0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 6, 3, 3, 1, 4, 3, 1, 1, 5, 3, 2, 1, 3, 1, 2, 1], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 1], [0, 0, 1, 0, 3, 3], [75, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 3, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 3, 1, 3, 7, 7], [0, 0, 1, 0, 2, 1, 0, 2], [83, 99, 27, 39], [0, 0, 0], [0, 0, 9], [0], [20], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 7, 8, 4, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 0, 1], [4, 8, 9], [0], [34, 76], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 5, 6, 1, 8, 4, 1, 2, 7, 1, 7, 6, 2, 0, 1, 3, 3, 5, 9, 2, 4, 4, 1, 5, 1, 5, 0, 4, 3, 2, 2, 9, 6, 8, 1, 5, 9], [0, 5, 1, 0, 0, 1, 5, 6, 5, 4, 4, 6, 2, 4, 6, 5, 0, 1, 5, 1, 2, 1], [0, 87, 43, 5, 25, 88, 60], [0, 1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 59, 37, 22, 7, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(grad), tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.multiply(tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.math.pow(tf.math.pow(grad, grad), tf.math.subtract(beta, grad)), tf.math.square(grad))), grad)))), tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.subtract(tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3090426921844482, 2.3095247745513916, 2.3095593452453613, 2.3093388080596924, 2.3104538917541504, 2.3105881214141846], "accuracy": [0.09536388516426086, 0.09113723784685135, 0.09259014576673508, 0.08968432247638702, 0.09047681838274002, 0.08625016361474991], "val_loss": [2.308889389038086, 2.308889389038086, 2.308889389038086, 2.308889389038086, 2.308889389038086, 2.308889389038086], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]