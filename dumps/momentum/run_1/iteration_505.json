[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293567419052124, 2.1901378631591797, 1.7658005952835083, 1.3765945434570312, 1.0644406080245972, 0.904228150844574, 0.8499429225921631, 0.8137772679328918, 0.7626698017120361, 0.7357408404350281, 0.6924005746841431, 0.6658322811126709, 0.6450896263122559, 0.6313600540161133, 0.613452136516571, 0.6030444502830505, 0.5708332061767578, 0.569660484790802, 0.5453022718429565, 0.5442545413970947, 0.529015839099884, 0.5219365954399109, 0.5119757652282715, 0.5125458836555481, 0.48411521315574646, 0.48439478874206543, 0.48496827483177185, 0.4652230441570282, 0.4537111818790436, 0.453192800283432, 0.4453170895576477, 0.44794565439224243, 0.43459242582321167, 0.42301100492477417, 0.41429388523101807, 0.4020889401435852, 0.38550594449043274, 0.3981219530105591, 0.3933292031288147, 0.37848150730133057, 0.38226139545440674], "accuracy": [0.12851670384407043, 0.32967904210090637, 0.4357416331768036, 0.5395588278770447, 0.6363756656646729, 0.6671509742736816, 0.6828688383102417, 0.6988508701324463, 0.7112666964530945, 0.7162858247756958, 0.7342491149902344, 0.7477215528488159, 0.7528728246688843, 0.7600052952766418, 0.7648923397064209, 0.7708360552787781, 0.78113853931427, 0.7835160493850708, 0.791441023349762, 0.8000264167785645, 0.7994980812072754, 0.802800178527832, 0.806630551815033, 0.8094043135643005, 0.8169330358505249, 0.816008448600769, 0.8149517774581909, 0.8251221776008606, 0.828820526599884, 0.8260467648506165, 0.8297450542449951, 0.8281601071357727, 0.8322546482086182, 0.8454629778862, 0.843481719493866, 0.8477083444595337, 0.8536521196365356, 0.8486329317092896, 0.8597279191017151, 0.8564258217811584, 0.8580108284950256], "val_loss": [2.246460199356079, 2.0207111835479736, 1.1421194076538086, 0.893830418586731, 0.7617830634117126, 0.7110241055488586, 0.671302080154419, 0.6458489298820496, 0.6495144367218018, 0.6201679110527039, 0.5809275507926941, 0.5671713948249817, 0.5480477809906006, 0.5390824675559998, 0.5429835319519043, 0.5146663188934326, 0.505333662033081, 0.5013070106506348, 0.4948667883872986, 0.4845595359802246, 0.47836101055145264, 0.4687078893184662, 0.46782612800598145, 0.4666363596916199, 0.4531354308128357, 0.45002368092536926, 0.44963666796684265, 0.4326747953891754, 0.43353506922721863, 0.4323267340660095, 0.42944782972335815, 0.4161463975906372, 0.41061946749687195, 0.40419986844062805, 0.396538645029068, 0.39227035641670227, 0.3977152109146118, 0.40722396969795227, 0.3867752254009247, 0.38447850942611694, 0.39132699370384216], "val_accuracy": [0.4046666622161865, 0.46166667342185974, 0.6446666717529297, 0.6883333325386047, 0.7170000076293945, 0.7413333058357239, 0.7409999966621399, 0.7586666941642761, 0.7573333382606506, 0.7673333287239075, 0.7733333110809326, 0.784333348274231, 0.784333348274231, 0.7926666736602783, 0.7943333387374878, 0.8013333082199097, 0.8023333549499512, 0.8069999814033508, 0.8113333582878113, 0.8086666464805603, 0.8180000185966492, 0.8136666417121887, 0.8240000009536743, 0.8320000171661377, 0.8253333568572998, 0.8320000171661377, 0.8343333601951599, 0.8433333039283752, 0.8363333344459534, 0.8356666564941406, 0.8396666646003723, 0.8496666550636292, 0.8513333201408386, 0.8583333492279053, 0.859666645526886, 0.8646666407585144, 0.859666645526886, 0.8619999885559082, 0.8643333315849304, 0.8640000224113464, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 0, 3], [0, 3, 1, 0, 0], [90, 99, 27], [1, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.1697142869234085, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.361811399459839, 2.264340400695801, 2.3187458515167236, 2.310974359512329, 2.304046630859375, 2.3030333518981934, 2.3031821250915527], "accuracy": [0.19416193664073944, 0.14991414546966553, 0.17804782092571259, 0.09774138033390045, 0.10157178342342377, 0.10408136248588562, 0.09377889335155487], "val_loss": [2.2199268341064453, 2.2965211868286133, 2.3200478553771973, 2.304746150970459, 2.3030922412872314, 2.3027443885803223, 2.3026504516601562], "val_accuracy": [0.1433333307504654, 0.1743333339691162, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027, 0.09933333098888397, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 3, 1, 9], [0, 0, 0, 1, 0], [83, 99, 27], [1, 0, 0], [0, 2, 7], [0], [6], [0, 0, 0, 1, 1], [0, 5, 6], [0, 4], [0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 7, 3, 0, 3, 4, 0, 7, 8, 4, 4, 4, 9, 6, 6], [1, 2, 5, 0, 7, 0, 6, 0, 5, 6, 3, 1], [0, 27, 77, 21, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 5, 3, 2, 1, 32, 20, 12, 5], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.pow(grad, tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(grad, sigma))))), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 1], [83, 99, 27], [0, 0, 0, 1], [4, 8, 9], [0], [0, 96], [1, 0, 1, 1, 0], [2, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3089678287506104, 2.309749126434326, 2.310011625289917, 2.3089330196380615, 2.308966875076294, 2.310392141342163], "accuracy": [0.09285431355237961, 0.09496764093637466, 0.0948355570435524, 0.08955223858356476, 0.09298639744520187, 0.09272222965955734], "val_loss": [2.308584690093994, 2.308584690093994, 2.308584690093994, 2.308584690093994, 2.308584690093994, 2.308584690093994], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [22, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 1], [1, 5, 6], [0, 5, 5], [0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 6, 3, 9, 9, 1, 5, 5], [1, 4, 0], [0, 10, 12]], "fitness": -0.087714284658432, "mapping_values": [1, 6, 3, 3, 1, 3, 3, 0, 1, 6, 3, 3, 1, 11, 8, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(grad), tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3106894493103027, 2.3103041648864746, 2.311453104019165, 2.3101601600646973, 2.3106369972229004, 2.30881929397583], "accuracy": [0.08572183549404144, 0.09708096832036972, 0.09219389408826828, 0.0940430611371994, 0.09232597798109055, 0.09470347315073013], "val_loss": [2.309351682662964, 2.309351682662964, 2.309351682662964, 2.309351682662964, 2.309351682662964, 2.309351682662964], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]