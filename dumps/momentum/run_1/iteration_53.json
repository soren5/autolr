[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2945284843444824, 2.1919546127319336, 1.7853670120239258, 1.3787473440170288, 1.1061270236968994, 0.9591591358184814, 0.8918628692626953, 0.8483086824417114, 0.8165217638015747, 0.7728127241134644, 0.7458808422088623, 0.7180016040802002, 0.696354866027832, 0.6714974045753479, 0.6481714844703674, 0.6253960132598877, 0.6157826781272888, 0.6042131185531616, 0.5937365293502808, 0.5792065858840942, 0.5669088959693909, 0.5397435426712036, 0.5370606780052185, 0.520106315612793, 0.5289266109466553, 0.5060396194458008, 0.5059927105903625, 0.4945484697818756, 0.4816465973854065, 0.48099076747894287, 0.4555232524871826, 0.4553026556968689, 0.45136740803718567, 0.4487679898738861, 0.42743319272994995, 0.43744781613349915, 0.4258688986301422, 0.42750585079193115, 0.42094749212265015, 0.4080777168273926], "accuracy": [0.12138422578573227, 0.33179235458374023, 0.42808082699775696, 0.5275393128395081, 0.6255448460578918, 0.6465460062026978, 0.6757363677024841, 0.6881521344184875, 0.6843217611312866, 0.713908314704895, 0.7177387475967407, 0.7250033020973206, 0.7436270117759705, 0.7493065595626831, 0.7565711140632629, 0.7658169269561768, 0.7692511081695557, 0.7726852297782898, 0.783119797706604, 0.7791573405265808, 0.7897239327430725, 0.7987055778503418, 0.7998943328857422, 0.8058380484580994, 0.8004226684570312, 0.8100647330284119, 0.8153480291366577, 0.817989706993103, 0.8162726163864136, 0.81548011302948, 0.8232730031013489, 0.8335754871368408, 0.833179235458374, 0.8224804997444153, 0.8378021121025085, 0.8342359066009521, 0.842028796672821, 0.8372738361358643, 0.8401796221733093, 0.8462554216384888], "val_loss": [2.2469289302825928, 2.026618480682373, 1.147245168685913, 0.8624687790870667, 0.7819638848304749, 0.7133094072341919, 0.6695152521133423, 0.6538258790969849, 0.6494649052619934, 0.6251672506332397, 0.5822330713272095, 0.5660157203674316, 0.5478435754776001, 0.5368678569793701, 0.5272947549819946, 0.5240492224693298, 0.5306416153907776, 0.5157459378242493, 0.501853346824646, 0.49280133843421936, 0.48271939158439636, 0.47576090693473816, 0.46107882261276245, 0.4535464644432068, 0.4430261254310608, 0.4450739026069641, 0.44129273295402527, 0.4341166317462921, 0.43956825137138367, 0.4273010194301605, 0.42239314317703247, 0.4154108166694641, 0.40929922461509705, 0.401044636964798, 0.41459667682647705, 0.41096600890159607, 0.40891316533088684, 0.3962172567844391, 0.4007258415222168, 0.4062687158584595], "val_accuracy": [0.4273333251476288, 0.4713333249092102, 0.6499999761581421, 0.6919999718666077, 0.7160000205039978, 0.7353333234786987, 0.7429999709129333, 0.7523333430290222, 0.7586666941642761, 0.7599999904632568, 0.7723333239555359, 0.7776666879653931, 0.7826666831970215, 0.7993333339691162, 0.7886666655540466, 0.7946666479110718, 0.8003333210945129, 0.8096666932106018, 0.8053333163261414, 0.8029999732971191, 0.8176666498184204, 0.8199999928474426, 0.8193333148956299, 0.8286666870117188, 0.8366666436195374, 0.8349999785423279, 0.8433333039283752, 0.843666672706604, 0.8366666436195374, 0.8456666469573975, 0.8493333458900452, 0.8513333201408386, 0.8476666808128357, 0.8529999852180481, 0.8586666584014893, 0.8560000061988831, 0.8506666421890259, 0.8543333411216736, 0.8526666760444641, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 2], [23, 99, 27], [0, 0, 0], [8, 8, 9], [0], [0], [0, 1, 0, 1, 0], [0, 5, 1], [0, 5], [27], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 6, 1, 6, 4, 0, 7, 8, 5, 3, 4, 2, 0, 2, 4, 1, 7, 5], [0, 0, 1, 0, 2, 3, 3, 3, 2, 3, 0, 1, 3, 2], [66, 99, 27, 6], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 19, 14, 4, 2, 1, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(grad, grad)))), tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.pow(tf.math.subtract(grad, tf.math.add(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), alpha)))), grad), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1], [0, 8, 9], [0], [0], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [24], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 6, 6, 8, 6, 4, 3, 4, 1, 2, 2, 9, 0, 4, 6, 0, 4, 7, 0, 1, 1, 4, 2, 5, 1, 8, 2, 2], [1, 4, 5, 1, 1, 3, 6, 7, 5, 7, 7, 1, 3, 0, 3, 6, 7, 1, 2, 1], [0, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 49, 29, 20, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, grad), tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(alpha, sigma)))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.subtract(grad, grad)), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.square(tf.math.subtract(grad, alpha)), tf.math.sqrt(sigma)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), sigma)))))), tf.math.add(grad, grad))), tf.math.add(alpha, beta))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 0, 2, 4, 1, 2, 6, 6], [0, 0, 1, 0, 2, 3, 1, 1, 1, 2, 1], [63, 99, 27], [0, 1, 0], [0, 8, 5], [0], [26], [0, 0, 0, 1, 1], [0, 5, 4], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 3, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), alpha)), alpha), alpha))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]