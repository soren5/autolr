[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934021949768066, 2.190774440765381, 1.769816279411316, 1.3399723768234253, 1.100622296333313, 0.9261882305145264, 0.8565831780433655, 0.8304848074913025, 0.7527039647102356, 0.7317994832992554, 0.6958326697349548, 0.6748549938201904, 0.6569024324417114, 0.6246561408042908, 0.6025375127792358, 0.5980629920959473, 0.5815971493721008, 0.5800183415412903, 0.5589619874954224, 0.5567966103553772, 0.5364710092544556, 0.5298589468002319, 0.5128273963928223, 0.5010494589805603, 0.49546268582344055, 0.4944770038127899, 0.4845459461212158, 0.4856574237346649, 0.4606185555458069, 0.44724443554878235, 0.4458589553833008, 0.4365989863872528, 0.43021315336227417, 0.4168359637260437, 0.41106632351875305, 0.40747666358947754, 0.39657995104789734, 0.39683660864830017, 0.37708818912506104, 0.3731269836425781, 0.3773457109928131], "accuracy": [0.13089419901371002, 0.3365473449230194, 0.44644036889076233, 0.5513142347335815, 0.6297714710235596, 0.665830135345459, 0.681547999382019, 0.6947563290596008, 0.7057191729545593, 0.7165499925613403, 0.733588695526123, 0.7413815855979919, 0.7441553473472595, 0.7688548564910889, 0.7693831920623779, 0.7664773464202881, 0.7771760821342468, 0.7820631265640259, 0.7853652238845825, 0.7922335267066956, 0.7971205711364746, 0.7903843522071838, 0.8086118102073669, 0.8075551390647888, 0.8094043135643005, 0.8115176558494568, 0.8141592741012573, 0.8177255392074585, 0.8257825970649719, 0.8259146809577942, 0.8281601071357727, 0.8298771381378174, 0.8343679904937744, 0.8430854678153992, 0.8499537706375122, 0.8417646288871765, 0.845859169960022, 0.847840428352356, 0.8541803956031799, 0.860652506351471, 0.8570862412452698], "val_loss": [2.2458479404449463, 2.0180857181549072, 1.1238915920257568, 0.8345642685890198, 0.7398777604103088, 0.6769177317619324, 0.6714941263198853, 0.6390728950500488, 0.6177973747253418, 0.5917967557907104, 0.5609799027442932, 0.5468085408210754, 0.533440351486206, 0.515362560749054, 0.513072669506073, 0.5138676166534424, 0.49328532814979553, 0.4886561334133148, 0.4944649636745453, 0.4816639721393585, 0.49081501364707947, 0.48086416721343994, 0.47853541374206543, 0.45476406812667847, 0.45033106207847595, 0.44660457968711853, 0.4435078501701355, 0.4308779835700989, 0.42386409640312195, 0.43178319931030273, 0.4234718084335327, 0.4234165847301483, 0.4308552145957947, 0.4237939417362213, 0.41209855675697327, 0.4016927182674408, 0.409590482711792, 0.4101150333881378, 0.4038383662700653, 0.41807323694229126, 0.4098465144634247], "val_accuracy": [0.4286666810512543, 0.476666659116745, 0.6620000004768372, 0.7026666402816772, 0.7413333058357239, 0.7506666779518127, 0.749666690826416, 0.7593333125114441, 0.7749999761581421, 0.7706666588783264, 0.7789999842643738, 0.7916666865348816, 0.7906666398048401, 0.79666668176651, 0.8016666769981384, 0.8003333210945129, 0.812333345413208, 0.8119999766349792, 0.8046666383743286, 0.8163333535194397, 0.815666675567627, 0.8240000009536743, 0.812333345413208, 0.8276666402816772, 0.8323333263397217, 0.8370000123977661, 0.8323333263397217, 0.8433333039283752, 0.8496666550636292, 0.8463333249092102, 0.8426666855812073, 0.8403333425521851, 0.8523333072662354, 0.8519999980926514, 0.8529999852180481, 0.8613333106040955, 0.8579999804496765, 0.8556666374206543, 0.8576666712760925, 0.8603333234786987, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 8, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 0], [5, 6], [0], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08730682730674744, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 5, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 0, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035247325897217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [16, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1], [1, 8, 7, 9, 3], [0, 5, 4], [0, 88], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 5, 6, 2, 4, 1, 2, 1, 9], [0, 5, 6, 4, 7, 6], [0, 57], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 15, 9, 6, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.add(grad, grad), grad)), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038313388824463, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 2, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 6, 1, 3, 2, 8, 9, 7, 3, 3, 7, 6, 4, 5, 1, 7, 6, 6, 5, 7, 9, 7, 2, 5, 1, 7, 3, 4, 8, 0, 1, 7, 7, 2, 2, 4, 9], [0, 5, 1, 4, 1, 6, 2, 4, 3, 4, 3, 2, 2, 0, 0, 0, 2, 4, 0, 3, 4, 4, 5, 1, 2, 7], [0, 20, 70, 39, 15, 91, 48, 18], [0, 0, 0, 1], [0, 8, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 64, 38, 26, 8, 4, 3, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(grad, alpha)), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(tf.math.subtract(beta, grad)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(grad), sigma), tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.negative(beta)), tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), grad), grad)), grad)), alpha)))))), beta), tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]