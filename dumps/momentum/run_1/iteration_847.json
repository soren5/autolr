[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939014434814453, 2.1927835941314697, 1.7849308252334595, 1.3453731536865234, 1.0865038633346558, 0.938444197177887, 0.8503115773200989, 0.8232823610305786, 0.7838189005851746, 0.7587183117866516, 0.7098549008369446, 0.6828259825706482, 0.6483184099197388, 0.6329262256622314, 0.610274612903595, 0.5945060849189758, 0.5714473128318787, 0.5674040913581848, 0.5608498454093933, 0.5498811602592468, 0.5226684808731079, 0.527924120426178, 0.5024139881134033, 0.5013918280601501, 0.4962424635887146, 0.47661784291267395, 0.4707984924316406, 0.47402697801589966, 0.4582916796207428, 0.44943132996559143, 0.43738871812820435, 0.4319908916950226, 0.4206540584564209, 0.42042654752731323, 0.42126160860061646, 0.40891072154045105, 0.4106420576572418, 0.3871036469936371, 0.3971291184425354, 0.3687971830368042, 0.36963871121406555, 0.3638196289539337, 0.36067113280296326, 0.35047751665115356, 0.34968677163124084, 0.3576762080192566], "accuracy": [0.12495046854019165, 0.32201823592185974, 0.43851539492607117, 0.5457667708396912, 0.6346585750579834, 0.6577730774879456, 0.6897371411323547, 0.6993792057037354, 0.7037379741668701, 0.7150970697402954, 0.7331924438476562, 0.7458723783493042, 0.7524765729904175, 0.7552502751350403, 0.7640998363494873, 0.7729493975639343, 0.7773081660270691, 0.7847048044204712, 0.7897239327430725, 0.7907806038856506, 0.7988376617431641, 0.7985734939575195, 0.8096684813499451, 0.8070268034934998, 0.8058380484580994, 0.8182538747787476, 0.8183859586715698, 0.8208954930305481, 0.8234050869941711, 0.8298771381378174, 0.8317263126373291, 0.8339717388153076, 0.848368763923645, 0.8479725122451782, 0.8442742228507996, 0.8500858545303345, 0.8448025584220886, 0.8576145768165588, 0.8495575189590454, 0.8590674996376038, 0.8603883385658264, 0.8609166741371155, 0.8642187118530273, 0.8654074668884277, 0.8733324408531189, 0.8634262084960938], "val_loss": [2.245887517929077, 2.023869514465332, 1.1460670232772827, 0.8783681392669678, 0.779531717300415, 0.724550187587738, 0.7127636671066284, 0.6892203688621521, 0.6513177156448364, 0.6333996653556824, 0.5936158299446106, 0.5726503729820251, 0.5534023642539978, 0.5473486185073853, 0.543307363986969, 0.5307556390762329, 0.5200859904289246, 0.5244307518005371, 0.5168370604515076, 0.5209561586380005, 0.515683650970459, 0.5120567083358765, 0.5047654509544373, 0.4900822043418884, 0.4835672676563263, 0.4793301224708557, 0.4714415669441223, 0.4610276222229004, 0.45733779668807983, 0.45815473794937134, 0.4441351592540741, 0.4438396096229553, 0.44832149147987366, 0.44144463539123535, 0.4325818717479706, 0.4286132752895355, 0.4358363151550293, 0.41918686032295227, 0.42409729957580566, 0.43139293789863586, 0.4345870316028595, 0.42277124524116516, 0.43103888630867004, 0.45307233929634094, 0.45025503635406494, 0.44887539744377136], "val_accuracy": [0.41733333468437195, 0.4819999933242798, 0.6549999713897705, 0.6919999718666077, 0.7213333249092102, 0.7310000061988831, 0.7296666502952576, 0.7453333139419556, 0.7456666827201843, 0.7663333415985107, 0.7670000195503235, 0.7733333110809326, 0.7866666913032532, 0.7889999747276306, 0.7923333048820496, 0.793666660785675, 0.8006666898727417, 0.8029999732971191, 0.8146666884422302, 0.8076666593551636, 0.8086666464805603, 0.8116666674613953, 0.8233333230018616, 0.8273333311080933, 0.8289999961853027, 0.828000009059906, 0.8366666436195374, 0.8403333425521851, 0.840666651725769, 0.840666651725769, 0.847000002861023, 0.8460000157356262, 0.8456666469573975, 0.8450000286102295, 0.8473333120346069, 0.8550000190734863, 0.8566666841506958, 0.859666645526886, 0.8606666922569275, 0.8606666922569275, 0.8653333187103271, 0.8629999756813049, 0.8610000014305115, 0.8576666712760925, 0.8553333282470703, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 6, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0], [0, 5, 6, 9], [0, 5], [93, 47], [0, 0, 0, 1], [0, 5, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 4, 1, 2, 4, 3, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(alpha)))", "other_info": {"loss": [2.3107106685638428, 1.8565292074499246e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308042049407959, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 1, 1], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 1], [0, 3, 6, 8], [0, 5, 2], [0], [0, 1, 1], [4], [7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 7, 4, 3, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, sigma)", "other_info": {"loss": [2.3036017417907715, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 5, 4, 5, 1, 2, 1, 8], [0, 0, 2, 0, 3, 3, 0, 2, 1], [83, 40, 27, 34], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 7, 6, 5, 5, 0], [0, 3, 4], [0], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 4, 10, 7, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), tf.math.subtract(tf.math.add(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [1, 1, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0, 1, 0], [0, 6, 7, 9], [1, 3], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 1, 0, 1, 1, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.31174635887146, 2.3090429306030273, 2.3104217052459717, 2.3108177185058594, 2.309837818145752, 2.309211254119873], "accuracy": [0.09153348207473755, 0.09681680053472519, 0.09100515395402908, 0.08994849026203156, 0.09391097724437714, 0.08902391046285629], "val_loss": [2.3079185485839844, 2.3079185485839844, 2.3079185485839844, 2.3079185485839844, 2.3079185485839844, 2.3079185485839844], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]