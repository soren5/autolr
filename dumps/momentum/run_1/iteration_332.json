[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926859855651855, 2.1887760162353516, 1.7722193002700806, 1.3789767026901245, 1.0814520120620728, 0.9406543970108032, 0.8625982403755188, 0.8306154608726501, 0.7737143635749817, 0.7412153482437134, 0.6912882328033447, 0.6907871961593628, 0.6486363410949707, 0.6298062801361084, 0.618165910243988, 0.6134889125823975, 0.5903646945953369, 0.5760086178779602, 0.5574831962585449, 0.5615259408950806, 0.5544953942298889, 0.5355697274208069, 0.5275290012359619, 0.5137547254562378, 0.5040841102600098, 0.49511826038360596, 0.4874483346939087, 0.48162031173706055, 0.462578147649765, 0.4608488976955414, 0.4505031108856201, 0.4381517469882965, 0.429537832736969, 0.43070876598358154, 0.4183749854564667, 0.41140323877334595, 0.406685471534729, 0.39960938692092896, 0.400530070066452, 0.39107513427734375, 0.3802837133407593, 0.3833099603652954, 0.381168007850647, 0.3636801242828369, 0.36371615529060364, 0.36037522554397583, 0.34835243225097656], "accuracy": [0.12178047746419907, 0.31964072585105896, 0.4313828945159912, 0.5280676484107971, 0.6302998065948486, 0.6592260003089905, 0.6955488324165344, 0.696209192276001, 0.6999075412750244, 0.7176066637039185, 0.7302865982055664, 0.7343811988830566, 0.7516840696334839, 0.7532690763473511, 0.7594769597053528, 0.7630431652069092, 0.7725531458854675, 0.7800818681716919, 0.7839123010635376, 0.7823272943496704, 0.7952714562416077, 0.7923656105995178, 0.7924976944923401, 0.800818920135498, 0.8058380484580994, 0.8053097128868103, 0.8087438941001892, 0.8090080618858337, 0.8169330358505249, 0.8251221776008606, 0.8248580098152161, 0.8343679904937744, 0.8294808864593506, 0.8338396549224854, 0.839519202709198, 0.8477083444595337, 0.8488970994949341, 0.8426892161369324, 0.8454629778862, 0.8485008478164673, 0.8525954484939575, 0.8502179384231567, 0.8531237840652466, 0.8564258217811584, 0.8597279191017151, 0.8638224601745605, 0.8618412613868713], "val_loss": [2.2459781169891357, 2.0176122188568115, 1.1586410999298096, 0.9112513661384583, 0.7987724542617798, 0.7283020615577698, 0.6916391849517822, 0.6697125434875488, 0.6701269745826721, 0.6203859448432922, 0.5958881974220276, 0.5757758617401123, 0.5600752234458923, 0.5417681336402893, 0.532418429851532, 0.520425021648407, 0.5126453638076782, 0.5046188235282898, 0.5013500452041626, 0.5000631213188171, 0.48854154348373413, 0.4788976311683655, 0.47837308049201965, 0.46864861249923706, 0.4537685513496399, 0.4497787654399872, 0.43847864866256714, 0.43369466066360474, 0.43097859621047974, 0.43507641553878784, 0.42823633551597595, 0.4223311245441437, 0.41563981771469116, 0.409355103969574, 0.42175304889678955, 0.4236578643321991, 0.40590620040893555, 0.4015721082687378, 0.39596542716026306, 0.3954586982727051, 0.4179539382457733, 0.4089163839817047, 0.3961131274700165, 0.40393221378326416, 0.40464067459106445, 0.40083393454551697, 0.4118642508983612], "val_accuracy": [0.3946666717529297, 0.42133334279060364, 0.640999972820282, 0.6793333292007446, 0.7183333039283752, 0.7253333330154419, 0.7263333201408386, 0.7493333220481873, 0.7526666522026062, 0.7649999856948853, 0.7680000066757202, 0.7720000147819519, 0.7963333129882812, 0.7953333258628845, 0.79666668176651, 0.8040000200271606, 0.812333345413208, 0.8100000023841858, 0.8096666932106018, 0.8136666417121887, 0.8140000104904175, 0.8230000138282776, 0.8153333067893982, 0.8186666369438171, 0.8343333601951599, 0.8330000042915344, 0.8370000123977661, 0.8393333554267883, 0.8460000157356262, 0.840666651725769, 0.8413333296775818, 0.8426666855812073, 0.8496666550636292, 0.8543333411216736, 0.8543333411216736, 0.8526666760444641, 0.8533333539962769, 0.8583333492279053, 0.8629999756813049, 0.8613333106040955, 0.859666645526886, 0.8676666617393494, 0.8653333187103271, 0.8550000190734863, 0.8656666874885559, 0.8643333315849304, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 7, 3], [0, 0, 0, 0, 3], [83, 99, 43], [1, 0, 1], [5, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [59], [1, 1], [0], [3], [0]], "fitness": -0.10028571635484695, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.0390319682993085e+31, 1.9251590472907914e+32, 1.2907271178718006e+33, 3.4445409246307063e+33, 8.033608171122357e+33, 1.3194536867001733e+34, 2.3824547245099558e+34, 3.9335809667461365e+34, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity], "accuracy": [0.0944393053650856, 0.09668471664190292, 0.10117553919553757, 0.10196803510189056, 0.09945846349000931, 0.09959053993225098, 0.09760929644107819, 0.09985470771789551, 0.1010434553027153, 0.09536388516426086, 0.09681680053472519, 0.09708096832036972, 0.09879804402589798, 0.09893012791872025, 0.09879804402589798, 0.09681680053472519, 0.09760929644107819], "val_loss": [8.179151079373586e+31, 5.921269920583407e+32, 1.8295169217387635e+33, 3.896103384305805e+33, 8.080280367513475e+33, 1.8358473757176572e+34, 2.599308147423686e+34, 4.212448005575836e+34, 5.316947021794535e+34, 6.946814420933526e+34, 9.317809286911809e+34, 1.0373448295307961e+35, Infinity, Infinity, Infinity, Infinity, Infinity], "val_accuracy": [0.07866666465997696, 0.08500000089406967, 0.08966666460037231, 0.08033332973718643, 0.09033333510160446, 0.08733333647251129, 0.08799999952316284, 0.0806666687130928, 0.08266666531562805, 0.09166666865348816, 0.08566666394472122, 0.09233333170413971, 0.08266666531562805, 0.08699999749660492, 0.08866667002439499, 0.0833333358168602, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 3, 9], [0, 0, 0, 1, 2], [83, 80, 2, 65], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 5, 6, 4, 2, 8, 3, 1, 5, 4, 4, 4, 5], [0, 5, 4, 1, 7, 4, 0, 6, 1], [0, 99], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.multiply(grad, tf.math.subtract(tf.math.square(tf.math.pow(tf.math.pow(alpha, tf.math.pow(grad, tf.math.square(grad))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}, "mapping_values": [1, 12, 7, 5, 4, 3, 3, 0, 1, 22, 13, 9, 2, 2, 1, 1, 0], "tree_depth": 29}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 1, 3, 6, 2, 2, 9, 2, 8, 2, 4, 5, 4, 4, 2, 9, 8, 6, 3, 3, 5, 8, 0], [0, 0, 1, 0, 2, 3, 2, 3, 0, 2, 3, 1, 0, 0, 3, 0, 2], [83, 99, 27, 64, 37, 74, 34, 1, 43], [0, 0, 0], [0, 8, 9], [0], [36], [0, 0, 0, 1, 1], [0, 5, 2], [0, 5], [69], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 27, 17, 9, 3, 3, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.add(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.square(grad)), tf.math.pow(tf.math.pow(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), grad), alpha))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [7, 1, 3, 5, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27, 34], [0, 0, 0, 0, 1, 1], [0, 2, 9, 6], [0, 5], [0, 67], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 6, 4, 2, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]