[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8151428699493408, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924678325653076, 2.1863925457000732, 1.7629926204681396, 1.3432986736297607, 1.0419453382492065, 0.9146201610565186, 0.8524209856987, 0.8125801086425781, 0.7530911564826965, 0.7431464195251465, 0.6894117593765259, 0.6640077829360962, 0.6372498273849487, 0.6153513789176941, 0.5902772545814514, 0.5873438119888306, 0.5688953995704651, 0.5636577010154724, 0.5502530932426453, 0.5471853613853455, 0.5316419005393982, 0.5155792832374573, 0.5109131336212158, 0.5126439929008484, 0.491243839263916, 0.49327582120895386, 0.4716886878013611, 0.46871763467788696, 0.45382770895957947, 0.44756248593330383, 0.43583983182907104, 0.4349996745586395, 0.424723356962204, 0.4091305136680603, 0.410817950963974, 0.40372875332832336, 0.39004218578338623, 0.3785133361816406, 0.3856225311756134, 0.3748912513256073, 0.3728887140750885, 0.3467773199081421, 0.360940545797348, 0.3626768887042999, 0.33625391125679016, 0.3378976583480835], "accuracy": [0.13247919082641602, 0.3283582031726837, 0.43428874015808105, 0.5444459319114685, 0.6395456194877625, 0.6647734642028809, 0.6848500967025757, 0.6848500967025757, 0.7082287669181824, 0.7160216569900513, 0.7289658188819885, 0.7408532500267029, 0.7604015469551086, 0.7598732113838196, 0.7700436115264893, 0.7724210619926453, 0.7835160493850708, 0.7823272943496704, 0.7877426743507385, 0.7935543656349182, 0.7992339134216309, 0.805177628993988, 0.8025360107421875, 0.8123101592063904, 0.8166688680648804, 0.8189142942428589, 0.8208954930305481, 0.8234050869941711, 0.8269713521003723, 0.835160493850708, 0.8341038227081299, 0.8358209133148193, 0.837537944316864, 0.8470479249954224, 0.8442742228507996, 0.8462554216384888, 0.8529917001724243, 0.8520671129226685, 0.8561616539955139, 0.858671247959137, 0.858671247959137, 0.8656716346740723, 0.8578787446022034, 0.857218325138092, 0.8679170608520508, 0.8702945709228516], "val_loss": [2.2450218200683594, 2.012460231781006, 1.1316920518875122, 0.8925611972808838, 0.797263503074646, 0.7680781483650208, 0.7349349856376648, 0.7097177505493164, 0.6825981736183167, 0.6557117700576782, 0.6313866972923279, 0.6019574999809265, 0.5843535661697388, 0.5735384821891785, 0.565216064453125, 0.5596107244491577, 0.5420541763305664, 0.5387133955955505, 0.533470869064331, 0.5382551550865173, 0.5253699421882629, 0.5273925065994263, 0.5243943929672241, 0.5196928977966309, 0.5318741202354431, 0.5176913142204285, 0.5192524790763855, 0.5029497742652893, 0.4906438887119293, 0.4945189654827118, 0.4949430227279663, 0.48843860626220703, 0.47351545095443726, 0.48100361227989197, 0.48291850090026855, 0.4720083773136139, 0.4697895050048828, 0.4643217921257019, 0.46999290585517883, 0.4558441936969757, 0.4453410506248474, 0.46193546056747437, 0.46533504128456116, 0.4593237042427063, 0.4609801173210144, 0.46544408798217773], "val_accuracy": [0.4233333468437195, 0.4566666781902313, 0.6463333368301392, 0.6853333115577698, 0.7116666436195374, 0.706333339214325, 0.7266666889190674, 0.7289999723434448, 0.7433333396911621, 0.7593333125114441, 0.7689999938011169, 0.7766666412353516, 0.7846666574478149, 0.7929999828338623, 0.8009999990463257, 0.7943333387374878, 0.8003333210945129, 0.8086666464805603, 0.800000011920929, 0.8053333163261414, 0.812666654586792, 0.809333324432373, 0.815666675567627, 0.8230000138282776, 0.8166666626930237, 0.8320000171661377, 0.8303333520889282, 0.82833331823349, 0.8399999737739563, 0.8396666646003723, 0.8349999785423279, 0.8416666388511658, 0.8389999866485596, 0.8416666388511658, 0.8456666469573975, 0.8516666889190674, 0.8546666502952576, 0.8516666889190674, 0.8516666889190674, 0.8539999723434448, 0.8619999885559082, 0.8610000014305115, 0.8553333282470703, 0.8526666760444641, 0.8529999852180481, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [14], [1, 1], [2], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 3, 0, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303821563720703, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 3, 1, 3, 5, 6, 8, 6, 2], [0, 2, 1, 0, 2, 0, 0, 1, 0], [83, 99, 27, 84, 14], [0, 1, 1], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [9, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 5, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.math.square(alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1, 1], [1], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 3, 3, 0, 1, 3, 2, 1, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, grad)", "other_info": {"loss": [1.2100353444332267e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 3, 5, 5], [0, 1, 1, 0, 1], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 1, 1], [0, 5, 9], [0, 5], [0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 3, 3, 6, 5, 0, 5, 7, 0, 6], [1, 5, 7, 1, 3, 5], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 12, 7, 5, 2, 3, 3, 0, 1, 2, 1, 1, 1, 16, 10, 6, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(grad)), tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, sigma)), grad)))))", "other_info": {"loss": [2.310668468475342, 2.3102614879608154, 2.3099327087402344, 2.3102915287017822, 2.309877395629883, 2.3105475902557373], "accuracy": [0.09232597798109055, 0.08994849026203156, 0.09192973375320435, 0.08942015469074249, 0.09457138925790787, 0.08994849026203156], "val_loss": [2.3076517581939697, 2.3076517581939697, 2.3076517581939697, 2.3076517581939697, 2.3076517581939697, 2.3076517581939697], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]