[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293607711791992, 2.1927783489227295, 1.7779288291931152, 1.3516278266906738, 1.1012554168701172, 0.9397620558738708, 0.8401402831077576, 0.8325698971748352, 0.7645174860954285, 0.7590810060501099, 0.7050955891609192, 0.6883034706115723, 0.6643941402435303, 0.6473091840744019, 0.6234942078590393, 0.6138110160827637, 0.5947032570838928, 0.5884763598442078, 0.563014030456543, 0.5569812059402466, 0.5389078855514526, 0.5376060009002686, 0.5403491258621216, 0.5037524104118347, 0.49887919425964355, 0.47882363200187683, 0.4733702838420868, 0.46719637513160706, 0.4660792946815491, 0.4438009560108185, 0.45208215713500977, 0.4384530186653137, 0.4189859628677368, 0.41869309544563293, 0.4065505862236023, 0.4007909893989563, 0.39383289217948914, 0.38397306203842163, 0.3797351121902466, 0.3821251392364502, 0.3715831935405731, 0.36425700783729553, 0.3541138768196106, 0.35775676369667053, 0.34462088346481323, 0.33527672290802], "accuracy": [0.13247919082641602, 0.32584863901138306, 0.43059042096138, 0.5394267439842224, 0.6254127621650696, 0.6602826714515686, 0.700700044631958, 0.7107383608818054, 0.7046625018119812, 0.7177387475967407, 0.7269845604896545, 0.7400607466697693, 0.7450799345970154, 0.7559106945991516, 0.7621186375617981, 0.7680623531341553, 0.7759873270988464, 0.7847048044204712, 0.7891955971717834, 0.7848368883132935, 0.7909126877784729, 0.7947431206703186, 0.7903843522071838, 0.8001585006713867, 0.8074230551719666, 0.8161405324935913, 0.8165367841720581, 0.817461371421814, 0.8210275769233704, 0.8290846943855286, 0.8274996876716614, 0.8248580098152161, 0.8383304476737976, 0.8412362933158875, 0.8429533839225769, 0.8433496356010437, 0.8459912538528442, 0.8536521196365356, 0.8537842035293579, 0.8535200357437134, 0.8640866279602051, 0.860652506351471, 0.8668603897094727, 0.8661999702453613, 0.8705587387084961, 0.8739928603172302], "val_loss": [2.246636152267456, 2.0260112285614014, 1.1588495969772339, 0.8599240183830261, 0.7717910408973694, 0.701725423336029, 0.6674051284790039, 0.6420764923095703, 0.6460367441177368, 0.6284441947937012, 0.5833011865615845, 0.5570489764213562, 0.5407989621162415, 0.5326244831085205, 0.5364067554473877, 0.5225769877433777, 0.511979341506958, 0.49196678400039673, 0.49506625533103943, 0.48450741171836853, 0.48522233963012695, 0.4770127236843109, 0.4752139747142792, 0.4697451591491699, 0.4559484124183655, 0.4544315040111542, 0.4526084065437317, 0.44611331820487976, 0.4380608797073364, 0.43606090545654297, 0.4299555718898773, 0.4225955009460449, 0.4309088885784149, 0.4232944846153259, 0.4206738770008087, 0.4202282726764679, 0.4115995168685913, 0.4012255072593689, 0.4033085107803345, 0.4142909348011017, 0.4011783003807068, 0.3974825143814087, 0.40448498725891113, 0.4041101038455963, 0.39155036211013794, 0.3924260139465332], "val_accuracy": [0.4423333406448364, 0.4806666672229767, 0.643666684627533, 0.7009999752044678, 0.7170000076293945, 0.7413333058357239, 0.746666669845581, 0.7429999709129333, 0.7519999742507935, 0.7516666650772095, 0.7646666765213013, 0.7766666412353516, 0.8006666898727417, 0.7906666398048401, 0.7960000038146973, 0.7979999780654907, 0.7976666688919067, 0.8036666512489319, 0.8029999732971191, 0.8029999732971191, 0.8069999814033508, 0.8180000185966492, 0.8143333196640015, 0.8133333325386047, 0.8266666531562805, 0.8263333439826965, 0.8213333487510681, 0.8276666402816772, 0.8343333601951599, 0.8376666903495789, 0.8420000076293945, 0.8479999899864197, 0.8429999947547913, 0.8479999899864197, 0.8529999852180481, 0.856333315372467, 0.8586666584014893, 0.8603333234786987, 0.8629999756813049, 0.8616666793823242, 0.8686666488647461, 0.8669999837875366, 0.8633333444595337, 0.8650000095367432, 0.8673333525657654, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [8, 8, 3, 1, 3], [2, 1, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 3, 3, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 4, 8], [0, 3, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 8, 3, 2, 4, 1, 2, 4, 1, 3, 1, 0, 0, 1, 9, 8, 4, 4, 5, 7, 3, 4, 2, 5, 4, 8, 3, 3, 7, 5, 1, 5, 0, 3, 1, 9, 5, 6, 6, 7, 9, 9, 2, 4, 0, 3, 0, 7, 7], [0, 1, 0, 5, 1, 5, 0, 4, 0, 1, 3, 2, 0, 0, 0, 3, 5, 5, 5, 2, 2, 4, 0, 0, 1, 0, 4, 2], [0, 0, 95, 6, 70, 85, 78, 3, 5, 14, 67, 80, 15, 16], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 8, 1, 7, 7, 4, 0, 1, 5, 2], [1, 5, 3, 0, 7, 6, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 77, 49, 28, 14, 5, 3, 2, 1, 17, 10, 7, 1], "tree_depth": 42, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(grad)), tf.math.negative(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))))), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(grad, beta), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(grad, tf.math.square(tf.math.negative(grad)))))), tf.math.multiply(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(beta, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))))))))), alpha), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.math.pow(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.square(grad), tf.math.add(grad, grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27, 23], [1, 0, 0], [5, 3, 9], [0], [0], [1, 0, 0, 1, 0], [0, 5, 6], [0, 5], [0], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 3, 8, 6], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 1, 1], [0, 7, 6], [0, 5], [34], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3033084869384766, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]