[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923734188079834, 2.1888890266418457, 1.772207498550415, 1.3613672256469727, 1.0689457654953003, 0.9277458190917969, 0.8532339334487915, 0.8210753798484802, 0.7770342826843262, 0.7484151124954224, 0.721397340297699, 0.6873692274093628, 0.6578090190887451, 0.6282409429550171, 0.60850989818573, 0.595430314540863, 0.582421600818634, 0.5690975189208984, 0.5497725009918213, 0.5323659777641296, 0.528980553150177, 0.5274964570999146, 0.5081974864006042, 0.5043641924858093, 0.49798521399497986, 0.4801848530769348, 0.4595869779586792, 0.46078014373779297, 0.4497627019882202, 0.44497033953666687, 0.42954015731811523, 0.4295591711997986, 0.4159187376499176, 0.41859930753707886, 0.4003852605819702, 0.4163192808628082, 0.3951178193092346, 0.3991789221763611, 0.384135901927948, 0.3733105957508087, 0.36558258533477783, 0.36253058910369873, 0.35799622535705566, 0.3505234122276306, 0.3367995023727417, 0.3379284739494324, 0.3412718176841736], "accuracy": [0.1290450394153595, 0.32241448760032654, 0.4255712628364563, 0.540219247341156, 0.6304318904876709, 0.665830135345459, 0.6831330060958862, 0.7034738063812256, 0.6963412761688232, 0.7164179086685181, 0.7185312509536743, 0.7296261787414551, 0.7506273984909058, 0.7556465268135071, 0.7652885913848877, 0.7703077793121338, 0.7716285586357117, 0.7744023203849792, 0.7849689722061157, 0.787082314491272, 0.7901201844215393, 0.7928939461708069, 0.8004226684570312, 0.7993659973144531, 0.7992339134216309, 0.8100647330284119, 0.8203672170639038, 0.8230088353157043, 0.8255184292793274, 0.828820526599884, 0.8323867321014404, 0.834632158279419, 0.837537944316864, 0.8391229510307312, 0.8404437899589539, 0.8405758738517761, 0.8411042094230652, 0.8405758738517761, 0.8448025584220886, 0.8537842035293579, 0.8536521196365356, 0.8549728989601135, 0.8617091774940491, 0.8615770936012268, 0.8656716346740723, 0.8676528930664062, 0.8687095642089844], "val_loss": [2.246265172958374, 2.0185742378234863, 1.135185718536377, 0.8888509273529053, 0.7829139232635498, 0.7098588943481445, 0.6776559948921204, 0.6672313809394836, 0.6508452296257019, 0.6497056484222412, 0.6019808650016785, 0.5816082954406738, 0.5664127469062805, 0.5500307083129883, 0.5509536266326904, 0.5332411527633667, 0.5167924165725708, 0.5135542154312134, 0.5054871439933777, 0.5017232894897461, 0.5016814470291138, 0.4944470226764679, 0.49616894125938416, 0.4822375774383545, 0.47868913412094116, 0.4715878963470459, 0.4623475670814514, 0.4559550881385803, 0.455179363489151, 0.4335232079029083, 0.4307408928871155, 0.43658947944641113, 0.4301801323890686, 0.4290483295917511, 0.43399959802627563, 0.4296475946903229, 0.41686496138572693, 0.40619221329689026, 0.4081055223941803, 0.4038337469100952, 0.403001070022583, 0.4098933935165405, 0.41075798869132996, 0.39963290095329285, 0.4017203450202942, 0.42121997475624084, 0.42281973361968994], "val_accuracy": [0.4246666729450226, 0.43566668033599854, 0.6493333578109741, 0.6916666626930237, 0.7133333086967468, 0.7429999709129333, 0.7446666955947876, 0.7243333458900452, 0.7726666927337646, 0.7480000257492065, 0.7716666460037231, 0.7773333191871643, 0.7850000262260437, 0.7919999957084656, 0.7876666784286499, 0.7996666431427002, 0.8086666464805603, 0.8116666674613953, 0.8103333115577698, 0.8273333311080933, 0.812666654586792, 0.8180000185966492, 0.8266666531562805, 0.8180000185966492, 0.8376666903495789, 0.8410000205039978, 0.843999981880188, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8579999804496765, 0.8576666712760925, 0.8573333621025085, 0.856333315372467, 0.8569999933242798, 0.859666645526886, 0.8650000095367432, 0.8673333525657654, 0.8666666746139526, 0.8666666746139526, 0.8693333268165588, 0.8743333220481873, 0.8690000176429749, 0.8659999966621399, 0.8730000257492065, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 2], [83, 99, 78], [1, 0, 0], [4, 8, 3], [0], [0], [0, 0, 0, 1, 1], [0, 5, 7], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 3, 1, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [0, 5, 3], [0, 5], [0], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 6, 6, 2, 7, 5, 4, 9], [0, 0, 0, 0, 2, 0, 2, 0, 2], [83, 99, 27, 25, 73, 1, 83], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [9, 4, 6], [0, 5], [0], [0, 0], [9], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 21, 12, 9, 7, 3, 3, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310159206390381, 2.309359312057495, 2.3088290691375732, 2.3095595836639404, 2.310908079147339, 2.3095288276672363], "accuracy": [0.08942015469074249, 0.09311848133802414, 0.09787346422672272, 0.0936468094587326, 0.09338264167308807, 0.09272222965955734], "val_loss": [2.3092315196990967, 2.3092315196990967, 2.3092315196990967, 2.3092315196990967, 2.3092315196990967, 2.3092315196990967], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 7, 2, 3, 3, 0, 7], [0, 0, 1, 0, 2, 0, 2], [83, 99, 51, 78], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 8, 9, 2, 2, 7, 0, 2, 4, 9, 5, 2, 7, 3, 1, 1, 5, 1, 6, 8, 1, 2, 4], [0, 4, 3, 5, 0, 3, 4, 4, 2, 0, 3, 5, 0, 0, 1], [83, 88, 62, 92, 99, 8, 36], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 5, 6, 3, 8, 4, 7, 3, 3, 3, 5, 6, 0, 5, 5, 8, 3, 0, 2, 1, 7, 8, 6, 1, 5, 1, 6, 2, 6, 4, 7, 8, 4, 8, 6], [0, 5, 4, 0, 6, 5, 3, 2, 0, 3, 3, 7, 1, 1, 6, 4, 2, 6, 7, 5, 1, 5, 1], [0, 35, 89], [0, 1], [9], [1], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 15, 8, 7, 4, 38, 23, 15, 7, 58, 35, 23, 3, 1, 1, 0, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, grad), grad))), tf.math.multiply(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(grad))), tf.math.subtract(tf.math.divide_no_nan(grad, beta), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(grad, grad), tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.square(grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(grad))), grad)), tf.math.multiply(tf.math.negative(tf.math.add(sigma, tf.math.subtract(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, sigma))))), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.subtract(alpha, alpha)))), tf.math.square(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, beta), tf.math.add(tf.math.sqrt(grad), grad)), tf.math.pow(grad, alpha))), tf.math.sqrt(tf.math.divide_no_nan(grad, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.308877944946289, 2.310114860534668, 2.3104588985443115, 2.309051513671875, 2.3113765716552734, 2.3100852966308594], "accuracy": [0.0948355570435524, 0.09734513610601425, 0.09325055778026581, 0.09642054885625839, 0.08968432247638702, 0.09232597798109055], "val_loss": [2.3086273670196533, 2.3086273670196533, 2.3086273670196533, 2.3086273670196533, 2.3086273670196533, 2.3086273670196533], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}]