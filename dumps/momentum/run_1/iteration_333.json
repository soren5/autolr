[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294855833053589, 2.1940228939056396, 1.7911845445632935, 1.336758017539978, 1.0904762744903564, 0.9274972677230835, 0.8245947360992432, 0.8219977617263794, 0.7642235159873962, 0.7386725544929504, 0.6964044570922852, 0.6869469285011292, 0.6596664786338806, 0.6285421252250671, 0.6172349452972412, 0.6067847013473511, 0.5834944844245911, 0.5551130175590515, 0.5622477531433105, 0.5547255873680115, 0.5441394448280334, 0.5159314274787903, 0.5105780959129333, 0.5060502290725708, 0.4910915791988373, 0.48538583517074585, 0.4674791395664215, 0.4628230035305023, 0.44999080896377563, 0.44097471237182617, 0.4332938492298126, 0.4203180968761444, 0.42550185322761536, 0.41232261061668396, 0.39943334460258484, 0.39194944500923157, 0.392067015171051, 0.3955914378166199, 0.3954559564590454, 0.37340274453163147, 0.37059420347213745, 0.3611356019973755, 0.3609229624271393, 0.3571809232234955, 0.3457504212856293, 0.35061386227607727, 0.34963563084602356, 0.3315011262893677], "accuracy": [0.11781799048185349, 0.3217540681362152, 0.43811914324760437, 0.542728841304779, 0.6412627100944519, 0.6668868064880371, 0.6929071545600891, 0.7071720957756042, 0.7071720957756042, 0.7193237543106079, 0.7400607466697693, 0.7382115721702576, 0.7514199018478394, 0.7663452625274658, 0.7662131786346436, 0.7720248103141785, 0.7798177003860474, 0.7931581139564514, 0.7947431206703186, 0.7866860628128052, 0.8000264167785645, 0.8083476424217224, 0.8058380484580994, 0.8112534880638123, 0.8177255392074585, 0.8214238286018372, 0.821820080280304, 0.8235371708869934, 0.833179235458374, 0.8339717388153076, 0.8354246616363525, 0.8438779711723328, 0.8436138033866882, 0.8462554216384888, 0.8548408150672913, 0.8558974862098694, 0.8557654023170471, 0.8516708612442017, 0.8491612672805786, 0.8573504090309143, 0.8640866279602051, 0.8664641380310059, 0.8665962219238281, 0.8672566413879395, 0.869502067565918, 0.8701624870300293, 0.8667283058166504, 0.8761062026023865], "val_loss": [2.248211145401001, 2.0341386795043945, 1.1819360256195068, 0.9623539447784424, 0.792861819267273, 0.7647402286529541, 0.7211629748344421, 0.6855981349945068, 0.6617251038551331, 0.6363982558250427, 0.6084029674530029, 0.5977891683578491, 0.5824137926101685, 0.5617648363113403, 0.5589168071746826, 0.5485053062438965, 0.532571017742157, 0.5348029136657715, 0.5217774510383606, 0.5158965587615967, 0.5023785829544067, 0.49967485666275024, 0.4893204867839813, 0.4857199788093567, 0.4858018457889557, 0.46173352003097534, 0.452464759349823, 0.4679766297340393, 0.44865497946739197, 0.43545427918434143, 0.4399760067462921, 0.4398193657398224, 0.4312015771865845, 0.4186759293079376, 0.430031418800354, 0.43768543004989624, 0.43696898221969604, 0.41683605313301086, 0.4044209420681, 0.41678303480148315, 0.432382732629776, 0.41909486055374146, 0.41544684767723083, 0.41448676586151123, 0.4222176969051361, 0.42083585262298584, 0.4207194745540619, 0.4282993972301483], "val_accuracy": [0.41966667771339417, 0.4533333480358124, 0.6496666669845581, 0.6786666512489319, 0.7039999961853027, 0.7160000205039978, 0.7436666488647461, 0.7463333606719971, 0.737666666507721, 0.7646666765213013, 0.7516666650772095, 0.7556666731834412, 0.7786666750907898, 0.784333348274231, 0.7776666879653931, 0.7886666655540466, 0.7940000295639038, 0.7893333435058594, 0.8029999732971191, 0.8023333549499512, 0.8113333582878113, 0.8133333325386047, 0.8206666707992554, 0.8256666660308838, 0.8259999752044678, 0.8296666741371155, 0.8379999995231628, 0.8326666951179504, 0.8379999995231628, 0.8399999737739563, 0.8393333554267883, 0.8433333039283752, 0.8413333296775818, 0.846666693687439, 0.8376666903495789, 0.8460000157356262, 0.8483333587646484, 0.846666693687439, 0.846666693687439, 0.8516666889190674, 0.8453333377838135, 0.847000002861023, 0.8560000061988831, 0.8519999980926514, 0.8516666889190674, 0.8543333411216736, 0.8526666760444641, 0.8543333411216736]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [7, 5, 6, 0, 5, 5, 0], [5, 5, 5], [0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 4, 1, 2, 6, 9], [1, 0, 4, 2, 5], [0, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 10, 7, 3, 0, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, grad)), tf.math.negative(tf.math.square(tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)), beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 7, 1, 1, 3, 3, 0, 2, 8, 6, 2, 8, 8, 0, 1, 0, 3, 4, 8, 4, 1, 4, 2, 2, 6, 9], [2, 0, 1, 1, 0, 0, 1, 1, 2, 1, 2, 0, 1, 2, 0, 0, 0], [83, 99, 44, 7, 23, 93, 33, 13], [1, 0, 1], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 6], [5, 2], [0], [0, 0, 0, 1, 1, 1], [0, 7, 3], [1, 6, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 43, 26, 17, 8, 1, 0, 1, 1, 3, 2, 1, 0, 6, 3, 3, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.pow(alpha, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.add(alpha, grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), alpha), grad))), tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 5], [0, 0, 2, 0, 2], [83, 99, 27], [1, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 0], [7, 5, 6], [0, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304527759552002, 2.302586078643799, 2.3025870323181152, 2.302586555480957, 2.302586078643799, 2.302586078643799, 2.302586078643799], "accuracy": [0.08915598690509796, 0.09853387624025345, 0.09998679161071777, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025858402252197, 2.3025856018066406, 2.3025853633880615, 2.302586317062378, 2.302586317062378, 2.302586317062378, 2.302586317062378], "val_accuracy": [0.09600000083446503, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 8, 3, 1, 3, 1, 7, 9, 6], [0, 0, 1, 0, 2, 1, 2], [27, 29, 27, 49], [0, 0, 0], [0, 8, 9], [0], [29], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 1, 5, 7, 4, 1, 2, 7, 5, 5, 1], [1, 4, 7, 1, 3, 3, 3, 5, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 3, 3, 0, 1, 5, 3, 2, 1, 21, 12, 9, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha))))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(tf.math.add(tf.math.square(tf.math.square(alpha)), tf.math.subtract(sigma, sigma)), sigma)), grad)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]