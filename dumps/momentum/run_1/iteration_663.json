[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293752670288086, 2.1898481845855713, 1.773515224456787, 1.3744958639144897, 1.0627864599227905, 0.9154520034790039, 0.8458855152130127, 0.8321014642715454, 0.7729464173316956, 0.7482597231864929, 0.7015880942344666, 0.6910609006881714, 0.6434126496315002, 0.628844141960144, 0.6169143319129944, 0.5956430435180664, 0.5864371061325073, 0.5622556805610657, 0.5535814762115479, 0.553287148475647, 0.5292418599128723, 0.529998779296875, 0.5327756404876709, 0.4928508698940277, 0.5005559325218201, 0.47052761912345886, 0.46993136405944824, 0.4687422215938568, 0.46043282747268677, 0.44699057936668396, 0.44180092215538025, 0.4351102411746979, 0.41622164845466614, 0.41291168332099915, 0.4015294015407562, 0.39275285601615906, 0.4017443358898163, 0.3845149278640747, 0.38211628794670105, 0.3629039227962494, 0.36757391691207886, 0.3663439154624939], "accuracy": [0.1336679458618164, 0.31964072585105896, 0.43428874015808105, 0.5395588278770447, 0.640338122844696, 0.6738871932029724, 0.689869225025177, 0.7005679607391357, 0.7084929347038269, 0.7176066637039185, 0.7284374833106995, 0.7363624572753906, 0.7556465268135071, 0.7577598690986633, 0.7592127919197083, 0.7758552432060242, 0.7802139520645142, 0.7773081660270691, 0.7841764688491821, 0.7844406366348267, 0.7965922355651855, 0.7881389260292053, 0.802800178527832, 0.8086118102073669, 0.8034605979919434, 0.8195747137069702, 0.8203672170639038, 0.8201030492782593, 0.8220842480659485, 0.8309338092803955, 0.8334434032440186, 0.8338396549224854, 0.8428213000297546, 0.8417646288871765, 0.8428213000297546, 0.8521991968154907, 0.8514066934585571, 0.8516708612442017, 0.8555012345314026, 0.8622375130653381, 0.8603883385658264, 0.8594637513160706], "val_loss": [2.2461130619049072, 2.0208873748779297, 1.14220130443573, 0.8899987936019897, 0.7649025321006775, 0.7240144610404968, 0.6872434616088867, 0.6589429378509521, 0.6481425166130066, 0.6118655800819397, 0.5787806510925293, 0.5716457366943359, 0.5469536781311035, 0.5353015661239624, 0.5262230634689331, 0.519914984703064, 0.512882649898529, 0.49920743703842163, 0.5092670321464539, 0.508913516998291, 0.5045129656791687, 0.499787837266922, 0.4953005313873291, 0.4873869717121124, 0.47697213292121887, 0.4813387095928192, 0.4693666994571686, 0.45740458369255066, 0.4571193754673004, 0.45165684819221497, 0.45478808879852295, 0.44867199659347534, 0.44675952196121216, 0.4372909367084503, 0.43971574306488037, 0.45273086428642273, 0.4392455220222473, 0.4334242641925812, 0.4319090247154236, 0.4325850307941437, 0.44211843609809875, 0.4312319755554199], "val_accuracy": [0.42100000381469727, 0.43299999833106995, 0.6579999923706055, 0.6973333358764648, 0.7229999899864197, 0.7143333554267883, 0.7360000014305115, 0.7563333511352539, 0.7599999904632568, 0.7590000033378601, 0.777999997138977, 0.7736666798591614, 0.784333348274231, 0.7893333435058594, 0.7933333516120911, 0.7913333177566528, 0.7983333468437195, 0.809333324432373, 0.8066666722297668, 0.8033333420753479, 0.8146666884422302, 0.8146666884422302, 0.8196666836738586, 0.8199999928474426, 0.82833331823349, 0.8306666612625122, 0.828000009059906, 0.8346666693687439, 0.8366666436195374, 0.846666693687439, 0.8426666855812073, 0.843999981880188, 0.847000002861023, 0.8476666808128357, 0.843666672706604, 0.8463333249092102, 0.8533333539962769, 0.8523333072662354, 0.8523333072662354, 0.8516666889190674, 0.8513333201408386, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 73], [0, 0, 0, 1], [0, 4, 9], [0], [0, 90], [0, 0, 0, 1, 1], [0, 5, 1], [0, 5], [0], [0, 1], [5], [1], [0]], "fitness": -0.12371428310871124, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.306433916091919, 2.3019602298736572, 2.302398681640625, 2.302668809890747, 2.302640438079834, 2.3027992248535156], "accuracy": [0.09272222965955734, 0.09377889335155487, 0.11610091477632523, 0.1006472036242485, 0.09800554811954498, 0.09879804402589798], "val_loss": [2.301363706588745, 2.302259683609009, 2.3025448322296143, 2.302539110183716, 2.302640914916992, 2.302917718887329], "val_accuracy": [0.12399999797344208, 0.07066666334867477, 0.10766666382551193, 0.09700000286102295, 0.10100000351667404, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [48], [0, 0, 0, 1, 1, 1], [0, 4, 6], [6, 5, 0], [0], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 9}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 7], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0], [6, 8, 9], [0], [0, 84], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3052432537078857, 2.30540132522583, 2.3069941997528076, 2.308152675628662, 2.309687614440918, 2.3115899562835693, 2.3116064071655273, 2.3146300315856934, 2.3171753883361816, 2.3199470043182373], "accuracy": [0.09642054885625839, 0.09826971590518951, 0.09906221181154251, 0.09945846349000931, 0.09760929644107819, 0.09708096832036972, 0.09642054885625839, 0.09879804402589798, 0.09853387624025345, 0.09826971590518951], "val_loss": [2.302610397338867, 2.3039462566375732, 2.3052282333374023, 2.3092875480651855, 2.309605360031128, 2.310051441192627, 2.3147366046905518, 2.3123207092285156, 2.3156580924987793, 2.3183939456939697], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.10166666656732559, 0.09966666996479034, 0.10533333569765091, 0.09966666996479034, 0.0949999988079071, 0.10000000149011612, 0.09966666996479034, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 4, 3, 1, 3], [0, 0, 1, 0, 3, 3], [83, 99, 27], [0, 1, 0], [0, 8, 1], [0], [0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 6, 7, 7, 8, 6, 8, 8, 8], [0, 5, 4, 2, 4, 7], [0], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 2, 1, 1, 1, 16, 10, 6, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(beta, grad))))), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]