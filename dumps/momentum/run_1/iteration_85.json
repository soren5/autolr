[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293689489364624, 2.1927642822265625, 1.7804609537124634, 1.3676546812057495, 1.0532712936401367, 0.9187885522842407, 0.836804986000061, 0.8124616742134094, 0.769381046295166, 0.7473260164260864, 0.7010906338691711, 0.6707125902175903, 0.6420640349388123, 0.6260629892349243, 0.6131309866905212, 0.5896139144897461, 0.579038679599762, 0.5606427192687988, 0.5602200627326965, 0.5421550869941711, 0.537131130695343, 0.5231293439865112, 0.5107475519180298, 0.5186427235603333, 0.491825133562088, 0.4865931272506714, 0.4666467607021332, 0.46956172585487366, 0.45932555198669434, 0.43627414107322693, 0.4428284168243408, 0.4344022870063782, 0.4269152879714966, 0.4294472336769104, 0.421802818775177, 0.40625396370887756, 0.3982681930065155, 0.3969089090824127, 0.39490246772766113, 0.3795372247695923, 0.3855968713760376, 0.3699171543121338, 0.3687380850315094], "accuracy": [0.12534672021865845, 0.32003697752952576, 0.4377228915691376, 0.540219247341156, 0.6402060389518738, 0.6676793098449707, 0.6984546184539795, 0.707568347454071, 0.7077004313468933, 0.7168141603469849, 0.7397965788841248, 0.754589855670929, 0.7494386434555054, 0.7652885913848877, 0.7695152759552002, 0.7795535326004028, 0.776251494884491, 0.7874785661697388, 0.7907806038856506, 0.8000264167785645, 0.796328067779541, 0.7971205711364746, 0.802800178527832, 0.8025360107421875, 0.8099326491355896, 0.81548011302948, 0.8195747137069702, 0.8238013386726379, 0.8228767514228821, 0.8277638554573059, 0.8281601071357727, 0.8322546482086182, 0.8362171649932861, 0.8367455005645752, 0.8388587832450867, 0.8429533839225769, 0.8461233377456665, 0.8508783578872681, 0.8520671129226685, 0.8520671129226685, 0.8541803956031799, 0.860652506351471, 0.8561616539955139], "val_loss": [2.247148036956787, 2.0262863636016846, 1.1426957845687866, 0.8494794964790344, 0.7691857218742371, 0.7216220498085022, 0.6711288094520569, 0.6508951187133789, 0.6548300981521606, 0.6386357545852661, 0.6071562767028809, 0.5669037103652954, 0.5480210781097412, 0.5328986048698425, 0.5323962569236755, 0.5147647261619568, 0.5083998441696167, 0.5155935287475586, 0.5067818760871887, 0.4945615530014038, 0.48241373896598816, 0.47955814003944397, 0.48887091875076294, 0.47700411081314087, 0.4647201597690582, 0.45795372128486633, 0.4501800537109375, 0.4379088580608368, 0.43379756808280945, 0.43830540776252747, 0.43760889768600464, 0.44677212834358215, 0.4421846866607666, 0.4455421566963196, 0.43842098116874695, 0.421200156211853, 0.42125219106674194, 0.4277356266975403, 0.4198073744773865, 0.4232858121395111, 0.421301931142807, 0.41916120052337646, 0.4133055508136749], "val_accuracy": [0.4000000059604645, 0.4350000023841858, 0.6446666717529297, 0.6996666789054871, 0.7213333249092102, 0.734666645526886, 0.7493333220481873, 0.7543333172798157, 0.7580000162124634, 0.7666666507720947, 0.765999972820282, 0.777999997138977, 0.7886666655540466, 0.7916666865348816, 0.7963333129882812, 0.7979999780654907, 0.8029999732971191, 0.7993333339691162, 0.809333324432373, 0.8036666512489319, 0.8159999847412109, 0.8226666450500488, 0.8136666417121887, 0.8216666579246521, 0.82833331823349, 0.8296666741371155, 0.8339999914169312, 0.8339999914169312, 0.8346666693687439, 0.8379999995231628, 0.8429999947547913, 0.8429999947547913, 0.843666672706604, 0.8473333120346069, 0.8433333039283752, 0.8483333587646484, 0.8526666760444641, 0.8546666502952576, 0.8503333330154419, 0.8476666808128357, 0.8526666760444641, 0.8506666421890259, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 6, 9, 6, 6, 3, 7, 3, 3, 2, 7, 3, 9, 5, 3, 3, 6, 6], [0, 4, 5, 2, 5, 1, 2, 2, 0, 5, 4, 0, 2], [0, 29, 94, 7, 12], [0, 0, 0, 0, 1, 1], [0, 5, 6, 0], [0, 5], [51], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 31, 18, 13, 5, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.multiply(grad, beta), grad)), tf.math.add(tf.math.add(tf.math.multiply(alpha, beta), beta), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.329279899597168, 2.565566301345825, 3602097920.0, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.07449477910995483, 0.09721305221319199, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.39103102684021, 3.40561842918396, 1.6342801416252372e+27, NaN, NaN, NaN, NaN], "val_accuracy": [0.09166666865348816, 0.09933333098888397, 0.09933333098888397, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47775608832.0, 6796408258560.0, 116946372657152.0, 840087952687104.0, 3750094591492096.0, 1.2246357288943616e+16], "accuracy": [0.09906221181154251, 0.10394927859306335, 0.10315678268671036, 0.10579843819141388, 0.10355303436517715, 0.09694888442754745], "val_loss": [471459889152.0, 25417805201408.0, 272826036649984.0, 1487467970560000.0, 5571653840928768.0, 1.6436561742659584e+16], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 7, 1, 3], [1, 0, 1, 0, 1], [83, 99, 2], [0, 0, 0, 1, 1], [5, 8, 3], [0, 0], [0, 30], [0, 0, 1, 0, 1, 1], [0, 7, 6], [0, 5, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 5, 3, 2, 2, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3029019832611084, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 1, 3, 1, 3], [0, 1, 1, 1, 2], [83, 45, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 5, 6, 7, 0, 8], [0, 5, 1], [0], [1, 1], [2], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.sqrt(grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.350389003753662, 4.076148764649451e+33, 2.36794376373291, 2.32061767578125, 2.307002544403076, 2.3038361072540283], "accuracy": [0.17672698199748993, 0.0956280529499054, 0.09998679161071777, 0.09708096832036972, 0.09959053993225098, 0.10051512718200684], "val_loss": [1137.7177734375, 2.4124433994293213, 2.333763599395752, 2.3105533123016357, 2.30460262298584, 2.3031387329101562], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]