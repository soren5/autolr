[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293785810470581, 2.1894779205322266, 1.7595624923706055, 1.3721295595169067, 1.052841067314148, 0.9238258600234985, 0.8601574301719666, 0.8002963662147522, 0.7631036043167114, 0.742719292640686, 0.7005952596664429, 0.6627454161643982, 0.6380887627601624, 0.6280916929244995, 0.599715530872345, 0.5890409350395203, 0.568099319934845, 0.5562860369682312, 0.5467641353607178, 0.5392581820487976, 0.5350676774978638, 0.5143429040908813, 0.5089452862739563, 0.48832017183303833, 0.48826315999031067, 0.47110918164253235, 0.4750206172466278, 0.461460143327713, 0.4437127411365509, 0.4375968277454376, 0.4425410032272339, 0.4306098520755768, 0.42054861783981323, 0.40980327129364014, 0.408917635679245, 0.40449321269989014, 0.38045260310173035, 0.3664016127586365, 0.3727593719959259, 0.3670668601989746, 0.3674232065677643], "accuracy": [0.12442214041948318, 0.3185840845108032, 0.4411570429801941, 0.5394267439842224, 0.6317527294158936, 0.6639809608459473, 0.6812838315963745, 0.7055870890617371, 0.7065116763114929, 0.7147008180618286, 0.7310791015625, 0.7415136694908142, 0.752212405204773, 0.7630431652069092, 0.7730814814567566, 0.7774402499198914, 0.7862898111343384, 0.7860256433486938, 0.7898560166358948, 0.7950072884559631, 0.8004226684570312, 0.8031964302062988, 0.8087438941001892, 0.8119139075279236, 0.8105930685997009, 0.8227446675300598, 0.8195747137069702, 0.8227446675300598, 0.8317263126373291, 0.8323867321014404, 0.833179235458374, 0.8392550349235535, 0.8376700282096863, 0.8432175517082214, 0.8392550349235535, 0.8432175517082214, 0.8552370667457581, 0.8639545440673828, 0.8614450097084045, 0.8558974862098694, 0.8582749962806702], "val_loss": [2.246037721633911, 2.0120599269866943, 1.1272058486938477, 0.8568159341812134, 0.7683824896812439, 0.7283764481544495, 0.6771072745323181, 0.6615593433380127, 0.6305336356163025, 0.60738605260849, 0.5696592926979065, 0.552595853805542, 0.5323349833488464, 0.5183262228965759, 0.514748752117157, 0.5084220170974731, 0.49802523851394653, 0.4876077175140381, 0.48200252652168274, 0.47660592198371887, 0.4789441227912903, 0.4658658802509308, 0.46779826283454895, 0.4671151638031006, 0.4604513645172119, 0.4610273540019989, 0.44339945912361145, 0.45032742619514465, 0.44482508301734924, 0.4397810995578766, 0.4341238737106323, 0.4346208870410919, 0.4372890889644623, 0.43670499324798584, 0.4264146387577057, 0.4182087779045105, 0.4253489673137665, 0.43774405121803284, 0.43577173352241516, 0.4303128123283386, 0.43295788764953613], "val_accuracy": [0.406333327293396, 0.4506666660308838, 0.6480000019073486, 0.6980000138282776, 0.7080000042915344, 0.7266666889190674, 0.7446666955947876, 0.7580000162124634, 0.753000020980835, 0.765999972820282, 0.7699999809265137, 0.7846666574478149, 0.8013333082199097, 0.8056666851043701, 0.8040000200271606, 0.8080000281333923, 0.8149999976158142, 0.815666675567627, 0.8216666579246521, 0.8226666450500488, 0.8186666369438171, 0.8220000267028809, 0.8253333568572998, 0.8243333101272583, 0.8320000171661377, 0.8296666741371155, 0.8370000123977661, 0.8373333215713501, 0.8373333215713501, 0.8423333168029785, 0.8410000205039978, 0.8433333039283752, 0.8446666598320007, 0.847000002861023, 0.8500000238418579, 0.8510000109672546, 0.843666672706604, 0.8479999899864197, 0.847000002861023, 0.8486666679382324, 0.8496666550636292]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 0, 1, 6, 5, 5, 3, 7, 2, 5, 3], [0, 0, 1, 0, 2, 0, 1, 1, 1, 3, 0], [91, 99, 27, 62, 78], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 7, 2, 5, 3], [0, 4, 1, 0], [0, 40], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [47], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 15, 11, 5, 10, 6, 4, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.multiply(grad, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(alpha)))))), alpha), tf.math.multiply(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303264856338501, 2.302304267883301, 2.302480936050415, 2.3032386302948, 2.306978225708008, 2.3252921104431152], "accuracy": [0.10447761416435242, 0.10170386731624603, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302551031112671, 2.3024635314941406, 2.3026986122131348, 2.3041036128997803, 2.3118021488189697, 2.3538506031036377], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 2, 2, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 6, 7, 9], [0, 5, 0], [0, 83, 42], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 8, 5, 3, 3, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303626775741577, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 3], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [22], [0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 5, 6, 6, 0, 0], [0, 5, 3], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 3, 3, 0, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4444406105690455e+34, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1978602558374405, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 1, 7, 6, 2, 0, 7, 5, 8, 9], [0, 3, 1, 0, 2, 0, 2, 1, 3], [83, 99, 27, 31], [0, 0, 1], [0, 8, 6], [0], [0], [0, 0, 0, 1, 0], [0, 9, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 4, 3, 2, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha), tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309814691543579, 2.3450610637664795, 2.842207670211792, 40.766807556152344, 436.50390625, 2290.938232421875], "accuracy": [0.0948355570435524, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.31974196434021, 2.374311923980713, 5.960334777832031, 162.050537109375, 1112.8421630859375, 4998.74853515625], "val_accuracy": [0.10233332961797714, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]