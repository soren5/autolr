[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293383836746216, 2.189920425415039, 1.7793476581573486, 1.358055830001831, 1.0844900608062744, 0.9391322731971741, 0.8478349447250366, 0.8215075135231018, 0.769687831401825, 0.7435383200645447, 0.7175440192222595, 0.6922370195388794, 0.660676121711731, 0.6318897604942322, 0.5954806208610535, 0.5926840305328369, 0.58501797914505, 0.5815233588218689, 0.5672407150268555, 0.5452347993850708, 0.5416961908340454, 0.5378172397613525, 0.5165007710456848, 0.5126199126243591, 0.5097571015357971, 0.4959352910518646, 0.4834836721420288, 0.4705800712108612, 0.458331435918808, 0.44925427436828613, 0.44346991181373596, 0.4367063641548157, 0.4299096167087555, 0.4201512038707733, 0.41089457273483276, 0.396331787109375, 0.3997543752193451, 0.38803550601005554, 0.3723427653312683, 0.37383317947387695, 0.3750692903995514, 0.3669680058956146, 0.3565877676010132, 0.3507922887802124, 0.34750479459762573, 0.3382817506790161, 0.33792853355407715, 0.33369627594947815, 0.3219749331474304, 0.32557913661003113, 0.30719470977783203, 0.318061888217926, 0.2946736812591553, 0.3004876375198364, 0.29707080125808716, 0.2898637056350708, 0.2847039997577667, 0.2887767553329468, 0.28810885548591614, 0.27796098589897156, 0.2781125009059906, 0.2788538634777069, 0.2673087418079376, 0.27055931091308594, 0.26983383297920227, 0.27004560828208923], "accuracy": [0.13234710693359375, 0.32901862263679504, 0.4352133274078369, 0.5428609251976013, 0.631488561630249, 0.6515651941299438, 0.6903975605964661, 0.6923788189888, 0.7107383608818054, 0.7107383608818054, 0.7325320243835449, 0.7313432693481445, 0.7441553473472595, 0.7604015469551086, 0.7738739848136902, 0.770439863204956, 0.7808743715286255, 0.7794214487075806, 0.778232753276825, 0.7895918488502502, 0.7951393723487854, 0.7893276810646057, 0.8006868362426758, 0.8059701323509216, 0.8047813773155212, 0.8137630224227905, 0.8175934553146362, 0.8257825970649719, 0.8255184292793274, 0.8286884427070618, 0.8298771381378174, 0.8392550349235535, 0.8389908671379089, 0.841500461101532, 0.8441421389579773, 0.8510104417800903, 0.8477083444595337, 0.8496896028518677, 0.8565579056739807, 0.8588033318519592, 0.8568220734596252, 0.8627657890319824, 0.8625016212463379, 0.86118084192276, 0.8643507957458496, 0.8702945709228516, 0.8673887252807617, 0.8671245574951172, 0.8768987059593201, 0.8717474341392517, 0.882710337638855, 0.8791441321372986, 0.8853520154953003, 0.8828424215316772, 0.8858803510665894, 0.8882578015327454, 0.8862766027450562, 0.8865407705307007, 0.8905032277107239, 0.8870691061019897, 0.8947299122810364, 0.8898428082466125, 0.8972394466400146, 0.8957865834236145, 0.8951261639595032, 0.8944657444953918], "val_loss": [2.2458417415618896, 2.023205041885376, 1.1440659761428833, 0.8647117614746094, 0.749350905418396, 0.7085819244384766, 0.6644442081451416, 0.6513376235961914, 0.6235876679420471, 0.6164743900299072, 0.5691693425178528, 0.5519142746925354, 0.5327174663543701, 0.5150043964385986, 0.514565110206604, 0.5069893598556519, 0.4995966851711273, 0.4971414804458618, 0.4850315749645233, 0.48865658044815063, 0.48405835032463074, 0.46513834595680237, 0.45909154415130615, 0.44936978816986084, 0.4475756883621216, 0.44145405292510986, 0.4421904385089874, 0.43196216225624084, 0.4342324733734131, 0.42570072412490845, 0.4140288829803467, 0.414100706577301, 0.41493871808052063, 0.40956562757492065, 0.41136759519577026, 0.4112718999385834, 0.3992306590080261, 0.3997139632701874, 0.3963352143764496, 0.3929187059402466, 0.4003922939300537, 0.3944580852985382, 0.39206063747406006, 0.387500524520874, 0.3955763280391693, 0.3839718699455261, 0.3821423053741455, 0.3859386444091797, 0.40781086683273315, 0.41152065992355347, 0.41056546568870544, 0.41475731134414673, 0.40674328804016113, 0.423869252204895, 0.40351778268814087, 0.4057762026786804, 0.4267670214176178, 0.4161788821220398, 0.41725990176200867, 0.4284020960330963, 0.412651926279068, 0.42080289125442505, 0.447689950466156, 0.4488658010959625, 0.4637005925178528, 0.42411065101623535], "val_accuracy": [0.41733333468437195, 0.4593333303928375, 0.6483333110809326, 0.6933333277702332, 0.7286666631698608, 0.7513333559036255, 0.737333357334137, 0.753333330154419, 0.7573333382606506, 0.7663333415985107, 0.7806666493415833, 0.7799999713897705, 0.7933333516120911, 0.7986666560173035, 0.8113333582878113, 0.800000011920929, 0.8043333292007446, 0.812333345413208, 0.8109999895095825, 0.8130000233650208, 0.828000009059906, 0.8339999914169312, 0.8276666402816772, 0.8373333215713501, 0.8383333086967468, 0.8433333039283752, 0.8383333086967468, 0.8450000286102295, 0.8456666469573975, 0.8486666679382324, 0.8496666550636292, 0.8529999852180481, 0.856333315372467, 0.8496666550636292, 0.8556666374206543, 0.8553333282470703, 0.8640000224113464, 0.859666645526886, 0.8613333106040955, 0.8603333234786987, 0.8610000014305115, 0.8659999966621399, 0.8656666874885559, 0.8613333106040955, 0.862666666507721, 0.8686666488647461, 0.8656666874885559, 0.8703333139419556, 0.8633333444595337, 0.8650000095367432, 0.8703333139419556, 0.8669999837875366, 0.8740000128746033, 0.871999979019165, 0.8700000047683716, 0.8743333220481873, 0.8730000257492065, 0.8763333559036255, 0.8743333220481873, 0.874666690826416, 0.8790000081062317, 0.8730000257492065, 0.8723333477973938, 0.8740000128746033, 0.8679999709129333, 0.878000020980835]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 0, 1, 0], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 3, 3, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1112668160.0, 21080440832.0, 99701489664.0, 273623728128.0, 589150420992.0, 1100313133056.0], "accuracy": [0.0936468094587326, 0.10091137140989304, 0.09813763201236725, 0.1014397069811821, 0.1014397069811821, 0.09893012791872025], "val_loss": [5239173632.0, 41908322304.0, 141434830848.0, 335245541376.0, 654770044928.0, 1131439456256.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8, 9], [0], [77], [0, 0, 0, 1, 0], [0, 5, 6, 9], [0, 5], [0, 49], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 3, 7, 9, 4, 7, 5, 3, 6, 4, 0, 2, 3, 7, 0, 3, 0, 3, 6, 7, 6, 4, 8, 1, 3, 4, 0, 4, 1, 7, 8, 0, 0, 9, 8, 5, 9, 5], [1, 7, 1, 7, 7, 5, 7, 3, 2, 1, 6, 1, 5, 0, 2, 4, 7, 2, 5, 0], [0, 36, 20, 70, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 5, 4, 1, 2, 58, 38, 20, 5], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.pow(alpha, grad)), grad)), tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.multiply(tf.math.negative(grad), tf.math.multiply(sigma, tf.math.divide_no_nan(beta, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.subtract(grad, alpha)), grad), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), beta))))))), tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.negative(grad)), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta), tf.math.sqrt(tf.math.square(grad)))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 8, 3], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [92], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 5, 6, 7, 3, 3, 2, 3, 8, 5, 1, 9, 9, 5, 3, 4, 1, 1, 0, 5, 1, 0, 0, 0, 6, 1, 4, 5, 1, 8, 3, 1, 4, 5, 7, 7], [0, 5, 2, 6, 3, 4, 0, 1, 4, 1, 2, 6, 2, 6, 7, 5, 0, 7, 0, 5], [0, 9, 64, 93, 88, 1], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.multiply(beta, tf.math.pow(tf.math.subtract(grad, tf.math.subtract(tf.math.negative(tf.math.square(sigma)), grad)), tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(alpha)))))), tf.math.negative(grad)), alpha)), tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.multiply(grad, beta)), tf.math.subtract(grad, tf.math.pow(tf.math.square(grad), tf.math.add(grad, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45733081088.0, 6645573222400.0, 115439283732480.0, 811286774415360.0, 3525710199128064.0, 1.1584958095163392e+16], "accuracy": [0.09774138033390045, 0.09549596905708313, 0.09866596013307571, 0.09259014576673508, 0.09972262382507324, 0.10619468986988068], "val_loss": [463363899392.0, 24981310275584.0, 268134690848768.0, 1461889829699584.0, 5476065048788992.0, 1.6150237747871744e+16], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 7, 4, 3, 3, 3, 3, 0, 1, 56, 36, 20, 6, 2, 1, 1, 0], "tree_depth": 29}]