[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935409545898438, 2.19101881980896, 1.7632091045379639, 1.3673453330993652, 1.0717523097991943, 0.9243355393409729, 0.8381950259208679, 0.808883786201477, 0.765342652797699, 0.7518581748008728, 0.7117708921432495, 0.686263918876648, 0.6507021188735962, 0.6253750324249268, 0.617042064666748, 0.6007367372512817, 0.5811577439308167, 0.56559157371521, 0.5569427609443665, 0.5517050623893738, 0.5441715717315674, 0.5290155410766602, 0.522411584854126, 0.49957773089408875, 0.49898552894592285, 0.4777139127254486, 0.47820526361465454, 0.46335363388061523, 0.4519498348236084, 0.4563244581222534, 0.43876761198043823, 0.4212619364261627, 0.4297831654548645, 0.4138505458831787, 0.40483221411705017, 0.4029083847999573, 0.39294490218162537, 0.3766072988510132, 0.3855769634246826, 0.38082650303840637, 0.3745240569114685, 0.3664473593235016, 0.3546451926231384], "accuracy": [0.1224408894777298, 0.32862237095832825, 0.44049662351608276, 0.5429930090904236, 0.6370360851287842, 0.6686038970947266, 0.6964733600616455, 0.7046625018119812, 0.700171709060669, 0.709549605846405, 0.7333245277404785, 0.7331924438476562, 0.7518161535263062, 0.7622507214546204, 0.7576277852058411, 0.7750627398490906, 0.7786290049552917, 0.7812706232070923, 0.7877426743507385, 0.7885351777076721, 0.7884030938148499, 0.8009510040283203, 0.8079513907432556, 0.8088759779930115, 0.8072909712791443, 0.8256505131721497, 0.8234050869941711, 0.8208954930305481, 0.8230088353157043, 0.8284242749214172, 0.8284242749214172, 0.8342359066009521, 0.8367455005645752, 0.8488970994949341, 0.8462554216384888, 0.8426892161369324, 0.8459912538528442, 0.8512746095657349, 0.8535200357437134, 0.8588033318519592, 0.8555012345314026, 0.8599920868873596, 0.8614450097084045], "val_loss": [2.2464544773101807, 2.0247092247009277, 1.1478126049041748, 0.9199455380439758, 0.7944239974021912, 0.7150912880897522, 0.7262356877326965, 0.6826884150505066, 0.6888532638549805, 0.6430594325065613, 0.5995143055915833, 0.5767816305160522, 0.5704053640365601, 0.5596743226051331, 0.5299161672592163, 0.534691572189331, 0.5204972624778748, 0.5011991262435913, 0.5183579921722412, 0.49762773513793945, 0.4987967908382416, 0.4863036274909973, 0.47412189841270447, 0.47513219714164734, 0.46223169565200806, 0.46556249260902405, 0.4503149092197418, 0.4433833062648773, 0.4432394206523895, 0.44121119379997253, 0.43213117122650146, 0.4200192987918854, 0.41179773211479187, 0.4175379276275635, 0.41100943088531494, 0.40367236733436584, 0.4031100273132324, 0.40144017338752747, 0.41173017024993896, 0.4053409695625305, 0.39531180262565613, 0.3931926190853119, 0.3905892074108124], "val_accuracy": [0.43533334136009216, 0.47999998927116394, 0.643666684627533, 0.6899999976158142, 0.7163333296775818, 0.7409999966621399, 0.7210000157356262, 0.7573333382606506, 0.7463333606719971, 0.749666690826416, 0.7720000147819519, 0.7746666669845581, 0.7850000262260437, 0.7950000166893005, 0.8023333549499512, 0.800000011920929, 0.8080000281333923, 0.8166666626930237, 0.8013333082199097, 0.8103333115577698, 0.8176666498184204, 0.8316666483879089, 0.828000009059906, 0.8276666402816772, 0.8356666564941406, 0.8393333554267883, 0.8433333039283752, 0.8413333296775818, 0.847000002861023, 0.8429999947547913, 0.8493333458900452, 0.8506666421890259, 0.8576666712760925, 0.859000027179718, 0.8566666841506958, 0.8603333234786987, 0.8640000224113464, 0.8673333525657654, 0.8606666922569275, 0.8640000224113464, 0.8573333621025085, 0.8610000014305115, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 2, 1, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 0, 1, 0, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [52.106201171875, 2.5635731396739665e+31, 3.6711232662200928, 3.087653398513794, 3.3945555686950684, 3.266502857208252], "accuracy": [0.2172764539718628, 0.11055342853069305, 0.1002509593963623, 0.09879804402589798, 0.09708096832036972, 0.10447761416435242], "val_loss": [81.67903900146484, 3.8162271976470947, 3.725757122039795, 2.9363059997558594, 3.321258068084717, 3.196415901184082], "val_accuracy": [0.11999999731779099, 0.09666666388511658, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 3, 3], [0, 0, 1, 0, 3], [28, 99, 31], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 4, 9, 3, 6, 8, 3, 4, 6], [0, 0, 0, 4, 2, 4], [0, 8, 93, 56], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [4, 3, 6, 4, 2, 5, 7, 0, 6, 8, 4, 4, 6, 0, 8, 9], [1, 1, 6, 4, 1, 6, 2, 4, 0, 7], [0, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 9, 6, 4, 5, 3, 2, 1, 26, 16, 10, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad), beta), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(alpha), grad)), grad)), alpha), grad), tf.math.pow(beta, tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 1], [8, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 8, 7, 7, 4, 1, 9], [1, 5, 7, 2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 5, 3, 2, 1, 13, 8, 5, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.pow(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), beta), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 1], [83, 99, 67], [0, 0, 0], [0, 9, 9], [0], [0], [0, 0, 0, 0, 1, 1, 1], [0, 2, 6, 0], [0, 5, 5], [67], [0, 0, 0, 1, 1], [0, 8, 6], [6, 2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 7, 4, 3, 1, 5, 3, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, beta)))", "other_info": {"loss": [2.3110320568084717, 2.309546709060669, 2.3107845783233643, 2.309833288192749, 2.3094189167022705, 2.309486150741577], "accuracy": [0.0948355570435524, 0.09549596905708313, 0.09021265059709549, 0.09681680053472519, 0.08796724677085876, 0.0944393053650856], "val_loss": [2.3081345558166504, 2.3081345558166504, 2.3081345558166504, 2.3081345558166504, 2.3081345558166504, 2.3081345558166504], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]