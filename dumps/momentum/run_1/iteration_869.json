[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291987657546997, 2.1887412071228027, 1.767032504081726, 1.3522282838821411, 1.0707921981811523, 0.9106335639953613, 0.8310840725898743, 0.8083443641662598, 0.7796050906181335, 0.7495450377464294, 0.7100318074226379, 0.6703064441680908, 0.633775532245636, 0.6123632192611694, 0.6030125021934509, 0.5878813862800598, 0.5888779163360596, 0.5700892210006714, 0.5497034788131714, 0.546322226524353, 0.5217437744140625, 0.5128454566001892, 0.5164270401000977, 0.5025493502616882, 0.4910866618156433, 0.48772063851356506, 0.48299747705459595, 0.46745896339416504, 0.4647834897041321, 0.45527246594429016, 0.44395074248313904, 0.43428167700767517, 0.4302928149700165, 0.41936981678009033, 0.42573121190071106, 0.4012310802936554, 0.39999866485595703, 0.3957701623439789, 0.3937886953353882, 0.38070163130760193], "accuracy": [0.13076211512088776, 0.32901862263679504, 0.4434024691581726, 0.5473517179489136, 0.6373002529144287, 0.6542068123817444, 0.687887966632843, 0.700171709060669, 0.7012283802032471, 0.7020208835601807, 0.7230220437049866, 0.7416457533836365, 0.750759482383728, 0.7630431652069092, 0.7648923397064209, 0.7734777331352234, 0.7729493975639343, 0.7786290049552917, 0.7872143983840942, 0.7924976944923401, 0.7981772422790527, 0.7994980812072754, 0.8047813773155212, 0.8152159452438354, 0.8096684813499451, 0.8064984679222107, 0.8177255392074585, 0.8232730031013489, 0.819442629814148, 0.8220842480659485, 0.8319904804229736, 0.8318583965301514, 0.8345000743865967, 0.837537944316864, 0.8363492488861084, 0.8409721255302429, 0.8462554216384888, 0.848368763923645, 0.8525954484939575, 0.8549728989601135], "val_loss": [2.2460126876831055, 2.015730619430542, 1.1389212608337402, 0.856332004070282, 0.7644231915473938, 0.7056454420089722, 0.6789697408676147, 0.6700685024261475, 0.6441535353660583, 0.6132680773735046, 0.5816206932067871, 0.554216742515564, 0.540044367313385, 0.5297241806983948, 0.5176819562911987, 0.5140038728713989, 0.5037692785263062, 0.5039392709732056, 0.4989151954650879, 0.4896034300327301, 0.48200640082359314, 0.4743703305721283, 0.485280305147171, 0.45881250500679016, 0.4627016484737396, 0.463197261095047, 0.450786292552948, 0.4452701508998871, 0.4395388662815094, 0.4378073215484619, 0.4357110857963562, 0.42715489864349365, 0.41928669810295105, 0.4341418445110321, 0.40904033184051514, 0.4126759171485901, 0.41570186614990234, 0.43698015809059143, 0.4213484823703766, 0.4045136570930481], "val_accuracy": [0.42266666889190674, 0.4690000116825104, 0.6549999713897705, 0.6936666369438171, 0.7133333086967468, 0.7250000238418579, 0.7310000061988831, 0.7406666874885559, 0.7603333592414856, 0.7643333077430725, 0.7763333320617676, 0.7910000085830688, 0.800000011920929, 0.8036666512489319, 0.8053333163261414, 0.8029999732971191, 0.8073333501815796, 0.8080000281333923, 0.8113333582878113, 0.8173333406448364, 0.8256666660308838, 0.8326666951179504, 0.8240000009536743, 0.8326666951179504, 0.8263333439826965, 0.8383333086967468, 0.843999981880188, 0.847000002861023, 0.8426666855812073, 0.8489999771118164, 0.8483333587646484, 0.8429999947547913, 0.8516666889190674, 0.8536666631698608, 0.859000027179718, 0.8543333411216736, 0.856333315372467, 0.8503333330154419, 0.8573333621025085, 0.8553333282470703]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 2], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 1, 0, 1], [3, 5, 6, 5, 5], [0, 5, 7], [0], [0, 1, 1], [2], [1, 0], [0]], "fitness": -0.11514285951852798, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 8, 5, 3, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [13387244544.0, 10470536773632.0, 2.8543083056883302e+17, 7.351942773240496e+18, 3.3497914765870105e+19, 1.0245541377905105e+20, 2.367155471937553e+20, 4.6656732708042126e+20, 8.205901216853189e+20, 1.4684814121473032e+21, 2.2128809723429074e+21, 3.3519723447065646e+21, 5.517289534747417e+21, 8.844358662364483e+21, 1.2342974966337672e+22], "accuracy": [0.08625016361474991, 0.09021265059709549, 0.1014397069811821, 0.10857218503952026, 0.11662924289703369, 0.11306300014257431, 0.11213842034339905, 0.11610091477632523, 0.11319508403539658, 0.1146479994058609, 0.1220446452498436, 0.11993131786584854, 0.12257297337055206, 0.1270637959241867, 0.12336547672748566], "val_loss": [60824281088.0, 280769595441152.0, 2.1611644588675564e+18, 1.7827054922248487e+19, 6.270228500378655e+19, 1.590435653094264e+20, 3.352845480084321e+20, 6.260508025940743e+20, 1.0722185473967396e+21, 1.7202630306147986e+21, 2.7567341152317966e+21, 4.6622178136213684e+21, 7.325342921748409e+21, 1.0914345344343017e+22, 1.5613884206601428e+22], "val_accuracy": [0.09333333373069763, 0.05366666615009308, 0.09433333575725555, 0.09933333098888397, 0.10366666316986084, 0.10333333164453506, 0.10400000214576721, 0.10233332961797714, 0.10333333164453506, 0.10533333569765091, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 6, 1, 6, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 1], [0, 5, 6, 0], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 5, 2], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [38], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 3, 2], [0, 5, 5, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 3, 0, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1119254528.0, 21247924224.0, 99583025152.0, 276212613120.0, 591179874304.0, 1087760302080.0], "accuracy": [0.09879804402589798, 0.10196803510189056, 0.09932637959718704, 0.09615638852119446, 0.0948355570435524, 0.09879804402589798], "val_loss": [5183235072.0, 41460867072.0, 139924537344.0, 331669602304.0, 647780040704.0, 1119362744320.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 5, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 1], [4, 8, 6], [0, 2], [0], [0, 0, 1, 1, 1], [0, 5, 8], [0, 5], [0], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 4, 2, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]