[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293947458267212, 2.193295955657959, 1.7940194606781006, 1.3744641542434692, 1.0895317792892456, 0.9185898303985596, 0.8559038043022156, 0.8318231105804443, 0.7500624060630798, 0.7384997606277466, 0.7009502053260803, 0.6654747724533081, 0.6447395086288452, 0.6242507696151733, 0.6056864261627197, 0.5881195068359375, 0.5743481516838074, 0.5482104420661926, 0.5487398505210876, 0.5413544774055481, 0.5228634476661682, 0.5144126415252686, 0.49411651492118835, 0.48838213086128235, 0.4810982644557953, 0.4716532528400421, 0.46704208850860596, 0.45025599002838135, 0.44633930921554565, 0.4406479597091675, 0.4184754192829132, 0.4113742709159851, 0.3995613753795624, 0.4040822386741638, 0.3961124122142792, 0.39069801568984985, 0.38153743743896484, 0.3740639090538025, 0.369617760181427, 0.35869473218917847, 0.36678799986839294, 0.36244702339172363], "accuracy": [0.12772421538829803, 0.33020737767219543, 0.42847707867622375, 0.5317659378051758, 0.6363756656646729, 0.6610751748085022, 0.6900013089179993, 0.6911900639533997, 0.7128516435623169, 0.7199841737747192, 0.7317395210266113, 0.7397965788841248, 0.7475894689559937, 0.7717606425285339, 0.763967752456665, 0.7754589915275574, 0.7825914621353149, 0.7890635132789612, 0.7901201844215393, 0.791969358921051, 0.7977809906005859, 0.7973847389221191, 0.8115176558494568, 0.8090080618858337, 0.8084797263145447, 0.8156121969223022, 0.8215559124946594, 0.8300092220306396, 0.8256505131721497, 0.8300092220306396, 0.8405758738517761, 0.8485008478164673, 0.8426892161369324, 0.8425571322441101, 0.8441421389579773, 0.8518029451370239, 0.8490291833877563, 0.8578787446022034, 0.8603883385658264, 0.8644828796386719, 0.8628978729248047, 0.8609166741371155], "val_loss": [2.246358633041382, 2.02907395362854, 1.1418209075927734, 0.854112982749939, 0.7655022740364075, 0.7020747065544128, 0.6667712926864624, 0.6148189306259155, 0.6152079105377197, 0.5807791352272034, 0.5423018932342529, 0.5271356701850891, 0.507427990436554, 0.507205605506897, 0.4917471408843994, 0.4712149202823639, 0.4672473967075348, 0.46781301498413086, 0.4582844376564026, 0.4556771516799927, 0.4595271944999695, 0.44848668575286865, 0.4372221827507019, 0.43246859312057495, 0.428210973739624, 0.4269489645957947, 0.419899582862854, 0.4218691289424896, 0.4077824354171753, 0.40242552757263184, 0.4040240943431854, 0.40838998556137085, 0.3969211280345917, 0.39284569025039673, 0.4055156111717224, 0.38507193326950073, 0.3898582458496094, 0.39241287112236023, 0.3863752782344818, 0.3927813172340393, 0.39234256744384766, 0.386810302734375], "val_accuracy": [0.4336666762828827, 0.46933332085609436, 0.6636666655540466, 0.7039999961853027, 0.7099999785423279, 0.7333333492279053, 0.7409999966621399, 0.7713333368301392, 0.7716666460037231, 0.7786666750907898, 0.7846666574478149, 0.7990000247955322, 0.8066666722297668, 0.8059999942779541, 0.8159999847412109, 0.8149999976158142, 0.8209999799728394, 0.8243333101272583, 0.828000009059906, 0.8270000219345093, 0.8270000219345093, 0.831333339214325, 0.8373333215713501, 0.8339999914169312, 0.8433333039283752, 0.8460000157356262, 0.8489999771118164, 0.8496666550636292, 0.8523333072662354, 0.8516666889190674, 0.8526666760444641, 0.856333315372467, 0.8579999804496765, 0.8613333106040955, 0.8569999933242798, 0.8629999756813049, 0.8659999966621399, 0.8636666536331177, 0.8653333187103271, 0.859666645526886, 0.8606666922569275, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 4, 1, 3, 9], [0, 0, 1, 0, 1], [83, 99, 27, 89], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 3], [0, 5], [0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 1, 6, 4, 3, 8, 1, 0, 6, 6, 8, 1, 3, 2, 3, 9, 2, 6, 9], [1, 2, 0, 2, 0, 5, 1, 6, 7, 1, 7, 2, 3], [0, 51, 54, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 3, 3, 0, 1, 5, 3, 2, 1, 33, 20, 13, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), grad)), alpha)), grad), tf.math.subtract(grad, tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.divide_no_nan(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 4, 3, 6, 6, 4, 9, 5, 6, 3, 3, 2, 0, 1], [0, 1, 1, 0, 2, 2, 2, 3, 1, 1, 0, 2], [91, 99, 27, 67], [0, 0, 0, 1], [0, 1, 9], [0], [0, 28], [0, 0, 0, 1, 1], [5, 5, 3], [0, 5], [48], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 16, 12, 4, 4, 3, 1, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(grad, grad))), tf.math.negative(tf.math.subtract(alpha, alpha))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 7, 1, 3], [0, 0, 2, 2, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [59], [1, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [3], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3105809688568115, 2.3091986179351807, 2.3091793060302734, 2.310748815536499, 2.3104376792907715, 2.3103182315826416], "accuracy": [0.08651433140039444, 0.09192973375320435, 0.09760929644107819, 0.09245806187391281, 0.08770307898521423, 0.09285431355237961], "val_loss": [2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 1, 1, 0, 2], [0, 99, 27], [0, 0, 1], [0, 8, 9], [0], [90], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 10, 5, 5, 1, 3, 2, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, alpha), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310532569885254, 2.3096306324005127, 2.310072898864746, 2.3106420040130615, 2.310109853744507, 2.3104851245880127], "accuracy": [0.09047681838274002, 0.09338264167308807, 0.0936468094587326, 0.08955223858356476, 0.08928807079792023, 0.09338264167308807], "val_loss": [2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]