[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922682762145996, 2.1869382858276367, 1.755953073501587, 1.3560186624526978, 1.061759114265442, 0.9304683208465576, 0.8583354353904724, 0.8220184445381165, 0.7686147689819336, 0.7369551062583923, 0.6959913969039917, 0.6889053583145142, 0.6629668474197388, 0.6247193813323975, 0.6240481734275818, 0.5983874797821045, 0.5736397504806519, 0.5701354146003723, 0.5523383021354675, 0.5533545613288879, 0.5432477593421936, 0.5437650680541992, 0.5148235559463501, 0.5137469172477722, 0.49371302127838135, 0.48952192068099976, 0.47237786650657654, 0.47155866026878357, 0.456327885389328, 0.459133118391037, 0.4352208375930786, 0.4304026663303375, 0.4272362291812897, 0.4106905162334442, 0.41104835271835327, 0.40759405493736267, 0.3954341411590576, 0.3942183554172516, 0.3802432715892792, 0.3857862949371338, 0.3749808073043823, 0.38736215233802795, 0.3824130892753601], "accuracy": [0.12996962666511536, 0.32439571619033813, 0.4391758143901825, 0.537709653377533, 0.6376964449882507, 0.6557918190956116, 0.681547999382019, 0.6984546184539795, 0.7040021419525146, 0.7123233675956726, 0.7294940948486328, 0.739400327205658, 0.7427024245262146, 0.7537974119186401, 0.7614582180976868, 0.7695152759552002, 0.78113853931427, 0.7887993454933167, 0.7852331399917603, 0.789459764957428, 0.7884030938148499, 0.7902522683143616, 0.8041210174560547, 0.8094043135643005, 0.8127063512802124, 0.8132346868515015, 0.8186501264572144, 0.8197067975997925, 0.8216879963874817, 0.8241975903511047, 0.8352925777435303, 0.8358209133148193, 0.8391229510307312, 0.8412362933158875, 0.8388587832450867, 0.8474441766738892, 0.8491612672805786, 0.852331280708313, 0.8506141901016235, 0.8485008478164673, 0.852859616279602, 0.8578787446022034, 0.8576145768165588], "val_loss": [2.2447242736816406, 2.01385498046875, 1.1121838092803955, 0.8851795196533203, 0.7775996923446655, 0.7090108394622803, 0.6992389559745789, 0.6568111777305603, 0.6487482190132141, 0.6206042766571045, 0.5989102125167847, 0.5825048089027405, 0.5604326725006104, 0.5429427623748779, 0.5389295220375061, 0.5175293684005737, 0.5121729969978333, 0.5133602619171143, 0.5251222848892212, 0.5029447078704834, 0.5065147876739502, 0.4979315996170044, 0.4887916147708893, 0.4853593707084656, 0.46852001547813416, 0.4669879674911499, 0.4656640589237213, 0.4614093005657196, 0.4563613831996918, 0.45286229252815247, 0.4492102861404419, 0.4466952979564667, 0.44354578852653503, 0.4300399720668793, 0.42975813150405884, 0.42955443263053894, 0.43572893738746643, 0.4339139759540558, 0.4450971782207489, 0.42520612478256226, 0.43027281761169434, 0.4377346336841583, 0.43937069177627563], "val_accuracy": [0.41466665267944336, 0.46166667342185974, 0.6613333225250244, 0.6850000023841858, 0.7120000123977661, 0.7233333587646484, 0.7506666779518127, 0.7490000128746033, 0.7543333172798157, 0.7613333463668823, 0.7649999856948853, 0.7726666927337646, 0.7823333144187927, 0.7940000295639038, 0.7913333177566528, 0.8063333630561829, 0.8023333549499512, 0.8006666898727417, 0.8033333420753479, 0.8130000233650208, 0.8036666512489319, 0.8073333501815796, 0.8206666707992554, 0.8106666803359985, 0.8243333101272583, 0.828000009059906, 0.8286666870117188, 0.8270000219345093, 0.8336666822433472, 0.8346666693687439, 0.8343333601951599, 0.8376666903495789, 0.8423333168029785, 0.8453333377838135, 0.8386666774749756, 0.847000002861023, 0.8513333201408386, 0.856333315372467, 0.8423333168029785, 0.843999981880188, 0.8489999771118164, 0.8519999980926514, 0.8506666421890259]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [4, 99, 27], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [0, 5, 3], [0, 5], [58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304217576980591, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 6, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 0, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303783655166626, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 1, 2, 1], [83, 99, 37], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 8], [0, 6], [0], [0, 0, 1, 1], [0, 3], [4, 0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 4, 3, 1, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.31146240234375, 2.309580087661743, 2.310037136077881, 2.3091609477996826, 2.3092546463012695, 2.310673952102661], "accuracy": [0.09232597798109055, 0.09232597798109055, 0.09338264167308807, 0.09668471664190292, 0.09259014576673508, 0.09047681838274002], "val_loss": [2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [0, 0, 1, 0, 2], [38, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [8, 5, 2], [0, 5], [0], [0, 0, 0, 1, 0, 1, 1], [0, 5, 3, 6], [1, 0, 3], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 2, 1, 1, 1, 3, 3, 0, 1, 5, 3, 2, 1, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [2.3106911182403564, 2.3108925819396973, 2.3095693588256836, 2.310211181640625, 2.309595823287964, 2.310541868209839], "accuracy": [0.09509972482919693, 0.0886276587843895, 0.0878351628780365, 0.09192973375320435, 0.09774138033390045, 0.09153348207473755], "val_loss": [2.308842897415161, 2.308842897415161, 2.308842897415161, 2.308842897415161, 2.308842897415161, 2.308842897415161], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]