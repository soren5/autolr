[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941648960113525, 2.195683479309082, 1.78919517993927, 1.366429328918457, 1.1025285720825195, 0.9251008629798889, 0.8692686557769775, 0.8136135935783386, 0.7776851654052734, 0.7229660749435425, 0.7093973159790039, 0.6913777589797974, 0.6601760983467102, 0.6367052793502808, 0.6097128987312317, 0.6084906458854675, 0.5936594009399414, 0.57916659116745, 0.5713306069374084, 0.5645862221717834, 0.546588659286499, 0.5341325402259827, 0.5251995921134949, 0.5196018218994141, 0.5080370903015137, 0.4953869879245758, 0.49055883288383484, 0.48401203751564026, 0.4736618995666504, 0.4666893780231476, 0.47148755192756653, 0.45156770944595337, 0.45713382959365845, 0.44157522916793823, 0.43856945633888245, 0.42711544036865234, 0.42041149735450745, 0.4133000373840332, 0.39689794182777405, 0.4026823341846466, 0.3973918557167053, 0.38897109031677246, 0.3765108585357666, 0.3744544982910156, 0.3805141746997833, 0.37314608693122864, 0.3593069911003113, 0.36796677112579346, 0.35549548268318176, 0.34547558426856995, 0.3445059061050415, 0.34378719329833984, 0.3500915467739105], "accuracy": [0.11834631860256195, 0.3195086419582367, 0.4325716495513916, 0.537709653377533, 0.6247523427009583, 0.6606789231300354, 0.6844538450241089, 0.6942279934883118, 0.6951525807380676, 0.7236824631690979, 0.7310791015625, 0.7305507659912109, 0.7458723783493042, 0.7552502751350403, 0.7633073329925537, 0.7683265209197998, 0.778761088848114, 0.7804781198501587, 0.7853652238845825, 0.7829877138137817, 0.7913089394569397, 0.7938185334205627, 0.7989697456359863, 0.8035926818847656, 0.8013472557067871, 0.8109893202781677, 0.8153480291366577, 0.811649739742279, 0.8177255392074585, 0.8207634687423706, 0.8175934553146362, 0.8261788487434387, 0.830669641494751, 0.8363492488861084, 0.8325188159942627, 0.8401796221733093, 0.845859169960022, 0.8411042094230652, 0.8469158411026001, 0.8474441766738892, 0.8492933511734009, 0.8520671129226685, 0.8568220734596252, 0.8570862412452698, 0.860652506351471, 0.8578787446022034, 0.8568220734596252, 0.860652506351471, 0.8656716346740723, 0.8681812286376953, 0.8697662353515625, 0.8697662353515625, 0.8628978729248047], "val_loss": [2.247667074203491, 2.033442497253418, 1.1792901754379272, 0.9583935737609863, 0.7855647802352905, 0.7266378402709961, 0.700255274772644, 0.6713142991065979, 0.6496521234512329, 0.6335734724998474, 0.6101254224777222, 0.5910270810127258, 0.5644269585609436, 0.5490028262138367, 0.5388484001159668, 0.5258379578590393, 0.5280413627624512, 0.5295172929763794, 0.5274388790130615, 0.5151703357696533, 0.5137784481048584, 0.510844886302948, 0.5039510726928711, 0.48757901787757874, 0.48089030385017395, 0.47894251346588135, 0.45743781328201294, 0.4516306221485138, 0.4512062072753906, 0.4448913633823395, 0.4337500035762787, 0.45064592361450195, 0.4407019019126892, 0.4282824397087097, 0.4200950860977173, 0.4598468542098999, 0.4368586540222168, 0.4193466007709503, 0.42402416467666626, 0.42125993967056274, 0.4167444705963135, 0.41836217045783997, 0.4175165295600891, 0.4238755404949188, 0.42639657855033875, 0.4127475619316101, 0.4237307906150818, 0.4375606179237366, 0.42148157954216003, 0.4313228726387024, 0.4508940577507019, 0.4277362525463104, 0.4289664030075073], "val_accuracy": [0.4176666736602783, 0.4763333201408386, 0.6269999742507935, 0.6669999957084656, 0.7103333473205566, 0.734000027179718, 0.734666645526886, 0.7473333477973938, 0.7549999952316284, 0.7556666731834412, 0.7573333382606506, 0.7743333578109741, 0.7829999923706055, 0.7996666431427002, 0.8029999732971191, 0.8050000071525574, 0.8073333501815796, 0.8050000071525574, 0.8026666641235352, 0.8076666593551636, 0.8096666932106018, 0.8083333373069763, 0.812333345413208, 0.8236666917800903, 0.8256666660308838, 0.8299999833106995, 0.8386666774749756, 0.8403333425521851, 0.8389999866485596, 0.8396666646003723, 0.8500000238418579, 0.8433333039283752, 0.8396666646003723, 0.847000002861023, 0.8523333072662354, 0.8443333506584167, 0.8463333249092102, 0.8533333539962769, 0.846666693687439, 0.8476666808128357, 0.8510000109672546, 0.8523333072662354, 0.8539999723434448, 0.8516666889190674, 0.8603333234786987, 0.862333357334137, 0.8613333106040955, 0.8656666874885559, 0.859666645526886, 0.8616666793823242, 0.8629999756813049, 0.8583333492279053, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 7, 5, 5, 0], [0, 1, 1, 0, 2, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [0, 5, 1], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 2, 3, 3, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15242372453212738, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [3, 1, 2, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8, 9], [0], [0], [1, 0, 0, 1, 1], [0, 5, 6], [0, 4], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0], [0, 8, 7], [0], [0], [0, 1, 0, 1, 1], [0, 2, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46697381888.0, 7117209600000.0, 119398966755328.0, 826639269232640.0, 3723711681134592.0, 1.2161394245894144e+16], "accuracy": [0.09655263274908066, 0.10077928751707077, 0.10011887550354004, 0.10342095047235489, 0.09998679161071777, 0.09813763201236725], "val_loss": [473548193792.0, 25530806042624.0, 274045169827840.0, 1494087052034048.0, 5597020991520768.0, 1.6507727203270656e+16], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 3, 1, 3, 0, 8, 7, 5, 4, 0, 1, 4, 0, 4, 8, 4, 9], [0, 0, 1, 3, 2, 1, 0, 2, 1, 1], [83, 98, 27, 84], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 1], [0, 5, 6, 8], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 18, 10, 4, 3, 3, 0, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(alpha)))), tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.subtract(tf.math.pow(grad, alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(grad))), tf.math.pow(tf.math.sqrt(tf.math.pow(alpha, alpha)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]