[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292478084564209, 2.1899282932281494, 1.7732807397842407, 1.3352311849594116, 1.0633699893951416, 0.9154155850410461, 0.8515498042106628, 0.8179710507392883, 0.7604928016662598, 0.7518659234046936, 0.7007976174354553, 0.6810253262519836, 0.6599361300468445, 0.621017336845398, 0.6166452765464783, 0.6082982420921326, 0.5936469435691833, 0.5801161527633667, 0.563565194606781, 0.5548523664474487, 0.5454299449920654, 0.5350629091262817, 0.5097654461860657, 0.5112572312355042, 0.5074089169502258, 0.5094211101531982, 0.481854110956192, 0.49105304479599, 0.4759822189807892, 0.47406601905822754, 0.47777166962623596, 0.4428901970386505, 0.44605520367622375, 0.44477784633636475, 0.4336663484573364, 0.4257484972476959, 0.41302981972694397, 0.3958989381790161, 0.3974078595638275, 0.40284350514411926, 0.3934556543827057], "accuracy": [0.1258750557899475, 0.32360321283340454, 0.43891164660453796, 0.5408796668052673, 0.6382247805595398, 0.6653017997741699, 0.6933034062385559, 0.6894729733467102, 0.7057191729545593, 0.7119271159172058, 0.7329282760620117, 0.7322678565979004, 0.7506273984909058, 0.7574957013130188, 0.7689869403839111, 0.767401933670044, 0.7708360552787781, 0.7791573405265808, 0.7845727205276489, 0.785101056098938, 0.7915731072425842, 0.7957997918128967, 0.8030643463134766, 0.8057059645652771, 0.8041210174560547, 0.8064984679222107, 0.8149517774581909, 0.8096684813499451, 0.8191784620285034, 0.8235371708869934, 0.8249900937080383, 0.833179235458374, 0.8315942287445068, 0.8264430165290833, 0.8360850811004639, 0.839519202709198, 0.8451988101005554, 0.8474441766738892, 0.845859169960022, 0.8475762605667114, 0.8482366800308228], "val_loss": [2.2477569580078125, 2.0252797603607178, 1.15663480758667, 0.902019202709198, 0.7710296511650085, 0.732785165309906, 0.6899576783180237, 0.6625173091888428, 0.6549953818321228, 0.6378018856048584, 0.5976279973983765, 0.5747000575065613, 0.5625815391540527, 0.5474231243133545, 0.5447092056274414, 0.5350082516670227, 0.533627986907959, 0.5427345037460327, 0.5362196564674377, 0.5280227065086365, 0.5224127769470215, 0.5157288312911987, 0.5118860006332397, 0.5063329935073853, 0.4960385859012604, 0.4922521114349365, 0.47975701093673706, 0.48222842812538147, 0.4809812903404236, 0.4738803803920746, 0.46525663137435913, 0.46122661232948303, 0.45572420954704285, 0.45283105969429016, 0.4407064914703369, 0.43993180990219116, 0.44691768288612366, 0.4500178098678589, 0.45258527994155884, 0.4577661454677582, 0.4381219744682312], "val_accuracy": [0.38966667652130127, 0.45133334398269653, 0.6416666507720947, 0.6850000023841858, 0.7193333506584167, 0.7243333458900452, 0.7473333477973938, 0.7563333511352539, 0.7516666650772095, 0.7696666717529297, 0.765666663646698, 0.7853333353996277, 0.7916666865348816, 0.8090000152587891, 0.8009999990463257, 0.8050000071525574, 0.8130000233650208, 0.8136666417121887, 0.809333324432373, 0.8140000104904175, 0.8213333487510681, 0.8226666450500488, 0.8196666836738586, 0.8270000219345093, 0.8353333473205566, 0.8370000123977661, 0.8363333344459534, 0.8383333086967468, 0.831333339214325, 0.8393333554267883, 0.8396666646003723, 0.8416666388511658, 0.8420000076293945, 0.8383333086967468, 0.8453333377838135, 0.8533333539962769, 0.8526666760444641, 0.8513333201408386, 0.8483333587646484, 0.8516666889190674, 0.8533333539962769]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 6, 5, 3], [0, 0, 1, 0, 2], [83, 49, 27], [0, 0, 0], [0, 0, 9], [0], [0], [0, 1, 0, 1, 1], [0, 5, 6], [0, 5], [58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [10393106432.0, 195596025856.0, 944450371584.0, 2571105206272.0, 5543354171392.0, 10223983001600.0], "accuracy": [0.09959053993225098, 0.10196803510189056, 0.10091137140989304, 0.10606260597705841, 0.10051512718200684, 0.09879804402589798], "val_loss": [48402563072.0, 387196092416.0, 1306737901568.0, 3097428754432.0, 6049618722816.0, 10453720760320.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 58], [0, 1, 1], [0, 8, 7], [0], [0], [0, 0, 0, 1, 0, 1, 1], [0, 5, 6, 4], [0, 5, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [30716466.0, 2.683650493621826, 2.4701755046844482, 2.5623295307159424, 2.628659963607788, 2.4849131107330322, 2.614544630050659], "accuracy": [0.09377889335155487, 0.09734513610601425, 0.09866596013307571, 0.09985470771789551, 0.10157178342342377, 0.09906221181154251, 0.09840179979801178], "val_loss": [2.71266770362854, 2.6263046264648438, 2.7051773071289062, 2.5934226512908936, 2.7123420238494873, 2.606381416320801, 2.57641863822937], "val_accuracy": [0.09966666996479034, 0.10300000011920929, 0.10100000351667404, 0.09733333438634872, 0.10300000011920929, 0.10100000351667404, 0.09733333438634872]}, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 11}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 6], [0, 0, 0, 0, 2, 0], [83, 99, 27, 13, 64], [0, 1, 0], [0, 8, 1], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [3], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 12, 6, 6, 5, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3096816539764404, 2.310215711593628, 2.3105857372283936, 2.3091630935668945, 2.3096909523010254, 2.3107988834381104], "accuracy": [0.09549596905708313, 0.09153348207473755, 0.09008057415485382, 0.09153348207473755, 0.09232597798109055, 0.08347642421722412], "val_loss": [2.3084211349487305, 2.3084211349487305, 2.3084211349487305, 2.3084211349487305, 2.3084211349487305, 2.3084211349487305], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 3, 1, 3], [0, 0, 1, 0, 0], [83, 99, 27, 15], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 2, 6, 0, 6, 3, 0, 3], [4, 5, 0, 4, 5, 6, 3, 3], [0], [0, 1, 0, 1], [3, 5], [1, 4], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 10, 5, 5, 4, 3, 3, 0, 1, 18, 10, 8, 1, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(grad, sigma))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(grad))", "other_info": {"loss": [2.3088226318359375, 2.3102915287017822, 2.3107051849365234, 2.310915470123291, 2.3095664978027344, 2.3110287189483643], "accuracy": [0.09708096832036972, 0.08466517180204391, 0.09087307006120682, 0.08479725569486618, 0.08770307898521423, 0.09087307006120682], "val_loss": [2.3088886737823486, 2.3088910579681396, 2.3088948726654053, 2.308900833129883, 2.308907985687256, 2.308915376663208], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]