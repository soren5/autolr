[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931854724884033, 2.1888327598571777, 1.7726202011108398, 1.3430975675582886, 1.0794192552566528, 0.931492805480957, 0.8449639678001404, 0.8321143388748169, 0.7496083378791809, 0.7426819205284119, 0.7077116370201111, 0.6784536242485046, 0.6345372796058655, 0.6235886812210083, 0.6051859259605408, 0.5883445143699646, 0.5889889597892761, 0.5603946447372437, 0.5583347678184509, 0.5529267191886902, 0.5432083606719971, 0.5351506471633911, 0.5121639370918274, 0.5182400941848755, 0.4980764091014862, 0.4984772503376007, 0.48271241784095764, 0.4770500063896179, 0.4726366102695465, 0.44506901502609253, 0.445901095867157, 0.44642147421836853, 0.43071243166923523, 0.4216003715991974, 0.41906800866127014, 0.41165754199028015, 0.39711982011795044, 0.40274733304977417, 0.400280624628067, 0.37857839465141296, 0.3770424723625183, 0.3915691673755646, 0.36664682626724243, 0.368272066116333], "accuracy": [0.1306300312280655, 0.32967904210090637, 0.4364020526409149, 0.5371813774108887, 0.6289790272712708, 0.6534143686294556, 0.6818121671676636, 0.693831741809845, 0.7132478952407837, 0.7086250185966492, 0.7304186820983887, 0.7403249144554138, 0.750759482383728, 0.7614582180976868, 0.7577598690986633, 0.7683265209197998, 0.7732135653495789, 0.7770439982414246, 0.7823272943496704, 0.7895918488502502, 0.789988100528717, 0.7902522683143616, 0.8012151718139648, 0.800818920135498, 0.8055738806724548, 0.8086118102073669, 0.8148196935653687, 0.8171972036361694, 0.8204993009567261, 0.828292191028595, 0.830669641494751, 0.8294808864593506, 0.8385946154594421, 0.8345000743865967, 0.8400475382804871, 0.841500461101532, 0.8465195894241333, 0.8444063067436218, 0.8459912538528442, 0.8508783578872681, 0.8570862412452698, 0.856689989566803, 0.8610487580299377, 0.8597279191017151], "val_loss": [2.246366500854492, 2.020082712173462, 1.1424052715301514, 0.8881606459617615, 0.7497656345367432, 0.7380419969558716, 0.694150447845459, 0.6727316379547119, 0.6532171964645386, 0.6069936752319336, 0.5763757228851318, 0.5572875142097473, 0.5448303818702698, 0.5319064259529114, 0.5177476406097412, 0.5090855956077576, 0.4931982159614563, 0.489188015460968, 0.4900667369365692, 0.4759218394756317, 0.47667890787124634, 0.46589136123657227, 0.46518954634666443, 0.454792320728302, 0.4538150727748871, 0.44531747698783875, 0.44520270824432373, 0.4491385221481323, 0.4319819211959839, 0.43074357509613037, 0.42532092332839966, 0.4134986102581024, 0.4203890860080719, 0.4177958071231842, 0.4158185124397278, 0.4197739362716675, 0.4025109112262726, 0.41798192262649536, 0.41420403122901917, 0.40248560905456543, 0.425680547952652, 0.39749789237976074, 0.403617799282074, 0.4381474256515503], "val_accuracy": [0.4259999990463257, 0.4410000145435333, 0.6453333497047424, 0.6886666417121887, 0.7149999737739563, 0.7293333411216736, 0.7319999933242798, 0.7543333172798157, 0.7393333315849304, 0.7753333449363708, 0.7816666960716248, 0.7916666865348816, 0.7886666655540466, 0.8043333292007446, 0.8003333210945129, 0.8019999861717224, 0.8133333325386047, 0.8163333535194397, 0.812333345413208, 0.8273333311080933, 0.8326666951179504, 0.8273333311080933, 0.8209999799728394, 0.8309999704360962, 0.8349999785423279, 0.8410000205039978, 0.8323333263397217, 0.8299999833106995, 0.843999981880188, 0.8443333506584167, 0.8453333377838135, 0.8483333587646484, 0.8476666808128357, 0.8533333539962769, 0.8569999933242798, 0.8576666712760925, 0.8553333282470703, 0.8539999723434448, 0.8610000014305115, 0.8576666712760925, 0.8473333120346069, 0.8556666374206543, 0.8506666421890259, 0.8533333539962769]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 3, 1, 3, 8, 5, 5, 6, 9, 6, 8], [2, 0, 1, 0, 2, 2], [83, 2, 87], [0, 0, 0], [0, 8, 9], [0], [84], [0, 0, 0, 1, 1], [0, 5, 6], [0, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 12, 6, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 9, 3, 2], [0, 0, 1, 0, 2], [83, 99, 27, 12], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 8, 3, 1, 8, 0], [0, 4, 1], [0], [1, 0, 1, 1, 1], [0, 4, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 9, 6, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.negative(grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [43488546816.0, 6020404346880.0, 96342122692608.0, 635702739992576.0, 2588985616498688.0, 7873592565956608.0], "accuracy": [0.1026284471154213, 0.10315678268671036, 0.09787346422672272, 0.10447761416435242, 0.09628847241401672, 0.09668471664190292], "val_loss": [435718356992.0, 21627597225984.0, 213969818091520.0, 1076564422819840.0, 3725337057820672.0, 1.0163059779698688e+16], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 41], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 0], [73, 68], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 7, 3, 4, 3, 9, 2, 0, 6, 8, 4, 8, 8, 0], [1, 3, 6, 6, 1, 6, 1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 2, 22, 14, 8, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(sigma, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.pow(tf.math.sqrt(alpha), tf.math.sqrt(grad))))), alpha), tf.math.negative(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 4, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 8, 8], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 7], [0], [0, 1], [0], [3], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 8, 4, 4, 2, 4, 3, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3101654052734375, 2.309251070022583, 2.309586763381958, 2.308758020401001, 2.3094921112060547, 2.3085379600524902], "accuracy": [0.08717474341392517, 0.09708096832036972, 0.0948355570435524, 0.09047681838274002, 0.08955223858356476, 0.09536388516426086], "val_loss": [2.3085153102874756, 2.3085153102874756, 2.3085153102874756, 2.3085153102874756, 2.3085153102874756, 2.3085153102874756], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]