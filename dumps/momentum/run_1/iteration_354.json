[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294649600982666, 2.195429563522339, 1.7859302759170532, 1.388316035270691, 1.0893809795379639, 0.9351932406425476, 0.8463281989097595, 0.8174036145210266, 0.746324360370636, 0.7313768863677979, 0.6913360357284546, 0.6769970059394836, 0.6484193205833435, 0.6347009539604187, 0.6062490344047546, 0.5948412418365479, 0.5828269124031067, 0.5669617056846619, 0.5537575483322144, 0.5483574867248535, 0.5377994179725647, 0.544734001159668, 0.5249916315078735, 0.5110881328582764, 0.5009825825691223, 0.4768688976764679, 0.47456803917884827, 0.4592791199684143, 0.44953203201293945, 0.45637670159339905, 0.43612080812454224, 0.4228998124599457, 0.42925503849983215, 0.411805123090744, 0.4045736491680145, 0.4088606834411621, 0.4051778316497803, 0.39577075839042664, 0.39280155301094055, 0.37234899401664734, 0.3742445111274719, 0.3747037351131439, 0.3643275201320648, 0.3435972332954407], "accuracy": [0.12270505726337433, 0.32399946451187134, 0.44525161385536194, 0.5385021567344666, 0.6272619366645813, 0.6565843224525452, 0.6839255094528198, 0.7034738063812256, 0.7113987803459167, 0.7218332886695862, 0.7401928305625916, 0.7321357727050781, 0.7549861073493958, 0.7597411274909973, 0.7630431652069092, 0.7711002230644226, 0.7796856164932251, 0.7837802171707153, 0.787082314491272, 0.7928939461708069, 0.7910447716712952, 0.7971205711364746, 0.8004226684570312, 0.7984414100646973, 0.8084797263145447, 0.8094043135643005, 0.8141592741012573, 0.8256505131721497, 0.8232730031013489, 0.8165367841720581, 0.8345000743865967, 0.8380662798881531, 0.8413683772087097, 0.8437458872795105, 0.8469158411026001, 0.845859169960022, 0.8457271456718445, 0.8444063067436218, 0.8536521196365356, 0.8565579056739807, 0.8535200357437134, 0.8593316674232483, 0.8560295701026917, 0.8660678863525391], "val_loss": [2.246375560760498, 2.029775619506836, 1.1591089963912964, 0.8825178146362305, 0.7919651865959167, 0.7138124108314514, 0.6599225401878357, 0.6507835984230042, 0.634339451789856, 0.6161421537399292, 0.5926868915557861, 0.5645213723182678, 0.5583845376968384, 0.5512916445732117, 0.5513138771057129, 0.5308403372764587, 0.5128887295722961, 0.530082106590271, 0.5259656310081482, 0.5118727684020996, 0.5157453417778015, 0.5069223046302795, 0.5089277625083923, 0.518963634967804, 0.48666614294052124, 0.4851457476615906, 0.4782034158706665, 0.4832688271999359, 0.46547338366508484, 0.4697389602661133, 0.4807281792163849, 0.4631677269935608, 0.4471191465854645, 0.4448210597038269, 0.4606885313987732, 0.4468536078929901, 0.44762930274009705, 0.4683370888233185, 0.4573832154273987, 0.44305723905563354, 0.45309269428253174, 0.4658220112323761, 0.45220255851745605, 0.45187902450561523], "val_accuracy": [0.4269999861717224, 0.4790000021457672, 0.6439999938011169, 0.6893333196640015, 0.7250000238418579, 0.7490000128746033, 0.7513333559036255, 0.7553333044052124, 0.7716666460037231, 0.7670000195503235, 0.7620000243186951, 0.7826666831970215, 0.7836666703224182, 0.7916666865348816, 0.7900000214576721, 0.8019999861717224, 0.8149999976158142, 0.8096666932106018, 0.8159999847412109, 0.8240000009536743, 0.8133333325386047, 0.8240000009536743, 0.8203333616256714, 0.8109999895095825, 0.8256666660308838, 0.8349999785423279, 0.8473333120346069, 0.8336666822433472, 0.8393333554267883, 0.8446666598320007, 0.8513333201408386, 0.8473333120346069, 0.8463333249092102, 0.8516666889190674, 0.8566666841506958, 0.8489999771118164, 0.8586666584014893, 0.8640000224113464, 0.8669999837875366, 0.8616666793823242, 0.8610000014305115, 0.8553333282470703, 0.8576666712760925, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 1, 6, 5, 6, 4, 5], [0, 5, 3, 1, 5], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0, 1, 1], [0, 6, 3], [1, 6, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 13, 8, 5, 1, 5, 3, 2, 1, 6, 3, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(grad), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(alpha)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.multiply(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 5, 3, 5, 2, 5, 5, 1, 7, 0, 1, 3, 4, 3, 4, 1, 0, 1, 8, 3, 7, 3, 1, 2, 8], [0, 0, 1, 0, 2, 2, 2, 0, 3, 1, 1, 1, 1, 2, 0, 1, 3, 1, 1], [44, 99, 27, 99, 40], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [19], [0, 1, 1], [3], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 27, 19, 5, 3, 3, 0, 1, 5, 3, 2, 1, 3, 1, 2, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.subtract(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(grad, grad), tf.math.multiply(tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.math.negative(tf.math.subtract(alpha, alpha)), tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(alpha, grad))))))), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.sqrt(alpha), grad), alpha))))))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 1], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 1, 0], [0, 2, 9], [0], [0, 42], [0, 1, 0, 1, 1], [0, 5, 2], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 1, 3, 1, 3], [1, 0, 2, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 3, 2, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3044486045837402, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]