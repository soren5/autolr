[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8091428279876709, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926857471466064, 2.189654588699341, 1.7698477506637573, 1.345805287361145, 1.0650999546051025, 0.9208976626396179, 0.865847647190094, 0.8117806911468506, 0.7729143500328064, 0.7372764348983765, 0.7122072577476501, 0.6900947690010071, 0.649203360080719, 0.6359913945198059, 0.6070649027824402, 0.6001747846603394, 0.5801228880882263, 0.5677714943885803, 0.5558000206947327, 0.5501362681388855, 0.5463550686836243, 0.5331134796142578, 0.5197849869728088, 0.5135207772254944, 0.49160119891166687, 0.48747876286506653, 0.4733521342277527, 0.4691675901412964, 0.45103734731674194, 0.44621965289115906, 0.44854435324668884, 0.4326784014701843, 0.420945942401886, 0.4185033142566681, 0.4077393114566803, 0.40836474299430847, 0.388394296169281, 0.3874571621417999, 0.386895090341568, 0.38572654128074646, 0.35736364126205444, 0.3596368730068207, 0.3583177626132965, 0.3396753668785095, 0.35412582755088806, 0.3424355983734131, 0.33700454235076904, 0.3284565806388855, 0.3221191167831421], "accuracy": [0.1282525360584259, 0.3203011453151703, 0.44551578164100647, 0.5460308790206909, 0.6390172839164734, 0.6692643165588379, 0.694360077381134, 0.7057191729545593, 0.7051908373832703, 0.7182670831680298, 0.7309470176696777, 0.7430986762046814, 0.752740740776062, 0.7602694630622864, 0.7724210619926453, 0.7741381525993347, 0.7853652238845825, 0.7874785661697388, 0.7917051911354065, 0.7965922355651855, 0.7911768555641174, 0.7932901978492737, 0.8016114234924316, 0.802271842956543, 0.8109893202781677, 0.811649739742279, 0.8207634687423706, 0.8144234418869019, 0.8239334225654602, 0.8265751004219055, 0.826310932636261, 0.8310658931732178, 0.8391229510307312, 0.8319904804229736, 0.8393871188163757, 0.8450667262077332, 0.8485008478164673, 0.8504821062088013, 0.8477083444595337, 0.8521991968154907, 0.8631620407104492, 0.8582749962806702, 0.8617091774940491, 0.8634262084960938, 0.8632941246032715, 0.8676528930664062, 0.8685774803161621, 0.8739928603172302, 0.8733324408531189], "val_loss": [2.2460289001464844, 2.017157793045044, 1.1274901628494263, 0.8550592660903931, 0.75372314453125, 0.703989565372467, 0.681140124797821, 0.6295719146728516, 0.6222730278968811, 0.5993241667747498, 0.5726125240325928, 0.5422220826148987, 0.5318998098373413, 0.5140778422355652, 0.4997791647911072, 0.5001932978630066, 0.48419731855392456, 0.4775310158729553, 0.4705064296722412, 0.4657869040966034, 0.46952489018440247, 0.45419132709503174, 0.44628050923347473, 0.43692171573638916, 0.4305900037288666, 0.4294677674770355, 0.4295075237751007, 0.41738611459732056, 0.41554149985313416, 0.41511666774749756, 0.4163666069507599, 0.3964872360229492, 0.3878394663333893, 0.40711838006973267, 0.38556450605392456, 0.3852052390575409, 0.39340072870254517, 0.3893671929836273, 0.38759809732437134, 0.38412943482398987, 0.3766973614692688, 0.375105619430542, 0.36963167786598206, 0.36606356501579285, 0.370921790599823, 0.3730703890323639, 0.36908480525016785, 0.3699500262737274, 0.3837486207485199], "val_accuracy": [0.414000004529953, 0.4976666569709778, 0.656000018119812, 0.6859999895095825, 0.7319999933242798, 0.7256666421890259, 0.7273333072662354, 0.7273333072662354, 0.765333354473114, 0.7630000114440918, 0.7746666669845581, 0.7816666960716248, 0.8016666769981384, 0.809333324432373, 0.8159999847412109, 0.809333324432373, 0.8066666722297668, 0.8180000185966492, 0.8206666707992554, 0.8173333406448364, 0.8240000009536743, 0.8253333568572998, 0.82833331823349, 0.8299999833106995, 0.8330000042915344, 0.8386666774749756, 0.8353333473205566, 0.8399999737739563, 0.8403333425521851, 0.8413333296775818, 0.8473333120346069, 0.8560000061988831, 0.8539999723434448, 0.8426666855812073, 0.8576666712760925, 0.8586666584014893, 0.8513333201408386, 0.8526666760444641, 0.8606666922569275, 0.8650000095367432, 0.8610000014305115, 0.8600000143051147, 0.8666666746139526, 0.8706666827201843, 0.8683333396911621, 0.8693333268165588, 0.8686666488647461, 0.8600000143051147, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 5, 4, 6, 1, 5], [0, 0, 1, 0, 2, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 3, 0, 6, 7, 8, 4, 5, 8], [0, 2, 4, 1, 2], [26], [0, 1, 0, 1, 1], [0, 6, 6], [0, 5], [0], [1, 0], [1], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 15, 10, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.square(grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.pow(tf.math.square(alpha), tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 0], [83, 18, 55], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47058501632.0, 6851565977600.0, 119860256309248.0, 845143800283136.0, 3756927884460032.0, 1.2130575708061696e+16], "accuracy": [0.09681680053472519, 0.10579843819141388, 0.09866596013307571, 0.1002509593963623, 0.10342095047235489, 0.1006472036242485], "val_loss": [469184315392.0, 25295771926528.0, 271516809822208.0, 1480248264753152.0, 5545235497091072.0, 1.6354624504070144e+16], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 1, 3, 1, 3, 3, 2, 0, 8, 0, 5], [0, 0, 1, 0, 2, 1, 1], [83, 99, 27], [0, 0, 0, 1], [2, 8, 9], [0], [0, 56], [0, 0, 0, 1, 1], [0, 5, 6], [6, 5], [0], [0, 0, 1, 0, 1, 1], [0, 4, 3], [1, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 3, 4, 3, 1, 2, 5, 3, 2, 0, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.square(alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.multiply(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3], [2, 0, 1, 0, 2], [83, 15, 27], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 5, 2, 7, 1, 0, 7, 0, 0, 8, 8, 4, 9, 3, 7, 8, 4, 4, 7], [0, 5, 0, 1, 1, 6, 1, 0, 0, 7], [0, 24, 88, 63, 38], [0, 1], [0], [0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 29, 19, 10, 5, 2, 1, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.sqrt(grad)))), tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(alpha), tf.math.pow(tf.math.pow(alpha, grad), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309422731399536, 2.310244083404541, 2.3096766471862793, 2.309380292892456, 2.30942440032959, 2.310472249984741], "accuracy": [0.0956280529499054, 0.09021265059709549, 0.09126931428909302, 0.09694888442754745, 0.0866464152932167, 0.09219389408826828], "val_loss": [2.308643341064453, 2.308643341064453, 2.308643341064453, 2.308643341064453, 2.308643341064453, 2.308643341064453], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]