[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2952628135681152, 2.19126296043396, 1.779942274093628, 1.3518271446228027, 1.0784114599227905, 0.9213443398475647, 0.8411257266998291, 0.7922081351280212, 0.7670989632606506, 0.753989577293396, 0.707658588886261, 0.6946896314620972, 0.6609732508659363, 0.6385025978088379, 0.6119568347930908, 0.6052477359771729, 0.58407062292099, 0.5723534822463989, 0.5666887760162354, 0.5466729998588562, 0.5287371873855591, 0.5267549157142639, 0.5166523456573486, 0.49915018677711487, 0.499872624874115, 0.4799274504184723, 0.4746024012565613, 0.47212186455726624, 0.4608829617500305, 0.4498008191585541, 0.4420498311519623, 0.436159610748291, 0.4319586455821991, 0.4287690222263336, 0.4189806282520294, 0.42809367179870605, 0.39739421010017395, 0.39326387643814087, 0.40048593282699585, 0.38607680797576904, 0.37819015979766846, 0.3816297948360443, 0.36390265822410583, 0.3545558750629425, 0.35908243060112, 0.3530164361000061, 0.3426749110221863, 0.3551526963710785, 0.3351503610610962, 0.3333129584789276, 0.327438622713089, 0.3265252113342285, 0.3269677460193634, 0.31937989592552185, 0.3099673092365265, 0.30772194266319275, 0.31574931740760803, 0.29334455728530884, 0.2983226478099823, 0.2910027801990509, 0.28896522521972656, 0.27221909165382385], "accuracy": [0.12812046706676483, 0.33126401901245117, 0.4399682879447937, 0.5398229956626892, 0.6349227428436279, 0.6637167930603027, 0.6950204968452454, 0.700171709060669, 0.6960771083831787, 0.7058512568473816, 0.7363624572753906, 0.7354378700256348, 0.7479857206344604, 0.7563069462776184, 0.7600052952766418, 0.7692511081695557, 0.7745344042778015, 0.7808743715286255, 0.78113853931427, 0.791441023349762, 0.7918372750282288, 0.7951393723487854, 0.8041210174560547, 0.8067626357078552, 0.8098005652427673, 0.8153480291366577, 0.8161405324935913, 0.8191784620285034, 0.8227446675300598, 0.8267071843147278, 0.8289526104927063, 0.829216718673706, 0.8343679904937744, 0.8348963260650635, 0.8400475382804871, 0.8401796221733093, 0.8442742228507996, 0.8511425256729126, 0.8455950617790222, 0.8532558679580688, 0.856689989566803, 0.8491612672805786, 0.8621054291725159, 0.8590674996376038, 0.856689989566803, 0.8573504090309143, 0.8647470474243164, 0.8651432991027832, 0.8716153502464294, 0.8687095642089844, 0.8741249442100525, 0.872407853603363, 0.8729361891746521, 0.8766345381736755, 0.8730682730674744, 0.8779553771018982, 0.8775591254234314, 0.8829745054244995, 0.8799365758895874, 0.8828424215316772, 0.8842953443527222, 0.8910315632820129], "val_loss": [2.246654748916626, 2.0255236625671387, 1.1525381803512573, 0.893962562084198, 0.7675260305404663, 0.720697820186615, 0.6552027463912964, 0.6528385281562805, 0.653570294380188, 0.6275527477264404, 0.6061251759529114, 0.5762814879417419, 0.5621254444122314, 0.5514271259307861, 0.532558262348175, 0.5264700055122375, 0.5116026401519775, 0.5026451349258423, 0.5087511539459229, 0.49704065918922424, 0.4870728850364685, 0.4778687059879303, 0.47059106826782227, 0.47290897369384766, 0.4609057903289795, 0.4533553421497345, 0.4454132914543152, 0.43308672308921814, 0.43369317054748535, 0.4323045313358307, 0.4216841161251068, 0.4224882125854492, 0.42623090744018555, 0.41157662868499756, 0.41218268871307373, 0.40947335958480835, 0.40696731209754944, 0.3990418016910553, 0.40354305505752563, 0.3990139067173004, 0.39772066473960876, 0.4064192771911621, 0.4130867123603821, 0.4007450342178345, 0.4002514183521271, 0.3929954469203949, 0.39811307191848755, 0.39210066199302673, 0.3856668174266815, 0.3969683349132538, 0.405780553817749, 0.40732845664024353, 0.4153144061565399, 0.4304531514644623, 0.4175272583961487, 0.40446391701698303, 0.3994796574115753, 0.4124358594417572, 0.43184611201286316, 0.41810742020606995, 0.4168443977832794, 0.417692631483078], "val_accuracy": [0.44066667556762695, 0.468666672706604, 0.656333327293396, 0.6976666450500488, 0.7143333554267883, 0.7406666874885559, 0.7513333559036255, 0.7613333463668823, 0.7580000162124634, 0.7720000147819519, 0.7716666460037231, 0.7826666831970215, 0.7963333129882812, 0.793666660785675, 0.793666660785675, 0.7996666431427002, 0.8050000071525574, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8226666450500488, 0.8206666707992554, 0.8253333568572998, 0.8343333601951599, 0.8353333473205566, 0.8303333520889282, 0.840666651725769, 0.8523333072662354, 0.8500000238418579, 0.8486666679382324, 0.8539999723434448, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8603333234786987, 0.8566666841506958, 0.8616666793823242, 0.8690000176429749, 0.8656666874885559, 0.8650000095367432, 0.8666666746139526, 0.875, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.875333309173584, 0.8766666650772095, 0.8799999952316284, 0.8733333349227905, 0.8793333172798157, 0.8786666393280029, 0.8713333606719971, 0.8813333511352539, 0.8806666731834412, 0.8743333220481873, 0.8816666603088379, 0.8836666941642761, 0.875333309173584, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8793333172798157]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928059101104736, 2.190157413482666, 1.7862895727157593, 1.3497000932693481, 1.1012496948242188, 0.9554930329322815, 0.8848873972892761, 0.8197013139724731, 0.7818580269813538, 0.7445055246353149, 0.7138311862945557, 0.6887409090995789, 0.6734999418258667, 0.635086178779602, 0.6123388409614563, 0.5935329794883728, 0.5823673009872437, 0.577940821647644, 0.560973048210144, 0.5393379926681519, 0.5243581533432007, 0.5199340581893921, 0.504869282245636, 0.49625933170318604, 0.4879557192325592, 0.468217670917511, 0.4632066786289215, 0.4490956962108612, 0.4452317953109741, 0.4401181936264038, 0.4359678328037262, 0.42851880192756653, 0.42982521653175354, 0.4198381304740906, 0.40846407413482666, 0.4007323980331421, 0.3811902403831482, 0.37474197149276733, 0.3679530620574951, 0.36336252093315125, 0.3606110215187073, 0.3542186915874481, 0.34329551458358765, 0.34107473492622375, 0.343148797750473], "accuracy": [0.12323339283466339, 0.32465988397598267, 0.41949543356895447, 0.5378417372703552, 0.6268656849861145, 0.6583014130592346, 0.687491774559021, 0.7000396251678467, 0.7028133869171143, 0.7059833407402039, 0.7256637215614319, 0.7408532500267029, 0.7452120184898376, 0.7651565074920654, 0.7697794437408447, 0.7711002230644226, 0.7751948237419128, 0.789988100528717, 0.7905164361000061, 0.7910447716712952, 0.8026680946350098, 0.8076872229576111, 0.8108572363853455, 0.8150838613510132, 0.822348415851593, 0.8300092220306396, 0.828292191028595, 0.8318583965301514, 0.8280280232429504, 0.8366134166717529, 0.8348963260650635, 0.841500461101532, 0.8370096683502197, 0.8407079577445984, 0.8475762605667114, 0.8485008478164673, 0.8574824929237366, 0.8593316674232483, 0.8584070801734924, 0.863558292388916, 0.8605204224586487, 0.8617091774940491, 0.8691058158874512, 0.8671245574951172, 0.8706908226013184], "val_loss": [2.2464330196380615, 2.018951892852783, 1.1270180940628052, 0.8302384614944458, 0.770463228225708, 0.7085457444190979, 0.6432760953903198, 0.6182888746261597, 0.6242827773094177, 0.5845587849617004, 0.5480558276176453, 0.5308416485786438, 0.5241817235946655, 0.5064201951026917, 0.4942091405391693, 0.48704302310943604, 0.48063793778419495, 0.47785305976867676, 0.46993428468704224, 0.459002286195755, 0.45782792568206787, 0.45732203125953674, 0.4490548372268677, 0.44492074847221375, 0.4444836974143982, 0.4377066195011139, 0.4253573417663574, 0.42972972989082336, 0.42350950837135315, 0.41073140501976013, 0.40580013394355774, 0.41332483291625977, 0.40574735403060913, 0.40683993697166443, 0.408812552690506, 0.40505659580230713, 0.39694350957870483, 0.4023986756801605, 0.40752312541007996, 0.3959631025791168, 0.3879106044769287, 0.39668816328048706, 0.40028494596481323, 0.39806297421455383, 0.37615740299224854], "val_accuracy": [0.42266666889190674, 0.43933331966400146, 0.6503333449363708, 0.699999988079071, 0.7076666951179504, 0.7406666874885559, 0.7456666827201843, 0.7516666650772095, 0.7493333220481873, 0.7733333110809326, 0.7756666541099548, 0.7850000262260437, 0.8003333210945129, 0.8036666512489319, 0.815666675567627, 0.8190000057220459, 0.8163333535194397, 0.8203333616256714, 0.8236666917800903, 0.8333333134651184, 0.8363333344459534, 0.8383333086967468, 0.840666651725769, 0.8410000205039978, 0.8423333168029785, 0.8429999947547913, 0.8513333201408386, 0.8493333458900452, 0.8483333587646484, 0.8489999771118164, 0.8539999723434448, 0.8516666889190674, 0.859666645526886, 0.859000027179718, 0.859000027179718, 0.8610000014305115, 0.8573333621025085, 0.8659999966621399, 0.8650000095367432, 0.8713333606719971, 0.8686666488647461, 0.8713333606719971, 0.8686666488647461, 0.8646666407585144, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 7, 6, 3, 0, 3], [0, 0, 1, 0, 2, 3], [83, 99, 52], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 8, 6, 6, 0, 4, 9, 6, 2], [0, 3, 3, 0, 3], [0, 27, 65], [1, 0, 0, 1, 0], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 14, 9, 5, 3, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [6.094229529952671e+28, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10976093262434006, 0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0064377112001078e+30, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 3, 7, 2, 1, 8, 2, 2, 1, 3, 5, 0, 0, 6, 4, 8, 6, 6, 8, 4, 2, 0, 3, 1], [0, 0, 1, 0, 2, 2, 2, 1, 0, 3, 2, 0, 2, 2, 2, 1, 0, 2, 3], [83, 99, 27, 73, 36, 95], [0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 7, 9, 3, 6, 9, 0], [0, 4], [0, 32, 73], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [92], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 26, 19, 6, 9, 7, 2, 3, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.add(grad, tf.math.subtract(grad, alpha)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.negative(grad), tf.math.multiply(tf.math.subtract(grad, alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), grad))))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 5], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1126132608.0, 21086566400.0, 97946591232.0, 274798706688.0, 589456277504.0, 1077082980352.0], "accuracy": [0.09721305221319199, 0.1010434553027153, 0.09866596013307571, 0.10157178342342377, 0.1018359512090683, 0.10302469879388809], "val_loss": [5310721536.0, 42480619520.0, 143367159808.0, 339825164288.0, 663710662656.0, 1146879737856.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 7, 3, 1, 3, 3], [0, 0, 1, 0, 2, 2], [83, 99, 27], [0, 0, 0], [5, 8, 9], [0], [0], [0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 5, 4, 0, 6, 5], [0, 5, 0], [0, 42], [0, 1], [0], [0], [0]], "fitness": -0.09228571504354477, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3087944984436035, 2.3105006217956543, 2.310978651046753, 2.309575319290161, 2.3089890480041504, 2.309364080429077], "accuracy": [0.09298639744520187, 0.09311848133802414, 0.09272222965955734, 0.09615638852119446, 0.09245806187391281, 0.09628847241401672], "val_loss": [2.3091416358947754, 2.3091416358947754, 2.3091416358947754, 2.3091416358947754, 2.3091416358947754, 2.3091416358947754], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}, "mapping_values": [1, 12, 6, 6, 3, 3, 3, 0, 1, 9, 6, 3, 2, 2, 1, 1, 1], "tree_depth": 16}]