[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942845821380615, 2.191469669342041, 1.7722514867782593, 1.3672629594802856, 1.118131399154663, 0.9473560452461243, 0.865749716758728, 0.8383417725563049, 0.7745780348777771, 0.7423245906829834, 0.7042103409767151, 0.6896631717681885, 0.6668853759765625, 0.6490577459335327, 0.6209142208099365, 0.6117115020751953, 0.5862398743629456, 0.5666621327400208, 0.5505193471908569, 0.5392166972160339, 0.5370016098022461, 0.5361851453781128, 0.5023084878921509, 0.49924561381340027, 0.4811181128025055, 0.46229031682014465, 0.4681150019168854, 0.46158939599990845, 0.44242313504219055, 0.4444693326950073, 0.43373996019363403, 0.4279820919036865, 0.42305511236190796, 0.41424909234046936, 0.39704933762550354, 0.3962852656841278, 0.39855295419692993], "accuracy": [0.12574297189712524, 0.3299432098865509, 0.4379870593547821, 0.5383700728416443, 0.6161669492721558, 0.6527539491653442, 0.6841896772384644, 0.6925109028816223, 0.7063795924186707, 0.7087571024894714, 0.7347774505615234, 0.7386078238487244, 0.7345132827758789, 0.7578919529914856, 0.7618544697761536, 0.7685906887054443, 0.7790252566337585, 0.7877426743507385, 0.7817989587783813, 0.7913089394569397, 0.7972526550292969, 0.7943468689918518, 0.8061022162437439, 0.8109893202781677, 0.8149517774581909, 0.8215559124946594, 0.8187822103500366, 0.8212917447090149, 0.8302733898162842, 0.8240655064582825, 0.8321225643157959, 0.8389908671379089, 0.8370096683502197, 0.8418967127799988, 0.8477083444595337, 0.8490291833877563, 0.8500858545303345], "val_loss": [2.246692180633545, 2.0219147205352783, 1.1339881420135498, 0.8453344106674194, 0.7625478506088257, 0.747022807598114, 0.6553808450698853, 0.6550361514091492, 0.6287168264389038, 0.6060450673103333, 0.570854663848877, 0.5537832975387573, 0.5279173851013184, 0.5240181088447571, 0.5208100080490112, 0.5041815042495728, 0.4955613315105438, 0.48657605051994324, 0.4854115843772888, 0.47540193796157837, 0.4709101617336273, 0.46845337748527527, 0.4549902081489563, 0.4515860974788666, 0.4505847990512848, 0.4389086067676544, 0.4357028007507324, 0.4392246901988983, 0.4488103985786438, 0.45073631405830383, 0.44525715708732605, 0.4307350218296051, 0.43287673592567444, 0.4248986542224884, 0.4291346073150635, 0.4302275776863098, 0.4182004928588867], "val_accuracy": [0.43700000643730164, 0.47066667675971985, 0.6439999938011169, 0.6946666836738586, 0.7136666774749756, 0.7333333492279053, 0.7409999966621399, 0.7599999904632568, 0.768666684627533, 0.7736666798591614, 0.7749999761581421, 0.7796666622161865, 0.7940000295639038, 0.7979999780654907, 0.7950000166893005, 0.8106666803359985, 0.8066666722297668, 0.8199999928474426, 0.8159999847412109, 0.8190000057220459, 0.8263333439826965, 0.8223333358764648, 0.8293333053588867, 0.8339999914169312, 0.8339999914169312, 0.8426666855812073, 0.8379999995231628, 0.847000002861023, 0.8433333039283752, 0.843666672706604, 0.8416666388511658, 0.8550000190734863, 0.8483333587646484, 0.8503333330154419, 0.8539999723434448, 0.8493333458900452, 0.8503333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 6, 4, 7, 4, 6, 2, 2, 7, 6, 7, 9, 2, 6, 6, 4, 4, 1, 8, 6], [1, 6, 2, 5, 3, 0, 2, 6, 0, 6, 2, 4, 7, 0, 7, 7, 1], [0, 33, 16, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 37, 20, 17, 4], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, grad))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.pow(tf.math.subtract(beta, grad), grad))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 1, 1, 1], [8, 5, 6], [7, 5], [0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 7, 7, 1, 5, 4, 1, 2, 3, 1, 8, 2, 8, 8, 5], [7, 1, 0, 1, 1, 5, 1, 3, 5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 3, 2, 1, 0, 25, 15, 10, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.sqrt(tf.math.add(tf.math.sqrt(sigma), tf.math.sqrt(grad)))))), tf.math.square(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 7], [2, 0, 1, 0, 2], [83, 99, 52], [0, 0, 0, 1, 0, 1, 1], [0, 8, 7, 7], [0, 3, 0], [0, 10], [1, 0, 0, 1, 1], [0, 0, 6], [0, 6], [0], [0, 1, 1], [1], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 92, 27], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 8, 4, 2, 3, 1, 2, 1, 6, 1, 0, 5, 0, 7, 5, 9, 0, 8, 6, 0, 0, 0, 3], [0, 5, 4, 2, 0, 2, 4, 5, 4, 2, 4], [0, 47, 6], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 0, 1, 0], [0, 6, 9], [5], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 34, 23, 11, 3, 5, 3, 2, 1, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.square(tf.math.negative(grad))), beta), tf.math.add(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(grad), grad))))), tf.math.negative(grad)), tf.math.negative(tf.math.multiply(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309718608856201, 2.3107430934906006, 2.310237407684326, 2.309427499771118, 2.309128999710083, 2.3092689514160156], "accuracy": [0.09272222965955734, 0.0886276587843895, 0.09166556596755981, 0.09470347315073013, 0.09576013684272766, 0.08994849026203156], "val_loss": [2.308204174041748, 2.308204174041748, 2.308204174041748, 2.308204174041748, 2.308204174041748, 2.308204174041748], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]