[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929275035858154, 2.191131830215454, 1.765555739402771, 1.3575142621994019, 1.0555105209350586, 0.9059167504310608, 0.8399367332458496, 0.8218461871147156, 0.7797889113426208, 0.750305712223053, 0.7249296307563782, 0.6876794099807739, 0.6538481116294861, 0.6411798000335693, 0.6126824021339417, 0.5862842202186584, 0.5861488580703735, 0.579375684261322, 0.5656836628913879, 0.5411303639411926, 0.5322946310043335, 0.5239444971084595, 0.5308034420013428, 0.5004306435585022, 0.4880775511264801, 0.47748002409935, 0.4686506986618042, 0.4628458023071289, 0.4543246924877167, 0.4404655694961548, 0.4303331971168518, 0.42355939745903015, 0.4119665026664734, 0.40430960059165955, 0.39300835132598877, 0.39366769790649414, 0.3777349293231964, 0.37571918964385986, 0.36582621932029724, 0.36185523867607117, 0.3591215908527374, 0.34429681301116943, 0.3438307046890259, 0.33269089460372925, 0.33171093463897705, 0.32263249158859253, 0.3225277066230774, 0.32278916239738464, 0.314452201128006, 0.3144606649875641], "accuracy": [0.13300752639770508, 0.3327169418334961, 0.4407607913017273, 0.5445780158042908, 0.6420552134513855, 0.6713775992393494, 0.6948884129524231, 0.6914542317390442, 0.702681303024292, 0.7123233675956726, 0.7224937081336975, 0.7321357727050781, 0.7541936039924622, 0.7588165402412415, 0.7692511081695557, 0.7781006693840027, 0.7774402499198914, 0.7812706232070923, 0.7866860628128052, 0.789988100528717, 0.7964601516723633, 0.8013472557067871, 0.8014793395996094, 0.8112534880638123, 0.81112140417099, 0.8165367841720581, 0.819970965385437, 0.8304054737091064, 0.8297450542449951, 0.8286884427070618, 0.8364813327789307, 0.835160493850708, 0.8432175517082214, 0.8430854678153992, 0.8520671129226685, 0.8492933511734009, 0.8555012345314026, 0.8595958352088928, 0.8577466607093811, 0.8617091774940491, 0.8660678863525391, 0.8681812286376953, 0.8709549307823181, 0.8746532797813416, 0.8735966086387634, 0.8804649114608765, 0.8726720213890076, 0.8745211958885193, 0.8761062026023865, 0.8778232932090759], "val_loss": [2.2465264797210693, 2.0203704833984375, 1.1637685298919678, 0.9185120463371277, 0.7771631479263306, 0.7277462482452393, 0.7008287906646729, 0.6735859513282776, 0.6573713421821594, 0.6365572810173035, 0.6017295718193054, 0.5744630694389343, 0.558997392654419, 0.5335946679115295, 0.5281386971473694, 0.5254891514778137, 0.5164374709129333, 0.5051021575927734, 0.49932101368904114, 0.4896298944950104, 0.4958401620388031, 0.4846213459968567, 0.4823985993862152, 0.49012190103530884, 0.47045111656188965, 0.4705418646335602, 0.4589429199695587, 0.4495507478713989, 0.4435282051563263, 0.43704479932785034, 0.4395972788333893, 0.4331921339035034, 0.4339831471443176, 0.4228702485561371, 0.4160040318965912, 0.4198043942451477, 0.41823050379753113, 0.4054858088493347, 0.4062558114528656, 0.4173784852027893, 0.4264014959335327, 0.4298367202281952, 0.4122452735900879, 0.4113841950893402, 0.4129491448402405, 0.40488940477371216, 0.41052743792533875, 0.4114481210708618, 0.40790441632270813, 0.40656778216362], "val_accuracy": [0.4153333306312561, 0.44966667890548706, 0.628333330154419, 0.6896666884422302, 0.7086666822433472, 0.7243333458900452, 0.7279999852180481, 0.7446666955947876, 0.7416666746139526, 0.7603333592414856, 0.7526666522026062, 0.7756666541099548, 0.7736666798591614, 0.7853333353996277, 0.7973333597183228, 0.7996666431427002, 0.7996666431427002, 0.8050000071525574, 0.8166666626930237, 0.8136666417121887, 0.8186666369438171, 0.8240000009536743, 0.8263333439826965, 0.8233333230018616, 0.8303333520889282, 0.8330000042915344, 0.8356666564941406, 0.840666651725769, 0.8399999737739563, 0.8383333086967468, 0.843666672706604, 0.8463333249092102, 0.8426666855812073, 0.8503333330154419, 0.8503333330154419, 0.8479999899864197, 0.8539999723434448, 0.8529999852180481, 0.8510000109672546, 0.8553333282470703, 0.8506666421890259, 0.8550000190734863, 0.856333315372467, 0.8583333492279053, 0.8640000224113464, 0.862666666507721, 0.856333315372467, 0.859000027179718, 0.8583333492279053, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 7, 2, 3], [0, 0, 1, 0, 2, 0, 2, 1], [83, 2, 27, 49], [0, 0, 0], [0, 8, 9], [0], [15], [1, 0, 1, 1, 1], [4, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 4, 3, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 4, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [8, 8, 5], [0], [2], [0, 0, 1, 1, 1], [0, 5, 6], [0, 5], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 9, 1], [0, 0, 2, 0, 1], [83, 99, 47, 65], [0, 0, 0, 1, 0, 1], [0, 8, 2, 5], [0, 2], [0], [0, 0, 0, 1, 1, 0, 1, 1], [6, 5, 6, 7], [0, 5, 1, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 6, 4, 2, 1, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [34622228.0, 2.709573268890381, 2.4934847354888916, 2.5704026222229004, 2.612074613571167, 2.470093011856079, 2.59030818939209, 2.57232666015625], "accuracy": [0.09536388516426086, 0.09787346422672272, 0.09457138925790787, 0.09602430462837219, 0.10011887550354004, 0.10038304328918457, 0.1006472036242485, 0.10434553027153015], "val_loss": [2.747598886489868, 2.6315884590148926, 2.6947109699249268, 2.6138365268707275, 2.6830663681030273, 2.6552624702453613, 2.5719828605651855, 2.720510721206665], "val_accuracy": [0.0963333323597908, 0.09799999743700027, 0.10366666316986084, 0.1003333330154419, 0.09799999743700027, 0.10366666316986084, 0.09933333098888397, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 5, 1, 3], [0, 3, 1, 0, 2], [83, 99, 27], [0, 1, 0, 1], [6, 8, 9], [0, 1], [0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 6, 1, 7, 5, 6, 8, 2, 0, 6, 6, 2, 4, 1, 1, 6, 4, 8, 1, 3, 7, 7, 6, 1, 9, 2, 5, 3, 4, 4, 0], [0, 5, 2, 3, 4, 0, 7, 2, 3, 2, 5, 6, 1, 7, 1, 1, 7, 6, 7, 6, 1, 5, 2], [0, 16, 15], [0, 1], [0], [0], [0]], "fitness": -0.0908571407198906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.pow(tf.math.subtract(grad, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(tf.math.subtract(beta, sigma)), tf.math.multiply(beta, tf.math.add(grad, grad)))))), alpha), tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha)), alpha))), grad))))), tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.pow(grad, tf.math.pow(grad, tf.math.negative(alpha))))), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309757947921753, 2.310504913330078, 2.309774160385132, 2.310105323791504, 2.3100087642669678, 2.3106980323791504], "accuracy": [0.09074098616838455, 0.0886276587843895, 0.09430722147226334, 0.08955223858356476, 0.09166556596755981, 0.09140139818191528], "val_loss": [2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}, "mapping_values": [1, 7, 4, 3, 1, 4, 2, 2, 1, 55, 32, 23, 3, 2, 1, 1, 1], "tree_depth": 39}]