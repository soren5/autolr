[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946510314941406, 2.190795660018921, 1.7768285274505615, 1.3570164442062378, 1.0666885375976562, 0.9009688496589661, 0.8290350437164307, 0.8006656765937805, 0.7536357641220093, 0.7433212399482727, 0.698375940322876, 0.6788598299026489, 0.6640545129776001, 0.6202208995819092, 0.6072526574134827, 0.5970173478126526, 0.5821977853775024, 0.5640968680381775, 0.5508893132209778, 0.5373228192329407, 0.5250836610794067, 0.5076481699943542, 0.5122065544128418, 0.49154719710350037, 0.482866495847702, 0.4836457669734955, 0.45789772272109985, 0.45025163888931274, 0.4492928385734558, 0.43762901425361633, 0.431286484003067, 0.4261288642883301, 0.4189686179161072, 0.4137592911720276, 0.3958374857902527, 0.3925909996032715, 0.37699922919273376, 0.3839954733848572, 0.3746383488178253, 0.3653828203678131, 0.36930763721466064, 0.3586994409561157, 0.3476593494415283, 0.34745165705680847, 0.32892096042633057, 0.3288397192955017, 0.33143627643585205, 0.324093222618103, 0.31615379452705383, 0.329397588968277, 0.3142707347869873, 0.3103507459163666, 0.3028823137283325, 0.28942757844924927, 0.28114935755729675, 0.28164634108543396, 0.27952855825424194, 0.2783072292804718, 0.2749811112880707, 0.2713066339492798, 0.2660987973213196, 0.2660115361213684, 0.2597714960575104], "accuracy": [0.12693171203136444, 0.3333773612976074, 0.43389248847961426, 0.5349359512329102, 0.6358473300933838, 0.6655659675598145, 0.6911900639533997, 0.7108704447746277, 0.707568347454071, 0.7058512568473816, 0.7367587089538574, 0.7442874312400818, 0.7409853339195251, 0.7617223858833313, 0.7668735980987549, 0.7660810947418213, 0.7803460359573364, 0.789459764957428, 0.7880068421363831, 0.7973847389221191, 0.802271842956543, 0.8030643463134766, 0.8013472557067871, 0.8109893202781677, 0.817989706993103, 0.816008448600769, 0.8212917447090149, 0.8269713521003723, 0.8327829837799072, 0.8329150676727295, 0.8354246616363525, 0.8397833704948425, 0.8408400416374207, 0.8446704745292664, 0.8486329317092896, 0.8544445633888245, 0.854708731174469, 0.8539162874221802, 0.8582749962806702, 0.859199583530426, 0.8548408150672913, 0.859199583530426, 0.8647470474243164, 0.8672566413879395, 0.8696341514587402, 0.8726720213890076, 0.8720116019248962, 0.8739928603172302, 0.8767666220664978, 0.8732003569602966, 0.8768987059593201, 0.8850878477096558, 0.8811253309249878, 0.8870691061019897, 0.887201189994812, 0.8893144726753235, 0.8903711438179016, 0.8938053250312805, 0.8924844861030579, 0.8952582478523254, 0.896446943283081, 0.893541157245636, 0.895918607711792], "val_loss": [2.247642993927002, 2.0256235599517822, 1.1531846523284912, 0.9228212237358093, 0.7753158211708069, 0.7022358179092407, 0.7061447501182556, 0.6654180288314819, 0.6557761430740356, 0.6215510368347168, 0.5878779888153076, 0.5652053356170654, 0.5429913997650146, 0.5354541540145874, 0.5353842973709106, 0.5264801383018494, 0.5278007388114929, 0.5061509609222412, 0.5034458041191101, 0.49080851674079895, 0.48461660742759705, 0.48604199290275574, 0.47600334882736206, 0.47423678636550903, 0.4669988751411438, 0.4578774869441986, 0.453524649143219, 0.44885674118995667, 0.4507811367511749, 0.44821837544441223, 0.43744999170303345, 0.4464225172996521, 0.45211800932884216, 0.43920907378196716, 0.4492577016353607, 0.4482058882713318, 0.42103034257888794, 0.41921305656433105, 0.4267626106739044, 0.42070040106773376, 0.422837495803833, 0.42995625734329224, 0.42905011773109436, 0.4186403751373291, 0.4212473928928375, 0.43785110116004944, 0.42595478892326355, 0.42608797550201416, 0.42899706959724426, 0.41050344705581665, 0.4152596890926361, 0.4426729381084442, 0.43220117688179016, 0.43091732263565063, 0.4288194477558136, 0.4313293397426605, 0.46079251170158386, 0.49386343359947205, 0.49235352873802185, 0.5102415084838867, 0.48941096663475037, 0.49236905574798584, 0.5078951120376587], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6486666798591614, 0.6803333163261414, 0.7056666612625122, 0.7319999933242798, 0.746666669845581, 0.7639999985694885, 0.7523333430290222, 0.7699999809265137, 0.7746666669845581, 0.7826666831970215, 0.7903333306312561, 0.7913333177566528, 0.7926666736602783, 0.8053333163261414, 0.8023333549499512, 0.8029999732971191, 0.8119999766349792, 0.8159999847412109, 0.8180000185966492, 0.8186666369438171, 0.8230000138282776, 0.8213333487510681, 0.8263333439826965, 0.8333333134651184, 0.8376666903495789, 0.8426666855812073, 0.8416666388511658, 0.8429999947547913, 0.8510000109672546, 0.8483333587646484, 0.8476666808128357, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8579999804496765, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.8743333220481873, 0.8686666488647461, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8643333315849304, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939867973327637, 2.189436435699463, 1.76784348487854, 1.3211921453475952, 1.059069037437439, 0.9033154845237732, 0.8175603151321411, 0.8171679973602295, 0.7703752517700195, 0.7429676651954651, 0.7178663015365601, 0.6852367520332336, 0.6450424790382385, 0.6253691911697388, 0.5862281918525696, 0.5905744433403015, 0.569479763507843, 0.5661294460296631, 0.5600894093513489, 0.5464929342269897, 0.5401602983474731, 0.5185485482215881, 0.5062529444694519, 0.496824711561203, 0.48916277289390564, 0.4848148822784424, 0.47158899903297424, 0.45121538639068604, 0.44605767726898193, 0.449404239654541, 0.4380723237991333, 0.4349052906036377, 0.42267361283302307, 0.4045545160770416, 0.39906933903694153, 0.39454469084739685, 0.3906784951686859, 0.3776244521141052, 0.3796592652797699, 0.37223824858665466, 0.3654223084449768, 0.36002856492996216, 0.35461753606796265, 0.35407379269599915, 0.338800847530365, 0.3317762315273285, 0.3329175114631653, 0.33375781774520874, 0.3106025755405426, 0.32337501645088196, 0.3084811866283417, 0.31570807099342346, 0.2988276183605194, 0.30302777886390686, 0.30199581384658813, 0.2975328266620636, 0.28384241461753845, 0.28286945819854736, 0.29812055826187134, 0.287738561630249, 0.27735084295272827, 0.2770605683326721, 0.26288342475891113, 0.25875234603881836, 0.26449841260910034], "accuracy": [0.1278562992811203, 0.3323206901550293, 0.4377228915691376, 0.5494650602340698, 0.6357152462005615, 0.6621318459510803, 0.6963412761688232, 0.6970016956329346, 0.6993792057037354, 0.7161537408828735, 0.7290979027748108, 0.7372870445251465, 0.7526086568832397, 0.7561748623847961, 0.7630431652069092, 0.7745344042778015, 0.7744023203849792, 0.7808743715286255, 0.785629391670227, 0.7833839654922485, 0.7898560166358948, 0.8006868362426758, 0.802271842956543, 0.8064984679222107, 0.8112534880638123, 0.8173292875289917, 0.8208954930305481, 0.8230088353157043, 0.8309338092803955, 0.830669641494751, 0.8333113193511963, 0.8397833704948425, 0.837537944316864, 0.8446704745292664, 0.8512746095657349, 0.8507462739944458, 0.850350022315979, 0.8515387773513794, 0.8499537706375122, 0.8541803956031799, 0.8549728989601135, 0.860652506351471, 0.8581429123878479, 0.8609166741371155, 0.8654074668884277, 0.8710870146751404, 0.8737286925315857, 0.8679170608520508, 0.8735966086387634, 0.8696341514587402, 0.8782195448875427, 0.8762382864952087, 0.8821820020675659, 0.8842953443527222, 0.8790120482444763, 0.8856161832809448, 0.887201189994812, 0.8870691061019897, 0.8853520154953003, 0.8829745054244995, 0.8887861371040344, 0.8857482671737671, 0.8926165699958801, 0.8903711438179016, 0.8918240666389465], "val_loss": [2.2480251789093018, 2.027907133102417, 1.164623737335205, 0.9464197754859924, 0.7816057205200195, 0.7588906288146973, 0.7356235980987549, 0.7121062874794006, 0.6829647421836853, 0.6692840456962585, 0.6244832873344421, 0.6089468002319336, 0.5661044120788574, 0.5571241974830627, 0.5460596084594727, 0.5507432222366333, 0.5297741293907166, 0.522896945476532, 0.5120937824249268, 0.5133965015411377, 0.5060872435569763, 0.49784040451049805, 0.4888394773006439, 0.4721863865852356, 0.4807594120502472, 0.45925354957580566, 0.45571717619895935, 0.4594883918762207, 0.45556405186653137, 0.44269803166389465, 0.4367339015007019, 0.4417347311973572, 0.4297650456428528, 0.41329607367515564, 0.4076285660266876, 0.41038984060287476, 0.40447545051574707, 0.3993971347808838, 0.41158732771873474, 0.39504745602607727, 0.3904241621494293, 0.3947453200817108, 0.40239572525024414, 0.38869255781173706, 0.3921580910682678, 0.4080411493778229, 0.40766873955726624, 0.39580419659614563, 0.3911572992801666, 0.3829118609428406, 0.39238330721855164, 0.3886353671550751, 0.3974953889846802, 0.40179362893104553, 0.3973568379878998, 0.3992998003959656, 0.40430715680122375, 0.39011162519454956, 0.39664483070373535, 0.3926272690296173, 0.40213873982429504, 0.41048383712768555, 0.42471280694007874, 0.4201892912387848, 0.4144097864627838], "val_accuracy": [0.3853333294391632, 0.46133333444595337, 0.625, 0.671999990940094, 0.7076666951179504, 0.7223333120346069, 0.7179999947547913, 0.7473333477973938, 0.7403333187103271, 0.746999979019165, 0.7523333430290222, 0.7590000033378601, 0.7753333449363708, 0.7910000085830688, 0.7906666398048401, 0.7923333048820496, 0.8033333420753479, 0.8036666512489319, 0.8029999732971191, 0.800000011920929, 0.812666654586792, 0.8166666626930237, 0.8090000152587891, 0.8216666579246521, 0.8166666626930237, 0.8270000219345093, 0.8373333215713501, 0.8286666870117188, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.843999981880188, 0.8503333330154419, 0.8539999723434448, 0.8529999852180481, 0.8543333411216736, 0.8526666760444641, 0.856333315372467, 0.8536666631698608, 0.8523333072662354, 0.8550000190734863, 0.8600000143051147, 0.8603333234786987, 0.8640000224113464, 0.8583333492279053, 0.8616666793823242, 0.862333357334137, 0.8646666407585144, 0.8659999966621399, 0.8723333477973938, 0.8650000095367432, 0.8730000257492065, 0.8679999709129333, 0.8686666488647461, 0.8643333315849304, 0.871999979019165, 0.878333330154419, 0.8756666779518127, 0.8700000047683716, 0.8786666393280029, 0.8740000128746033, 0.8740000128746033, 0.878000020980835, 0.8766666650772095, 0.8773333430290222]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 1, 3, 1, 6, 6, 2, 6, 1, 2, 7, 5, 2, 6, 3, 5, 5], [0, 0, 1, 0, 2, 3, 1, 1, 0, 3, 0, 0, 3, 2], [83, 99, 27, 89, 37, 44], [0, 0, 0, 1], [0, 2, 9], [0], [0, 59], [0, 0, 0, 0, 1], [0, 5, 9], [0, 5], [0], [0, 0, 0, 0, 1], [7, 7, 9, 9], [1], [0, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 17, 14, 6, 4, 3, 1, 2, 3, 3, 0, 1, 5, 4, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [2, 1, 3, 1, 3, 3, 8, 9], [0, 0, 1, 0, 2, 3], [78, 99, 27, 90], [0, 0, 0], [0, 8, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 5, 6, 6, 6, 8, 1, 4, 6, 3, 0, 1, 9, 3, 9, 3], [0, 5, 3, 1, 4, 2, 7, 1, 6], [0, 92, 66], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), grad), tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), sigma), alpha), grad), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta))), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 14, 8, 6, 4, 3, 3, 0, 1, 25, 16, 9, 3, 1, 0, 1, 0], "tree_depth": 25}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 7, 4, 3], [1, 0, 1, 0, 2], [5, 69, 27], [0, 1, 0, 1], [7, 8, 9], [0, 1], [0], [0, 1, 0, 0, 0], [0, 5, 1], [0, 5], [0], [1, 1], [4], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7623202800750732, 28.436817169189453, 274.50994873046875, 1683.5838623046875, 7036.13134765625, 22898.23046875], "accuracy": [0.09734513610601425, 0.09893012791872025, 0.09932637959718704, 0.10342095047235489, 0.09668471664190292, 0.0956280529499054], "val_loss": [5.308781147003174, 75.8734130859375, 577.8876953125, 2907.869384765625, 10621.8916015625, 30990.328125], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 2, 0, 3], [83, 99, 8], [0, 0, 0], [8, 8, 9], [0], [0], [0, 0, 0, 1, 1], [0, 5, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 3, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14898955821990967, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]