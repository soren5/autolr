[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936573028564453, 2.1946516036987305, 1.7896302938461304, 1.3606539964675903, 1.0953185558319092, 0.9431535005569458, 0.8667839765548706, 0.8333520889282227, 0.7798535823822021, 0.7480722069740295, 0.7245818376541138, 0.697478175163269, 0.6516294479370117, 0.6428397297859192, 0.614686906337738, 0.5939623117446899, 0.5908817052841187, 0.5775590538978577, 0.5713428258895874, 0.5570644736289978, 0.5341412425041199, 0.5305774807929993, 0.5137844681739807, 0.509874701499939, 0.5007596611976624, 0.48734137415885925, 0.47862333059310913, 0.4730531573295593, 0.45192772150039673, 0.4542316794395447, 0.4497421979904175, 0.4353484809398651, 0.41892433166503906, 0.4221609830856323, 0.4042654037475586, 0.41040849685668945, 0.4018319845199585, 0.39423468708992004, 0.38062551617622375, 0.3807530105113983, 0.36281707882881165, 0.362248033285141, 0.3654232323169708, 0.35792815685272217, 0.3487807810306549, 0.3486442565917969, 0.34305259585380554, 0.329638808965683, 0.33397218585014343, 0.3290819525718689, 0.3300453722476959, 0.3245337903499603, 0.3056471645832062, 0.30114346742630005, 0.29800093173980713, 0.29677814245224, 0.2913835346698761, 0.2861135005950928, 0.27993038296699524, 0.2800106406211853, 0.27575480937957764, 0.2642262876033783, 0.2621607482433319, 0.2762393057346344, 0.25839582085609436, 0.26192575693130493], "accuracy": [0.1320829540491104, 0.32003697752952576, 0.44062870740890503, 0.535860538482666, 0.6306960582733154, 0.655527651309967, 0.6832650899887085, 0.6954167485237122, 0.6996433734893799, 0.709549605846405, 0.7197200059890747, 0.7309470176696777, 0.7429665923118591, 0.7530049085617065, 0.7629110813140869, 0.7689869403839111, 0.7718927264213562, 0.7770439982414246, 0.7812706232070923, 0.7913089394569397, 0.7938185334205627, 0.7932901978492737, 0.8035926818847656, 0.8017435073852539, 0.8128384351730347, 0.8104609847068787, 0.8230088353157043, 0.8191784620285034, 0.82683926820755, 0.8285563588142395, 0.8318583965301514, 0.8368775844573975, 0.8391229510307312, 0.8392550349235535, 0.8498216867446899, 0.8392550349235535, 0.8446704745292664, 0.8494254350662231, 0.8565579056739807, 0.8574824929237366, 0.8648791313171387, 0.8646149635314941, 0.8642187118530273, 0.8667283058166504, 0.8704266548156738, 0.8640866279602051, 0.8725399374961853, 0.8775591254234314, 0.8728041052818298, 0.8710870146751404, 0.876370370388031, 0.8784837126731873, 0.8811253309249878, 0.8868049383163452, 0.8893144726753235, 0.882710337638855, 0.8853520154953003, 0.8877294659614563, 0.8873332738876343, 0.8906353116035461, 0.895918607711792, 0.9005415439605713, 0.8981640338897705, 0.8936732411384583, 0.8996169567108154, 0.9008057117462158], "val_loss": [2.2470550537109375, 2.031102418899536, 1.1634751558303833, 0.8768454790115356, 0.7669552564620972, 0.7177131175994873, 0.6692379713058472, 0.6431953310966492, 0.6442430019378662, 0.6232133507728577, 0.5669652819633484, 0.5604737401008606, 0.5449245572090149, 0.5352237820625305, 0.5266389846801758, 0.5142066478729248, 0.5082012414932251, 0.49633654952049255, 0.4971364736557007, 0.4833478331565857, 0.47914332151412964, 0.4784994423389435, 0.49271076917648315, 0.46174630522727966, 0.46696537733078003, 0.4548158645629883, 0.4623493552207947, 0.44719254970550537, 0.4370443522930145, 0.433150053024292, 0.4306892156600952, 0.42056262493133545, 0.4124569594860077, 0.4036881923675537, 0.4066360592842102, 0.3982374668121338, 0.395540326833725, 0.39123421907424927, 0.4087265729904175, 0.40440666675567627, 0.3961344361305237, 0.3987919092178345, 0.40718165040016174, 0.4038749635219574, 0.3907622992992401, 0.3997066915035248, 0.39738205075263977, 0.40497565269470215, 0.41108545660972595, 0.41421252489089966, 0.4158116579055786, 0.41677042841911316, 0.4174571931362152, 0.4119951128959656, 0.41111400723457336, 0.4124498665332794, 0.4109589159488678, 0.41122516989707947, 0.4155952036380768, 0.42709749937057495, 0.4252392649650574, 0.43044155836105347, 0.43941324949264526, 0.437572181224823, 0.4383489489555359, 0.4460175037384033], "val_accuracy": [0.398333340883255, 0.4313333332538605, 0.6463333368301392, 0.6793333292007446, 0.7136666774749756, 0.731333315372467, 0.7440000176429749, 0.749666690826416, 0.7676666378974915, 0.7480000257492065, 0.777999997138977, 0.7730000019073486, 0.7943333387374878, 0.7836666703224182, 0.8003333210945129, 0.8013333082199097, 0.8019999861717224, 0.8196666836738586, 0.8146666884422302, 0.8180000185966492, 0.8180000185966492, 0.824999988079071, 0.8206666707992554, 0.8336666822433472, 0.8240000009536743, 0.8383333086967468, 0.8360000252723694, 0.846666693687439, 0.8416666388511658, 0.8443333506584167, 0.8426666855812073, 0.8460000157356262, 0.8483333587646484, 0.8533333539962769, 0.8496666550636292, 0.8583333492279053, 0.8600000143051147, 0.859333336353302, 0.8619999885559082, 0.859000027179718, 0.8629999756813049, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8659999966621399, 0.8610000014305115, 0.8676666617393494, 0.8673333525657654, 0.8683333396911621, 0.8696666955947876, 0.8713333606719971, 0.871666669845581, 0.8740000128746033, 0.874666690826416, 0.8736666440963745, 0.8726666569709778, 0.8756666779518127, 0.8773333430290222, 0.8776666522026062, 0.8740000128746033, 0.8813333511352539, 0.8809999823570251, 0.878000020980835, 0.8740000128746033, 0.8776666522026062, 0.8799999952316284]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [11], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [1], [1, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3283839225769043, 2.5641398429870605, 133912682496.0, 1.0718599862531978e+31, 2.4430484771728516, 2.7540149688720703, 3.495495080947876], "accuracy": [0.07885351777076721, 0.0750231146812439, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3872671127319336, 3.4122161865234375, 8.18512123864117e+31, 2.377199649810791, 2.5813405513763428, 3.099250316619873, 4.2046284675598145], "val_accuracy": [0.08833333104848862, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [4, 3, 4], [0], [0, 1, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.9049875736236572, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 1, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 1, 2, 2, 4, 9], [0, 3, 3, 0, 3], [89, 88, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3, 0, 2, 9, 7], [0, 0, 4, 4], [0, 58, 81], [1, 1], [0], [1], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 10, 5, 5, 1, 11, 6, 5, 3, 12, 8, 4, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.pow(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310239791870117, 2.3091418743133545, 2.3103139400482178, 2.3106260299682617, 2.3101842403411865, 2.3099348545074463], "accuracy": [0.08928807079792023, 0.09311848133802414, 0.08809932321310043, 0.08928807079792023, 0.08849557489156723, 0.09100515395402908], "val_loss": [2.3089001178741455, 2.3089001178741455, 2.3089001178741455, 2.3089001178741455, 2.3089001178741455, 2.3089001178741455], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 8, 3, 1, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 3, 2, 7, 8, 0, 3], [0, 3, 0, 1, 4], [0, 89], [0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 4, 2, 8, 5], [0, 0, 4], [0, 93], [0, 1], [5], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 1, 12, 7, 5, 2, 9, 6, 3, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.multiply(alpha, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.310009002685547, 2.3096609115600586, 2.3098084926605225, 2.308898448944092, 2.3098740577697754, 2.3093950748443604], "accuracy": [0.08757099509239197, 0.09787346422672272, 0.09113723784685135, 0.09272222965955734, 0.09417514503002167, 0.09087307006120682], "val_loss": [2.3086371421813965, 2.3086371421813965, 2.3086371421813965, 2.3086371421813965, 2.3086371421813965, 2.3086371421813965], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]