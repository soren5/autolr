[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292396306991577, 2.18570613861084, 1.7614744901657104, 1.343153476715088, 1.0923337936401367, 0.9199809432029724, 0.8492123484611511, 0.8155979514122009, 0.7585704922676086, 0.7336980700492859, 0.7030252814292908, 0.6918004155158997, 0.6514101624488831, 0.6081722974777222, 0.6008790135383606, 0.5966117978096008, 0.5715194940567017, 0.5616405606269836, 0.5288580656051636, 0.5477228760719299, 0.5256333947181702, 0.5071619749069214, 0.5125739574432373, 0.4833122193813324, 0.4896509349346161, 0.4813481867313385, 0.4630255699157715, 0.4461189806461334, 0.4382881820201874, 0.4318941831588745, 0.43665555119514465, 0.41554614901542664, 0.4014423191547394, 0.39769861102104187, 0.38676759600639343, 0.39638757705688477, 0.3848404288291931, 0.3641957938671112, 0.3701425790786743, 0.36908748745918274, 0.35678836703300476, 0.3566303849220276], "accuracy": [0.13300752639770508, 0.3311319649219513, 0.43230748176574707, 0.5452384352684021, 0.6289790272712708, 0.6535464525222778, 0.6935675740242004, 0.7034738063812256, 0.7107383608818054, 0.7176066637039185, 0.7283053994178772, 0.7388719916343689, 0.752740740776062, 0.76542067527771, 0.7726852297782898, 0.7750627398490906, 0.778232753276825, 0.7773081660270691, 0.7969884872436523, 0.7932901978492737, 0.8000264167785645, 0.8075551390647888, 0.8092722296714783, 0.8187822103500366, 0.8125742673873901, 0.8125742673873901, 0.8202351331710815, 0.8284242749214172, 0.8317263126373291, 0.83119797706604, 0.8379341959953308, 0.8421608805656433, 0.8502179384231567, 0.8506141901016235, 0.8578787446022034, 0.8525954484939575, 0.8555012345314026, 0.8555012345314026, 0.8576145768165588, 0.8650112152099609, 0.8625016212463379, 0.8626337051391602], "val_loss": [2.245756149291992, 2.0118041038513184, 1.121163249015808, 0.861709475517273, 0.7501777410507202, 0.7112343907356262, 0.6487651467323303, 0.6364028453826904, 0.6333693265914917, 0.5925687551498413, 0.5672100782394409, 0.5344582796096802, 0.5201978087425232, 0.5144568681716919, 0.5207368731498718, 0.49808505177497864, 0.49123457074165344, 0.479640394449234, 0.47848254442214966, 0.4756920635700226, 0.4587823450565338, 0.44901561737060547, 0.4451325535774231, 0.4354756772518158, 0.43245047330856323, 0.4293464422225952, 0.4322890341281891, 0.41411393880844116, 0.4086434245109558, 0.42353031039237976, 0.4066886901855469, 0.3990216553211212, 0.39681196212768555, 0.3844448924064636, 0.3778678774833679, 0.38180553913116455, 0.38279783725738525, 0.3747721314430237, 0.37856388092041016, 0.39475560188293457, 0.38499316573143005, 0.38226455450057983], "val_accuracy": [0.414000004529953, 0.45233333110809326, 0.6526666879653931, 0.7009999752044678, 0.7250000238418579, 0.7353333234786987, 0.7526666522026062, 0.762666642665863, 0.753000020980835, 0.7683333158493042, 0.7676666378974915, 0.784333348274231, 0.7940000295639038, 0.8003333210945129, 0.79666668176651, 0.8009999990463257, 0.8146666884422302, 0.8233333230018616, 0.8209999799728394, 0.82833331823349, 0.8316666483879089, 0.8363333344459534, 0.8420000076293945, 0.8416666388511658, 0.8413333296775818, 0.8383333086967468, 0.8396666646003723, 0.8476666808128357, 0.8516666889190674, 0.8416666388511658, 0.8550000190734863, 0.8586666584014893, 0.8600000143051147, 0.859666645526886, 0.8653333187103271, 0.8679999709129333, 0.8703333139419556, 0.8690000176429749, 0.8690000176429749, 0.8676666617393494, 0.8653333187103271, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [74, 99, 27], [0, 1, 1, 0, 1, 1], [0, 0, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [41462136.0, 2.8964507579803467, 3.8940112590789795, 14.537602424621582, 59.4687385559082, 73.54876708984375, 59.381771087646484, 53.06428909301758], "accuracy": [0.09919429570436478, 0.09840179979801178, 0.10210011899471283, 0.10117553919553757, 0.09906221181154251, 0.09959053993225098, 0.09959053993225098, 0.09866596013307571], "val_loss": [2.9338905811309814, 3.953937530517578, 3.9894821643829346, 40.880149841308594, 81.22284698486328, 47.98486328125, 55.52743911743164, 87.86521911621094], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10199999809265137, 0.10100000351667404, 0.09866666793823242, 0.10199999809265137, 0.10166666656732559, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 3, 2], [0, 5, 3], [24], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 0, 2, 7, 5, 2, 5], [0, 0, 4, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035101890563965, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 11, 7, 4, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 0], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 1], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 4, 3, 4, 2, 8, 5], [0, 0, 4, 5, 5], [0, 58], [0, 0], [9], [6], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 13, 8, 5, 2, 1, 1, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.sqrt(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309920310974121, 2.3091847896575928, 2.3087103366851807, 2.3113434314727783, 2.310309648513794, 2.310361862182617], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09325055778026581, 0.08770307898521423, 0.08691058307886124, 0.09074098616838455], "val_loss": [2.309119701385498, 2.309119701385498, 2.309119701385498, 2.309119701385498, 2.309119701385498, 2.309119701385498], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 1, 2, 9], [0, 4, 4], [0, 56], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0, 0, 0, 0, 1], [0, 6, 1, 5, 9, 0], [1, 1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 6, 4, 2, 2, 7, 4, 3, 2, 8, 6, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))))", "other_info": {"loss": [2.309523820877075, 2.3103673458099365, 2.3088624477386475, 2.308594226837158, 2.308614492416382, 2.309939384460449], "accuracy": [0.08955223858356476, 0.09945846349000931, 0.0952318087220192, 0.0936468094587326, 0.09470347315073013, 0.08955223858356476], "val_loss": [2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]