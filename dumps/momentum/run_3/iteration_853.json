[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925093173980713, 2.1873910427093506, 1.757789134979248, 1.3523832559585571, 1.020376205444336, 0.8947272896766663, 0.838465690612793, 0.7993595004081726, 0.7514814138412476, 0.721200168132782, 0.6863818168640137, 0.675262987613678, 0.6367855668067932, 0.6177212595939636, 0.6113821864128113, 0.5839510560035706, 0.5815240144729614, 0.5623859763145447, 0.5528502464294434, 0.539597749710083, 0.5352223515510559, 0.5159617066383362, 0.5115721821784973, 0.49046313762664795, 0.48264744877815247, 0.48034366965293884, 0.456650048494339, 0.4523482322692871, 0.45237967371940613, 0.44404101371765137, 0.42525437474250793, 0.4308815896511078, 0.43466508388519287, 0.4085170328617096, 0.4086749851703644, 0.4084993898868561, 0.3884272277355194, 0.3870292901992798, 0.38473328948020935, 0.38574689626693726, 0.37013521790504456, 0.3676265478134155, 0.3622467517852783], "accuracy": [0.1266675442457199, 0.32320696115493774, 0.4415532946586609, 0.5432571768760681, 0.6394135355949402, 0.6719059348106384, 0.6925109028816223, 0.700700044631958, 0.7051908373832703, 0.7157574892044067, 0.733060359954834, 0.7412495017051697, 0.7567031979560852, 0.767930269241333, 0.7622507214546204, 0.774270236492157, 0.7774402499198914, 0.7862898111343384, 0.7872143983840942, 0.7927618622779846, 0.7979130744934082, 0.8035926818847656, 0.8117818236351013, 0.8149517774581909, 0.8202351331710815, 0.8164047002792358, 0.8271034359931946, 0.8315942287445068, 0.8301413059234619, 0.8309338092803955, 0.8372738361358643, 0.837141752243042, 0.8355567455291748, 0.844010055065155, 0.8424250483512878, 0.8466516733169556, 0.8518029451370239, 0.8524633646011353, 0.8486329317092896, 0.8540483713150024, 0.8520671129226685, 0.8540483713150024, 0.8556333184242249], "val_loss": [2.246274709701538, 2.0129685401916504, 1.1248903274536133, 0.8591322302818298, 0.7634840607643127, 0.700052797794342, 0.6686164736747742, 0.6589409708976746, 0.6517537832260132, 0.6138992309570312, 0.577582597732544, 0.5651567578315735, 0.5579547882080078, 0.551848292350769, 0.543875515460968, 0.5413516163825989, 0.5244112014770508, 0.5139060020446777, 0.5050534009933472, 0.501618504524231, 0.5016277432441711, 0.49643775820732117, 0.4930388331413269, 0.48832494020462036, 0.4684494733810425, 0.46430835127830505, 0.4628937244415283, 0.450138658285141, 0.4474620819091797, 0.4450487792491913, 0.4657116234302521, 0.44054287672042847, 0.435331791639328, 0.4447740614414215, 0.4302399754524231, 0.44549959897994995, 0.4262312948703766, 0.44098079204559326, 0.44044482707977295, 0.4315968155860901, 0.4355291426181793, 0.45417314767837524, 0.4574491083621979], "val_accuracy": [0.3919999897480011, 0.46833333373069763, 0.6539999842643738, 0.6940000057220459, 0.7263333201408386, 0.7369999885559082, 0.7473333477973938, 0.7429999709129333, 0.7583333253860474, 0.7620000243186951, 0.7760000228881836, 0.7820000052452087, 0.7896666526794434, 0.796999990940094, 0.8023333549499512, 0.8013333082199097, 0.8119999766349792, 0.8106666803359985, 0.8176666498184204, 0.8196666836738586, 0.8213333487510681, 0.8220000267028809, 0.8230000138282776, 0.8330000042915344, 0.8389999866485596, 0.8330000042915344, 0.8383333086967468, 0.840666651725769, 0.8416666388511658, 0.8433333039283752, 0.8443333506584167, 0.8513333201408386, 0.8473333120346069, 0.8519999980926514, 0.856333315372467, 0.8529999852180481, 0.8556666374206543, 0.8606666922569275, 0.8556666374206543, 0.8556666374206543, 0.8539999723434448, 0.8519999980926514, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 0], [9, 2, 7], [0, 3, 0], [0], [0, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [8], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 6, 2, 5, 5, 3, 0, 9], [0, 0, 1, 0, 3, 2, 2], [83, 99, 27, 96], [0, 0, 1, 0, 1, 1, 1], [3, 1, 2], [1, 1, 3, 5], [0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 8, 3, 3, 1, 3, 1, 8, 2, 3, 5, 3, 1, 8, 9, 4, 5, 4, 9, 7, 1, 1, 9], [4, 0, 4, 5, 6, 7, 5, 2, 7, 0, 1, 1], [0, 58, 33, 84, 23], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 4, 7, 3, 4, 0, 36, 24, 12, 5, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.square(tf.math.multiply(tf.math.negative(grad), grad))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.multiply(grad, tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.square(tf.math.pow(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))), beta)), grad)), tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3303472995758057, 2.579479694366455, 2597557565915136.0, NaN, NaN, NaN, NaN], "accuracy": [0.0804385170340538, 0.07555144280195236, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3922829627990723, 3.5389723777770996, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 14], [0, 0, 1, 1, 1, 1], [0, 7, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 9, 4, 3], [0, 0, 4], [2, 58], [0, 1], [0], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 10, 5, 5, 2, 4, 2, 2, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310276746749878, 2.310167074203491, 2.310506820678711, 2.3096327781677246, 2.3106539249420166, 2.310145139694214], "accuracy": [0.09747721254825592, 0.09074098616838455, 0.09245806187391281, 0.09047681838274002, 0.08915598690509796, 0.09060890227556229], "val_loss": [2.3087007999420166, 2.3087007999420166, 2.3087007999420166, 2.3087007999420166, 2.3087007999420166, 2.3087007999420166], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]