[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933685779571533, 2.1865248680114746, 1.7658436298370361, 1.33946692943573, 1.0768446922302246, 0.9309816360473633, 0.8531680107116699, 0.8171708583831787, 0.7751772999763489, 0.7636571526527405, 0.7210065722465515, 0.6899742484092712, 0.6420238614082336, 0.6260328888893127, 0.6135550737380981, 0.597909152507782, 0.5814435482025146, 0.5730495452880859, 0.5520759224891663, 0.5380434989929199, 0.543350100517273, 0.5257327556610107, 0.5174270868301392, 0.5043690204620361, 0.49691081047058105, 0.47919943928718567, 0.4699401557445526, 0.47747957706451416, 0.45368677377700806, 0.4384414553642273, 0.429282546043396, 0.4353116452693939, 0.4211473762989044, 0.41135329008102417, 0.40710604190826416, 0.39264461398124695, 0.3873700499534607, 0.3833858072757721, 0.3828814625740051, 0.3639102876186371, 0.3726145029067993, 0.3636389374732971, 0.35926225781440735, 0.34092944860458374, 0.33889904618263245, 0.335380494594574, 0.32969167828559875, 0.33562520146369934, 0.3307152986526489, 0.32002511620521545, 0.3061896860599518, 0.3149161636829376, 0.31344690918922424, 0.3003259599208832, 0.2829984426498413, 0.2856273055076599, 0.286653995513916, 0.27851757407188416, 0.28061914443969727], "accuracy": [0.12072381377220154, 0.3273015320301056, 0.4303262531757355, 0.5344076156616211, 0.6361114978790283, 0.667811393737793, 0.6877558827400208, 0.6955488324165344, 0.6952846646308899, 0.7013604640960693, 0.7180029153823853, 0.7363624572753906, 0.7477215528488159, 0.7613261342048645, 0.7675340175628662, 0.7730814814567566, 0.7798177003860474, 0.778761088848114, 0.7876105904579163, 0.7911768555641174, 0.7882710099220276, 0.8018755912780762, 0.7994980812072754, 0.8070268034934998, 0.8166688680648804, 0.8202351331710815, 0.8133667707443237, 0.8157442808151245, 0.8271034359931946, 0.8309338092803955, 0.8322546482086182, 0.8304054737091064, 0.833179235458374, 0.8417646288871765, 0.8446704745292664, 0.8531237840652466, 0.8502179384231567, 0.854708731174469, 0.8494254350662231, 0.8627657890319824, 0.8573504090309143, 0.8625016212463379, 0.8589354157447815, 0.8634262084960938, 0.8692378997802734, 0.8692378997802734, 0.8745211958885193, 0.8709549307823181, 0.8701624870300293, 0.8762382864952087, 0.8813894987106323, 0.8751816153526306, 0.8761062026023865, 0.8803328275680542, 0.8881257176399231, 0.8858803510665894, 0.8893144726753235, 0.8897107243537903, 0.8873332738876343], "val_loss": [2.2455546855926514, 2.012265205383301, 1.1280301809310913, 0.93814617395401, 0.7783434391021729, 0.7254003882408142, 0.6910781264305115, 0.6754838228225708, 0.6562231779098511, 0.6428167223930359, 0.5989013910293579, 0.5713179111480713, 0.558436930179596, 0.5437091588973999, 0.5371421575546265, 0.5307123064994812, 0.5164145231246948, 0.5039671659469604, 0.4998307228088379, 0.5038674473762512, 0.505320131778717, 0.4975851774215698, 0.48952993750572205, 0.48463985323905945, 0.48175492882728577, 0.4644564688205719, 0.45867273211479187, 0.45310643315315247, 0.4512195587158203, 0.46222367882728577, 0.4409644901752472, 0.4338536262512207, 0.43509745597839355, 0.42721331119537354, 0.4162139892578125, 0.4213522672653198, 0.4215812087059021, 0.41425275802612305, 0.4114062786102295, 0.41744980216026306, 0.4200206696987152, 0.4194492697715759, 0.41288602352142334, 0.40884634852409363, 0.416585236787796, 0.4263847768306732, 0.42574647068977356, 0.42129775881767273, 0.41506338119506836, 0.4113903343677521, 0.4063965678215027, 0.41306546330451965, 0.415648490190506, 0.4141661822795868, 0.42024731636047363, 0.4218151569366455, 0.4321008622646332, 0.4547666013240814, 0.4612671732902527], "val_accuracy": [0.40033334493637085, 0.45233333110809326, 0.6513333320617676, 0.6736666560173035, 0.7123333215713501, 0.7326666712760925, 0.7336666584014893, 0.7429999709129333, 0.7473333477973938, 0.7563333511352539, 0.7620000243186951, 0.7716666460037231, 0.7900000214576721, 0.7953333258628845, 0.7929999828338623, 0.7916666865348816, 0.7963333129882812, 0.8046666383743286, 0.8036666512489319, 0.8169999718666077, 0.8069999814033508, 0.8146666884422302, 0.8243333101272583, 0.831333339214325, 0.8339999914169312, 0.8356666564941406, 0.8379999995231628, 0.8413333296775818, 0.8429999947547913, 0.8396666646003723, 0.8446666598320007, 0.8453333377838135, 0.8456666469573975, 0.846666693687439, 0.8496666550636292, 0.8576666712760925, 0.8586666584014893, 0.8546666502952576, 0.8586666584014893, 0.8586666584014893, 0.859000027179718, 0.8579999804496765, 0.8600000143051147, 0.8643333315849304, 0.8569999933242798, 0.859000027179718, 0.8633333444595337, 0.859666645526886, 0.8669999837875366, 0.8673333525657654, 0.8650000095367432, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8676666617393494, 0.8666666746139526, 0.8650000095367432, 0.8663333058357239, 0.8669999837875366]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 1, 3, 1, 3, 7], [1, 2, 3, 0, 1, 2, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 3, 0, 9, 9, 9], [0, 0, 4], [0, 58, 45], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 6, 7, 1, 6, 3, 3, 1, 8, 8, 0, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, grad), grad), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 0, 2], [64, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 2, 3, 9], [0, 3, 3], [0, 42], [0, 1, 0, 0, 1, 1, 0], [0, 0, 4, 3], [0, 0, 0], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 5, 1, 3], [0, 0, 1, 0, 2], [83, 90, 20], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 7, 2, 1, 1, 2, 9, 8, 0, 8, 8], [0, 3, 3, 0, 2], [0, 14, 78], [0, 0, 0, 0, 1, 1, 1], [0, 0, 8, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09714286029338837, "mapping_values": [1, 7, 4, 3, 2, 16, 11, 5, 3, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309824228286743, 2.3086776733398438, 2.3118741512298584, 2.31001877784729, 2.3111047744750977, 2.309157371520996, 2.311450719833374, 2.3116793632507324, 2.310779571533203, 2.3097190856933594, 2.3112690448760986, 2.310237407684326, 2.3127646446228027, 2.3103294372558594, 2.3115408420562744, 2.3102540969848633, 2.3108811378479004, 2.3116424083709717, 2.313680648803711, 2.313183546066284, 2.3127384185791016], "accuracy": [0.09074098616838455, 0.10130762308835983, 0.09298639744520187, 0.0936468094587326, 0.09377889335155487, 0.09813763201236725, 0.09259014576673508, 0.09298639744520187, 0.09272222965955734, 0.09417514503002167, 0.09126931428909302, 0.09985470771789551, 0.0948355570435524, 0.09509972482919693, 0.09219389408826828, 0.09959053993225098, 0.09259014576673508, 0.09311848133802414, 0.09166556596755981, 0.09549596905708313, 0.09721305221319199], "val_loss": [2.3089709281921387, 2.3090171813964844, 2.3090579509735107, 2.3090920448303223, 2.30912446975708, 2.309157133102417, 2.3091864585876465, 2.3092129230499268, 2.3092427253723145, 2.3092756271362305, 2.30930495262146, 2.309330940246582, 2.3093531131744385, 2.30936861038208, 2.3093810081481934, 2.3093907833099365, 2.3093998432159424, 2.309410572052002, 2.3094213008880615, 2.3094329833984375, 2.3094470500946045], "val_accuracy": [0.09033333510160446, 0.09233333170413971, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09533333033323288, 0.0963333323597908, 0.09700000286102295, 0.09733333438634872, 0.0976666659116745, 0.09799999743700027, 0.09866666793823242, 0.0989999994635582, 0.09933333098888397, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 5], [0, 0, 1, 2, 2], [0, 99, 27], [1, 0, 1, 0, 1, 1], [4, 4, 2], [0, 3, 2], [0], [0, 1, 1, 1, 1, 1, 1], [0, 0, 4, 8], [0, 0, 4], [61, 58], [0, 1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3105783462524414, 2.310199499130249, 2.311403512954712, 2.3088431358337402, 2.3090672492980957, 2.309614896774292], "accuracy": [0.08915598690509796, 0.09470347315073013, 0.08928807079792023, 0.09285431355237961, 0.09602430462837219, 0.0956280529499054], "val_loss": [2.3085787296295166, 2.3085787296295166, 2.3085787296295166, 2.3085787296295166, 2.3085787296295166, 2.3085787296295166], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]