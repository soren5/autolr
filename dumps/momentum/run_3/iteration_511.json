[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29404354095459, 2.192789077758789, 1.7839447259902954, 1.3583502769470215, 1.0871071815490723, 0.9457455277442932, 0.858616292476654, 0.833215594291687, 0.7779738903045654, 0.7555404305458069, 0.6979737281799316, 0.682803213596344, 0.6644691228866577, 0.624636709690094, 0.602001965045929, 0.5846306085586548, 0.566710889339447, 0.5643945932388306, 0.549639880657196, 0.5456795692443848, 0.5374839901924133, 0.5156798958778381, 0.5023767352104187, 0.5052029490470886, 0.47906917333602905, 0.4924392104148865, 0.48169341683387756, 0.4679507315158844, 0.4594571888446808, 0.45084619522094727, 0.45056653022766113, 0.4315783977508545, 0.4274279475212097, 0.4120270311832428, 0.40869322419166565, 0.3976763188838959, 0.4072851538658142, 0.3963950276374817, 0.38686516880989075, 0.38219884037971497, 0.3807389438152313, 0.37444257736206055, 0.3555351495742798, 0.3559936285018921, 0.3488157391548157], "accuracy": [0.12323339283466339, 0.3271694481372833, 0.4315149784088135, 0.5439175963401794, 0.6297714710235596, 0.6483951807022095, 0.6893408894538879, 0.6956809163093567, 0.6972658634185791, 0.7104741930961609, 0.7323999404907227, 0.7383436560630798, 0.7457403540611267, 0.7576277852058411, 0.763967752456665, 0.7786290049552917, 0.7810064554214478, 0.7792893648147583, 0.789459764957428, 0.7873464822769165, 0.7927618622779846, 0.7991018295288086, 0.8054417967796326, 0.8038568496704102, 0.81548011302948, 0.81548011302948, 0.8125742673873901, 0.8197067975997925, 0.8234050869941711, 0.8267071843147278, 0.8236692547798157, 0.8341038227081299, 0.8376700282096863, 0.8455950617790222, 0.842028796672821, 0.8469158411026001, 0.8450667262077332, 0.8451988101005554, 0.8514066934585571, 0.8557654023170471, 0.8532558679580688, 0.8597279191017151, 0.8621054291725159, 0.8644828796386719, 0.8656716346740723], "val_loss": [2.2475979328155518, 2.0280210971832275, 1.1515676975250244, 0.8962441682815552, 0.7953343987464905, 0.7137239575386047, 0.671972930431366, 0.6531256437301636, 0.6514845490455627, 0.6375700831413269, 0.5896006226539612, 0.5701126456260681, 0.5545109510421753, 0.5465813279151917, 0.5241026878356934, 0.5163755416870117, 0.5055826306343079, 0.4965982139110565, 0.4880904257297516, 0.4807785153388977, 0.4713335633277893, 0.47182390093803406, 0.45567747950553894, 0.44132137298583984, 0.4432700574398041, 0.43593156337738037, 0.4339202344417572, 0.44366732239723206, 0.43553927540779114, 0.44633740186691284, 0.4231175184249878, 0.41706210374832153, 0.4215782880783081, 0.4164026975631714, 0.4150157868862152, 0.4346829056739807, 0.41363057494163513, 0.40941479802131653, 0.3973151743412018, 0.3897930383682251, 0.3955484926700592, 0.38870587944984436, 0.39254745841026306, 0.3826441764831543, 0.4170861840248108], "val_accuracy": [0.39899998903274536, 0.4846666753292084, 0.6523333191871643, 0.6909999847412109, 0.7073333263397217, 0.7446666955947876, 0.7490000128746033, 0.7433333396911621, 0.7599999904632568, 0.7620000243186951, 0.7616666555404663, 0.7839999794960022, 0.7853333353996277, 0.7979999780654907, 0.7986666560173035, 0.8003333210945129, 0.8050000071525574, 0.815666675567627, 0.8066666722297668, 0.8190000057220459, 0.8226666450500488, 0.8163333535194397, 0.8240000009536743, 0.8343333601951599, 0.8349999785423279, 0.8379999995231628, 0.8356666564941406, 0.8353333473205566, 0.8346666693687439, 0.8389999866485596, 0.8460000157356262, 0.8506666421890259, 0.8463333249092102, 0.8410000205039978, 0.8496666550636292, 0.8460000157356262, 0.8550000190734863, 0.8553333282470703, 0.8610000014305115, 0.8686666488647461, 0.8569999933242798, 0.8603333234786987, 0.8646666407585144, 0.8666666746139526, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 3, 1, 3], [0, 0, 1, 0, 3], [43, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 2, 5, 6, 1, 1, 1, 4, 3, 2, 4, 2, 6, 2, 8, 5, 7, 2, 3, 9, 4, 0, 7, 6, 1, 6, 2, 7, 6, 1, 4, 7, 7, 5, 3, 8, 3, 0, 5, 9, 9, 0, 3, 3, 9, 3, 7, 4, 7, 1, 2, 0, 7, 0], [0, 3, 3, 2, 5, 3, 0, 2, 2, 4, 4, 4, 1, 0, 0, 1, 5, 1, 4, 4, 0, 5, 5, 2, 4, 5, 2, 4, 5, 1, 2, 0, 1, 4, 0, 4], [0, 98, 73, 42, 36, 1, 30, 67, 87, 72, 29], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [5, 0, 4], [0, 58], [0, 1, 1], [2], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 91, 55, 36, 11, 7, 4, 3, 1, 3, 1, 2, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.subtract(tf.math.pow(tf.math.multiply(beta, tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(tf.math.square(beta)))), grad)), grad), tf.math.add(tf.math.add(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.multiply(alpha, tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), tf.math.square(grad))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))), tf.math.multiply(grad, tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.math.pow(beta, tf.math.add(grad, grad)), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))))))))))), grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [2.398761564955978e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 3, 1, 3, 1, 9], [0, 0, 1, 0, 2], [36, 99, 27, 15], [0, 0, 1, 1, 1, 1], [3, 2, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [40, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 5, 2, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035264015197754, 2.302563190460205, 2.302565097808838, 2.3025450706481934, 2.3025624752044678, 2.3025572299957275, 2.302546262741089], "accuracy": [0.10051512718200684, 0.10487385839223862, 0.10527011007070541, 0.10328886657953262, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302581787109375, 2.302586317062378, 2.3025670051574707, 2.3025636672973633, 2.3026134967803955, 2.3026952743530273], "val_accuracy": [0.09799999743700027, 0.10333333164453506, 0.09700000286102295, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [99, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 2, 6, 9], [0, 3, 2], [0, 34], [0, 0, 1, 0, 1, 1, 1], [0, 9, 4, 3], [0, 0, 4], [0, 17], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1108897152.0, 21544226816.0, 100535975936.0, 277348515840.0, 594560876544.0, 1107624853504.0], "accuracy": [0.09972262382507324, 0.09906221181154251, 0.09919429570436478, 0.1022322028875351, 0.09787346422672272, 0.09536388516426086], "val_loss": [5213240320.0, 41700761600.0, 140734136320.0, 333583548416.0, 651519000576.0, 1125822234624.0], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 7, 3], [0, 0, 1, 0, 2], [51, 99, 27], [0, 0, 1, 0, 1, 0, 1], [0, 1, 2, 0], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.31075382232666, 2.3104050159454346, 2.3093111515045166, 2.310352325439453, 2.3106191158294678, 2.311458110809326], "accuracy": [0.08545766770839691, 0.09259014576673508, 0.09377889335155487, 0.09285431355237961, 0.09285431355237961, 0.08717474341392517], "val_loss": [2.3074560165405273, 2.3074560165405273, 2.3074560165405273, 2.3074560165405273, 2.3074560165405273, 2.3074560165405273], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]