[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939324378967285, 2.1939079761505127, 1.7938945293426514, 1.354720115661621, 1.0868617296218872, 0.9493710398674011, 0.8646692037582397, 0.8306945562362671, 0.7766233086585999, 0.7633936405181885, 0.7221591472625732, 0.6964557766914368, 0.6589102745056152, 0.6199526190757751, 0.6064398288726807, 0.599311351776123, 0.5830978751182556, 0.5688710808753967, 0.5588962435722351, 0.5428207516670227, 0.538225531578064, 0.5350047945976257, 0.5039940476417542, 0.4963666796684265, 0.4888037443161011, 0.4816892147064209, 0.47340112924575806, 0.47011664509773254, 0.4553706645965576, 0.4431871473789215, 0.43841344118118286, 0.4272838532924652, 0.4107557535171509, 0.40669697523117065, 0.4158085584640503, 0.3966822624206543, 0.3885195851325989], "accuracy": [0.12415797263383865, 0.32281073927879333, 0.4291374981403351, 0.5330867767333984, 0.6320168972015381, 0.6490556001663208, 0.6859067678451538, 0.7010962963104248, 0.7055870890617371, 0.7020208835601807, 0.722757875919342, 0.7339849472045898, 0.7450799345970154, 0.7642319202423096, 0.7676661014556885, 0.7729493975639343, 0.783119797706604, 0.7795535326004028, 0.7819310426712036, 0.7922335267066956, 0.7935543656349182, 0.7969884872436523, 0.807158887386322, 0.8115176558494568, 0.8148196935653687, 0.8109893202781677, 0.8133667707443237, 0.8203672170639038, 0.8230088353157043, 0.8322546482086182, 0.8304054737091064, 0.8347642421722412, 0.8418967127799988, 0.845859169960022, 0.8411042094230652, 0.8454629778862, 0.8507462739944458], "val_loss": [2.247454881668091, 2.0300042629241943, 1.1590845584869385, 0.8663071393966675, 0.7662128806114197, 0.7229005694389343, 0.6723884344100952, 0.651620626449585, 0.6492378115653992, 0.6280717849731445, 0.5733544230461121, 0.5507641434669495, 0.5347024202346802, 0.5269955992698669, 0.5098536610603333, 0.5060237646102905, 0.4925626516342163, 0.4891118109226227, 0.48013296723365784, 0.4806186258792877, 0.46799251437187195, 0.46185702085494995, 0.4557921588420868, 0.4479622542858124, 0.44940185546875, 0.4417556822299957, 0.4440780580043793, 0.42880335450172424, 0.42695102095603943, 0.4253024160861969, 0.4151832163333893, 0.40984460711479187, 0.4189482033252716, 0.4250809848308563, 0.42017221450805664, 0.41297370195388794, 0.4172632694244385], "val_accuracy": [0.40666666626930237, 0.4363333284854889, 0.6486666798591614, 0.6836666464805603, 0.7226666808128357, 0.7409999966621399, 0.7419999837875366, 0.7553333044052124, 0.7383333444595337, 0.7606666684150696, 0.7683333158493042, 0.777999997138977, 0.7853333353996277, 0.8009999990463257, 0.8050000071525574, 0.8046666383743286, 0.8163333535194397, 0.8116666674613953, 0.8176666498184204, 0.8263333439826965, 0.82833331823349, 0.8363333344459534, 0.8383333086967468, 0.8416666388511658, 0.8383333086967468, 0.8343333601951599, 0.8410000205039978, 0.8489999771118164, 0.8519999980926514, 0.8526666760444641, 0.8610000014305115, 0.8629999756813049, 0.8573333621025085, 0.8550000190734863, 0.8489999771118164, 0.8546666502952576, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 3, 4, 3], [0, 0, 3, 0, 2], [98, 99, 1], [0, 0, 1, 0, 1, 1, 1], [3, 1, 2], [0, 4, 3, 4], [74], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 4, 3, 5, 0], [0, 0, 1], [5, 58], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 7, 3, 4, 1, 9, 6, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 8, 1, 3, 9], [0, 0, 1, 1, 2], [83, 99, 77], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 4, 2], [0, 3, 3, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 5], [0, 3], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 10, 5, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, grad), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 0, 1, 1, 0, 2, 8, 4, 0, 2, 1, 6, 6, 7, 5, 1, 2, 1, 3, 8, 1, 6, 1, 4, 4, 9, 7, 6, 1, 5, 1, 9, 2, 1, 3, 0, 0, 0, 1, 7, 7, 5, 2, 5, 3, 6, 7, 8, 0, 9], [0, 0, 1, 0, 2, 1, 0, 2, 0, 3, 3, 1, 1, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 0, 2, 0, 3, 1, 0, 0, 2, 0, 3], [83, 99, 27, 26, 15, 83, 12, 29, 30, 46, 73, 95, 65, 60, 22, 43, 84], [1, 0, 1, 0, 1, 1], [0, 1, 2], [3, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1], [0, 0, 5, 3, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 86, 53, 33, 17, 1, 0, 1, 0, 7, 5, 2, 2, 2, 1, 1, 0], "tree_depth": 48, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(tf.math.subtract(grad, alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(grad, alpha), alpha), tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.square(alpha), tf.math.subtract(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.subtract(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(grad)))))), alpha)), tf.math.add(tf.math.square(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 0, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 4, 2, 2, 4, 2, 1, 9, 9, 7, 1, 3, 2, 1, 0, 3, 2, 7, 3, 5, 7, 6, 3, 3, 1, 3, 0, 0, 5], [0, 0, 4, 7, 3, 5, 3, 3, 5, 3, 7, 6, 7, 7, 2, 1, 0, 2, 6, 7], [38, 58, 81, 68, 91], [1, 1], [0], [0], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 0, 50, 30, 20, 5, 1, 0, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), sigma)), tf.math.subtract(grad, tf.math.multiply(sigma, tf.math.add(tf.math.subtract(sigma, tf.math.negative(tf.math.multiply(tf.math.add(grad, tf.math.add(sigma, tf.math.multiply(tf.math.square(tf.math.add(grad, grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.subtract(grad, tf.math.multiply(beta, alpha))), tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), beta)))), grad))), tf.math.negative(tf.math.square(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3100931644439697, 2.3092727661132812, 2.3101370334625244, 2.3098154067993164, 2.310833215713501, 2.3088347911834717], "accuracy": [0.09206181764602661, 0.09377889335155487, 0.09457138925790787, 0.09470347315073013, 0.09047681838274002, 0.0936468094587326], "val_loss": [2.3088879585266113, 2.3088879585266113, 2.3088879585266113, 2.3088879585266113, 2.3088879585266113, 2.3088879585266113], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]