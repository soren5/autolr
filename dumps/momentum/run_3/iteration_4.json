[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2921688556671143, 2.1871232986450195, 1.767158031463623, 1.339111328125, 1.0591981410980225, 0.9178820848464966, 0.8676952123641968, 0.8195357322692871, 0.7517454028129578, 0.7483966946601868, 0.6955247521400452, 0.6716362833976746, 0.653571367263794, 0.6077138781547546, 0.5996175408363342, 0.5850842595100403, 0.5672115087509155, 0.5584034323692322, 0.5417940616607666, 0.5274802446365356, 0.5180963277816772, 0.5124584436416626, 0.49082985520362854, 0.4957268536090851, 0.47851747274398804, 0.466277539730072, 0.4548349976539612, 0.4367418587207794, 0.4403948187828064, 0.42806339263916016, 0.42312973737716675, 0.41295185685157776, 0.41065582633018494, 0.40480825304985046, 0.3892442584037781, 0.39453816413879395, 0.37496456503868103, 0.3686946630477905, 0.36035630106925964, 0.3637153208255768, 0.36643344163894653, 0.3568895757198334], "accuracy": [0.13142253458499908, 0.32043322920799255, 0.4373266398906708, 0.551050066947937, 0.6432439684867859, 0.6586976647377014, 0.6888125538825989, 0.7046625018119812, 0.7086250185966492, 0.7187954187393188, 0.7368907928466797, 0.7530049085617065, 0.7581561207771301, 0.7701756954193115, 0.7732135653495789, 0.7812706232070923, 0.7876105904579163, 0.7876105904579163, 0.7992339134216309, 0.7981772422790527, 0.7976489067077637, 0.8075551390647888, 0.8161405324935913, 0.8107251524925232, 0.8193105459213257, 0.8238013386726379, 0.8245938420295715, 0.8298771381378174, 0.8333113193511963, 0.8319904804229736, 0.8354246616363525, 0.8426892161369324, 0.8428213000297546, 0.8436138033866882, 0.8467837572097778, 0.8519350290298462, 0.8589354157447815, 0.8623695969581604, 0.8658037185668945, 0.8619733452796936, 0.8597279191017151, 0.8598600029945374], "val_loss": [2.2456846237182617, 2.0144810676574707, 1.1398528814315796, 0.8728670477867126, 0.7673439383506775, 0.7157347202301025, 0.7029848694801331, 0.6555530428886414, 0.6503380537033081, 0.612386167049408, 0.5920800566673279, 0.560941755771637, 0.551986813545227, 0.5371943116188049, 0.51973557472229, 0.5109254717826843, 0.4995070695877075, 0.5060503482818604, 0.48719727993011475, 0.484844446182251, 0.4930354356765747, 0.48331180214881897, 0.4794071316719055, 0.46157267689704895, 0.47501111030578613, 0.4596715569496155, 0.4433145225048065, 0.4340231418609619, 0.43038442730903625, 0.421274870634079, 0.4259709119796753, 0.4316045641899109, 0.4192655384540558, 0.4106827676296234, 0.4025098383426666, 0.39460206031799316, 0.39243748784065247, 0.3854781985282898, 0.3917309641838074, 0.38206005096435547, 0.39244693517684937, 0.40306356549263], "val_accuracy": [0.41999998688697815, 0.43933331966400146, 0.6359999775886536, 0.6786666512489319, 0.7089999914169312, 0.721666693687439, 0.7306666374206543, 0.7483333349227905, 0.7553333044052124, 0.7613333463668823, 0.7716666460037231, 0.7749999761581421, 0.7806666493415833, 0.7960000038146973, 0.796999990940094, 0.7953333258628845, 0.8090000152587891, 0.8066666722297668, 0.8056666851043701, 0.8209999799728394, 0.8159999847412109, 0.8113333582878113, 0.8233333230018616, 0.82833331823349, 0.8276666402816772, 0.8293333053588867, 0.8353333473205566, 0.8386666774749756, 0.8413333296775818, 0.8473333120346069, 0.8453333377838135, 0.8433333039283752, 0.8496666550636292, 0.8473333120346069, 0.8523333072662354, 0.8613333106040955, 0.8646666407585144, 0.8640000224113464, 0.8619999885559082, 0.8646666407585144, 0.8633333444595337, 0.8636666536331177]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926361560821533, 2.188859224319458, 1.7648321390151978, 1.3501158952713013, 1.0667035579681396, 0.9032618403434753, 0.8405551910400391, 0.813432514667511, 0.7584094405174255, 0.7260721921920776, 0.7014976739883423, 0.6721641421318054, 0.6407552361488342, 0.6273722052574158, 0.595993161201477, 0.5979041457176208, 0.5709714293479919, 0.5735645890235901, 0.5523182153701782, 0.5456728339195251, 0.5276109576225281, 0.513444721698761, 0.49767962098121643, 0.488525390625, 0.4981251060962677, 0.48607689142227173, 0.47789397835731506, 0.48247578740119934, 0.4538438320159912, 0.45702821016311646, 0.44409459829330444], "accuracy": [0.13115836679935455, 0.32743361592292786, 0.439439982175827, 0.537709653377533, 0.6367719173431396, 0.6662263870239258, 0.6906617283821106, 0.6973979473114014, 0.7051908373832703, 0.7181349992752075, 0.7367587089538574, 0.7397965788841248, 0.7609298825263977, 0.7675340175628662, 0.7750627398490906, 0.7733456492424011, 0.7820631265640259, 0.7794214487075806, 0.7905164361000061, 0.7968564033508301, 0.8042530417442322, 0.8083476424217224, 0.8136309385299683, 0.8140271902084351, 0.8062343001365662, 0.8195747137069702, 0.8267071843147278, 0.8249900937080383, 0.8296129703521729, 0.8249900937080383, 0.8337075710296631], "val_loss": [2.246443033218384, 2.0195305347442627, 1.1411126852035522, 0.9028741121292114, 0.7620155215263367, 0.7208620309829712, 0.6956082582473755, 0.6727407574653625, 0.6583173871040344, 0.6501792669296265, 0.5960846543312073, 0.5725053548812866, 0.5580153465270996, 0.5470991730690002, 0.5435072183609009, 0.5339564085006714, 0.5305953621864319, 0.5204410552978516, 0.5185192823410034, 0.5109100937843323, 0.5083163976669312, 0.5003777742385864, 0.4996766746044159, 0.48633360862731934, 0.4824163019657135, 0.486851304769516, 0.48633047938346863, 0.46783432364463806, 0.47084030508995056, 0.4626995027065277, 0.45725318789482117], "val_accuracy": [0.4156666696071625, 0.43166667222976685, 0.6399999856948853, 0.6890000104904175, 0.7196666598320007, 0.7303333282470703, 0.7409999966621399, 0.7416666746139526, 0.734666645526886, 0.7516666650772095, 0.768666684627533, 0.7789999842643738, 0.7893333435058594, 0.7926666736602783, 0.7950000166893005, 0.7976666688919067, 0.7990000247955322, 0.8046666383743286, 0.8086666464805603, 0.8133333325386047, 0.8103333115577698, 0.8196666836738586, 0.8173333406448364, 0.8226666450500488, 0.8243333101272583, 0.8360000252723694, 0.8270000219345093, 0.8223333358764648, 0.8213333487510681, 0.8296666741371155, 0.8343333601951599]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 4, 1, 1, 1, 5, 7, 2, 6, 6, 2, 3, 9, 9, 1, 9, 3], [0, 0, 1, 1, 2, 0, 3, 0, 1, 2, 1], [83, 99, 27, 97, 37, 98, 73], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 8, 6], [0, 3, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 6, 6, 9], [0, 0, 4], [0, 58, 16], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 18, 11, 7, 9, 5, 4, 1, 7, 5, 2, 3, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), alpha), tf.math.subtract(grad, tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037431240081787, 2.508920431137085, 9.288453102111816, 55.264678955078125, 158.70269775390625, 319.659423828125], "accuracy": [0.10170386731624603, 0.10500594228506088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.320796251296997, 3.6275296211242676, 27.425447463989258, 107.29639434814453, 244.8636016845703, 440.2397766113281], "val_accuracy": [0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 4, 3, 5, 9], [0, 0, 4], [0, 58, 27], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 8, 6, 2, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303571939468384, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 1], [0, 0, 1, 0, 2], [61, 78, 27], [0, 0, 1, 0, 1, 1, 1], [3, 1, 2], [0, 3, 3, 0], [0, 52], [0, 0, 1, 0, 1, 1, 1], [0, 2, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303537130355835, 2.417872667312622, 9.026310920715332, 46.2977409362793, 107.34374237060547, 179.9136962890625], "accuracy": [0.10645885765552521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.312570095062256, 3.1776978969573975, 25.810041427612305, 79.54320526123047, 148.63165283203125, 225.25146484375], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 10, 5, 5, 3, 7, 3, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [9, 1, 3, 1, 3], [0, 0, 1, 0, 2], [49, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 2, 1], [0, 0, 4], [0, 26], [0, 1], [9], [1], [0]], "fitness": -0.09399999678134918, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310093641281128, 2.3086719512939453, 2.3109130859375, 2.311164379119873, 2.3099050521850586, 2.3090174198150635], "accuracy": [0.09192973375320435, 0.09100515395402908, 0.09417514503002167, 0.08942015469074249, 0.09576013684272766, 0.09642054885625839], "val_loss": [2.308842182159424, 2.308842182159424, 2.308842182159424, 2.308842182159424, 2.308842182159424, 2.308842182159424], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 5, 3, 2, 2, 1, 1, 0, 1], "tree_depth": 10}]