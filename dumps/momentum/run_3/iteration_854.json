[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8040000200271606, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935352325439453, 2.188948154449463, 1.7667291164398193, 1.3341259956359863, 1.0659831762313843, 0.9169558882713318, 0.8491510152816772, 0.7973948121070862, 0.7831684350967407, 0.7447828650474548, 0.7029622197151184, 0.680966854095459, 0.6431113481521606, 0.6192082762718201, 0.6022396683692932, 0.5742507576942444, 0.5767630338668823, 0.561316728591919, 0.5442966818809509, 0.5305178165435791, 0.516156017780304, 0.504095196723938, 0.5022115111351013, 0.5018683671951294, 0.4799478352069855, 0.47383975982666016, 0.45388078689575195, 0.4490024447441101, 0.4371183216571808, 0.43183964490890503, 0.42889416217803955, 0.4289032518863678, 0.41379910707473755, 0.4156818091869354, 0.41320911049842834, 0.39954960346221924, 0.3930101692676544, 0.3845284879207611, 0.3748251795768738, 0.3721832036972046, 0.3572659492492676], "accuracy": [0.12574297189712524, 0.3229427933692932, 0.43891164660453796, 0.5515784025192261, 0.6382247805595398, 0.6602826714515686, 0.6860388517379761, 0.7088891863822937, 0.7028133869171143, 0.7190595865249634, 0.7349095344543457, 0.7452120184898376, 0.7611940503120422, 0.7602694630622864, 0.7647602558135986, 0.7796856164932251, 0.7803460359573364, 0.7792893648147583, 0.7946110367774963, 0.7973847389221191, 0.7997622489929199, 0.8090080618858337, 0.8082155585289001, 0.8124422430992126, 0.8182538747787476, 0.8206313848495483, 0.828820526599884, 0.828292191028595, 0.8350284099578857, 0.8366134166717529, 0.8358209133148193, 0.8362171649932861, 0.8433496356010437, 0.8405758738517761, 0.8397833704948425, 0.8495575189590454, 0.8518029451370239, 0.8518029451370239, 0.8512746095657349, 0.8543124794960022, 0.8613129258155823], "val_loss": [2.246264696121216, 2.0194993019104004, 1.1363798379898071, 0.8784204125404358, 0.7563746571540833, 0.7024944424629211, 0.6630700826644897, 0.6601252555847168, 0.6380759477615356, 0.6066293716430664, 0.5773623585700989, 0.5547458529472351, 0.530563235282898, 0.5264869928359985, 0.5139567852020264, 0.5011279582977295, 0.4915350377559662, 0.4820622503757477, 0.48771053552627563, 0.4662816524505615, 0.45887744426727295, 0.4552704393863678, 0.4586960971355438, 0.4450996518135071, 0.43384411931037903, 0.4324128329753876, 0.42433062195777893, 0.42810770869255066, 0.43155694007873535, 0.42067402601242065, 0.4250229597091675, 0.4283352792263031, 0.42445307970046997, 0.4104733169078827, 0.3956013321876526, 0.3969525992870331, 0.3936365246772766, 0.3915499746799469, 0.386273592710495, 0.39265498518943787, 0.3906416893005371], "val_accuracy": [0.4333333373069763, 0.4560000002384186, 0.6383333206176758, 0.6956666707992554, 0.7323333621025085, 0.734000027179718, 0.7486666440963745, 0.7580000162124634, 0.7590000033378601, 0.7733333110809326, 0.7799999713897705, 0.7853333353996277, 0.7990000247955322, 0.7979999780654907, 0.8083333373069763, 0.8143333196640015, 0.8266666531562805, 0.8246666789054871, 0.8183333277702332, 0.8259999752044678, 0.8273333311080933, 0.8293333053588867, 0.8346666693687439, 0.8366666436195374, 0.8410000205039978, 0.8426666855812073, 0.8460000157356262, 0.8450000286102295, 0.8429999947547913, 0.8473333120346069, 0.8479999899864197, 0.8486666679382324, 0.8516666889190674, 0.8513333201408386, 0.8606666922569275, 0.8659999966621399, 0.8619999885559082, 0.8573333621025085, 0.859000027179718, 0.8633333444595337, 0.859000027179718]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 7, 5, 1, 7, 7, 3, 4, 5, 6, 8, 4, 6], [0, 0, 1, 0, 2, 2, 0, 0, 1, 2, 0, 1, 3, 3], [83, 99, 27, 90, 87, 90], [0, 0, 1, 0, 1, 1], [0, 9, 2], [5, 3, 3], [0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 4, 3, 9, 0], [0, 0, 0], [0, 58, 70, 37], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 17, 14, 6, 2, 2, 0, 1, 9, 6, 3, 4, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.pow(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha), grad))))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [1, 1, 1, 0, 0, 1], [0, 1, 2], [0, 3, 2], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3, 8, 3], [0, 0, 4, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035526275634766, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [18], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 33], [0, 1], [8], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 4, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 5], [0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 4, 2], [0, 0, 3, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), sigma), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303687810897827, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.10091137140989304, 0.09998679161071777, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.302584409713745, 2.302584409713745, 2.302584409713745], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.10233332961797714, 0.0989999994635582, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]