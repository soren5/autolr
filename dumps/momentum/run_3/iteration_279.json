[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926712036132812, 2.1856882572174072, 1.761453628540039, 1.3382647037506104, 1.063725233078003, 0.8988397717475891, 0.8259581923484802, 0.7943981885910034, 0.7607178688049316, 0.7206628918647766, 0.6853499412536621, 0.6642115712165833, 0.6389255523681641, 0.619064211845398, 0.5931066274642944, 0.5843647122383118, 0.5472007989883423, 0.5379244089126587, 0.5352047085762024, 0.5351683497428894, 0.5138898491859436, 0.499392032623291, 0.48861074447631836, 0.48509126901626587, 0.47856736183166504, 0.46275681257247925, 0.45863106846809387, 0.45175665616989136, 0.4355035722255707, 0.4291466176509857, 0.4278402626514435, 0.4301832616329193, 0.4073962867259979, 0.4030153751373291, 0.40536990761756897, 0.39253997802734375, 0.38743066787719727, 0.3860258162021637, 0.3788318336009979, 0.37014445662498474, 0.37396153807640076, 0.3618205189704895, 0.3522493243217468, 0.35775530338287354, 0.35182154178619385, 0.3449745178222656, 0.3305943012237549, 0.3256535530090332, 0.3235744833946228, 0.3258707523345947, 0.3152584433555603, 0.3084452152252197, 0.3151117265224457, 0.30367329716682434, 0.298407644033432, 0.30803564190864563, 0.29315391182899475, 0.2912317216396332], "accuracy": [0.1310262829065323, 0.3323206901550293, 0.43970412015914917, 0.5543521046638489, 0.6431118845939636, 0.6757363677024841, 0.6964733600616455, 0.7131158113479614, 0.7157574892044067, 0.720380425453186, 0.7423061728477478, 0.7446836829185486, 0.7493065595626831, 0.7652885913848877, 0.7721568942070007, 0.7808743715286255, 0.796328067779541, 0.7989697456359863, 0.7952714562416077, 0.7961959838867188, 0.8037247657775879, 0.8109893202781677, 0.8096684813499451, 0.8162726163864136, 0.8166688680648804, 0.8228767514228821, 0.828292191028595, 0.8281601071357727, 0.8315942287445068, 0.8363492488861084, 0.8380662798881531, 0.8305375576019287, 0.8399154543876648, 0.8436138033866882, 0.8469158411026001, 0.8459912538528442, 0.8449346423149109, 0.8482366800308228, 0.8561616539955139, 0.8556333184242249, 0.8543124794960022, 0.8603883385658264, 0.8597279191017151, 0.863029956817627, 0.8615770936012268, 0.8654074668884277, 0.8671245574951172, 0.8716153502464294, 0.8739928603172302, 0.8668603897094727, 0.8732003569602966, 0.8791441321372986, 0.8772949576377869, 0.8816536664962769, 0.886672854423523, 0.8825782537460327, 0.8838990926742554, 0.8861445188522339], "val_loss": [2.246422290802002, 2.0160715579986572, 1.141277551651001, 0.8868789076805115, 0.7742210030555725, 0.7234679460525513, 0.682937502861023, 0.6379978060722351, 0.62717604637146, 0.6129553318023682, 0.6008799076080322, 0.5772770047187805, 0.5562254786491394, 0.5449898838996887, 0.5411615371704102, 0.523672878742218, 0.5108362436294556, 0.5061135292053223, 0.4929657280445099, 0.4827260673046112, 0.47977572679519653, 0.48433181643486023, 0.4791593849658966, 0.4700050950050354, 0.466520756483078, 0.4529619812965393, 0.4641434848308563, 0.46177518367767334, 0.4430655241012573, 0.4428176283836365, 0.43965694308280945, 0.44855764508247375, 0.45445382595062256, 0.43995508551597595, 0.42562398314476013, 0.43336188793182373, 0.4352814853191376, 0.4280933439731598, 0.4298574924468994, 0.4129568636417389, 0.42437678575515747, 0.42497310042381287, 0.42505916953086853, 0.41392430663108826, 0.42926862835884094, 0.4241786003112793, 0.4260706305503845, 0.4229010343551636, 0.4385565221309662, 0.42550602555274963, 0.41640645265579224, 0.4368698000907898, 0.43190255761146545, 0.44309109449386597, 0.42855894565582275, 0.428630530834198, 0.43746304512023926, 0.4581121802330017], "val_accuracy": [0.4103333353996277, 0.43566668033599854, 0.6396666765213013, 0.6913333535194397, 0.722000002861023, 0.7369999885559082, 0.7350000143051147, 0.7553333044052124, 0.7486666440963745, 0.7590000033378601, 0.7596666812896729, 0.7749999761581421, 0.7846666574478149, 0.7900000214576721, 0.7923333048820496, 0.7986666560173035, 0.8069999814033508, 0.8133333325386047, 0.8169999718666077, 0.8206666707992554, 0.8233333230018616, 0.82833331823349, 0.8296666741371155, 0.82833331823349, 0.8246666789054871, 0.8356666564941406, 0.8393333554267883, 0.8426666855812073, 0.8456666469573975, 0.8423333168029785, 0.8500000238418579, 0.8523333072662354, 0.8510000109672546, 0.8546666502952576, 0.8536666631698608, 0.8539999723434448, 0.856333315372467, 0.859000027179718, 0.8653333187103271, 0.8643333315849304, 0.862666666507721, 0.8633333444595337, 0.8619999885559082, 0.8663333058357239, 0.862666666507721, 0.8683333396911621, 0.8673333525657654, 0.8673333525657654, 0.8633333444595337, 0.8673333525657654, 0.871666669845581, 0.8763333559036255, 0.8823333382606506, 0.8740000128746033, 0.8763333559036255, 0.8690000176429749, 0.8703333139419556, 0.8726666569709778]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 3], [83, 85, 27], [0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 2, 3], [0, 3, 3, 2, 4], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 4, 6, 2, 5, 9], [0, 0, 4, 6], [0, 2, 66], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 4, 5, 1, 11, 7, 4, 3, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.multiply(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [1, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 6, 4, 3], [0, 0, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [468397792.0, 2.6932191848754883, 2.471015214920044, 2.5820765495300293, 2.6364047527313232, 2.4836549758911133, 2.6216976642608643, 2.57576847076416, 2.5047824382781982], "accuracy": [0.09774138033390045, 0.10117553919553757, 0.1026284471154213, 0.09932637959718704, 0.09311848133802414, 0.10236428678035736, 0.09800554811954498, 0.09959053993225098, 0.0956280529499054], "val_loss": [2.707395553588867, 2.611677408218384, 2.7090649604797363, 2.6117916107177734, 2.7055041790008545, 2.6224727630615234, 2.585479736328125, 2.7393717765808105, 2.622002601623535], "val_accuracy": [0.10100000351667404, 0.09933333098888397, 0.09600000083446503, 0.10266666859388351, 0.09933333098888397, 0.09600000083446503, 0.10233332961797714, 0.09933333098888397, 0.09600000083446503]}, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 0, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 9, 1, 3, 0, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 4, 3, 5, 3, 0], [0, 1, 4, 7], [0, 58], [0, 0, 1, 0, 1, 1, 1], [4, 2, 2], [1, 2, 6, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 6, 3, 3, 1, 11, 7, 4, 1, 7, 3, 4, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.multiply(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(beta, grad)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [9, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 32, 27], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 5, 9, 3, 0, 1, 8, 3, 1, 3], [0, 3, 3, 4, 2, 5, 0], [0, 63, 83], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [15, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 19, 12, 7, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), tf.math.sqrt(tf.math.multiply(grad, tf.math.subtract(beta, tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3041765689849854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]