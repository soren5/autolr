[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927725315093994, 2.1907835006713867, 1.7682304382324219, 1.3193763494491577, 1.0644093751907349, 0.9072834849357605, 0.8250886797904968, 0.808300793170929, 0.7720213532447815, 0.7532864809036255, 0.7041154503822327, 0.6751759648323059, 0.6510316133499146, 0.6359125971794128, 0.6069384813308716, 0.6121669411659241, 0.5760349035263062, 0.5688651204109192, 0.5555626153945923, 0.5396066308021545, 0.5228119492530823, 0.5204394459724426, 0.49817055463790894, 0.5036400556564331], "accuracy": [0.13089419901371002, 0.32122573256492615, 0.4379870593547821, 0.5518425703048706, 0.640338122844696, 0.6688680648803711, 0.6927750706672668, 0.6956809163093567, 0.711530864238739, 0.7106062769889832, 0.7334566116333008, 0.7424382567405701, 0.7572315335273743, 0.7658169269561768, 0.7705719470977783, 0.7749306559562683, 0.7864218950271606, 0.7889314293861389, 0.7923656105995178, 0.7947431206703186, 0.8016114234924316, 0.8034605979919434, 0.8127063512802124, 0.8131026029586792], "val_loss": [2.2474148273468018, 2.020129442214966, 1.145538091659546, 0.8764724135398865, 0.7551913261413574, 0.6981746554374695, 0.6362313628196716, 0.619036078453064, 0.6046137809753418, 0.5938615202903748, 0.5787761807441711, 0.5675554871559143, 0.5326133370399475, 0.5182303190231323, 0.5086913704872131, 0.5067021250724792, 0.500130832195282, 0.4910341799259186, 0.48315805196762085, 0.4763168394565582, 0.46887266635894775, 0.4706224501132965, 0.45289844274520874, 0.4641396999359131], "val_accuracy": [0.398333340883255, 0.4569999873638153, 0.6460000276565552, 0.703000009059906, 0.7113333344459534, 0.734333336353302, 0.7603333592414856, 0.7639999985694885, 0.7593333125114441, 0.7760000228881836, 0.7620000243186951, 0.7723333239555359, 0.7886666655540466, 0.8033333420753479, 0.8059999942779541, 0.809333324432373, 0.8136666417121887, 0.8090000152587891, 0.8243333101272583, 0.812333345413208, 0.8166666626930237, 0.8209999799728394, 0.8213333487510681, 0.8216666579246521]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 6, 27], [1, 0, 1, 1, 0, 1], [0, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 1, 1, 1], [0, 4, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08833333104848862, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 1, 0, 9], [0, 0, 1, 0, 2], [83, 38, 16, 15], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 4, 3], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 4, 3, 3, 9, 6, 0, 7, 9], [0, 0, 4, 4], [0, 58, 12, 62], [1, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 6, 3, 3, 1, 14, 10, 4, 4, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [Infinity, 47.10215759277344, 147.92413330078125, 306.26544189453125, 522.9066162109375, 796.4571533203125], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [20.164636611938477, 97.42321014404297, 232.5572052001953, 425.64691162109375, 676.5399780273438, 985.4841918945312], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 3, 1, 3], [3, 0, 0, 2, 2], [83, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 5], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 6, 3, 2, 0, 1, 6, 7, 1, 8, 2, 8], [1, 2, 0, 3, 4, 6, 6, 4, 6, 1, 7, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 1, 5, 3, 2, 2, 27, 15, 12, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma), tf.math.negative(tf.math.subtract(grad, grad)))), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.sqrt(tf.math.add(grad, grad))), alpha), tf.math.sqrt(grad))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 6, 1, 3, 3, 4, 1, 3, 2, 3, 1, 9, 1, 5, 7, 7, 5, 5, 7, 1, 7, 9, 5, 6, 9, 4, 1, 3, 8, 8, 2, 8], [2, 0, 1, 0, 1, 0, 2, 1, 3, 3, 3, 2, 2, 2, 3, 0, 3, 2, 3, 3], [65, 99, 27, 18, 28, 48, 46], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 5, 4], [0, 58], [0, 0], [0, 9], [1], [0]], "fitness": -0.09028571099042892, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(grad, grad))), grad)))), tf.math.square(tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), grad)))))), tf.math.pow(tf.math.subtract(tf.math.multiply(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad))), tf.math.add(grad, grad))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309770345687866, 2.310706377029419, 2.309382200241089, 2.3101375102996826, 2.3111746311187744, 2.310377359390259], "accuracy": [0.09259014576673508, 0.09298639744520187, 0.0944393053650856, 0.09021265059709549, 0.08466517180204391, 0.08981640636920929], "val_loss": [2.3084349632263184, 2.3084349632263184, 2.3084349632263184, 2.3084349632263184, 2.3084349632263184, 2.3084349632263184], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}, "mapping_values": [1, 53, 33, 20, 7, 6, 3, 3, 1, 7, 4, 3, 1, 2, 2, 0, 1], "tree_depth": 29}]