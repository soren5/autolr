[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292295217514038, 2.1909635066986084, 1.7720801830291748, 1.357829213142395, 1.0922244787216187, 0.9462968707084656, 0.8574153184890747, 0.8367881774902344, 0.7744334936141968, 0.7380920052528381, 0.7148187160491943, 0.6818639039993286, 0.6506799459457397, 0.6229382753372192, 0.609763503074646, 0.5945468544960022, 0.5857384204864502, 0.5774440765380859, 0.5522691607475281, 0.5357899069786072, 0.5301249623298645, 0.5250949859619141, 0.5262255072593689, 0.5078827738761902, 0.4967917203903198, 0.49801716208457947, 0.46864885091781616, 0.4549306333065033, 0.45267027616500854, 0.4545997977256775, 0.44837191700935364, 0.44197386503219604, 0.4295496344566345, 0.4182046055793762, 0.4027754068374634, 0.4061073958873749, 0.3988993167877197, 0.39399319887161255, 0.38287079334259033, 0.3833068907260895, 0.3791183829307556, 0.3700215816497803, 0.36313197016716003, 0.3590734004974365, 0.3521501123905182, 0.3485569357872009, 0.34949108958244324, 0.34730857610702515, 0.326833575963974, 0.3288889229297638, 0.31895264983177185], "accuracy": [0.137630432844162, 0.31581032276153564, 0.43270373344421387, 0.5366530418395996, 0.6353189945220947, 0.6633205413818359, 0.6872276067733765, 0.7009642124176025, 0.69673752784729, 0.7153612375259399, 0.7304186820983887, 0.7400607466697693, 0.7506273984909058, 0.7606657147407532, 0.7681944370269775, 0.778761088848114, 0.7792893648147583, 0.7857614755630493, 0.7880068421363831, 0.7961959838867188, 0.796328067779541, 0.8099326491355896, 0.8068947196006775, 0.816008448600769, 0.8124422430992126, 0.8158763647079468, 0.8198388814926147, 0.8330471515655518, 0.8290846943855286, 0.8286884427070618, 0.8356888294219971, 0.8360850811004639, 0.8356888294219971, 0.8454629778862, 0.8482366800308228, 0.8525954484939575, 0.852331280708313, 0.8516708612442017, 0.8561616539955139, 0.8544445633888245, 0.8569541573524475, 0.860652506351471, 0.8603883385658264, 0.8622375130653381, 0.8661999702453613, 0.8689737319946289, 0.8693699836730957, 0.8720116019248962, 0.871879518032074, 0.8710870146751404, 0.8771628737449646], "val_loss": [2.2456839084625244, 2.0162320137023926, 1.1279065608978271, 0.8760080337524414, 0.7854222059249878, 0.7104387879371643, 0.6752248406410217, 0.6468016505241394, 0.6427049040794373, 0.6189965009689331, 0.5790481567382812, 0.5436882972717285, 0.5278091430664062, 0.5401178598403931, 0.5193318724632263, 0.5070314407348633, 0.5066553354263306, 0.5086128115653992, 0.4981728494167328, 0.4868570566177368, 0.4860769808292389, 0.49048757553100586, 0.47902917861938477, 0.4633457064628601, 0.4616621136665344, 0.4564518928527832, 0.4556816518306732, 0.45726945996284485, 0.43960896134376526, 0.4429706633090973, 0.45292672514915466, 0.4487867057323456, 0.4347565174102783, 0.43439459800720215, 0.45118001103401184, 0.43095242977142334, 0.4256601631641388, 0.42700788378715515, 0.4412919878959656, 0.4211476147174835, 0.41014352440834045, 0.41902023553848267, 0.41799429059028625, 0.40280982851982117, 0.4093547463417053, 0.41657206416130066, 0.4227775037288666, 0.41221630573272705, 0.40214771032333374, 0.40732112526893616, 0.40973666310310364], "val_accuracy": [0.4346666634082794, 0.48766666650772095, 0.656000018119812, 0.7043333053588867, 0.7213333249092102, 0.7329999804496765, 0.7490000128746033, 0.7553333044052124, 0.7576666474342346, 0.7666666507720947, 0.7823333144187927, 0.7923333048820496, 0.7976666688919067, 0.7960000038146973, 0.8066666722297668, 0.8100000023841858, 0.8056666851043701, 0.809333324432373, 0.809333324432373, 0.8109999895095825, 0.8163333535194397, 0.8196666836738586, 0.8263333439826965, 0.8230000138282776, 0.8226666450500488, 0.8309999704360962, 0.8299999833106995, 0.8363333344459534, 0.8363333344459534, 0.8343333601951599, 0.8349999785423279, 0.8356666564941406, 0.8366666436195374, 0.8376666903495789, 0.8376666903495789, 0.8423333168029785, 0.8386666774749756, 0.843999981880188, 0.8399999737739563, 0.8396666646003723, 0.8426666855812073, 0.8493333458900452, 0.8473333120346069, 0.847000002861023, 0.8516666889190674, 0.8610000014305115, 0.859333336353302, 0.856333315372467, 0.8606666922569275, 0.8566666841506958, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 7, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [9, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 6, 3], [0, 0, 5], [68, 69], [0, 0, 1, 0, 0, 1, 1], [0, 4, 1, 8], [1, 0, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 1, 0, 1, 5, 3, 2, 2, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 1, 3, 0, 2], [35, 99, 27], [0, 0, 0, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [32, 58], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 5, 1, 7, 9, 6, 7, 5, 1, 7, 9, 1, 4, 9, 8], [1, 5, 5, 2, 1, 5], [0, 1, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 7, 4, 3, 2, 21, 15, 6, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(grad, grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta))), tf.math.subtract(tf.math.pow(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 6], [0, 1, 4], [49, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 4, 2, 2, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.308037519454956, 2.3026812076568604, 2.3023314476013184, 2.302680253982544, 2.302821636199951, 2.3029427528381348, 2.3031420707702637, 2.303389549255371, 2.3037102222442627], "accuracy": [0.08968432247638702, 0.09589222073554993, 0.09245806187391281, 0.08875974267721176, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3034589290618896, 2.3023884296417236, 2.302664279937744, 2.30291748046875, 2.3031840324401855, 2.303368091583252, 2.303680896759033, 2.3040921688079834, 2.304410934448242], "val_accuracy": [0.09433333575725555, 0.09333333373069763, 0.08100000023841858, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 2, 0, 1, 6, 1, 7, 6, 9], [0, 3, 3, 2, 4, 4, 2], [33, 40], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), beta), grad), grad), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 2, 1, 1, 1, 17, 10, 7, 2, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 22}]