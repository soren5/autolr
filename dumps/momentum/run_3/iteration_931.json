[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937238216400146, 2.191955327987671, 1.781375527381897, 1.363937258720398, 1.0830849409103394, 0.9523850679397583, 0.8511205911636353, 0.8327831625938416, 0.7801687717437744, 0.7415080666542053, 0.7037521600723267, 0.6736803650856018, 0.6467692852020264, 0.6164960861206055, 0.6088569760322571, 0.5874688625335693, 0.5839110016822815, 0.5825483798980713, 0.5688074827194214, 0.542766809463501, 0.539124071598053, 0.5159096717834473, 0.5282332897186279, 0.5000755786895752, 0.4926341772079468, 0.49099186062812805, 0.47385233640670776, 0.4682571589946747, 0.4470236003398895, 0.4446146786212921, 0.43259191513061523, 0.4176696240901947, 0.41833627223968506, 0.4123869240283966, 0.3967987298965454, 0.39893224835395813, 0.3968130946159363, 0.38184472918510437, 0.38142070174217224, 0.37535038590431213, 0.36317047476768494, 0.3662514388561249, 0.3560202419757843, 0.3541903793811798, 0.33146363496780396, 0.34939101338386536, 0.34554600715637207, 0.33862125873565674, 0.328167200088501, 0.32906854152679443, 0.32408615946769714], "accuracy": [0.11874257028102875, 0.32901862263679504, 0.4345529079437256, 0.5455026030540466, 0.6273940205574036, 0.6538106203079224, 0.6828688383102417, 0.6896050572395325, 0.7014925479888916, 0.7170783281326294, 0.7337207794189453, 0.7460044622421265, 0.7555144429206848, 0.7713643908500671, 0.7692511081695557, 0.7771760821342468, 0.7777044177055359, 0.7765156626701355, 0.7852331399917603, 0.7935543656349182, 0.789459764957428, 0.8063663840293884, 0.8034605979919434, 0.8120459914207458, 0.8100647330284119, 0.817989706993103, 0.8228767514228821, 0.8187822103500366, 0.8354246616363525, 0.8301413059234619, 0.8355567455291748, 0.8454629778862, 0.8474441766738892, 0.8450667262077332, 0.8518029451370239, 0.845859169960022, 0.8453308939933777, 0.8553691506385803, 0.8601241707801819, 0.8577466607093811, 0.8658037185668945, 0.8576145768165588, 0.8573504090309143, 0.8622375130653381, 0.872407853603363, 0.8692378997802734, 0.867520809173584, 0.8716153502464294, 0.8705587387084961, 0.8692378997802734, 0.8712190985679626], "val_loss": [2.247323989868164, 2.0281331539154053, 1.169694185256958, 0.9239252805709839, 0.7854288220405579, 0.7370133399963379, 0.6859855055809021, 0.6733587980270386, 0.6388283967971802, 0.6173539757728577, 0.5946084856987, 0.5782110095024109, 0.5606123208999634, 0.5520719289779663, 0.5468626618385315, 0.530810534954071, 0.5197775959968567, 0.5102821588516235, 0.5179517269134521, 0.5057214498519897, 0.5032057166099548, 0.502516508102417, 0.4860817790031433, 0.47008219361305237, 0.46879345178604126, 0.4762696623802185, 0.4634309411048889, 0.4595484137535095, 0.4802277088165283, 0.4568614959716797, 0.4488259553909302, 0.45650985836982727, 0.45082807540893555, 0.435005247592926, 0.4333086609840393, 0.44040048122406006, 0.4295474588871002, 0.4322339594364166, 0.457278847694397, 0.45927518606185913, 0.43671277165412903, 0.433505117893219, 0.4256700575351715, 0.4232293367385864, 0.4272794723510742, 0.41970059275627136, 0.42106103897094727, 0.43014055490493774, 0.4213639199733734, 0.41456860303878784, 0.43372204899787903], "val_accuracy": [0.4153333306312561, 0.42899999022483826, 0.6336666941642761, 0.6660000085830688, 0.7023333311080933, 0.7239999771118164, 0.7353333234786987, 0.753333330154419, 0.7573333382606506, 0.7670000195503235, 0.7620000243186951, 0.7746666669845581, 0.7906666398048401, 0.7889999747276306, 0.7900000214576721, 0.7916666865348816, 0.7986666560173035, 0.8043333292007446, 0.7956666946411133, 0.8043333292007446, 0.8136666417121887, 0.8196666836738586, 0.8236666917800903, 0.82833331823349, 0.8330000042915344, 0.8253333568572998, 0.8333333134651184, 0.8353333473205566, 0.8349999785423279, 0.8399999737739563, 0.8410000205039978, 0.8473333120346069, 0.8493333458900452, 0.846666693687439, 0.8479999899864197, 0.8496666550636292, 0.8513333201408386, 0.8533333539962769, 0.8493333458900452, 0.8506666421890259, 0.8539999723434448, 0.856333315372467, 0.8539999723434448, 0.8543333411216736, 0.8550000190734863, 0.862333357334137, 0.8586666584014893, 0.8523333072662354, 0.8583333492279053, 0.8613333106040955, 0.8619999885559082]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 3, 2], [0, 0, 2, 0, 2, 0, 2], [83, 99, 27, 77], [0, 0, 1, 0, 1, 1], [0, 1, 2], [1, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 6, 4, 3], [0, 0, 6, 6], [0, 58], [0, 1, 0, 1], [1, 5], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 4, 6, 3, 3, 0, 8, 4, 4, 2, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 3, 1, 3], [2, 3, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [6, 0, 4], [0, 58], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 6, 2, 4, 3, 2, 9, 6, 7, 6, 2, 9, 9, 5, 4, 4, 8], [4, 7, 7, 0, 0, 5, 4, 6, 5], [0, 13, 83, 44, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 6, 3, 3, 1, 2, 1, 1, 0, 26, 17, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.multiply(grad, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.pow(grad, tf.math.pow(grad, tf.math.sqrt(grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 3, 1, 3, 6, 3, 0, 7, 9, 9, 4], [2, 0, 1, 0, 2, 0, 1, 1], [55, 99, 27, 14, 86], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [17], [0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 4, 3, 2, 9], [0, 0, 4], [0, 58, 14], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 4, 2, 7, 3, 1, 7, 3, 4, 4, 1, 4, 9, 4, 9, 7, 4, 9], [1, 3, 0, 2, 4, 7, 1, 4, 4, 5, 7, 0], [0, 20, 17, 73, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 5, 6, 3, 3, 1, 9, 6, 3, 3, 30, 18, 12, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))), beta), grad), tf.math.subtract(grad, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)))), grad), tf.math.add(grad, grad)), tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 5, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 4, 4, 3, 3], [0, 4, 4, 6, 6], [0, 76], [0, 0, 1, 0, 1], [0, 2, 5], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 10, 5, 5, 1, 5, 3, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]