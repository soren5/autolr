[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292985677719116, 2.1907808780670166, 1.7764257192611694, 1.344379186630249, 1.0912102460861206, 0.9168998599052429, 0.8409925103187561, 0.8206343650817871, 0.7602832913398743, 0.7469490766525269, 0.7160488963127136, 0.6879987120628357, 0.6680964231491089, 0.6449604630470276, 0.6308009624481201, 0.6129297018051147, 0.59818035364151, 0.5813180804252625, 0.5660589933395386, 0.5552938580513, 0.5550894141197205, 0.5414073467254639, 0.5278974771499634, 0.5127886533737183, 0.4985683560371399, 0.48559534549713135, 0.4817937910556793, 0.4719366431236267, 0.4548843801021576, 0.45096665620803833, 0.4439525902271271, 0.4423941671848297, 0.42766082286834717, 0.41899383068084717, 0.4124276638031006, 0.40159979462623596, 0.3920409381389618, 0.39407432079315186, 0.3813067376613617, 0.38617846369743347, 0.37143316864967346, 0.3665074110031128, 0.3568083345890045, 0.356790155172348, 0.3574484884738922, 0.3553980588912964, 0.3418104946613312, 0.3367560803890228, 0.33721688389778137, 0.3413199186325073, 0.3321368992328644, 0.3232235312461853, 0.3244144916534424, 0.31143829226493835], "accuracy": [0.12957337498664856, 0.334169864654541, 0.44868576526641846, 0.5435213446617126, 0.6304318904876709, 0.6667547225952148, 0.6934354901313782, 0.700171709060669, 0.707040011882782, 0.713379979133606, 0.7288337349891663, 0.7429665923118591, 0.7382115721702576, 0.754589855670929, 0.7553823590278625, 0.7609298825263977, 0.7788931727409363, 0.7775723338127136, 0.7839123010635376, 0.7877426743507385, 0.7865539789199829, 0.791969358921051, 0.7992339134216309, 0.8000264167785645, 0.8079513907432556, 0.817989706993103, 0.8211596608161926, 0.8183859586715698, 0.8245938420295715, 0.8327829837799072, 0.8302733898162842, 0.830669641494751, 0.8359529972076416, 0.8405758738517761, 0.8450667262077332, 0.8461233377456665, 0.8485008478164673, 0.8477083444595337, 0.8560295701026917, 0.8482366800308228, 0.8598600029945374, 0.8574824929237366, 0.8548408150672913, 0.8589354157447815, 0.8651432991027832, 0.8626337051391602, 0.8638224601745605, 0.8710870146751404, 0.8668603897094727, 0.8656716346740723, 0.8726720213890076, 0.8714832663536072, 0.8714832663536072, 0.8774270415306091], "val_loss": [2.2462940216064453, 2.024359703063965, 1.157901644706726, 0.9208554625511169, 0.7759323120117188, 0.7144789099693298, 0.6800129413604736, 0.6468611359596252, 0.6372321248054504, 0.6132855415344238, 0.5697096586227417, 0.5503430366516113, 0.5386914014816284, 0.5288662314414978, 0.5203192234039307, 0.5028825998306274, 0.4921424984931946, 0.4828330874443054, 0.4731726348400116, 0.46286189556121826, 0.46108588576316833, 0.4603364169597626, 0.4575534760951996, 0.4520229399204254, 0.4428337812423706, 0.44041040539741516, 0.43185171484947205, 0.4251725673675537, 0.4253515601158142, 0.4185783267021179, 0.41665852069854736, 0.41399380564689636, 0.4110907316207886, 0.40535855293273926, 0.40461063385009766, 0.40198633074760437, 0.3992953300476074, 0.4017152488231659, 0.3914847671985626, 0.38487768173217773, 0.3978942930698395, 0.38314592838287354, 0.39693254232406616, 0.3920779526233673, 0.398904949426651, 0.3912491500377655, 0.4015682637691498, 0.41282323002815247, 0.3949096202850342, 0.39365217089653015, 0.3915807604789734, 0.3979066014289856, 0.37758901715278625, 0.3939468562602997], "val_accuracy": [0.4403333365917206, 0.4896666705608368, 0.6346666812896729, 0.6746666431427002, 0.6983333230018616, 0.7300000190734863, 0.7350000143051147, 0.7473333477973938, 0.7536666393280029, 0.753000020980835, 0.765333354473114, 0.7716666460037231, 0.7803333401679993, 0.7876666784286499, 0.7946666479110718, 0.7993333339691162, 0.8033333420753479, 0.8096666932106018, 0.8073333501815796, 0.812333345413208, 0.8230000138282776, 0.8230000138282776, 0.8253333568572998, 0.8216666579246521, 0.8253333568572998, 0.8320000171661377, 0.8373333215713501, 0.8446666598320007, 0.8370000123977661, 0.840666651725769, 0.8393333554267883, 0.8420000076293945, 0.847000002861023, 0.8489999771118164, 0.8556666374206543, 0.8516666889190674, 0.856333315372467, 0.8586666584014893, 0.8576666712760925, 0.862666666507721, 0.859333336353302, 0.8610000014305115, 0.8629999756813049, 0.8619999885559082, 0.8659999966621399, 0.8629999756813049, 0.8583333492279053, 0.8636666536331177, 0.8686666488647461, 0.8646666407585144, 0.8650000095367432, 0.8600000143051147, 0.8636666536331177, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 9, 3], [0, 0, 2, 0, 2], [83, 59, 27], [0, 0, 1, 0, 1, 0], [0, 1, 5], [0, 3, 3], [0], [0, 0, 0, 1, 0, 1, 0], [0, 1, 4, 9], [0, 0, 0], [59, 58, 67], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 2, 7, 9, 2], [1, 6, 0], [0, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 5, 3, 2, 1, 6, 4, 2, 3, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 1, 3, 1, 3, 3, 0], [0, 0, 1, 1, 2, 3, 0], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 4, 3], [3, 3, 3, 0, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 3, 10, 5, 5, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.multiply(alpha, alpha), grad), tf.math.negative(grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.pow(grad, grad), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.314307928085327, 3.9188528060913086, 5.325006008148193, 15.666717529296875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09338264167308807, 0.09998679161071777, 0.09813763201236725, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.879915714263916, 6.270115375518799, 3.2063748836517334, 157868.359375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3], [0, 0, 2, 0, 2], [83, 35, 27], [1, 0, 1, 0, 1, 1], [0, 1, 1], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 7, 3, 3, 3, 4, 5, 9, 2, 6, 2, 0, 9], [0, 0, 4, 3, 1, 1, 1], [0, 58, 96, 62], [0, 1], [0], [1], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 21, 14, 7, 4, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.negative(sigma), alpha)), alpha)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.4698649942360064e+16, 5.179240726545826e+18, 8.907578223608673e+19, 6.281296360345709e+20, 2.8243303308888606e+21, 9.345226494922493e+21, 2.6059637891015893e+22, 6.489948271819272e+22, 1.420190416724918e+23, 2.85749649361768e+23, 5.5367019631712255e+23, 1.0149214842490199e+24, 1.7880498205936945e+24], "accuracy": [0.10038304328918457, 0.09787346422672272, 0.09840179979801178, 0.09945846349000931, 0.09932637959718704, 0.10077928751707077, 0.10157178342342377, 0.09377889335155487, 0.09800554811954498, 0.09906221181154251, 0.10117553919553757, 0.09893012791872025, 0.09879804402589798], "val_loss": [3.519915021230408e+17, 1.8868857582729036e+19, 2.0511549505054284e+20, 1.1180079818143548e+21, 4.22250886400305e+21, 1.304248757125974e+22, 3.3979393476132377e+22, 8.312152419209425e+22, 1.826202082851362e+23, 3.8889631220337485e+23, 7.053830290219465e+23, 1.3102488848951212e+24, 2.3355942927552617e+24], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10366666316986084, 0.10433333367109299, 0.09833333641290665, 0.10100000351667404, 0.09466666728258133, 0.1120000034570694, 0.10066666454076767, 0.10433333367109299, 0.10166666656732559, 0.10366666316986084, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 8, 3, 2], [1, 0, 0, 0, 0, 0, 2], [83, 99, 27, 86, 91], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 2, 8], [0, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 15, 8, 7, 5, 2, 1, 1, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310243606567383, 2.3100292682647705, 2.3102407455444336, 2.3099498748779297, 2.3107447624206543, 2.3100101947784424], "accuracy": [0.09126931428909302, 0.10117553919553757, 0.09034473448991776, 0.08915598690509796, 0.09034473448991776, 0.09140139818191528], "val_loss": [2.3082668781280518, 2.3082668781280518, 2.3082668781280518, 2.3082668781280518, 2.3082668781280518, 2.3082668781280518], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]