[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935471534729004, 2.19108510017395, 1.7802938222885132, 1.3530054092407227, 1.078899621963501, 0.9242101907730103, 0.853005588054657, 0.8157532811164856, 0.7766953706741333, 0.7440597414970398, 0.7068990468978882, 0.6773083209991455, 0.6585342288017273, 0.6352259516716003, 0.6074603796005249, 0.5894007682800293, 0.5825518369674683, 0.5776531100273132, 0.5496639013290405, 0.5587733387947083, 0.5407376289367676, 0.5302948951721191, 0.5198888778686523, 0.519101083278656, 0.49489519000053406, 0.4881487190723419, 0.4831754267215729, 0.47166311740875244, 0.4693719148635864, 0.46082401275634766, 0.4461479187011719, 0.4393232762813568, 0.4425428509712219, 0.4238925874233246, 0.4276590645313263, 0.4098753035068512, 0.3951685130596161, 0.3877609074115753, 0.3894508183002472, 0.39217379689216614, 0.3825475871562958, 0.3595258295536041, 0.36274370551109314, 0.35577592253685, 0.3627379238605499, 0.3721713721752167, 0.3470826745033264, 0.3441920280456543], "accuracy": [0.1310262829065323, 0.3241315484046936, 0.43111875653266907, 0.5350680351257324, 0.6227710843086243, 0.6643772125244141, 0.6859067678451538, 0.7082287669181824, 0.7040021419525146, 0.7174745798110962, 0.7342491149902344, 0.7358341217041016, 0.7490423917770386, 0.7585523724555969, 0.7668735980987549, 0.7711002230644226, 0.7724210619926453, 0.7771760821342468, 0.7884030938148499, 0.7841764688491821, 0.7895918488502502, 0.7940827012062073, 0.7996301651000977, 0.7951393723487854, 0.8053097128868103, 0.8113855719566345, 0.8132346868515015, 0.8187822103500366, 0.8137630224227905, 0.8252542614936829, 0.8253863453865051, 0.8277638554573059, 0.8251221776008606, 0.8360850811004639, 0.8330471515655518, 0.8442742228507996, 0.8388587832450867, 0.8532558679580688, 0.852331280708313, 0.8510104417800903, 0.8524633646011353, 0.8568220734596252, 0.8548408150672913, 0.8602562546730042, 0.8643507957458496, 0.8557654023170471, 0.863029956817627, 0.8687095642089844], "val_loss": [2.2467591762542725, 2.0218899250030518, 1.139416217803955, 0.8615275025367737, 0.7609843611717224, 0.7034533023834229, 0.6715604066848755, 0.6467831134796143, 0.6500412821769714, 0.6026386618614197, 0.5633391737937927, 0.5393679738044739, 0.5287320017814636, 0.5140902400016785, 0.5021834969520569, 0.49875935912132263, 0.4952872693538666, 0.49104028940200806, 0.4832438826560974, 0.4742955267429352, 0.47972407937049866, 0.4751487672328949, 0.47455647587776184, 0.47306492924690247, 0.4602671265602112, 0.4568634331226349, 0.44787052273750305, 0.43701061606407166, 0.44301244616508484, 0.44190359115600586, 0.4325883686542511, 0.4389629662036896, 0.42630693316459656, 0.43062639236450195, 0.4163784682750702, 0.4144691228866577, 0.4183727204799652, 0.437094122171402, 0.4200277626514435, 0.42270752787590027, 0.4178611934185028, 0.41121336817741394, 0.42225033044815063, 0.4254578948020935, 0.4142796993255615, 0.4108292758464813, 0.4185769855976105, 0.44532349705696106], "val_accuracy": [0.41733333468437195, 0.46566668152809143, 0.6510000228881836, 0.7046666741371155, 0.7263333201408386, 0.7239999771118164, 0.7426666617393494, 0.7486666440963745, 0.7329999804496765, 0.7643333077430725, 0.7706666588783264, 0.7893333435058594, 0.7976666688919067, 0.8069999814033508, 0.8063333630561829, 0.8076666593551636, 0.8130000233650208, 0.8043333292007446, 0.8186666369438171, 0.8153333067893982, 0.8190000057220459, 0.8303333520889282, 0.8180000185966492, 0.8243333101272583, 0.8426666855812073, 0.8386666774749756, 0.843666672706604, 0.846666693687439, 0.8489999771118164, 0.8493333458900452, 0.8489999771118164, 0.8396666646003723, 0.847000002861023, 0.8486666679382324, 0.8546666502952576, 0.8546666502952576, 0.8543333411216736, 0.8543333411216736, 0.8576666712760925, 0.8613333106040955, 0.8616666793823242, 0.8583333492279053, 0.8633333444595337, 0.8616666793823242, 0.859333336353302, 0.859333336353302, 0.8586666584014893, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 1, 3, 1, 8], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 9], [0, 2, 3], [0, 81], [1, 0, 0, 0, 1, 1, 0], [0, 6, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3053300380706787, 2.959744691848755, 32.617008209228516, 176.5825653076172, 574.03955078125, 1523.77978515625], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.325179100036621, 8.811495780944824, 90.29750061035156, 351.0208435058594, 1002.9791870117188, 2509.05078125], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 3, 5, 3, 5], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 2, 6, 1, 0, 9, 5, 2, 2, 9, 3, 6, 5, 7, 0, 6, 6, 7, 4, 5, 4, 0, 7, 4, 2, 2, 3, 0, 7, 0, 1, 6, 9], [0, 3, 2, 4, 4, 1, 0, 4, 3, 3, 5, 0, 1, 3, 3, 1, 1, 5, 5, 2], [0, 27, 51, 85, 96, 47], [1, 0, 0, 0, 1, 1, 0], [1, 0, 4, 1], [0, 0, 4], [70, 58], [0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 3, 8, 6], [1, 1, 3, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 54, 34, 20, 6, 1, 0, 1, 1, 9, 5, 4, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.math.pow(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), grad)))), tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(grad, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), grad), tf.math.add(grad, alpha))), tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(alpha, grad), grad))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3, 8], [0, 3, 1, 0, 2], [2, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 3, 4], [0, 58], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 4, 2, 3, 8], [1, 3, 3, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 4, 2, 2, 1, 7, 4, 3, 1, 9, 5, 4, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.add(sigma, tf.math.multiply(tf.math.sqrt(sigma), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 1, 3, 1, 3, 1, 2, 4, 1, 9, 1, 9, 8], [0, 0, 0, 0, 2, 3, 0, 2, 3], [83, 99, 27, 60, 21, 84, 31], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [58], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 1], [0, 0, 4], [0, 58], [0, 1, 1], [1], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 7, 6, 3, 3, 1, 5, 3, 2, 2, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.math.subtract(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]