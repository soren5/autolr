[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292579174041748, 2.1918108463287354, 1.7730884552001953, 1.3832141160964966, 1.1095985174179077, 0.9599615931510925, 0.8845517039299011, 0.8567736744880676, 0.7828961610794067, 0.7672114372253418, 0.7270390391349792, 0.6960699558258057, 0.677395224571228, 0.6348369717597961, 0.6288295388221741, 0.6027774214744568, 0.588555634021759, 0.5775672197341919, 0.5588535666465759, 0.554247260093689, 0.5372894406318665, 0.5335755944252014, 0.5178673267364502, 0.5038601756095886, 0.49612197279930115, 0.49266770482063293, 0.4877658188343048, 0.47433629631996155, 0.4533003866672516, 0.45257335901260376, 0.44002628326416016, 0.4194472134113312, 0.4357985258102417, 0.40725401043891907, 0.40745145082473755, 0.3927067816257477, 0.39533179998397827, 0.3786155581474304, 0.38404974341392517, 0.36917322874069214, 0.37539049983024597, 0.3711579442024231, 0.348937064409256, 0.353636234998703, 0.3339608907699585, 0.34178388118743896, 0.3177637457847595, 0.32726743817329407, 0.3226759135723114, 0.31892111897468567], "accuracy": [0.12838461995124817, 0.3234711289405823, 0.44049662351608276, 0.5373134613037109, 0.6280544400215149, 0.6543388962745667, 0.6744155287742615, 0.6925109028816223, 0.6955488324165344, 0.7148329019546509, 0.7301545143127441, 0.7376832365989685, 0.7427024245262146, 0.7605336308479309, 0.7597411274909973, 0.7658169269561768, 0.7738739848136902, 0.7781006693840027, 0.7932901978492737, 0.7923656105995178, 0.793950617313385, 0.7911768555641174, 0.8072909712791443, 0.8016114234924316, 0.8092722296714783, 0.8125742673873901, 0.8137630224227905, 0.8269713521003723, 0.8244617581367493, 0.8289526104927063, 0.8314621448516846, 0.8462554216384888, 0.8335754871368408, 0.8445383906364441, 0.8457271456718445, 0.848368763923645, 0.8514066934585571, 0.8589354157447815, 0.8527275323867798, 0.8585391640663147, 0.8539162874221802, 0.8599920868873596, 0.8677849769592285, 0.8663320541381836, 0.8714832663536072, 0.868049144744873, 0.871879518032074, 0.8732003569602966, 0.8749174475669861, 0.8698983192443848], "val_loss": [2.246382713317871, 2.0219242572784424, 1.14106285572052, 0.9003133177757263, 0.7904810309410095, 0.7210934162139893, 0.6674004197120667, 0.6442397236824036, 0.6544355750083923, 0.6331598162651062, 0.5786026120185852, 0.5580649971961975, 0.5431573987007141, 0.5454936623573303, 0.5200991034507751, 0.513079047203064, 0.5160992741584778, 0.5069338083267212, 0.4971369504928589, 0.49781814217567444, 0.5002046823501587, 0.5016753673553467, 0.4885317385196686, 0.467644602060318, 0.461342990398407, 0.45401325821876526, 0.4528482258319855, 0.446104496717453, 0.4290517568588257, 0.4237523078918457, 0.43341097235679626, 0.4277381896972656, 0.41736721992492676, 0.41320011019706726, 0.41260257363319397, 0.4050399661064148, 0.40753743052482605, 0.4221857488155365, 0.41333696246147156, 0.4029056131839752, 0.3999606966972351, 0.4019501209259033, 0.40976497530937195, 0.3989938199520111, 0.3916798532009125, 0.391855388879776, 0.3964327275753021, 0.4109087288379669, 0.41597509384155273, 0.42816025018692017], "val_accuracy": [0.4233333468437195, 0.4856666624546051, 0.6499999761581421, 0.6846666932106018, 0.7200000286102295, 0.7333333492279053, 0.7433333396911621, 0.7490000128746033, 0.7543333172798157, 0.7549999952316284, 0.7746666669845581, 0.7913333177566528, 0.7953333258628845, 0.7996666431427002, 0.8109999895095825, 0.812666654586792, 0.8090000152587891, 0.8206666707992554, 0.8246666789054871, 0.8173333406448364, 0.8216666579246521, 0.8243333101272583, 0.82833331823349, 0.8349999785423279, 0.8346666693687439, 0.8453333377838135, 0.8479999899864197, 0.8519999980926514, 0.8523333072662354, 0.8506666421890259, 0.8510000109672546, 0.8513333201408386, 0.8529999852180481, 0.8539999723434448, 0.8566666841506958, 0.8616666793823242, 0.859333336353302, 0.8566666841506958, 0.8573333621025085, 0.8650000095367432, 0.8629999756813049, 0.8666666746139526, 0.8706666827201843, 0.8683333396911621, 0.871666669845581, 0.8686666488647461, 0.8713333606719971, 0.8669999837875366, 0.859666645526886, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [4, 1, 2], [0, 3, 3, 4], [65], [0, 0, 0, 0, 1, 1, 1, 0], [3, 8, 4, 3, 9], [3, 0, 2], [0, 58], [0, 0, 0, 0, 1, 1], [0, 7, 7, 9], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 7, 3, 4, 1, 8, 5, 3, 2, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 4, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 0, 3], [0, 37], [0, 0, 1, 0, 1, 1, 1], [0, 4, 4, 3], [3, 0, 7], [0, 17], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 4, 2, 2, 2, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 9, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1, 0], [0, 2, 2, 1, 9], [0, 3, 1], [0, 43], [0, 0, 1, 0, 1, 1, 1], [6, 7, 4, 3], [0, 3, 4, 2], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 8, 5, 3, 2, 7, 3, 4, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47121465344.0, 7246103183360.0, 119980909658112.0, 848976454615040.0, 3716912479469568.0, 1.2186612146372608e+16], "accuracy": [0.10328886657953262, 0.09866596013307571, 0.1014397069811821, 0.09866596013307571, 0.09840179979801178, 0.09998679161071777], "val_loss": [470307602432.0, 25356411076608.0, 272174275362816.0, 1483781143789568.0, 5558537547677696.0, 1.6397992936341504e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 6, 3, 1, 1, 8, 0, 7], [0, 0, 1, 0, 2, 2], [83, 99, 79], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [68], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 0], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 6, 3, 3, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]