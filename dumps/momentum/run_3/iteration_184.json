[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934486865997314, 2.1882271766662598, 1.771450400352478, 1.3349426984786987, 1.061048984527588, 0.9071084260940552, 0.8379865288734436, 0.8061036467552185, 0.7704049348831177, 0.7512940168380737, 0.7071949243545532, 0.6854087710380554, 0.6721345782279968, 0.6253672242164612, 0.6029537916183472, 0.5900107026100159, 0.5759791731834412, 0.5814407467842102, 0.5527260303497314, 0.5409839153289795, 0.5313503742218018, 0.5218415856361389, 0.5138341784477234, 0.49341434240341187, 0.49305441975593567, 0.48045194149017334, 0.4563009738922119, 0.4610452353954315, 0.45429885387420654, 0.44926345348358154, 0.43104806542396545, 0.433505654335022, 0.4282667338848114, 0.41402381658554077, 0.4043022394180298, 0.40368056297302246, 0.38516151905059814, 0.39157214760780334, 0.3708016276359558, 0.37720903754234314, 0.37627601623535156, 0.3680713474750519, 0.35542160272598267, 0.3607538640499115, 0.3462143838405609, 0.34939780831336975, 0.34741851687431335, 0.3337272107601166, 0.3485261797904968, 0.32660534977912903, 0.3306039273738861, 0.3253988027572632, 0.3288114070892334, 0.31194183230400085], "accuracy": [0.12217672914266586, 0.32465988397598267, 0.4371945559978485, 0.548540472984314, 0.6388852000236511, 0.6709813475608826, 0.6980583667755127, 0.7013604640960693, 0.7012283802032471, 0.7106062769889832, 0.7271166443824768, 0.7357020378112793, 0.7412495017051697, 0.7573636174201965, 0.770439863204956, 0.7769119143486023, 0.7832518815994263, 0.7784969210624695, 0.7901201844215393, 0.7926297783851624, 0.8010830879211426, 0.8016114234924316, 0.8033285140991211, 0.8149517774581909, 0.8099326491355896, 0.81112140417099, 0.8280280232429504, 0.8272355198860168, 0.8273676037788391, 0.8276317715644836, 0.8342359066009521, 0.8360850811004639, 0.8400475382804871, 0.8469158411026001, 0.8467837572097778, 0.8502179384231567, 0.854708731174469, 0.8541803956031799, 0.8602562546730042, 0.859199583530426, 0.8532558679580688, 0.8531237840652466, 0.8650112152099609, 0.8639545440673828, 0.8643507957458496, 0.869502067565918, 0.8644828796386719, 0.8672566413879395, 0.870030403137207, 0.874389111995697, 0.8735966086387634, 0.8730682730674744, 0.8770307898521423, 0.8802007436752319], "val_loss": [2.2455058097839355, 2.0169360637664795, 1.135010004043579, 0.8615022897720337, 0.7503423094749451, 0.6961717009544373, 0.6668707728385925, 0.6385831236839294, 0.6385160088539124, 0.6135659217834473, 0.5859185457229614, 0.5729168057441711, 0.5452458262443542, 0.5307562351226807, 0.5220357775688171, 0.5148922204971313, 0.5090543031692505, 0.498269259929657, 0.4880965054035187, 0.48177263140678406, 0.46675798296928406, 0.45816296339035034, 0.45751887559890747, 0.44256338477134705, 0.44935497641563416, 0.451687753200531, 0.43363550305366516, 0.42777377367019653, 0.43270885944366455, 0.4236310124397278, 0.4149459898471832, 0.4152710437774658, 0.41065141558647156, 0.40005502104759216, 0.393772691488266, 0.39611580967903137, 0.39514216780662537, 0.39924079179763794, 0.3992385268211365, 0.39035889506340027, 0.3987557291984558, 0.3965761661529541, 0.4160666763782501, 0.4084424376487732, 0.4153175950050354, 0.40494662523269653, 0.39691317081451416, 0.39762958884239197, 0.40620458126068115, 0.4128265082836151, 0.4019200801849365, 0.41782015562057495, 0.4115133583545685, 0.4316663444042206], "val_accuracy": [0.4073333442211151, 0.4633333384990692, 0.6449999809265137, 0.6890000104904175, 0.7256666421890259, 0.7310000061988831, 0.7363333106040955, 0.7409999966621399, 0.7523333430290222, 0.7676666378974915, 0.7646666765213013, 0.7770000100135803, 0.7900000214576721, 0.7929999828338623, 0.7979999780654907, 0.7960000038146973, 0.7929999828338623, 0.8019999861717224, 0.809333324432373, 0.8149999976158142, 0.8270000219345093, 0.8333333134651184, 0.8349999785423279, 0.840666651725769, 0.8399999737739563, 0.8426666855812073, 0.8420000076293945, 0.8483333587646484, 0.8446666598320007, 0.8506666421890259, 0.8526666760444641, 0.8569999933242798, 0.8619999885559082, 0.8613333106040955, 0.8633333444595337, 0.8640000224113464, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8690000176429749, 0.8690000176429749, 0.8696666955947876, 0.8636666536331177, 0.8709999918937683, 0.8663333058357239, 0.8733333349227905, 0.8693333268165588, 0.8743333220481873, 0.878000020980835, 0.8766666650772095, 0.8736666440963745, 0.8693333268165588, 0.8769999742507935, 0.8713333606719971]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 0, 3], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [3, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 0, 4, 3, 4], [0, 0, 4, 4, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.15199999511241913, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 10, 5, 5, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [9.112868309020996, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1978602558374405, 0.11253467202186584, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.86893630027771, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1586666703224182, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 1, 1, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [4, 2, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 3, 3], [0, 0, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303813934326172, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 1, 2, 6, 4, 5, 5, 6, 6, 0, 1], [0, 3, 3, 3, 5, 0, 4, 3, 2], [91, 18], [0, 0, 1, 0, 1, 0, 0], [0, 0, 4, 3], [5, 0, 1], [0, 19], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 20, 11, 9, 2, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(tf.math.square(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)))))), grad)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303940773010254, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 1, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [2, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 5, 4, 3], [0, 0, 4], [22, 58], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [6, 0, 7, 1, 7, 7, 0, 2, 6, 2, 9], [1, 3, 5, 3, 6, 7, 4, 6], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 7, 3, 4, 2, 6, 3, 3, 0, 5, 3, 2, 2, 19, 11, 8, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(grad, sigma))), grad), tf.math.add(grad, grad))), grad)), tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3108227252960205, 2.3092896938323975, 2.3096635341644287, 2.310464382171631, 2.309422016143799, 2.3095438480377197], "accuracy": [0.09008057415485382, 0.09126931428909302, 0.09549596905708313, 0.08928807079792023, 0.09628847241401672, 0.09694888442754745], "val_loss": [2.3086416721343994, 2.3086416721343994, 2.3086416721343994, 2.3086416721343994, 2.3086416721343994, 2.3086416721343994], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]