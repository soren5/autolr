[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936596870422363, 2.191861391067505, 1.775464653968811, 1.3215532302856445, 1.0858969688415527, 0.9338200092315674, 0.8276429772377014, 0.8000779747962952, 0.7561728358268738, 0.7449216246604919, 0.6960546374320984, 0.6771431565284729, 0.6323215365409851, 0.613303005695343, 0.597944974899292, 0.5805911421775818, 0.5730869770050049, 0.551019549369812, 0.5437163710594177, 0.527654767036438, 0.5250651240348816, 0.5073302388191223, 0.5125922560691833, 0.49120500683784485, 0.4909566044807434, 0.48207011818885803, 0.4681744873523712, 0.45488497614860535, 0.44629794359207153, 0.43639659881591797, 0.4291306436061859, 0.41678059101104736, 0.41183263063430786, 0.40303751826286316, 0.39346951246261597, 0.38879233598709106, 0.379351943731308, 0.37318670749664307, 0.3558039963245392, 0.367061585187912, 0.3495824635028839, 0.3445567488670349, 0.3399498462677002, 0.333342045545578], "accuracy": [0.1310262829065323, 0.32003697752952576, 0.43428874015808105, 0.5532954931259155, 0.6388852000236511, 0.6598864197731018, 0.6921146512031555, 0.7156254053115845, 0.7119271159172058, 0.709549605846405, 0.7371549606323242, 0.737947404384613, 0.7594769597053528, 0.7630431652069092, 0.7631752490997314, 0.7745344042778015, 0.7820631265640259, 0.7874785661697388, 0.7940827012062073, 0.7948752045631409, 0.8010830879211426, 0.8087438941001892, 0.8037247657775879, 0.8064984679222107, 0.8128384351730347, 0.8123101592063904, 0.8211596608161926, 0.8227446675300598, 0.8241975903511047, 0.8310658931732178, 0.8422929644584656, 0.8424250483512878, 0.8411042094230652, 0.847840428352356, 0.8519350290298462, 0.8496896028518677, 0.8521991968154907, 0.8548408150672913, 0.8650112152099609, 0.8580108284950256, 0.8619733452796936, 0.8646149635314941, 0.8634262084960938, 0.8732003569602966], "val_loss": [2.2452614307403564, 2.0227675437927246, 1.1491285562515259, 0.8937242031097412, 0.7462111711502075, 0.7228702902793884, 0.6515129208564758, 0.6278089880943298, 0.6391645669937134, 0.6055070757865906, 0.5565282106399536, 0.5308570265769958, 0.5320364236831665, 0.51761794090271, 0.516346275806427, 0.5040280222892761, 0.4988483488559723, 0.4940449893474579, 0.490712970495224, 0.4871872663497925, 0.48803457617759705, 0.46870720386505127, 0.4730319082736969, 0.4655759334564209, 0.4572022259235382, 0.4537540376186371, 0.4401678144931793, 0.4443845748901367, 0.4388015568256378, 0.4310961067676544, 0.4270557761192322, 0.4165214002132416, 0.4213673770427704, 0.42187273502349854, 0.4171604812145233, 0.4070824086666107, 0.40148088335990906, 0.3945942521095276, 0.39657869935035706, 0.3961433470249176, 0.40742772817611694, 0.41361522674560547, 0.40469518303871155, 0.39506566524505615], "val_accuracy": [0.41866666078567505, 0.4429999887943268, 0.6370000243186951, 0.6853333115577698, 0.7213333249092102, 0.7310000061988831, 0.7446666955947876, 0.7490000128746033, 0.753000020980835, 0.7739999890327454, 0.7739999890327454, 0.7926666736602783, 0.7860000133514404, 0.7973333597183228, 0.7933333516120911, 0.8036666512489319, 0.8183333277702332, 0.8173333406448364, 0.812666654586792, 0.8163333535194397, 0.8159999847412109, 0.8303333520889282, 0.8223333358764648, 0.8180000185966492, 0.8326666951179504, 0.8330000042915344, 0.8456666469573975, 0.8389999866485596, 0.8410000205039978, 0.8523333072662354, 0.8553333282470703, 0.8546666502952576, 0.8510000109672546, 0.8556666374206543, 0.859333336353302, 0.8619999885559082, 0.8673333525657654, 0.8673333525657654, 0.8703333139419556, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8696666955947876, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1, 1], [7, 1, 2], [0, 3, 3, 4], [0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.14342856407165527, "mapping_values": [1, 10, 5, 5, 3, 7, 3, 4, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [6.927638530731201, 3622407680.0, 1.261079707516928e+17, 4.014590740203857, 3.2253870964050293, 3.4789059162139893, 3.3880374431610107], "accuracy": [0.09747721254825592, 0.09840179979801178, 0.10566636174917221, 0.09906221181154251, 0.10315678268671036, 0.10368511080741882, 0.10196803510189056], "val_loss": [2.8615312576293945, 9.24684331157291e+17, 3.686460256576538, 3.6291913986206055, 2.8859729766845703, 3.0183918476104736, 3.724195718765259], "val_accuracy": [0.10199999809265137, 0.13699999451637268, 0.10233332961797714, 0.09666666388511658, 0.10000000149011612, 0.09799999743700027, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 8, 7, 9, 2, 6, 5, 8, 8], [0, 2, 1, 1, 2, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 2, 5, 7], [0, 0, 3, 1], [0, 54], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3, 2], [0, 0, 4, 5], [96, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 13, 7, 2, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.square(grad))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 1], [32, 99, 92], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 2, 7, 0], [2, 3, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 4], [0, 0, 4, 7], [58, 58], [1, 1], [0], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 10, 5, 5, 3, 9, 5, 4, 0, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310340166091919, 2.30973482131958, 2.308981418609619, 2.3098831176757812, 2.3094284534454346, 2.3099684715270996], "accuracy": [0.08955223858356476, 0.0878351628780365, 0.09642054885625839, 0.09206181764602661, 0.09615638852119446, 0.08994849026203156], "val_loss": [2.308326244354248, 2.308326244354248, 2.308326244354248, 2.308326244354248, 2.308326244354248, 2.308326244354248], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3], [2, 0, 1, 0, 2], [83, 86, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3, 2, 8, 4, 5, 4], [3, 7, 4, 3, 2, 2], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 15, 9, 6, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.math.square(tf.math.pow(grad, sigma)), beta))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3099098205566406, 2.308673143386841, 2.309532403945923, 2.310976982116699, 2.3107690811157227, 2.3098230361938477], "accuracy": [0.09351472556591034, 0.09774138033390045, 0.09298639744520187, 0.08955223858356476, 0.08968432247638702, 0.09721305221319199], "val_loss": [2.30965256690979, 2.30965256690979, 2.30965256690979, 2.30965256690979, 2.30965256690979, 2.30965256690979], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}]