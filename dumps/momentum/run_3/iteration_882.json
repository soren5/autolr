[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293516159057617, 2.1912529468536377, 1.7737090587615967, 1.340378999710083, 1.0851304531097412, 0.9186765551567078, 0.8559627532958984, 0.8217905759811401, 0.7736753821372986, 0.7476711869239807, 0.708535373210907, 0.6855045557022095, 0.6703881621360779, 0.6313856840133667, 0.6240896582603455, 0.6126314401626587, 0.6041932106018066, 0.5898187756538391, 0.5786870121955872, 0.5509243607521057, 0.5618451833724976, 0.531172513961792, 0.5312926173210144, 0.5143140554428101, 0.5114443898200989, 0.4841917157173157, 0.48091864585876465, 0.4839246869087219, 0.4722672998905182, 0.4621741771697998, 0.43938785791397095, 0.4341078996658325, 0.4333480894565582, 0.42756614089012146, 0.4139917194843292, 0.39914533495903015, 0.408599853515625, 0.39849552512168884, 0.3875088691711426, 0.3779742121696472, 0.3666055500507355], "accuracy": [0.12574297189712524, 0.32333904504776, 0.44128912687301636, 0.5407475829124451, 0.6404702067375183, 0.6654338836669922, 0.689869225025177, 0.6995112895965576, 0.7069079279899597, 0.7166820764541626, 0.7300224304199219, 0.7349095344543457, 0.7506273984909058, 0.7664773464202881, 0.765949010848999, 0.7750627398490906, 0.7734777331352234, 0.7812706232070923, 0.7891955971717834, 0.7931581139564514, 0.7902522683143616, 0.8099326491355896, 0.8031964302062988, 0.804649293422699, 0.8062343001365662, 0.817989706993103, 0.8201030492782593, 0.8170651197433472, 0.8247259259223938, 0.8290846943855286, 0.8335754871368408, 0.8323867321014404, 0.8368775844573975, 0.8413683772087097, 0.8474441766738892, 0.8516708612442017, 0.8485008478164673, 0.8540483713150024, 0.8515387773513794, 0.8561616539955139, 0.8605204224586487], "val_loss": [2.2458691596984863, 2.0205819606781006, 1.1445013284683228, 0.8505330681800842, 0.7504280805587769, 0.6921480894088745, 0.6318996548652649, 0.6247304677963257, 0.6190634965896606, 0.5868766903877258, 0.5618836879730225, 0.5365435481071472, 0.5277951955795288, 0.5150913000106812, 0.49961113929748535, 0.506857693195343, 0.486285924911499, 0.4805322289466858, 0.469332754611969, 0.47038355469703674, 0.45671194791793823, 0.46521562337875366, 0.445343941450119, 0.4435667395591736, 0.43472999334335327, 0.4369795024394989, 0.42828837037086487, 0.4158482253551483, 0.40749138593673706, 0.3986321687698364, 0.3952104151248932, 0.3896341621875763, 0.38902783393859863, 0.3786779046058655, 0.3754182457923889, 0.3782925605773926, 0.37521159648895264, 0.37042927742004395, 0.3703341782093048, 0.3766267001628876, 0.3767329156398773], "val_accuracy": [0.41066667437553406, 0.4560000002384186, 0.6503333449363708, 0.6940000057220459, 0.7319999933242798, 0.7536666393280029, 0.762333333492279, 0.7770000100135803, 0.7689999938011169, 0.7786666750907898, 0.777999997138977, 0.7993333339691162, 0.7926666736602783, 0.8103333115577698, 0.8046666383743286, 0.8153333067893982, 0.8243333101272583, 0.82833331823349, 0.8289999961853027, 0.8316666483879089, 0.8306666612625122, 0.8306666612625122, 0.8356666564941406, 0.8333333134651184, 0.8483333587646484, 0.8389999866485596, 0.8433333039283752, 0.8510000109672546, 0.856333315372467, 0.8566666841506958, 0.8543333411216736, 0.8566666841506958, 0.8566666841506958, 0.856333315372467, 0.8640000224113464, 0.8713333606719971, 0.8706666827201843, 0.8706666827201843, 0.8693333268165588, 0.8653333187103271, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 7, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 2, 2, 0], [0, 2, 3, 0], [0, 38], [0, 1, 0, 0, 1, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [18685137780736.0, 3.753347428352891e+20, 4.2306080142643553e+26, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09576013684272766, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1259642369867776.0, 2.3366269141066222e+22, NaN, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 9, 7, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [44240957440.0, 7004953772032.0, 118728700198912.0, 838212729700352.0, 3681084130721792.0, 1.200227000254464e+16], "accuracy": [0.09945846349000931, 0.09840179979801178, 0.09932637959718704, 0.09496764093637466, 0.09760929644107819, 0.10157178342342377], "val_loss": [476713418752.0, 25701658918912.0, 275881721331712.0, 1504014600503296.0, 5634495118049280.0, 1.662361186336768e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 3, 1], [0, 0, 1, 2, 0], [0, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 2, 7, 6, 2, 1, 3, 4, 7, 6, 2, 2, 5, 4, 4, 4, 9, 9, 5, 9, 7, 6, 2, 8, 9], [4, 3, 3, 4, 0, 0, 5, 1, 2, 4, 4, 2, 2, 2, 5], [0, 44, 24, 90, 99, 70], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 4], [0, 0, 1, 1], [0, 33], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 41, 26, 15, 6, 9, 5, 4, 2, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(alpha, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.add(grad, grad), tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(grad), tf.math.pow(tf.math.pow(tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha), beta), grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(beta, beta), tf.math.add(beta, tf.math.sqrt(grad)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 51], [1, 0, 1, 0, 1, 1], [0, 8, 7], [1, 3, 5], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [2, 0, 4], [24, 58], [1, 1], [0], [1], [0]], "fitness": -0.0974285677075386, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310035228729248, 2.31067156791687, 2.310687303543091, 2.309037208557129, 2.3091986179351807, 2.311161518096924], "accuracy": [0.0952318087220192, 0.08928807079792023, 0.09166556596755981, 0.09642054885625839, 0.09430722147226334, 0.09219389408826828], "val_loss": [2.309530258178711, 2.309530258178711, 2.309530258178711, 2.309530258178711, 2.309530258178711, 2.309530258178711], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]