[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292634963989258, 2.1884825229644775, 1.7692281007766724, 1.3637847900390625, 1.0762993097305298, 0.930027425289154, 0.857527494430542, 0.838594913482666, 0.7677348852157593, 0.7549002170562744, 0.7035186886787415, 0.6937046051025391, 0.6665492653846741, 0.6217765808105469, 0.624424397945404, 0.6076277494430542, 0.5937458276748657, 0.5842775702476501, 0.572704017162323, 0.5520496368408203, 0.5571204423904419, 0.544917106628418, 0.5224416851997375, 0.5092177391052246, 0.5085398554801941, 0.5012772679328918, 0.4836195409297943, 0.4871601164340973, 0.47296756505966187, 0.4622885584831238, 0.4628673493862152, 0.44611385464668274, 0.45339515805244446, 0.4274022877216339, 0.41902855038642883, 0.4162769317626953, 0.403935045003891, 0.4066691994667053, 0.4102751314640045, 0.3769895136356354, 0.3706907331943512, 0.36531564593315125, 0.3545021116733551, 0.37220001220703125, 0.3553834557533264, 0.3479931056499481, 0.3744759261608124, 0.34104007482528687], "accuracy": [0.12178047746419907, 0.32241448760032654, 0.4360058009624481, 0.548540472984314, 0.6211860775947571, 0.6579051613807678, 0.6906617283821106, 0.6947563290596008, 0.7098137736320496, 0.7069079279899597, 0.7272487282752991, 0.7298903465270996, 0.741909921169281, 0.7635715007781982, 0.7594769597053528, 0.7696473598480225, 0.7729493975639343, 0.7777044177055359, 0.7755910754203796, 0.7927618622779846, 0.7869502305984497, 0.7858935594558716, 0.7935543656349182, 0.8005547523498535, 0.7998943328857422, 0.8016114234924316, 0.8109893202781677, 0.8121780753135681, 0.8136309385299683, 0.8144234418869019, 0.8169330358505249, 0.8236692547798157, 0.826310932636261, 0.8347642421722412, 0.8418967127799988, 0.8352925777435303, 0.8467837572097778, 0.8441421389579773, 0.8459912538528442, 0.8518029451370239, 0.8535200357437134, 0.8556333184242249, 0.8652753829956055, 0.8557654023170471, 0.8618412613868713, 0.8676528930664062, 0.8617091774940491, 0.8673887252807617], "val_loss": [2.2453689575195312, 2.011106014251709, 1.1305673122406006, 0.8491901159286499, 0.7616980671882629, 0.6943120956420898, 0.656997799873352, 0.6270909309387207, 0.6313043832778931, 0.5876389741897583, 0.560871958732605, 0.5423251390457153, 0.5162338018417358, 0.5143443942070007, 0.5246596932411194, 0.5064325928688049, 0.5011389851570129, 0.503900945186615, 0.49981313943862915, 0.48539063334465027, 0.48934099078178406, 0.47761693596839905, 0.4825822710990906, 0.46266797184944153, 0.4594466984272003, 0.45199236273765564, 0.4547095000743866, 0.45949918031692505, 0.45085158944129944, 0.4377001225948334, 0.4355542063713074, 0.42951807379722595, 0.4303237199783325, 0.4063799977302551, 0.3982661962509155, 0.4027150571346283, 0.3932162821292877, 0.40102970600128174, 0.39977896213531494, 0.39011096954345703, 0.3931310176849365, 0.3821517825126648, 0.3823659121990204, 0.3900825083255768, 0.3844302296638489, 0.382955938577652, 0.39648881554603577, 0.40562674403190613], "val_accuracy": [0.39666667580604553, 0.44999998807907104, 0.6399999856948853, 0.6913333535194397, 0.7176666855812073, 0.7223333120346069, 0.7450000047683716, 0.7586666941642761, 0.7620000243186951, 0.7739999890327454, 0.777999997138977, 0.7803333401679993, 0.7976666688919067, 0.8006666898727417, 0.7943333387374878, 0.8040000200271606, 0.8083333373069763, 0.8050000071525574, 0.8103333115577698, 0.8109999895095825, 0.8146666884422302, 0.8136666417121887, 0.8116666674613953, 0.8270000219345093, 0.8246666789054871, 0.8346666693687439, 0.8326666951179504, 0.8386666774749756, 0.843666672706604, 0.843999981880188, 0.8423333168029785, 0.8500000238418579, 0.8529999852180481, 0.8539999723434448, 0.8586666584014893, 0.8546666502952576, 0.8653333187103271, 0.8619999885559082, 0.8603333234786987, 0.8629999756813049, 0.8663333058357239, 0.8679999709129333, 0.8690000176429749, 0.8679999709129333, 0.8683333396911621, 0.8659999966621399, 0.8650000095367432, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 1, 3, 5, 9, 1], [0, 0, 1, 0, 2, 1, 3, 1], [83, 99, 27, 19], [0, 1, 1, 0, 1, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 94], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 1, 7, 5, 3, 0], [4, 1, 5, 2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 4, 2, 1, 1, 0, 5, 3, 2, 2, 12, 7, 5, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha))), tf.math.subtract(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.negative(alpha))), grad), beta), alpha))", "other_info": {"loss": [14.154108047485352, 2682261760.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.23761722445487976, 0.10157178342342377, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [444.24005126953125, 3.2418010234832764, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 6, 2], [0, 2, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 0], [0, 6, 2], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 4, 2, 2, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [14815577.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18755778670310974, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.611780480416685e+23, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 3, 3, 1, 3, 7, 6, 0, 2, 3, 7, 3, 4, 0, 3, 2, 6, 1, 2, 1, 6, 0, 8, 9], [3, 0, 3, 0, 2, 3, 0, 0, 2, 0, 3, 0, 2, 0, 3, 3, 1, 1], [83, 99, 27, 27, 71, 83, 40, 44], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [4, 1, 2, 4, 7, 2, 5, 1, 3, 9], [0, 3, 3, 4, 5, 2, 0, 2], [0, 43, 7], [0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 3], [5, 0, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 42, 24, 18, 8, 18, 10, 8, 3, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), grad)), tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(grad, alpha)), tf.math.negative(alpha)), tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.pow(tf.math.add(grad, grad), tf.math.add(tf.math.square(tf.math.subtract(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310298204421997, 2.311004161834717, 2.310181140899658, 2.310553550720215, 2.309657335281372, 2.3103349208831787], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09470347315073013, 0.09457138925790787, 0.09325055778026581, 0.09113723784685135], "val_loss": [2.3086435794830322, 2.3086435794830322, 2.3086435794830322, 2.3086435794830322, 2.3086435794830322, 2.3086435794830322], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 8], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 5, 4, 3, 3, 9, 1, 2, 0, 0], [0, 3, 3, 5, 5, 2, 1], [0, 55], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 6, 4], [0, 17], [0, 0, 0], [0, 0, 9], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 19, 12, 7, 2, 5, 3, 2, 1, 3, 3, 0, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.subtract(tf.math.add(grad, tf.math.negative(tf.math.negative(beta))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3097898960113525, 2.30995774269104, 2.310976028442383, 2.3099045753479004, 2.3100619316101074, 2.3101954460144043], "accuracy": [0.08625016361474991, 0.09351472556591034, 0.09179764986038208, 0.09047681838274002, 0.09509972482919693, 0.09298639744520187], "val_loss": [2.309171199798584, 2.309171199798584, 2.309171199798584, 2.309171199798584, 2.309171199798584, 2.309171199798584], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]