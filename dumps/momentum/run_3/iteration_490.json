[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936837673187256, 2.1911537647247314, 1.7759467363357544, 1.3510115146636963, 1.0591785907745361, 0.9001377820968628, 0.8309487104415894, 0.8038688898086548, 0.7544006705284119, 0.715570867061615, 0.7086004614830017, 0.6884510517120361, 0.6428577899932861, 0.6193519234657288, 0.5961244702339172, 0.5774991512298584, 0.574702262878418, 0.5664762854576111, 0.5459645390510559, 0.5517311096191406, 0.5327373147010803, 0.5230225920677185, 0.5092739462852478, 0.4962887167930603, 0.4913652837276459, 0.4932028651237488, 0.4712677299976349, 0.47070997953414917, 0.4652038812637329, 0.4515743553638458, 0.44712454080581665, 0.44175997376441956, 0.43058452010154724, 0.4224066138267517, 0.42032650113105774, 0.4092475473880768, 0.40590614080429077, 0.40888911485671997, 0.3912205994129181, 0.3931904137134552, 0.38725095987319946, 0.38029706478118896, 0.3772735595703125, 0.36912456154823303, 0.34769824147224426, 0.3465927541255951, 0.34849807620048523], "accuracy": [0.12719587981700897, 0.3337736129760742, 0.4411570429801941, 0.5390304923057556, 0.6310923099517822, 0.6654338836669922, 0.6910579800605774, 0.7036058902740479, 0.7046625018119812, 0.726192057132721, 0.7292299270629883, 0.7358341217041016, 0.752740740776062, 0.7597411274909973, 0.7666094303131104, 0.7745344042778015, 0.7821952104568481, 0.7802139520645142, 0.7854973077774048, 0.7828556299209595, 0.7955356240272522, 0.7952714562416077, 0.8067626357078552, 0.8061022162437439, 0.8090080618858337, 0.8088759779930115, 0.819970965385437, 0.8187822103500366, 0.8201030492782593, 0.82683926820755, 0.8252542614936829, 0.8296129703521729, 0.8372738361358643, 0.8304054737091064, 0.8342359066009521, 0.837141752243042, 0.8428213000297546, 0.842028796672821, 0.8470479249954224, 0.8510104417800903, 0.8498216867446899, 0.854708731174469, 0.8524633646011353, 0.8560295701026917, 0.86118084192276, 0.8619733452796936, 0.863029956817627], "val_loss": [2.245846748352051, 2.018860340118408, 1.1435946226119995, 0.874133288860321, 0.7603172063827515, 0.6937987208366394, 0.6736886501312256, 0.6532704830169678, 0.6284789443016052, 0.6121306419372559, 0.5791563391685486, 0.572171151638031, 0.5624635219573975, 0.551744282245636, 0.5423336625099182, 0.523408830165863, 0.5166842341423035, 0.5105526447296143, 0.4955548048019409, 0.48938992619514465, 0.4846312701702118, 0.47344011068344116, 0.4825911819934845, 0.46298307180404663, 0.46086254715919495, 0.4510798454284668, 0.44587281346321106, 0.45764079689979553, 0.4329557716846466, 0.4349740445613861, 0.44233790040016174, 0.4267476797103882, 0.43343502283096313, 0.4236127436161041, 0.42543643712997437, 0.42810651659965515, 0.42317846417427063, 0.41241455078125, 0.42050084471702576, 0.4079189896583557, 0.4049231708049774, 0.41088035702705383, 0.42167019844055176, 0.4085889458656311, 0.4029780626296997, 0.41491925716400146, 0.43490052223205566], "val_accuracy": [0.42399999499320984, 0.47200000286102295, 0.653333306312561, 0.6926666498184204, 0.7206666469573975, 0.7403333187103271, 0.7409999966621399, 0.749666690826416, 0.7590000033378601, 0.7513333559036255, 0.7710000276565552, 0.778333306312561, 0.7786666750907898, 0.7903333306312561, 0.7893333435058594, 0.7963333129882812, 0.8003333210945129, 0.8009999990463257, 0.8083333373069763, 0.8103333115577698, 0.8066666722297668, 0.8136666417121887, 0.8143333196640015, 0.831333339214325, 0.8236666917800903, 0.8326666951179504, 0.8393333554267883, 0.8386666774749756, 0.8453333377838135, 0.8403333425521851, 0.8370000123977661, 0.8429999947547913, 0.8429999947547913, 0.8479999899864197, 0.847000002861023, 0.8500000238418579, 0.8529999852180481, 0.8523333072662354, 0.8486666679382324, 0.8516666889190674, 0.8616666793823242, 0.8636666536331177, 0.8576666712760925, 0.862333357334137, 0.8583333492279053, 0.8569999933242798, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 87], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 1], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1119837824.0, 21470410752.0, 99962101760.0, 274056151040.0, 580030889984.0, 1077159395328.0], "accuracy": [0.10236428678035736, 0.09840179979801178, 0.10091137140989304, 0.10249637067317963, 0.09998679161071777, 0.10130762308835983], "val_loss": [5140505600.0, 41119100928.0, 138770907136.0, 328931901440.0, 642431909888.0, 1110125707264.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 8, 1, 2, 8, 7, 9, 3, 4], [0, 1, 1, 1, 1, 0, 0, 2, 2], [83, 99, 27, 62], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 2, 3, 4, 1, 8, 0, 0, 8, 8, 1, 6, 5, 1, 1], [0, 3, 3, 2, 2, 3, 3, 4, 3, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [1, 4, 4], [45, 58], [0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 6], [1, 6, 6, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 4, 28, 17, 11, 1, 7, 4, 3, 0, 8, 4, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.negative(grad)), beta), tf.math.negative(beta)), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.square(grad)))))), tf.math.subtract(tf.math.subtract(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.divide_no_nan(grad, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 4, 3], [80], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [6, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031742572784424, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 9, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [7, 1, 2], [0, 3, 3, 1], [0], [0, 1, 0, 0, 1, 1, 1], [0, 3, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 7, 3, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1094595584.0, 21581572096.0, 99637493760.0, 273458020352.0, 595085623296.0, 1098428841984.0], "accuracy": [0.10170386731624603, 0.09866596013307571, 0.10606260597705841, 0.10698718577623367, 0.09879804402589798, 0.09919429570436478], "val_loss": [5197843456.0, 41577709568.0, 140318998528.0, 332601819136.0, 649606397952.0, 1122507292672.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]