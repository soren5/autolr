[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930541038513184, 2.188049554824829, 1.7570768594741821, 1.3459635972976685, 1.0799880027770996, 0.9131682515144348, 0.8479064702987671, 0.8211128115653992, 0.7699194550514221, 0.7342273592948914, 0.6924094557762146, 0.6844865083694458, 0.6497941017150879, 0.623812735080719, 0.6041202545166016, 0.6019561886787415, 0.5937243103981018, 0.5697650909423828, 0.5487149357795715, 0.54937344789505, 0.5361617803573608, 0.5210090279579163, 0.503502368927002, 0.5155468583106995, 0.49143335223197937, 0.48252981901168823, 0.4717074930667877, 0.4579634368419647, 0.44981393218040466, 0.4354850649833679, 0.4421021044254303, 0.4164898991584778, 0.42204514145851135, 0.4175710678100586, 0.4007991552352905, 0.40101489424705505, 0.3967045843601227, 0.3888300061225891, 0.378132700920105, 0.37335264682769775, 0.36628609895706177, 0.37367555499076843, 0.35995790362358093, 0.3495340049266815, 0.33716675639152527, 0.33619096875190735, 0.3373011648654938, 0.3333892226219177, 0.32319962978363037, 0.3187198042869568, 0.31946876645088196, 0.3128974139690399, 0.30288976430892944, 0.29914411902427673, 0.296674519777298, 0.29738765954971313, 0.30227383971214294, 0.2883419692516327, 0.28575316071510315, 0.2786463797092438, 0.29162099957466125, 0.28463196754455566, 0.2877843379974365, 0.2765198051929474, 0.2730976939201355, 0.2811582386493683, 0.2923925518989563], "accuracy": [0.1286487877368927, 0.32703739404678345, 0.4449874460697174, 0.5472196340560913, 0.6288469433784485, 0.6634526252746582, 0.6926429867744446, 0.6892088055610657, 0.6959450244903564, 0.7180029153823853, 0.7327961921691895, 0.7326641082763672, 0.7506273984909058, 0.7582882046699524, 0.7633073329925537, 0.7716285586357117, 0.778232753276825, 0.7910447716712952, 0.7927618622779846, 0.7885351777076721, 0.7931581139564514, 0.8103289008140564, 0.8096684813499451, 0.8014793395996094, 0.8115176558494568, 0.8189142942428589, 0.8224804997444153, 0.8256505131721497, 0.8265751004219055, 0.8358209133148193, 0.8367455005645752, 0.8418967127799988, 0.8388587832450867, 0.842028796672821, 0.8473120927810669, 0.8541803956031799, 0.8544445633888245, 0.8553691506385803, 0.8560295701026917, 0.8585391640663147, 0.8648791313171387, 0.8619733452796936, 0.8576145768165588, 0.8684453964233398, 0.8742570281028748, 0.8728041052818298, 0.8679170608520508, 0.8739928603172302, 0.8765024542808533, 0.8790120482444763, 0.8755778670310974, 0.8799365758895874, 0.883238673210144, 0.8862766027450562, 0.8854840993881226, 0.8809932470321655, 0.8800686597824097, 0.8879936337471008, 0.8883898854255676, 0.8911636471748352, 0.8878615498542786, 0.8932769894599915, 0.8873332738876343, 0.889578640460968, 0.8912957310676575, 0.8842953443527222, 0.8835028409957886], "val_loss": [2.2460484504699707, 2.0155727863311768, 1.138556957244873, 0.8927454948425293, 0.7533673644065857, 0.6900013089179993, 0.6678410172462463, 0.6465891599655151, 0.6391252875328064, 0.5911175012588501, 0.5637720823287964, 0.5448594689369202, 0.5288377404212952, 0.5242280960083008, 0.506617546081543, 0.500403642654419, 0.48745983839035034, 0.4806012809276581, 0.48543450236320496, 0.4718673527240753, 0.4692250192165375, 0.47192904353141785, 0.4648692309856415, 0.4534411132335663, 0.4456172287464142, 0.4451589286327362, 0.4444113075733185, 0.44154566526412964, 0.44252312183380127, 0.4383692145347595, 0.4271099865436554, 0.4225841760635376, 0.4127424657344818, 0.41580355167388916, 0.42847201228141785, 0.4242771863937378, 0.4186060428619385, 0.4188096523284912, 0.41408562660217285, 0.42412513494491577, 0.4255039393901825, 0.40913838148117065, 0.41454753279685974, 0.4333617389202118, 0.43086302280426025, 0.4205400347709656, 0.427187979221344, 0.42275381088256836, 0.42655885219573975, 0.4155813753604889, 0.41663721203804016, 0.432407945394516, 0.4559723436832428, 0.4361000955104828, 0.4395221769809723, 0.4418269991874695, 0.44890809059143066, 0.45525410771369934, 0.46250900626182556, 0.476142019033432, 0.4592152535915375, 0.45753389596939087, 0.4615668058395386, 0.46756747364997864, 0.49506551027297974, 0.5076470375061035, 0.4869370460510254], "val_accuracy": [0.4350000023841858, 0.4596666693687439, 0.6473333239555359, 0.6943333148956299, 0.715666651725769, 0.7486666440963745, 0.7453333139419556, 0.7456666827201843, 0.7699999809265137, 0.778333306312561, 0.7853333353996277, 0.7850000262260437, 0.7933333516120911, 0.793666660785675, 0.8033333420753479, 0.8080000281333923, 0.8176666498184204, 0.8173333406448364, 0.8143333196640015, 0.8193333148956299, 0.8270000219345093, 0.8273333311080933, 0.8353333473205566, 0.8383333086967468, 0.843666672706604, 0.8410000205039978, 0.8379999995231628, 0.8373333215713501, 0.8429999947547913, 0.846666693687439, 0.846666693687439, 0.8473333120346069, 0.8526666760444641, 0.8529999852180481, 0.8543333411216736, 0.8539999723434448, 0.8503333330154419, 0.8519999980926514, 0.8546666502952576, 0.8556666374206543, 0.8610000014305115, 0.8550000190734863, 0.8600000143051147, 0.8610000014305115, 0.8606666922569275, 0.862333357334137, 0.8636666536331177, 0.8636666536331177, 0.8610000014305115, 0.8600000143051147, 0.859666645526886, 0.8640000224113464, 0.8690000176429749, 0.8600000143051147, 0.8619999885559082, 0.8613333106040955, 0.8669999837875366, 0.8693333268165588, 0.8686666488647461, 0.8690000176429749, 0.8686666488647461, 0.8736666440963745, 0.8730000257492065, 0.8653333187103271, 0.8636666536331177, 0.859666645526886, 0.8663333058357239]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27, 90], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 2, 1, 5, 8, 7, 9], [0, 2, 3, 3], [0, 59], [0, 0, 0, 1, 1, 1, 1], [0, 0, 3, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 12, 8, 4, 2, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), grad), tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303459644317627, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27, 97], [0, 1, 1, 0, 0, 1], [9, 1, 2], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 6], [0, 41], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 4, 1, 1, 0, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45099134976.0, 6741513732096.0, 115194739032064.0, 803555229302784.0, 3577764665884672.0, 1.170148270538752e+16], "accuracy": [0.09576013684272766, 0.09826971590518951, 0.09681680053472519, 0.10474177449941635, 0.10381719470024109, 0.10117553919553757], "val_loss": [462408744960.0, 24929707753472.0, 267583106318336.0, 1458778662764544.0, 5463447508615168.0, 1.6115477503803392e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 3, 3], [0, 1, 1, 0, 2], [17, 99, 49], [0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 2, 6, 9], [0, 3, 3], [0, 45], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 7, 7, 2, 9, 8, 1, 5, 5, 7, 3, 5, 0, 5, 8, 5, 5, 4, 0, 1, 7, 4, 5, 7, 6, 2, 4, 2, 9], [1, 7, 6, 0, 7, 3, 0, 1, 2, 1, 4, 3, 2, 2], [0, 26, 86, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 8, 5, 3, 2, 2, 1, 1, 1, 43, 29, 14, 4], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(grad))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(grad, sigma), tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(sigma, beta)))))))), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 1, 3, 3, 2, 7, 1, 8, 7, 2, 8, 1, 4, 6, 6, 2, 2, 6, 9], [0, 0, 1, 1, 2, 1, 3, 1, 0, 3, 0, 1, 3, 3, 1, 1, 2], [83, 99, 68, 46, 90], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [53, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 21, 17, 5, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, alpha))), tf.math.sqrt(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, grad)), alpha)))))), alpha), tf.math.divide_no_nan(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]