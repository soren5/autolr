[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936270236968994, 2.1909804344177246, 1.7756348848342896, 1.3712464570999146, 1.0919725894927979, 0.9530455470085144, 0.8566689491271973, 0.8112261295318604, 0.7700939178466797, 0.7442021369934082, 0.7054503560066223, 0.6911733150482178, 0.6438770890235901, 0.6181035041809082, 0.6048730611801147, 0.5945298075675964, 0.5829897522926331, 0.5725811123847961, 0.5603138208389282, 0.543633222579956, 0.5309674143791199, 0.5330841541290283, 0.5170968174934387, 0.5093706250190735, 0.4940841495990753, 0.4914502203464508, 0.46591126918792725, 0.459506094455719, 0.46296682953834534, 0.4506147801876068, 0.4359184801578522, 0.43300649523735046, 0.4232679605484009, 0.4090218245983124, 0.3987109065055847, 0.38959774374961853, 0.3883797824382782, 0.3766161799430847, 0.37608328461647034, 0.3612357974052429, 0.36110198497772217, 0.3493563234806061, 0.3459063470363617, 0.33958005905151367, 0.32973194122314453, 0.3212239146232605, 0.3083607256412506, 0.31573486328125, 0.3133089542388916, 0.3123713731765747, 0.3043949604034424, 0.3146837651729584], "accuracy": [0.12257297337055206, 0.3209615647792816, 0.4375908076763153, 0.5295205116271973, 0.6275261044502258, 0.6482630968093872, 0.6872276067733765, 0.7024171352386475, 0.7025492191314697, 0.7186633348464966, 0.7298903465270996, 0.7349095344543457, 0.7578919529914856, 0.7594769597053528, 0.7745344042778015, 0.7709681391716003, 0.7796856164932251, 0.7798177003860474, 0.7864218950271606, 0.7889314293861389, 0.7940827012062073, 0.8025360107421875, 0.7994980812072754, 0.8034605979919434, 0.8124422430992126, 0.8164047002792358, 0.8260467648506165, 0.8313300609588623, 0.8318583965301514, 0.8329150676727295, 0.8384625315666199, 0.8396512866020203, 0.8404437899589539, 0.8451988101005554, 0.8496896028518677, 0.8510104417800903, 0.8553691506385803, 0.8593316674232483, 0.8560295701026917, 0.8646149635314941, 0.8658037185668945, 0.8689737319946289, 0.8681812286376953, 0.8742570281028748, 0.8735966086387634, 0.8812574148178101, 0.8845595121383667, 0.8842953443527222, 0.882710337638855, 0.8821820020675659, 0.8881257176399231, 0.8792761564254761], "val_loss": [2.2464919090270996, 2.0243613719940186, 1.1487849950790405, 0.8845088481903076, 0.7824530601501465, 0.7271100282669067, 0.6507186889648438, 0.6267014741897583, 0.631199061870575, 0.6069689989089966, 0.5551104545593262, 0.5368000268936157, 0.5156015157699585, 0.5162873268127441, 0.5136984586715698, 0.5036315321922302, 0.4935726821422577, 0.4880811274051666, 0.48775696754455566, 0.46922892332077026, 0.4643208384513855, 0.45724382996559143, 0.4491829574108124, 0.4490269720554352, 0.43989503383636475, 0.437561959028244, 0.43666133284568787, 0.4298892319202423, 0.4225074350833893, 0.42435207962989807, 0.4113503396511078, 0.4056932032108307, 0.4039006233215332, 0.3905506134033203, 0.39750903844833374, 0.3942517638206482, 0.38607820868492126, 0.3775222599506378, 0.37700000405311584, 0.3764978051185608, 0.36590808629989624, 0.3662680387496948, 0.37876105308532715, 0.3807811737060547, 0.3866726756095886, 0.37974435091018677, 0.3755306005477905, 0.37771615386009216, 0.37996530532836914, 0.38900455832481384, 0.3840978145599365, 0.387017160654068], "val_accuracy": [0.4113333225250244, 0.43299999833106995, 0.6556666493415833, 0.6916666626930237, 0.731333315372467, 0.7519999742507935, 0.7559999823570251, 0.7706666588783264, 0.7636666893959045, 0.7789999842643738, 0.7853333353996277, 0.7903333306312561, 0.800000011920929, 0.79666668176651, 0.7956666946411133, 0.7990000247955322, 0.8143333196640015, 0.8149999976158142, 0.8176666498184204, 0.8203333616256714, 0.8286666870117188, 0.8256666660308838, 0.8299999833106995, 0.8339999914169312, 0.8349999785423279, 0.8366666436195374, 0.8346666693687439, 0.840666651725769, 0.8523333072662354, 0.8476666808128357, 0.847000002861023, 0.8503333330154419, 0.8576666712760925, 0.8583333492279053, 0.856333315372467, 0.8550000190734863, 0.8633333444595337, 0.8669999837875366, 0.8683333396911621, 0.8679999709129333, 0.8666666746139526, 0.8676666617393494, 0.8669999837875366, 0.871999979019165, 0.8736666440963745, 0.875, 0.875333309173584, 0.8713333606719971, 0.8666666746139526, 0.8686666488647461, 0.8643333315849304, 0.871999979019165]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 3, 1, 8], [0, 1, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [1, 3, 3], [0], [1, 0, 0, 0, 1, 1, 0], [0, 0, 4, 1], [0, 0, 2], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 5], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 4, 3], [0, 6, 4, 6], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303739070892334, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27, 4], [0, 0, 1, 0, 1, 0, 1], [0, 1, 7, 8], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 41], [0, 0, 0, 1, 1], [0, 1, 0], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 7, 4, 3, 1, 7, 4, 3, 2, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(alpha), grad))", "other_info": {"loss": [2.6331756114959717, 81063788544.0, 9.610581611026786e+33, 2.3155109882354736, 2.3201050758361816, 2.3025851249694824], "accuracy": [0.16682076454162598, 0.09655263274908066, 0.09232597798109055, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777], "val_loss": [25.245025634765625, 2.333495616912842, 2.326171636581421, 2.3072099685668945, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 2, 7, 8, 2, 6, 4, 5, 1, 3, 5, 5, 1, 3, 2], [0, 3, 3, 4, 4, 5, 5, 3, 1, 5, 5, 4], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 28, 16, 12, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), grad), tf.math.subtract(grad, tf.math.multiply(grad, grad))))), tf.math.square(tf.math.square(tf.math.subtract(tf.math.multiply(grad, alpha), tf.math.add(grad, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309696674346924, 2.310462713241577, 2.311100721359253, 2.3105053901672363, 2.309669256210327, 2.3102948665618896], "accuracy": [0.0944393053650856, 0.08545766770839691, 0.09166556596755981, 0.09074098616838455, 0.09166556596755981, 0.09034473448991776], "val_loss": [2.308720111846924, 2.308720111846924, 2.308720111846924, 2.308720111846924, 2.308720111846924, 2.308720111846924], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]