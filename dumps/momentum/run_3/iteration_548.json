[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935667037963867, 2.1895346641540527, 1.7649989128112793, 1.3589000701904297, 1.0795148611068726, 0.9052648544311523, 0.8368702530860901, 0.8110904693603516, 0.7585259675979614, 0.7263837456703186, 0.6878705024719238, 0.6852197051048279, 0.6515301465988159, 0.6327976584434509, 0.6137562990188599, 0.5808952450752258, 0.5766730904579163, 0.5693854093551636, 0.5613679885864258, 0.5421141982078552, 0.5335486531257629, 0.5240100622177124, 0.5292083621025085, 0.5015427470207214, 0.4980538785457611, 0.4922995865345001, 0.4824254810810089, 0.46539193391799927, 0.44893696904182434, 0.44260892271995544, 0.43815332651138306, 0.4270274043083191, 0.42077216506004333, 0.4123420715332031, 0.39869439601898193, 0.39768069982528687, 0.38073238730430603, 0.3770800232887268, 0.3762316405773163, 0.3615294396877289, 0.36542749404907227, 0.3606429696083069, 0.34976375102996826, 0.34383082389831543, 0.3443733751773834, 0.32769936323165894, 0.3236405551433563, 0.31240737438201904, 0.32745808362960815, 0.3035518527030945, 0.30847519636154175, 0.31230226159095764, 0.30313751101493835, 0.294933021068573, 0.2962656021118164, 0.28465789556503296, 0.27674710750579834], "accuracy": [0.13076211512088776, 0.33984941244125366, 0.4476291239261627, 0.54220050573349, 0.6281865239143372, 0.6634526252746582, 0.6915863156318665, 0.7025492191314697, 0.702681303024292, 0.7226257920265198, 0.739400327205658, 0.7380794882774353, 0.763967752456665, 0.7560427784919739, 0.7593448758125305, 0.7775723338127136, 0.7869502305984497, 0.7853652238845825, 0.7878747582435608, 0.7913089394569397, 0.7998943328857422, 0.8012151718139648, 0.7985734939575195, 0.8084797263145447, 0.8125742673873901, 0.813498854637146, 0.819970965385437, 0.8259146809577942, 0.8294808864593506, 0.82683926820755, 0.8360850811004639, 0.8383304476737976, 0.8400475382804871, 0.8417646288871765, 0.8470479249954224, 0.8511425256729126, 0.8588033318519592, 0.8597279191017151, 0.8602562546730042, 0.8601241707801819, 0.8647470474243164, 0.8642187118530273, 0.8650112152099609, 0.8683133125305176, 0.8673887252807617, 0.874389111995697, 0.8745211958885193, 0.878879964351654, 0.8685774803161621, 0.8831065893173218, 0.8803328275680542, 0.8745211958885193, 0.8795403242111206, 0.8805969953536987, 0.8841632604598999, 0.8902390599250793, 0.8877294659614563], "val_loss": [2.247307777404785, 2.0218758583068848, 1.1469184160232544, 0.8757843375205994, 0.7437064051628113, 0.7073943018913269, 0.6735033392906189, 0.6507459878921509, 0.6276060938835144, 0.6083555221557617, 0.585471510887146, 0.561063826084137, 0.5481547713279724, 0.5423388481140137, 0.5256163477897644, 0.509766697883606, 0.5099281668663025, 0.48733097314834595, 0.48744717240333557, 0.4847736358642578, 0.47752365469932556, 0.46963298320770264, 0.4661189019680023, 0.4574011564254761, 0.4546830356121063, 0.4505250155925751, 0.44567248225212097, 0.441192626953125, 0.4326739013195038, 0.4221532344818115, 0.4131990671157837, 0.41114750504493713, 0.4086082875728607, 0.4010836184024811, 0.40280744433403015, 0.40391308069229126, 0.3898772895336151, 0.3860434591770172, 0.40515679121017456, 0.40563899278640747, 0.3951309323310852, 0.39282846450805664, 0.39963144063949585, 0.39633411169052124, 0.3999510407447815, 0.41285011172294617, 0.4038267433643341, 0.3905487060546875, 0.3859200179576874, 0.41258805990219116, 0.39998766779899597, 0.38281989097595215, 0.38843706250190735, 0.410228431224823, 0.41613689064979553, 0.3992692828178406, 0.41602933406829834], "val_accuracy": [0.42899999022483826, 0.46166667342185974, 0.6430000066757202, 0.6983333230018616, 0.7210000157356262, 0.7450000047683716, 0.7456666827201843, 0.7616666555404663, 0.7703333497047424, 0.777999997138977, 0.7746666669845581, 0.7883333563804626, 0.8090000152587891, 0.8080000281333923, 0.8059999942779541, 0.8073333501815796, 0.8116666674613953, 0.8173333406448364, 0.8220000267028809, 0.8213333487510681, 0.8220000267028809, 0.8286666870117188, 0.8323333263397217, 0.8413333296775818, 0.843999981880188, 0.8483333587646484, 0.8476666808128357, 0.8420000076293945, 0.8503333330154419, 0.8526666760444641, 0.8550000190734863, 0.8500000238418579, 0.8523333072662354, 0.8600000143051147, 0.8650000095367432, 0.8666666746139526, 0.8653333187103271, 0.8663333058357239, 0.8653333187103271, 0.8633333444595337, 0.8669999837875366, 0.8693333268165588, 0.862666666507721, 0.8669999837875366, 0.8703333139419556, 0.8700000047683716, 0.8666666746139526, 0.8656666874885559, 0.8730000257492065, 0.871666669845581, 0.8700000047683716, 0.875333309173584, 0.8676666617393494, 0.8740000128746033, 0.875333309173584, 0.8733333349227905, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 4, 2, 2, 0, 3, 3, 2, 2, 9, 0, 5, 8, 9, 0, 8], [1, 0, 3, 0, 2, 3, 2, 0, 0, 0], [83, 89, 27, 81, 66, 68, 10], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [66], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [5, 58], [1, 1], [0], [7], [0]], "fitness": -0.3345714211463928, "mapping_values": [1, 30, 20, 10, 7, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(grad))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3684046268463135, 2.3507320880889893, 2.3017990589141846, 2.291365146636963, 2.298163890838623, 2.305290937423706], "accuracy": [0.19416193664073944, 0.1574428677558899, 0.10249637067317963, 0.16034869849681854, 0.11689341068267822, 0.12376172095537186], "val_loss": [2.177428960800171, 2.302720785140991, 2.29150390625, 2.3058621883392334, 2.2309353351593018, 2.3047714233398438], "val_accuracy": [0.32199999690055847, 0.09733333438634872, 0.13199999928474426, 0.12700000405311584, 0.28733333945274353, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 3, 1, 5, 4, 6, 8, 3, 1, 9, 7, 2, 9, 5, 5, 6, 7, 8, 5, 5, 2, 6, 7, 7, 4, 2, 7, 2, 9, 5, 2, 8, 1], [0, 0, 1, 0, 2, 3, 3, 0, 2, 0, 0, 0, 2, 1, 0, 3, 1, 1, 1, 0, 3, 0], [83, 59, 74, 19, 65, 69, 36, 60, 30, 57, 9, 25, 13], [1, 0, 1, 0, 1, 1], [0, 6, 1], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 59, 37, 22, 13, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(grad), grad), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(grad, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)))), alpha)))), tf.math.square(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 2, 7, 3, 0, 5, 0, 7, 3, 2, 3, 7, 7, 3, 7, 2, 5, 2, 6, 6, 8, 6, 0, 3, 4, 1, 6, 4, 4, 7, 6, 2], [0, 0, 1, 0, 2, 0, 0, 3, 0, 2, 3, 0, 0, 2, 0, 3, 0, 3, 0, 3, 1, 0, 0, 3, 1, 2, 2, 0], [83, 99, 27, 27, 16, 30, 97, 45, 70, 58, 94, 32, 75, 26], [0, 0, 1, 0, 1, 1], [0, 8, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 61, 33, 28, 14, 3, 2, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(grad))), tf.math.add(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.square(grad), grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.add(grad, grad))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4046.86767578125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2843513600.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 1, 2, 3, 6, 6, 4, 7, 4, 7, 6, 0, 4, 8, 8, 1, 9, 9], [0, 3, 1, 0, 2, 2, 2, 3, 2, 2, 3, 1, 1, 0, 3], [83, 19, 27, 8, 96], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [6], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 22, 15, 5, 6, 3, 3, 1, 7, 4, 3, 2, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(grad, grad))), grad), tf.math.sqrt(tf.math.sqrt(grad))), alpha), alpha), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]