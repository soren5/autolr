[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2940096855163574, 2.188978910446167, 1.765010118484497, 1.3621855974197388, 1.0708982944488525, 0.9269051551818848, 0.8480508923530579, 0.8126530051231384, 0.7707347273826599, 0.7316007018089294, 0.7060489058494568, 0.6713269352912903, 0.653656542301178, 0.6272843480110168, 0.61363685131073, 0.612945556640625, 0.5989844799041748, 0.5838187336921692, 0.5786418318748474, 0.5601500868797302, 0.5358889698982239, 0.5367745757102966, 0.5273141860961914, 0.5073435306549072, 0.5201611518859863, 0.4852272570133209, 0.4915834069252014, 0.47552695870399475, 0.47497180104255676, 0.4560602605342865, 0.44229233264923096, 0.4456847310066223, 0.43210506439208984, 0.42487555742263794, 0.40764057636260986, 0.4102419316768646, 0.40062370896339417, 0.39902326464653015, 0.3848358690738678, 0.38626185059547424, 0.37655109167099, 0.38284972310066223, 0.368060439825058, 0.37138229608535767, 0.3616226315498352], "accuracy": [0.12376172095537186, 0.33047154545783997, 0.445779949426651, 0.5396909117698669, 0.6302998065948486, 0.6568484902381897, 0.6929071545600891, 0.6933034062385559, 0.7021529674530029, 0.7239466309547424, 0.7325320243835449, 0.7321357727050781, 0.7530049085617065, 0.7555144429206848, 0.759609043598175, 0.7733456492424011, 0.7740060687065125, 0.7807422876358032, 0.7820631265640259, 0.789988100528717, 0.7950072884559631, 0.7965922355651855, 0.7984414100646973, 0.8041210174560547, 0.8029322624206543, 0.8189142942428589, 0.8113855719566345, 0.8153480291366577, 0.8128384351730347, 0.8240655064582825, 0.8280280232429504, 0.8329150676727295, 0.8327829837799072, 0.8359529972076416, 0.8424250483512878, 0.8442742228507996, 0.8455950617790222, 0.8461233377456665, 0.8453308939933777, 0.8541803956031799, 0.8536521196365356, 0.8492933511734009, 0.8590674996376038, 0.8521991968154907, 0.8584070801734924], "val_loss": [2.245551109313965, 2.0179202556610107, 1.135656714439392, 0.8821399807929993, 0.7535926103591919, 0.7160479426383972, 0.6586260199546814, 0.6551681756973267, 0.6361389756202698, 0.6183804273605347, 0.5803137421607971, 0.5607612729072571, 0.5644111037254333, 0.5408623814582825, 0.5259943008422852, 0.5263453722000122, 0.5096331238746643, 0.5046135187149048, 0.49623218178749084, 0.48844411969184875, 0.48498591780662537, 0.4860678017139435, 0.46160539984703064, 0.45833373069763184, 0.4509426951408386, 0.4433254897594452, 0.44574034214019775, 0.44008350372314453, 0.4375627338886261, 0.4249548316001892, 0.42655932903289795, 0.4245733916759491, 0.4166693389415741, 0.414635568857193, 0.40782347321510315, 0.4050725996494293, 0.4177319407463074, 0.4255349934101105, 0.41455769538879395, 0.4122685492038727, 0.4102700650691986, 0.4207494854927063, 0.42632144689559937, 0.4263787865638733, 0.4078321158885956], "val_accuracy": [0.4183333218097687, 0.48100000619888306, 0.6463333368301392, 0.6840000152587891, 0.7196666598320007, 0.7366666793823242, 0.7396666407585144, 0.7390000224113464, 0.7556666731834412, 0.7703333497047424, 0.7806666493415833, 0.7836666703224182, 0.7803333401679993, 0.7963333129882812, 0.793666660785675, 0.7956666946411133, 0.8026666641235352, 0.809333324432373, 0.8069999814033508, 0.8059999942779541, 0.8073333501815796, 0.8109999895095825, 0.8253333568572998, 0.8270000219345093, 0.8270000219345093, 0.8349999785423279, 0.8286666870117188, 0.8330000042915344, 0.8460000157356262, 0.843666672706604, 0.843999981880188, 0.8429999947547913, 0.8513333201408386, 0.8496666550636292, 0.8510000109672546, 0.8533333539962769, 0.8519999980926514, 0.8510000109672546, 0.8533333539962769, 0.8583333492279053, 0.8526666760444641, 0.8500000238418579, 0.8533333539962769, 0.8503333330154419, 0.8573333621025085]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 3, 1, 9], [0, 0, 1, 0, 1], [83, 99, 75], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 4, 7], [0, 3, 3, 0, 1], [0, 15], [0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 4, 3], [0, 0, 4, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 5, 5, 2, 8, 4, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(grad, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031694889068604, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 1, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 7, 6, 4, 6, 0, 3, 8], [5, 0, 4, 0, 7, 0, 0], [0, 58, 24, 9], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.322500228881836, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.450892925262451, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 10, 5, 5, 1, 6, 3, 3, 1, 17, 10, 7, 4, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 5, 3, 5, 4, 6, 3, 5, 3, 8, 1, 6, 5, 7, 1, 1, 0], [1, 0, 1, 0, 2, 0, 0, 3, 1, 2, 3, 3, 2], [83, 99, 27, 89], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [2, 1, 2, 3, 0, 9, 9], [0, 3, 3], [96, 18, 20], [0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 4, 3], [0, 0, 4, 7], [0, 58], [0, 0], [0, 9], [1], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 32, 19, 13, 4, 10, 7, 3, 3, 8, 4, 4, 2, 2, 2, 0, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, tf.math.subtract(tf.math.subtract(alpha, tf.math.negative(grad)), grad))), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309603214263916, 2.30964732170105, 2.3094143867492676, 2.3099586963653564, 2.307701349258423, 2.310213327407837], "accuracy": [0.09232597798109055, 0.08770307898521423, 0.09153348207473755, 0.09576013684272766, 0.09509972482919693, 0.09232597798109055], "val_loss": [2.3084592819213867, 2.3084592819213867, 2.3084592819213867, 2.3084592819213867, 2.3084592819213867, 2.3084592819213867], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 4, 6, 1], [0, 0, 1, 0, 2, 1, 3, 2], [83, 99, 38], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 2, 4, 7, 1, 1, 5, 2, 4, 9, 8, 4, 1], [0, 4, 3, 3, 0, 1, 3, 0, 5, 0], [0, 87, 58, 73, 4], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 16, 8, 8, 3, 24, 14, 10, 5, 7, 4, 3, 2, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(grad, alpha), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, grad), tf.math.add(tf.math.subtract(tf.math.subtract(grad, tf.math.square(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)))), grad), tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310739040374756, 2.311574697494507, 2.3105928897857666, 2.3098676204681396, 2.3107190132141113, 2.3103506565093994], "accuracy": [0.09311848133802414, 0.08849557489156723, 0.09166556596755981, 0.09338264167308807, 0.09628847241401672, 0.09153348207473755], "val_loss": [2.308650016784668, 2.308650016784668, 2.308650016784668, 2.308650016784668, 2.308650016784668, 2.308650016784668], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]