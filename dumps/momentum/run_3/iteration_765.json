[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939651012420654, 2.1918046474456787, 1.7889355421066284, 1.3747200965881348, 1.09050452709198, 0.9553646445274353, 0.8827673196792603, 0.8338267803192139, 0.7846543192863464, 0.7644572257995605, 0.7117964029312134, 0.6939200758934021, 0.6643410921096802, 0.641804575920105, 0.6168879270553589, 0.5966495871543884, 0.5894566774368286, 0.5729976296424866, 0.5669513940811157, 0.5567609667778015, 0.5616057515144348, 0.550614058971405, 0.5186361074447632, 0.5081738829612732, 0.49931764602661133, 0.48844727873802185, 0.47717708349227905, 0.46613556146621704, 0.4592016339302063, 0.43911075592041016, 0.43061625957489014, 0.4292086958885193, 0.42432692646980286, 0.4150586426258087, 0.4136783182621002, 0.4015239477157593, 0.3992772102355957, 0.3937716484069824], "accuracy": [0.1270637959241867, 0.3234711289405823, 0.4204200208187103, 0.5352001190185547, 0.6223748326301575, 0.6536785364151001, 0.6794346570968628, 0.6907938122749329, 0.6997754573822021, 0.7065116763114929, 0.7285695672035217, 0.7289658188819885, 0.744419515132904, 0.7578919529914856, 0.7588165402412415, 0.7741381525993347, 0.7796856164932251, 0.7815347909927368, 0.7886672616004944, 0.7895918488502502, 0.7837802171707153, 0.7898560166358948, 0.7985734939575195, 0.8042530417442322, 0.8045172095298767, 0.8132346868515015, 0.8107251524925232, 0.819970965385437, 0.8244617581367493, 0.8318583965301514, 0.834632158279419, 0.8342359066009521, 0.8389908671379089, 0.8389908671379089, 0.8376700282096863, 0.8446704745292664, 0.8467837572097778, 0.8485008478164673], "val_loss": [2.247225046157837, 2.0279691219329834, 1.1759822368621826, 0.865327775478363, 0.7702937722206116, 0.7137320041656494, 0.6503719687461853, 0.6340193748474121, 0.6334081292152405, 0.617792546749115, 0.5864829421043396, 0.5519237518310547, 0.5431966781616211, 0.5245983600616455, 0.5194576978683472, 0.5055487155914307, 0.4883771240711212, 0.47866183519363403, 0.48465314507484436, 0.4733482301235199, 0.46736857295036316, 0.45568832755088806, 0.4425547420978546, 0.4482315182685852, 0.42844220995903015, 0.428556889295578, 0.4335646629333496, 0.4183363914489746, 0.4140750467777252, 0.40930140018463135, 0.4025783836841583, 0.4109056293964386, 0.4019767940044403, 0.40254491567611694, 0.3965919613838196, 0.3998156785964966, 0.39604875445365906, 0.39095571637153625], "val_accuracy": [0.38366666436195374, 0.43066665530204773, 0.6293333172798157, 0.6919999718666077, 0.7236666679382324, 0.7386666536331177, 0.7450000047683716, 0.7509999871253967, 0.7580000162124634, 0.7633333206176758, 0.7616666555404663, 0.7866666913032532, 0.7889999747276306, 0.8046666383743286, 0.8063333630561829, 0.8056666851043701, 0.8149999976158142, 0.8186666369438171, 0.8076666593551636, 0.8226666450500488, 0.8253333568572998, 0.8299999833106995, 0.8330000042915344, 0.8366666436195374, 0.8416666388511658, 0.840666651725769, 0.8373333215713501, 0.8493333458900452, 0.8479999899864197, 0.8566666841506958, 0.8579999804496765, 0.856333315372467, 0.8616666793823242, 0.8576666712760925, 0.8606666922569275, 0.8529999852180481, 0.8566666841506958, 0.859000027179718]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 3], [0, 0, 1, 3, 2, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 1, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 8], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10257142782211304, "mapping_values": [1, 12, 6, 6, 3, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3107197284698486, 2.3094100952148438, 2.3092925548553467, 2.308785915374756, 2.309185028076172, 2.306771993637085, 2.306241512298584, 2.3065056800842285, 2.3055849075317383, 2.3053500652313232, 2.3043124675750732, 2.302821159362793, 2.302931785583496, 2.302145481109619, 2.302806854248047, 2.301971197128296, 2.3021655082702637, 2.302070379257202, 2.302241325378418, 2.3017125129699707], "accuracy": [0.09074098616838455, 0.09457138925790787, 0.0940430611371994, 0.08849557489156723, 0.09232597798109055, 0.09325055778026581, 0.09668471664190292, 0.09338264167308807, 0.09932637959718704, 0.09734513610601425, 0.09708096832036972, 0.09708096832036972, 0.09893012791872025, 0.09959053993225098, 0.0944393053650856, 0.10130762308835983, 0.10276053100824356, 0.09800554811954498, 0.09457138925790787, 0.09298639744520187], "val_loss": [2.3085849285125732, 2.3083555698394775, 2.3079841136932373, 2.307488203048706, 2.3068923950195312, 2.306234121322632, 2.305567502975464, 2.3048887252807617, 2.3042454719543457, 2.3036141395568848, 2.303013324737549, 2.3025543689727783, 2.3022234439849854, 2.3020248413085938, 2.30192494392395, 2.301887273788452, 2.301865339279175, 2.301837921142578, 2.3018460273742676, 2.3018863201141357], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09099999815225601, 0.09000000357627869, 0.09133332967758179, 0.09233333170413971, 0.09399999678134918, 0.09399999678134918, 0.09733333438634872, 0.09733333438634872, 0.0976666659116745, 0.10133333504199982, 0.10633333027362823, 0.10633333027362823, 0.1080000028014183, 0.10633333027362823, 0.10466666519641876, 0.10566666722297668, 0.09866666793823242, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 3, 2, 2, 9, 7, 3], [0, 0, 1, 0, 2, 0, 1, 1], [83, 99, 57, 7, 8], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 0, 3], [0, 2], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 64], [1, 0], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 5, 6, 3, 3, 2, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [7, 1, 3, 1, 3, 8, 8, 9], [0, 0, 1, 0, 1], [83, 99, 10, 35], [0, 0, 1, 0, 1, 1], [0, 6, 2], [0, 1, 3], [0], [0, 0, 1, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038432598114014, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 8], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 2, 6, 2, 6, 7, 6, 5, 6, 4, 7, 1, 1, 0, 2, 2, 6, 5, 5, 7, 2, 4, 4, 2], [0, 3, 3, 3, 3, 2, 0, 2, 5, 3, 5, 4, 3, 4, 1, 4, 1, 5, 0, 5, 1], [30, 42, 30], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 3, 2], [0, 0, 4, 7], [0, 58], [0, 0, 0, 0, 1, 0, 1], [0, 2, 3, 9, 5], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 46, 25, 21, 3, 9, 5, 4, 2, 7, 5, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.divide_no_nan(grad, grad)), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(grad, tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.square(grad)), grad))), grad)), alpha), tf.math.add(tf.math.add(grad, alpha), tf.math.pow(grad, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]