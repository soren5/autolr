[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [2, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [4, 7, 4, 3, 6, 5, 9, 1, 5, 4, 7, 4, 9], [0, 0, 4, 0, 2, 7, 3, 5], [0, 58, 71, 87, 96], [0, 1], [0], [1], [0]], "fitness": -0.842285692691803, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 0, 21, 13, 8, 5, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(beta, tf.math.add(tf.math.pow(grad, sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.290958881378174, 2.169367551803589, 1.6735272407531738, 1.331296443939209, 1.002920389175415, 0.8959168791770935, 0.8319738507270813, 0.7863718271255493, 0.7419204711914062, 0.7077105045318604, 0.6616738438606262, 0.6419781446456909, 0.6416757702827454, 0.5993738174438477, 0.582449197769165, 0.5727729797363281, 0.5853873491287231, 0.550851583480835, 0.5514037609100342, 0.5535376667976379, 0.5287524461746216, 0.517035186290741, 0.5049540996551514, 0.5006928443908691, 0.49222344160079956, 0.47791236639022827, 0.47299614548683167, 0.4631105363368988, 0.4535643756389618, 0.4528936743736267, 0.447379469871521, 0.4407714009284973, 0.42413806915283203], "accuracy": [0.1306300312280655, 0.3440760672092438, 0.45489367842674255, 0.5650508403778076, 0.6483951807022095, 0.6716417670249939, 0.6917183995246887, 0.7021529674530029, 0.7055870890617371, 0.7275128960609436, 0.7390040755271912, 0.7454761862754822, 0.754589855670929, 0.7622507214546204, 0.7757231593132019, 0.7784969210624695, 0.7658169269561768, 0.7844406366348267, 0.7922335267066956, 0.7902522683143616, 0.796328067779541, 0.7998943328857422, 0.807158887386322, 0.8033285140991211, 0.8121780753135681, 0.8195747137069702, 0.819442629814148, 0.8158763647079468, 0.82683926820755, 0.8235371708869934, 0.8245938420295715, 0.8259146809577942, 0.8310658931732178], "val_loss": [2.240396499633789, 1.9536741971969604, 1.0296076536178589, 0.8452925086021423, 0.8244270086288452, 0.6927411556243896, 0.6660464406013489, 0.6534428000450134, 0.6415315866470337, 0.605434775352478, 0.5906269550323486, 0.5641852021217346, 0.5559089779853821, 0.5530461668968201, 0.5431088209152222, 0.5218819975852966, 0.5303200483322144, 0.5269636511802673, 0.5262709259986877, 0.5132399797439575, 0.5121150016784668, 0.5079808235168457, 0.5057499408721924, 0.5026267766952515, 0.4899556338787079, 0.4777146875858307, 0.48253703117370605, 0.4679167866706848, 0.47167402505874634, 0.47718343138694763, 0.47177615761756897, 0.47339269518852234, 0.46198680996894836], "val_accuracy": [0.43700000643730164, 0.4583333432674408, 0.6466666460037231, 0.690666675567627, 0.7106666564941406, 0.7289999723434448, 0.7436666488647461, 0.7576666474342346, 0.765999972820282, 0.762333333492279, 0.7736666798591614, 0.7846666574478149, 0.7960000038146973, 0.7976666688919067, 0.7986666560173035, 0.8040000200271606, 0.8040000200271606, 0.8043333292007446, 0.8146666884422302, 0.8213333487510681, 0.8133333325386047, 0.828000009059906, 0.8270000219345093, 0.8173333406448364, 0.8259999752044678, 0.8363333344459534, 0.8349999785423279, 0.8479999899864197, 0.8429999947547913, 0.8399999737739563, 0.843666672706604, 0.8446666598320007, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939560413360596, 2.192012310028076, 1.7832645177841187, 1.3442254066467285, 1.0664381980895996, 0.9140321612358093, 0.8455097675323486, 0.8282458186149597, 0.7839493751525879, 0.7482473850250244, 0.7122337818145752, 0.6910329461097717, 0.6512223482131958, 0.628878653049469, 0.602362334728241, 0.6059795022010803, 0.5850932002067566, 0.576187014579773, 0.5621185302734375, 0.5411068797111511, 0.5387119650840759, 0.5228305459022522, 0.5104241371154785, 0.5032622814178467, 0.49311763048171997, 0.48228663206100464, 0.4735359251499176, 0.45990192890167236, 0.4620961844921112, 0.44466671347618103, 0.42984580993652344, 0.43224287033081055, 0.4272432029247284, 0.41813746094703674, 0.40537023544311523, 0.3963877856731415, 0.3971317708492279, 0.3795427978038788, 0.37054526805877686, 0.3742106556892395, 0.370355486869812, 0.3714205324649811], "accuracy": [0.12640337646007538, 0.33007529377937317, 0.4373266398906708, 0.5445780158042908, 0.6336019039154053, 0.6593580842018127, 0.6976621150970459, 0.6977941989898682, 0.6960771083831787, 0.7195879220962524, 0.7285695672035217, 0.7300224304199219, 0.7539294958114624, 0.7584202885627747, 0.7660810947418213, 0.7700436115264893, 0.7791573405265808, 0.7825914621353149, 0.7852331399917603, 0.7951393723487854, 0.7923656105995178, 0.7964601516723633, 0.8012151718139648, 0.8075551390647888, 0.8068947196006775, 0.8170651197433472, 0.8208954930305481, 0.8274996876716614, 0.8256505131721497, 0.83119797706604, 0.8305375576019287, 0.8348963260650635, 0.839519202709198, 0.8404437899589539, 0.8451988101005554, 0.8429533839225769, 0.846387505531311, 0.8539162874221802, 0.8548408150672913, 0.8541803956031799, 0.8625016212463379, 0.8599920868873596], "val_loss": [2.246448516845703, 2.02553391456604, 1.145040512084961, 0.860293447971344, 0.7507991790771484, 0.7000874876976013, 0.662672758102417, 0.6531517505645752, 0.6307855844497681, 0.6202846765518188, 0.5716699361801147, 0.5633391737937927, 0.544651448726654, 0.5283722877502441, 0.5085363984107971, 0.4958457350730896, 0.49827340245246887, 0.49670955538749695, 0.48425495624542236, 0.48228776454925537, 0.47685909271240234, 0.4642987549304962, 0.46257975697517395, 0.450009286403656, 0.442335844039917, 0.4416748583316803, 0.4377298057079315, 0.42240259051322937, 0.42064085602760315, 0.4207516312599182, 0.4078899323940277, 0.3991495370864868, 0.4064834713935852, 0.3982279598712921, 0.38854002952575684, 0.39217883348464966, 0.3896053731441498, 0.3801405727863312, 0.37821459770202637, 0.38410237431526184, 0.39394280314445496, 0.3909260332584381], "val_accuracy": [0.4189999997615814, 0.4740000069141388, 0.6506666541099548, 0.6983333230018616, 0.7149999737739563, 0.7416666746139526, 0.7476666569709778, 0.7386666536331177, 0.7616666555404663, 0.7583333253860474, 0.7570000290870667, 0.7609999775886536, 0.7863333225250244, 0.79666668176651, 0.7979999780654907, 0.8003333210945129, 0.8023333549499512, 0.8083333373069763, 0.8076666593551636, 0.8116666674613953, 0.809333324432373, 0.8270000219345093, 0.8223333358764648, 0.8180000185966492, 0.82833331823349, 0.8326666951179504, 0.8426666855812073, 0.8496666550636292, 0.8516666889190674, 0.8473333120346069, 0.846666693687439, 0.8553333282470703, 0.8546666502952576, 0.8566666841506958, 0.859666645526886, 0.8573333621025085, 0.8673333525657654, 0.8646666407585144, 0.8659999966621399, 0.8646666407585144, 0.8663333058357239, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 2, 3, 7, 5, 5, 9, 0, 2, 7, 3, 6, 0], [0, 3, 3, 3, 2, 0, 1, 5], [0, 33, 2], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 7, 3, 8, 7, 4, 6], [0, 0, 4, 6, 7, 0], [0, 58, 37], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 22, 14, 8, 3, 14, 8, 6, 3, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.add(grad, tf.math.square(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(grad, beta), tf.math.multiply(tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha), tf.math.negative(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46432382976.0, 6836022411264.0, 117488754884608.0, 830441523249152.0, 3678575869820928.0, 1.200366586691584e+16], "accuracy": [0.0956280529499054, 0.09932637959718704, 0.09642054885625839, 0.10355303436517715, 0.09549596905708313, 0.09813763201236725], "val_loss": [482836250624.0, 26031993913344.0, 279413509849088.0, 1523336853061632.0, 5707117109444608.0, 1.6834458250379264e+16], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 4, 3, 3, 0, 3, 5], [0, 0, 4, 4, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 13, 8, 5, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(grad), tf.math.multiply(grad, tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031005859375, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 1, 2, 2, 9, 6, 1, 2, 6, 0, 3, 5, 1, 2, 2, 5, 5, 3], [0, 0, 1, 0, 2, 0, 3, 2, 2, 2, 2, 1, 1, 2], [91, 27, 36, 11, 84], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3, 1, 7, 5, 9], [0, 0, 4, 1], [36, 58, 9], [1, 1], [0], [1], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 34, 20, 14, 5, 1, 0, 1, 1, 12, 8, 4, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.math.subtract(grad, grad)), tf.math.add(tf.math.add(tf.math.square(grad), grad), alpha)))), tf.math.square(tf.math.multiply(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3104407787323, 2.3090646266937256, 2.309554100036621, 2.309795618057251, 2.3100485801696777, 2.3088507652282715], "accuracy": [0.09536388516426086, 0.09113723784685135, 0.09549596905708313, 0.08968432247638702, 0.09509972482919693, 0.0874389111995697], "val_loss": [2.309396743774414, 2.309396743774414, 2.309396743774414, 2.309396743774414, 2.309396743774414, 2.309396743774414], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]