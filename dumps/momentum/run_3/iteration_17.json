[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943387031555176, 2.1915125846862793, 1.7741496562957764, 1.3209806680679321, 1.0730174779891968, 0.9101482629776001, 0.830523669719696, 0.7813759446144104, 0.7623337507247925, 0.7363372445106506, 0.6962016224861145, 0.6554288864135742, 0.647777259349823, 0.6273936629295349, 0.616849422454834, 0.6056644916534424, 0.5878307819366455, 0.5878937244415283, 0.5578186511993408, 0.568924069404602, 0.5378961563110352, 0.5385779142379761, 0.5224614143371582, 0.5239299535751343, 0.5058999061584473, 0.4979455769062042, 0.48611578345298767, 0.48024100065231323, 0.46804583072662354, 0.45523324608802795, 0.45448166131973267, 0.4394960105419159, 0.4307194948196411, 0.43042176961898804, 0.4359692633152008, 0.4215449392795563, 0.41436654329299927, 0.4002538323402405, 0.4127746522426605, 0.4013531804084778, 0.39340871572494507, 0.3845006823539734, 0.3822396695613861, 0.38247111439704895, 0.35990259051322937, 0.35703107714653015, 0.36499667167663574, 0.3618542551994324, 0.36999446153640747, 0.34711065888404846, 0.34812670946121216, 0.3534882068634033, 0.3403153419494629, 0.3340144157409668], "accuracy": [0.12917712330818176, 0.32941487431526184, 0.44010037183761597, 0.5503896474838257, 0.6365077495574951, 0.6660943031311035, 0.6989829540252686, 0.7132478952407837, 0.7108704447746277, 0.7176066637039185, 0.7367587089538574, 0.7434949278831482, 0.7497028112411499, 0.7617223858833313, 0.7666094303131104, 0.772288978099823, 0.7815347909927368, 0.7746664881706238, 0.7869502305984497, 0.7821952104568481, 0.7922335267066956, 0.7928939461708069, 0.8018755912780762, 0.8013472557067871, 0.8014793395996094, 0.8096684813499451, 0.8173292875289917, 0.8182538747787476, 0.8173292875289917, 0.8271034359931946, 0.8245938420295715, 0.8359529972076416, 0.8348963260650635, 0.837141752243042, 0.8350284099578857, 0.8383304476737976, 0.8426892161369324, 0.8521991968154907, 0.8448025584220886, 0.8457271456718445, 0.8496896028518677, 0.8545766472816467, 0.8537842035293579, 0.8524633646011353, 0.8589354157447815, 0.8593316674232483, 0.8615770936012268, 0.8639545440673828, 0.8537842035293579, 0.8636903762817383, 0.8614450097084045, 0.8650112152099609, 0.8644828796386719, 0.8702945709228516], "val_loss": [2.245863437652588, 2.024540424346924, 1.1221238374710083, 0.8614134192466736, 0.7602570056915283, 0.7221987247467041, 0.6745585203170776, 0.6816837787628174, 0.6419760584831238, 0.6339482665061951, 0.5841988325119019, 0.5680888891220093, 0.5573946833610535, 0.5345464944839478, 0.5235341787338257, 0.5227691531181335, 0.5185906291007996, 0.5051727890968323, 0.5063689947128296, 0.49271005392074585, 0.5032866597175598, 0.493025541305542, 0.49203768372535706, 0.4788620173931122, 0.46258196234703064, 0.45804598927497864, 0.46282461285591125, 0.45864883065223694, 0.4384172260761261, 0.4390996992588043, 0.4306022822856903, 0.4290199875831604, 0.4362034499645233, 0.4455976188182831, 0.44008511304855347, 0.43133285641670227, 0.43484410643577576, 0.4305063486099243, 0.4268089234828949, 0.4230079650878906, 0.42575663328170776, 0.42327481508255005, 0.424775630235672, 0.41568994522094727, 0.40886780619621277, 0.4140435457229614, 0.44143328070640564, 0.4432295262813568, 0.416635662317276, 0.4172598421573639, 0.41609126329421997, 0.42244455218315125, 0.42273542284965515, 0.4343881905078888], "val_accuracy": [0.4336666762828827, 0.48899999260902405, 0.6516666412353516, 0.7043333053588867, 0.7166666388511658, 0.734333336353302, 0.7436666488647461, 0.7516666650772095, 0.7393333315849304, 0.7586666941642761, 0.7773333191871643, 0.7839999794960022, 0.7903333306312561, 0.8046666383743286, 0.8106666803359985, 0.7983333468437195, 0.8069999814033508, 0.812666654586792, 0.8146666884422302, 0.8199999928474426, 0.8236666917800903, 0.8206666707992554, 0.8180000185966492, 0.8320000171661377, 0.8420000076293945, 0.8289999961853027, 0.8389999866485596, 0.8346666693687439, 0.840666651725769, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.8493333458900452, 0.8513333201408386, 0.8510000109672546, 0.8546666502952576, 0.8583333492279053, 0.8529999852180481, 0.8586666584014893, 0.8556666374206543, 0.859666645526886, 0.859666645526886, 0.8603333234786987, 0.8579999804496765, 0.8629999756813049, 0.8616666793823242, 0.8633333444595337, 0.8606666922569275, 0.8640000224113464, 0.859000027179718, 0.859333336353302, 0.8550000190734863, 0.859666645526886, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935543060302734, 2.1932032108306885, 1.787300705909729, 1.331296443939209, 1.0763274431228638, 0.9190895557403564, 0.8408000469207764, 0.8184582591056824, 0.7632118463516235, 0.7481409311294556, 0.7139740586280823, 0.6944115161895752, 0.6478158831596375, 0.6258840560913086, 0.6181622743606567, 0.6046652793884277, 0.5855770707130432, 0.5787058472633362, 0.552884042263031, 0.541661262512207, 0.5425739884376526, 0.5291154384613037, 0.5127121806144714, 0.5180442333221436, 0.49232369661331177, 0.4908343255519867, 0.4785916805267334, 0.4671414792537689, 0.4768006205558777, 0.4491754174232483, 0.4484255015850067, 0.4477680027484894, 0.435446560382843, 0.43173307180404663, 0.40776926279067993, 0.4186587333679199, 0.41782915592193604, 0.41152268648147583, 0.39261576533317566, 0.3913915455341339, 0.384293794631958, 0.37511739134788513, 0.38659265637397766, 0.37049487233161926, 0.35983598232269287, 0.36257848143577576, 0.3482503890991211], "accuracy": [0.1274600476026535, 0.3241315484046936, 0.4375908076763153, 0.5408796668052673, 0.6343944072723389, 0.6711134314537048, 0.6995112895965576, 0.7059833407402039, 0.7045304179191589, 0.7197200059890747, 0.7322678565979004, 0.7409853339195251, 0.757099449634552, 0.7684586048126221, 0.7621186375617981, 0.76542067527771, 0.7758552432060242, 0.7783648371696472, 0.7886672616004944, 0.7910447716712952, 0.7948752045631409, 0.7947431206703186, 0.8042530417442322, 0.7994980812072754, 0.8105930685997009, 0.8208954930305481, 0.8158763647079468, 0.8166688680648804, 0.817989706993103, 0.8310658931732178, 0.8272355198860168, 0.8345000743865967, 0.8362171649932861, 0.841500461101532, 0.8482366800308228, 0.8444063067436218, 0.8475762605667114, 0.848368763923645, 0.8545766472816467, 0.8527275323867798, 0.8532558679580688, 0.8578787446022034, 0.8573504090309143, 0.8639545440673828, 0.86118084192276, 0.8598600029945374, 0.8643507957458496], "val_loss": [2.246560573577881, 2.0292985439300537, 1.1744439601898193, 0.8994861841201782, 0.7487233281135559, 0.7137125134468079, 0.6739408373832703, 0.6714038252830505, 0.657123863697052, 0.6391797065734863, 0.5982184410095215, 0.5755620002746582, 0.5664603114128113, 0.553760826587677, 0.533359169960022, 0.5311790108680725, 0.5187278985977173, 0.5200526118278503, 0.5088194012641907, 0.5015667676925659, 0.4999156594276428, 0.49374234676361084, 0.47530537843704224, 0.46658459305763245, 0.48010891675949097, 0.46610480546951294, 0.4489987790584564, 0.45542454719543457, 0.460672527551651, 0.4506475031375885, 0.44657203555107117, 0.4456324875354767, 0.4424821734428406, 0.44154036045074463, 0.43889549374580383, 0.429837167263031, 0.4311346411705017, 0.40609845519065857, 0.42532458901405334, 0.4224295914173126, 0.4120618999004364, 0.4166492521762848, 0.4335634410381317, 0.43400606513023376, 0.4120018780231476, 0.40002143383026123, 0.41666164994239807], "val_accuracy": [0.43033334612846375, 0.4906666576862335, 0.643666684627533, 0.687666654586792, 0.7246666550636292, 0.7293333411216736, 0.7450000047683716, 0.7366666793823242, 0.7409999966621399, 0.7536666393280029, 0.7563333511352539, 0.7799999713897705, 0.7856666445732117, 0.7879999876022339, 0.7986666560173035, 0.8006666898727417, 0.8026666641235352, 0.8016666769981384, 0.8056666851043701, 0.8133333325386047, 0.8169999718666077, 0.8149999976158142, 0.8140000104904175, 0.8243333101272583, 0.8186666369438171, 0.8309999704360962, 0.8413333296775818, 0.8353333473205566, 0.8433333039283752, 0.8476666808128357, 0.8493333458900452, 0.8453333377838135, 0.8460000157356262, 0.8479999899864197, 0.8456666469573975, 0.8556666374206543, 0.8556666374206543, 0.8600000143051147, 0.8493333458900452, 0.8519999980926514, 0.8579999804496765, 0.8676666617393494, 0.8616666793823242, 0.8569999933242798, 0.8576666712760925, 0.8586666584014893, 0.8503333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 7, 3, 2], [0, 0, 1, 0, 2, 1], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [6], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 8], [0, 0, 0], [0, 58], [1, 0], [0], [1], [0]], "fitness": -0.3742857277393341, "mapping_values": [1, 12, 6, 6, 3, 1, 0, 1, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.465977430343628, 2.541074514389038, 2.1956751346588135, 2.5025784969329834, 2.304408550262451, 2.3034145832061768, 2.3029723167419434, 2.3029191493988037], "accuracy": [0.20882314443588257, 0.1158367469906807, 0.1810857206583023, 0.1678774207830429, 0.09893012791872025, 0.09932637959718704, 0.09879804402589798, 0.09589222073554993], "val_loss": [2.305415630340576, 2.2983977794647217, 2.1028475761413574, 2.3050811290740967, 2.303162097930908, 2.30283784866333, 2.3026492595672607, 2.3025972843170166], "val_accuracy": [0.1679999977350235, 0.11866666376590729, 0.3700000047683716, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0963333323597908, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 1, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303645372390747, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [6, 1, 3, 1, 3, 0, 0], [0, 0, 1, 0, 2, 0], [83, 99, 27, 68], [0, 0, 0, 0, 1, 1, 1], [0, 1, 2, 0], [1, 1, 0], [0], [1, 0, 0, 0, 1, 1, 0], [0, 6, 4, 3], [3, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 4, 7, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(alpha), alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.329954147338867, 2.590176820755005, 1101858760294400.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.07053229212760925, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3905036449432373, 3.6355507373809814, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09166666865348816, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 3, 0, 2], [83, 16, 27], [0, 1, 1, 0, 1, 0], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 5], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]