[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292354106903076, 2.189476490020752, 1.7664122581481934, 1.318898320198059, 1.0601483583450317, 0.893334686756134, 0.8326712250709534, 0.7928904294967651, 0.7585050463676453, 0.7181518077850342, 0.6910505294799805, 0.6783207058906555, 0.6299958229064941, 0.624430775642395, 0.5947037935256958, 0.5942931771278381, 0.5797107219696045, 0.5674055218696594, 0.5473827123641968, 0.5491811633110046, 0.5395045876502991, 0.519672691822052, 0.5137311816215515, 0.49977973103523254, 0.4924362897872925, 0.4895356297492981, 0.4789780378341675, 0.47095489501953125, 0.4657743573188782, 0.4443732500076294, 0.44292840361595154, 0.4253557026386261, 0.42485329508781433, 0.41210412979125977, 0.4118020236492157, 0.4019750952720642, 0.39574021100997925, 0.3865719735622406, 0.3786918818950653], "accuracy": [0.13247919082641602, 0.32162198424339294, 0.4418174624443054, 0.5527671575546265, 0.6318848133087158, 0.6715096831321716, 0.689869225025177, 0.7029454708099365, 0.6948884129524231, 0.7248712182044983, 0.7325320243835449, 0.7397965788841248, 0.7568352818489075, 0.7534011602401733, 0.7693831920623779, 0.7763835787773132, 0.7769119143486023, 0.7777044177055359, 0.7854973077774048, 0.7849689722061157, 0.7959318161010742, 0.7956677079200745, 0.7931581139564514, 0.8088759779930115, 0.8090080618858337, 0.8108572363853455, 0.8149517774581909, 0.8164047002792358, 0.8189142942428589, 0.82683926820755, 0.8318583965301514, 0.8422929644584656, 0.8364813327789307, 0.8403117060661316, 0.8408400416374207, 0.8462554216384888, 0.8474441766738892, 0.848368763923645, 0.8543124794960022], "val_loss": [2.2460591793060303, 2.014845609664917, 1.136073112487793, 0.8827958703041077, 0.7487345933914185, 0.706672191619873, 0.6744396686553955, 0.6475269198417664, 0.6221304535865784, 0.6068583726882935, 0.5766351222991943, 0.55093914270401, 0.5301333665847778, 0.518173098564148, 0.502544105052948, 0.49547842144966125, 0.49532783031463623, 0.4903457760810852, 0.4746628701686859, 0.47648218274116516, 0.476286917924881, 0.4642094373703003, 0.4643990993499756, 0.45188549160957336, 0.4488772451877594, 0.44207170605659485, 0.4409855008125305, 0.4351194202899933, 0.42934781312942505, 0.41890981793403625, 0.4246339797973633, 0.4128563702106476, 0.40268415212631226, 0.40122291445732117, 0.3980984687805176, 0.39957356452941895, 0.40267205238342285, 0.3951534032821655, 0.39774617552757263], "val_accuracy": [0.40299999713897705, 0.4723333418369293, 0.6439999938011169, 0.6833333373069763, 0.7123333215713501, 0.734000027179718, 0.7463333606719971, 0.7403333187103271, 0.765999972820282, 0.765666663646698, 0.7753333449363708, 0.7896666526794434, 0.8043333292007446, 0.8026666641235352, 0.8090000152587891, 0.8119999766349792, 0.8159999847412109, 0.8100000023841858, 0.8309999704360962, 0.831333339214325, 0.8209999799728394, 0.8289999961853027, 0.8299999833106995, 0.8293333053588867, 0.8360000252723694, 0.8413333296775818, 0.8356666564941406, 0.8460000157356262, 0.8500000238418579, 0.8529999852180481, 0.8539999723434448, 0.8546666502952576, 0.8619999885559082, 0.8646666407585144, 0.8613333106040955, 0.8616666793823242, 0.8556666374206543, 0.8566666841506958, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 3, 2, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 0], [0, 1, 2], [0, 3, 3], [43], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 9], [0, 1, 4], [0, 7], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038277626037598, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 0, 3, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 2, 8, 1, 6, 7, 1, 9, 3], [0, 3, 4, 0, 2, 4, 1], [0, 70, 77], [0, 0, 0, 0, 1, 0, 1], [0, 9, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 17, 10, 7, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302701473236084, 2.6249806880950928, 157.84681701660156, 40232.43359375, 10656997.0, 2680804096.0], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3028295040130615, 7.280430793762207, 1525.1298828125, 389971.96875, 99832824.0, 25557202944.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 3, 1, 3, 9, 1, 5, 8, 9], [0, 0, 1, 1, 2], [83, 34, 27, 52], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 2, 7, 6, 2, 3, 7, 9], [0, 3, 3, 0, 1, 2, 1], [0, 21, 12], [0, 0, 0, 0, 1, 0, 0], [0, 9, 4, 7], [0, 0, 4], [47, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 10, 4, 4, 16, 9, 7, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha), beta), alpha)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3033158779144287, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5, 2, 6, 7, 6, 7, 1, 1, 3, 8, 6, 4, 8, 0, 8, 8, 4, 7, 7, 6, 2, 7, 5, 0, 1, 6, 5], [0, 3, 1, 0, 2, 2, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0, 1, 1, 1, 3, 2, 3], [83, 99, 27, 41, 2], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 2, 7, 5, 2, 9], [0, 3, 3, 5], [0, 27], [0, 1, 0, 0, 1, 1, 1], [0, 2, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 55, 32, 23, 5, 11, 7, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), grad), alpha), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.sqrt(grad)))), tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.subtract(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), alpha), alpha))), alpha)), tf.math.divide_no_nan(grad, grad)), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.add(grad, grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3106770515441895, 2.309992551803589, 2.3099019527435303, 2.311234951019287, 2.309868097305298, 2.3104560375213623], "accuracy": [0.09179764986038208, 0.09140139818191528, 0.0944393053650856, 0.08849557489156723, 0.08928807079792023, 0.0886276587843895], "val_loss": [2.3081722259521484, 2.3081722259521484, 2.3081722259521484, 2.3081722259521484, 2.3081722259521484, 2.3081722259521484], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]