[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2949788570404053, 2.1920528411865234, 1.7815132141113281, 1.3519965410232544, 1.0778359174728394, 0.9391703605651855, 0.8293231129646301, 0.8157223463058472, 0.7570912837982178, 0.740023672580719, 0.6941823363304138, 0.6666772365570068, 0.6465030908584595, 0.6269447207450867, 0.6055448651313782, 0.6029195189476013, 0.5804058909416199, 0.5755333304405212, 0.556013286113739, 0.5516217350959778, 0.5221375226974487, 0.5182226896286011, 0.5161817669868469, 0.5030897259712219, 0.4959908127784729, 0.48571014404296875, 0.4724699556827545, 0.4760224521160126, 0.46270307898521423, 0.45859235525131226, 0.44239088892936707, 0.454202264547348, 0.44264066219329834, 0.42091917991638184, 0.4234970510005951, 0.4114111661911011, 0.4063018560409546, 0.405964195728302, 0.3821961581707001, 0.3865250051021576, 0.38108062744140625, 0.38586392998695374, 0.36943182349205017, 0.3741535544395447, 0.36542007327079773, 0.3623254597187042, 0.3471533954143524, 0.35152119398117065, 0.35282230377197266, 0.33635491132736206, 0.32688871026039124, 0.32638785243034363, 0.3335142135620117, 0.31522107124328613, 0.3183283507823944, 0.3116477429866791, 0.31435397267341614, 0.31289392709732056, 0.3035881221294403, 0.300374835729599, 0.2846519351005554, 0.2977604866027832, 0.29201358556747437, 0.2802249491214752, 0.28510594367980957, 0.28474944829940796], "accuracy": [0.12270505726337433, 0.3295469582080841, 0.4365341365337372, 0.5403513312339783, 0.6324131488800049, 0.6583014130592346, 0.6992471218109131, 0.7025492191314697, 0.7106062769889832, 0.7235503792762756, 0.7327961921691895, 0.7453441023826599, 0.7506273984909058, 0.7637035846710205, 0.7687227725982666, 0.7675340175628662, 0.7861577272415161, 0.7836481332778931, 0.7943468689918518, 0.7862898111343384, 0.8025360107421875, 0.8050455451011658, 0.8047813773155212, 0.81112140417099, 0.8096684813499451, 0.8142913579940796, 0.8197067975997925, 0.8222163319587708, 0.8267071843147278, 0.8261788487434387, 0.833179235458374, 0.8264430165290833, 0.8293488025665283, 0.8370096683502197, 0.8352925777435303, 0.8397833704948425, 0.8417646288871765, 0.8391229510307312, 0.8590674996376038, 0.8494254350662231, 0.8466516733169556, 0.8496896028518677, 0.8618412613868713, 0.8569541573524475, 0.8562937378883362, 0.852331280708313, 0.8640866279602051, 0.8621054291725159, 0.8621054291725159, 0.8685774803161621, 0.8726720213890076, 0.8761062026023865, 0.870030403137207, 0.8772949576377869, 0.8725399374961853, 0.872407853603363, 0.8734645247459412, 0.8779553771018982, 0.8817857503890991, 0.8823140859603882, 0.8838990926742554, 0.886672854423523, 0.8808611631393433, 0.8893144726753235, 0.887597382068634, 0.8874653577804565], "val_loss": [2.2454841136932373, 2.0213847160339355, 1.1408662796020508, 0.85708087682724, 0.7612869739532471, 0.7065498232841492, 0.6782466769218445, 0.6480808854103088, 0.625231921672821, 0.6019561886787415, 0.5611183047294617, 0.5476576685905457, 0.5394599437713623, 0.5323653817176819, 0.527006208896637, 0.5040863156318665, 0.5004431009292603, 0.49438217282295227, 0.4845004975795746, 0.4859476387500763, 0.47055721282958984, 0.46621203422546387, 0.46948444843292236, 0.4690883755683899, 0.456660658121109, 0.4500289261341095, 0.4535502791404724, 0.4457792043685913, 0.4430537223815918, 0.4489424526691437, 0.43948033452033997, 0.43462803959846497, 0.42777684330940247, 0.4279024302959442, 0.4196327328681946, 0.4099971055984497, 0.4094373285770416, 0.40807145833969116, 0.4083598554134369, 0.3982977569103241, 0.3977050483226776, 0.39635998010635376, 0.4120061993598938, 0.41485661268234253, 0.406971275806427, 0.4029533267021179, 0.4031701683998108, 0.3999958038330078, 0.3875254690647125, 0.38550472259521484, 0.401578813791275, 0.4139420986175537, 0.4064916670322418, 0.4166134297847748, 0.41662344336509705, 0.4119088053703308, 0.4118257761001587, 0.43278807401657104, 0.4451545476913452, 0.4363539218902588, 0.4347592890262604, 0.4304954409599304, 0.43453747034072876, 0.4683091640472412, 0.48276767134666443, 0.46175211668014526], "val_accuracy": [0.4153333306312561, 0.4503333270549774, 0.6549999713897705, 0.687666654586792, 0.7266666889190674, 0.7450000047683716, 0.7480000257492065, 0.7620000243186951, 0.7639999985694885, 0.7643333077430725, 0.7820000052452087, 0.796999990940094, 0.7986666560173035, 0.8040000200271606, 0.8019999861717224, 0.8086666464805603, 0.8103333115577698, 0.8090000152587891, 0.8186666369438171, 0.8240000009536743, 0.8253333568572998, 0.8236666917800903, 0.8323333263397217, 0.8273333311080933, 0.8309999704360962, 0.8396666646003723, 0.8373333215713501, 0.8330000042915344, 0.8389999866485596, 0.8373333215713501, 0.846666693687439, 0.8479999899864197, 0.8486666679382324, 0.8519999980926514, 0.847000002861023, 0.8516666889190674, 0.8526666760444641, 0.8539999723434448, 0.859000027179718, 0.856333315372467, 0.859000027179718, 0.859666645526886, 0.8616666793823242, 0.862333357334137, 0.8579999804496765, 0.8636666536331177, 0.8650000095367432, 0.8636666536331177, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8633333444595337, 0.8643333315849304, 0.8656666874885559, 0.8633333444595337, 0.8693333268165588, 0.8656666874885559, 0.8663333058357239, 0.8700000047683716, 0.8683333396911621, 0.8730000257492065, 0.8676666617393494, 0.8666666746139526, 0.8676666617393494, 0.8659999966621399, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 0, 4], [0, 0, 3, 0, 2, 1], [83, 69, 27], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 6, 4, 3], [0, 0, 4, 7, 3], [0, 58], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 2, 2, 5, 6, 3, 1, 6, 6], [1, 0, 1, 3, 0, 2, 5, 0, 5, 0], [0, 20, 70, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 6, 3, 3, 1, 9, 4, 5, 2, 20, 10, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.multiply(sigma, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 6], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [2, 1, 2], [0, 3, 3, 5], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 7], [0, 0, 0], [46, 58, 60], [0, 1, 1], [2], [1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 3, 4, 1, 7, 4, 3, 3, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 8, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 6, 4, 1, 4, 3, 2, 9, 2, 5, 9, 7, 1, 6, 4, 8], [0, 3, 3, 1, 1, 5, 0, 3, 4, 0, 1, 1], [76, 65, 26, 84, 51], [1, 0, 1, 0, 1, 0, 1], [0, 0, 4, 2], [4, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 30, 18, 12, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(alpha, grad)), tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [45359034368.0, 6874094108672.0, 117521780834304.0, 830089470148608.0, 3777676334596096.0, 1.2236030040080384e+16], "accuracy": [0.1006472036242485, 0.10513802617788315, 0.09906221181154251, 0.10474177449941635, 0.0952318087220192, 0.09866596013307571], "val_loss": [467330072576.0, 25195863605248.0, 270438806585344.0, 1474380265684992.0, 5523129300418560.0, 1.6291892211744768e+16], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 3, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [97], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [4, 0, 4], [91, 58], [0, 0, 1, 1], [0, 6], [1, 0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310797929763794, 2.3111352920532227, 2.309908390045166, 2.310150146484375, 2.3099186420440674, 2.3106424808502197], "accuracy": [0.08955223858356476, 0.09060890227556229, 0.09034473448991776, 0.09417514503002167, 0.08625016361474991, 0.09179764986038208], "val_loss": [2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]