[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292978525161743, 2.1923012733459473, 1.7799842357635498, 1.3583928346633911, 1.0818898677825928, 0.922866702079773, 0.8401698470115662, 0.8257966041564941, 0.7740961313247681, 0.7466171979904175, 0.7034345865249634, 0.6757857203483582, 0.6598911285400391, 0.6300329566001892, 0.6141887307167053, 0.6056384444236755, 0.590097963809967, 0.5657712817192078, 0.5518019199371338, 0.5518755316734314, 0.5457466244697571, 0.5206301808357239, 0.5128289461135864, 0.5043995976448059, 0.5009206533432007, 0.4880692660808563, 0.47631022334098816, 0.4532196819782257, 0.4632081091403961, 0.4515930712223053, 0.4414733946323395, 0.4379625916481018, 0.4250028133392334, 0.4087897539138794, 0.4211466908454895, 0.39636197686195374, 0.3946205675601959, 0.3830702602863312, 0.3851580321788788, 0.36795616149902344, 0.3729296326637268, 0.3583780825138092], "accuracy": [0.12429005652666092, 0.32241448760032654, 0.43745872378349304, 0.5375775694847107, 0.628582775592804, 0.6609430909156799, 0.6864351034164429, 0.7082287669181824, 0.7014925479888916, 0.7187954187393188, 0.7346453666687012, 0.7452120184898376, 0.7499669790267944, 0.763439416885376, 0.76106196641922, 0.7642319202423096, 0.7744023203849792, 0.7802139520645142, 0.7862898111343384, 0.7873464822769165, 0.7857614755630493, 0.7992339134216309, 0.8010830879211426, 0.8107251524925232, 0.8164047002792358, 0.8152159452438354, 0.8152159452438354, 0.8235371708869934, 0.8193105459213257, 0.8201030492782593, 0.8301413059234619, 0.8339717388153076, 0.8354246616363525, 0.8421608805656433, 0.8376700282096863, 0.8421608805656433, 0.8495575189590454, 0.8539162874221802, 0.8520671129226685, 0.856689989566803, 0.8580108284950256, 0.86118084192276], "val_loss": [2.244969367980957, 2.020998477935791, 1.1404927968978882, 0.8237997889518738, 0.7654148936271667, 0.7027619481086731, 0.6508447527885437, 0.6140667200088501, 0.6286290884017944, 0.5899316668510437, 0.5586686134338379, 0.5229672193527222, 0.514375627040863, 0.5077705979347229, 0.49591875076293945, 0.48949134349823, 0.4803910255432129, 0.46404609084129333, 0.4628797173500061, 0.45572924613952637, 0.4487297236919403, 0.4450611174106598, 0.44134533405303955, 0.43422746658325195, 0.42437711358070374, 0.4199271500110626, 0.4195902645587921, 0.41519173979759216, 0.4184269309043884, 0.4139171540737152, 0.40362200140953064, 0.39633268117904663, 0.39528295397758484, 0.39048922061920166, 0.3980218768119812, 0.3948700726032257, 0.38922786712646484, 0.38862350583076477, 0.3987294137477875, 0.39139384031295776, 0.3930908143520355, 0.39270856976509094], "val_accuracy": [0.43066665530204773, 0.5046666860580444, 0.6616666913032532, 0.7020000219345093, 0.7163333296775818, 0.7356666922569275, 0.7553333044052124, 0.7649999856948853, 0.7703333497047424, 0.7703333497047424, 0.7773333191871643, 0.7913333177566528, 0.7879999876022339, 0.7963333129882812, 0.7990000247955322, 0.7973333597183228, 0.8109999895095825, 0.8086666464805603, 0.8183333277702332, 0.8220000267028809, 0.8226666450500488, 0.8286666870117188, 0.8339999914169312, 0.8246666789054871, 0.831333339214325, 0.8433333039283752, 0.8446666598320007, 0.8416666388511658, 0.8349999785423279, 0.8473333120346069, 0.856333315372467, 0.8539999723434448, 0.8556666374206543, 0.8579999804496765, 0.8576666712760925, 0.8619999885559082, 0.8643333315849304, 0.859000027179718, 0.8550000190734863, 0.856333315372467, 0.859666645526886, 0.8573333621025085]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 1, 4, 7, 4, 8, 2, 8], [0, 0, 1, 1, 2, 2, 0, 3, 0, 2], [83, 99, 27, 95], [0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 2, 1], [0, 3, 3, 0, 2], [0, 88], [0, 0, 0, 0, 1, 1, 1], [0, 0, 3, 0], [0, 0, 5], [0, 54], [0, 1], [0], [2], [0]], "fitness": -0.15000000596046448, "mapping_values": [1, 22, 12, 10, 4, 9, 4, 5, 2, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.pow(grad, tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.458020064165888e+16, 6.869795771507349e+25, Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10460969805717468, 0.10011887550354004, 0.10130762308835983, 0.10791176557540894, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.8740615474774016e+18, 1.288593676949747e+28, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.1459999978542328, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [20, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 7, 1], [1, 3, 3, 0, 3], [0], [0, 0, 1, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 5, 5, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(grad, tf.math.add(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [35.663909912109375, 433.9714050292969, 1821.2352294921875, 4979.68212890625, 10595.05078125, 19343.91796875], "accuracy": [0.10038304328918457, 0.10474177449941635, 0.10381719470024109, 0.09576013684272766, 0.09747721254825592, 0.09985470771789551], "val_loss": [124.71732330322266, 779.9151000976562, 2492.277099609375, 5787.33984375, 11185.6494140625, 19208.212890625], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 1, 3, 4, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [4, 1, 1], [5, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [1, 0, 8, 3], [6, 0, 4], [0, 58], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 5, 1, 7, 1, 7, 3, 6, 1, 7, 7, 9, 1, 9, 7, 7, 2, 4, 0, 6], [1, 1, 3, 6, 6, 1, 7, 1, 7, 6, 7, 4, 3, 2, 1], [0, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 1, 0, 1, 0, 5, 3, 2, 1, 36, 21, 15, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, grad))), alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(grad, grad))), tf.math.pow(grad, tf.math.negative(sigma)))), tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 3, 0, 3], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 1, 0], [8, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45439389696.0, 7040566558720.0, 118253233897472.0, 835799025188864.0, 3776140346916864.0, 1.2050968489230336e+16], "accuracy": [0.10091137140989304, 0.10117553919553757, 0.10289261490106583, 0.09998679161071777, 0.09166556596755981, 0.09800554811954498], "val_loss": [473256820736.0, 25514957864960.0, 273877699657728.0, 1492958817812480.0, 5593661790224384.0, 1.650044293873664e+16], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]