[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8682857155799866, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292644500732422, 2.193737030029297, 1.774217128753662, 1.3549628257751465, 1.076966643333435, 0.9333286285400391, 0.8345109820365906, 0.8325802087783813, 0.7690263390541077, 0.7501784563064575, 0.7026880979537964, 0.6737936735153198, 0.6425278186798096, 0.6166880130767822, 0.5991111993789673, 0.6000029444694519, 0.5777217745780945, 0.5690557956695557, 0.5536401867866516, 0.5283824801445007, 0.5140177607536316, 0.5192937850952148, 0.50300532579422, 0.48916590213775635, 0.47606590390205383, 0.47144797444343567, 0.44831860065460205, 0.4621129333972931, 0.432596355676651, 0.43224143981933594, 0.42526620626449585, 0.42503821849823, 0.4084409773349762, 0.4057648479938507, 0.3966613709926605, 0.37479865550994873, 0.37285885214805603, 0.36835402250289917, 0.36113497614860535, 0.36019349098205566, 0.35126057267189026, 0.35007020831108093, 0.3336312770843506, 0.33812975883483887, 0.3346526026725769, 0.32445311546325684, 0.3245910704135895, 0.31946107745170593, 0.31683751940727234], "accuracy": [0.12732796370983124, 0.3086778521537781, 0.4349491596221924, 0.5415400862693787, 0.6308281421661377, 0.6585655808448792, 0.6946242451667786, 0.6999075412750244, 0.709549605846405, 0.7036058902740479, 0.737022876739502, 0.7429665923118591, 0.7561748623847961, 0.767401933670044, 0.7734777331352234, 0.7714964747428894, 0.7804781198501587, 0.7820631265640259, 0.7845727205276489, 0.800818920135498, 0.8067626357078552, 0.807158887386322, 0.8117818236351013, 0.8094043135643005, 0.8148196935653687, 0.819970965385437, 0.835160493850708, 0.8235371708869934, 0.8387266993522644, 0.8372738361358643, 0.8433496356010437, 0.8391229510307312, 0.8471800088882446, 0.8411042094230652, 0.8504821062088013, 0.8558974862098694, 0.8573504090309143, 0.8626337051391602, 0.8639545440673828, 0.8623695969581604, 0.8617091774940491, 0.8644828796386719, 0.8709549307823181, 0.8702945709228516, 0.8732003569602966, 0.8757099509239197, 0.8691058158874512, 0.8790120482444763, 0.8780874609947205], "val_loss": [2.2459380626678467, 2.018725633621216, 1.1403980255126953, 0.8589592576026917, 0.7712522149085999, 0.7011163830757141, 0.6677609086036682, 0.6421080827713013, 0.6314310431480408, 0.607749342918396, 0.5618904829025269, 0.5471296310424805, 0.5373637080192566, 0.5162090063095093, 0.49789437651634216, 0.49203988909721375, 0.4849061667919159, 0.47937077283859253, 0.47097545862197876, 0.4616050124168396, 0.4545411765575409, 0.44725504517555237, 0.438588947057724, 0.43620288372039795, 0.4390208423137665, 0.4316248297691345, 0.42705193161964417, 0.4220811724662781, 0.42552366852760315, 0.40306949615478516, 0.40349137783050537, 0.39763543009757996, 0.39190393686294556, 0.3897611200809479, 0.39202094078063965, 0.38881418108940125, 0.3893366754055023, 0.39538949728012085, 0.38500741124153137, 0.3705814480781555, 0.3715735971927643, 0.38343545794487, 0.3732123076915741, 0.37426668405532837, 0.37207233905792236, 0.37033891677856445, 0.3936690390110016, 0.3913278877735138, 0.38179174065589905], "val_accuracy": [0.4009999930858612, 0.49000000953674316, 0.6520000100135803, 0.6943333148956299, 0.7196666598320007, 0.7426666617393494, 0.750333309173584, 0.7586666941642761, 0.7609999775886536, 0.765999972820282, 0.7853333353996277, 0.7879999876022339, 0.7950000166893005, 0.8013333082199097, 0.8053333163261414, 0.8076666593551636, 0.8090000152587891, 0.8116666674613953, 0.8226666450500488, 0.8360000252723694, 0.8256666660308838, 0.8386666774749756, 0.8383333086967468, 0.8356666564941406, 0.8403333425521851, 0.8446666598320007, 0.843666672706604, 0.8453333377838135, 0.8460000157356262, 0.8503333330154419, 0.8546666502952576, 0.8529999852180481, 0.8616666793823242, 0.8629999756813049, 0.8573333621025085, 0.8606666922569275, 0.8643333315849304, 0.862333357334137, 0.859666645526886, 0.8669999837875366, 0.8673333525657654, 0.8619999885559082, 0.8643333315849304, 0.8736666440963745, 0.8736666440963745, 0.8693333268165588, 0.8579999804496765, 0.8663333058357239, 0.8663333058357239]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 88], [0, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 1], [0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 0, 4, 3, 2, 0, 2, 5, 1, 2, 6, 0, 3, 1, 1, 2, 9, 0, 5], [0, 2, 4, 4, 5, 4, 5, 3, 6, 4, 4, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 31, 19, 12, 2, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(beta), grad)), tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, grad)), grad)), sigma)), tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(grad))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [65949344.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17897239327430725, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.6428743005179709e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 4, 3], [0, 0, 1, 3, 2], [0, 99, 27], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 3, 0], [0, 3, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 2, 2, 8], [0, 1, 3, 0, 2, 1, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3, 6, 1, 0, 4], [0, 0, 4, 3, 0, 6], [0, 58, 34], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.sqrt(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(grad), tf.math.pow(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 15, 8, 7, 3, 6, 3, 3, 1, 14, 8, 6, 3, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 5, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 2, 4, 9, 3], [0, 3, 1, 3, 1], [10, 37], [0, 0, 0, 0, 1, 1, 0], [0, 0, 7, 3, 9], [0, 0, 4], [0, 7, 45], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 11, 6, 5, 2, 7, 5, 2, 3, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [38379792.0, 2.702407121658325, 2.4791102409362793, 2.5988004207611084, 2.646637439727783, 2.4978084564208984, 2.65838623046875], "accuracy": [0.09325055778026581, 0.09906221181154251, 0.10236428678035736, 0.10091137140989304, 0.1002509593963623, 0.10196803510189056, 0.1006472036242485], "val_loss": [2.719270706176758, 2.6349740028381348, 2.721691846847534, 2.630472421646118, 2.7333366870880127, 2.627063274383545, 2.66298508644104], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.09833333641290665, 0.09733333438634872, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582]}}]