[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923173904418945, 2.1868953704833984, 1.7603752613067627, 1.3577914237976074, 1.0558825731277466, 0.9262632727622986, 0.8435412049293518, 0.8027433156967163, 0.7599868178367615, 0.7337056994438171, 0.697263777256012, 0.6749237775802612, 0.6590423583984375, 0.6246270537376404, 0.5985350012779236, 0.5844826698303223, 0.5666101574897766, 0.5606909394264221, 0.5641509890556335, 0.5447196960449219, 0.5326705574989319, 0.526797890663147, 0.5016530752182007, 0.4879342019557953, 0.47988876700401306, 0.4763000011444092, 0.47322705388069153, 0.4684312045574188, 0.4476182460784912, 0.43940019607543945, 0.4405055642127991, 0.4322817921638489, 0.4137597680091858, 0.41422224044799805, 0.4056430459022522, 0.3993922173976898, 0.3849795460700989, 0.3862173557281494, 0.3695901334285736, 0.3663046658039093, 0.36228716373443604, 0.3536995053291321, 0.353335440158844, 0.3447916507720947, 0.34507331252098083, 0.3377663195133209, 0.3293626308441162, 0.32745668292045593, 0.32291218638420105, 0.30312398076057434, 0.3126741945743561, 0.30635446310043335, 0.3145870268344879, 0.30752941966056824, 0.3078516721725464, 0.2908996045589447, 0.28598493337631226, 0.2842465043067932, 0.2879112958908081, 0.28107285499572754, 0.2820645868778229, 0.27183374762535095, 0.28300580382347107, 0.27401822805404663, 0.2607414424419403], "accuracy": [0.13010171055793762, 0.33020737767219543, 0.44551578164100647, 0.5440496802330017, 0.6361114978790283, 0.6634526252746582, 0.6910579800605774, 0.7018887996673584, 0.7058512568473816, 0.7168141603469849, 0.7376832365989685, 0.7380794882774353, 0.7469290494918823, 0.763967752456665, 0.7672698497772217, 0.7779685854911804, 0.7847048044204712, 0.7796856164932251, 0.7827235460281372, 0.7891955971717834, 0.7924976944923401, 0.7943468689918518, 0.8050455451011658, 0.8101968169212341, 0.8137630224227905, 0.8175934553146362, 0.8157442808151245, 0.8232730031013489, 0.8273676037788391, 0.8264430165290833, 0.8264430165290833, 0.837141752243042, 0.8363492488861084, 0.8352925777435303, 0.8392550349235535, 0.8446704745292664, 0.8518029451370239, 0.8495575189590454, 0.8541803956031799, 0.8585391640663147, 0.859199583530426, 0.858671247959137, 0.8597279191017151, 0.8685774803161621, 0.8639545440673828, 0.8681812286376953, 0.8702945709228516, 0.8671245574951172, 0.8692378997802734, 0.8749174475669861, 0.8755778670310974, 0.8787478804588318, 0.8767666220664978, 0.880729079246521, 0.8762382864952087, 0.8856161832809448, 0.8828424215316772, 0.8886540532112122, 0.8831065893173218, 0.8844274282455444, 0.8849557638168335, 0.8924844861030579, 0.8936732411384583, 0.8877294659614563, 0.8961827754974365], "val_loss": [2.24560546875, 2.0123748779296875, 1.127867341041565, 0.8927561044692993, 0.7780711054801941, 0.7093932032585144, 0.6501085758209229, 0.6436974406242371, 0.6240127682685852, 0.6108782291412354, 0.5727643370628357, 0.5561553835868835, 0.5463160872459412, 0.522466778755188, 0.5164808630943298, 0.5145835876464844, 0.49962106347084045, 0.48482653498649597, 0.48827582597732544, 0.47006112337112427, 0.4675619304180145, 0.4646809995174408, 0.4603598713874817, 0.46877604722976685, 0.452251136302948, 0.4586296081542969, 0.4445653557777405, 0.4460259675979614, 0.43072310090065, 0.4423466920852661, 0.4222778379917145, 0.4208141267299652, 0.4285410940647125, 0.4143455922603607, 0.40972021222114563, 0.4081363379955292, 0.3991988003253937, 0.40119674801826477, 0.39687371253967285, 0.39229002594947815, 0.38607898354530334, 0.3894600570201874, 0.3865704834461212, 0.3930550813674927, 0.39966073632240295, 0.39825230836868286, 0.3860827684402466, 0.37707677483558655, 0.3724699020385742, 0.38701578974723816, 0.39471176266670227, 0.4042230546474457, 0.426705926656723, 0.40853795409202576, 0.4084596335887909, 0.40104940533638, 0.4227142035961151, 0.41541510820388794, 0.40751057863235474, 0.4171563386917114, 0.4357316792011261, 0.44591736793518066, 0.45257410407066345, 0.43884512782096863, 0.4440850019454956], "val_accuracy": [0.4166666567325592, 0.4300000071525574, 0.6383333206176758, 0.6856666803359985, 0.7173333168029785, 0.7289999723434448, 0.7459999918937683, 0.75, 0.762333333492279, 0.7559999823570251, 0.7676666378974915, 0.7829999923706055, 0.7836666703224182, 0.8003333210945129, 0.79666668176651, 0.8033333420753479, 0.809333324432373, 0.8133333325386047, 0.8073333501815796, 0.8183333277702332, 0.8216666579246521, 0.8163333535194397, 0.8263333439826965, 0.8173333406448364, 0.8316666483879089, 0.8309999704360962, 0.8410000205039978, 0.828000009059906, 0.840666651725769, 0.8416666388511658, 0.8496666550636292, 0.8473333120346069, 0.8349999785423279, 0.8483333587646484, 0.8519999980926514, 0.8536666631698608, 0.8543333411216736, 0.8526666760444641, 0.8600000143051147, 0.8636666536331177, 0.862666666507721, 0.8583333492279053, 0.859666645526886, 0.8669999837875366, 0.8706666827201843, 0.8713333606719971, 0.8683333396911621, 0.8663333058357239, 0.8703333139419556, 0.871999979019165, 0.8706666827201843, 0.8700000047683716, 0.862666666507721, 0.875333309173584, 0.8773333430290222, 0.8713333606719971, 0.8643333315849304, 0.8709999918937683, 0.8726666569709778, 0.8790000081062317, 0.8756666779518127, 0.8676666617393494, 0.8586666584014893, 0.871999979019165, 0.8776666522026062]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 1, 3, 1, 3], [0, 3, 1, 0, 2, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [8, 1, 3], [0, 3, 3], [0], [0, 1, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 6], [90, 58], [0, 1], [0], [1], [0]], "fitness": -0.12028571218252182, "mapping_values": [1, 11, 5, 6, 2, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [9226901.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18676528334617615, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [227020126552064.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10866666585206985, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 2], [0, 0, 0, 3, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1, 7, 6, 2, 1], [0, 3, 3, 3, 2, 5, 2, 2], [70], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 3, 4], [0, 58], [0, 1, 1], [7], [1, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 16, 8, 8, 1, 7, 4, 3, 1, 3, 1, 2, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(grad, grad), beta)), tf.math.add(tf.math.subtract(grad, beta), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037166595458984, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 7, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [12], [0, 0, 0, 0, 1, 1, 1], [0, 0, 7, 8], [0, 0, 4], [0, 42], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3028464317321777, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [2, 1, 7, 1, 3, 1, 4, 1, 7, 8, 6, 3, 7, 8, 1, 7, 4, 8, 5, 2, 6, 3, 8, 4, 1, 6, 5, 0, 0, 9, 2, 0, 5, 7, 8, 0], [2, 0, 1, 0, 2, 3, 1, 0, 3, 3, 3, 0, 2, 2, 1, 0, 2, 0, 1, 0, 1, 0, 2], [83, 99, 27, 47, 50, 86, 86, 90, 75], [0, 1, 1, 0, 1, 1], [5, 1, 7], [0, 3, 3], [0], [0, 0, 1, 0, 0, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 66], [0, 0], [0, 9], [1], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 59, 36, 23, 9, 2, 1, 1, 1, 3, 2, 1, 1, 2, 2, 0, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.subtract(tf.math.add(grad, tf.math.pow(tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad))), grad)), tf.math.divide_no_nan(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(grad, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.math.sqrt(alpha), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3097763061523438, 2.308976411819458, 2.3093483448028564, 2.3098981380462646, 2.309042453765869, 2.3085129261016846], "accuracy": [0.09417514503002167, 0.09457138925790787, 0.0948355570435524, 0.08849557489156723, 0.09179764986038208, 0.09153348207473755], "val_loss": [2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]