[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2921302318573, 2.1882998943328857, 1.763486385345459, 1.3441325426101685, 1.0495632886886597, 0.9056932330131531, 0.8245801329612732, 0.7902759313583374, 0.745496928691864, 0.7139089703559875, 0.6884303092956543, 0.6561546921730042, 0.6340070962905884, 0.6216914653778076, 0.6088088154792786, 0.5855692625045776, 0.5721094608306885, 0.5627297163009644, 0.5586529970169067, 0.544599175453186, 0.5165750980377197, 0.5064104199409485, 0.4983783960342407, 0.4852626919746399, 0.46465864777565, 0.47319597005844116, 0.45643678307533264, 0.4462040662765503, 0.440880686044693, 0.43452954292297363, 0.42571312189102173, 0.41170546412467957, 0.41190338134765625, 0.3905932903289795, 0.389544814825058, 0.38674020767211914, 0.3690865933895111, 0.35995832085609436, 0.36269354820251465, 0.3562037944793701, 0.3500613570213318, 0.3395005166530609, 0.33894455432891846, 0.32937556505203247, 0.3289436399936676, 0.32630786299705505, 0.3276985287666321, 0.3130283057689667, 0.30562373995780945], "accuracy": [0.1270637959241867, 0.3273015320301056, 0.4484215974807739, 0.5445780158042908, 0.644300639629364, 0.6654338836669922, 0.6914542317390442, 0.7098137736320496, 0.7049266695976257, 0.7240787148475647, 0.7382115721702576, 0.7446836829185486, 0.754589855670929, 0.7642319202423096, 0.770439863204956, 0.772288978099823, 0.7808743715286255, 0.7835160493850708, 0.7881389260292053, 0.7866860628128052, 0.7931581139564514, 0.7988376617431641, 0.8117818236351013, 0.8129705190658569, 0.8165367841720581, 0.8178576231002808, 0.821820080280304, 0.8240655064582825, 0.8308017253875732, 0.8347642421722412, 0.8366134166717529, 0.8391229510307312, 0.8367455005645752, 0.8453308939933777, 0.8518029451370239, 0.8494254350662231, 0.8541803956031799, 0.8562937378883362, 0.860652506351471, 0.8639545440673828, 0.8576145768165588, 0.8634262084960938, 0.8708229064941406, 0.8778232932090759, 0.8659358024597168, 0.8710870146751404, 0.8728041052818298, 0.8758420348167419, 0.8784837126731873], "val_loss": [2.245468854904175, 2.008542537689209, 1.1124744415283203, 0.8667068481445312, 0.755709171295166, 0.6760291457176208, 0.6501702666282654, 0.634695291519165, 0.6082973480224609, 0.5787404179573059, 0.5579392910003662, 0.5377221703529358, 0.5169196128845215, 0.5159894227981567, 0.5104876160621643, 0.4979369342327118, 0.4878028929233551, 0.4804569184780121, 0.47324642539024353, 0.4707862436771393, 0.4564908742904663, 0.4550778865814209, 0.4534120261669159, 0.4383123517036438, 0.43837490677833557, 0.43185460567474365, 0.4268549680709839, 0.416220098733902, 0.42387655377388, 0.41223642230033875, 0.40732520818710327, 0.4097959101200104, 0.40299686789512634, 0.3991854786872864, 0.40970882773399353, 0.39248567819595337, 0.37981507182121277, 0.38679471611976624, 0.4141867160797119, 0.3893333375453949, 0.3825378119945526, 0.3924487829208374, 0.4134925901889801, 0.38669702410697937, 0.37992650270462036, 0.3905429542064667, 0.4121902287006378, 0.4085228145122528, 0.40165361762046814], "val_accuracy": [0.43966665863990784, 0.48899999260902405, 0.656333327293396, 0.7016666531562805, 0.7250000238418579, 0.7456666827201843, 0.749666690826416, 0.7543333172798157, 0.7643333077430725, 0.7776666879653931, 0.7793333530426025, 0.7893333435058594, 0.7983333468437195, 0.8016666769981384, 0.7950000166893005, 0.7993333339691162, 0.8106666803359985, 0.8216666579246521, 0.8226666450500488, 0.8176666498184204, 0.8316666483879089, 0.8323333263397217, 0.8303333520889282, 0.8330000042915344, 0.8370000123977661, 0.8373333215713501, 0.8373333215713501, 0.8460000157356262, 0.8516666889190674, 0.8553333282470703, 0.8566666841506958, 0.8569999933242798, 0.8519999980926514, 0.8533333539962769, 0.8606666922569275, 0.8610000014305115, 0.8616666793823242, 0.8656666874885559, 0.8616666793823242, 0.8646666407585144, 0.8663333058357239, 0.8669999837875366, 0.8613333106040955, 0.8679999709129333, 0.8616666793823242, 0.8619999885559082, 0.8610000014305115, 0.8656666874885559, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 6, 1, 4], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 4], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 7, 4, 2, 4, 2, 3, 7, 2, 3, 3, 0, 9, 4, 6, 4, 2, 6, 7, 4, 6, 5, 3, 4, 3, 1, 8], [0, 7, 2, 1, 3, 0, 7, 5, 0, 7, 7, 7, 1, 4, 2, 7, 1, 1, 1, 2, 2, 0, 3], [0, 1, 57, 62, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 5, 3, 2, 2, 51, 28, 23, 5], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, beta)), tf.math.add(tf.math.multiply(alpha, sigma), tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, grad), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(beta, grad)), alpha)), tf.math.pow(tf.math.multiply(tf.math.subtract(alpha, alpha), beta), beta)))), tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 3, 2, 7], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 0, 1], [9, 0, 4, 3], [0, 0, 4], [67, 58], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 7, 2, 9, 2, 2, 3, 2, 9, 7, 0, 8], [1, 5, 2, 7, 5, 5, 3], [0, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 20, 13, 7, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(grad))), grad), tf.math.sqrt(sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 37, 27], [0, 1, 0, 0, 1, 1], [0, 9, 2], [5, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [31830556672.0, 2982300614656.0, 32354787655680.0, 149983697305600.0, 436598055370752.0, 998622242013184.0], "accuracy": [0.10777968913316727, 0.10011887550354004, 0.09760929644107819, 0.1010434553027153, 0.10276053100824356, 0.1006472036242485], "val_loss": [278898835456.0, 8902476300288.0, 59566540718080.0, 211890298945536.0, 539147647320064.0, 1118758919733248.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 9, 1, 3], [0, 0, 3, 2, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 2, 3, 4, 1, 2, 1, 9], [0, 3, 5, 5, 1, 3, 1], [0, 62], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [5, 0, 4, 3, 0, 8, 8], [0, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 16, 9, 7, 2, 10, 7, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(grad, grad)), tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]