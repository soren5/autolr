[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292498826980591, 2.188554525375366, 1.764819622039795, 1.3469911813735962, 1.0627769231796265, 0.9344607591629028, 0.8323151469230652, 0.8132771253585815, 0.7731168866157532, 0.7446615695953369, 0.7054445147514343, 0.664227306842804, 0.6302613019943237, 0.6249412894248962, 0.6192300319671631, 0.594412088394165, 0.5774986147880554, 0.5719419717788696, 0.5627390146255493, 0.5483041405677795, 0.5373330116271973, 0.5214030146598816, 0.5198050737380981, 0.5022607445716858, 0.49616315960884094, 0.48843953013420105, 0.48624303936958313, 0.46833017468452454, 0.45413362979888916, 0.4492685794830322, 0.4575807750225067, 0.44244384765625, 0.4294145107269287, 0.4211827516555786, 0.4151723086833954, 0.40822866559028625, 0.40033969283103943, 0.3823329508304596, 0.3929956257343292, 0.3865054249763489, 0.37906312942504883, 0.3624905049800873, 0.36922508478164673, 0.355072557926178, 0.35276392102241516, 0.35079073905944824, 0.34839460253715515, 0.3436957895755768, 0.3400284945964813, 0.34369391202926636, 0.3337395489215851], "accuracy": [0.12851670384407043, 0.31699907779693604, 0.4373266398906708, 0.538237988948822, 0.6425835490226746, 0.6585655808448792, 0.6894729733467102, 0.7051908373832703, 0.7024171352386475, 0.7092854380607605, 0.7253995537757874, 0.7407211661338806, 0.7589486241340637, 0.7573636174201965, 0.7635715007781982, 0.7695152759552002, 0.7836481332778931, 0.7824593782424927, 0.7905164361000061, 0.7889314293861389, 0.7967243194580078, 0.8017435073852539, 0.7969884872436523, 0.8075551390647888, 0.8104609847068787, 0.8090080618858337, 0.8105930685997009, 0.8219521641731262, 0.8238013386726379, 0.8294808864593506, 0.828292191028595, 0.8348963260650635, 0.8322546482086182, 0.8354246616363525, 0.8396512866020203, 0.843481719493866, 0.8490291833877563, 0.8508783578872681, 0.8474441766738892, 0.8533879518508911, 0.8569541573524475, 0.8648791313171387, 0.8549728989601135, 0.8625016212463379, 0.8667283058166504, 0.8638224601745605, 0.8605204224586487, 0.8638224601745605, 0.8685774803161621, 0.8654074668884277, 0.8691058158874512], "val_loss": [2.2458183765411377, 2.015827178955078, 1.1392143964767456, 0.8708012700080872, 0.7675644755363464, 0.71317058801651, 0.6823122501373291, 0.6742011904716492, 0.6569035053253174, 0.6276224851608276, 0.5883342027664185, 0.5640971660614014, 0.550382673740387, 0.549767017364502, 0.545785665512085, 0.5232135653495789, 0.5246782898902893, 0.5107511281967163, 0.5021315813064575, 0.48854729533195496, 0.4837498366832733, 0.4816405475139618, 0.4755106568336487, 0.4690929353237152, 0.48183733224868774, 0.4780954122543335, 0.47353312373161316, 0.462337851524353, 0.4460078179836273, 0.44913479685783386, 0.4399029612541199, 0.430076539516449, 0.4280620515346527, 0.4403929114341736, 0.4217867851257324, 0.4261040985584259, 0.4270568788051605, 0.4157574474811554, 0.42939671874046326, 0.43145012855529785, 0.4304756820201874, 0.4060627818107605, 0.39541536569595337, 0.40722575783729553, 0.4102017283439636, 0.3962175250053406, 0.39193105697631836, 0.4069363474845886, 0.4250301122665405, 0.4222017526626587, 0.4243474006652832], "val_accuracy": [0.4153333306312561, 0.43933331966400146, 0.6486666798591614, 0.6930000185966492, 0.7226666808128357, 0.7296666502952576, 0.7453333139419556, 0.7483333349227905, 0.7519999742507935, 0.7643333077430725, 0.7696666717529297, 0.781333327293396, 0.7903333306312561, 0.7889999747276306, 0.7933333516120911, 0.7979999780654907, 0.8043333292007446, 0.8046666383743286, 0.8069999814033508, 0.8166666626930237, 0.812666654586792, 0.8196666836738586, 0.8226666450500488, 0.8293333053588867, 0.8253333568572998, 0.8209999799728394, 0.8259999752044678, 0.8366666436195374, 0.840666651725769, 0.8399999737739563, 0.8426666855812073, 0.843999981880188, 0.8446666598320007, 0.846666693687439, 0.8533333539962769, 0.8539999723434448, 0.8539999723434448, 0.8586666584014893, 0.8516666889190674, 0.8586666584014893, 0.8603333234786987, 0.859333336353302, 0.8610000014305115, 0.8586666584014893, 0.8566666841506958, 0.8640000224113464, 0.862333357334137, 0.8600000143051147, 0.8553333282470703, 0.8560000061988831, 0.8536666631698608]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 4, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 0, 4], [0, 91], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 7, 6, 1], [0, 0, 4, 1, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 2, 11, 6, 5, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(grad, alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 3], [83, 66, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 0, 4, 3, 5], [0, 0, 4, 0], [0, 58, 77], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.329479455947876, 2.6430366039276123, 5.831777873590762e+27, 2.3494839668273926, 2.6122169494628906, 3.6094064712524414, 6.0060882568359375], "accuracy": [0.08255184441804886, 0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3970303535461426, 4.335509300231934, NaN, 2.4401040077209473, 3.0106282234191895, 4.764890670776367, 8.091075897216797], "val_accuracy": [0.09000000357627869, 0.1003333330154419, 0.09733333438634872, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 9, 5, 4, 3, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 0], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 4, 3], [0, 0, 4, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 0, 8, 4, 4, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [1, 2, 1, 1, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [1, 1, 0], [0, 2, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 6, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3099465370178223, 2.3103580474853516, 2.3097951412200928, 2.30922794342041, 2.3098278045654297, 2.3101654052734375], "accuracy": [0.08889182657003403, 0.08598599582910538, 0.09298639744520187, 0.08968432247638702, 0.09060890227556229, 0.09325055778026581], "val_loss": [2.3082730770111084, 2.3082730770111084, 2.3082730770111084, 2.3082730770111084, 2.3082730770111084, 2.3082730770111084], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]