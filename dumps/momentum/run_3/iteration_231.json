[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294323682785034, 2.1924822330474854, 1.7842614650726318, 1.351194977760315, 1.0942356586456299, 0.9246047735214233, 0.8476323485374451, 0.8117551803588867, 0.7662901282310486, 0.742520272731781, 0.6981564164161682, 0.6874816417694092, 0.6649202704429626, 0.6241708993911743, 0.5945092439651489, 0.5841251611709595, 0.5838730335235596, 0.5735469460487366, 0.55206298828125, 0.5493769645690918, 0.5400256514549255, 0.5225109457969666, 0.5043452978134155, 0.5135596990585327, 0.49704405665397644, 0.48642483353614807, 0.48130351305007935, 0.46955713629722595, 0.46729838848114014, 0.46258556842803955, 0.4568503499031067, 0.444837361574173, 0.4301687180995941, 0.41560426354408264, 0.4247968792915344, 0.39505913853645325, 0.40118110179901123, 0.3957057297229767, 0.383950799703598, 0.393016517162323, 0.37519848346710205, 0.3717932105064392, 0.35932666063308716, 0.35101231932640076, 0.37015482783317566, 0.37236571311950684, 0.34624314308166504, 0.3364509344100952, 0.32840994000434875, 0.334858775138855, 0.32682496309280396, 0.3314700722694397, 0.31803053617477417, 0.3224862515926361], "accuracy": [0.12178047746419907, 0.3276977837085724, 0.43072250485420227, 0.5365209579467773, 0.6240919232368469, 0.6606789231300354, 0.689869225025177, 0.6952846646308899, 0.709549605846405, 0.7197200059890747, 0.7368907928466797, 0.7331924438476562, 0.7479857206344604, 0.7618544697761536, 0.7685906887054443, 0.7746664881706238, 0.7770439982414246, 0.78113853931427, 0.7891955971717834, 0.7858935594558716, 0.7903843522071838, 0.796328067779541, 0.806630551815033, 0.8016114234924316, 0.8084797263145447, 0.8103289008140564, 0.8169330358505249, 0.8202351331710815, 0.8149517774581909, 0.8216879963874817, 0.8238013386726379, 0.8322546482086182, 0.8397833704948425, 0.8433496356010437, 0.8367455005645752, 0.8459912538528442, 0.8424250483512878, 0.8477083444595337, 0.8543124794960022, 0.8448025584220886, 0.8561616539955139, 0.8578787446022034, 0.863029956817627, 0.8631620407104492, 0.8595958352088928, 0.8607845902442932, 0.8658037185668945, 0.8667283058166504, 0.8726720213890076, 0.8676528930664062, 0.871879518032074, 0.874389111995697, 0.8749174475669861, 0.872407853603363], "val_loss": [2.246671438217163, 2.0193631649017334, 1.1187841892242432, 0.8217652440071106, 0.7410234212875366, 0.7016937732696533, 0.6494562029838562, 0.6258917450904846, 0.6292048692703247, 0.6008869409561157, 0.5575087666511536, 0.5321092009544373, 0.5251506567001343, 0.5128186941146851, 0.5077040195465088, 0.5003093481063843, 0.4974917769432068, 0.49878397583961487, 0.4887004792690277, 0.4855212867259979, 0.47858211398124695, 0.47587281465530396, 0.4760889410972595, 0.4642006754875183, 0.4620051980018616, 0.45672526955604553, 0.46127521991729736, 0.44767987728118896, 0.4588712155818939, 0.4430675506591797, 0.43945077061653137, 0.42370203137397766, 0.4394215941429138, 0.4366583526134491, 0.4394591450691223, 0.4296846091747284, 0.43619653582572937, 0.42717015743255615, 0.4250192940235138, 0.42052942514419556, 0.42199987173080444, 0.4258442521095276, 0.4273875653743744, 0.4467524290084839, 0.4244813621044159, 0.4198945164680481, 0.43817198276519775, 0.430498868227005, 0.42095133662223816, 0.4350268244743347, 0.4345037341117859, 0.4336180090904236, 0.42961445450782776, 0.4278930723667145], "val_accuracy": [0.4313333332538605, 0.49399998784065247, 0.6646666526794434, 0.7070000171661377, 0.7196666598320007, 0.7440000176429749, 0.7580000162124634, 0.7663333415985107, 0.7696666717529297, 0.7739999890327454, 0.7770000100135803, 0.7919999957084656, 0.7913333177566528, 0.8033333420753479, 0.7983333468437195, 0.8090000152587891, 0.8026666641235352, 0.8046666383743286, 0.8103333115577698, 0.8169999718666077, 0.8243333101272583, 0.8206666707992554, 0.828000009059906, 0.8266666531562805, 0.8306666612625122, 0.8393333554267883, 0.8389999866485596, 0.8429999947547913, 0.8396666646003723, 0.8443333506584167, 0.8456666469573975, 0.8460000157356262, 0.8493333458900452, 0.8513333201408386, 0.8566666841506958, 0.8533333539962769, 0.8553333282470703, 0.859333336353302, 0.8600000143051147, 0.859666645526886, 0.8640000224113464, 0.8586666584014893, 0.859666645526886, 0.8546666502952576, 0.8663333058357239, 0.8629999756813049, 0.8619999885559082, 0.8646666407585144, 0.8709999918937683, 0.8690000176429749, 0.8656666874885559, 0.8656666874885559, 0.8683333396911621, 0.8709999918937683]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 2, 6, 1, 4, 4, 3, 5, 8, 8, 6, 9, 6, 0, 0], [0, 3, 3, 4, 2, 5, 1, 5, 3], [0, 44], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 6], [0, 1, 4], [0, 58], [0, 1, 0, 0, 0, 1, 1, 0, 1], [3, 8, 2, 2, 0], [1, 4, 5, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 25, 16, 9, 2, 7, 4, 3, 1, 9, 5, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.math.pow(tf.math.pow(grad, tf.math.multiply(beta, tf.math.square(grad))), tf.math.sqrt(alpha)))), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(tf.math.add(grad, grad), tf.math.negative(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 7, 4, 8, 5, 4, 1, 3], [0, 0, 1, 0, 2, 1, 0, 1, 3], [83, 99, 27, 64], [0, 0, 1, 0, 1, 0], [0, 2, 2, 9], [2, 1, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 7], [0, 0, 4], [0, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 4, 6, 4, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(tf.math.pow(alpha, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [2, 1, 3, 1, 3, 1], [0, 0, 1, 0, 2, 3, 3], [83, 99, 27], [0, 1, 0, 0, 1, 1], [0, 1, 9], [3, 3, 0], [0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3, 7, 4, 9, 4, 4], [0, 0, 4, 4, 4, 5], [0, 58, 53], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.32820987701416, 2.5567221641540527, 1517321344.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08149518072605133, 0.07040020823478699, 0.09826971590518951, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3896865844726562, 3.364410877227783, 1.2069927853031452e+26, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 13, 6, 7, 3, 2, 1, 1, 0, 15, 9, 6, 3, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [2, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 18, 87], [0, 0, 1, 1, 0, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [8, 0, 4, 3, 4, 7, 5, 2], [1, 0, 4, 6, 5, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035624027252197, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 14, 8, 6, 1, 2, 1, 1, 0], "tree_depth": 15}]