[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294109582901001, 2.187417507171631, 1.770187258720398, 1.3491979837417603, 1.081040620803833, 0.9366226196289062, 0.8419983983039856, 0.8177748918533325, 0.7817070484161377, 0.7566369771957397, 0.7219951152801514, 0.7024351954460144, 0.6675372123718262, 0.6467527747154236, 0.6112823486328125, 0.6156026721000671, 0.5850457549095154, 0.5892066359519958, 0.5726771354675293, 0.5517072677612305, 0.5540517568588257, 0.5385751128196716, 0.5323704481124878, 0.51902836561203, 0.49872830510139465, 0.49104541540145874, 0.47877782583236694, 0.48336902260780334, 0.4642060101032257, 0.45711490511894226, 0.45382118225097656, 0.44339603185653687, 0.4456306993961334, 0.43018603324890137, 0.4156900942325592, 0.3998132348060608, 0.3996323347091675, 0.3893921971321106, 0.38621923327445984, 0.37696176767349243, 0.37062910199165344, 0.36229607462882996, 0.3536100685596466, 0.34385183453559875, 0.3501266837120056, 0.35735389590263367, 0.33783620595932007, 0.34302884340286255], "accuracy": [0.12178047746419907, 0.32782986760139465, 0.42966583371162415, 0.5449742674827576, 0.6209219098091125, 0.6588297486305237, 0.6860388517379761, 0.7061154246330261, 0.6993792057037354, 0.7063795924186707, 0.7314753532409668, 0.726192057132721, 0.7473253011703491, 0.7534011602401733, 0.7691190242767334, 0.7703077793121338, 0.7792893648147583, 0.7808743715286255, 0.7774402499198914, 0.791441023349762, 0.7844406366348267, 0.796328067779541, 0.8017435073852539, 0.7994980812072754, 0.8117818236351013, 0.8146876096725464, 0.817989706993103, 0.8157442808151245, 0.8238013386726379, 0.829216718673706, 0.828820526599884, 0.8284242749214172, 0.8305375576019287, 0.8393871188163757, 0.8413683772087097, 0.8425571322441101, 0.8436138033866882, 0.8521991968154907, 0.8507462739944458, 0.8553691506385803, 0.859199583530426, 0.8562937378883362, 0.8605204224586487, 0.863558292388916, 0.8677849769592285, 0.860652506351471, 0.8676528930664062, 0.8712190985679626], "val_loss": [2.2460732460021973, 2.019057512283325, 1.1273058652877808, 0.8917730450630188, 0.7566028833389282, 0.7052008509635925, 0.6605811715126038, 0.6222658753395081, 0.6239849925041199, 0.629826009273529, 0.5757634043693542, 0.564969539642334, 0.5581488609313965, 0.5325590372085571, 0.5287849307060242, 0.516515851020813, 0.5139259696006775, 0.5040072798728943, 0.5007690191268921, 0.4961286187171936, 0.4898684024810791, 0.4870572090148926, 0.4805707335472107, 0.46882182359695435, 0.46849876642227173, 0.4639042615890503, 0.4624696969985962, 0.4552350342273712, 0.45508873462677, 0.4431409537792206, 0.4397602081298828, 0.4504198729991913, 0.45141324400901794, 0.44685685634613037, 0.437656968832016, 0.4240786135196686, 0.4238927960395813, 0.415273517370224, 0.40855833888053894, 0.4075036942958832, 0.41210222244262695, 0.406972736120224, 0.40275731682777405, 0.4115913510322571, 0.4175940752029419, 0.409239262342453, 0.4301665127277374, 0.435468465089798], "val_accuracy": [0.4059999883174896, 0.46833333373069763, 0.6526666879653931, 0.6826666593551636, 0.7116666436195374, 0.7390000224113464, 0.7440000176429749, 0.7580000162124634, 0.7663333415985107, 0.7666666507720947, 0.7770000100135803, 0.7753333449363708, 0.7866666913032532, 0.7986666560173035, 0.8006666898727417, 0.8040000200271606, 0.8003333210945129, 0.8036666512489319, 0.8066666722297668, 0.8146666884422302, 0.8209999799728394, 0.8230000138282776, 0.8230000138282776, 0.82833331823349, 0.8339999914169312, 0.8330000042915344, 0.831333339214325, 0.8373333215713501, 0.8370000123977661, 0.8416666388511658, 0.8433333039283752, 0.8343333601951599, 0.8463333249092102, 0.8450000286102295, 0.846666693687439, 0.8526666760444641, 0.8500000238418579, 0.8550000190734863, 0.856333315372467, 0.8553333282470703, 0.859333336353302, 0.8579999804496765, 0.862666666507721, 0.862666666507721, 0.8569999933242798, 0.859000027179718, 0.8556666374206543, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [3, 0, 3], [0], [0, 0, 1, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 2], [13, 58], [0, 0, 1, 0, 1, 1], [0, 1, 7], [1, 7, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 3, 2, 1, 1, 6, 3, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(grad, beta)))", "other_info": {"loss": [3706389248.0, 9.693578067554106e+28, 4.24095344543457, 4.182704448699951, 3.4381988048553467, 2.776602268218994, 2.410182476043701, 2.52226185798645, 2.362537145614624], "accuracy": [0.15295206010341644, 0.0956280529499054, 0.10540219396352768, 0.10210011899471283, 0.09668471664190292, 0.09615638852119446, 0.09760929644107819, 0.09377889335155487, 0.09642054885625839], "val_loss": [6.507712666748353e+29, 4.112608432769775, 4.368468761444092, 3.8880295753479004, 2.7154436111450195, 2.3792645931243896, 2.5678861141204834, 2.359579086303711, 2.322338104248047], "val_accuracy": [0.10199999809265137, 0.0949999988079071, 0.0963333323597908, 0.10366666316986084, 0.0963333323597908, 0.10199999809265137, 0.10066666454076767, 0.0963333323597908, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 8, 3, 1, 3, 3, 4, 4, 5, 3], [0, 0, 1, 0, 1, 3, 2, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 1, 3], [0], [0, 1, 0, 0, 1, 0, 1], [8, 7, 4, 3], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 6, 3, 3, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, grad))), tf.math.square(tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 0, 3, 4, 5], [0, 0, 0, 0, 2], [83, 85, 27, 24], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 0, 1, 1, 0, 1], [7, 0, 4, 3, 8], [0, 0, 4, 7], [0, 58], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 5, 6, 6, 4, 7], [1, 3, 4, 3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 6, 3, 3, 1, 9, 5, 4, 2, 11, 6, 5, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, sigma), tf.math.pow(tf.math.add(grad, sigma), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 3, 3], [0, 0, 1, 3, 2], [83, 99, 27], [1, 0, 1, 0, 1, 0], [0, 7, 2], [0, 3, 3], [0], [0, 0, 1, 0, 0, 1, 0], [0, 0, 4, 3], [5, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1132206336.0, 21199136768.0, 97917845504.0, 278877601792.0, 591229616128.0, 1093753241600.0], "accuracy": [0.09840179979801178, 0.10315678268671036, 0.10447761416435242, 0.09417514503002167, 0.09879804402589798, 0.09906221181154251], "val_loss": [5317500416.0, 42534731776.0, 143549005824.0, 340259274752.0, 664562237440.0, 1148346957824.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]