[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925963401794434, 2.19032883644104, 1.7747849225997925, 1.3284558057785034, 1.0793085098266602, 0.929469108581543, 0.8589379191398621, 0.8092588186264038, 0.7829738855361938, 0.7575244307518005, 0.7226340770721436, 0.6902681589126587, 0.6513556241989136, 0.644402027130127, 0.6163740158081055, 0.5965546369552612, 0.579559862613678, 0.578730583190918, 0.559360921382904, 0.5570636987686157, 0.5397089123725891, 0.5333864092826843, 0.5296341180801392, 0.5026502013206482, 0.48649513721466064, 0.4941044747829437, 0.4743913412094116, 0.4660814702510834, 0.4597204625606537, 0.45714816451072693, 0.4429256021976471, 0.442116916179657, 0.43753042817115784, 0.41246193647384644, 0.4141806960105896, 0.4082869589328766, 0.39895886182785034, 0.3956093192100525, 0.3839828372001648, 0.3719775080680847, 0.38114261627197266, 0.3804284632205963, 0.3663104176521301], "accuracy": [0.1310262829065323, 0.32162198424339294, 0.4356095492839813, 0.5478800535202026, 0.6435081362724304, 0.6610751748085022, 0.6907938122749329, 0.6970016956329346, 0.709021270275116, 0.7054550051689148, 0.7375511527061462, 0.7380794882774353, 0.7555144429206848, 0.7582882046699524, 0.76106196641922, 0.7741381525993347, 0.7865539789199829, 0.7765156626701355, 0.7942147850990295, 0.793422281742096, 0.7930260300636292, 0.8000264167785645, 0.8016114234924316, 0.807158887386322, 0.819442629814148, 0.8115176558494568, 0.8241975903511047, 0.8259146809577942, 0.8240655064582825, 0.83119797706604, 0.8305375576019287, 0.8333113193511963, 0.8290846943855286, 0.8465195894241333, 0.8477083444595337, 0.841500461101532, 0.847840428352356, 0.8481045961380005, 0.8519350290298462, 0.8533879518508911, 0.8558974862098694, 0.8615770936012268, 0.8521991968154907], "val_loss": [2.246126413345337, 2.021409511566162, 1.1473788022994995, 0.9102172255516052, 0.7704321146011353, 0.7280169129371643, 0.6727453470230103, 0.6763126850128174, 0.6360260844230652, 0.6294745802879333, 0.5871361494064331, 0.5644629001617432, 0.557443380355835, 0.5269782543182373, 0.5253922343254089, 0.5082926154136658, 0.5003608465194702, 0.4809228479862213, 0.4823136329650879, 0.47458451986312866, 0.4690368175506592, 0.46472203731536865, 0.4654023349285126, 0.4479965269565582, 0.44237223267555237, 0.44230419397354126, 0.4347030520439148, 0.4331752061843872, 0.4351730942726135, 0.4212512969970703, 0.4145755469799042, 0.40821361541748047, 0.4031094014644623, 0.41664233803749084, 0.40123802423477173, 0.407931387424469, 0.40149247646331787, 0.38982895016670227, 0.39023271203041077, 0.39916738867759705, 0.4038436710834503, 0.3970533013343811, 0.39236685633659363], "val_accuracy": [0.4153333306312561, 0.46799999475479126, 0.6483333110809326, 0.6890000104904175, 0.7193333506584167, 0.7363333106040955, 0.7450000047683716, 0.746666669845581, 0.7433333396911621, 0.7606666684150696, 0.765999972820282, 0.7753333449363708, 0.778333306312561, 0.7879999876022339, 0.7993333339691162, 0.7973333597183228, 0.8090000152587891, 0.8083333373069763, 0.8133333325386047, 0.8106666803359985, 0.8246666789054871, 0.8193333148956299, 0.8273333311080933, 0.8346666693687439, 0.8353333473205566, 0.8346666693687439, 0.8413333296775818, 0.846666693687439, 0.843666672706604, 0.8543333411216736, 0.8586666584014893, 0.8569999933242798, 0.8533333539962769, 0.8586666584014893, 0.862333357334137, 0.8556666374206543, 0.8703333139419556, 0.8706666827201843, 0.8650000095367432, 0.8576666712760925, 0.8640000224113464, 0.8646666407585144, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 3, 2], [83, 99, 97], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303312063217163, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 7, 3, 5], [3, 0, 1, 2, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [8, 3, 2], [0, 1, 3], [0], [0, 1, 0, 0, 1, 1, 0], [0, 0, 9, 3], [3, 0, 2], [55, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [14593904.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.187689870595932, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.799123812634742e+29, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 3, 7, 3, 9, 8, 2, 8, 9], [0, 0, 1, 0, 2], [74, 99, 27, 88, 86], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [6, 1, 2, 1, 2, 2, 3, 5, 9, 1, 6, 0, 3, 4, 6, 9, 9], [0, 3, 3, 5, 4, 1, 2, 1, 1, 5], [0, 63, 50, 33], [0, 1, 0, 0, 1, 1, 1], [0, 7, 4, 3], [6, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 10, 4, 5, 27, 17, 10, 4, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, grad), grad)), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(grad, alpha), tf.math.negative(tf.math.multiply(tf.math.pow(beta, tf.math.divide_no_nan(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 0, 3, 5, 4, 0, 3], [0, 0, 1, 0, 2, 0, 2, 1, 0], [83, 99, 27, 87, 44], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 2, 1, 4, 2, 5, 9, 2, 4, 2, 2, 9], [0, 3, 3, 3, 2, 0, 5, 0], [0, 77, 37, 46, 9], [0, 0, 0, 0, 1, 1, 1], [5, 9, 5, 3], [0, 0, 4], [0, 87], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.pow(tf.math.negative(grad), tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.pow(tf.math.add(tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(grad, beta), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 21, 12, 9, 5, 21, 13, 8, 5, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 18}]