[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943387031555176, 2.1915125846862793, 1.7741496562957764, 1.3209806680679321, 1.0730174779891968, 0.9101482629776001, 0.830523669719696, 0.7813759446144104, 0.7623337507247925, 0.7363372445106506, 0.6962016224861145, 0.6554288864135742, 0.647777259349823, 0.6273936629295349, 0.616849422454834, 0.6056644916534424, 0.5878307819366455, 0.5878937244415283, 0.5578186511993408, 0.568924069404602, 0.5378961563110352, 0.5385779142379761, 0.5224614143371582, 0.5239299535751343, 0.5058999061584473, 0.4979455769062042, 0.48611578345298767, 0.48024100065231323, 0.46804583072662354, 0.45523324608802795, 0.45448166131973267, 0.4394960105419159, 0.4307194948196411, 0.43042176961898804, 0.4359692633152008, 0.4215449392795563, 0.41436654329299927, 0.4002538323402405, 0.4127746522426605, 0.4013531804084778, 0.39340871572494507, 0.3845006823539734, 0.3822396695613861, 0.38247111439704895, 0.35990259051322937, 0.35703107714653015, 0.36499667167663574, 0.3618542551994324, 0.36999446153640747, 0.34711065888404846, 0.34812670946121216, 0.3534882068634033, 0.3403153419494629, 0.3340144157409668], "accuracy": [0.12917712330818176, 0.32941487431526184, 0.44010037183761597, 0.5503896474838257, 0.6365077495574951, 0.6660943031311035, 0.6989829540252686, 0.7132478952407837, 0.7108704447746277, 0.7176066637039185, 0.7367587089538574, 0.7434949278831482, 0.7497028112411499, 0.7617223858833313, 0.7666094303131104, 0.772288978099823, 0.7815347909927368, 0.7746664881706238, 0.7869502305984497, 0.7821952104568481, 0.7922335267066956, 0.7928939461708069, 0.8018755912780762, 0.8013472557067871, 0.8014793395996094, 0.8096684813499451, 0.8173292875289917, 0.8182538747787476, 0.8173292875289917, 0.8271034359931946, 0.8245938420295715, 0.8359529972076416, 0.8348963260650635, 0.837141752243042, 0.8350284099578857, 0.8383304476737976, 0.8426892161369324, 0.8521991968154907, 0.8448025584220886, 0.8457271456718445, 0.8496896028518677, 0.8545766472816467, 0.8537842035293579, 0.8524633646011353, 0.8589354157447815, 0.8593316674232483, 0.8615770936012268, 0.8639545440673828, 0.8537842035293579, 0.8636903762817383, 0.8614450097084045, 0.8650112152099609, 0.8644828796386719, 0.8702945709228516], "val_loss": [2.245863437652588, 2.024540424346924, 1.1221238374710083, 0.8614134192466736, 0.7602570056915283, 0.7221987247467041, 0.6745585203170776, 0.6816837787628174, 0.6419760584831238, 0.6339482665061951, 0.5841988325119019, 0.5680888891220093, 0.5573946833610535, 0.5345464944839478, 0.5235341787338257, 0.5227691531181335, 0.5185906291007996, 0.5051727890968323, 0.5063689947128296, 0.49271005392074585, 0.5032866597175598, 0.493025541305542, 0.49203768372535706, 0.4788620173931122, 0.46258196234703064, 0.45804598927497864, 0.46282461285591125, 0.45864883065223694, 0.4384172260761261, 0.4390996992588043, 0.4306022822856903, 0.4290199875831604, 0.4362034499645233, 0.4455976188182831, 0.44008511304855347, 0.43133285641670227, 0.43484410643577576, 0.4305063486099243, 0.4268089234828949, 0.4230079650878906, 0.42575663328170776, 0.42327481508255005, 0.424775630235672, 0.41568994522094727, 0.40886780619621277, 0.4140435457229614, 0.44143328070640564, 0.4432295262813568, 0.416635662317276, 0.4172598421573639, 0.41609126329421997, 0.42244455218315125, 0.42273542284965515, 0.4343881905078888], "val_accuracy": [0.4336666762828827, 0.48899999260902405, 0.6516666412353516, 0.7043333053588867, 0.7166666388511658, 0.734333336353302, 0.7436666488647461, 0.7516666650772095, 0.7393333315849304, 0.7586666941642761, 0.7773333191871643, 0.7839999794960022, 0.7903333306312561, 0.8046666383743286, 0.8106666803359985, 0.7983333468437195, 0.8069999814033508, 0.812666654586792, 0.8146666884422302, 0.8199999928474426, 0.8236666917800903, 0.8206666707992554, 0.8180000185966492, 0.8320000171661377, 0.8420000076293945, 0.8289999961853027, 0.8389999866485596, 0.8346666693687439, 0.840666651725769, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.8493333458900452, 0.8513333201408386, 0.8510000109672546, 0.8546666502952576, 0.8583333492279053, 0.8529999852180481, 0.8586666584014893, 0.8556666374206543, 0.859666645526886, 0.859666645526886, 0.8603333234786987, 0.8579999804496765, 0.8629999756813049, 0.8616666793823242, 0.8633333444595337, 0.8606666922569275, 0.8640000224113464, 0.859000027179718, 0.859333336353302, 0.8550000190734863, 0.859666645526886, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293272018432617, 2.1887094974517822, 1.7657512426376343, 1.3473408222198486, 1.0715755224227905, 0.9098283052444458, 0.8342282176017761, 0.7879334092140198, 0.7534735798835754, 0.7191606760025024, 0.7075300216674805, 0.6686155200004578, 0.6407374739646912, 0.6291946172714233, 0.5944460034370422, 0.5837048888206482, 0.569064736366272, 0.5569723844528198, 0.5495172142982483, 0.5353935956954956, 0.5320597290992737, 0.5147435069084167, 0.5062037706375122, 0.489287406206131, 0.48440659046173096, 0.46248140931129456, 0.45799437165260315, 0.45952415466308594, 0.42832669615745544, 0.4286644756793976, 0.42380291223526, 0.41530299186706543, 0.40448954701423645, 0.40508267283439636, 0.38879090547561646, 0.38895347714424133, 0.3769877254962921, 0.3730084300041199, 0.3635160028934479, 0.3428404927253723, 0.35834428668022156, 0.3462771475315094, 0.3411484360694885, 0.33408963680267334], "accuracy": [0.12362963706254959, 0.32360321283340454, 0.4391758143901825, 0.5477479696273804, 0.6357152462005615, 0.6643772125244141, 0.6942279934883118, 0.7137762308120728, 0.7119271159172058, 0.7268524765968323, 0.7325320243835449, 0.7374191284179688, 0.7614582180976868, 0.7618544697761536, 0.7758552432060242, 0.7843085527420044, 0.7821952104568481, 0.7901201844215393, 0.7942147850990295, 0.8029322624206543, 0.7994980812072754, 0.8031964302062988, 0.8078193068504333, 0.8181217908859253, 0.8136309385299683, 0.822348415851593, 0.8343679904937744, 0.8274996876716614, 0.8364813327789307, 0.8397833704948425, 0.8397833704948425, 0.8380662798881531, 0.8495575189590454, 0.8465195894241333, 0.8471800088882446, 0.8565579056739807, 0.8594637513160706, 0.8580108284950256, 0.8622375130653381, 0.8681812286376953, 0.8642187118530273, 0.8688416481018066, 0.8705587387084961, 0.8692378997802734], "val_loss": [2.245506525039673, 2.020981788635254, 1.1389869451522827, 0.8862075209617615, 0.7414458990097046, 0.6700918674468994, 0.6466942429542542, 0.6421346664428711, 0.6120977401733398, 0.5824328660964966, 0.5515303611755371, 0.534166693687439, 0.5205066204071045, 0.5056039094924927, 0.5118788480758667, 0.5003566145896912, 0.4944691061973572, 0.4750519096851349, 0.47396883368492126, 0.46682241559028625, 0.4610362946987152, 0.4671954810619354, 0.44659101963043213, 0.4342956840991974, 0.4320348799228668, 0.4235241413116455, 0.40849363803863525, 0.4057680368423462, 0.4045262932777405, 0.40166938304901123, 0.3885672688484192, 0.37151995301246643, 0.37870657444000244, 0.37637320160865784, 0.37236112356185913, 0.3709883689880371, 0.37782323360443115, 0.3715435266494751, 0.36115726828575134, 0.3616178333759308, 0.35807329416275024, 0.36974674463272095, 0.3621271848678589, 0.3668729364871979], "val_accuracy": [0.437333345413208, 0.44066667556762695, 0.6543333530426025, 0.684333324432373, 0.7279999852180481, 0.7493333220481873, 0.7609999775886536, 0.7559999823570251, 0.7493333220481873, 0.7766666412353516, 0.7766666412353516, 0.7913333177566528, 0.7953333258628845, 0.8026666641235352, 0.800000011920929, 0.8063333630561829, 0.8133333325386047, 0.8173333406448364, 0.8186666369438171, 0.8230000138282776, 0.8263333439826965, 0.8253333568572998, 0.8303333520889282, 0.8399999737739563, 0.8379999995231628, 0.8443333506584167, 0.8426666855812073, 0.8426666855812073, 0.8450000286102295, 0.8533333539962769, 0.8413333296775818, 0.8543333411216736, 0.8659999966621399, 0.8613333106040955, 0.8616666793823242, 0.8646666407585144, 0.8650000095367432, 0.8690000176429749, 0.8730000257492065, 0.8673333525657654, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 9, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1], [0, 1, 2], [1, 3, 5], [0], [0, 0, 1, 0, 1, 1, 1], [8, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 3, 6], [1, 4, 1, 7], [0]], "fitness": -0.10685714334249496, "mapping_values": [1, 6, 4, 2, 3, 6, 3, 3, 0, 3, 2, 1, 1, 8, 4, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(alpha, grad))))", "other_info": {"loss": [9.567592604725838e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5701437875718333e+30, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10700000077486038, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 3, 9, 3], [0, 1, 1, 2, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 5], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [5, 0, 4], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 5, 3, 2, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 96], [1, 1, 1, 1, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 5, 4, 3, 8, 4], [0, 0, 4, 1], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1212963.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20221899449825287, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [47751098368.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 3, 4, 9], [0, 0, 1, 0, 2, 1], [83, 99, 27, 41], [1, 1, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 14, 8, 6, 4, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310166835784912, 2.310704469680786, 2.3092689514160156, 2.309666872024536, 2.309873104095459, 2.309577226638794], "accuracy": [0.09166556596755981, 0.0882314071059227, 0.08875974267721176, 0.09272222965955734, 0.0956280529499054, 0.09074098616838455], "val_loss": [2.308276891708374, 2.308276891708374, 2.308276891708374, 2.308276891708374, 2.308276891708374, 2.308276891708374], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]