[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293133020401001, 2.19022798538208, 1.7696534395217896, 1.3497990369796753, 1.0699971914291382, 0.9240359663963318, 0.8323602676391602, 0.8210989832878113, 0.7622392773628235, 0.7397797703742981, 0.7141313552856445, 0.6724233627319336, 0.6483349800109863, 0.6112856864929199, 0.607118546962738, 0.5911219120025635, 0.5805725455284119, 0.5629417300224304, 0.5559377670288086, 0.5416460037231445, 0.5318018794059753, 0.533933699131012, 0.5089214444160461, 0.4934670925140381, 0.4816080927848816, 0.47864603996276855, 0.4659341871738434, 0.4601123034954071, 0.4457751512527466, 0.4421285390853882, 0.4237039387226105, 0.4228364825248718, 0.4185740649700165, 0.40166786313056946, 0.4017080068588257, 0.38453760743141174, 0.38338780403137207, 0.3784742057323456, 0.3767331838607788, 0.36459559202194214, 0.36359140276908875, 0.3644258975982666, 0.3549848794937134], "accuracy": [0.12878087162971497, 0.3291507065296173, 0.4445911943912506, 0.5398229956626892, 0.6277902722358704, 0.6600185036659241, 0.693831741809845, 0.7103421092033386, 0.7152291536331177, 0.7217012047767639, 0.7288337349891663, 0.7450799345970154, 0.7491744756698608, 0.7677981853485107, 0.7684586048126221, 0.7713643908500671, 0.7861577272415161, 0.7866860628128052, 0.7885351777076721, 0.8000264167785645, 0.7954035401344299, 0.7975168228149414, 0.8059701323509216, 0.8074230551719666, 0.8175934553146362, 0.8129705190658569, 0.8234050869941711, 0.8255184292793274, 0.8322546482086182, 0.8330471515655518, 0.8352925777435303, 0.8392550349235535, 0.8376700282096863, 0.8428213000297546, 0.8454629778862, 0.8543124794960022, 0.8531237840652466, 0.8564258217811584, 0.8560295701026917, 0.8585391640663147, 0.8619733452796936, 0.8597279191017151, 0.8652753829956055], "val_loss": [2.24617600440979, 2.0179169178009033, 1.1337953805923462, 0.891232430934906, 0.7755299210548401, 0.7105402946472168, 0.6764798760414124, 0.6648098230361938, 0.6496107578277588, 0.6343717575073242, 0.5843403339385986, 0.5641956925392151, 0.5435123443603516, 0.5408869385719299, 0.533278226852417, 0.5265645384788513, 0.5243956446647644, 0.5167436599731445, 0.5054891109466553, 0.4986005425453186, 0.4904661476612091, 0.48158207535743713, 0.4863358438014984, 0.46858805418014526, 0.4691446125507355, 0.4591708183288574, 0.45437052845954895, 0.4501079022884369, 0.4434966742992401, 0.4512365460395813, 0.4478238821029663, 0.4404830038547516, 0.4384135603904724, 0.4442703425884247, 0.43219807744026184, 0.42421045899391174, 0.438656747341156, 0.4276697635650635, 0.4173841178417206, 0.4167790412902832, 0.4252169728279114, 0.4192984998226166, 0.4187195301055908], "val_accuracy": [0.4230000078678131, 0.44466665387153625, 0.6470000147819519, 0.687333345413208, 0.7229999899864197, 0.7310000061988831, 0.753333330154419, 0.7549999952316284, 0.7590000033378601, 0.7583333253860474, 0.7710000276565552, 0.7786666750907898, 0.7933333516120911, 0.7913333177566528, 0.8009999990463257, 0.800000011920929, 0.7990000247955322, 0.8033333420753479, 0.8130000233650208, 0.8183333277702332, 0.8159999847412109, 0.8266666531562805, 0.8193333148956299, 0.8366666436195374, 0.8346666693687439, 0.8356666564941406, 0.8336666822433472, 0.8393333554267883, 0.8446666598320007, 0.8416666388511658, 0.8416666388511658, 0.8446666598320007, 0.8420000076293945, 0.8456666469573975, 0.8539999723434448, 0.8533333539962769, 0.846666693687439, 0.8576666712760925, 0.8556666374206543, 0.8519999980926514, 0.8566666841506958, 0.8516666889190674, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 2, 3, 7, 5, 9, 8, 2, 3, 4, 2, 0, 7, 6, 7, 4, 4, 3, 3, 9, 7, 2, 0, 2, 3, 7, 9, 3, 3, 8, 6, 4, 9, 3, 8, 8, 0, 1, 2, 3, 9], [3, 0, 1, 0, 2, 0, 2, 1, 3, 1, 3, 1, 2, 0, 3, 2, 0, 2, 3, 1, 0, 3, 3, 3, 0, 1, 3], [83, 35, 27, 24, 21, 19, 3, 95, 26, 21, 0, 36], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [65, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 72, 45, 27, 12, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 42, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.multiply(alpha, tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.multiply(grad, alpha), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(alpha, grad), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))))))), grad), grad)), tf.math.subtract(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), alpha))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 3, 2, 3, 8, 9, 2, 1, 3, 7, 5, 9], [0, 0, 1, 0, 2, 3, 0], [11, 99, 27, 67, 92, 99], [0, 0, 1, 0, 1, 1], [8, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 4, 2], [4, 1, 4, 2], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 13, 7, 6, 6, 3, 3, 1, 8, 4, 4, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(grad, alpha), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3036949634552, 2.5475120544433594, 21.10917854309082, 137.2283477783203, 401.732421875, 853.6497192382812], "accuracy": [0.10606260597705841, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.312972068786621, 4.551598072052002, 68.5241928100586, 266.1406555175781, 633.9689331054688, 1219.547119140625], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 9], [0, 3, 3], [95], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035171031951904, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 1, 3, 1, 3, 3, 4, 6, 5], [0, 0, 0, 0, 2, 2, 3, 1, 1], [83, 99, 27, 95], [0, 0, 0, 0, 1, 1], [0, 1, 2, 9], [0, 3, 3], [0, 76], [0, 0, 1, 0, 1, 1, 1], [0, 0, 8, 8], [0, 0, 6], [0, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 4, 6, 4, 2, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.pow(grad, tf.math.divide_no_nan(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]