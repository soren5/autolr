[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939870357513428, 2.19058895111084, 1.7822948694229126, 1.361085057258606, 1.0595158338546753, 0.9433553814888, 0.8691608309745789, 0.8255093097686768, 0.7764551043510437, 0.7520570755004883, 0.7131571173667908, 0.6843119263648987, 0.6570789813995361, 0.6363084316253662, 0.6150926947593689, 0.6059224605560303, 0.5873389840126038, 0.5785501599311829, 0.5645924806594849, 0.5645632743835449, 0.5419682860374451, 0.5547996759414673, 0.5382450222969055, 0.5296254754066467, 0.5092279314994812, 0.49615541100502014, 0.5012802481651306, 0.4838809370994568, 0.48494061827659607, 0.4619080424308777, 0.460269033908844, 0.45308205485343933, 0.43165624141693115, 0.4422241449356079, 0.4302724003791809, 0.4104984402656555, 0.41827890276908875, 0.4033442437648773, 0.4015069305896759, 0.39498376846313477, 0.3749907314777374, 0.386493444442749, 0.37972480058670044, 0.3793700635433197, 0.3658210039138794, 0.3723173439502716, 0.36382150650024414, 0.3658362925052643, 0.3514297902584076, 0.34744974970817566, 0.3489105999469757], "accuracy": [0.12957337498664856, 0.3255844712257385, 0.43468499183654785, 0.5383700728416443, 0.6336019039154053, 0.6605468392372131, 0.6769251227378845, 0.7018887996673584, 0.7016246318817139, 0.7152291536331177, 0.726192057132721, 0.7329282760620117, 0.7576277852058411, 0.7537974119186401, 0.7621186375617981, 0.761590301990509, 0.7746664881706238, 0.7759873270988464, 0.77677983045578, 0.778761088848114, 0.7877426743507385, 0.7852331399917603, 0.7928939461708069, 0.7944789528846741, 0.8000264167785645, 0.8112534880638123, 0.8042530417442322, 0.809140145778656, 0.8152159452438354, 0.8230088353157043, 0.8227446675300598, 0.8273676037788391, 0.8317263126373291, 0.8235371708869934, 0.835160493850708, 0.8436138033866882, 0.8388587832450867, 0.8381983637809753, 0.8454629778862, 0.850350022315979, 0.8529917001724243, 0.8488970994949341, 0.8512746095657349, 0.852859616279602, 0.8577466607093811, 0.8515387773513794, 0.8589354157447815, 0.8511425256729126, 0.8660678863525391, 0.8603883385658264, 0.8553691506385803], "val_loss": [2.246623992919922, 2.0214807987213135, 1.1428568363189697, 0.8509345650672913, 0.7462968230247498, 0.7045359015464783, 0.6520428657531738, 0.6248063445091248, 0.6144035458564758, 0.6025609970092773, 0.5686197280883789, 0.555183470249176, 0.5290340781211853, 0.5215598344802856, 0.5134219527244568, 0.5045939683914185, 0.494505375623703, 0.4877146780490875, 0.4840405285358429, 0.48069140315055847, 0.478790283203125, 0.4731939435005188, 0.4641769230365753, 0.45980510115623474, 0.45935773849487305, 0.45763111114501953, 0.44517436623573303, 0.44081419706344604, 0.42953115701675415, 0.4259357154369354, 0.44011691212654114, 0.4281678795814514, 0.42335057258605957, 0.4194178581237793, 0.41926395893096924, 0.41034257411956787, 0.4192500710487366, 0.41453298926353455, 0.41879507899284363, 0.4141339063644409, 0.40153971314430237, 0.39482995867729187, 0.40824630856513977, 0.39865124225616455, 0.3936038017272949, 0.3906559646129608, 0.3991072475910187, 0.4052105247974396, 0.41231241822242737, 0.41746801137924194, 0.4028528928756714], "val_accuracy": [0.41333332657814026, 0.44200000166893005, 0.6489999890327454, 0.6980000138282776, 0.7176666855812073, 0.7406666874885559, 0.7379999756813049, 0.7540000081062317, 0.7559999823570251, 0.7766666412353516, 0.7663333415985107, 0.7820000052452087, 0.7879999876022339, 0.7986666560173035, 0.8006666898727417, 0.8033333420753479, 0.8050000071525574, 0.8116666674613953, 0.8109999895095825, 0.8100000023841858, 0.8116666674613953, 0.8190000057220459, 0.8173333406448364, 0.8180000185966492, 0.8330000042915344, 0.8386666774749756, 0.8360000252723694, 0.8379999995231628, 0.846666693687439, 0.8460000157356262, 0.8426666855812073, 0.8536666631698608, 0.8463333249092102, 0.843666672706604, 0.8463333249092102, 0.8629999756813049, 0.8529999852180481, 0.859666645526886, 0.8603333234786987, 0.8619999885559082, 0.8650000095367432, 0.8686666488647461, 0.8663333058357239, 0.8683333396911621, 0.8650000095367432, 0.8726666569709778, 0.8663333058357239, 0.8636666536331177, 0.8633333444595337, 0.8553333282470703, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 8, 3, 1, 3], [0, 0, 1, 1, 2], [38, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [8], [0, 0, 0, 0, 1, 1, 1, 1], [0, 3, 4, 3], [0, 0, 4, 7], [0, 58], [1, 1], [7], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [34441360.0, 4949989888.0, 84688273408.0, 593065476096.0, 2614190145536.0, 8674863480832.0], "accuracy": [0.1014397069811821, 0.10276053100824356, 0.10579843819141388, 0.10210011899471283, 0.0940430611371994, 0.09615638852119446], "val_loss": [339026176.0, 18270244864.0, 196087709696.0, 1069004357632.0, 4004053516288.0, 11810971320320.0], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27, 82], [0, 1, 1, 0, 1, 1], [0, 3, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 6, 3], [4, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [22.55437469482422, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18980319797992706, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [128.16358947753906, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 4, 3], [0, 0, 1, 3, 2], [83, 99, 27], [1, 1, 1, 0, 1, 1], [0, 1, 2], [4, 3, 2], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 5, 3], [0, 0, 4], [0, 85], [0, 1], [0], [1], [0]], "fitness": -0.09942857176065445, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3065128326416016, 3.024822473526001, 289.0340576171875, 71776.875, 18567804.0, 4698982400.0], "accuracy": [0.09576013684272766, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.304384469985962, 12.415205955505371, 2779.592529296875, 706562.5625, 181777840.0, 45880631296.0], "val_accuracy": [0.10499999672174454, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 6], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 5], [0, 3, 3], [0], [0, 1, 0, 0, 1, 0, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 0], [0], [3], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3091609477996826, 2.3097221851348877, 2.310453414916992, 2.3107945919036865, 2.3095154762268066, 2.3103113174438477], "accuracy": [0.09140139818191528, 0.09298639744520187, 0.09245806187391281, 0.09285431355237961, 0.09509972482919693, 0.09100515395402908], "val_loss": [2.3083293437957764, 2.3083293437957764, 2.3083293437957764, 2.3083293437957764, 2.3083293437957764, 2.3083293437957764], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]