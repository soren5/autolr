[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294402837753296, 2.191784143447876, 1.7906339168548584, 1.3467456102371216, 1.084222435951233, 0.938300609588623, 0.8562437295913696, 0.8266937136650085, 0.7695404887199402, 0.7649222612380981, 0.7023670673370361, 0.6842043399810791, 0.6590343117713928, 0.6313408017158508, 0.6209220886230469, 0.6009068489074707, 0.5871893763542175, 0.5751737952232361, 0.5722596645355225, 0.5577224493026733, 0.5537009239196777, 0.5402576923370361, 0.5372006893157959, 0.5246306657791138, 0.5040381550788879, 0.49146366119384766, 0.4938775300979614, 0.47096019983291626, 0.4570540189743042, 0.44601714611053467, 0.44202709197998047, 0.43244677782058716, 0.42641481757164, 0.42928561568260193, 0.41872403025627136, 0.4137718379497528, 0.39278191328048706, 0.3995112180709839, 0.38769128918647766, 0.38186970353126526, 0.3681454360485077], "accuracy": [0.12468630075454712, 0.32941487431526184, 0.4333641529083252, 0.542728841304779, 0.643772304058075, 0.6579051613807678, 0.6823405027389526, 0.6935675740242004, 0.694360077381134, 0.7057191729545593, 0.7331924438476562, 0.7323999404907227, 0.7532690763473511, 0.7621186375617981, 0.7671377658843994, 0.7736098170280457, 0.7788931727409363, 0.7786290049552917, 0.7872143983840942, 0.7906485199928284, 0.7832518815994263, 0.7967243194580078, 0.7989697456359863, 0.7923656105995178, 0.8034605979919434, 0.8127063512802124, 0.8083476424217224, 0.81548011302948, 0.8202351331710815, 0.8245938420295715, 0.8264430165290833, 0.8278959393501282, 0.8391229510307312, 0.8315942287445068, 0.8397833704948425, 0.8408400416374207, 0.848368763923645, 0.8445383906364441, 0.8506141901016235, 0.847840428352356, 0.8580108284950256], "val_loss": [2.2461392879486084, 2.0219736099243164, 1.1589734554290771, 0.908074140548706, 0.784578263759613, 0.7462806701660156, 0.6909818649291992, 0.6620222926139832, 0.6586272716522217, 0.6438999176025391, 0.5957866907119751, 0.5679292678833008, 0.5574157238006592, 0.5342061519622803, 0.5264190435409546, 0.5036635994911194, 0.5075492262840271, 0.4934633672237396, 0.49799755215644836, 0.49517086148262024, 0.4821898341178894, 0.47741246223449707, 0.46897220611572266, 0.45957115292549133, 0.459922194480896, 0.4405127465724945, 0.435814768075943, 0.4298020899295807, 0.4268586337566376, 0.41463518142700195, 0.4194463789463043, 0.4030061960220337, 0.40169742703437805, 0.40209126472473145, 0.3924930691719055, 0.3821505606174469, 0.38221317529678345, 0.3817884027957916, 0.3826770484447479, 0.3779420852661133, 0.3780333995819092], "val_accuracy": [0.4533333480358124, 0.46166667342185974, 0.6510000228881836, 0.6899999976158142, 0.6953333616256714, 0.703000009059906, 0.7263333201408386, 0.7403333187103271, 0.7406666874885559, 0.746666669845581, 0.7553333044052124, 0.7739999890327454, 0.7850000262260437, 0.7900000214576721, 0.79666668176651, 0.7990000247955322, 0.8006666898727417, 0.8040000200271606, 0.800000011920929, 0.8056666851043701, 0.8063333630561829, 0.8090000152587891, 0.8180000185966492, 0.8220000267028809, 0.8146666884422302, 0.8263333439826965, 0.8386666774749756, 0.8403333425521851, 0.8363333344459534, 0.8376666903495789, 0.8423333168029785, 0.8479999899864197, 0.8489999771118164, 0.8519999980926514, 0.8579999804496765, 0.859666645526886, 0.859666645526886, 0.8543333411216736, 0.8550000190734863, 0.8579999804496765, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [3, 1, 2, 2, 3, 0, 0, 6, 9], [5, 2, 3, 1, 0, 2], [0, 5], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.2782857120037079, "mapping_values": [1, 10, 5, 5, 2, 15, 9, 6, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(grad, beta), tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(grad, alpha))), tf.constant(0.0, shape=shape, dtype=tf.float32))), beta), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3989827632904053, 2.5543947219848633, 2.289172410964966, 2.3768692016601562, 2.380441904067993, 2.342756986618042, 2.3092472553253174, 2.305323839187622, 2.3036305904388428], "accuracy": [0.2082948088645935, 0.10513802617788315, 0.1224408894777298, 0.1628582775592804, 0.2156914472579956, 0.17131158709526062, 0.1014397069811821, 0.09087307006120682, 0.1022322028875351], "val_loss": [3.862779378890991, 2.3028604984283447, 2.136441707611084, 1.8965871334075928, 2.3019721508026123, 2.315063238143921, 2.304802656173706, 2.3032028675079346, 2.3027093410491943], "val_accuracy": [0.1456666737794876, 0.09966666996479034, 0.15533334016799927, 0.28033334016799927, 0.1003333330154419, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 77, 27], [0, 1, 1, 1, 0, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 1], [48, 58], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 1, 5, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 1, 1, 1], [2, 1, 2], [0, 3, 4], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [8, 3, 4, 3, 4, 8, 4, 8, 3, 3, 7, 8, 0, 7, 9], [0, 0, 4, 5, 3, 7, 5, 2, 7], [0, 58, 3], [0, 1, 1], [6], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 1, 2, 1, 24, 15, 9, 3, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.sqrt(grad), tf.math.multiply(grad, tf.math.multiply(sigma, tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.add(grad, beta)))))))))), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 7], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 2, 6, 4, 8], [0, 1, 0, 1, 2], [0, 78], [0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 4, 3, 4, 9], [0, 0, 1], [0, 58, 96], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1107647872.0, 21281775616.0, 98927853568.0, 274281316352.0, 589768032256.0, 1078109470720.0], "accuracy": [0.1014397069811821, 0.09615638852119446, 0.09959053993225098, 0.09576013684272766, 0.09681680053472519, 0.09760929644107819], "val_loss": [5214424576.0, 41710190592.0, 140766707712.0, 333663109120.0, 651678056448.0, 1126090670080.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 9, 6, 3, 3, 2, 1, 1, 0], "tree_depth": 15}]