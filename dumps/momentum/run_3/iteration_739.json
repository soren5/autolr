[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293283462524414, 2.1864609718322754, 1.7556978464126587, 1.3317681550979614, 1.0573087930679321, 0.927091658115387, 0.8340935707092285, 0.8025473356246948, 0.7535966038703918, 0.7215569615364075, 0.6969634890556335, 0.6729733347892761, 0.6570592522621155, 0.6207768321037292, 0.5893864035606384, 0.5925517082214355, 0.5820485353469849, 0.5521286725997925, 0.5452350974082947, 0.5354253053665161, 0.5261114835739136, 0.526055634021759, 0.5126001238822937, 0.49117931723594666, 0.4848044514656067, 0.4609586298465729, 0.4752925634384155, 0.46687713265419006, 0.44473010301589966, 0.4378199577331543, 0.44374221563339233, 0.42388784885406494, 0.42084208130836487, 0.40839412808418274, 0.4038851261138916, 0.39700183272361755, 0.3987017273902893, 0.38634175062179565, 0.3821476399898529, 0.3901927173137665, 0.3768966794013977, 0.3714318573474884, 0.3689880967140198, 0.3551184833049774, 0.35828131437301636, 0.3563846945762634, 0.3531282842159271, 0.351788192987442, 0.3669983446598053, 0.35065674781799316, 0.34416237473487854, 0.3423011898994446, 0.3397241234779358, 0.33251819014549255, 0.3320194482803345], "accuracy": [0.13419628143310547, 0.33284902572631836, 0.44485536217689514, 0.5513142347335815, 0.6439043879508972, 0.6610751748085022, 0.6944921612739563, 0.6993792057037354, 0.7108704447746277, 0.7189275026321411, 0.7371549606323242, 0.7437590956687927, 0.7494386434555054, 0.7701756954193115, 0.774270236492157, 0.7751948237419128, 0.7790252566337585, 0.7854973077774048, 0.787082314491272, 0.7936864495277405, 0.7987055778503418, 0.8000264167785645, 0.8016114234924316, 0.8104609847068787, 0.817461371421814, 0.8253863453865051, 0.8222163319587708, 0.8198388814926147, 0.8293488025665283, 0.8366134166717529, 0.8248580098152161, 0.8409721255302429, 0.8368775844573975, 0.8477083444595337, 0.8466516733169556, 0.8496896028518677, 0.845859169960022, 0.850350022315979, 0.8515387773513794, 0.8515387773513794, 0.8551049828529358, 0.8610487580299377, 0.8590674996376038, 0.8622375130653381, 0.8644828796386719, 0.859199583530426, 0.8603883385658264, 0.8664641380310059, 0.8656716346740723, 0.8602562546730042, 0.8705587387084961, 0.868049144744873, 0.8642187118530273, 0.8709549307823181, 0.8706908226013184], "val_loss": [2.2455549240112305, 2.0143227577209473, 1.1403688192367554, 0.8831720352172852, 0.7645124793052673, 0.704143226146698, 0.6365647912025452, 0.6351436972618103, 0.6322397589683533, 0.5872859954833984, 0.5431458353996277, 0.5213802456855774, 0.5141441822052002, 0.5092437863349915, 0.49418905377388, 0.4802279472351074, 0.4698742628097534, 0.4649319648742676, 0.45734837651252747, 0.4507865011692047, 0.44483572244644165, 0.4365048110485077, 0.44668814539909363, 0.4258541166782379, 0.4182254672050476, 0.4175218939781189, 0.4137292504310608, 0.4060438573360443, 0.4049434959888458, 0.40883177518844604, 0.40292003750801086, 0.3980155289173126, 0.39383161067962646, 0.39376482367515564, 0.39395907521247864, 0.38453036546707153, 0.38361865282058716, 0.3823169767856598, 0.39117711782455444, 0.3986344337463379, 0.3983508348464966, 0.3929559588432312, 0.3814550042152405, 0.3831402063369751, 0.39516669511795044, 0.39303380250930786, 0.3717420697212219, 0.3879811465740204, 0.38978809118270874, 0.3935626149177551, 0.3894525468349457, 0.39452502131462097, 0.38774362206459045, 0.3873235583305359, 0.40553542971611023], "val_accuracy": [0.42399999499320984, 0.46033334732055664, 0.6463333368301392, 0.6923333406448364, 0.7133333086967468, 0.7436666488647461, 0.762666642665863, 0.7603333592414856, 0.7586666941642761, 0.7749999761581421, 0.7803333401679993, 0.7910000085830688, 0.7993333339691162, 0.8013333082199097, 0.8006666898727417, 0.7990000247955322, 0.8086666464805603, 0.812333345413208, 0.8190000057220459, 0.8186666369438171, 0.8259999752044678, 0.8386666774749756, 0.8243333101272583, 0.8353333473205566, 0.8420000076293945, 0.8420000076293945, 0.8483333587646484, 0.8523333072662354, 0.8489999771118164, 0.8463333249092102, 0.8539999723434448, 0.8539999723434448, 0.8576666712760925, 0.8606666922569275, 0.8576666712760925, 0.862666666507721, 0.8600000143051147, 0.8633333444595337, 0.862333357334137, 0.8616666793823242, 0.859000027179718, 0.862333357334137, 0.8636666536331177, 0.8669999837875366, 0.8629999756813049, 0.8610000014305115, 0.8740000128746033, 0.871999979019165, 0.8756666779518127, 0.8763333559036255, 0.874666690826416, 0.8709999918937683, 0.8659999966621399, 0.8659999966621399, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [1, 0, 1, 0, 1, 0], [0, 1, 2], [1, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [6, 0, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031861782073975, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 1, 4, 9, 5, 2, 0, 6, 9, 0], [0, 0, 1, 0, 3, 2, 2], [83, 99, 27, 88, 16], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 4, 4, 3, 4, 9], [0, 0, 0, 5], [0, 58, 22, 33], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 14, 7, 5, 6, 3, 3, 1, 10, 6, 4, 4, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, grad)))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 2, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 57], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [3, 3, 4, 5, 1, 8, 8, 2, 7, 0, 7, 9, 2, 6, 3, 3, 4, 9, 9, 2, 4, 9, 4, 4, 2, 1, 1, 6, 7, 0, 1, 3, 5, 0, 2, 6, 5, 0], [1, 0, 3, 4, 1, 6, 0, 0, 4, 0, 1, 6, 7, 0, 2, 1, 7, 0, 7, 2, 2, 6], [0, 31, 12, 5, 57, 46, 61, 21, 2, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 0, 7, 4, 3, 2, 60, 38, 22, 10], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(alpha, grad), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(beta), tf.math.subtract(alpha, grad)))))), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad))))))))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.square(tf.math.negative(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 5, 3, 3], [3, 0, 1, 0, 2], [8, 83, 37], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 3], [72], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 4, 3, 2, 2, 9], [0, 0, 4, 0], [0, 58, 5, 88], [0, 0], [0, 9], [3], [0]], "fitness": -0.0965714305639267, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 1, 11, 7, 4, 4, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309947967529297, 2.3105599880218506, 2.3098480701446533, 2.3101956844329834, 2.3103487491607666, 2.30967116355896], "accuracy": [0.09576013684272766, 0.08691058307886124, 0.09285431355237961, 0.09206181764602661, 0.09113723784685135, 0.09074098616838455], "val_loss": [2.3087270259857178, 2.3087270259857178, 2.3087270259857178, 2.3087270259857178, 2.3087270259857178, 2.3087270259857178], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]