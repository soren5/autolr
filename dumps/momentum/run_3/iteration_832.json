[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8397142887115479, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931790351867676, 2.1873724460601807, 1.7606396675109863, 1.3455778360366821, 1.0767961740493774, 0.9306482076644897, 0.841442883014679, 0.8067463040351868, 0.7587591409683228, 0.7508094310760498, 0.6820586323738098, 0.689216673374176, 0.6396432518959045, 0.6124769449234009, 0.6053115129470825, 0.5894032716751099, 0.5788774490356445, 0.563579261302948, 0.5621777176856995, 0.5505645275115967, 0.5353113412857056, 0.5148439407348633, 0.5116199851036072, 0.5164810419082642, 0.496571809053421, 0.48293542861938477, 0.4693821370601654, 0.4584510624408722, 0.45375755429267883, 0.4485416114330292, 0.4344000220298767, 0.4233812391757965, 0.42338892817497253, 0.41880643367767334, 0.40652793645858765, 0.3992604613304138, 0.3932490646839142, 0.39355966448783875, 0.38370072841644287, 0.37530064582824707, 0.37061622738838196, 0.3629177212715149, 0.36223241686820984, 0.35365962982177734, 0.346778929233551, 0.3534812927246094], "accuracy": [0.13076211512088776, 0.3333773612976074, 0.4399682879447937, 0.5410117506980896, 0.6288469433784485, 0.6654338836669922, 0.6971337795257568, 0.7051908373832703, 0.7119271159172058, 0.7102100253105164, 0.7374191284179688, 0.7376832365989685, 0.755118191242218, 0.7708360552787781, 0.7729493975639343, 0.7709681391716003, 0.7810064554214478, 0.7873464822769165, 0.7902522683143616, 0.7924976944923401, 0.8004226684570312, 0.8058380484580994, 0.7961959838867188, 0.8010830879211426, 0.8037247657775879, 0.8156121969223022, 0.8231409192085266, 0.8228767514228821, 0.8261788487434387, 0.8286884427070618, 0.837141752243042, 0.8374059200286865, 0.8384625315666199, 0.8396512866020203, 0.8465195894241333, 0.8459912538528442, 0.8453308939933777, 0.8532558679580688, 0.8527275323867798, 0.8533879518508911, 0.8531237840652466, 0.8607845902442932, 0.857218325138092, 0.8663320541381836, 0.8677849769592285, 0.8610487580299377], "val_loss": [2.2455015182495117, 2.014371633529663, 1.1480447053909302, 0.8878644108772278, 0.7716355919837952, 0.7245866060256958, 0.6958327889442444, 0.6635935306549072, 0.6418115496635437, 0.6070429682731628, 0.5793503522872925, 0.5473523139953613, 0.5407870411872864, 0.5367304682731628, 0.5239579677581787, 0.5204728245735168, 0.5172043442726135, 0.5087013244628906, 0.5025191307067871, 0.5023893117904663, 0.4966546893119812, 0.48420050740242004, 0.4741328954696655, 0.47304606437683105, 0.46825718879699707, 0.46062541007995605, 0.44727545976638794, 0.44486111402511597, 0.43545272946357727, 0.4304882884025574, 0.42583614587783813, 0.4235743284225464, 0.41793543100357056, 0.413720041513443, 0.4084571897983551, 0.4115252196788788, 0.4145505428314209, 0.4122670888900757, 0.41081395745277405, 0.40495502948760986, 0.39743441343307495, 0.3976697623729706, 0.396424800157547, 0.4110269844532013, 0.3906992971897125, 0.3887752294540405], "val_accuracy": [0.4090000092983246, 0.4333333373069763, 0.6389999985694885, 0.6896666884422302, 0.7203333377838135, 0.7286666631698608, 0.7426666617393494, 0.7566666603088379, 0.7506666779518127, 0.7663333415985107, 0.7763333320617676, 0.796999990940094, 0.7973333597183228, 0.7953333258628845, 0.7990000247955322, 0.796999990940094, 0.8046666383743286, 0.8153333067893982, 0.8206666707992554, 0.8216666579246521, 0.8206666707992554, 0.8276666402816772, 0.8276666402816772, 0.8253333568572998, 0.8289999961853027, 0.8389999866485596, 0.8356666564941406, 0.8373333215713501, 0.8403333425521851, 0.843999981880188, 0.8456666469573975, 0.847000002861023, 0.847000002861023, 0.8543333411216736, 0.8539999723434448, 0.8529999852180481, 0.8553333282470703, 0.8616666793823242, 0.8619999885559082, 0.8659999966621399, 0.8693333268165588, 0.8683333396911621, 0.8663333058357239, 0.8643333315849304, 0.8653333187103271, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 3], [2, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3, 0], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 0, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [19041343242240.0, 3.651869717905445e+20, 4.435038890372901e+26, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10117553919553757, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1262164723630080.0, 2.338358548163346e+22, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 3, 1, 3, 5, 5, 2, 9], [0, 0, 1, 0, 2], [83, 99, 27, 26], [0, 0, 1, 0, 1, 0, 1], [0, 1, 2, 5], [0, 5, 3], [0], [0, 0, 0, 0, 1, 1, 1], [6, 0, 9, 3], [0, 0, 4], [0, 58, 13], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 7, 4, 3, 1, 6, 4, 2, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 4, 3, 1, 3], [3, 0, 1, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 1, 2, 9], [0, 3, 3], [49, 81], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 7], [0, 0, 4], [0, 58], [0, 1, 0, 1], [1, 0], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 6, 4, 2, 2, 5, 3, 2, 2, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.negative(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 7, 7, 1, 9], [0, 0, 1, 0, 1, 0, 1], [83, 99, 27, 79, 91], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 5, 2, 1, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034379482269287, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]