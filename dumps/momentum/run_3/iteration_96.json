[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948877811431885, 2.1954846382141113, 1.7930604219436646, 1.3646754026412964, 1.1012818813323975, 0.9411959648132324, 0.8554933667182922, 0.8345027565956116, 0.7798101305961609, 0.749616801738739, 0.6855085492134094, 0.6688554286956787, 0.655380368232727, 0.6226345300674438, 0.6134007573127747, 0.5986575484275818, 0.5848514437675476, 0.5766753554344177, 0.5731635689735413, 0.5459082126617432, 0.5263314247131348, 0.5312963128089905, 0.5132877826690674, 0.49971631169319153, 0.5028613209724426, 0.48898208141326904, 0.48745039105415344, 0.4650484621524811, 0.4590970575809479, 0.45980605483055115, 0.43793773651123047, 0.43147653341293335, 0.422543466091156, 0.41548416018486023, 0.41713207960128784, 0.40661177039146423, 0.39301422238349915, 0.3974282741546631, 0.39296436309814453, 0.37487778067588806, 0.3682710826396942, 0.3683367967605591, 0.36311736702919006, 0.3414930999279022, 0.3475029170513153, 0.3410283327102661, 0.33939436078071594, 0.34266453981399536, 0.31287017464637756, 0.31818220019340515, 0.31779056787490845, 0.31292906403541565, 0.3013741075992584, 0.2995980381965637, 0.30085739493370056, 0.3029523193836212, 0.2981523871421814, 0.2951223850250244], "accuracy": [0.1266675442457199, 0.32320696115493774, 0.42609959840774536, 0.5381059050559998, 0.6333377361297607, 0.6487914323806763, 0.6853784322738647, 0.6933034062385559, 0.7077004313468933, 0.7170783281326294, 0.7357020378112793, 0.7474573850631714, 0.7461365461349487, 0.7574957013130188, 0.7647602558135986, 0.7712323069572449, 0.7769119143486023, 0.7773081660270691, 0.778232753276825, 0.7857614755630493, 0.7965922355651855, 0.7918372750282288, 0.8053097128868103, 0.8078193068504333, 0.8059701323509216, 0.8170651197433472, 0.8136309385299683, 0.8204993009567261, 0.8231409192085266, 0.8240655064582825, 0.8297450542449951, 0.8364813327789307, 0.8345000743865967, 0.8380662798881531, 0.8372738361358643, 0.8422929644584656, 0.8491612672805786, 0.8506141901016235, 0.8496896028518677, 0.8529917001724243, 0.8590674996376038, 0.857218325138092, 0.8557654023170471, 0.8658037185668945, 0.8627657890319824, 0.8622375130653381, 0.8673887252807617, 0.8659358024597168, 0.8794082403182983, 0.8749174475669861, 0.8778232932090759, 0.8812574148178101, 0.8787478804588318, 0.8841632604598999, 0.8809932470321655, 0.8766345381736755, 0.8804649114608765, 0.8848236799240112], "val_loss": [2.247529983520508, 2.0335114002227783, 1.155472993850708, 0.8592795133590698, 0.750808596611023, 0.7304698824882507, 0.6456077694892883, 0.6257857084274292, 0.6296886205673218, 0.6070670485496521, 0.5511266589164734, 0.53155118227005, 0.528304934501648, 0.5311113595962524, 0.5157961249351501, 0.4984745681285858, 0.5018811225891113, 0.4928642511367798, 0.48898738622665405, 0.4902074337005615, 0.46941518783569336, 0.4600239396095276, 0.4597311317920685, 0.45761969685554504, 0.45749470591545105, 0.43508219718933105, 0.4414220452308655, 0.43007975816726685, 0.4291536808013916, 0.42972779273986816, 0.4252420961856842, 0.4084354639053345, 0.40831151604652405, 0.4072764813899994, 0.4027370512485504, 0.4104064106941223, 0.426766037940979, 0.41800764203071594, 0.41849836707115173, 0.4336315393447876, 0.42286571860313416, 0.40909886360168457, 0.4095710813999176, 0.41921699047088623, 0.40877702832221985, 0.4043923318386078, 0.42768359184265137, 0.4185326397418976, 0.40205496549606323, 0.40598633885383606, 0.41404110193252563, 0.4081402122974396, 0.4193907082080841, 0.4317120909690857, 0.4367465078830719, 0.4301920533180237, 0.42750224471092224, 0.42822134494781494], "val_accuracy": [0.4346666634082794, 0.4633333384990692, 0.6639999747276306, 0.7070000171661377, 0.7273333072662354, 0.7379999756813049, 0.7483333349227905, 0.753333330154419, 0.7643333077430725, 0.7670000195503235, 0.7796666622161865, 0.7846666574478149, 0.79666668176651, 0.7929999828338623, 0.8059999942779541, 0.8090000152587891, 0.8013333082199097, 0.8149999976158142, 0.8113333582878113, 0.8050000071525574, 0.8253333568572998, 0.8309999704360962, 0.8299999833106995, 0.8259999752044678, 0.8326666951179504, 0.8426666855812073, 0.8433333039283752, 0.8460000157356262, 0.8473333120346069, 0.8506666421890259, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8650000095367432, 0.8610000014305115, 0.8633333444595337, 0.8656666874885559, 0.8606666922569275, 0.8610000014305115, 0.8650000095367432, 0.8669999837875366, 0.871666669845581, 0.8673333525657654, 0.8700000047683716, 0.8676666617393494, 0.8703333139419556, 0.874666690826416, 0.878000020980835, 0.8723333477973938, 0.8709999918937683, 0.8756666779518127, 0.8769999742507935, 0.8790000081062317, 0.871999979019165, 0.8683333396911621, 0.8696666955947876, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292816400527954, 2.1889278888702393, 1.7738945484161377, 1.3485254049301147, 1.0577973127365112, 0.9200278520584106, 0.8198926448822021, 0.815934419631958, 0.7540290951728821, 0.7416336536407471, 0.7121601700782776, 0.6869999766349792, 0.6540208458900452, 0.6156007051467896, 0.5877264142036438, 0.5930554866790771, 0.5853051543235779, 0.5685454607009888, 0.5475705862045288, 0.5491538643836975, 0.5165185332298279, 0.5082733631134033, 0.49713072180747986, 0.48396968841552734, 0.4809453785419464, 0.4573853015899658, 0.4645039141178131, 0.4608495235443115, 0.4522668421268463, 0.43160203099250793, 0.42951929569244385, 0.4194346070289612, 0.4112764298915863, 0.3972359597682953, 0.39541155099868774, 0.39370298385620117, 0.38562920689582825], "accuracy": [0.12798838317394257, 0.3249240517616272, 0.42808082699775696, 0.5411438345909119, 0.6432439684867859, 0.6662263870239258, 0.7017567157745361, 0.7100779414176941, 0.7120591998100281, 0.7160216569900513, 0.7325320243835449, 0.7423061728477478, 0.7499669790267944, 0.770439863204956, 0.7712323069572449, 0.7737419009208679, 0.7770439982414246, 0.7858935594558716, 0.787082314491272, 0.7901201844215393, 0.8043851256370544, 0.8079513907432556, 0.811649739742279, 0.8144234418869019, 0.8140271902084351, 0.82683926820755, 0.8249900937080383, 0.824329674243927, 0.8310658931732178, 0.8333113193511963, 0.8400475382804871, 0.8403117060661316, 0.8479725122451782, 0.8564258217811584, 0.8502179384231567, 0.8520671129226685, 0.8553691506385803], "val_loss": [2.246530532836914, 2.0215418338775635, 1.1640329360961914, 0.9358735084533691, 0.7760876417160034, 0.7046858072280884, 0.6876495480537415, 0.6665727496147156, 0.6561499238014221, 0.6283808946609497, 0.581656277179718, 0.559353232383728, 0.5401629209518433, 0.5395870208740234, 0.5301256775856018, 0.5204182267189026, 0.5290688276290894, 0.5161392688751221, 0.5072506666183472, 0.48915159702301025, 0.48297998309135437, 0.48378244042396545, 0.48381078243255615, 0.4606180787086487, 0.4518676698207855, 0.45161059498786926, 0.4526155889034271, 0.44327741861343384, 0.4354223608970642, 0.4308854937553406, 0.42700833082199097, 0.42937853932380676, 0.42573025822639465, 0.4367220103740692, 0.42734652757644653, 0.4176645576953888, 0.4246644675731659], "val_accuracy": [0.4246666729450226, 0.4339999854564667, 0.6463333368301392, 0.6703333258628845, 0.7103333473205566, 0.7436666488647461, 0.7363333106040955, 0.7400000095367432, 0.7463333606719971, 0.7476666569709778, 0.7613333463668823, 0.7749999761581421, 0.7886666655540466, 0.7943333387374878, 0.7926666736602783, 0.800000011920929, 0.7973333597183228, 0.8059999942779541, 0.8053333163261414, 0.8196666836738586, 0.8186666369438171, 0.824999988079071, 0.8236666917800903, 0.8326666951179504, 0.8370000123977661, 0.8373333215713501, 0.8366666436195374, 0.8413333296775818, 0.843999981880188, 0.8453333377838135, 0.8500000238418579, 0.8533333539962769, 0.8529999852180481, 0.8510000109672546, 0.8493333458900452, 0.8506666421890259, 0.8519999980926514]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 26], [0, 0, 0, 0, 1, 1], [0, 1, 9, 8], [0, 5, 3], [0, 92], [0, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [7], [0]], "fitness": -0.20399999618530273, "mapping_values": [1, 6, 3, 3, 2, 5, 4, 1, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3110268115997314, 3.511782646179199, 2.2959799766540527, 2.303990125656128, 2.3032984733581543, 2.303295373916626], "accuracy": [0.19693566858768463, 0.149649977684021, 0.12521463632583618, 0.09787346422672272, 0.10130762308835983, 0.09192973375320435], "val_loss": [2.295900344848633, 2.3102614879608154, 2.304565668106079, 2.302993059158325, 2.3026962280273438, 2.302670478820801], "val_accuracy": [0.20100000500679016, 0.1003333330154419, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 2, 8, 1], [0, 0, 1, 0, 2, 2, 0], [83, 99, 27, 45], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 0], [0, 3, 4], [0, 58], [0, 1, 0, 1, 1], [7, 2], [1, 5, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 6, 3, 3, 0, 6, 4, 2, 1, 5, 2, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))))), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(grad, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 5, 8, 3], [0, 0, 1, 0, 2], [36, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [59], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 4, 7, 4, 5, 8], [0, 0, 4, 2, 0], [0, 58, 73], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 1, 12, 7, 5, 3, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), beta)), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304067611694336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 3, 8], [0, 0, 1, 0, 2], [83, 99, 85], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 0, 3], [0, 41], [0, 0, 0, 0, 0, 1, 0], [0, 0, 4, 9, 0], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 2, 6, 5, 1, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]