[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937164306640625, 2.1922857761383057, 1.7762287855148315, 1.3653620481491089, 1.0962203741073608, 0.937682569026947, 0.8410995006561279, 0.8386315703392029, 0.769241988658905, 0.7537646293640137, 0.7088118195533752, 0.6776506900787354, 0.6437928676605225, 0.6203403472900391, 0.5999951362609863, 0.5863118171691895, 0.5769280791282654, 0.569356381893158, 0.5609726905822754, 0.554111659526825, 0.5295365452766418, 0.5223857164382935, 0.5081090927124023, 0.4929271340370178, 0.48458918929100037, 0.474051833152771, 0.4607186019420624, 0.454881489276886, 0.44281095266342163, 0.4420560896396637, 0.4277445077896118, 0.4094928801059723], "accuracy": [0.12957337498664856, 0.3288865387439728, 0.4447232782840729, 0.5407475829124451, 0.63096022605896, 0.6635847091674805, 0.6972658634185791, 0.687887966632843, 0.7104741930961609, 0.7156254053115845, 0.7285695672035217, 0.7445515990257263, 0.7584202885627747, 0.7646281719207764, 0.7708360552787781, 0.7781006693840027, 0.785629391670227, 0.7837802171707153, 0.791441023349762, 0.7917051911354065, 0.7980451583862305, 0.8061022162437439, 0.8080834746360779, 0.8137630224227905, 0.8210275769233704, 0.8193105459213257, 0.8257825970649719, 0.8260467648506165, 0.8376700282096863, 0.8304054737091064, 0.8401796221733093, 0.8388587832450867], "val_loss": [2.2466862201690674, 2.022819995880127, 1.1433137655258179, 0.8953882455825806, 0.7642360925674438, 0.7166028022766113, 0.6887929439544678, 0.6496439576148987, 0.6626020073890686, 0.6130406260490417, 0.5610204935073853, 0.5652937889099121, 0.5312941670417786, 0.5374306440353394, 0.5224127769470215, 0.5188689231872559, 0.507782518863678, 0.505368709564209, 0.4936693608760834, 0.4867885410785675, 0.4677480459213257, 0.46463748812675476, 0.46547991037368774, 0.46453768014907837, 0.462632417678833, 0.46263402700424194, 0.4481874108314514, 0.44917166233062744, 0.44927725195884705, 0.4451206922531128, 0.43005701899528503, 0.4263809025287628], "val_accuracy": [0.4153333306312561, 0.46166667342185974, 0.6503333449363708, 0.6916666626930237, 0.7273333072662354, 0.734333336353302, 0.746666669845581, 0.7593333125114441, 0.7516666650772095, 0.7603333592414856, 0.7846666574478149, 0.7786666750907898, 0.8036666512489319, 0.7990000247955322, 0.7940000295639038, 0.8016666769981384, 0.8040000200271606, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.8276666402816772, 0.8270000219345093, 0.8273333311080933, 0.8339999914169312, 0.8330000042915344, 0.8360000252723694, 0.8476666808128357, 0.8389999866485596, 0.8423333168029785, 0.8389999866485596, 0.847000002861023, 0.8473333120346069]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 1], [83, 99, 27], [0, 1, 1, 1, 1, 1], [0, 1, 2], [0, 3, 4], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.14057143032550812, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [24.489913940429688, Infinity, 4.399128437042236, 4.624624252319336, 4.32565975189209, 3.5040979385375977], "accuracy": [0.20882314443588257, 0.09985470771789551, 0.10527011007070541, 0.09747721254825592, 0.09945846349000931, 0.1002509593963623], "val_loss": [17855.681640625, 4.269321441650391, 4.663099765777588, 4.303098201751709, 4.036571502685547, 3.6152842044830322], "val_accuracy": [0.14000000059604645, 0.09733333438634872, 0.09833333641290665, 0.10366666316986084, 0.09933333098888397, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [3, 1, 2], [0, 3, 3, 0], [0, 50], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 4, 3, 1, 9, 4, 5], [0, 0, 4, 5], [0, 58, 33], [0, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 3, 4, 2, 12, 8, 4, 3, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3040294647216797, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 84, 27], [0, 0, 1, 0, 1, 0], [0, 1, 2, 9], [0, 3, 3], [0, 6], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 0, 4, 3, 1, 3, 0, 6, 2, 7, 2, 0, 6, 5, 8, 5], [0, 1, 4, 2, 1, 4, 7, 2, 6, 2, 0], [0, 58], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [6, 7, 8, 3, 8, 2, 6, 5, 6, 6, 2, 5, 0], [1, 2, 4, 7, 2, 6, 4, 5, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 6, 4, 2, 2, 27, 16, 11, 2, 22, 13, 9, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(grad, beta)), alpha), grad))), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.square(grad))), beta)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(beta), grad), tf.math.divide_no_nan(grad, beta))), grad))), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.square(tf.math.negative(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [1, 0, 1, 0, 2], [83, 8, 9], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12}]