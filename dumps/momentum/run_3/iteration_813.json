[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8448571562767029, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292613983154297, 2.187981605529785, 1.7715590000152588, 1.3405030965805054, 1.062760591506958, 0.9291921854019165, 0.8424524068832397, 0.8088856935501099, 0.755649983882904, 0.7428070902824402, 0.7110580205917358, 0.6727020740509033, 0.6487231254577637, 0.6192476153373718, 0.6097285747528076, 0.5911456346511841, 0.567548930644989, 0.5687424540519714, 0.5494208931922913, 0.5340286493301392, 0.5293137431144714, 0.5071024894714355, 0.519153892993927, 0.49283063411712646, 0.48757559061050415, 0.48424768447875977, 0.4813435673713684, 0.46339502930641174, 0.4542493224143982, 0.44742628931999207, 0.43504294753074646, 0.41811010241508484, 0.4181946814060211, 0.4263039827346802, 0.4175458252429962, 0.41313469409942627, 0.413995623588562], "accuracy": [0.13538502156734467, 0.3217540681362152, 0.445779949426651, 0.5461629629135132, 0.6272619366645813, 0.659490168094635, 0.6861709356307983, 0.7078325152397156, 0.7096816897392273, 0.7150970697402954, 0.7314753532409668, 0.7386078238487244, 0.7489103078842163, 0.7664773464202881, 0.7687227725982666, 0.7737419009208679, 0.7844406366348267, 0.7765156626701355, 0.7865539789199829, 0.7959318161010742, 0.7932901978492737, 0.8013472557067871, 0.7996301651000977, 0.8080834746360779, 0.811649739742279, 0.813498854637146, 0.8098005652427673, 0.8197067975997925, 0.8230088353157043, 0.8239334225654602, 0.8323867321014404, 0.8333113193511963, 0.837141752243042, 0.8407079577445984, 0.8408400416374207, 0.8392550349235535, 0.8379341959953308], "val_loss": [2.2460899353027344, 2.0192747116088867, 1.1507189273834229, 0.8731869459152222, 0.7826529145240784, 0.6923315525054932, 0.662050187587738, 0.6450162529945374, 0.6326137781143188, 0.6006631851196289, 0.5818891525268555, 0.5579306483268738, 0.5405058860778809, 0.5334161520004272, 0.520502507686615, 0.5250046253204346, 0.5063170790672302, 0.5045228004455566, 0.5005064606666565, 0.4978788197040558, 0.4749205708503723, 0.4751235842704773, 0.46903327107429504, 0.4684775769710541, 0.4667738378047943, 0.45645955204963684, 0.46171078085899353, 0.4519747197628021, 0.44006669521331787, 0.4400930106639862, 0.43422695994377136, 0.4287976026535034, 0.4463145434856415, 0.4387378692626953, 0.42375892400741577, 0.45446065068244934, 0.42506009340286255], "val_accuracy": [0.39633333683013916, 0.4620000123977661, 0.6366666555404663, 0.6786666512489319, 0.7123333215713501, 0.7403333187103271, 0.7409999966621399, 0.746666669845581, 0.7609999775886536, 0.768666684627533, 0.7756666541099548, 0.7863333225250244, 0.7933333516120911, 0.8009999990463257, 0.8016666769981384, 0.7996666431427002, 0.8106666803359985, 0.8119999766349792, 0.8159999847412109, 0.8203333616256714, 0.8273333311080933, 0.8236666917800903, 0.8376666903495789, 0.8343333601951599, 0.8253333568572998, 0.8333333134651184, 0.8353333473205566, 0.8416666388511658, 0.8483333587646484, 0.8500000238418579, 0.8476666808128357, 0.8610000014305115, 0.8569999933242798, 0.8576666712760925, 0.859333336353302, 0.8539999723434448, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [6, 1, 0, 1, 8], [0, 0, 1, 1, 2], [83, 49, 27], [0, 0, 1, 0, 1, 1, 1], [4, 1, 2], [0, 3, 3, 4], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 4, 3, 6, 6, 3, 7, 3, 8, 0, 1, 6, 0, 4, 4, 1, 7, 2, 5, 7, 1, 4, 6, 2, 8, 5, 3, 4, 7, 5, 1, 8, 5, 0, 5, 7, 3, 0, 6, 4, 0, 7, 4, 1, 1, 2, 9, 9, 5, 2, 9], [0, 0, 4, 5, 3, 2, 1, 2, 5, 4, 1, 3, 2, 1, 6, 7, 4, 7, 3, 0, 6, 3, 4, 2, 0, 4, 4, 7, 3, 5, 1], [0, 58, 63, 13, 91, 9, 96], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(grad), tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.subtract(grad, sigma), beta), tf.math.add(alpha, beta))), tf.math.add(grad, grad)), alpha))), tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.pow(beta, alpha), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.subtract(grad, tf.math.sqrt(tf.math.square(grad)))), sigma), tf.math.negative(tf.math.square(tf.math.add(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), sigma)))))), grad))))), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(beta), tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, tf.math.subtract(tf.math.subtract(grad, sigma), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.square(grad)))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 6, 3, 3, 2, 7, 3, 4, 1, 83, 52, 31, 7, 2, 1, 1, 0], "tree_depth": 43}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 0, 4, 5, 6, 4, 0, 9, 7], [0, 0, 1, 0, 1, 2, 0, 2], [83, 99, 27, 62, 58], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 1, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 4], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 5, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27], [0, 1, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [17], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [37180.4921875, 5801455.0, 98270208.0, 685297536.0, 3035705600.0, 10041946112.0], "accuracy": [0.09972262382507324, 0.10051512718200684, 0.09985470771789551, 0.09549596905708313, 0.10011887550354004, 0.09694888442754745], "val_loss": [382185.71875, 20499028.0, 219829232.0, 1198078208.0, 4487052800.0, 13234514944.0], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 8, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 7], [2, 0, 4, 5], [0, 58], [0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 1, 1, 8], [1, 4, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 9, 5, 4, 1, 9, 5, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.subtract(tf.math.sqrt(grad), grad)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]