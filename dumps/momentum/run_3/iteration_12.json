[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943387031555176, 2.1915125846862793, 1.7741496562957764, 1.3209806680679321, 1.0730174779891968, 0.9101482629776001, 0.830523669719696, 0.7813759446144104, 0.7623337507247925, 0.7363372445106506, 0.6962016224861145, 0.6554288864135742, 0.647777259349823, 0.6273936629295349, 0.616849422454834, 0.6056644916534424, 0.5878307819366455, 0.5878937244415283, 0.5578186511993408, 0.568924069404602, 0.5378961563110352, 0.5385779142379761, 0.5224614143371582, 0.5239299535751343, 0.5058999061584473, 0.4979455769062042, 0.48611578345298767, 0.48024100065231323, 0.46804583072662354, 0.45523324608802795, 0.45448166131973267, 0.4394960105419159, 0.4307194948196411, 0.43042176961898804, 0.4359692633152008, 0.4215449392795563, 0.41436654329299927, 0.4002538323402405, 0.4127746522426605, 0.4013531804084778, 0.39340871572494507, 0.3845006823539734, 0.3822396695613861, 0.38247111439704895, 0.35990259051322937, 0.35703107714653015, 0.36499667167663574, 0.3618542551994324, 0.36999446153640747, 0.34711065888404846, 0.34812670946121216, 0.3534882068634033, 0.3403153419494629, 0.3340144157409668], "accuracy": [0.12917712330818176, 0.32941487431526184, 0.44010037183761597, 0.5503896474838257, 0.6365077495574951, 0.6660943031311035, 0.6989829540252686, 0.7132478952407837, 0.7108704447746277, 0.7176066637039185, 0.7367587089538574, 0.7434949278831482, 0.7497028112411499, 0.7617223858833313, 0.7666094303131104, 0.772288978099823, 0.7815347909927368, 0.7746664881706238, 0.7869502305984497, 0.7821952104568481, 0.7922335267066956, 0.7928939461708069, 0.8018755912780762, 0.8013472557067871, 0.8014793395996094, 0.8096684813499451, 0.8173292875289917, 0.8182538747787476, 0.8173292875289917, 0.8271034359931946, 0.8245938420295715, 0.8359529972076416, 0.8348963260650635, 0.837141752243042, 0.8350284099578857, 0.8383304476737976, 0.8426892161369324, 0.8521991968154907, 0.8448025584220886, 0.8457271456718445, 0.8496896028518677, 0.8545766472816467, 0.8537842035293579, 0.8524633646011353, 0.8589354157447815, 0.8593316674232483, 0.8615770936012268, 0.8639545440673828, 0.8537842035293579, 0.8636903762817383, 0.8614450097084045, 0.8650112152099609, 0.8644828796386719, 0.8702945709228516], "val_loss": [2.245863437652588, 2.024540424346924, 1.1221238374710083, 0.8614134192466736, 0.7602570056915283, 0.7221987247467041, 0.6745585203170776, 0.6816837787628174, 0.6419760584831238, 0.6339482665061951, 0.5841988325119019, 0.5680888891220093, 0.5573946833610535, 0.5345464944839478, 0.5235341787338257, 0.5227691531181335, 0.5185906291007996, 0.5051727890968323, 0.5063689947128296, 0.49271005392074585, 0.5032866597175598, 0.493025541305542, 0.49203768372535706, 0.4788620173931122, 0.46258196234703064, 0.45804598927497864, 0.46282461285591125, 0.45864883065223694, 0.4384172260761261, 0.4390996992588043, 0.4306022822856903, 0.4290199875831604, 0.4362034499645233, 0.4455976188182831, 0.44008511304855347, 0.43133285641670227, 0.43484410643577576, 0.4305063486099243, 0.4268089234828949, 0.4230079650878906, 0.42575663328170776, 0.42327481508255005, 0.424775630235672, 0.41568994522094727, 0.40886780619621277, 0.4140435457229614, 0.44143328070640564, 0.4432295262813568, 0.416635662317276, 0.4172598421573639, 0.41609126329421997, 0.42244455218315125, 0.42273542284965515, 0.4343881905078888], "val_accuracy": [0.4336666762828827, 0.48899999260902405, 0.6516666412353516, 0.7043333053588867, 0.7166666388511658, 0.734333336353302, 0.7436666488647461, 0.7516666650772095, 0.7393333315849304, 0.7586666941642761, 0.7773333191871643, 0.7839999794960022, 0.7903333306312561, 0.8046666383743286, 0.8106666803359985, 0.7983333468437195, 0.8069999814033508, 0.812666654586792, 0.8146666884422302, 0.8199999928474426, 0.8236666917800903, 0.8206666707992554, 0.8180000185966492, 0.8320000171661377, 0.8420000076293945, 0.8289999961853027, 0.8389999866485596, 0.8346666693687439, 0.840666651725769, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.8493333458900452, 0.8513333201408386, 0.8510000109672546, 0.8546666502952576, 0.8583333492279053, 0.8529999852180481, 0.8586666584014893, 0.8556666374206543, 0.859666645526886, 0.859666645526886, 0.8603333234786987, 0.8579999804496765, 0.8629999756813049, 0.8616666793823242, 0.8633333444595337, 0.8606666922569275, 0.8640000224113464, 0.859000027179718, 0.859333336353302, 0.8550000190734863, 0.859666645526886, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291591167449951, 2.185357093811035, 1.7609896659851074, 1.3499269485473633, 1.0756230354309082, 0.9173893332481384, 0.8406904935836792, 0.8104365468025208, 0.7625465393066406, 0.7304527759552002, 0.713124692440033, 0.6934474110603333, 0.6537348628044128, 0.6396769881248474, 0.6004924178123474, 0.5964285731315613, 0.592327356338501, 0.5836736559867859, 0.5561415553092957, 0.5524033904075623, 0.5384939312934875, 0.5278437733650208, 0.5167542099952698, 0.5077815651893616, 0.4939165711402893, 0.49104440212249756, 0.47830185294151306, 0.47123944759368896, 0.46457967162132263, 0.4564533829689026, 0.45057034492492676, 0.4316377639770508, 0.4298625588417053, 0.41262102127075195, 0.4130423963069916, 0.39906319975852966, 0.3968096375465393, 0.3836269974708557, 0.3760325610637665, 0.37894177436828613, 0.3809884786605835, 0.36832281947135925, 0.3601246476173401], "accuracy": [0.13261127471923828, 0.3349623680114746, 0.43045833706855774, 0.5398229956626892, 0.6362435817718506, 0.6585655808448792, 0.6880200505256653, 0.6900013089179993, 0.7046625018119812, 0.7141724824905396, 0.7367587089538574, 0.7334566116333008, 0.7449478507041931, 0.7597411274909973, 0.7671377658843994, 0.7619865536689758, 0.7774402499198914, 0.7796856164932251, 0.787082314491272, 0.7832518815994263, 0.7928939461708069, 0.7972526550292969, 0.8049134612083435, 0.8020076751708984, 0.8105930685997009, 0.8076872229576111, 0.8214238286018372, 0.8153480291366577, 0.8232730031013489, 0.8195747137069702, 0.8257825970649719, 0.8343679904937744, 0.8350284099578857, 0.8407079577445984, 0.8418967127799988, 0.8508783578872681, 0.8450667262077332, 0.8532558679580688, 0.8565579056739807, 0.8551049828529358, 0.8532558679580688, 0.8585391640663147, 0.8595958352088928], "val_loss": [2.2460508346557617, 2.0120584964752197, 1.134181261062622, 0.8908039331436157, 0.7890651226043701, 0.7187345623970032, 0.7116228938102722, 0.6746647357940674, 0.6517946124076843, 0.6350306868553162, 0.6085459589958191, 0.5936354994773865, 0.5666508674621582, 0.5626605153083801, 0.5626633167266846, 0.5358232259750366, 0.5450367331504822, 0.5260198712348938, 0.5300726890563965, 0.5147944092750549, 0.5000447630882263, 0.4960034191608429, 0.5003693699836731, 0.4947814643383026, 0.4875410199165344, 0.4843396544456482, 0.4836999475955963, 0.4856796860694885, 0.47322797775268555, 0.46510079503059387, 0.4607435166835785, 0.45142680406570435, 0.43867695331573486, 0.43096888065338135, 0.43681225180625916, 0.4315405786037445, 0.43224024772644043, 0.42458757758140564, 0.4195336401462555, 0.4137730300426483, 0.41054216027259827, 0.4132142663002014, 0.4335624575614929], "val_accuracy": [0.42766666412353516, 0.4580000042915344, 0.6433333158493042, 0.6836666464805603, 0.7059999704360962, 0.7170000076293945, 0.7239999771118164, 0.7443333268165588, 0.7400000095367432, 0.7566666603088379, 0.7563333511352539, 0.7673333287239075, 0.7776666879653931, 0.7853333353996277, 0.7820000052452087, 0.7953333258628845, 0.7856666445732117, 0.7960000038146973, 0.7963333129882812, 0.8069999814033508, 0.8066666722297668, 0.8153333067893982, 0.8166666626930237, 0.8199999928474426, 0.8213333487510681, 0.8259999752044678, 0.8190000057220459, 0.8173333406448364, 0.8226666450500488, 0.8299999833106995, 0.8386666774749756, 0.8423333168029785, 0.8453333377838135, 0.8446666598320007, 0.843999981880188, 0.8519999980926514, 0.8526666760444641, 0.8569999933242798, 0.856333315372467, 0.8539999723434448, 0.8543333411216736, 0.8569999933242798, 0.8506666421890259]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 3], [48, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [95], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.23314285278320312, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6765549182891846, 2.7345521450042725, 2.234238386154175, 5019.62890625, Infinity, 2.8441519737243652, 2.6379170417785645, 2.6628568172454834], "accuracy": [0.2502971887588501, 0.12230881303548813, 0.2090873122215271, 0.20195482671260834, 0.09206181764602661, 0.09840179979801178, 0.09919429570436478, 0.10157178342342377], "val_loss": [2.634157180786133, 2.197636604309082, 2.035728931427002, 13320404.0, 2.9589760303497314, 2.7347943782806396, 2.519476890563965, 2.613964796066284], "val_accuracy": [0.1133333370089531, 0.17533333599567413, 0.24433332681655884, 0.04866666719317436, 0.10100000351667404, 0.10066666454076767, 0.0976666659116745, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 6], [0, 0, 1, 0, 2], [83, 25, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 2, 7, 6, 4, 3, 0], [3, 3, 3, 4, 0, 2, 4], [84], [1, 0, 0, 0, 1, 0, 1], [0, 0, 4, 3], [4, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.11257142573595047, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.negative(beta), grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.65831850200201e+27, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.247388640429103e+29, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11733333021402359, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 4, 6, 6, 6, 5, 6, 2, 1, 5, 7, 5, 5, 0, 5], [0, 0, 1, 0, 2, 3, 1, 1, 3, 0, 2, 1, 2], [83, 99, 27, 91], [1, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 0, 0], [8, 0, 4, 3], [0, 0, 4], [24, 58], [0, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 19, 13, 4, 1, 0, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, alpha), alpha), tf.math.square(tf.math.add(tf.math.square(tf.math.square(grad)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.negative(tf.math.square(alpha))), grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 5, 3], [0, 0, 1, 0, 2], [83, 99, 89], [1, 0, 1, 0, 0, 0], [0, 1, 9], [0, 3, 2], [0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 6, 4, 9, 1, 0, 6, 0, 2, 6], [0, 0, 4, 5, 7, 0], [0, 58, 73, 67], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(grad, grad)), tf.math.divide_no_nan(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303492546081543, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 5, 4, 1, 2, 1, 0, 1, 1, 17, 11, 6, 4, 2, 1, 1, 0], "tree_depth": 19}]