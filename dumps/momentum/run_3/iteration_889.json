[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938032150268555, 2.190150499343872, 1.7784020900726318, 1.3351649045944214, 1.0640774965286255, 0.9311919808387756, 0.8334124088287354, 0.8117823004722595, 0.7660710215568542, 0.7182204723358154, 0.7083662152290344, 0.6853964924812317, 0.6505773067474365, 0.6354355812072754, 0.608206033706665, 0.603978157043457, 0.5907770991325378, 0.5689884424209595, 0.5587315559387207, 0.5595524907112122, 0.5407808423042297, 0.5209012627601624, 0.5170301198959351, 0.5141394138336182, 0.49603351950645447, 0.48289138078689575, 0.48005759716033936, 0.47457727789878845, 0.46674710512161255, 0.4617074429988861, 0.43837401270866394, 0.43912380933761597, 0.4315182566642761, 0.4195502996444702, 0.42316165566444397, 0.4091009199619293, 0.4054810404777527, 0.4090932011604309, 0.38023465871810913, 0.3803927004337311, 0.3777391314506531, 0.37872621417045593, 0.3751743733882904, 0.35634180903434753, 0.3538132905960083], "accuracy": [0.12838461995124817, 0.3185840845108032, 0.439439982175827, 0.5498613119125366, 0.6428477168083191, 0.6490556001663208, 0.6896050572395325, 0.7017567157745361, 0.7016246318817139, 0.717870831489563, 0.7317395210266113, 0.7349095344543457, 0.7537974119186401, 0.7572315335273743, 0.7637035846710205, 0.769911527633667, 0.774270236492157, 0.7828556299209595, 0.7862898111343384, 0.7874785661697388, 0.7886672616004944, 0.7994980812072754, 0.8047813773155212, 0.8024039268493652, 0.809140145778656, 0.8168009519577026, 0.819970965385437, 0.8207634687423706, 0.8253863453865051, 0.8220842480659485, 0.8347642421722412, 0.8342359066009521, 0.8374059200286865, 0.8450667262077332, 0.839519202709198, 0.847840428352356, 0.8481045961380005, 0.8437458872795105, 0.8536521196365356, 0.8545766472816467, 0.8569541573524475, 0.860652506351471, 0.8578787446022034, 0.8683133125305176, 0.8647470474243164], "val_loss": [2.245602607727051, 2.0225412845611572, 1.1449722051620483, 0.8553758263587952, 0.7633447051048279, 0.712900698184967, 0.654459536075592, 0.6354029774665833, 0.624549388885498, 0.6027228236198425, 0.5741403698921204, 0.558106541633606, 0.5430673956871033, 0.5327068567276001, 0.5204591751098633, 0.5180704593658447, 0.5089558362960815, 0.501081109046936, 0.49740445613861084, 0.48959872126579285, 0.47978654503822327, 0.4736175239086151, 0.4806350767612457, 0.4652407169342041, 0.45907869935035706, 0.4527304172515869, 0.45195773243904114, 0.4419955313205719, 0.4382971227169037, 0.4328959286212921, 0.4358726739883423, 0.4289419651031494, 0.4264817237854004, 0.4148049056529999, 0.4224663972854614, 0.4185273349285126, 0.4107801020145416, 0.4015624225139618, 0.4111335575580597, 0.39892101287841797, 0.3985990881919861, 0.40653857588768005, 0.396136075258255, 0.39776599407196045, 0.4151354134082794], "val_accuracy": [0.43966665863990784, 0.46666666865348816, 0.6480000019073486, 0.6996666789054871, 0.7276666760444641, 0.7390000224113464, 0.7596666812896729, 0.7606666684150696, 0.7736666798591614, 0.7713333368301392, 0.7733333110809326, 0.7879999876022339, 0.7926666736602783, 0.79666668176651, 0.8036666512489319, 0.8056666851043701, 0.8103333115577698, 0.8166666626930237, 0.812333345413208, 0.8143333196640015, 0.8230000138282776, 0.8220000267028809, 0.8246666789054871, 0.8376666903495789, 0.840666651725769, 0.8336666822433472, 0.8410000205039978, 0.843999981880188, 0.8306666612625122, 0.8479999899864197, 0.8446666598320007, 0.8493333458900452, 0.8450000286102295, 0.8513333201408386, 0.8529999852180481, 0.8496666550636292, 0.8519999980926514, 0.8533333539962769, 0.8603333234786987, 0.8663333058357239, 0.8619999885559082, 0.8586666584014893, 0.862666666507721, 0.8616666793823242, 0.8650000095367432]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 9, 3, 3, 3, 8, 7, 5, 6, 7, 5], [0, 1, 1, 0, 2, 0, 0, 0], [83, 99, 27, 2, 69, 70], [0, 0, 1, 1, 1, 1], [0, 1, 7], [0, 5, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 8, 4, 3], [0, 0, 4], [45, 84], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 6, 4, 2, 2, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 4, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 1, 2, 9], [1, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [2, 0, 4], [0, 58], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 3, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [93.53176879882812, 11009.6396484375, 183318.25, 1279223.875, 5629504.5, 18410788.0], "accuracy": [0.10130762308835983, 0.10368511080741882, 0.09721305221319199, 0.09760929644107819, 0.09734513610601425, 0.09840179979801178], "val_loss": [810.195556640625, 39776.58203125, 422681.5, 2297447.25, 8594470.0, 25333882.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 4, 2, 2, 2, 6, 3, 3, 1, 6, 3, 3, 2, 3, 2, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9, 2, 8, 7, 8], [0, 0, 1, 0, 2, 0], [83, 99, 27, 82, 70], [1, 0, 1, 0, 1, 1], [0, 1, 9], [0, 3, 3], [0], [0, 1, 0, 1, 1, 0, 1], [8, 0, 4, 3], [6, 2, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 5, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]