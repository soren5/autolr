[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938034534454346, 2.1932249069213867, 1.780663251876831, 1.3430819511413574, 1.076887845993042, 0.9135149717330933, 0.8540841341018677, 0.8107942938804626, 0.7749212384223938, 0.7379684448242188, 0.7067901492118835, 0.6799478530883789, 0.6531741619110107, 0.6425357460975647, 0.609168291091919, 0.6007143259048462, 0.5816614031791687, 0.574470579624176, 0.5662994384765625, 0.5365098714828491, 0.5446236729621887, 0.5243790149688721, 0.5250741839408875, 0.4989728629589081, 0.4898890256881714, 0.48156338930130005, 0.47659170627593994, 0.46545758843421936, 0.46246567368507385, 0.45896753668785095, 0.44866448640823364, 0.43825453519821167, 0.42878445982933044, 0.4314282238483429, 0.41015157103538513, 0.4111715853214264, 0.40442827343940735, 0.4032628834247589, 0.40625280141830444, 0.38490545749664307, 0.379469096660614], "accuracy": [0.12759213149547577, 0.32082948088645935, 0.44010037183761597, 0.5455026030540466, 0.6306960582733154, 0.6715096831321716, 0.677189290523529, 0.6985867023468018, 0.7042662501335144, 0.7223616242408752, 0.7403249144554138, 0.7486461400985718, 0.7470611333847046, 0.7559106945991516, 0.7692511081695557, 0.7726852297782898, 0.7794214487075806, 0.780610203742981, 0.7849689722061157, 0.7947431206703186, 0.7969884872436523, 0.8055738806724548, 0.7985734939575195, 0.8094043135643005, 0.8145555257797241, 0.8129705190658569, 0.8120459914207458, 0.8186501264572144, 0.8265751004219055, 0.8271034359931946, 0.8319904804229736, 0.8305375576019287, 0.8363492488861084, 0.8376700282096863, 0.8465195894241333, 0.8425571322441101, 0.8466516733169556, 0.8518029451370239, 0.8459912538528442, 0.8481045961380005, 0.8519350290298462], "val_loss": [2.2465105056762695, 2.0257744789123535, 1.1484460830688477, 0.8789594173431396, 0.7633270025253296, 0.723903477191925, 0.6922658085823059, 0.6770870089530945, 0.6391860246658325, 0.618635892868042, 0.5797646045684814, 0.563740074634552, 0.5594804883003235, 0.5468754768371582, 0.5417162179946899, 0.5353502035140991, 0.523459255695343, 0.5149217844009399, 0.5014579892158508, 0.49978289008140564, 0.4879753291606903, 0.48260655999183655, 0.47753459215164185, 0.4691294729709625, 0.46011805534362793, 0.46006742119789124, 0.4520234763622284, 0.4458242654800415, 0.44768431782722473, 0.4321955442428589, 0.4285874366760254, 0.43351447582244873, 0.43717867136001587, 0.41855841875076294, 0.40516406297683716, 0.4078831374645233, 0.4176696836948395, 0.4153050184249878, 0.4157657325267792, 0.40696239471435547, 0.41313618421554565], "val_accuracy": [0.40833333134651184, 0.4676666557788849, 0.6603333353996277, 0.6886666417121887, 0.7246666550636292, 0.7253333330154419, 0.7493333220481873, 0.7413333058357239, 0.7546666860580444, 0.7730000019073486, 0.7696666717529297, 0.7910000085830688, 0.781333327293396, 0.7896666526794434, 0.7946666479110718, 0.79666668176651, 0.7990000247955322, 0.809333324432373, 0.8140000104904175, 0.8230000138282776, 0.8233333230018616, 0.8220000267028809, 0.824999988079071, 0.8330000042915344, 0.8309999704360962, 0.8196666836738586, 0.8373333215713501, 0.8383333086967468, 0.8456666469573975, 0.8460000157356262, 0.846666693687439, 0.8429999947547913, 0.8460000157356262, 0.8500000238418579, 0.8550000190734863, 0.859333336353302, 0.8553333282470703, 0.8489999771118164, 0.8450000286102295, 0.8553333282470703, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 1, 2, 9], [0, 3, 3], [0, 58], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [4, 0, 4, 6, 3, 8, 8, 9], [6, 0, 4, 1], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034865856170654, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 7, 3, 4, 3, 6, 4, 2, 2, 12, 8, 4, 2, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 8], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [51], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 3, 7, 3, 1, 5], [0, 2, 1, 3, 2, 3], [83, 99, 27], [0, 0, 1, 1, 0, 1], [0, 5, 2], [0, 3, 3], [71], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 1, 3, 2, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.subtract(tf.math.square(grad), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3242220878601074, 338616295358464.0, 31961.005859375, 161009152.0, 804117348352.0, 3999255844880384.0], "accuracy": [0.08757099509239197, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4478588104248047, 119.75347900390625, 639936.0625, 3194390272.0, 15950564818944.0, 7.968304218400358e+16], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 1, 3, 1, 3, 5, 0, 2, 0, 0, 3, 3, 6, 8], [0, 0, 1, 0, 2, 3, 2, 1, 1, 1], [83, 17, 27], [0, 0, 1, 1, 1, 1], [2, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 4, 3, 5, 2], [1, 0, 4, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 24, 14, 10, 3, 5, 2, 3, 1, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), tf.math.multiply(tf.math.multiply(grad, grad), tf.math.divide_no_nan(alpha, tf.math.sqrt(alpha)))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309417486190796, 2.310633659362793, 2.3095614910125732, 2.3112716674804688, 2.3116438388824463, 2.3108866214752197], "accuracy": [0.09298639744520187, 0.08809932321310043, 0.09232597798109055, 0.09232597798109055, 0.08691058307886124, 0.0874389111995697], "val_loss": [2.308582067489624, 2.308582067489624, 2.308582067489624, 2.308582067489624, 2.308582067489624, 2.308582067489624], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]