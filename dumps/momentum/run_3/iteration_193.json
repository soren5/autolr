[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929036617279053, 2.1890711784362793, 1.7636531591415405, 1.351761817932129, 1.0629101991653442, 0.923105001449585, 0.855868399143219, 0.8384069204330444, 0.7773206830024719, 0.7499483823776245, 0.7095786929130554, 0.6838802695274353, 0.6627235412597656, 0.6439418196678162, 0.6157264709472656, 0.5947217345237732, 0.5969659686088562, 0.5821154117584229, 0.5655544996261597, 0.5548127293586731, 0.5531282424926758, 0.548499584197998, 0.528449296951294, 0.5218306183815002, 0.5099729299545288, 0.4945352375507355, 0.4960189163684845, 0.47743406891822815, 0.47481173276901245, 0.46006128191947937, 0.455750435590744, 0.45123574137687683, 0.43946540355682373, 0.4438634216785431, 0.42782604694366455, 0.4406328499317169, 0.4085938632488251, 0.41319119930267334, 0.40421342849731445, 0.3956686556339264, 0.3917950987815857, 0.3799302577972412, 0.3807491660118103, 0.3841860294342041, 0.3668058216571808, 0.35590681433677673, 0.35410377383232117, 0.342467725276947], "accuracy": [0.12798838317394257, 0.32545238733291626, 0.4294016659259796, 0.542728841304779, 0.637432336807251, 0.6675472259521484, 0.6900013089179993, 0.698190450668335, 0.7055870890617371, 0.7206445932388306, 0.7309470176696777, 0.737947404384613, 0.7471932172775269, 0.759609043598175, 0.7688548564910889, 0.7766477465629578, 0.7741381525993347, 0.7796856164932251, 0.7869502305984497, 0.7924976944923401, 0.7960638999938965, 0.7940827012062073, 0.800818920135498, 0.7996301651000977, 0.8107251524925232, 0.8129705190658569, 0.8182538747787476, 0.8197067975997925, 0.8187822103500366, 0.8271034359931946, 0.8297450542449951, 0.8363492488861084, 0.8367455005645752, 0.8315942287445068, 0.8412362933158875, 0.835160493850708, 0.8454629778862, 0.8485008478164673, 0.8491612672805786, 0.8500858545303345, 0.8529917001724243, 0.8540483713150024, 0.8502179384231567, 0.8508783578872681, 0.8605204224586487, 0.8638224601745605, 0.86118084192276, 0.8673887252807617], "val_loss": [2.246079444885254, 2.013488292694092, 1.1357158422470093, 0.8943238854408264, 0.7594780921936035, 0.6988543272018433, 0.6716418266296387, 0.6431668996810913, 0.632110595703125, 0.6003669500350952, 0.5734860897064209, 0.5524672269821167, 0.5458195209503174, 0.5177161693572998, 0.5098315477371216, 0.5079809427261353, 0.49314969778060913, 0.4852336347103119, 0.48009610176086426, 0.48305386304855347, 0.47166723012924194, 0.47000232338905334, 0.47028475999832153, 0.4643179476261139, 0.4545160233974457, 0.44491440057754517, 0.4418090283870697, 0.4408307671546936, 0.4442243278026581, 0.44597095251083374, 0.4360920488834381, 0.43577489256858826, 0.4240770936012268, 0.4194473326206207, 0.4269281029701233, 0.40919795632362366, 0.416503369808197, 0.40925586223602295, 0.4079703092575073, 0.4168426990509033, 0.4082008898258209, 0.39720696210861206, 0.3994341492652893, 0.40609851479530334, 0.40370413661003113, 0.3955192565917969, 0.39676427841186523, 0.40926119685173035], "val_accuracy": [0.41200000047683716, 0.437333345413208, 0.6496666669845581, 0.6926666498184204, 0.7393333315849304, 0.737333357334137, 0.7416666746139526, 0.746999979019165, 0.7676666378974915, 0.7739999890327454, 0.7853333353996277, 0.7900000214576721, 0.7946666479110718, 0.8043333292007446, 0.8046666383743286, 0.8029999732971191, 0.8076666593551636, 0.8193333148956299, 0.8149999976158142, 0.8146666884422302, 0.8270000219345093, 0.82833331823349, 0.8309999704360962, 0.8199999928474426, 0.8383333086967468, 0.8423333168029785, 0.8483333587646484, 0.8493333458900452, 0.8416666388511658, 0.8486666679382324, 0.8539999723434448, 0.8463333249092102, 0.856333315372467, 0.862333357334137, 0.8523333072662354, 0.8640000224113464, 0.8616666793823242, 0.862666666507721, 0.859333336353302, 0.859666645526886, 0.8646666407585144, 0.8700000047683716, 0.8713333606719971, 0.8653333187103271, 0.8633333444595337, 0.8673333525657654, 0.8640000224113464, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [0, 0, 1, 0, 2], [31, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 2, 0, 1, 8, 0], [2, 3, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [14, 58], [0, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 11, 7, 4, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.sqrt(grad), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3], [0, 0, 1, 2, 3], [83, 28, 27], [0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 1, 2, 7], [0, 3, 3, 4, 2], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 1, 1], [3, 1], [1, 3, 0], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 10, 5, 5, 2, 9, 4, 5, 1, 7, 4, 3, 2, 5, 2, 3, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 7, 3, 0], [0, 0, 0, 0, 2, 0, 0], [83, 63, 27, 92, 89, 84], [1, 1, 1, 0, 1, 1], [4, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 6, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3049817085266113, 2.303504228591919, 2.3053555488586426, 2.3044795989990234, 2.3072118759155273, 2.3051657676696777], "accuracy": [0.09377889335155487, 0.10091137140989304, 0.09708096832036972, 0.10302469879388809, 0.09760929644107819, 0.1014397069811821], "val_loss": [2.3025007247924805, 2.303823947906494, 2.3036272525787354, 2.304867744445801, 2.3055472373962402, 2.3062691688537598], "val_accuracy": [0.10199999809265137, 0.09866666793823242, 0.09733333438634872, 0.09866666793823242, 0.09733333438634872, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 3], [2, 0, 1, 0, 2], [35, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 4, 3], [0], [0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 4, 7, 1, 7, 4], [2, 7, 6, 7, 6, 5, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 2, 1, 1, 1, 13, 6, 7, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.pow(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(tf.math.pow(grad, grad), grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]