[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932915687561035, 2.1933605670928955, 1.7792021036148071, 1.3475199937820435, 1.0942041873931885, 0.9155583381652832, 0.841160237789154, 0.8223115801811218, 0.7718835473060608, 0.7503839731216431, 0.7154434323310852, 0.6800262331962585, 0.6641877889633179, 0.6368126273155212, 0.6151284575462341, 0.6084796190261841, 0.5952203273773193, 0.5843673348426819, 0.5762162208557129, 0.5470941662788391, 0.5498795509338379, 0.5376092791557312, 0.5373246073722839, 0.5165249705314636, 0.5115604400634766, 0.48597314953804016, 0.4890279173851013, 0.4834803640842438, 0.476563423871994, 0.4605623781681061, 0.4505710005760193, 0.45322921872138977, 0.4319520890712738, 0.41706380248069763, 0.42161068320274353, 0.4000246822834015, 0.3984261751174927, 0.385378360748291, 0.379957377910614, 0.3829025328159332, 0.3841667175292969, 0.36875706911087036, 0.3698004186153412, 0.3672589957714081, 0.34634652733802795, 0.35183441638946533, 0.34686338901519775, 0.33050358295440674, 0.32759764790534973], "accuracy": [0.12468630075454712, 0.32360321283340454, 0.43811914324760437, 0.5437855124473572, 0.637432336807251, 0.6753401160240173, 0.6954167485237122, 0.6992471218109131, 0.7069079279899597, 0.7128516435623169, 0.7288337349891663, 0.7409853339195251, 0.7518161535263062, 0.7586844563484192, 0.7700436115264893, 0.7705719470977783, 0.7779685854911804, 0.7788931727409363, 0.7866860628128052, 0.7976489067077637, 0.7932901978492737, 0.8009510040283203, 0.8039889335632324, 0.8088759779930115, 0.8041210174560547, 0.8204993009567261, 0.822348415851593, 0.8173292875289917, 0.8241975903511047, 0.8314621448516846, 0.8335754871368408, 0.8319904804229736, 0.8372738361358643, 0.8488970994949341, 0.8479725122451782, 0.8457271456718445, 0.8508783578872681, 0.8520671129226685, 0.859199583530426, 0.8585391640663147, 0.852331280708313, 0.857218325138092, 0.8621054291725159, 0.8632941246032715, 0.8665962219238281, 0.869502067565918, 0.8701624870300293, 0.8745211958885193, 0.8726720213890076], "val_loss": [2.246805191040039, 2.0229032039642334, 1.156392216682434, 0.9411495923995972, 0.7576325535774231, 0.7062218189239502, 0.6707249879837036, 0.6576934456825256, 0.63233882188797, 0.5994257926940918, 0.5756474137306213, 0.5605920553207397, 0.5456415414810181, 0.5293046236038208, 0.5141180753707886, 0.5068021416664124, 0.5060420036315918, 0.5015914440155029, 0.49681273102760315, 0.4873681664466858, 0.4790830910205841, 0.4751315116882324, 0.45947128534317017, 0.45147809386253357, 0.4550916254520416, 0.4517975151538849, 0.4459543824195862, 0.44589656591415405, 0.43867847323417664, 0.43432483077049255, 0.4306735396385193, 0.42298445105552673, 0.42010655999183655, 0.4276207983493805, 0.41807591915130615, 0.4196525812149048, 0.41406071186065674, 0.42174553871154785, 0.4156021177768707, 0.4111157953739166, 0.4018217921257019, 0.4055428206920624, 0.41479068994522095, 0.41570597887039185, 0.3992886543273926, 0.39376237988471985, 0.4079022705554962, 0.41178378462791443, 0.4161236882209778], "val_accuracy": [0.42233332991600037, 0.44999998807907104, 0.6380000114440918, 0.6903333067893982, 0.7223333120346069, 0.7459999918937683, 0.746999979019165, 0.7556666731834412, 0.7613333463668823, 0.7739999890327454, 0.7736666798591614, 0.7910000085830688, 0.7906666398048401, 0.8050000071525574, 0.8086666464805603, 0.8130000233650208, 0.8096666932106018, 0.8143333196640015, 0.8173333406448364, 0.8246666789054871, 0.8186666369438171, 0.831333339214325, 0.8330000042915344, 0.8373333215713501, 0.840666651725769, 0.8330000042915344, 0.846666693687439, 0.8463333249092102, 0.8363333344459534, 0.8473333120346069, 0.847000002861023, 0.8456666469573975, 0.8500000238418579, 0.8529999852180481, 0.8566666841506958, 0.8529999852180481, 0.8573333621025085, 0.8553333282470703, 0.8536666631698608, 0.8569999933242798, 0.859000027179718, 0.8583333492279053, 0.859000027179718, 0.8696666955947876, 0.8676666617393494, 0.8650000095367432, 0.8673333525657654, 0.8686666488647461, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 1, 3, 1, 3], [1, 0, 1, 2, 2, 2], [21, 99, 27], [0, 0, 0, 1, 0, 1, 0, 0, 1], [2, 1, 2, 2, 9, 9], [0, 3, 3], [14, 50, 72], [0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3], [0, 0, 6], [0, 56], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 1, 9, 6, 3, 3, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3208780.75, 3.101200580596924, 2.7411298751831055, 2.7654507160186768, 3.017014741897583, 2.7229983806610107, 2.9954848289489746, 2.9246957302093506], "accuracy": [0.09615638852119446, 0.10157178342342377, 0.10196803510189056, 0.09932637959718704, 0.09615638852119446, 0.10011887550354004, 0.09774138033390045, 0.1014397069811821], "val_loss": [3.138842821121216, 2.758033275604248, 2.6368072032928467, 3.2911529541015625, 2.7269935607910156, 2.6182351112365723, 3.221737861633301, 2.502641201019287], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10166666656732559, 0.10100000351667404, 0.09866666793823242, 0.10100000351667404, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 3, 3, 3, 3, 2, 0, 1, 2, 4, 1, 1, 7, 9, 0, 1, 0, 9, 2, 2, 7, 0, 6, 8, 8, 5, 3, 3, 6, 1, 7, 6, 7, 5, 0], [0, 0, 1, 0, 2, 2, 3, 0, 1, 2, 1, 2, 2, 2, 2, 0, 3, 2, 1, 3, 1, 1], [52, 99, 27, 83, 58, 50, 16], [0, 0, 1, 0, 0, 1], [0, 5, 2], [0, 3, 3], [42], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3, 7], [3, 0, 4, 0], [5, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 57, 35, 22, 7, 3, 2, 1, 1, 9, 5, 4, 2, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.pow(tf.math.subtract(tf.math.subtract(grad, tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(tf.math.square(grad)))))))), tf.math.multiply(grad, grad)))), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.square(alpha), grad), alpha)))), tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 2, 4, 1, 7, 7, 0, 6, 4, 1, 1, 6, 1, 8, 7, 7, 0, 2, 4, 2, 7, 1, 6, 4, 2, 7, 1, 9, 2, 5, 6, 4, 7, 7, 2, 0, 4, 3, 6, 6, 0, 3, 4, 3, 1, 3, 5, 3, 1, 9, 3, 1, 4, 5, 0, 4, 7, 3, 2, 7, 4, 3, 3, 8, 4, 8, 1, 1, 9], [0, 3, 3, 5, 4, 1, 2, 0, 0, 2, 1, 5, 0, 2, 0, 5, 0, 3, 1, 4, 5, 3, 5, 2, 1, 1, 5, 4, 2, 2, 5, 1, 0, 5, 4, 4, 1, 3, 3, 0, 5, 3, 1, 2, 4, 2, 3, 3, 2, 3, 2, 4, 1], [0, 59, 24, 49, 46, 63, 51, 44, 39, 66, 26], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 1], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09600000083446503, "mapping_values": [1, 10, 5, 5, 3, 123, 70, 53, 11, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.add(grad, grad), alpha)), beta)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, alpha), grad), tf.math.add(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.negative(tf.math.pow(alpha, grad)), grad), grad)), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.math.subtract(beta, tf.math.multiply(alpha, alpha)), tf.math.square(grad)), grad))), beta), beta), tf.math.multiply(grad, alpha))), tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.subtract(grad, grad), grad)))), tf.math.pow(alpha, grad))))), tf.math.square(grad))), tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.multiply(grad, alpha)), beta), tf.math.multiply(tf.math.sqrt(grad), beta))), tf.math.pow(tf.math.sqrt(grad), tf.math.subtract(grad, beta))), grad)))), beta)), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3103392124176025, 2.310014009475708, 2.3095180988311768, 2.3094968795776367, 2.310969114303589, 2.3089280128479004], "accuracy": [0.09021265059709549, 0.09536388516426086, 0.0956280529499054, 0.09179764986038208, 0.09192973375320435, 0.09774138033390045], "val_loss": [2.3090152740478516, 2.3090152740478516, 2.3090152740478516, 2.3090152740478516, 2.3090152740478516, 2.3090152740478516], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 9, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 9], [0, 0, 6], [0, 58], [0, 1, 0, 1], [3, 0], [1, 0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 3, 3, 3, 6, 3, 3, 1, 5, 4, 1, 2, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309462070465088, 2.3095343112945557, 2.3099465370178223, 2.3101108074188232, 2.3093373775482178, 2.309473991394043], "accuracy": [0.09034473448991776, 0.0944393053650856, 0.09377889335155487, 0.08717474341392517, 0.09034473448991776, 0.0956280529499054], "val_loss": [2.3089358806610107, 2.3089358806610107, 2.3089358806610107, 2.3089358806610107, 2.3089358806610107, 2.3089358806610107], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]