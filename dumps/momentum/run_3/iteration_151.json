[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926623821258545, 2.187696933746338, 1.7541643381118774, 1.3581359386444092, 1.0331348180770874, 0.8934782147407532, 0.8342557549476624, 0.79622882604599, 0.7527713179588318, 0.7386886477470398, 0.7083351016044617, 0.6903077363967896, 0.6602575778961182, 0.6470146179199219, 0.6225898861885071, 0.5959914326667786, 0.5932750701904297, 0.5912300944328308, 0.5711642503738403, 0.5519612431526184, 0.5492475628852844, 0.5285194516181946, 0.5173537731170654, 0.5094513893127441, 0.5076771974563599, 0.4948790669441223, 0.47261592745780945, 0.4830615520477295, 0.4576832056045532, 0.4561455547809601, 0.44678211212158203, 0.44133618474006653, 0.444516658782959, 0.4210503101348877, 0.4151131212711334, 0.40801897644996643, 0.4019138216972351, 0.3902227282524109, 0.38734501600265503, 0.3817750811576843, 0.3755188584327698, 0.3626500964164734, 0.36908042430877686, 0.35948485136032104, 0.3594738245010376, 0.3487216532230377, 0.3564728796482086, 0.3491169810295105, 0.34781792759895325, 0.3372509479522705, 0.3392173945903778], "accuracy": [0.12996962666511536, 0.3267732262611389, 0.4418174624443054, 0.5456346869468689, 0.6388852000236511, 0.6716417670249939, 0.6933034062385559, 0.7067758440971375, 0.715889573097229, 0.7140403985977173, 0.7218332886695862, 0.7374191284179688, 0.7421740889549255, 0.7586844563484192, 0.7613261342048645, 0.7703077793121338, 0.7745344042778015, 0.7713643908500671, 0.7796856164932251, 0.7854973077774048, 0.7905164361000061, 0.7976489067077637, 0.8026680946350098, 0.8137630224227905, 0.8042530417442322, 0.8063663840293884, 0.8208954930305481, 0.8220842480659485, 0.8265751004219055, 0.8278959393501282, 0.8333113193511963, 0.8329150676727295, 0.8354246616363525, 0.8408400416374207, 0.8428213000297546, 0.8392550349235535, 0.8475762605667114, 0.8539162874221802, 0.8552370667457581, 0.8588033318519592, 0.8602562546730042, 0.8589354157447815, 0.8560295701026917, 0.8659358024597168, 0.8648791313171387, 0.8659358024597168, 0.8701624870300293, 0.8730682730674744, 0.8681812286376953, 0.8687095642089844, 0.8705587387084961], "val_loss": [2.245293378829956, 2.0118489265441895, 1.1189428567886353, 0.8324759006500244, 0.7547910213470459, 0.6986649036407471, 0.6680608987808228, 0.6410276889801025, 0.6321269273757935, 0.6019520163536072, 0.5610036849975586, 0.5463680624961853, 0.5496683120727539, 0.5397968888282776, 0.527471125125885, 0.5174252986907959, 0.5136728882789612, 0.4991293251514435, 0.5016067624092102, 0.49263906478881836, 0.4894161522388458, 0.4801540672779083, 0.47290387749671936, 0.45180150866508484, 0.45242300629615784, 0.43084993958473206, 0.4376940131187439, 0.42589449882507324, 0.42339932918548584, 0.4185095727443695, 0.40752360224723816, 0.40411409735679626, 0.40011072158813477, 0.39021483063697815, 0.38891860842704773, 0.38899970054626465, 0.373648464679718, 0.38677212595939636, 0.37599748373031616, 0.3738839626312256, 0.3721569776535034, 0.3830864727497101, 0.37861812114715576, 0.3720811903476715, 0.3937643766403198, 0.38376009464263916, 0.38753294944763184, 0.38015034794807434, 0.3811477720737457, 0.37193554639816284, 0.374393105506897], "val_accuracy": [0.4429999887943268, 0.4593333303928375, 0.6600000262260437, 0.70333331823349, 0.7306666374206543, 0.7293333411216736, 0.7463333606719971, 0.7443333268165588, 0.762666642665863, 0.765666663646698, 0.7773333191871643, 0.7876666784286499, 0.7906666398048401, 0.7866666913032532, 0.793666660785675, 0.7983333468437195, 0.8003333210945129, 0.8140000104904175, 0.7996666431427002, 0.7990000247955322, 0.8169999718666077, 0.8180000185966492, 0.8140000104904175, 0.8286666870117188, 0.8320000171661377, 0.8426666855812073, 0.8426666855812073, 0.8429999947547913, 0.8386666774749756, 0.8529999852180481, 0.8560000061988831, 0.8586666584014893, 0.8546666502952576, 0.859000027179718, 0.859000027179718, 0.8640000224113464, 0.8673333525657654, 0.8650000095367432, 0.8666666746139526, 0.8669999837875366, 0.8706666827201843, 0.8713333606719971, 0.8703333139419556, 0.8659999966621399, 0.8656666874885559, 0.8803333044052124, 0.8736666440963745, 0.8733333349227905, 0.8690000176429749, 0.8676666617393494, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 5, 3], [0, 0, 1, 0, 2], [83, 99, 55], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [60], [0, 1, 0, 1, 1, 1, 1], [0, 1, 4, 0], [0, 1, 4], [0, 66], [0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 5, 5, 2], [1, 0, 6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.square(alpha)), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 8, 5, 3, 1], "tree_depth": 11}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 8, 9, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 1, 2, 6, 2, 4, 0, 0, 3, 3, 0, 8, 1, 3, 9], [0, 3, 3, 4, 4, 1, 2, 4, 0, 0], [0, 89, 88, 59], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [4, 0, 4, 3, 6, 9], [0, 0, 4, 2], [0, 58, 86], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 25, 15, 10, 4, 10, 6, 4, 3, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.pow(tf.math.negative(grad), tf.math.negative(grad))), tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(beta)), tf.math.sqrt(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, beta))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303337812423706, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 2, 2, 4, 0, 0], [0, 3, 3, 1, 0], [0, 80], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 6, 4], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, tf.math.pow(tf.math.negative(tf.math.negative(alpha)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 1], [83, 99, 63], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3, 8], [2, 0, 4], [0, 58], [1, 0], [2], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310976028442383, 2.3097822666168213, 2.309936761856079, 2.311040163040161, 2.311126232147217, 2.31081223487854], "accuracy": [0.09166556596755981, 0.09391097724437714, 0.0952318087220192, 0.09338264167308807, 0.08770307898521423, 0.08902391046285629], "val_loss": [2.308854103088379, 2.308854103088379, 2.308854103088379, 2.308854103088379, 2.308854103088379, 2.308854103088379], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]