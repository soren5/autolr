[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948877811431885, 2.1954846382141113, 1.7930604219436646, 1.3646754026412964, 1.1012818813323975, 0.9411959648132324, 0.8554933667182922, 0.8345027565956116, 0.7798101305961609, 0.749616801738739, 0.6855085492134094, 0.6688554286956787, 0.655380368232727, 0.6226345300674438, 0.6134007573127747, 0.5986575484275818, 0.5848514437675476, 0.5766753554344177, 0.5731635689735413, 0.5459082126617432, 0.5263314247131348, 0.5312963128089905, 0.5132877826690674, 0.49971631169319153, 0.5028613209724426, 0.48898208141326904, 0.48745039105415344, 0.4650484621524811, 0.4590970575809479, 0.45980605483055115, 0.43793773651123047, 0.43147653341293335, 0.422543466091156, 0.41548416018486023, 0.41713207960128784, 0.40661177039146423, 0.39301422238349915, 0.3974282741546631, 0.39296436309814453, 0.37487778067588806, 0.3682710826396942, 0.3683367967605591, 0.36311736702919006, 0.3414930999279022, 0.3475029170513153, 0.3410283327102661, 0.33939436078071594, 0.34266453981399536, 0.31287017464637756, 0.31818220019340515, 0.31779056787490845, 0.31292906403541565, 0.3013741075992584, 0.2995980381965637, 0.30085739493370056, 0.3029523193836212, 0.2981523871421814, 0.2951223850250244], "accuracy": [0.1266675442457199, 0.32320696115493774, 0.42609959840774536, 0.5381059050559998, 0.6333377361297607, 0.6487914323806763, 0.6853784322738647, 0.6933034062385559, 0.7077004313468933, 0.7170783281326294, 0.7357020378112793, 0.7474573850631714, 0.7461365461349487, 0.7574957013130188, 0.7647602558135986, 0.7712323069572449, 0.7769119143486023, 0.7773081660270691, 0.778232753276825, 0.7857614755630493, 0.7965922355651855, 0.7918372750282288, 0.8053097128868103, 0.8078193068504333, 0.8059701323509216, 0.8170651197433472, 0.8136309385299683, 0.8204993009567261, 0.8231409192085266, 0.8240655064582825, 0.8297450542449951, 0.8364813327789307, 0.8345000743865967, 0.8380662798881531, 0.8372738361358643, 0.8422929644584656, 0.8491612672805786, 0.8506141901016235, 0.8496896028518677, 0.8529917001724243, 0.8590674996376038, 0.857218325138092, 0.8557654023170471, 0.8658037185668945, 0.8627657890319824, 0.8622375130653381, 0.8673887252807617, 0.8659358024597168, 0.8794082403182983, 0.8749174475669861, 0.8778232932090759, 0.8812574148178101, 0.8787478804588318, 0.8841632604598999, 0.8809932470321655, 0.8766345381736755, 0.8804649114608765, 0.8848236799240112], "val_loss": [2.247529983520508, 2.0335114002227783, 1.155472993850708, 0.8592795133590698, 0.750808596611023, 0.7304698824882507, 0.6456077694892883, 0.6257857084274292, 0.6296886205673218, 0.6070670485496521, 0.5511266589164734, 0.53155118227005, 0.528304934501648, 0.5311113595962524, 0.5157961249351501, 0.4984745681285858, 0.5018811225891113, 0.4928642511367798, 0.48898738622665405, 0.4902074337005615, 0.46941518783569336, 0.4600239396095276, 0.4597311317920685, 0.45761969685554504, 0.45749470591545105, 0.43508219718933105, 0.4414220452308655, 0.43007975816726685, 0.4291536808013916, 0.42972779273986816, 0.4252420961856842, 0.4084354639053345, 0.40831151604652405, 0.4072764813899994, 0.4027370512485504, 0.4104064106941223, 0.426766037940979, 0.41800764203071594, 0.41849836707115173, 0.4336315393447876, 0.42286571860313416, 0.40909886360168457, 0.4095710813999176, 0.41921699047088623, 0.40877702832221985, 0.4043923318386078, 0.42768359184265137, 0.4185326397418976, 0.40205496549606323, 0.40598633885383606, 0.41404110193252563, 0.4081402122974396, 0.4193907082080841, 0.4317120909690857, 0.4367465078830719, 0.4301920533180237, 0.42750224471092224, 0.42822134494781494], "val_accuracy": [0.4346666634082794, 0.4633333384990692, 0.6639999747276306, 0.7070000171661377, 0.7273333072662354, 0.7379999756813049, 0.7483333349227905, 0.753333330154419, 0.7643333077430725, 0.7670000195503235, 0.7796666622161865, 0.7846666574478149, 0.79666668176651, 0.7929999828338623, 0.8059999942779541, 0.8090000152587891, 0.8013333082199097, 0.8149999976158142, 0.8113333582878113, 0.8050000071525574, 0.8253333568572998, 0.8309999704360962, 0.8299999833106995, 0.8259999752044678, 0.8326666951179504, 0.8426666855812073, 0.8433333039283752, 0.8460000157356262, 0.8473333120346069, 0.8506666421890259, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8650000095367432, 0.8610000014305115, 0.8633333444595337, 0.8656666874885559, 0.8606666922569275, 0.8610000014305115, 0.8650000095367432, 0.8669999837875366, 0.871666669845581, 0.8673333525657654, 0.8700000047683716, 0.8676666617393494, 0.8703333139419556, 0.874666690826416, 0.878000020980835, 0.8723333477973938, 0.8709999918937683, 0.8756666779518127, 0.8769999742507935, 0.8790000081062317, 0.871999979019165, 0.8683333396911621, 0.8696666955947876, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292637348175049, 2.187669515609741, 1.7653882503509521, 1.3516651391983032, 1.0774222612380981, 0.9332837462425232, 0.841852605342865, 0.8315157294273376, 0.7760911583900452, 0.7491657733917236, 0.7073372006416321, 0.7002407312393188, 0.6536639332771301, 0.6367611885070801, 0.6173166632652283, 0.6058043241500854, 0.5929465889930725, 0.5743526220321655, 0.5728254914283752, 0.5618107318878174, 0.5591024160385132, 0.5212790966033936, 0.5311594009399414, 0.5024475455284119, 0.4943215250968933, 0.499981552362442, 0.4819529354572296, 0.47598686814308167, 0.4670410454273224, 0.4633972644805908, 0.4458753168582916, 0.4296512305736542, 0.42221513390541077, 0.4163467288017273, 0.4136994183063507, 0.4029792249202728, 0.406340092420578, 0.3969278037548065, 0.3925729990005493, 0.3811682164669037, 0.37015897035598755, 0.37424901127815247, 0.36881023645401], "accuracy": [0.13089419901371002, 0.32505613565444946, 0.4403645396232605, 0.5394267439842224, 0.6326773166656494, 0.6656980514526367, 0.6968696117401123, 0.7010962963104248, 0.698190450668335, 0.7149649858474731, 0.7318716049194336, 0.735041618347168, 0.7589486241340637, 0.7613261342048645, 0.7675340175628662, 0.7730814814567566, 0.7738739848136902, 0.7844406366348267, 0.7858935594558716, 0.7849689722061157, 0.791969358921051, 0.8063663840293884, 0.8026680946350098, 0.8083476424217224, 0.8168009519577026, 0.8136309385299683, 0.8170651197433472, 0.8177255392074585, 0.8247259259223938, 0.8276317715644836, 0.8358209133148193, 0.8337075710296631, 0.8417646288871765, 0.8445383906364441, 0.8451988101005554, 0.8487650156021118, 0.8481045961380005, 0.8524633646011353, 0.8544445633888245, 0.8584070801734924, 0.8573504090309143, 0.858671247959137, 0.8613129258155823], "val_loss": [2.245622158050537, 2.012371301651001, 1.107818841934204, 0.8280829787254333, 0.7561895251274109, 0.6999788284301758, 0.6375821232795715, 0.6320106387138367, 0.6496537327766418, 0.6215776205062866, 0.5629621744155884, 0.5498008131980896, 0.5372726917266846, 0.5385274291038513, 0.5315552353858948, 0.5063724517822266, 0.49717235565185547, 0.49071794748306274, 0.4854898154735565, 0.4824008643627167, 0.47491779923439026, 0.4708297550678253, 0.46664053201675415, 0.4594751298427582, 0.45673733949661255, 0.45158594846725464, 0.45396047830581665, 0.44406092166900635, 0.4337317645549774, 0.43311384320259094, 0.4345955550670624, 0.42081716656684875, 0.4172429144382477, 0.4132358729839325, 0.40431690216064453, 0.3967786431312561, 0.3991515040397644, 0.39974772930145264, 0.40024909377098083, 0.3935750722885132, 0.395241916179657, 0.4054213762283325, 0.39397892355918884], "val_accuracy": [0.4086666703224182, 0.4793333411216736, 0.6596666574478149, 0.703000009059906, 0.7269999980926514, 0.7446666955947876, 0.7616666555404663, 0.762333333492279, 0.7406666874885559, 0.765666663646698, 0.7803333401679993, 0.7879999876022339, 0.7886666655540466, 0.7973333597183228, 0.7960000038146973, 0.8046666383743286, 0.8199999928474426, 0.8236666917800903, 0.8169999718666077, 0.8226666450500488, 0.8286666870117188, 0.8233333230018616, 0.8416666388511658, 0.8366666436195374, 0.8339999914169312, 0.8413333296775818, 0.8349999785423279, 0.8510000109672546, 0.8493333458900452, 0.8510000109672546, 0.8473333120346069, 0.8506666421890259, 0.8516666889190674, 0.8573333621025085, 0.8583333492279053, 0.8613333106040955, 0.8629999756813049, 0.8686666488647461, 0.8666666746139526, 0.8666666746139526, 0.8676666617393494, 0.8679999709129333, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5, 0], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 1], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [21182474.0, 49137621925888.0, 6082130568282112.0, 4.532839764721664e+16, 1.5457406909677568e+17, 3.629776505090867e+17], "accuracy": [0.09549596905708313, 0.09826971590518951, 0.10408136248588562, 0.10460969805717468, 0.10038304328918457, 0.09985470771789551], "val_loss": [1431611008.0, 636440467734528.0, 1.5706536487682048e+16, 7.140459580017869e+16, 1.943661680001024e+17, 4.112681668412703e+17], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 6, 9, 2, 3, 0, 3, 6, 1, 0, 6, 7, 5], [0, 0, 1, 0, 2, 0, 1, 0, 1, 0, 0, 0], [83, 99, 4, 35, 80, 21, 63, 11, 60], [0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 7, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 17, 12, 9, 7, 4, 3, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3595190048217773, 2.779027223587036, 3.5596868991851807, 4.475949764251709, 5.398898601531982, 6.2733988761901855], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.5321507453918457, 3.1943910121917725, 4.08305549621582, 5.012135982513428, 5.90595006942749, 6.744174003601074], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 7, 4], [0, 58], [0, 1, 0, 1, 1], [4, 4], [1, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 1, 5, 2, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.pow(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 1, 3, 1, 7], [0, 0, 1, 2, 2, 0], [83, 99, 27], [0, 1, 0, 0, 1, 1], [0, 0, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [4], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]