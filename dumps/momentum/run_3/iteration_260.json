[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292811870574951, 2.1880874633789062, 1.7727456092834473, 1.353951096534729, 1.0765591859817505, 0.9243013858795166, 0.8592484593391418, 0.8212289810180664, 0.7928956151008606, 0.7580691576004028, 0.718337893486023, 0.6978299021720886, 0.6724584102630615, 0.6451509594917297, 0.6332717537879944, 0.6075089573860168, 0.6059547066688538, 0.6142879724502563, 0.5907520651817322, 0.5844111442565918, 0.5603665113449097, 0.5471394062042236, 0.5304694175720215, 0.5210581421852112, 0.5099812150001526, 0.5070568323135376, 0.505815863609314, 0.49665436148643494, 0.47570157051086426, 0.46603861451148987, 0.45237842202186584, 0.45405206084251404, 0.44417616724967957, 0.4216216802597046, 0.4310619831085205, 0.41744446754455566, 0.39247167110443115, 0.4054092466831207, 0.39450231194496155, 0.38561689853668213, 0.3900863826274872, 0.37454715371131897, 0.3707321286201477, 0.35741332173347473, 0.3499065041542053, 0.34059426188468933, 0.3382795751094818, 0.3322765827178955, 0.33938485383987427], "accuracy": [0.12468630075454712, 0.3195086419582367, 0.43309998512268066, 0.5361247062683105, 0.6361114978790283, 0.6571126580238342, 0.685510516166687, 0.7003037929534912, 0.6929071545600891, 0.7067758440971375, 0.7238145470619202, 0.7275128960609436, 0.7440232634544373, 0.7471932172775269, 0.7473253011703491, 0.7601373791694641, 0.7712323069572449, 0.7714964747428894, 0.7790252566337585, 0.7819310426712036, 0.7829877138137817, 0.7873464822769165, 0.8013472557067871, 0.8057059645652771, 0.8026680946350098, 0.8047813773155212, 0.8042530417442322, 0.8083476424217224, 0.8191784620285034, 0.826310932636261, 0.8245938420295715, 0.8298771381378174, 0.8313300609588623, 0.841500461101532, 0.8337075710296631, 0.8370096683502197, 0.8469158411026001, 0.845859169960022, 0.8479725122451782, 0.8495575189590454, 0.845859169960022, 0.8558974862098694, 0.8496896028518677, 0.8610487580299377, 0.8644828796386719, 0.8609166741371155, 0.8650112152099609, 0.8706908226013184, 0.8681812286376953], "val_loss": [2.2457828521728516, 2.0168375968933105, 1.1443891525268555, 0.8768911361694336, 0.7630412578582764, 0.7137547135353088, 0.6595501899719238, 0.6274549961090088, 0.6270730495452881, 0.6045392751693726, 0.56649249792099, 0.5535494685173035, 0.533186674118042, 0.5274662971496582, 0.530495822429657, 0.5196102857589722, 0.5048395395278931, 0.5042984485626221, 0.5107600092887878, 0.5022711753845215, 0.4896790087223053, 0.47193360328674316, 0.4700944125652313, 0.4557723104953766, 0.4559527039527893, 0.4605814218521118, 0.4492324888706207, 0.4471786618232727, 0.44387784600257874, 0.43798649311065674, 0.4361524283885956, 0.425710529088974, 0.4259096682071686, 0.43783456087112427, 0.425586462020874, 0.4214518964290619, 0.43747350573539734, 0.4213358461856842, 0.4283158481121063, 0.4395871162414551, 0.4234394133090973, 0.43464916944503784, 0.43513646721839905, 0.4217452108860016, 0.42706966400146484, 0.41967180371284485, 0.42554956674575806, 0.4486978352069855, 0.4365365505218506], "val_accuracy": [0.4269999861717224, 0.44699999690055847, 0.640666663646698, 0.6890000104904175, 0.7173333168029785, 0.7386666536331177, 0.7433333396911621, 0.75, 0.7646666765213013, 0.7693333625793457, 0.7763333320617676, 0.7746666669845581, 0.7910000085830688, 0.7946666479110718, 0.7940000295639038, 0.7919999957084656, 0.7990000247955322, 0.8033333420753479, 0.7976666688919067, 0.8046666383743286, 0.8053333163261414, 0.8186666369438171, 0.8306666612625122, 0.8360000252723694, 0.8343333601951599, 0.8370000123977661, 0.8343333601951599, 0.8450000286102295, 0.8410000205039978, 0.8410000205039978, 0.8429999947547913, 0.8460000157356262, 0.8476666808128357, 0.8519999980926514, 0.8553333282470703, 0.8569999933242798, 0.8569999933242798, 0.8586666584014893, 0.8583333492279053, 0.8569999933242798, 0.8569999933242798, 0.862333357334137, 0.8673333525657654, 0.8686666488647461, 0.8676666617393494, 0.8686666488647461, 0.8646666407585144, 0.8669999837875366, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 20, 27], [0, 1, 1, 0, 1, 1], [0, 6, 2], [0, 5, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 1], [0, 0, 4], [0, 62], [0, 1], [0], [1], [0]], "fitness": -0.2825714349746704, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2612173557281494, 15507.4404296875, NaN, NaN, NaN, NaN], "accuracy": [0.1904636174440384, 0.23405098915100098, 0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0633485317230225, 13730872.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.2823333442211151, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 1], [71, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 5], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0886276587843895, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 6, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 4, 2, 6, 0, 4, 6, 3, 4, 8, 1, 9], [1, 0, 3, 3, 1, 4, 3, 4], [0, 21], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 20, 12, 8, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(grad, grad))), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(alpha, grad), tf.math.sqrt(grad)), tf.math.subtract(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [48186720256.0, 6911016566784.0, 119941130878976.0, 839697714642944.0, 3718665899868160.0, 1.2217346932342784e+16], "accuracy": [0.09457138925790787, 0.10051512718200684, 0.09285431355237961, 0.10249637067317963, 0.09628847241401672, 0.09800554811954498], "val_loss": [469016870912.0, 25286422822912.0, 271413109850112.0, 1479688308391936.0, 5543272160165888.0, 1.635001170919424e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [4, 3, 3], [71], [1, 0, 0, 0, 1, 1, 1], [0, 8, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3087775707244873, 2.3113327026367188, 2.31016206741333, 2.3101859092712402, 2.3085501194000244, 2.309551954269409], "accuracy": [0.09470347315073013, 0.09060890227556229, 0.08757099509239197, 0.09602430462837219, 0.09377889335155487, 0.09060890227556229], "val_loss": [2.308819055557251, 2.308819055557251, 2.308819055557251, 2.308819055557251, 2.308819055557251, 2.308819055557251], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]