[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933990955352783, 2.1882479190826416, 1.7653049230575562, 1.3356480598449707, 1.0953718423843384, 0.9222263097763062, 0.8492710590362549, 0.8103970289230347, 0.7786157727241516, 0.7666590809822083, 0.7157207131385803, 0.6881307363510132, 0.6550180315971375, 0.6345826983451843, 0.6071381568908691, 0.593532919883728, 0.5966899991035461, 0.5761703252792358, 0.5653407573699951, 0.5509112477302551, 0.5439350008964539, 0.5373192429542542, 0.5189792513847351, 0.5207280516624451, 0.5093598961830139, 0.49437975883483887, 0.4713449478149414, 0.47166261076927185, 0.47850272059440613, 0.46179887652397156, 0.46062883734703064, 0.4518086314201355, 0.4344141483306885, 0.4239339232444763, 0.4247702360153198, 0.4234843850135803, 0.4118601679801941, 0.40398797392845154, 0.3987319767475128, 0.39172980189323425, 0.37863996624946594, 0.37887337803840637, 0.3668195605278015, 0.3659728467464447, 0.3699452877044678, 0.36421236395835876, 0.34799644351005554, 0.34198546409606934, 0.3445534110069275, 0.33698391914367676, 0.3404364585876465, 0.3258018493652344, 0.32552334666252136, 0.3324502110481262, 0.3254458010196686, 0.3180144131183624, 0.31097233295440674], "accuracy": [0.12732796370983124, 0.32664114236831665, 0.443798691034317, 0.5518425703048706, 0.6252806782722473, 0.6618676781654358, 0.6927750706672668, 0.7029454708099365, 0.7020208835601807, 0.7059833407402039, 0.7240787148475647, 0.737022876739502, 0.7441553473472595, 0.7568352818489075, 0.7701756954193115, 0.7754589915275574, 0.7794214487075806, 0.780610203742981, 0.7857614755630493, 0.7895918488502502, 0.7881389260292053, 0.7921014428138733, 0.802800178527832, 0.7984414100646973, 0.8025360107421875, 0.8144234418869019, 0.817989706993103, 0.8137630224227905, 0.8207634687423706, 0.8187822103500366, 0.817989706993103, 0.8293488025665283, 0.8358209133148193, 0.8400475382804871, 0.8404437899589539, 0.8399154543876648, 0.8383304476737976, 0.8445383906364441, 0.8408400416374207, 0.8473120927810669, 0.8568220734596252, 0.8548408150672913, 0.8581429123878479, 0.857218325138092, 0.8553691506385803, 0.858671247959137, 0.8654074668884277, 0.8643507957458496, 0.8625016212463379, 0.8643507957458496, 0.8639545440673828, 0.870030403137207, 0.8709549307823181, 0.8663320541381836, 0.8709549307823181, 0.8782195448875427, 0.8803328275680542], "val_loss": [2.2441091537475586, 2.0091359615325928, 1.0997906923294067, 0.8323304057121277, 0.7546741366386414, 0.6731743216514587, 0.6337941884994507, 0.6336519122123718, 0.6429766416549683, 0.593794047832489, 0.5519315600395203, 0.5318860411643982, 0.519519567489624, 0.5025070905685425, 0.49770280718803406, 0.49228817224502563, 0.47132617235183716, 0.4742141664028168, 0.469587117433548, 0.4695673882961273, 0.4610992968082428, 0.4553399682044983, 0.44044026732444763, 0.43257004022598267, 0.43730661273002625, 0.437938392162323, 0.43508365750312805, 0.4287945032119751, 0.43251651525497437, 0.42144083976745605, 0.41729432344436646, 0.42434945702552795, 0.4093432128429413, 0.4045076370239258, 0.414520800113678, 0.4152127802371979, 0.4112849235534668, 0.39920181035995483, 0.4039771258831024, 0.40208569169044495, 0.3959021270275116, 0.3977433741092682, 0.40663835406303406, 0.39509373903274536, 0.394550621509552, 0.4057903289794922, 0.41737496852874756, 0.4245002567768097, 0.4024910628795624, 0.3955581486225128, 0.39561817049980164, 0.3933756649494171, 0.3953447937965393, 0.4023453891277313, 0.4200671315193176, 0.41863346099853516, 0.4177933633327484], "val_accuracy": [0.3986666798591614, 0.48233333230018616, 0.6586666703224182, 0.7170000076293945, 0.7403333187103271, 0.7639999985694885, 0.7693333625793457, 0.7649999856948853, 0.7770000100135803, 0.7726666927337646, 0.7896666526794434, 0.79666668176651, 0.8043333292007446, 0.8140000104904175, 0.8133333325386047, 0.8130000233650208, 0.8276666402816772, 0.8289999961853027, 0.8243333101272583, 0.8236666917800903, 0.8253333568572998, 0.8353333473205566, 0.8446666598320007, 0.8363333344459534, 0.8443333506584167, 0.843999981880188, 0.8453333377838135, 0.8519999980926514, 0.8496666550636292, 0.8543333411216736, 0.8560000061988831, 0.8576666712760925, 0.8636666536331177, 0.8640000224113464, 0.8673333525657654, 0.8676666617393494, 0.8646666407585144, 0.8666666746139526, 0.8643333315849304, 0.8676666617393494, 0.8723333477973938, 0.8703333139419556, 0.8730000257492065, 0.8683333396911621, 0.8686666488647461, 0.8723333477973938, 0.8740000128746033, 0.8709999918937683, 0.8709999918937683, 0.8740000128746033, 0.8759999871253967, 0.8816666603088379, 0.8769999742507935, 0.8759999871253967, 0.8786666393280029, 0.8786666393280029, 0.8796666860580444]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 2, 4, 4, 5, 8, 1], [0, 3, 3, 2, 5, 5], [0], [0, 0, 0, 0, 1, 1, 0], [0, 9, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [6], [0]], "fitness": -0.27457141876220703, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.math.pow(grad, tf.math.square(beta)), tf.math.sqrt(tf.math.subtract(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.295987606048584, 2.2885866165161133, 2.6286368370056152, 2.3062891960144043, 2.3036460876464844, 2.3031651973724365, 2.3030459880828857], "accuracy": [0.18663319945335388, 0.12112006545066833, 0.13630960881710052, 0.09470347315073013, 0.09642054885625839, 0.09826971590518951, 0.09721305221319199], "val_loss": [2.305755615234375, 2.1588172912597656, 2.3075199127197266, 2.3037376403808594, 2.3027756214141846, 2.30257511138916, 2.302741765975952], "val_accuracy": [0.09733333438634872, 0.2720000147819519, 0.09733333438634872, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 3], [0, 0, 2, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 1], [0, 58], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 4, 0, 3, 2, 1, 8, 0, 4, 1, 8], [1, 4, 3, 7, 4, 7, 7, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 7, 4, 3, 2, 19, 11, 8, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.multiply(grad, tf.math.add(sigma, grad))), tf.math.subtract(tf.math.sqrt(grad), tf.math.negative(tf.math.pow(tf.math.subtract(grad, tf.math.sqrt(grad)), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 78], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.2947356347480932e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14938580989837646, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 3, 2], [99, 99, 27], [0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 1], [3, 1, 3, 4], [0], [0, 1, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(grad, alpha), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034870624542236, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]