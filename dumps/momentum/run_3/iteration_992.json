[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [81, 99, 27], [1, 0, 0, 0, 1, 1], [0, 2, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 5, 4], [0, 0, 4, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927327156066895, 2.1872575283050537, 1.7633323669433594, 1.352429986000061, 1.0757534503936768, 0.9247846007347107, 0.8513966202735901, 0.7896807193756104, 0.7490826845169067, 0.735874593257904, 0.6920546889305115, 0.665282666683197, 0.6371190547943115, 0.6157240867614746, 0.5992196798324585, 0.5915970802307129, 0.5802379250526428, 0.5609032511711121, 0.5402854681015015, 0.5438416600227356, 0.528080940246582, 0.5160936713218689, 0.4984934628009796, 0.49880722165107727, 0.48562929034233093, 0.47754421830177307, 0.46371716260910034, 0.45175474882125854, 0.45078766345977783, 0.4390268325805664, 0.44043102860450745, 0.41479745507240295, 0.40421852469444275, 0.41151952743530273, 0.40810272097587585, 0.3972574472427368, 0.38877424597740173, 0.379133403301239, 0.37672582268714905, 0.36842015385627747, 0.3651476502418518, 0.3687548339366913, 0.364000529050827, 0.3558165431022644, 0.34650275111198425, 0.338948518037796, 0.3297540843486786, 0.3212187886238098, 0.3244360387325287, 0.318597674369812], "accuracy": [0.13036586344242096, 0.3263769745826721, 0.43970412015914917, 0.5493329763412476, 0.6318848133087158, 0.6654338836669922, 0.6897371411323547, 0.7078325152397156, 0.7137762308120728, 0.7235503792762756, 0.7318716049194336, 0.7456082701683044, 0.7605336308479309, 0.767930269241333, 0.7691190242767334, 0.7740060687065125, 0.7774402499198914, 0.7869502305984497, 0.7943468689918518, 0.7866860628128052, 0.7957997918128967, 0.8031964302062988, 0.8138951063156128, 0.8099326491355896, 0.8189142942428589, 0.8240655064582825, 0.8230088353157043, 0.8261788487434387, 0.8267071843147278, 0.835160493850708, 0.8335754871368408, 0.841500461101532, 0.8428213000297546, 0.845859169960022, 0.844010055065155, 0.8490291833877563, 0.8519350290298462, 0.8569541573524475, 0.8548408150672913, 0.8599920868873596, 0.8561616539955139, 0.8593316674232483, 0.8577466607093811, 0.8613129258155823, 0.8610487580299377, 0.8656716346740723, 0.8709549307823181, 0.8721436858177185, 0.8708229064941406, 0.8737286925315857], "val_loss": [2.246058940887451, 2.01570725440979, 1.1350644826889038, 0.8763911128044128, 0.7635895013809204, 0.7156634330749512, 0.6614320874214172, 0.6396219730377197, 0.6371601819992065, 0.6202609539031982, 0.5710261464118958, 0.5405730605125427, 0.5314856171607971, 0.522006094455719, 0.5080932378768921, 0.5024699568748474, 0.4990713596343994, 0.4973505139350891, 0.4995735287666321, 0.48518016934394836, 0.4829956889152527, 0.4813437759876251, 0.48267704248428345, 0.4737379848957062, 0.4651123583316803, 0.47007402777671814, 0.4674443304538727, 0.4664519727230072, 0.4609260559082031, 0.4557398557662964, 0.4465608298778534, 0.44357767701148987, 0.45020121335983276, 0.44358325004577637, 0.426654577255249, 0.4217822551727295, 0.4295685887336731, 0.4300667345523834, 0.43227505683898926, 0.4218776524066925, 0.4266960918903351, 0.41777464747428894, 0.41651391983032227, 0.41326406598091125, 0.41479507088661194, 0.42189425230026245, 0.41740682721138, 0.4285740554332733, 0.4222836196422577, 0.42432764172554016], "val_accuracy": [0.4059999883174896, 0.4313333332538605, 0.6363333463668823, 0.6916666626930237, 0.7196666598320007, 0.7253333330154419, 0.750333309173584, 0.765333354473114, 0.7599999904632568, 0.7680000066757202, 0.7773333191871643, 0.7850000262260437, 0.7803333401679993, 0.7976666688919067, 0.8013333082199097, 0.8003333210945129, 0.8096666932106018, 0.8056666851043701, 0.8043333292007446, 0.8206666707992554, 0.8190000057220459, 0.8203333616256714, 0.8230000138282776, 0.8243333101272583, 0.8296666741371155, 0.8323333263397217, 0.82833331823349, 0.8339999914169312, 0.8339999914169312, 0.8339999914169312, 0.8379999995231628, 0.8426666855812073, 0.8463333249092102, 0.8423333168029785, 0.8506666421890259, 0.8479999899864197, 0.8503333330154419, 0.8519999980926514, 0.8486666679382324, 0.8526666760444641, 0.8423333168029785, 0.846666693687439, 0.8473333120346069, 0.8536666631698608, 0.862666666507721, 0.8566666841506958, 0.8576666712760925, 0.8556666374206543, 0.859000027179718, 0.8610000014305115]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946274280548096, 2.190270185470581, 1.7625303268432617, 1.3464205265045166, 1.0602798461914062, 0.8959012031555176, 0.8292708396911621, 0.784272313117981, 0.7515597939491272, 0.7182280421257019, 0.6838110685348511, 0.669049084186554, 0.6218410134315491, 0.597146213054657, 0.5963464975357056, 0.5819933414459229, 0.573165237903595, 0.5676862001419067, 0.5464867353439331, 0.5278542041778564, 0.5194628834724426, 0.5073915123939514, 0.4979647696018219, 0.4850500822067261, 0.46885326504707336, 0.4597407579421997, 0.4586324393749237, 0.45431971549987793, 0.44283297657966614, 0.421954482793808, 0.4031405448913574, 0.41027605533599854, 0.40477845072746277, 0.3987354040145874, 0.3847958445549011, 0.3777049779891968, 0.3716442883014679, 0.3716756999492645, 0.3539138734340668, 0.3510240316390991, 0.3411395847797394, 0.3347461223602295], "accuracy": [0.1302337795495987, 0.32981112599372864, 0.4469687044620514, 0.5495971441268921, 0.6499801874160767, 0.6740192770957947, 0.6921146512031555, 0.7100779414176941, 0.7187954187393188, 0.7273808121681213, 0.7461365461349487, 0.7469290494918823, 0.7621186375617981, 0.7777044177055359, 0.7667415142059326, 0.7769119143486023, 0.7829877138137817, 0.7866860628128052, 0.7936864495277405, 0.8039889335632324, 0.8013472557067871, 0.8080834746360779, 0.8112534880638123, 0.8149517774581909, 0.8216879963874817, 0.8227446675300598, 0.8259146809577942, 0.8241975903511047, 0.8313300609588623, 0.8364813327789307, 0.8461233377456665, 0.841500461101532, 0.8465195894241333, 0.8539162874221802, 0.8527275323867798, 0.8584070801734924, 0.8628978729248047, 0.857218325138092, 0.8673887252807617, 0.8668603897094727, 0.8617091774940491, 0.8733324408531189], "val_loss": [2.24678111076355, 2.0291202068328857, 1.1532543897628784, 0.9497219324111938, 0.7765636444091797, 0.731056809425354, 0.704965353012085, 0.6907000541687012, 0.6620463728904724, 0.6375223994255066, 0.6146301031112671, 0.583982527256012, 0.5616016387939453, 0.5574992895126343, 0.5521240234375, 0.5359867215156555, 0.5294828414916992, 0.5236490368843079, 0.5123366713523865, 0.5069010853767395, 0.4985837936401367, 0.49887433648109436, 0.4931222200393677, 0.48757240176200867, 0.4802241921424866, 0.473204106092453, 0.47623559832572937, 0.462675541639328, 0.46072787046432495, 0.4521329700946808, 0.452439546585083, 0.4498976767063141, 0.43943750858306885, 0.43029385805130005, 0.4398651421070099, 0.43210098147392273, 0.4254271388053894, 0.426272451877594, 0.4234728217124939, 0.4190596044063568, 0.41756176948547363, 0.42142951488494873], "val_accuracy": [0.4163333475589752, 0.4390000104904175, 0.6309999823570251, 0.6736666560173035, 0.7153333425521851, 0.7229999899864197, 0.7360000014305115, 0.7476666569709778, 0.7476666569709778, 0.7559999823570251, 0.7573333382606506, 0.7839999794960022, 0.7836666703224182, 0.7913333177566528, 0.7889999747276306, 0.7923333048820496, 0.8040000200271606, 0.8073333501815796, 0.8106666803359985, 0.8183333277702332, 0.8193333148956299, 0.8130000233650208, 0.8209999799728394, 0.8293333053588867, 0.8289999961853027, 0.8306666612625122, 0.82833331823349, 0.8336666822433472, 0.8323333263397217, 0.8396666646003723, 0.8396666646003723, 0.8473333120346069, 0.847000002861023, 0.8503333330154419, 0.8493333458900452, 0.8523333072662354, 0.8600000143051147, 0.8566666841506958, 0.8576666712760925, 0.856333315372467, 0.8560000061988831, 0.859666645526886]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 6, 6, 3, 1, 6, 1, 3, 2, 1, 6, 9, 7, 5, 4, 0, 6], [0, 0, 1, 0, 2, 3, 2, 1, 0, 3, 0, 3, 3, 2, 2, 3, 2], [83, 99, 27, 49, 86, 65], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [74], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 21, 17, 6, 6, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))))), grad)), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(grad, grad)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 4, 3, 1, 3, 2, 3, 8, 4, 6], [0, 0, 1, 0, 2, 0, 3, 3, 0], [83, 99, 27, 97, 30], [0, 1, 1, 0, 1, 1], [0, 1, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 0, 4, 3, 2], [0, 0, 4, 7, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 5, 2, 1, 1, 1, 10, 5, 5, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [8, 1, 3, 6, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [7, 1, 2], [0, 3, 2, 5], [73], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 1, 1, 0, 1], [0, 8, 1, 6, 5], [1, 2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 7, 3, 4, 1, 7, 4, 3, 2, 8, 5, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(alpha, beta), tf.math.square(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]