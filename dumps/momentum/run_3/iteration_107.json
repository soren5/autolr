[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948877811431885, 2.1954846382141113, 1.7930604219436646, 1.3646754026412964, 1.1012818813323975, 0.9411959648132324, 0.8554933667182922, 0.8345027565956116, 0.7798101305961609, 0.749616801738739, 0.6855085492134094, 0.6688554286956787, 0.655380368232727, 0.6226345300674438, 0.6134007573127747, 0.5986575484275818, 0.5848514437675476, 0.5766753554344177, 0.5731635689735413, 0.5459082126617432, 0.5263314247131348, 0.5312963128089905, 0.5132877826690674, 0.49971631169319153, 0.5028613209724426, 0.48898208141326904, 0.48745039105415344, 0.4650484621524811, 0.4590970575809479, 0.45980605483055115, 0.43793773651123047, 0.43147653341293335, 0.422543466091156, 0.41548416018486023, 0.41713207960128784, 0.40661177039146423, 0.39301422238349915, 0.3974282741546631, 0.39296436309814453, 0.37487778067588806, 0.3682710826396942, 0.3683367967605591, 0.36311736702919006, 0.3414930999279022, 0.3475029170513153, 0.3410283327102661, 0.33939436078071594, 0.34266453981399536, 0.31287017464637756, 0.31818220019340515, 0.31779056787490845, 0.31292906403541565, 0.3013741075992584, 0.2995980381965637, 0.30085739493370056, 0.3029523193836212, 0.2981523871421814, 0.2951223850250244], "accuracy": [0.1266675442457199, 0.32320696115493774, 0.42609959840774536, 0.5381059050559998, 0.6333377361297607, 0.6487914323806763, 0.6853784322738647, 0.6933034062385559, 0.7077004313468933, 0.7170783281326294, 0.7357020378112793, 0.7474573850631714, 0.7461365461349487, 0.7574957013130188, 0.7647602558135986, 0.7712323069572449, 0.7769119143486023, 0.7773081660270691, 0.778232753276825, 0.7857614755630493, 0.7965922355651855, 0.7918372750282288, 0.8053097128868103, 0.8078193068504333, 0.8059701323509216, 0.8170651197433472, 0.8136309385299683, 0.8204993009567261, 0.8231409192085266, 0.8240655064582825, 0.8297450542449951, 0.8364813327789307, 0.8345000743865967, 0.8380662798881531, 0.8372738361358643, 0.8422929644584656, 0.8491612672805786, 0.8506141901016235, 0.8496896028518677, 0.8529917001724243, 0.8590674996376038, 0.857218325138092, 0.8557654023170471, 0.8658037185668945, 0.8627657890319824, 0.8622375130653381, 0.8673887252807617, 0.8659358024597168, 0.8794082403182983, 0.8749174475669861, 0.8778232932090759, 0.8812574148178101, 0.8787478804588318, 0.8841632604598999, 0.8809932470321655, 0.8766345381736755, 0.8804649114608765, 0.8848236799240112], "val_loss": [2.247529983520508, 2.0335114002227783, 1.155472993850708, 0.8592795133590698, 0.750808596611023, 0.7304698824882507, 0.6456077694892883, 0.6257857084274292, 0.6296886205673218, 0.6070670485496521, 0.5511266589164734, 0.53155118227005, 0.528304934501648, 0.5311113595962524, 0.5157961249351501, 0.4984745681285858, 0.5018811225891113, 0.4928642511367798, 0.48898738622665405, 0.4902074337005615, 0.46941518783569336, 0.4600239396095276, 0.4597311317920685, 0.45761969685554504, 0.45749470591545105, 0.43508219718933105, 0.4414220452308655, 0.43007975816726685, 0.4291536808013916, 0.42972779273986816, 0.4252420961856842, 0.4084354639053345, 0.40831151604652405, 0.4072764813899994, 0.4027370512485504, 0.4104064106941223, 0.426766037940979, 0.41800764203071594, 0.41849836707115173, 0.4336315393447876, 0.42286571860313416, 0.40909886360168457, 0.4095710813999176, 0.41921699047088623, 0.40877702832221985, 0.4043923318386078, 0.42768359184265137, 0.4185326397418976, 0.40205496549606323, 0.40598633885383606, 0.41404110193252563, 0.4081402122974396, 0.4193907082080841, 0.4317120909690857, 0.4367465078830719, 0.4301920533180237, 0.42750224471092224, 0.42822134494781494], "val_accuracy": [0.4346666634082794, 0.4633333384990692, 0.6639999747276306, 0.7070000171661377, 0.7273333072662354, 0.7379999756813049, 0.7483333349227905, 0.753333330154419, 0.7643333077430725, 0.7670000195503235, 0.7796666622161865, 0.7846666574478149, 0.79666668176651, 0.7929999828338623, 0.8059999942779541, 0.8090000152587891, 0.8013333082199097, 0.8149999976158142, 0.8113333582878113, 0.8050000071525574, 0.8253333568572998, 0.8309999704360962, 0.8299999833106995, 0.8259999752044678, 0.8326666951179504, 0.8426666855812073, 0.8433333039283752, 0.8460000157356262, 0.8473333120346069, 0.8506666421890259, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8650000095367432, 0.8610000014305115, 0.8633333444595337, 0.8656666874885559, 0.8606666922569275, 0.8610000014305115, 0.8650000095367432, 0.8669999837875366, 0.871666669845581, 0.8673333525657654, 0.8700000047683716, 0.8676666617393494, 0.8703333139419556, 0.874666690826416, 0.878000020980835, 0.8723333477973938, 0.8709999918937683, 0.8756666779518127, 0.8769999742507935, 0.8790000081062317, 0.871999979019165, 0.8683333396911621, 0.8696666955947876, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939932346343994, 2.1925835609436035, 1.7793503999710083, 1.3607240915298462, 1.0933605432510376, 0.9360836744308472, 0.8309789896011353, 0.8346440196037292, 0.7542521357536316, 0.7495644092559814, 0.7083836793899536, 0.6971292495727539, 0.6586084961891174, 0.6246522665023804, 0.6135132908821106, 0.5950484871864319, 0.5978065133094788, 0.5745497345924377, 0.5644916892051697, 0.5475285649299622, 0.5436373353004456, 0.5190773010253906, 0.5061732530593872, 0.5098814964294434, 0.49689000844955444, 0.48823827505111694, 0.4782426953315735, 0.4639005661010742, 0.46431317925453186, 0.4524371027946472, 0.44594183564186096, 0.425269216299057, 0.4260900020599365, 0.41845667362213135, 0.40053653717041016, 0.40070870518684387, 0.38599273562431335, 0.38185372948646545, 0.37429502606391907, 0.3673379719257355, 0.36656883358955383, 0.3575409948825836, 0.34906819462776184, 0.34040406346321106, 0.34027937054634094, 0.33545249700546265, 0.3332051634788513, 0.3320545554161072, 0.32715946435928345, 0.3080844581127167, 0.31317034363746643, 0.2995508313179016, 0.30876246094703674, 0.2889980971813202, 0.2922055423259735, 0.27587008476257324, 0.28449565172195435, 0.27038905024528503, 0.2790396511554718, 0.26814019680023193, 0.2751390039920807, 0.24670174717903137], "accuracy": [0.12640337646007538, 0.32241448760032654, 0.4523840844631195, 0.542728841304779, 0.6333377361297607, 0.6619997620582581, 0.6944921612739563, 0.6973979473114014, 0.7000396251678467, 0.7102100253105164, 0.72672039270401, 0.7301545143127441, 0.7504953145980835, 0.752212405204773, 0.7652885913848877, 0.7753269076347351, 0.7737419009208679, 0.7824593782424927, 0.7872143983840942, 0.7943468689918518, 0.7960638999938965, 0.8055738806724548, 0.8090080618858337, 0.8063663840293884, 0.8103289008140564, 0.8136309385299683, 0.8239334225654602, 0.8251221776008606, 0.8175934553146362, 0.8255184292793274, 0.8322546482086182, 0.8381983637809753, 0.8343679904937744, 0.8372738361358643, 0.846387505531311, 0.8466516733169556, 0.8511425256729126, 0.852859616279602, 0.8576145768165588, 0.8593316674232483, 0.8597279191017151, 0.8621054291725159, 0.8622375130653381, 0.8644828796386719, 0.8663320541381836, 0.8717474341392517, 0.869502067565918, 0.871879518032074, 0.8687095642089844, 0.8792761564254761, 0.878879964351654, 0.8853520154953003, 0.8798044919967651, 0.8842953443527222, 0.8870691061019897, 0.891559898853302, 0.8897107243537903, 0.889578640460968, 0.8897107243537903, 0.8899748921394348, 0.8916919827461243, 0.8980319499969482], "val_loss": [2.2477734088897705, 2.0254130363464355, 1.148697018623352, 0.8571950793266296, 0.7880776524543762, 0.6923781037330627, 0.65827876329422, 0.6391832828521729, 0.646842360496521, 0.6069751977920532, 0.5667322874069214, 0.5477446913719177, 0.5379797220230103, 0.529863715171814, 0.5237432718276978, 0.5083876848220825, 0.49142035841941833, 0.4855253994464874, 0.4878290295600891, 0.473446786403656, 0.4673207998275757, 0.46924832463264465, 0.45907652378082275, 0.4506831765174866, 0.44595327973365784, 0.4418678283691406, 0.44660302996635437, 0.43910837173461914, 0.43144091963768005, 0.43082693219184875, 0.4177172780036926, 0.4112798571586609, 0.41490820050239563, 0.4084242880344391, 0.4035065472126007, 0.4082794189453125, 0.40022730827331543, 0.4027002453804016, 0.41031429171562195, 0.3970922529697418, 0.3977399170398712, 0.42469847202301025, 0.40105491876602173, 0.39940783381462097, 0.4022507667541504, 0.40947771072387695, 0.4084300398826599, 0.4095943570137024, 0.41604557633399963, 0.41508498787879944, 0.41706952452659607, 0.41825369000434875, 0.4350241720676422, 0.4408361315727234, 0.43580982089042664, 0.42647916078567505, 0.4265766739845276, 0.44412219524383545, 0.47549691796302795, 0.4676383137702942, 0.458024263381958, 0.46572136878967285], "val_accuracy": [0.42366665601730347, 0.4426666796207428, 0.6493333578109741, 0.6943333148956299, 0.7179999947547913, 0.7433333396911621, 0.7526666522026062, 0.7509999871253967, 0.7643333077430725, 0.762666642665863, 0.7816666960716248, 0.7770000100135803, 0.7829999923706055, 0.7953333258628845, 0.793666660785675, 0.7963333129882812, 0.8140000104904175, 0.8083333373069763, 0.8053333163261414, 0.8220000267028809, 0.8259999752044678, 0.8193333148956299, 0.8296666741371155, 0.8399999737739563, 0.8383333086967468, 0.8433333039283752, 0.8463333249092102, 0.8539999723434448, 0.8510000109672546, 0.8460000157356262, 0.8506666421890259, 0.8566666841506958, 0.859666645526886, 0.8556666374206543, 0.8600000143051147, 0.8573333621025085, 0.8566666841506958, 0.8629999756813049, 0.8629999756813049, 0.8646666407585144, 0.8696666955947876, 0.8643333315849304, 0.8636666536331177, 0.8640000224113464, 0.8673333525657654, 0.8706666827201843, 0.8663333058357239, 0.871666669845581, 0.875, 0.875, 0.8796666860580444, 0.8786666393280029, 0.8803333044052124, 0.8786666393280029, 0.8803333044052124, 0.8793333172798157, 0.8816666603088379, 0.8803333044052124, 0.878000020980835, 0.8790000081062317, 0.8803333044052124, 0.8809999823570251]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 4, 3, 1, 3, 8, 9], [1, 0, 2, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 80], [1, 1], [2], [7], [0]], "fitness": -0.3571428656578064, "mapping_values": [1, 11, 7, 4, 3, 6, 3, 3, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.335963010787964, 2.1990299224853516, 2.277897357940674, 2.194802761077881, 2.3806827068328857, 2.3067727088928223, 2.303812265396118], "accuracy": [0.20261524617671967, 0.19574692845344543, 0.19244486093521118, 0.17884030938148499, 0.17897239327430725, 0.09747721254825592, 0.09417514503002167], "val_loss": [2.257512331008911, 2.1472537517547607, 2.3064427375793457, 2.1330859661102295, 2.308695077896118, 2.302935838699341, 2.302497386932373], "val_accuracy": [0.21933333575725555, 0.37066665291786194, 0.09700000286102295, 0.20200000703334808, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 8], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0], [0, 9, 4], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1], [0, 0, 4, 3, 9], [0, 0, 4], [0, 58, 99], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 7, 5, 2, 3, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45028212736.0, 6946009645056.0, 116760002953216.0, 822614079569920.0, 3631072189349888.0, 1.2225419323375616e+16], "accuracy": [0.10130762308835983, 0.10527011007070541, 0.10196803510189056, 0.10434553027153015, 0.10408136248588562, 0.09734513610601425], "val_loss": [476169273344.0, 25672315568128.0, 275567987392512.0, 1502127633465344.0, 5628285132210176.0, 1.6598994184568832e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 8, 3, 9], [0, 0, 0, 0, 2], [63, 99, 27, 11], [0, 1, 1, 0, 1, 1], [0, 1, 2], [1, 3, 3], [0], [0, 1, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [39080095744.0, 5788778627072.0, 97090428469248.0, 684281974226944.0, 3051278179500032.0, 1.004161743192064e+16], "accuracy": [0.10038304328918457, 0.09536388516426086, 0.09945846349000931, 0.10659094154834747, 0.09932637959718704, 0.09893012791872025], "val_loss": [392291975168.0, 21148844687360.0, 227018599825408.0, 1237536441630720.0, 4636657177329664.0, 1.3681746096685056e+16], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 9, 6, 3, 4, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 4, 3, 1, 3, 5, 2, 8, 9], [0, 0, 1, 0, 2], [83, 87, 27, 12], [0, 0, 0, 1, 1, 1], [0, 1, 2], [0, 1, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]