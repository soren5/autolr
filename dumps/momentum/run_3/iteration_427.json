[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2918732166290283, 2.1858792304992676, 1.7471023797988892, 1.353165864944458, 1.0737731456756592, 0.93181312084198, 0.8386265635490417, 0.8204054236412048, 0.7683531045913696, 0.7454495429992676, 0.6985705494880676, 0.6933656930923462, 0.6538582444190979, 0.6356379389762878, 0.6217838525772095, 0.6037205457687378, 0.5850098729133606, 0.5724219083786011, 0.5484559535980225, 0.5473912358283997, 0.5288265943527222, 0.5107147097587585, 0.5060502886772156, 0.5007888078689575, 0.4789349436759949, 0.467281311750412, 0.45207422971725464, 0.4515717923641205, 0.4524450898170471, 0.44177472591400146, 0.43084099888801575, 0.4240235984325409, 0.42045849561691284, 0.4157395660877228, 0.4060003459453583, 0.4049234688282013, 0.3926534950733185, 0.39119860529899597, 0.37858930230140686, 0.35477182269096375, 0.3638382852077484, 0.37244322896003723, 0.3710114359855652, 0.34867435693740845, 0.34542980790138245, 0.3460114300251007, 0.34056544303894043, 0.3282911479473114, 0.3379746973514557], "accuracy": [0.1336679458618164, 0.32584863901138306, 0.4451195299625397, 0.5476158857345581, 0.6427156329154968, 0.6720380187034607, 0.7028133869171143, 0.7088891863822937, 0.7058512568473816, 0.7147008180618286, 0.7310791015625, 0.7341170310974121, 0.7577598690986633, 0.7601373791694641, 0.7647602558135986, 0.7701756954193115, 0.7843085527420044, 0.7841764688491821, 0.7991018295288086, 0.7977809906005859, 0.8010830879211426, 0.8038568496704102, 0.8132346868515015, 0.8115176558494568, 0.8169330358505249, 0.8244617581367493, 0.8277638554573059, 0.8269713521003723, 0.8261788487434387, 0.8273676037788391, 0.8389908671379089, 0.8387266993522644, 0.8370096683502197, 0.8388587832450867, 0.846387505531311, 0.8461233377456665, 0.8473120927810669, 0.8494254350662231, 0.854708731174469, 0.860652506351471, 0.8581429123878479, 0.8551049828529358, 0.8593316674232483, 0.8634262084960938, 0.8626337051391602, 0.867520809173584, 0.8660678863525391, 0.8737286925315857, 0.8648791313171387], "val_loss": [2.244539499282837, 2.0063130855560303, 1.108832597732544, 0.8634277582168579, 0.7638126611709595, 0.7051563262939453, 0.6608482003211975, 0.6351600885391235, 0.6469224095344543, 0.6083842515945435, 0.5686197876930237, 0.5457520484924316, 0.5508663058280945, 0.5368257761001587, 0.5222664475440979, 0.5044777989387512, 0.4988173544406891, 0.4919087290763855, 0.48637059330940247, 0.4755881726741791, 0.4726696014404297, 0.4674251973628998, 0.46857917308807373, 0.4603865444660187, 0.4481334686279297, 0.4439517557621002, 0.4443536698818207, 0.44767317175865173, 0.44471609592437744, 0.4381225109100342, 0.44192445278167725, 0.4324265420436859, 0.4319109320640564, 0.4369014799594879, 0.43306997418403625, 0.42904719710350037, 0.4275842308998108, 0.419852614402771, 0.41671696305274963, 0.4155486524105072, 0.430850088596344, 0.43823397159576416, 0.42838072776794434, 0.4110175371170044, 0.4107876121997833, 0.4259707033634186, 0.4169675409793854, 0.41267529129981995, 0.4142484664916992], "val_accuracy": [0.4386666715145111, 0.4359999895095825, 0.6539999842643738, 0.6880000233650208, 0.7200000286102295, 0.7296666502952576, 0.7436666488647461, 0.7556666731834412, 0.762666642665863, 0.7710000276565552, 0.7799999713897705, 0.7923333048820496, 0.7879999876022339, 0.8013333082199097, 0.7923333048820496, 0.8023333549499512, 0.8113333582878113, 0.8149999976158142, 0.8133333325386047, 0.824999988079071, 0.8309999704360962, 0.8333333134651184, 0.8356666564941406, 0.8360000252723694, 0.8416666388511658, 0.8410000205039978, 0.8393333554267883, 0.8416666388511658, 0.8426666855812073, 0.8403333425521851, 0.843666672706604, 0.8503333330154419, 0.8543333411216736, 0.8460000157356262, 0.8529999852180481, 0.8606666922569275, 0.8586666584014893, 0.8613333106040955, 0.862333357334137, 0.8640000224113464, 0.859000027179718, 0.8619999885559082, 0.8650000095367432, 0.8693333268165588, 0.8693333268165588, 0.8663333058357239, 0.8686666488647461, 0.862333357334137, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 6, 1, 5, 7, 0], [0, 0, 1, 0, 2, 0, 2, 3], [83, 31, 27, 31], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 2, 2, 4, 3, 6, 7, 0, 6], [0, 4, 5, 2, 4, 2, 3, 5, 0], [0, 2], [0, 0, 0, 1, 1, 1, 1], [0, 7, 4, 7], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.1397142857313156, "mapping_values": [1, 18, 10, 8, 4, 19, 10, 9, 2, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.pow(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(beta, grad)), grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.780110459555733e+26, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.107647605240345, 0.11702549457550049, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.574453464366499e+28, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13433332741260529, 0.13366666436195374, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [3, 1, 3, 1, 1], [0, 0, 1, 2, 2], [89, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 6, 4, 3], [4, 1, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(grad, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47138013184.0, 7018127556608.0, 119884709101568.0, 845741874479104.0, 3760455931658240.0, 1.2369512254930944e+16], "accuracy": [0.10130762308835983, 0.10170386731624603, 0.1002509593963623, 0.09866596013307571, 0.09932637959718704, 0.0944393053650856], "val_loss": [476744155136.0, 25702229344256.0, 275881486450688.0, 1503897294209024.0, 5633126634094592.0, 1.6618112157745152e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [2, 1, 3, 1, 3, 7, 3, 5, 2, 0, 1, 3, 5, 4, 8, 8, 9, 3, 6, 3, 8], [0, 1, 1, 0, 2, 1, 2, 0, 0, 2, 2, 1, 2, 2], [83, 99, 27, 21, 26], [0, 1, 0, 0, 1, 1], [0, 1, 2], [5, 3, 3], [62], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [7, 0, 4, 3, 1, 1, 5, 0], [0, 3, 4, 4, 3, 0], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 21, 14, 5, 2, 1, 1, 0, 14, 8, 6, 2, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.negative(alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.multiply(grad, tf.math.square(tf.math.pow(tf.math.sqrt(alpha), tf.math.sqrt(grad)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha))), grad), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.math.square(tf.math.negative(grad)), grad)), sigma)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 3, 2, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 5, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303880453109741, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]