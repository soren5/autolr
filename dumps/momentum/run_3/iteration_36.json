[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292245864868164, 2.1858766078948975, 1.7608931064605713, 1.3088792562484741, 1.06368088722229, 0.9214873313903809, 0.8435372114181519, 0.8342897295951843, 0.7750153541564941, 0.7304940223693848, 0.694462776184082, 0.6998509168624878, 0.649070680141449, 0.6190729141235352, 0.6128844618797302, 0.5886762738227844, 0.5852108597755432, 0.5693435072898865, 0.5494214296340942, 0.5435441136360168, 0.5332446694374084, 0.5137601494789124, 0.507048487663269, 0.49600741267204285, 0.4892062544822693, 0.47354137897491455, 0.46422842144966125, 0.45943984389305115, 0.4445747137069702, 0.4383569657802582, 0.4218820631504059, 0.4177262783050537, 0.4145902097225189, 0.403024822473526, 0.4002181887626648, 0.3847392499446869, 0.3915918171405792, 0.3941546082496643, 0.38193947076797485, 0.37697625160217285, 0.3699837625026703, 0.37969648838043213, 0.3453838527202606, 0.3474525809288025, 0.34696298837661743], "accuracy": [0.13181878626346588, 0.3358869254589081, 0.4391758143901825, 0.555408775806427, 0.6400739550590515, 0.6675472259521484, 0.693831741809845, 0.6873596906661987, 0.7071720957756042, 0.7243428826332092, 0.7329282760620117, 0.7387399077415466, 0.7515519857406616, 0.7637035846710205, 0.767401933670044, 0.7769119143486023, 0.7836481332778931, 0.7814027070999146, 0.7840443849563599, 0.7840443849563599, 0.7955356240272522, 0.8005547523498535, 0.798309326171875, 0.8124422430992126, 0.8094043135643005, 0.8182538747787476, 0.8207634687423706, 0.8189142942428589, 0.828292191028595, 0.8315942287445068, 0.835160493850708, 0.841500461101532, 0.844010055065155, 0.8492933511734009, 0.8486329317092896, 0.8485008478164673, 0.8487650156021118, 0.8514066934585571, 0.852859616279602, 0.8574824929237366, 0.8565579056739807, 0.8539162874221802, 0.8628978729248047, 0.8638224601745605, 0.8661999702453613], "val_loss": [2.246338129043579, 2.0127289295196533, 1.1318882703781128, 0.9550400376319885, 0.7881998419761658, 0.7409289479255676, 0.693666934967041, 0.6886464953422546, 0.6638529896736145, 0.6322174072265625, 0.6040520071983337, 0.5801866054534912, 0.5613226294517517, 0.5533541440963745, 0.5515806674957275, 0.5360677242279053, 0.5248831510543823, 0.5045928359031677, 0.5085548758506775, 0.5150048732757568, 0.4960170388221741, 0.4811602234840393, 0.4784964323043823, 0.47608378529548645, 0.47715625166893005, 0.4586077332496643, 0.45889657735824585, 0.44275468587875366, 0.4425514042377472, 0.4353232681751251, 0.44260767102241516, 0.4389089345932007, 0.4303801953792572, 0.43408718705177307, 0.42664361000061035, 0.4255838990211487, 0.4320959746837616, 0.4292125105857849, 0.42702677845954895, 0.41263630986213684, 0.41845566034317017, 0.4131121337413788, 0.4239923357963562, 0.4328044354915619, 0.4254717528820038], "val_accuracy": [0.40533334016799927, 0.4560000002384186, 0.6523333191871643, 0.6800000071525574, 0.6996666789054871, 0.7179999947547913, 0.7379999756813049, 0.7429999709129333, 0.7590000033378601, 0.7639999985694885, 0.7730000019073486, 0.7836666703224182, 0.7913333177566528, 0.7986666560173035, 0.8016666769981384, 0.8083333373069763, 0.800000011920929, 0.809333324432373, 0.812333345413208, 0.8069999814033508, 0.8096666932106018, 0.8206666707992554, 0.8263333439826965, 0.8270000219345093, 0.8293333053588867, 0.8389999866485596, 0.8360000252723694, 0.8460000157356262, 0.846666693687439, 0.8536666631698608, 0.8483333587646484, 0.847000002861023, 0.8569999933242798, 0.8546666502952576, 0.8606666922569275, 0.8576666712760925, 0.8553333282470703, 0.8556666374206543, 0.8619999885559082, 0.8713333606719971, 0.8686666488647461, 0.8629999756813049, 0.8709999918937683, 0.8663333058357239, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 7], [0, 0, 0, 0, 2, 1], [17, 81, 27, 25], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 2, 5, 5, 3, 9], [0, 3, 3], [0, 99], [0, 1, 0, 0, 1, 1, 0], [0, 0, 4, 3], [0, 0, 4], [94, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 10, 7, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3032212257385254, 2.302521228790283, 2.3024754524230957, 2.3028273582458496, 2.309107780456543, 2.4195220470428467, 3.7304725646972656, 9.450849533081055], "accuracy": [0.10474177449941635, 0.09998679161071777, 0.10342095047235489, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302608013153076, 2.3025803565979004, 2.302821397781372, 2.3040194511413574, 2.329820394515991, 2.750892162322998, 6.103276252746582, 15.78990364074707], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3, 9], [0, 0, 1, 0, 0], [83, 96, 27, 11], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 4, 3, 6, 9, 4, 9], [0, 0, 4], [0, 58, 11, 49], [0, 1], [9], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 10, 6, 4, 4, 4, 2, 2, 1, 11, 8, 3, 4, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095505237579346, 2.3083057403564453, 2.309131145477295, 2.3092260360717773, 2.310253620147705, 2.3087236881256104], "accuracy": [0.0944393053650856, 0.09576013684272766, 0.09206181764602661, 0.0952318087220192, 0.09179764986038208, 0.08968432247638702], "val_loss": [2.308034896850586, 2.308034896850586, 2.308034896850586, 2.308034896850586, 2.308034896850586, 2.308034896850586], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3], [1, 0, 1, 1, 3], [97, 99, 27], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 3, 1], [0, 1, 3, 1, 4], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 2], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 0, 10, 5, 5, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3096630573272705, 2.31052303314209, 2.3088271617889404, 2.3098692893981934, 2.309473991394043, 2.309842109680176], "accuracy": [0.09272222965955734, 0.0936468094587326, 0.09840179979801178, 0.08849557489156723, 0.09232597798109055, 0.0944393053650856], "val_loss": [2.308183193206787, 2.308183193206787, 2.308183193206787, 2.308183193206787, 2.308183193206787, 2.308183193206787], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 7, 3, 4, 6, 6, 4, 7, 5], [0, 0, 1, 0, 2, 1, 1, 1, 0, 3], [83, 99, 27, 3], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0], [0, 3, 9], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 21, 11, 10, 4, 6, 3, 3, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.pow(alpha, alpha))))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3095293045043945, 2.3100476264953613, 2.309948205947876, 2.31117582321167, 2.3115556240081787, 2.3104958534240723], "accuracy": [0.09166556596755981, 0.09351472556591034, 0.09694888442754745, 0.08532558381557465, 0.09325055778026581, 0.08902391046285629], "val_loss": [2.3089635372161865, 2.3089635372161865, 2.3089635372161865, 2.3089635372161865, 2.3089635372161865, 2.3089635372161865], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]