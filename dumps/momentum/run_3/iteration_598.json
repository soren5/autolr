[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927770614624023, 2.1890759468078613, 1.7795095443725586, 1.3394956588745117, 1.099336862564087, 0.910897970199585, 0.8629025816917419, 0.8263949751853943, 0.7616885900497437, 0.7445449829101562, 0.7003180980682373, 0.6924965381622314, 0.6686747670173645, 0.6379520893096924, 0.62431401014328, 0.6127879619598389, 0.5981186032295227, 0.5801007747650146, 0.5664767622947693, 0.570724368095398, 0.5648558139801025, 0.5487261414527893, 0.5176392793655396, 0.5195001363754272, 0.5114300847053528, 0.5107495784759521, 0.49056264758110046, 0.4838617742061615, 0.48065200448036194, 0.4645138382911682, 0.4636116623878479, 0.44270211458206177, 0.43748748302459717, 0.4235237240791321, 0.4241204857826233, 0.41403210163116455, 0.4130181670188904, 0.4000125825405121, 0.4071142077445984, 0.40059733390808105, 0.38293972611427307, 0.3904735743999481, 0.38595500588417053, 0.38024306297302246, 0.37557920813560486, 0.3744579255580902], "accuracy": [0.13274335861206055, 0.3292827904224396, 0.42609959840774536, 0.5386342406272888, 0.6161669492721558, 0.6540747880935669, 0.6863030195236206, 0.6909258961677551, 0.707040011882782, 0.7107383608818054, 0.7300224304199219, 0.7283053994178772, 0.7456082701683044, 0.7553823590278625, 0.7625148296356201, 0.767930269241333, 0.7701756954193115, 0.7744023203849792, 0.7835160493850708, 0.7779685854911804, 0.778232753276825, 0.7877426743507385, 0.8024039268493652, 0.7938185334205627, 0.7988376617431641, 0.8010830879211426, 0.8098005652427673, 0.8084797263145447, 0.8133667707443237, 0.8140271902084351, 0.8127063512802124, 0.8259146809577942, 0.829216718673706, 0.8360850811004639, 0.8380662798881531, 0.8403117060661316, 0.8354246616363525, 0.8397833704948425, 0.8421608805656433, 0.8482366800308228, 0.8441421389579773, 0.8438779711723328, 0.8413683772087097, 0.8545766472816467, 0.854708731174469, 0.8492933511734009], "val_loss": [2.245877742767334, 2.0177180767059326, 1.1364901065826416, 0.8266966342926025, 0.7477197051048279, 0.6900376081466675, 0.6552295088768005, 0.6112422943115234, 0.6270135641098022, 0.5947944521903992, 0.553523600101471, 0.5306409597396851, 0.5259897708892822, 0.5315905213356018, 0.5014613270759583, 0.49201521277427673, 0.4919078052043915, 0.4806969463825226, 0.49397581815719604, 0.4785348176956177, 0.4718773663043976, 0.4563298225402832, 0.4615485966205597, 0.45588135719299316, 0.4464908838272095, 0.4446188509464264, 0.43591099977493286, 0.4303615391254425, 0.4364677667617798, 0.43410560488700867, 0.425066202878952, 0.4215835630893707, 0.4154721796512604, 0.4139101505279541, 0.4051363468170166, 0.3972952365875244, 0.40399301052093506, 0.40839332342147827, 0.40645527839660645, 0.41042423248291016, 0.40467211604118347, 0.4059247672557831, 0.4135177433490753, 0.4187905192375183, 0.4320695698261261, 0.43283942341804504], "val_accuracy": [0.4143333435058594, 0.45366665720939636, 0.6553333401679993, 0.7089999914169312, 0.7103333473205566, 0.7450000047683716, 0.7396666407585144, 0.7573333382606506, 0.7580000162124634, 0.781333327293396, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.7983333468437195, 0.8066666722297668, 0.8053333163261414, 0.8116666674613953, 0.8233333230018616, 0.8086666464805603, 0.8203333616256714, 0.8240000009536743, 0.8223333358764648, 0.8346666693687439, 0.8333333134651184, 0.8343333601951599, 0.840666651725769, 0.8426666855812073, 0.8473333120346069, 0.8519999980926514, 0.8489999771118164, 0.8560000061988831, 0.8600000143051147, 0.8640000224113464, 0.8606666922569275, 0.8603333234786987, 0.8643333315849304, 0.8603333234786987, 0.8616666793823242, 0.8606666922569275, 0.8603333234786987, 0.8653333187103271, 0.862333357334137, 0.8579999804496765, 0.8653333187103271, 0.8576666712760925, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 7, 6], [0, 0, 0, 0, 2, 3, 2], [83, 99, 81, 60], [0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 6, 1, 8], [0, 3, 3, 5], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 4, 9, 5, 4, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 7, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [50], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 4, 3, 6, 6, 4, 1, 7, 3, 7, 2, 8, 3, 5, 4, 9, 2, 9], [0, 0, 4, 1, 5, 6, 7, 1, 4, 0, 6, 6], [0, 58, 17, 77, 20], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 7, 5, 4, 0, 3, 0, 6], [1, 7, 7, 4, 2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 31, 19, 12, 5, 14, 8, 6, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(grad, alpha), tf.math.add(grad, tf.math.multiply(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.sqrt(grad))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.pow(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(tf.math.negative(grad), tf.math.multiply(tf.math.negative(grad), tf.math.divide_no_nan(grad, beta)))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 0], [0, 3, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 2, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 8, 6, 3], [0, 0, 3], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27], [1, 0, 1, 1, 1, 1], [2, 8, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 8, 9], [0, 2, 4], [0, 55], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [6, 1, 3, 0, 4, 8, 0, 0, 7, 6, 2, 6, 0, 1, 4, 8, 8], [1, 1, 5, 7, 6, 6, 4, 7, 5, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 4, 4, 0, 1, 28, 17, 11, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(alpha, tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), grad)), tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(grad, tf.math.pow(beta, tf.math.sqrt(tf.math.sqrt(grad))))))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]