[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293576955795288, 2.1906304359436035, 1.7708582878112793, 1.347327470779419, 1.0882729291915894, 0.9220532774925232, 0.8469408750534058, 0.8299938440322876, 0.7662132978439331, 0.7411311864852905, 0.7144874334335327, 0.6798635721206665, 0.6507607102394104, 0.6202892065048218, 0.5987388491630554, 0.5897997617721558, 0.583421528339386, 0.56229567527771, 0.5565916299819946, 0.5435935854911804, 0.5268649458885193, 0.5185667276382446, 0.5118741393089294, 0.5050407648086548, 0.4936613142490387, 0.4750996530056, 0.4739910662174225, 0.455161452293396, 0.4496684968471527, 0.4492809772491455, 0.4276871681213379, 0.4205402433872223, 0.41125673055648804, 0.4138179123401642, 0.3974056839942932, 0.3923073709011078, 0.37842828035354614, 0.38005658984184265, 0.3761458694934845, 0.3556388318538666, 0.3594931662082672, 0.3434772193431854, 0.34867656230926514, 0.3412853479385376, 0.3392156660556793, 0.3340030908584595, 0.3229237198829651, 0.3062790632247925, 0.30729639530181885, 0.31353482604026794, 0.29881805181503296, 0.29877668619155884, 0.29874885082244873, 0.30383604764938354, 0.2939402461051941, 0.2886553406715393, 0.27816203236579895, 0.27024662494659424], "accuracy": [0.12495046854019165, 0.32320696115493774, 0.44644036889076233, 0.5392946600914001, 0.6321489810943604, 0.6583014130592346, 0.6909258961677551, 0.7014925479888916, 0.7078325152397156, 0.7168141603469849, 0.7277770638465881, 0.7392682433128357, 0.7427024245262146, 0.7613261342048645, 0.7660810947418213, 0.7714964747428894, 0.7848368883132935, 0.7833839654922485, 0.7803460359573364, 0.7874785661697388, 0.7957997918128967, 0.7979130744934082, 0.8043851256370544, 0.8025360107421875, 0.8088759779930115, 0.817989706993103, 0.8164047002792358, 0.8240655064582825, 0.8241975903511047, 0.8277638554573059, 0.837141752243042, 0.835160493850708, 0.8372738361358643, 0.8428213000297546, 0.8499537706375122, 0.8438779711723328, 0.8518029451370239, 0.8552370667457581, 0.8565579056739807, 0.8651432991027832, 0.863029956817627, 0.8622375130653381, 0.8652753829956055, 0.8702945709228516, 0.870030403137207, 0.8721436858177185, 0.8770307898521423, 0.883238673210144, 0.8747853636741638, 0.8792761564254761, 0.884691596031189, 0.8800686597824097, 0.8837670087814331, 0.8804649114608765, 0.8881257176399231, 0.884691596031189, 0.8906353116035461, 0.8919561505317688], "val_loss": [2.2466938495635986, 2.0230376720428467, 1.1548362970352173, 0.896268904209137, 0.7960614562034607, 0.7252870202064514, 0.6991008520126343, 0.6460604667663574, 0.655869722366333, 0.6308213472366333, 0.5985451936721802, 0.5764576196670532, 0.5388503670692444, 0.5341704487800598, 0.5209577083587646, 0.5156216025352478, 0.5047969818115234, 0.4959471821784973, 0.4976124167442322, 0.4975098967552185, 0.4902653396129608, 0.4756498336791992, 0.4717775881290436, 0.4743085205554962, 0.45557066798210144, 0.44843319058418274, 0.4446476101875305, 0.4396810829639435, 0.4378429055213928, 0.4285701513290405, 0.42288264632225037, 0.41423892974853516, 0.41800951957702637, 0.4224573075771332, 0.41511425375938416, 0.41012075543403625, 0.41712620854377747, 0.4121437966823578, 0.4131472110748291, 0.40889519453048706, 0.4051665961742401, 0.39977729320526123, 0.3991498649120331, 0.3989449143409729, 0.39795368909835815, 0.3986937999725342, 0.4033588767051697, 0.4105469584465027, 0.41065770387649536, 0.42175570130348206, 0.4457033574581146, 0.4381740689277649, 0.42997440695762634, 0.45406079292297363, 0.42630496621131897, 0.4282189905643463, 0.43989038467407227, 0.4398702085018158], "val_accuracy": [0.4113333225250244, 0.4729999899864197, 0.6386666893959045, 0.6846666932106018, 0.6963333487510681, 0.722000002861023, 0.7306666374206543, 0.7459999918937683, 0.7459999918937683, 0.7590000033378601, 0.7593333125114441, 0.7730000019073486, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.7923333048820496, 0.7996666431427002, 0.8026666641235352, 0.8046666383743286, 0.8040000200271606, 0.8086666464805603, 0.8140000104904175, 0.8153333067893982, 0.8183333277702332, 0.8320000171661377, 0.828000009059906, 0.8309999704360962, 0.8373333215713501, 0.8373333215713501, 0.843666672706604, 0.8379999995231628, 0.8519999980926514, 0.8486666679382324, 0.8473333120346069, 0.8526666760444641, 0.8516666889190674, 0.8553333282470703, 0.859000027179718, 0.8573333621025085, 0.8636666536331177, 0.8636666536331177, 0.8643333315849304, 0.8643333315849304, 0.8673333525657654, 0.8663333058357239, 0.8656666874885559, 0.8679999709129333, 0.8656666874885559, 0.8696666955947876, 0.8706666827201843, 0.8730000257492065, 0.8703333139419556, 0.8743333220481873, 0.8690000176429749, 0.8653333187103271, 0.8659999966621399, 0.8706666827201843, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 8, 3, 1, 3], [0, 2, 3, 0, 2], [83, 99, 27], [1, 0, 1, 0, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 0, 1, 1], [9, 0, 4, 3], [0, 0, 4], [0, 27], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), grad)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 3, 1, 3, 7, 1, 9, 8, 4, 7, 2, 5, 9, 8, 5, 2, 9], [0, 0, 1, 0, 2, 2, 0, 2], [83, 99, 27, 12, 95, 86, 48], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 0, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 76], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 18, 8, 7, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(tf.math.square(grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038129806518555, 2.5490827560424805, 28.312524795532227, 166.71551513671875, 436.3016662597656, 837.02587890625], "accuracy": [0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3153958320617676, 4.886047840118408, 88.52344512939453, 303.4792785644531, 649.3656005859375, 1124.510986328125], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 4, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 0], [11, 58], [0, 0, 1, 1], [0, 6], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 3, 1, 3, 4, 7, 0, 0], [0, 0, 1, 2, 3, 0, 1], [83, 99, 27], [1, 0, 1, 1, 1, 1], [0, 1, 2], [0, 2, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [6, 0, 4, 3], [0, 5, 4, 1], [0, 58], [0, 1, 1], [1], [1, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 1, 0, 1, 1, 8, 4, 4, 1, 3, 1, 2, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), grad), tf.math.add(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]