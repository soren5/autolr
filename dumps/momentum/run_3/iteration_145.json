[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939250469207764, 2.192317247390747, 1.7826060056686401, 1.3460066318511963, 1.0620986223220825, 0.8901541829109192, 0.8399669528007507, 0.7957596182823181, 0.7657743096351624, 0.7323518395423889, 0.7096173167228699, 0.6790350079536438, 0.6431272029876709, 0.6204261779785156, 0.6168625354766846, 0.5928807258605957, 0.5786734819412231, 0.5638142228126526, 0.5582287311553955, 0.5475825071334839, 0.532575786113739, 0.5172255635261536, 0.5213823914527893, 0.4908907413482666, 0.502204954624176, 0.4892460107803345, 0.47584038972854614, 0.45708993077278137, 0.456143319606781, 0.44825389981269836, 0.4474754333496094, 0.43291690945625305, 0.42530420422554016, 0.41618314385414124, 0.414638489484787, 0.4050231873989105, 0.39108192920684814, 0.3795691430568695, 0.38850197196006775, 0.37254825234413147, 0.36098119616508484, 0.3617893159389496], "accuracy": [0.1254788041114807, 0.32545238733291626, 0.4387795627117157, 0.5420684218406677, 0.6468101739883423, 0.6752080321311951, 0.6980583667755127, 0.7025492191314697, 0.7051908373832703, 0.7141724824905396, 0.7296261787414551, 0.739928662776947, 0.744419515132904, 0.7656848430633545, 0.7646281719207764, 0.7728173136711121, 0.7790252566337585, 0.7841764688491821, 0.7930260300636292, 0.7921014428138733, 0.8006868362426758, 0.8001585006713867, 0.8059701323509216, 0.8164047002792358, 0.8107251524925232, 0.813498854637146, 0.8255184292793274, 0.8290846943855286, 0.8284242749214172, 0.8330471515655518, 0.8363492488861084, 0.8362171649932861, 0.8412362933158875, 0.8441421389579773, 0.8428213000297546, 0.8448025584220886, 0.8552370667457581, 0.858671247959137, 0.8495575189590454, 0.8599920868873596, 0.8626337051391602, 0.8651432991027832], "val_loss": [2.246790885925293, 2.029712438583374, 1.1483747959136963, 0.8756754398345947, 0.7621576189994812, 0.7031367421150208, 0.6701511144638062, 0.6437849998474121, 0.6306074857711792, 0.6060863137245178, 0.5679126977920532, 0.5551550388336182, 0.5389766693115234, 0.5416651964187622, 0.5380756258964539, 0.517303466796875, 0.5059038996696472, 0.5035738348960876, 0.480851411819458, 0.4846353828907013, 0.4768276512622833, 0.47366997599601746, 0.46162354946136475, 0.4663720726966858, 0.4380771517753601, 0.4464488923549652, 0.425120085477829, 0.4247007966041565, 0.42753657698631287, 0.4144352972507477, 0.4192853271961212, 0.41345325112342834, 0.40997225046157837, 0.4094546437263489, 0.40612271428108215, 0.39891505241394043, 0.40348270535469055, 0.3979629576206207, 0.39207160472869873, 0.38283413648605347, 0.397632360458374, 0.3898448050022125], "val_accuracy": [0.40666666626930237, 0.4973333477973938, 0.6356666684150696, 0.6919999718666077, 0.7176666855812073, 0.7260000109672546, 0.749666690826416, 0.7593333125114441, 0.7549999952316284, 0.7713333368301392, 0.7743333578109741, 0.793666660785675, 0.7833333611488342, 0.7829999923706055, 0.7960000038146973, 0.7923333048820496, 0.79666668176651, 0.8033333420753479, 0.8199999928474426, 0.8059999942779541, 0.8100000023841858, 0.812666654586792, 0.8293333053588867, 0.8240000009536743, 0.8379999995231628, 0.8330000042915344, 0.8429999947547913, 0.8460000157356262, 0.8496666550636292, 0.8483333587646484, 0.8476666808128357, 0.8516666889190674, 0.8550000190734863, 0.8513333201408386, 0.8429999947547913, 0.8493333458900452, 0.8629999756813049, 0.8606666922569275, 0.8613333106040955, 0.8610000014305115, 0.8603333234786987, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 1, 3, 1, 3, 4, 8, 2, 3, 7, 9, 3, 5], [0, 3, 1, 0, 2, 3, 0, 0, 1], [83, 99, 27, 9, 64], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 5, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.multiply(grad, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 6, 3, 1, 3, 6, 7, 2, 8, 4, 8], [2, 0, 1, 0, 2, 3, 0, 3, 3], [83, 87, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [6], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 3, 6, 3, 3, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(grad, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 3, 3, 8], [0, 3, 1, 0, 2, 1, 3], [94, 99, 27], [0, 0, 1, 0, 1, 0], [0, 8, 2], [0, 3, 2], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 27], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(grad), alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 15, 8, 7, 2, 3, 2, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 2, 7, 9, 8], [0, 0, 1, 0, 2, 2], [83, 99, 27, 55], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 6, 6, 5], [0, 3, 3, 0], [0, 17], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 4, 3, 7, 2, 1, 1, 5, 8], [0, 0, 4, 6, 0, 3, 0], [0, 58, 73, 44], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 9, 5, 4, 2, 17, 10, 7, 4, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]