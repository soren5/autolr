[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932353019714355, 2.1915342807769775, 1.7853162288665771, 1.3556621074676514, 1.085416316986084, 0.929210901260376, 0.8513959646224976, 0.8062590956687927, 0.7521519660949707, 0.7418475151062012, 0.6978245377540588, 0.6904601454734802, 0.6443917751312256, 0.6149958968162537, 0.5942774415016174, 0.5831918716430664, 0.5745230317115784, 0.5604580044746399, 0.5499605536460876, 0.5325013995170593, 0.5191639065742493, 0.5188010334968567, 0.5104326605796814, 0.49973422288894653, 0.47972655296325684, 0.46715813875198364, 0.46440422534942627, 0.45234620571136475, 0.45609912276268005, 0.4409049153327942, 0.425011545419693, 0.4220937490463257, 0.40971216559410095, 0.40386244654655457, 0.3947332501411438, 0.3891601264476776, 0.38235363364219666, 0.3753688931465149, 0.37613850831985474, 0.35822945833206177, 0.36494842171669006, 0.349266916513443, 0.35383617877960205, 0.35263678431510925, 0.34514495730400085, 0.3311353027820587, 0.3368193805217743], "accuracy": [0.12798838317394257, 0.3175274133682251, 0.4278166592121124, 0.5366530418395996, 0.6317527294158936, 0.6633205413818359, 0.6884163022041321, 0.7123233675956726, 0.7073041796684265, 0.7129837274551392, 0.7378153204917908, 0.7376832365989685, 0.7556465268135071, 0.7651565074920654, 0.7667415142059326, 0.7761194109916687, 0.7779685854911804, 0.7865539789199829, 0.7897239327430725, 0.7942147850990295, 0.8020076751708984, 0.7980451583862305, 0.8000264167785645, 0.81112140417099, 0.8166688680648804, 0.8247259259223938, 0.8203672170639038, 0.8226125836372375, 0.8273676037788391, 0.8285563588142395, 0.8359529972076416, 0.842028796672821, 0.8426892161369324, 0.8448025584220886, 0.8448025584220886, 0.8507462739944458, 0.8560295701026917, 0.857218325138092, 0.860652506351471, 0.8601241707801819, 0.8646149635314941, 0.8667283058166504, 0.8660678863525391, 0.8687095642089844, 0.8658037185668945, 0.8702945709228516, 0.8647470474243164], "val_loss": [2.2467024326324463, 2.023798942565918, 1.1319692134857178, 0.8633993864059448, 0.7686461806297302, 0.7025607824325562, 0.6616165637969971, 0.6431522965431213, 0.6318466663360596, 0.5967706441879272, 0.5689896941184998, 0.5511919260025024, 0.5310038328170776, 0.518771231174469, 0.5138086080551147, 0.5068601965904236, 0.5012723207473755, 0.4859279692173004, 0.4885840117931366, 0.48089656233787537, 0.47494271397590637, 0.47256356477737427, 0.4643644690513611, 0.4580851197242737, 0.44940516352653503, 0.45015332102775574, 0.44467785954475403, 0.43082764744758606, 0.4250435531139374, 0.410553514957428, 0.4076756536960602, 0.4041321575641632, 0.39890459179878235, 0.39898428320884705, 0.39717522263526917, 0.40218856930732727, 0.4057884216308594, 0.3986557722091675, 0.39293956756591797, 0.39420706033706665, 0.40795862674713135, 0.4003208875656128, 0.4129312038421631, 0.4090675413608551, 0.4143521189689636, 0.4199692904949188, 0.41731542348861694], "val_accuracy": [0.40833333134651184, 0.45266667008399963, 0.656333327293396, 0.7016666531562805, 0.7303333282470703, 0.7440000176429749, 0.7586666941642761, 0.7596666812896729, 0.7576666474342346, 0.7726666927337646, 0.777999997138977, 0.7900000214576721, 0.8009999990463257, 0.8019999861717224, 0.8063333630561829, 0.8073333501815796, 0.8149999976158142, 0.8236666917800903, 0.8270000219345093, 0.8259999752044678, 0.8240000009536743, 0.8223333358764648, 0.8330000042915344, 0.8343333601951599, 0.8423333168029785, 0.8389999866485596, 0.8446666598320007, 0.8519999980926514, 0.8510000109672546, 0.8529999852180481, 0.8556666374206543, 0.8566666841506958, 0.8566666841506958, 0.8573333621025085, 0.8579999804496765, 0.8613333106040955, 0.8663333058357239, 0.8646666407585144, 0.8686666488647461, 0.8686666488647461, 0.8709999918937683, 0.8736666440963745, 0.8706666827201843, 0.871999979019165, 0.8730000257492065, 0.8629999756813049, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 4, 3, 1, 3], [0, 0, 1, 0, 2], [47, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 2, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 3], [6, 5, 4], [0, 58], [1, 1], [0], [6], [0]], "fitness": -0.35199999809265137, "mapping_values": [1, 8, 4, 4, 3, 6, 3, 3, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3182544708251953, 2.396407127380371, 2.2836785316467285, 2.2719342708587646, 2.3090627193450928, 2.3040101528167725, 2.303424119949341, 2.303210735321045, 2.3034095764160156], "accuracy": [0.2246730923652649, 0.13221503794193268, 0.18240654468536377, 0.14000792801380157, 0.12098798155784607, 0.09668471664190292, 0.09021265059709549, 0.09536388516426086, 0.09655263274908066], "val_loss": [2.84244441986084, 2.281825542449951, 2.305614709854126, 2.0879476070404053, 2.3036444187164307, 2.302565813064575, 2.302541732788086, 2.3028883934020996, 2.302811622619629], "val_accuracy": [0.1850000023841858, 0.18133333325386047, 0.10066666454076767, 0.34700000286102295, 0.10066666454076767, 0.10166666656732559, 0.10400000214576721, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 3, 1, 3], [0, 0, 2, 3, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 5, 1, 3, 0, 5, 4, 6], [0, 0, 4, 1, 0], [56, 94, 70], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 4, 2, 2, 1, 13, 8, 5, 3, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.divide_no_nan(grad, alpha), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 6], [0, 0, 1, 0, 3], [22, 99, 27], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 0, 1], [0, 6, 4, 3], [7, 0, 4], [31, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3039848804473877, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 5}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [5, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0, 0, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [0, 0, 4], [0, 58], [0, 1, 0, 0, 0, 1, 1, 1], [1, 4, 1, 8], [1, 3, 5, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 6, 4, 2, 2, 8, 4, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.pow(tf.math.subtract(tf.math.sqrt(sigma), grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]