[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293073892593384, 2.1891613006591797, 1.770862340927124, 1.3464235067367554, 1.0770277976989746, 0.9198716878890991, 0.8501687049865723, 0.8269079327583313, 0.7744693160057068, 0.7560245990753174, 0.711559534072876, 0.6879792809486389, 0.6499825119972229, 0.6334208250045776, 0.6229664087295532, 0.5823383927345276, 0.5876043438911438, 0.5717431902885437, 0.5550366640090942, 0.5458576083183289, 0.5405914783477783, 0.5187448859214783, 0.5068949460983276, 0.49593010544776917, 0.49042651057243347, 0.48319292068481445, 0.46820151805877686, 0.459049791097641, 0.4508988857269287, 0.4392731785774231, 0.4280301034450531, 0.4261746108531952, 0.41585370898246765, 0.4058915972709656, 0.405086874961853, 0.39457353949546814, 0.38561326265335083, 0.3800990581512451, 0.37785232067108154, 0.3691883385181427, 0.36216381192207336, 0.3633914887905121], "accuracy": [0.12996962666511536, 0.31581032276153564, 0.43125081062316895, 0.5396909117698669, 0.6388852000236511, 0.6656980514526367, 0.6819442510604858, 0.6995112895965576, 0.705058753490448, 0.7071720957756042, 0.7283053994178772, 0.7434949278831482, 0.7518161535263062, 0.759080708026886, 0.7581561207771301, 0.774798572063446, 0.7755910754203796, 0.7861577272415161, 0.7837802171707153, 0.7872143983840942, 0.7980451583862305, 0.8039889335632324, 0.8031964302062988, 0.8112534880638123, 0.8132346868515015, 0.8140271902084351, 0.8234050869941711, 0.82683926820755, 0.8304054737091064, 0.8321225643157959, 0.8368775844573975, 0.8408400416374207, 0.8389908671379089, 0.8448025584220886, 0.8490291833877563, 0.8518029451370239, 0.8556333184242249, 0.8545766472816467, 0.8540483713150024, 0.8561616539955139, 0.8628978729248047, 0.8643507957458496], "val_loss": [2.2459473609924316, 2.016017198562622, 1.135797142982483, 0.8741294145584106, 0.7584543228149414, 0.7121537923812866, 0.6656649708747864, 0.6490041017532349, 0.6394873857498169, 0.6166638135910034, 0.5660344958305359, 0.5461887717247009, 0.5256185531616211, 0.5213879346847534, 0.5218774676322937, 0.49954867362976074, 0.49431920051574707, 0.48821744322776794, 0.48633065819740295, 0.4786127209663391, 0.4700991213321686, 0.46753832697868347, 0.46106627583503723, 0.4486892521381378, 0.44671735167503357, 0.4410703480243683, 0.44596248865127563, 0.4395640790462494, 0.43255215883255005, 0.4309086501598358, 0.4241454005241394, 0.423046350479126, 0.42434433102607727, 0.425336092710495, 0.42183569073677063, 0.41344133019447327, 0.41994234919548035, 0.4174652099609375, 0.4082360863685608, 0.4243968427181244, 0.43415600061416626, 0.434199720621109], "val_accuracy": [0.4363333284854889, 0.4413333237171173, 0.6486666798591614, 0.6899999976158142, 0.7239999771118164, 0.7429999709129333, 0.7526666522026062, 0.7639999985694885, 0.7689999938011169, 0.7683333158493042, 0.7820000052452087, 0.7983333468437195, 0.7973333597183228, 0.7983333468437195, 0.8036666512489319, 0.8106666803359985, 0.8103333115577698, 0.8193333148956299, 0.8203333616256714, 0.8209999799728394, 0.8253333568572998, 0.8266666531562805, 0.8263333439826965, 0.8323333263397217, 0.8403333425521851, 0.840666651725769, 0.8413333296775818, 0.8420000076293945, 0.8463333249092102, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8526666760444641, 0.8550000190734863, 0.8566666841506958, 0.8583333492279053, 0.8633333444595337, 0.8600000143051147, 0.8600000143051147, 0.8579999804496765, 0.8629999756813049, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1132788352.0, 21187348480.0, 98766110720.0, 273872879616.0, 587121295360.0, 1075970310144.0], "accuracy": [0.09945846349000931, 0.10460969805717468, 0.1006472036242485, 0.10328886657953262, 0.09655263274908066, 0.10645885765552521], "val_loss": [5240238592.0, 41916608512.0, 141462503424.0, 335310651392.0, 654890958848.0, 1131650220032.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [77, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [14], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 74, 27], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 1, 2, 6, 1, 4, 5, 1, 6, 4], [0, 3, 3, 1, 4, 5, 3, 4, 5, 0], [0, 25], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 20, 10, 10, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(alpha, tf.math.square(grad)), tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.pow(grad, grad))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 3, 1, 5, 4], [0, 0, 0, 0, 2], [83, 41, 27, 77], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 9], [0, 0, 4], [0, 58], [0, 1], [9], [1], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 11, 6, 5, 4, 6, 3, 3, 1, 5, 4, 1, 2, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3106000423431396, 2.3111891746520996, 2.31016206741333, 2.309192657470703, 2.3094537258148193, 2.310821056365967], "accuracy": [0.0820235088467598, 0.09166556596755981, 0.09708096832036972, 0.09232597798109055, 0.09919429570436478, 0.0874389111995697], "val_loss": [2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]