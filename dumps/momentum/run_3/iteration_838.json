[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293306589126587, 2.1905767917633057, 1.770250916481018, 1.3469398021697998, 1.0998451709747314, 0.9549522399902344, 0.853278636932373, 0.8223246932029724, 0.7629098892211914, 0.743974506855011, 0.6893358826637268, 0.6678887605667114, 0.6337128281593323, 0.61772221326828, 0.6006554365158081, 0.582243800163269, 0.566699743270874, 0.5558735132217407, 0.5478429198265076, 0.5470127463340759, 0.5217263698577881, 0.5051455497741699, 0.5055182576179504, 0.48579567670822144, 0.486409455537796, 0.4753791093826294, 0.4609677195549011, 0.45440980792045593, 0.4453775882720947, 0.426696240901947, 0.4252644181251526, 0.4256690442562103, 0.415137380361557, 0.40947410464286804, 0.40873846411705017, 0.40387046337127686, 0.38258787989616394, 0.371279239654541, 0.38614290952682495, 0.3639782965183258, 0.3728180527687073, 0.35601919889450073, 0.3491056561470032, 0.3542153239250183, 0.34024107456207275, 0.33451712131500244, 0.3300533890724182], "accuracy": [0.13076211512088776, 0.328490287065506, 0.43983620405197144, 0.5415400862693787, 0.6284506916999817, 0.6439043879508972, 0.6800950765609741, 0.7049266695976257, 0.711530864238739, 0.7186633348464966, 0.7392682433128357, 0.7387399077415466, 0.7569673657417297, 0.763439416885376, 0.7675340175628662, 0.7763835787773132, 0.783119797706604, 0.7902522683143616, 0.7895918488502502, 0.7902522683143616, 0.7975168228149414, 0.8043851256370544, 0.8061022162437439, 0.8070268034934998, 0.8144234418869019, 0.8169330358505249, 0.8185180425643921, 0.8240655064582825, 0.8289526104927063, 0.8383304476737976, 0.8409721255302429, 0.8411042094230652, 0.8389908671379089, 0.8421608805656433, 0.8428213000297546, 0.8426892161369324, 0.8551049828529358, 0.8626337051391602, 0.8508783578872681, 0.86118084192276, 0.8598600029945374, 0.8638224601745605, 0.8658037185668945, 0.8646149635314941, 0.8689737319946289, 0.8685774803161621, 0.8730682730674744], "val_loss": [2.2461538314819336, 2.0216386318206787, 1.1367355585098267, 0.8733912706375122, 0.7731578946113586, 0.7365517020225525, 0.6674964427947998, 0.6360552310943604, 0.6292240619659424, 0.6003884077072144, 0.5633060932159424, 0.5409809350967407, 0.5304128527641296, 0.5247394442558289, 0.5040555596351624, 0.49871811270713806, 0.495602011680603, 0.4894386827945709, 0.4775819480419159, 0.4697694480419159, 0.4743892550468445, 0.46077314019203186, 0.45671501755714417, 0.4595523178577423, 0.45415380597114563, 0.4449912905693054, 0.44736772775650024, 0.44196072220802307, 0.43113088607788086, 0.4294872283935547, 0.43247631192207336, 0.43486717343330383, 0.4277154505252838, 0.4306270480155945, 0.436526358127594, 0.42950594425201416, 0.43268391489982605, 0.41422387957572937, 0.4152931272983551, 0.4112128019332886, 0.4134169816970825, 0.40990567207336426, 0.4245719909667969, 0.41794514656066895, 0.4208599030971527, 0.4174923896789551, 0.41909655928611755], "val_accuracy": [0.42766666412353516, 0.4729999899864197, 0.6453333497047424, 0.706333339214325, 0.7226666808128357, 0.7200000286102295, 0.7513333559036255, 0.7476666569709778, 0.7630000114440918, 0.7633333206176758, 0.7883333563804626, 0.7900000214576721, 0.7910000085830688, 0.8026666641235352, 0.8149999976158142, 0.815666675567627, 0.8186666369438171, 0.8190000057220459, 0.8240000009536743, 0.8320000171661377, 0.8266666531562805, 0.8356666564941406, 0.8416666388511658, 0.8433333039283752, 0.8383333086967468, 0.8453333377838135, 0.8503333330154419, 0.856333315372467, 0.8510000109672546, 0.8510000109672546, 0.8500000238418579, 0.8560000061988831, 0.8603333234786987, 0.8603333234786987, 0.859666645526886, 0.8633333444595337, 0.862333357334137, 0.871999979019165, 0.8690000176429749, 0.8679999709129333, 0.8629999756813049, 0.8730000257492065, 0.8666666746139526, 0.8703333139419556, 0.8653333187103271, 0.8656666874885559, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 3, 1, 0, 2], [86, 99, 27], [1, 0, 1, 0, 0, 1], [0, 1, 2], [0, 4, 2], [0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 4], [0, 0, 4, 7], [0, 58], [1, 1], [1], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 3], [0, 0, 1, 0, 2], [87, 99, 27], [0, 0, 1, 0, 0, 1], [4, 3, 9, 0], [0, 3, 3], [0, 88], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 7, 3, 4, 3, 4, 3, 6, 6, 8, 3], [3, 2, 0, 7, 7, 2, 6, 6, 1, 3, 2, 2], [94, 58], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 9, 3, 7, 3, 9, 0, 7], [1, 1, 5, 7, 0, 6], [0, 40, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 25, 13, 12, 1, 16, 10, 6, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(sigma, beta), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.math.pow(grad, tf.math.multiply(tf.math.divide_no_nan(beta, grad), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.multiply(alpha, sigma))))), beta), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 1, 2, 5, 7], [5, 5, 3, 5, 4], [0], [0, 1, 0, 0, 1, 1, 1], [0, 8, 4, 6], [4, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 5, 5, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(grad, grad)), tf.math.square(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 3, 4, 2, 2], [0, 0, 1, 0, 2, 0], [83, 99, 27, 57], [0, 0, 0, 1, 1, 1], [0, 1, 2], [0, 2, 4], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 4], [0, 0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 6, 3, 3, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3044071197509766, 2.3247973918914795, 2.373840570449829, 2.454555034637451, 2.56913685798645, 2.719139814376831], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3123509883880615, 2.348872661590576, 2.4162209033966064, 2.516925573348999, 2.651994228363037, 2.8206539154052734], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]