[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925946712493896, 2.1876230239868164, 1.7616466283798218, 1.3620667457580566, 1.0581610202789307, 0.9299290180206299, 0.8339884281158447, 0.829814612865448, 0.7491415143013, 0.7466910481452942, 0.7012336850166321, 0.683485209941864, 0.651342511177063, 0.6333808898925781, 0.6336507201194763, 0.5994582772254944, 0.5918347835540771, 0.572022020816803, 0.5489646792411804, 0.5587487816810608, 0.5524546504020691, 0.5400440692901611, 0.5263350009918213, 0.5176709890365601, 0.5055860877037048, 0.5005890727043152, 0.4826054871082306, 0.47507980465888977, 0.4681880474090576, 0.45616385340690613, 0.45061129331588745, 0.457187294960022, 0.4409274160861969, 0.42919617891311646, 0.4384920597076416, 0.41093710064888, 0.42016613483428955, 0.41149917244911194, 0.3856603801250458, 0.3966393768787384, 0.3868465721607208, 0.3775295913219452, 0.3656284511089325, 0.35151830315589905, 0.3546559810638428, 0.3408775329589844, 0.33121684193611145, 0.3342011570930481, 0.3373286724090576, 0.32441726326942444, 0.3249965310096741, 0.32676973938941956, 0.3163648247718811], "accuracy": [0.12415797263383865, 0.3292827904224396, 0.4414212107658386, 0.5431250929832458, 0.6316206455230713, 0.6610751748085022, 0.6946242451667786, 0.7028133869171143, 0.7078325152397156, 0.7084929347038269, 0.7384757399559021, 0.7388719916343689, 0.7510236501693726, 0.7528728246688843, 0.7495707273483276, 0.765949010848999, 0.7730814814567566, 0.7761194109916687, 0.785101056098938, 0.785629391670227, 0.7829877138137817, 0.7903843522071838, 0.798309326171875, 0.7997622489929199, 0.8031964302062988, 0.8045172095298767, 0.816008448600769, 0.8173292875289917, 0.8177255392074585, 0.8249900937080383, 0.82683926820755, 0.82683926820755, 0.8310658931732178, 0.8313300609588623, 0.8355567455291748, 0.8433496356010437, 0.8388587832450867, 0.8433496356010437, 0.8487650156021118, 0.8485008478164673, 0.8512746095657349, 0.8540483713150024, 0.8551049828529358, 0.8627657890319824, 0.8619733452796936, 0.8650112152099609, 0.8668603897094727, 0.8687095642089844, 0.8665962219238281, 0.8696341514587402, 0.8701624870300293, 0.8714832663536072, 0.8741249442100525], "val_loss": [2.2457754611968994, 2.0145275592803955, 1.1474679708480835, 0.9244898557662964, 0.8035101890563965, 0.7388399839401245, 0.7194666266441345, 0.6941956281661987, 0.6779199242591858, 0.656861424446106, 0.6122808456420898, 0.5864014625549316, 0.5830011963844299, 0.561714768409729, 0.5570505261421204, 0.5571985840797424, 0.5287473797798157, 0.5232527852058411, 0.5262503623962402, 0.519377589225769, 0.5206639766693115, 0.49840086698532104, 0.5089384913444519, 0.49093204736709595, 0.4927515983581543, 0.4982532262802124, 0.480600506067276, 0.4781104326248169, 0.4688677489757538, 0.4811710715293884, 0.46127405762672424, 0.4546975791454315, 0.4805911183357239, 0.45303308963775635, 0.4381875693798065, 0.4564575254917145, 0.44413214921951294, 0.4461710751056671, 0.45614564418792725, 0.44848698377609253, 0.4489436149597168, 0.4534755349159241, 0.46000006794929504, 0.46625199913978577, 0.45239996910095215, 0.4505554139614105, 0.4625135362148285, 0.46310847997665405, 0.45713117718696594, 0.4735335409641266, 0.4780389070510864, 0.4916559159755707, 0.5104864239692688], "val_accuracy": [0.40799999237060547, 0.4606666564941406, 0.6413333415985107, 0.6880000233650208, 0.6966666579246521, 0.7229999899864197, 0.7416666746139526, 0.7443333268165588, 0.753000020980835, 0.749666690826416, 0.7703333497047424, 0.7766666412353516, 0.7743333578109741, 0.781000018119812, 0.7850000262260437, 0.7850000262260437, 0.7976666688919067, 0.7950000166893005, 0.7960000038146973, 0.7986666560173035, 0.8029999732971191, 0.812333345413208, 0.8106666803359985, 0.8209999799728394, 0.8266666531562805, 0.8206666707992554, 0.8330000042915344, 0.8336666822433472, 0.8416666388511658, 0.8383333086967468, 0.8403333425521851, 0.8453333377838135, 0.8423333168029785, 0.8500000238418579, 0.8516666889190674, 0.8493333458900452, 0.8529999852180481, 0.8539999723434448, 0.8519999980926514, 0.8529999852180481, 0.8543333411216736, 0.8526666760444641, 0.8556666374206543, 0.8543333411216736, 0.8576666712760925, 0.8573333621025085, 0.8583333492279053, 0.8619999885559082, 0.8603333234786987, 0.859333336353302, 0.8613333106040955, 0.8569999933242798, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 1, 3, 1, 3, 0, 4, 8], [0, 0, 1, 0, 2, 1, 1], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 2, 4, 1, 6, 9, 6, 5, 3, 9, 7, 0, 2, 8, 6], [0, 3, 3, 5, 4, 1, 2, 1, 0], [0, 70, 39, 49], [1, 0, 0, 0, 1, 1, 1], [0, 0, 3, 3], [0, 0, 4], [0, 65], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 25, 16, 9, 4, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(grad), alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(alpha, beta))))), alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 0], [0], [1, 0, 1, 0, 1, 0, 1], [0, 7, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [6, 1, 3, 1, 3, 4, 2, 6], [0, 0, 1, 0, 3, 0, 0, 0, 2], [83, 99, 27, 95, 57, 90], [0, 0, 1, 0, 1, 1], [0, 1, 0], [0, 3, 4], [0], [0, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [2], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 8, 9, 6, 5, 3, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 3, 3, 3], [0, 0, 1, 1, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [45], [0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 4, 3], [0, 0, 4, 2], [11, 58], [1, 0], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [45000245248.0, 6997712306176.0, 117324975702016.0, 828866612428800.0, 3660316084797440.0, 1.2115798873079808e+16], "accuracy": [0.09694888442754745, 0.09893012791872025, 0.10157178342342377, 0.09932637959718704, 0.10487385839223862, 0.1026284471154213], "val_loss": [478552686592.0, 25800956968960.0, 276941504512000.0, 1509783144235008.0, 5655833589317632.0, 1.6684579997876224e+16], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]