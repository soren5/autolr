[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8511428833007812, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948029041290283, 2.193767547607422, 1.7889455556869507, 1.3496904373168945, 1.063843846321106, 0.9033513069152832, 0.8168576955795288, 0.8123790621757507, 0.761665403842926, 0.7224870324134827, 0.6866346001625061, 0.6673310399055481, 0.6424016356468201, 0.6280609369277954, 0.6045770049095154, 0.5906041264533997, 0.5754857063293457, 0.5723685622215271, 0.5605356693267822, 0.54801344871521, 0.5332860946655273, 0.5206819176673889, 0.5085741281509399, 0.5094489455223083, 0.49294206500053406, 0.4998183846473694, 0.483948677778244, 0.47292765974998474, 0.47339102625846863, 0.4580850899219513, 0.44290891289711, 0.43912771344184875, 0.42785006761550903, 0.4206622242927551, 0.4130522608757019, 0.41474810242652893, 0.40530720353126526, 0.39527300000190735, 0.39363718032836914, 0.387660413980484, 0.3733757734298706, 0.3671691417694092, 0.371561199426651, 0.3709050416946411, 0.3665525019168854, 0.35034704208374023, 0.3376447558403015, 0.33518582582473755, 0.343036413192749, 0.3277932107448578, 0.33129265904426575, 0.3233243227005005, 0.31573566794395447, 0.2964625656604767, 0.3147764205932617, 0.2987333834171295, 0.30109333992004395, 0.2972484827041626, 0.28994274139404297, 0.2936583161354065, 0.27982237935066223, 0.2886272966861725, 0.2848823368549347, 0.2774081230163574, 0.2720543146133423, 0.2785426080226898, 0.28379401564598083, 0.27102911472320557, 0.26839596033096313, 0.2706116735935211], "accuracy": [0.1220446452498436, 0.32281073927879333, 0.4271562397480011, 0.5379738211631775, 0.6330735683441162, 0.6660943031311035, 0.7066437602043152, 0.7014925479888916, 0.7021529674530029, 0.7181349992752075, 0.7354378700256348, 0.7420420050621033, 0.7569673657417297, 0.7574957013130188, 0.7738739848136902, 0.7771760821342468, 0.7794214487075806, 0.7814027070999146, 0.7906485199928284, 0.7872143983840942, 0.7968564033508301, 0.8079513907432556, 0.8098005652427673, 0.8074230551719666, 0.8092722296714783, 0.8082155585289001, 0.8182538747787476, 0.8153480291366577, 0.8166688680648804, 0.8241975903511047, 0.8318583965301514, 0.832650899887085, 0.8341038227081299, 0.8376700282096863, 0.8426892161369324, 0.841500461101532, 0.8467837572097778, 0.8482366800308228, 0.8516708612442017, 0.8506141901016235, 0.856689989566803, 0.8553691506385803, 0.8594637513160706, 0.8536521196365356, 0.8577466607093811, 0.8610487580299377, 0.8665962219238281, 0.872407853603363, 0.8671245574951172, 0.8722757697105408, 0.8725399374961853, 0.8737286925315857, 0.878351628780365, 0.8813894987106323, 0.8780874609947205, 0.8776912093162537, 0.8860124349594116, 0.8833707571029663, 0.883238673210144, 0.8877294659614563, 0.8911636471748352, 0.8824461698532104, 0.8865407705307007, 0.8864086866378784, 0.891559898853302, 0.8894465565681458, 0.8883898854255676, 0.8949940800666809, 0.8924844861030579, 0.8905032277107239], "val_loss": [2.246756076812744, 2.028942823410034, 1.1634998321533203, 0.8582291603088379, 0.7673406600952148, 0.702678382396698, 0.6825278997421265, 0.6482670903205872, 0.6215974688529968, 0.604478120803833, 0.578427255153656, 0.5624780058860779, 0.5452786087989807, 0.5413150191307068, 0.539696991443634, 0.5218991041183472, 0.5093535780906677, 0.49922940135002136, 0.49064722657203674, 0.4817560613155365, 0.4785124659538269, 0.4746125340461731, 0.4671359360218048, 0.4692363142967224, 0.4628649055957794, 0.45069563388824463, 0.4524955153465271, 0.4418868124485016, 0.4377216100692749, 0.43612995743751526, 0.4295044243335724, 0.4265502095222473, 0.4302058219909668, 0.4190666973590851, 0.41707271337509155, 0.4231300950050354, 0.4110824465751648, 0.4012945890426636, 0.39865803718566895, 0.40108102560043335, 0.40385156869888306, 0.4074004590511322, 0.41431477665901184, 0.4045131802558899, 0.4072325825691223, 0.4068005681037903, 0.4036845564842224, 0.3977595269680023, 0.40010303258895874, 0.41150277853012085, 0.4183078706264496, 0.4231424033641815, 0.42147281765937805, 0.4125153720378876, 0.3959062993526459, 0.40311068296432495, 0.4202572703361511, 0.4084048569202423, 0.42048975825309753, 0.43299055099487305, 0.41911694407463074, 0.4337555766105652, 0.42808252573013306, 0.4451220631599426, 0.4487646520137787, 0.46640267968177795, 0.47660180926322937, 0.4707566797733307, 0.45997095108032227, 0.44724544882774353], "val_accuracy": [0.4359999895095825, 0.49399998784065247, 0.6466666460037231, 0.6919999718666077, 0.7206666469573975, 0.7329999804496765, 0.7260000109672546, 0.7630000114440918, 0.753333330154419, 0.7646666765213013, 0.765999972820282, 0.7846666574478149, 0.7850000262260437, 0.7863333225250244, 0.7950000166893005, 0.8023333549499512, 0.8003333210945129, 0.8053333163261414, 0.8076666593551636, 0.812666654586792, 0.8183333277702332, 0.8213333487510681, 0.8243333101272583, 0.8273333311080933, 0.8349999785423279, 0.8399999737739563, 0.8373333215713501, 0.8416666388511658, 0.8486666679382324, 0.8483333587646484, 0.8453333377838135, 0.843666672706604, 0.8463333249092102, 0.8496666550636292, 0.8539999723434448, 0.8516666889190674, 0.8566666841506958, 0.8613333106040955, 0.8610000014305115, 0.8629999756813049, 0.8606666922569275, 0.859666645526886, 0.8550000190734863, 0.8619999885559082, 0.8656666874885559, 0.862666666507721, 0.8636666536331177, 0.8619999885559082, 0.862666666507721, 0.8669999837875366, 0.8690000176429749, 0.8669999837875366, 0.8709999918937683, 0.8650000095367432, 0.8669999837875366, 0.8703333139419556, 0.8683333396911621, 0.871666669845581, 0.8740000128746033, 0.8693333268165588, 0.8696666955947876, 0.871999979019165, 0.8740000128746033, 0.875, 0.8759999871253967, 0.8740000128746033, 0.8706666827201843, 0.871666669845581, 0.8726666569709778, 0.8756666779518127]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [1, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 4], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 3, 6], [0, 4, 4, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 8, 1, 3], [0, 0, 1, 0, 2], [40, 98, 27], [1, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [95], [0, 0, 0, 0, 1, 1, 1, 0], [1, 8, 4, 3, 9], [0, 6, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [98924840.0, 14648271872.0, 253146300416.0, 1748980596736.0, 7812125032448.0, 25490578472960.0], "accuracy": [0.09906221181154251, 0.09615638852119446, 0.09430722147226334, 0.1006472036242485, 0.09985470771789551, 0.09721305221319199], "val_loss": [987758336.0, 53237698560.0, 571397242880.0, 3115082579968.0, 11668392247296.0, 34417420533760.0], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 1, 2, 4, 7, 3, 1, 4, 6, 4, 1, 5, 3, 5], [4, 3, 3, 2, 3, 0, 3, 4, 1, 4, 2, 0, 5], [0, 51], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 0], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 27, 14, 13, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, beta), grad), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), grad), alpha), tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.square(grad), beta)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [44723159040.0, 6655156158464.0, 115335357267968.0, 822348731121664.0, 3636179979206656.0, 1.1923370379575296e+16], "accuracy": [0.09576013684272766, 0.10355303436517715, 0.10289261490106583, 0.1014397069811821, 0.09826971590518951, 0.10157178342342377], "val_loss": [455626096640.0, 24564687962112.0, 263664988848128.0, 1437330938265600.0, 5383146115694592.0, 1.5882602229530624e+16], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 4, 6, 9], [0, 0, 1, 0, 2, 3], [90, 43, 27, 44], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 0], [0, 0, 4], [0, 58], [0, 1, 1], [6], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 6, 3, 3, 0, 8, 5, 3, 2, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]