[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930891513824463, 2.189573287963867, 1.7717094421386719, 1.344051718711853, 1.0951651334762573, 0.9150664806365967, 0.8480120897293091, 0.8018826246261597, 0.7625710964202881, 0.7325044870376587, 0.7013813853263855, 0.6944107413291931, 0.6612240672111511, 0.6458145380020142, 0.6197752356529236, 0.6078397035598755, 0.5900799036026001, 0.5682258605957031, 0.5630528926849365, 0.5531634092330933, 0.5330877304077148, 0.5284842252731323, 0.5168089270591736, 0.4994376301765442, 0.48557049036026, 0.46797123551368713, 0.46595415472984314, 0.45579999685287476, 0.4424316883087158, 0.45019224286079407, 0.4276719391345978, 0.4244936406612396, 0.41713884472846985, 0.4060777723789215, 0.399752676486969, 0.3947908282279968, 0.3859241306781769, 0.3891223073005676, 0.3779290020465851, 0.3633212447166443, 0.3590300679206848, 0.35282549262046814, 0.3382938504219055, 0.3429885804653168, 0.3422047793865204, 0.3381129801273346, 0.3284257650375366, 0.31719934940338135], "accuracy": [0.12838461995124817, 0.3273015320301056, 0.436930388212204, 0.5423325896263123, 0.6273940205574036, 0.6637167930603027, 0.6868313550949097, 0.7040021419525146, 0.7004358768463135, 0.7194558382034302, 0.7342491149902344, 0.7327961921691895, 0.7498348951339722, 0.7503632307052612, 0.7548540234565735, 0.7771760821342468, 0.7753269076347351, 0.7895918488502502, 0.7881389260292053, 0.7854973077774048, 0.7926297783851624, 0.7979130744934082, 0.8014793395996094, 0.8020076751708984, 0.8115176558494568, 0.8166688680648804, 0.8226125836372375, 0.8244617581367493, 0.8244617581367493, 0.8234050869941711, 0.832650899887085, 0.8348963260650635, 0.8403117060661316, 0.8400475382804871, 0.8432175517082214, 0.8491612672805786, 0.8544445633888245, 0.8504821062088013, 0.852859616279602, 0.8531237840652466, 0.8544445633888245, 0.8619733452796936, 0.8617091774940491, 0.8602562546730042, 0.8622375130653381, 0.869502067565918, 0.8725399374961853, 0.8702945709228516], "val_loss": [2.246570348739624, 2.025023937225342, 1.1576318740844727, 0.9137914776802063, 0.7880850434303284, 0.730334460735321, 0.6881747841835022, 0.6678417325019836, 0.6600815057754517, 0.6369580626487732, 0.6095743775367737, 0.5769382119178772, 0.5666745901107788, 0.5573805570602417, 0.5479617714881897, 0.5270829796791077, 0.5266375541687012, 0.5264582633972168, 0.5078124403953552, 0.505056619644165, 0.5109851360321045, 0.5005814433097839, 0.49973437190055847, 0.490021288394928, 0.48590368032455444, 0.48169705271720886, 0.4711240530014038, 0.4615386426448822, 0.4612802267074585, 0.4644816219806671, 0.4540267288684845, 0.4521619975566864, 0.44685983657836914, 0.4446594715118408, 0.44617804884910583, 0.43827494978904724, 0.44184085726737976, 0.45346158742904663, 0.43313807249069214, 0.42478665709495544, 0.45484381914138794, 0.46677181124687195, 0.4449995458126068, 0.4382827877998352, 0.4631878137588501, 0.486358642578125, 0.45555514097213745, 0.4378819167613983], "val_accuracy": [0.41966667771339417, 0.43166667222976685, 0.6426666378974915, 0.6806666851043701, 0.718666672706604, 0.7336666584014893, 0.734000027179718, 0.7363333106040955, 0.7506666779518127, 0.7509999871253967, 0.7603333592414856, 0.7730000019073486, 0.7766666412353516, 0.7950000166893005, 0.7896666526794434, 0.7973333597183228, 0.7990000247955322, 0.7900000214576721, 0.809333324432373, 0.8100000023841858, 0.8140000104904175, 0.8166666626930237, 0.8186666369438171, 0.8169999718666077, 0.828000009059906, 0.8353333473205566, 0.8349999785423279, 0.8356666564941406, 0.8360000252723694, 0.8366666436195374, 0.8379999995231628, 0.8416666388511658, 0.8500000238418579, 0.8496666550636292, 0.8486666679382324, 0.8526666760444641, 0.846666693687439, 0.8516666889190674, 0.8476666808128357, 0.8533333539962769, 0.8583333492279053, 0.8569999933242798, 0.862666666507721, 0.862333357334137, 0.859333336353302, 0.859666645526886, 0.8613333106040955, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 2, 4, 5, 3], [0, 0, 0, 0, 2, 0, 0, 2], [83, 99, 27, 44, 39, 77], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 3, 6, 9], [0, 3, 3, 3], [0, 17], [0, 0, 0, 0, 1, 1, 1], [0, 0, 9, 3], [0, 4, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 6, 10, 6, 4, 2, 3, 3, 0, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [8, 1, 3], [0, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [0, 0, 1, 0, 2], [83, 64, 64], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 2, 9, 4, 4, 1, 9, 2, 9], [0, 3, 3, 4], [30, 35, 45, 85], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 1], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47392440320.0, 6881392721920.0, 119982973255680.0, 839972726767616.0, 3678895844884480.0, 1.2226429714432e+16], "accuracy": [0.09721305221319199, 0.10500594228506088, 0.10381719470024109, 0.09391097724437714, 0.10117553919553757, 0.10210011899471283], "val_loss": [476759162880.0, 25703747682304.0, 275884422463488.0, 1504095399575552.0, 5634737783701504.0, 1.6623651591815168e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 2, 1, 1, 1, 14, 10, 4, 4, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 3, 1, 9], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [6, 8, 2], [0, 3, 3], [80], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 7, 6, 2, 6, 2, 2, 4, 9, 3, 7, 3, 7, 2, 8], [0, 0, 4, 2, 2, 3, 1, 1, 0, 1, 3, 6], [0, 58, 30, 49], [0, 0, 1, 1], [0, 2], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 1, 28, 16, 12, 4, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(grad, beta), tf.math.add(tf.math.pow(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), sigma))), tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), alpha), sigma), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]