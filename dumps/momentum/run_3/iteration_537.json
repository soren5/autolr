[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923030853271484, 2.187894582748413, 1.7577052116394043, 1.3647549152374268, 1.0524990558624268, 0.9168241620063782, 0.8395835757255554, 0.8342515826225281, 0.7770459651947021, 0.7493792772293091, 0.7112592458724976, 0.6920045614242554, 0.6527042984962463, 0.6301519870758057, 0.6187552809715271, 0.6117321252822876, 0.5969315767288208, 0.5792334675788879, 0.5646117925643921, 0.5676822066307068, 0.5433996915817261, 0.5317512154579163, 0.5086289048194885, 0.5078577995300293, 0.49738818407058716, 0.48236432671546936, 0.47366487979888916, 0.47219887375831604, 0.4584607183933258, 0.44119566679000854, 0.4401647746562958, 0.4342517852783203, 0.4297151267528534, 0.40410828590393066, 0.40857911109924316, 0.4052397310733795, 0.40709373354911804, 0.39805877208709717, 0.39046260714530945, 0.3818838596343994, 0.3655097186565399, 0.36965078115463257, 0.36697182059288025, 0.35503774881362915, 0.35985469818115234, 0.35123470425605774, 0.3431406617164612, 0.345363050699234, 0.34536778926849365, 0.3242870569229126], "accuracy": [0.13049794733524323, 0.3331131935119629, 0.4492141008377075, 0.5456346869468689, 0.6396777033805847, 0.6672830581665039, 0.6968696117401123, 0.6931713223457336, 0.7088891863822937, 0.720380425453186, 0.7305507659912109, 0.7423061728477478, 0.7516840696334839, 0.7555144429206848, 0.7555144429206848, 0.7648923397064209, 0.7738739848136902, 0.7816668748855591, 0.7881389260292053, 0.7876105904579163, 0.7957997918128967, 0.7955356240272522, 0.8092722296714783, 0.8055738806724548, 0.8090080618858337, 0.811649739742279, 0.8120459914207458, 0.8150838613510132, 0.8264430165290833, 0.8315942287445068, 0.8385946154594421, 0.8333113193511963, 0.8378021121025085, 0.8448025584220886, 0.8454629778862, 0.844010055065155, 0.8477083444595337, 0.8531237840652466, 0.8508783578872681, 0.8533879518508911, 0.8602562546730042, 0.8631620407104492, 0.8609166741371155, 0.86118084192276, 0.86553955078125, 0.8701624870300293, 0.8679170608520508, 0.8651432991027832, 0.8664641380310059, 0.8709549307823181], "val_loss": [2.2461721897125244, 2.0142905712127686, 1.117326021194458, 0.9088073968887329, 0.772233247756958, 0.7114720344543457, 0.6716482043266296, 0.6477348804473877, 0.6430953145027161, 0.6120237112045288, 0.558604896068573, 0.5318173170089722, 0.5307514667510986, 0.52092045545578, 0.5181773900985718, 0.5112497210502625, 0.505322277545929, 0.4929352104663849, 0.49501025676727295, 0.48923566937446594, 0.4774201214313507, 0.46231934428215027, 0.4628576636314392, 0.4476810395717621, 0.44483405351638794, 0.4393502175807953, 0.4428924024105072, 0.43531131744384766, 0.4225596487522125, 0.41955435276031494, 0.4185323119163513, 0.4172458350658417, 0.4064810276031494, 0.40838822722435, 0.4068071246147156, 0.4069525897502899, 0.4110581576824188, 0.40482762455940247, 0.3947176933288574, 0.39541712403297424, 0.3931255638599396, 0.386277437210083, 0.38875797390937805, 0.4010966420173645, 0.3957863748073578, 0.40372005105018616, 0.3944436013698578, 0.3987499177455902, 0.3896544575691223, 0.3942670226097107], "val_accuracy": [0.4323333203792572, 0.4833333194255829, 0.6536666750907898, 0.6949999928474426, 0.7120000123977661, 0.7446666955947876, 0.7440000176429749, 0.7459999918937683, 0.7733333110809326, 0.7710000276565552, 0.7823333144187927, 0.7929999828338623, 0.7929999828338623, 0.8029999732971191, 0.7976666688919067, 0.7986666560173035, 0.8080000281333923, 0.8066666722297668, 0.812333345413208, 0.8103333115577698, 0.8190000057220459, 0.824999988079071, 0.8270000219345093, 0.8356666564941406, 0.8333333134651184, 0.8360000252723694, 0.8456666469573975, 0.8423333168029785, 0.843666672706604, 0.8496666550636292, 0.8489999771118164, 0.8456666469573975, 0.8476666808128357, 0.8473333120346069, 0.8519999980926514, 0.8546666502952576, 0.8560000061988831, 0.8579999804496765, 0.8619999885559082, 0.8603333234786987, 0.8573333621025085, 0.8676666617393494, 0.8643333315849304, 0.862666666507721, 0.8730000257492065, 0.8706666827201843, 0.8683333396911621, 0.8696666955947876, 0.8683333396911621, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 1, 3, 6, 8], [0, 3, 1, 0, 2], [3, 99, 24], [0, 0, 1, 0, 1, 1], [8, 1, 3], [0, 3, 3], [21], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 3], [7, 1, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), alpha), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.multiply(grad, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303900718688965, 2.3030343055725098, 2.305962562561035, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302626848220825, 2.303858518600464, 2.3125157356262207, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 9, 5, 5], [0, 0, 1, 0, 2], [83, 73, 27], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 2, 4, 6, 7, 6, 6, 4, 9, 2, 0, 3, 5, 0, 1, 7, 0], [0, 3, 3, 0, 2, 4, 5, 0, 3, 1, 2, 5], [0, 92, 27, 3], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 30, 18, 12, 4, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.multiply(grad, tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)))))), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3037760257720947, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [8, 1, 3, 1, 3], [0, 0, 1, 0, 0], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 2, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 4, 3, 7, 5], [3, 0, 4, 0, 3], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303021192550659, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 11, 6, 5, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 1, 3, 1, 3, 4, 5, 4, 2, 9], [0, 0, 3, 0, 2, 3, 3, 0], [83, 99, 27, 8, 90], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 2, 6, 2, 3, 2, 2, 6], [0, 3, 3, 0, 3, 5, 0, 4, 4], [0, 29, 25], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [6, 0, 4, 3, 2, 5, 6, 5, 4, 0, 1, 9], [0, 0, 4, 7, 7, 0, 5], [0, 58, 5, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 5, 18, 9, 9, 3, 19, 12, 7, 4, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(grad, grad)))), grad), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, grad), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.negative(grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]