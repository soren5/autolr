[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942917346954346, 2.192166566848755, 1.7801995277404785, 1.3533772230148315, 1.075012445449829, 0.935481071472168, 0.8640764355659485, 0.8011626601219177, 0.7654908895492554, 0.7412524819374084, 0.7104193568229675, 0.6816985607147217, 0.650364100933075, 0.6262531876564026, 0.6125039458274841, 0.5936148166656494, 0.577171266078949, 0.5588334202766418, 0.5622380375862122, 0.5443167686462402, 0.5304436087608337, 0.5335931181907654, 0.5214610695838928, 0.516147792339325, 0.49141037464141846, 0.4910549521446228, 0.47188764810562134, 0.47394898533821106, 0.46667397022247314, 0.4629223048686981, 0.45914945006370544, 0.44153377413749695, 0.4312392473220825, 0.42903438210487366, 0.414380818605423, 0.41143161058425903, 0.40949422121047974, 0.3965857923030853, 0.39632636308670044, 0.3818214535713196, 0.37463057041168213], "accuracy": [0.12455421686172485, 0.3265090584754944, 0.42768457531929016, 0.5375775694847107, 0.63096022605896, 0.6548672318458557, 0.6799629926681519, 0.7040021419525146, 0.707040011882782, 0.7116629481315613, 0.7257958054542542, 0.7421740889549255, 0.7586844563484192, 0.7626469135284424, 0.7693831920623779, 0.776251494884491, 0.7814027070999146, 0.7849689722061157, 0.7853652238845825, 0.7967243194580078, 0.7928939461708069, 0.8053097128868103, 0.8005547523498535, 0.8078193068504333, 0.8072909712791443, 0.8156121969223022, 0.8152159452438354, 0.8190463781356812, 0.8183859586715698, 0.828292191028595, 0.8240655064582825, 0.8317263126373291, 0.8343679904937744, 0.8343679904937744, 0.8432175517082214, 0.842028796672821, 0.8454629778862, 0.845859169960022, 0.8485008478164673, 0.8581429123878479, 0.8543124794960022], "val_loss": [2.2466907501220703, 2.021106004714966, 1.1347521543502808, 0.8416500091552734, 0.7581481337547302, 0.6850693225860596, 0.6342523694038391, 0.6227776408195496, 0.623706579208374, 0.600477397441864, 0.5788630247116089, 0.558999240398407, 0.5354220271110535, 0.5323048233985901, 0.5233931541442871, 0.5006188750267029, 0.49179914593696594, 0.498909592628479, 0.4901164472103119, 0.4767875075340271, 0.4715940058231354, 0.4683682918548584, 0.4673727750778198, 0.45926547050476074, 0.4620625376701355, 0.4513521194458008, 0.4475047290325165, 0.4403191804885864, 0.44748204946517944, 0.4399794042110443, 0.4435548484325409, 0.44577735662460327, 0.4365595579147339, 0.4421292245388031, 0.42306095361709595, 0.42673027515411377, 0.44478750228881836, 0.42455434799194336, 0.42850562930107117, 0.4321465790271759, 0.4302701950073242], "val_accuracy": [0.4309999942779541, 0.4503333270549774, 0.656333327293396, 0.6846666932106018, 0.7123333215713501, 0.7436666488647461, 0.7536666393280029, 0.7613333463668823, 0.768666684627533, 0.7673333287239075, 0.7766666412353516, 0.7749999761581421, 0.7873333096504211, 0.7883333563804626, 0.7973333597183228, 0.8036666512489319, 0.8066666722297668, 0.8066666722297668, 0.812333345413208, 0.8163333535194397, 0.8180000185966492, 0.8190000057220459, 0.8216666579246521, 0.824999988079071, 0.8253333568572998, 0.8316666483879089, 0.8320000171661377, 0.8336666822433472, 0.8373333215713501, 0.8413333296775818, 0.8299999833106995, 0.8429999947547913, 0.8446666598320007, 0.8426666855812073, 0.8539999723434448, 0.8553333282470703, 0.8513333201408386, 0.8536666631698608, 0.8533333539962769, 0.8500000238418579, 0.8536666631698608]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 3, 1, 3, 1, 2, 4, 3], [3, 0, 1, 0, 1, 3, 0, 1, 1], [83, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 3], [5, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 2], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 3, 4, 2, 2, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 1, 3, 0, 3, 1, 2, 4, 8, 7, 6, 0, 3, 7, 9, 8, 1, 0, 7, 4, 5, 5, 7, 0], [0, 0, 1, 0, 2, 0, 2, 1, 1, 1, 2, 2, 1, 3, 3, 3, 1], [83, 99, 27, 91, 98], [1, 0, 0, 0, 1, 1], [3, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 0], [6, 0, 2, 0], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 27, 17, 5, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.negative(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.negative(alpha), alpha), tf.math.multiply(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.add(grad, tf.math.pow(grad, alpha))), tf.math.square(grad))))))), tf.math.square(grad)), tf.math.add(tf.math.negative(grad), alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 0, 4, 4, 5, 4], [0, 0, 1, 0, 2, 3, 3, 2, 0], [34, 99, 27, 32], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3], [0, 0, 4], [0, 34], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 4, 6, 3, 3, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.pow(tf.math.pow(grad, grad), tf.math.square(grad)))), tf.math.pow(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 0], [58, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 1, 2, 8, 1], [0, 3, 3, 5, 5], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 2], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 5, 5, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]