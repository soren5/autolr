[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928929328918457, 2.190483331680298, 1.7754913568496704, 1.3571889400482178, 1.0743569135665894, 0.9411588311195374, 0.8588582873344421, 0.8242859244346619, 0.7764750719070435, 0.7465449571609497, 0.7019625902175903, 0.6885535717010498, 0.6621284484863281, 0.6243166327476501, 0.6138607263565063, 0.5995410680770874, 0.5895367860794067, 0.567662239074707, 0.5603947639465332, 0.5575300455093384, 0.5336439609527588, 0.5260728597640991, 0.5103862881660461, 0.4982508420944214, 0.49508538842201233, 0.48054543137550354, 0.48455965518951416, 0.4683862030506134, 0.449447900056839, 0.44673341512680054, 0.44581139087677, 0.44845691323280334, 0.4312942624092102, 0.4181068241596222, 0.43159082531929016, 0.4237547516822815, 0.4187239706516266, 0.392839640378952, 0.40332913398742676, 0.3863389194011688, 0.3730163276195526, 0.3682355284690857, 0.3668244779109955, 0.3636733889579773, 0.36190280318260193, 0.3405124843120575, 0.34356218576431274, 0.3330915868282318, 0.3485619127750397, 0.3391236364841461], "accuracy": [0.12970545887947083, 0.31620657444000244, 0.4418174624443054, 0.5344076156616211, 0.6300356388092041, 0.6547351479530334, 0.6824725866317749, 0.6915863156318665, 0.698190450668335, 0.7129837274551392, 0.733588695526123, 0.7359662055969238, 0.7500990629196167, 0.7572315335273743, 0.7613261342048645, 0.7687227725982666, 0.7729493975639343, 0.7808743715286255, 0.783119797706604, 0.7788931727409363, 0.789459764957428, 0.7951393723487854, 0.8050455451011658, 0.8086118102073669, 0.8072909712791443, 0.816008448600769, 0.817989706993103, 0.8241975903511047, 0.8239334225654602, 0.8330471515655518, 0.8274996876716614, 0.8334434032440186, 0.830669641494751, 0.837141752243042, 0.8391229510307312, 0.8393871188163757, 0.8372738361358643, 0.852331280708313, 0.8462554216384888, 0.854708731174469, 0.8564258217811584, 0.8560295701026917, 0.8605204224586487, 0.8644828796386719, 0.860652506351471, 0.8652753829956055, 0.86553955078125, 0.8706908226013184, 0.8614450097084045, 0.8683133125305176], "val_loss": [2.2455499172210693, 2.020815372467041, 1.1454583406448364, 0.8495358228683472, 0.771610677242279, 0.6955416798591614, 0.6242139935493469, 0.6098175644874573, 0.622001051902771, 0.5920437574386597, 0.546377956867218, 0.522847592830658, 0.5194365382194519, 0.5082184076309204, 0.5000882744789124, 0.5013734102249146, 0.4877680540084839, 0.48228755593299866, 0.4716236889362335, 0.465799480676651, 0.4580092430114746, 0.46382829546928406, 0.447719931602478, 0.44923341274261475, 0.4383155405521393, 0.43171459436416626, 0.4253596067428589, 0.41874927282333374, 0.4225778877735138, 0.4108618199825287, 0.40779948234558105, 0.40828970074653625, 0.41260671615600586, 0.3989521861076355, 0.4014492928981781, 0.3864147961139679, 0.3802942633628845, 0.38232219219207764, 0.36796098947525024, 0.37532201409339905, 0.36969152092933655, 0.3689034879207611, 0.36135977506637573, 0.36053815484046936, 0.3597051203250885, 0.3636128306388855, 0.35966265201568604, 0.362742155790329, 0.36370885372161865, 0.36621415615081787], "val_accuracy": [0.41499999165534973, 0.4803333282470703, 0.6423333287239075, 0.6953333616256714, 0.7009999752044678, 0.7333333492279053, 0.7459999918937683, 0.7580000162124634, 0.7680000066757202, 0.781333327293396, 0.777999997138977, 0.7863333225250244, 0.7996666431427002, 0.8059999942779541, 0.8029999732971191, 0.8046666383743286, 0.8180000185966492, 0.8223333358764648, 0.8199999928474426, 0.8253333568572998, 0.8196666836738586, 0.8209999799728394, 0.8356666564941406, 0.8353333473205566, 0.8393333554267883, 0.8360000252723694, 0.8420000076293945, 0.8479999899864197, 0.846666693687439, 0.8503333330154419, 0.8533333539962769, 0.8553333282470703, 0.8519999980926514, 0.8569999933242798, 0.8633333444595337, 0.8566666841506958, 0.8583333492279053, 0.8650000095367432, 0.8730000257492065, 0.862333357334137, 0.8669999837875366, 0.8740000128746033, 0.8740000128746033, 0.875, 0.8759999871253967, 0.874666690826416, 0.8759999871253967, 0.8726666569709778, 0.8733333349227905, 0.8756666779518127]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 3, 7, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 0, 2, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1], [5, 0, 4, 3, 5], [0, 1, 4], [0, 91], [1, 1], [0], [1], [0]], "fitness": -0.27142858505249023, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.257652759552002, 699.6771850585938, 2263430.75, 132927758336.0, 7678024988229632.0, 4.6869302610454014e+20], "accuracy": [0.19204860925674438, 0.22599393129348755, 0.10302469879388809, 0.09840179979801178, 0.0956280529499054, 0.10606260597705841], "val_loss": [1.9445617198944092, 1223.843505859375, 69210032.0, 3883437916160.0, 2.2646615227498496e+17, 1.3430092124989195e+22], "val_accuracy": [0.27133333683013916, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 2, 7, 7], [0, 2, 3, 4, 4], [0], [0, 0, 1, 0, 0, 1, 0], [0, 9, 6, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 10, 5, 5, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.add(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [38819.89453125, 5732317.5, 97012504.0, 691737728.0, 3008754176.0, 10098614272.0], "accuracy": [0.09959053993225098, 0.09893012791872025, 0.10527011007070541, 0.10368511080741882, 0.10196803510189056, 0.1002509593963623], "val_loss": [392060.0, 21031222.0, 225541664.0, 1229219200.0, 4603702272.0, 13578611712.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 3], [0, 1, 1, 2, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 6, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3, 0], [0, 0, 4], [82, 77], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [48099913728.0, 6965086388224.0, 119395401596928.0, 845746907643904.0, 3675911916355584.0, 1.2243581666328576e+16], "accuracy": [0.09615638852119446, 0.09708096832036972, 0.10302469879388809, 0.10315678268671036, 0.09813763201236725, 0.09470347315073013], "val_loss": [466777178112.0, 25165576536064.0, 270124284116992.0, 1472656104751104.0, 5517036352438272.0, 1.627281504075776e+16], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 1], [0, 0, 0, 0, 0, 1], [22, 34, 27, 72, 67], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 7, 1, 3, 2, 7, 7, 5, 8, 1, 9, 8], [0, 3, 3, 3, 4, 1, 0], [0, 95, 10], [0, 0, 1, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 1, 0, 1], [0, 0, 4, 8], [1, 7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(tf.math.square(grad), grad), grad), grad), tf.math.sqrt(alpha)), tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 12, 6, 6, 5, 19, 12, 7, 3, 3, 2, 1, 1, 6, 4, 2, 0], "tree_depth": 19}]