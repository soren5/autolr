[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293341636657715, 2.188990354537964, 1.7581555843353271, 1.3404148817062378, 1.05525541305542, 0.9108969569206238, 0.8288130164146423, 0.800507128238678, 0.7494596838951111, 0.739079475402832, 0.695412278175354, 0.6716980338096619, 0.6492655873298645, 0.6231689453125, 0.6072050929069519, 0.587786853313446, 0.585551381111145, 0.5698394775390625, 0.5440834164619446, 0.5449634194374084, 0.5352676510810852, 0.5166781544685364, 0.5107792615890503, 0.5033285617828369, 0.4877595007419586, 0.46786975860595703, 0.472435861825943, 0.46577587723731995, 0.4559279680252075, 0.4514371156692505, 0.4370577335357666, 0.41855111718177795, 0.4188551604747772, 0.41450706124305725, 0.40794336795806885, 0.3946537375450134, 0.3872389495372772, 0.37721753120422363, 0.3739960193634033, 0.3798880875110626, 0.36485227942466736, 0.36061522364616394, 0.33914458751678467, 0.34567004442214966, 0.3461840748786926, 0.3283481299877167, 0.33927616477012634, 0.33630090951919556, 0.317741334438324, 0.3177036643028259, 0.30399951338768005, 0.31177228689193726, 0.29687491059303284, 0.29496511816978455, 0.28944697976112366, 0.3035719394683838, 0.29314082860946655], "accuracy": [0.13142253458499908, 0.334169864654541, 0.4435345530509949, 0.5482763051986694, 0.6361114978790283, 0.6629242897033691, 0.6914542317390442, 0.7028133869171143, 0.7014925479888916, 0.7071720957756042, 0.735569953918457, 0.7456082701683044, 0.7498348951339722, 0.7640998363494873, 0.7655527591705322, 0.769911527633667, 0.778232753276825, 0.7828556299209595, 0.7924976944923401, 0.7898560166358948, 0.7985734939575195, 0.8013472557067871, 0.8010830879211426, 0.802800178527832, 0.8104609847068787, 0.8140271902084351, 0.8132346868515015, 0.8267071843147278, 0.824329674243927, 0.83119797706604, 0.8380662798881531, 0.8417646288871765, 0.8403117060661316, 0.8359529972076416, 0.8429533839225769, 0.8485008478164673, 0.8536521196365356, 0.8539162874221802, 0.8561616539955139, 0.859199583530426, 0.8589354157447815, 0.856689989566803, 0.8679170608520508, 0.8697662353515625, 0.8671245574951172, 0.8750495314598083, 0.868049144744873, 0.8668603897094727, 0.8730682730674744, 0.8771628737449646, 0.8821820020675659, 0.8837670087814331, 0.8848236799240112, 0.8820499181747437, 0.8795403242111206, 0.883238673210144, 0.8844274282455444], "val_loss": [2.245032787322998, 2.0162322521209717, 1.1174530982971191, 0.8741360902786255, 0.7520037293434143, 0.7241727113723755, 0.6872960329055786, 0.6630062460899353, 0.6375036835670471, 0.6102014780044556, 0.5940486788749695, 0.5771954655647278, 0.5401591658592224, 0.5292518138885498, 0.5171682238578796, 0.5126792192459106, 0.5069172382354736, 0.4893159866333008, 0.48285773396492004, 0.4732142388820648, 0.4744602143764496, 0.46718350052833557, 0.4628623425960541, 0.4472399353981018, 0.4437004029750824, 0.43885350227355957, 0.43420952558517456, 0.4339137375354767, 0.4280470311641693, 0.43626144528388977, 0.41663190722465515, 0.40439704060554504, 0.40806111693382263, 0.39842700958251953, 0.3934357762336731, 0.404897004365921, 0.388855904340744, 0.38719236850738525, 0.39714664220809937, 0.39098381996154785, 0.38870808482170105, 0.38571134209632874, 0.3830997049808502, 0.39979690313339233, 0.38999706506729126, 0.39092642068862915, 0.38990268111228943, 0.3982984125614166, 0.3866650462150574, 0.39334845542907715, 0.40113720297813416, 0.4159732758998871, 0.396962970495224, 0.4004672169685364, 0.4106927514076233, 0.4313158392906189, 0.4154928922653198], "val_accuracy": [0.4129999876022339, 0.4790000021457672, 0.6539999842643738, 0.7053333520889282, 0.7210000157356262, 0.7286666631698608, 0.7506666779518127, 0.7490000128746033, 0.7599999904632568, 0.7646666765213013, 0.7646666765213013, 0.7753333449363708, 0.7833333611488342, 0.7923333048820496, 0.7976666688919067, 0.7960000038146973, 0.7976666688919067, 0.8076666593551636, 0.8043333292007446, 0.8086666464805603, 0.8109999895095825, 0.8183333277702332, 0.8186666369438171, 0.828000009059906, 0.8303333520889282, 0.8423333168029785, 0.8389999866485596, 0.8309999704360962, 0.8353333473205566, 0.8363333344459534, 0.8433333039283752, 0.8506666421890259, 0.8523333072662354, 0.8550000190734863, 0.8629999756813049, 0.8640000224113464, 0.8629999756813049, 0.8610000014305115, 0.862666666507721, 0.8646666407585144, 0.8613333106040955, 0.8713333606719971, 0.8696666955947876, 0.8700000047683716, 0.871666669845581, 0.8733333349227905, 0.8703333139419556, 0.8700000047683716, 0.8736666440963745, 0.8776666522026062, 0.8763333559036255, 0.878333330154419, 0.8773333430290222, 0.8759999871253967, 0.875333309173584, 0.874666690826416, 0.8733333349227905]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 9, 2], [0, 3, 3], [77], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 7, 4, 3, 7], [0, 0, 0, 4, 0], [0, 58, 82, 62], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 10, 5, 5, 4, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46247104512.0, 6793138798592.0, 119294100766720.0, 840286997577728.0, 3688226124464128.0, 1.2246093148454912e+16], "accuracy": [0.0956280529499054, 0.09694888442754745, 0.10157178342342377, 0.0940430611371994, 0.09945846349000931, 0.10077928751707077], "val_loss": [475875475456.0, 25655890673664.0, 275389863690240.0, 1501462450405376.0, 5625010756517888.0, 1.659243040079872e+16], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 2, 3], [0, 0, 1, 0, 0], [83, 99, 27, 65], [0, 0, 1, 1, 0, 1, 1], [4, 1, 2], [0, 3, 3, 0], [0, 59], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 4, 3, 2, 2, 9], [1, 0, 4, 2], [0, 58], [0, 0, 0, 1, 1], [0, 6, 8], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 7, 3, 4, 2, 11, 7, 4, 2, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(alpha), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 4, 3, 2, 6, 5, 0, 4, 8, 7, 7, 2, 1, 4, 7, 2, 5, 0, 7, 9, 7, 1, 2, 1, 3, 3, 8, 6, 6, 4, 2, 9, 5, 7, 5, 5], [2, 0, 4, 1, 3, 0, 6, 5, 6, 0, 2, 6, 0, 4, 1, 1, 2, 3, 6, 6, 6, 6, 6, 3], [62, 58, 5, 94, 19, 11], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 6, 3, 3, 1, 61, 37, 24, 6, 2, 1, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, alpha), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(tf.math.negative(tf.math.pow(alpha, tf.math.sqrt(sigma))))), tf.math.add(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.pow(grad, grad), tf.math.add(tf.math.add(tf.math.square(tf.math.negative(grad)), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), beta)), grad)), tf.math.add(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), alpha)), beta))))), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(grad, grad))), tf.math.pow(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad)), tf.math.add(tf.math.square(tf.math.square(grad)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6289639472961426, 158.05038452148438, NaN, NaN, NaN, NaN], "accuracy": [0.20433232188224792, 0.11649715900421143, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3100779056549072, 113.08775329589844, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.04866666719317436, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 0], [87, 99, 27, 33], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 1, 0, 1, 1, 1], [0, 0, 9, 3], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 10, 5, 5, 4, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310802459716797, 2.310088872909546, 2.309582233428955, 2.3101911544799805, 2.310441255569458, 2.3098771572113037], "accuracy": [0.09179764986038208, 0.09457138925790787, 0.09087307006120682, 0.08955223858356476, 0.0944393053650856, 0.09536388516426086], "val_loss": [2.3084521293640137, 2.3084521293640137, 2.3084521293640137, 2.3084521293640137, 2.3084521293640137, 2.3084521293640137], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]