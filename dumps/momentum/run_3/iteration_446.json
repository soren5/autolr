[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292909860610962, 2.1891138553619385, 1.770958662033081, 1.3549211025238037, 1.0935641527175903, 0.929653525352478, 0.8654787540435791, 0.8283887505531311, 0.7660596370697021, 0.7638304233551025, 0.7113977074623108, 0.7079415917396545, 0.6544678211212158, 0.6387434005737305, 0.6255127787590027, 0.5885423421859741, 0.5841031074523926, 0.5735030174255371, 0.5700823068618774, 0.567977249622345, 0.5468037128448486, 0.5476198792457581, 0.5252647399902344, 0.5132910013198853, 0.4966656267642975, 0.47659510374069214, 0.4754449725151062, 0.4644126892089844, 0.44597551226615906, 0.44313105940818787, 0.44068729877471924, 0.42057129740715027, 0.41192108392715454, 0.4060570001602173, 0.3958796560764313, 0.39322713017463684, 0.38038861751556396, 0.389045387506485, 0.3721093535423279, 0.3737434148788452, 0.3646387755870819, 0.3511642515659332, 0.34976935386657715, 0.3493288457393646, 0.33924373984336853, 0.3298335671424866], "accuracy": [0.1224408894777298, 0.33007529377937317, 0.4423457980155945, 0.5445780158042908, 0.6267336010932922, 0.6605468392372131, 0.6860388517379761, 0.6976621150970459, 0.7102100253105164, 0.7030775547027588, 0.7321357727050781, 0.7416457533836365, 0.750231146812439, 0.7607977986335754, 0.7675340175628662, 0.7853652238845825, 0.7828556299209595, 0.7882710099220276, 0.7868181467056274, 0.7917051911354065, 0.7924976944923401, 0.7926297783851624, 0.8038568496704102, 0.8047813773155212, 0.8108572363853455, 0.8252542614936829, 0.8214238286018372, 0.8267071843147278, 0.8285563588142395, 0.8310658931732178, 0.8367455005645752, 0.8465195894241333, 0.8444063067436218, 0.8465195894241333, 0.850350022315979, 0.8495575189590454, 0.8555012345314026, 0.8500858545303345, 0.8564258217811584, 0.8617091774940491, 0.86553955078125, 0.8684453964233398, 0.863029956817627, 0.8632941246032715, 0.8688416481018066, 0.8811253309249878], "val_loss": [2.2467904090881348, 2.023390293121338, 1.1429096460342407, 0.8462444543838501, 0.755988597869873, 0.6974389553070068, 0.6479951739311218, 0.6149495840072632, 0.6408452391624451, 0.6050469279289246, 0.5665611624717712, 0.547914445400238, 0.5357373952865601, 0.5196865200996399, 0.504942774772644, 0.49941039085388184, 0.486064612865448, 0.48069363832473755, 0.4818188548088074, 0.4849962592124939, 0.4699046313762665, 0.45772990584373474, 0.44781693816185, 0.44733086228370667, 0.43575289845466614, 0.4276561737060547, 0.4182390570640564, 0.40802010893821716, 0.4006986618041992, 0.3943856656551361, 0.39129874110221863, 0.38729390501976013, 0.3873331844806671, 0.38630980253219604, 0.3792574107646942, 0.37665241956710815, 0.3775559067726135, 0.3815096914768219, 0.3670252561569214, 0.36465784907341003, 0.3657243549823761, 0.3805696666240692, 0.37355729937553406, 0.3675081431865692, 0.36949270963668823, 0.36540961265563965], "val_accuracy": [0.40666666626930237, 0.46666666865348816, 0.6423333287239075, 0.6850000023841858, 0.7273333072662354, 0.7396666407585144, 0.746999979019165, 0.7573333382606506, 0.7506666779518127, 0.7639999985694885, 0.7826666831970215, 0.7736666798591614, 0.7893333435058594, 0.7979999780654907, 0.8096666932106018, 0.8090000152587891, 0.8163333535194397, 0.8266666531562805, 0.8169999718666077, 0.8140000104904175, 0.8343333601951599, 0.8379999995231628, 0.8353333473205566, 0.8410000205039978, 0.8453333377838135, 0.8500000238418579, 0.8496666550636292, 0.8526666760444641, 0.8553333282470703, 0.8553333282470703, 0.8566666841506958, 0.859666645526886, 0.8583333492279053, 0.8616666793823242, 0.8583333492279053, 0.8633333444595337, 0.8656666874885559, 0.859000027179718, 0.8683333396911621, 0.8653333187103271, 0.8743333220481873, 0.8730000257492065, 0.8730000257492065, 0.8730000257492065, 0.8730000257492065, 0.8740000128746033]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 2, 6, 8, 1, 5, 6, 5, 9, 1], [0, 3, 3, 2, 2, 5], [0, 86], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 8, 4, 3, 4, 0, 4, 6, 3, 4, 5, 5, 6, 9], [4, 0, 4, 1, 1, 0, 1, 7], [0, 58, 69], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 17, 11, 6, 2, 22, 14, 8, 3, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)), tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(alpha, alpha), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 0], [0, 1, 2], [0, 3, 3], [98], [0, 1, 1, 0, 1, 1, 1], [6, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 3, 1, 2, 2, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1178068992.0, 21708574720.0, 99767984128.0, 280727126016.0, 596901756928.0, 1083128086528.0], "accuracy": [0.09734513610601425, 0.09826971590518951, 0.09866596013307571, 0.10236428678035736, 0.09747721254825592, 0.10249637067317963], "val_loss": [5229666304.0, 41832001536.0, 141176864768.0, 334632321024.0, 653570342912.0, 1129364848640.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3], [0, 2, 2, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 3], [0, 3, 4], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 6, 3, 3, 0, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 33, 21], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 3, 3], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3, 5, 7, 1, 5], [1, 0, 4, 3, 0], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 6, 3, 3, 0, 13, 8, 5, 2, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), sigma))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3032774925231934, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]