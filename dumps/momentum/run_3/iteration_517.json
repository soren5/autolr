[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934794425964355, 2.191073417663574, 1.7801512479782104, 1.3421849012374878, 1.1066677570343018, 0.9708377718925476, 0.8604843616485596, 0.8443941473960876, 0.7878731489181519, 0.7647809982299805, 0.7260489463806152, 0.7054176330566406, 0.6594428420066833, 0.6450884342193604, 0.6257355213165283, 0.6143696904182434, 0.5964652299880981, 0.5878691673278809, 0.5730007886886597, 0.559299886226654, 0.5477844476699829, 0.5409624576568604, 0.5279870629310608, 0.5162934064865112, 0.4957190155982971, 0.4941568076610565, 0.4880053997039795, 0.4758267104625702, 0.4642118513584137, 0.4579460918903351, 0.4539148807525635, 0.4390910565853119, 0.4257603883743286, 0.4226784110069275, 0.4107874631881714, 0.3962857723236084, 0.3993152678012848, 0.3883252739906311, 0.3907952904701233, 0.37630152702331543, 0.3829739987850189, 0.35995638370513916, 0.363108366727829, 0.3465943932533264, 0.3587753176689148, 0.3425678610801697, 0.33338022232055664], "accuracy": [0.12429005652666092, 0.32426363229751587, 0.42966583371162415, 0.54655921459198, 0.6263373494148254, 0.641791045665741, 0.6900013089179993, 0.6946242451667786, 0.7034738063812256, 0.7067758440971375, 0.7205125093460083, 0.7359662055969238, 0.750231146812439, 0.7553823590278625, 0.7640998363494873, 0.76542067527771, 0.7718927264213562, 0.7795535326004028, 0.7771760821342468, 0.7860256433486938, 0.7932901978492737, 0.7895918488502502, 0.7940827012062073, 0.8024039268493652, 0.8084797263145447, 0.8105930685997009, 0.8148196935653687, 0.8198388814926147, 0.8235371708869934, 0.8211596608161926, 0.822348415851593, 0.8298771381378174, 0.8378021121025085, 0.8405758738517761, 0.8404437899589539, 0.8469158411026001, 0.8441421389579773, 0.8486329317092896, 0.8519350290298462, 0.860652506351471, 0.8473120927810669, 0.8628978729248047, 0.8602562546730042, 0.8643507957458496, 0.8628978729248047, 0.8677849769592285, 0.8639545440673828], "val_loss": [2.2460124492645264, 2.021587610244751, 1.1618742942810059, 0.9157367944717407, 0.80401211977005, 0.7561778426170349, 0.6939070820808411, 0.6778998374938965, 0.6674819588661194, 0.6335332989692688, 0.5979663729667664, 0.5753350257873535, 0.5468066334724426, 0.5439272522926331, 0.5291542410850525, 0.521473228931427, 0.5110809803009033, 0.5006290674209595, 0.49917498230934143, 0.4990922808647156, 0.4938076138496399, 0.4894807040691376, 0.4776582717895508, 0.47724083065986633, 0.4667562246322632, 0.4573283791542053, 0.4566492438316345, 0.4470457434654236, 0.4421403706073761, 0.44715502858161926, 0.4419827461242676, 0.43172502517700195, 0.42360594868659973, 0.4174920320510864, 0.4174656569957733, 0.41177892684936523, 0.40995776653289795, 0.41357946395874023, 0.40741166472435, 0.3987552523612976, 0.3930302858352661, 0.4016859829425812, 0.39461520314216614, 0.38931840658187866, 0.3880179524421692, 0.3893280327320099, 0.38812655210494995], "val_accuracy": [0.41499999165534973, 0.4556666612625122, 0.6456666588783264, 0.6933333277702332, 0.7126666903495789, 0.7203333377838135, 0.7366666793823242, 0.7516666650772095, 0.7556666731834412, 0.7643333077430725, 0.7630000114440918, 0.7770000100135803, 0.7836666703224182, 0.7913333177566528, 0.7886666655540466, 0.796999990940094, 0.7990000247955322, 0.8113333582878113, 0.8149999976158142, 0.8113333582878113, 0.8166666626930237, 0.8169999718666077, 0.8206666707992554, 0.8243333101272583, 0.8286666870117188, 0.8286666870117188, 0.8303333520889282, 0.8370000123977661, 0.8393333554267883, 0.8339999914169312, 0.8429999947547913, 0.8443333506584167, 0.8483333587646484, 0.8503333330154419, 0.8503333330154419, 0.8539999723434448, 0.8560000061988831, 0.8633333444595337, 0.8656666874885559, 0.8629999756813049, 0.8723333477973938, 0.8730000257492065, 0.8703333139419556, 0.8703333139419556, 0.8659999966621399, 0.871666669845581, 0.871999979019165]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 3, 6, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 3], [0, 3, 0, 1], [18, 8], [0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 8, 4, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 6, 3, 1, 3, 0, 9], [0, 0, 1, 0, 2], [83, 17, 27, 48], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 5, 3, 6], [1, 3, 3, 0], [0], [1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 4], [0, 3, 4], [0, 58], [0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 6, 7], [1, 3, 3, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 9, 5, 4, 1, 1, 0, 1, 1, 8, 4, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.multiply(alpha, grad)), tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))", "other_info": {"loss": [1130507904.0, 21590257664.0, 100714168320.0, 278663528448.0, 600583831552.0, 1099303288832.0], "accuracy": [0.09998679161071777, 0.10289261490106583, 0.09853387624025345, 0.09681680053472519, 0.09945846349000931, 0.10038304328918457], "val_loss": [5169018880.0, 41346789376.0, 139539890176.0, 330754293760.0, 645991694336.0, 1116256731136.0], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 3, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 2, 5, 1, 3, 2, 3], [0, 3, 3, 2, 4, 4, 5, 2], [0], [0, 0, 0, 0, 0, 1, 1], [0, 0, 4, 9, 3], [0, 0, 4], [97, 18, 83], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 16, 8, 8, 1, 7, 5, 2, 3, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(grad, beta), grad), grad)))), tf.math.multiply(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [5, 1, 3, 1, 3, 3, 5], [0, 0, 1, 2, 2, 1], [83, 99, 33], [1, 0, 0, 0, 1, 0], [0, 1, 2], [4, 3, 3], [0], [0, 1, 0, 1, 1, 0, 1], [5, 0, 4, 3], [3, 0, 4], [0, 58], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 8, 1, 8, 7, 3, 6], [1, 7, 5, 7, 0, 4], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.square(alpha), grad), grad), alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.multiply(grad, grad), tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 13, 7, 6, 2, 1, 0, 1, 0, 2, 1, 1, 0, 14, 8, 6, 1], "tree_depth": 18}]