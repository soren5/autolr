[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293360948562622, 2.190302610397339, 1.7740851640701294, 1.3657313585281372, 1.0554962158203125, 0.9381259679794312, 0.8554483652114868, 0.8073917627334595, 0.7646313905715942, 0.7432237267494202, 0.6875304579734802, 0.6862956881523132, 0.649168074131012, 0.6213659048080444, 0.5975074768066406, 0.5758853554725647, 0.5744161605834961, 0.5570878982543945, 0.5557736754417419, 0.5494179129600525, 0.5282831788063049, 0.5207328200340271, 0.5217801928520203, 0.505451500415802, 0.490369588136673, 0.48116177320480347, 0.4691265821456909, 0.47105032205581665, 0.4484471082687378, 0.43855756521224976, 0.4335077404975891, 0.4307233989238739, 0.4133903682231903, 0.40970391035079956, 0.4007900357246399, 0.40108373761177063, 0.39803779125213623], "accuracy": [0.12336547672748566, 0.3287544548511505, 0.44406285881996155, 0.5458987951278687, 0.6371681690216064, 0.6487914323806763, 0.6869634389877319, 0.6966054439544678, 0.7086250185966492, 0.7107383608818054, 0.7417778372764587, 0.7334566116333008, 0.7470611333847046, 0.7623828053474426, 0.7714964747428894, 0.7839123010635376, 0.778761088848114, 0.7868181467056274, 0.7881389260292053, 0.7885351777076721, 0.7928939461708069, 0.8042530417442322, 0.8050455451011658, 0.8039889335632324, 0.8170651197433472, 0.8171972036361694, 0.8212917447090149, 0.8185180425643921, 0.8238013386726379, 0.8347642421722412, 0.8378021121025085, 0.8343679904937744, 0.8381983637809753, 0.8453308939933777, 0.8474441766738892, 0.8485008478164673, 0.8506141901016235], "val_loss": [2.2467572689056396, 2.020716905593872, 1.1459088325500488, 0.870024561882019, 0.8027581572532654, 0.7234784960746765, 0.7054373621940613, 0.6711540222167969, 0.6430846452713013, 0.6100982427597046, 0.5867213010787964, 0.561892032623291, 0.5423619151115417, 0.5389087200164795, 0.5472277998924255, 0.5300272107124329, 0.5098480582237244, 0.5107428431510925, 0.5060374736785889, 0.49675777554512024, 0.5019571781158447, 0.49620378017425537, 0.4874057173728943, 0.48608940839767456, 0.4821322560310364, 0.4729960262775421, 0.4644744396209717, 0.4646783769130707, 0.4543127417564392, 0.4463442265987396, 0.44738760590553284, 0.4459967315196991, 0.44989147782325745, 0.44026342034339905, 0.43621546030044556, 0.4439513683319092, 0.45674145221710205], "val_accuracy": [0.4336666762828827, 0.44600000977516174, 0.6443333625793457, 0.6963333487510681, 0.7036666870117188, 0.7176666855812073, 0.7273333072662354, 0.7563333511352539, 0.7620000243186951, 0.7646666765213013, 0.768666684627533, 0.7736666798591614, 0.7896666526794434, 0.7906666398048401, 0.7860000133514404, 0.7906666398048401, 0.8096666932106018, 0.8073333501815796, 0.8100000023841858, 0.8180000185966492, 0.8116666674613953, 0.8086666464805603, 0.8190000057220459, 0.8206666707992554, 0.8276666402816772, 0.8333333134651184, 0.8443333506584167, 0.8376666903495789, 0.8393333554267883, 0.8423333168029785, 0.8413333296775818, 0.8516666889190674, 0.8446666598320007, 0.8460000157356262, 0.846666693687439, 0.8489999771118164, 0.8473333120346069]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 91, 27], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 2, 3, 2], [0, 3, 3, 4, 3], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3, 3, 3, 3, 4, 5, 8, 1, 8], [4, 0, 4, 6, 5, 7, 7, 5], [0, 58], [0, 1, 1], [6], [1, 2], [0]], "fitness": -0.12428571283817291, "mapping_values": [1, 2, 1, 1, 1, 10, 5, 5, 1, 20, 12, 8, 1, 3, 1, 2, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(grad, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.sqrt(grad)), grad), grad), tf.math.subtract(grad, tf.math.sqrt(grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [1.2592083973326044e+28, 1.5148431996173283e+28, 1.451133753396934e+28, 1.4529765388577117e+28, 1.4430155331762327e+28, 1.4588588366079362e+28], "accuracy": [0.11491216719150543, 0.11319508403539658, 0.12138422578573227, 0.11927089840173721, 0.12402588874101639, 0.1200634017586708], "val_loss": [8.732858059391675e+27, 8.732860420574916e+27, 8.732860420574916e+27, 8.732860420574916e+27, 8.732860420574916e+27, 8.732860420574916e+27], "val_accuracy": [0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 7], [0, 0, 0, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [3], [0, 0, 0, 1, 1, 1, 1], [0, 0, 2, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45797105664.0, 6849589411840.0, 118608927653888.0, 828725348270080.0, 3664359259635712.0, 1.2217943932796928e+16], "accuracy": [0.09879804402589798, 0.10355303436517715, 0.10289261490106583, 0.10368511080741882, 0.10210011899471283, 0.1006472036242485], "val_loss": [469214527488.0, 25296979886080.0, 271539610058752.0, 1480309736472576.0, 5545666067562496.0, 1.6359979254546432e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 9, 7, 2, 9, 2, 4, 0], [0, 0, 0, 0, 2, 2, 3], [83, 17, 41, 37, 25, 77], [1, 0, 1, 0, 0, 1], [0, 1, 2], [0, 3, 2], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 0], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 6, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.math.negative(grad), grad))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 7, 8, 0, 7, 1, 0, 0, 6, 8, 3, 0, 7], [3, 0, 1, 0, 2, 1, 3, 2, 2, 2, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 9, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 0, 1], [4, 0, 4, 3], [0, 0, 4], [0, 83], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 2, 2, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.negative(tf.math.negative(alpha))), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.multiply(grad, grad))))), tf.math.negative(tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]