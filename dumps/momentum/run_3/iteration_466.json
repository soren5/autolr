[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926435470581055, 2.1857707500457764, 1.7528550624847412, 1.3468420505523682, 1.079201340675354, 0.9040640592575073, 0.8453972339630127, 0.8096181154251099, 0.7755106687545776, 0.7414064407348633, 0.7099094986915588, 0.6857300400733948, 0.6618732213973999, 0.6360571384429932, 0.609245240688324, 0.6066213250160217, 0.5773618817329407, 0.5602805614471436, 0.5563669204711914, 0.5508478283882141, 0.5499247908592224, 0.5410990715026855, 0.5190868377685547, 0.5103774666786194, 0.49855318665504456, 0.4826946258544922, 0.488744854927063, 0.46717333793640137, 0.45997297763824463, 0.4576316177845001, 0.4479367733001709, 0.4526900351047516, 0.44961830973625183, 0.41873976588249207, 0.43318891525268555, 0.4180160164833069, 0.4148484766483307, 0.40618717670440674, 0.3994765877723694, 0.38908907771110535, 0.38018307089805603, 0.38532593846321106, 0.37343326210975647, 0.3627133369445801, 0.362321674823761, 0.3650672137737274, 0.35831916332244873, 0.35475924611091614], "accuracy": [0.1302337795495987, 0.3343019485473633, 0.44089287519454956, 0.5424646735191345, 0.6281865239143372, 0.6676793098449707, 0.693831741809845, 0.696209192276001, 0.6993792057037354, 0.7144366502761841, 0.7305507659912109, 0.7384757399559021, 0.7457403540611267, 0.7600052952766418, 0.763439416885376, 0.7695152759552002, 0.7812706232070923, 0.7840443849563599, 0.7897239327430725, 0.7980451583862305, 0.7902522683143616, 0.7940827012062073, 0.8062343001365662, 0.8055738806724548, 0.8168009519577026, 0.819970965385437, 0.8115176558494568, 0.8190463781356812, 0.8234050869941711, 0.8216879963874817, 0.8230088353157043, 0.8284242749214172, 0.8281601071357727, 0.842028796672821, 0.8347642421722412, 0.8417646288871765, 0.8418967127799988, 0.847840428352356, 0.8438779711723328, 0.8524633646011353, 0.8499537706375122, 0.8504821062088013, 0.8605204224586487, 0.8618412613868713, 0.8536521196365356, 0.8524633646011353, 0.8581429123878479, 0.8650112152099609], "val_loss": [2.2460246086120605, 2.012397050857544, 1.1320364475250244, 0.9108131527900696, 0.773339033126831, 0.7042243480682373, 0.6885237097740173, 0.6822634935379028, 0.6582699418067932, 0.6208749413490295, 0.5941932201385498, 0.5845325589179993, 0.5623341798782349, 0.5537683963775635, 0.5517632365226746, 0.5418896675109863, 0.5342798233032227, 0.5285706520080566, 0.5281387567520142, 0.510294497013092, 0.5099090337753296, 0.4989863336086273, 0.4888569712638855, 0.4857730567455292, 0.4808719754219055, 0.4799182415008545, 0.47589388489723206, 0.4725671112537384, 0.46156615018844604, 0.4562113583087921, 0.453071653842926, 0.4442920386791229, 0.44937723875045776, 0.43776819109916687, 0.43487614393234253, 0.4288488030433655, 0.46009841561317444, 0.43720752000808716, 0.43549901247024536, 0.4251883029937744, 0.4261532425880432, 0.4194009602069855, 0.4274294376373291, 0.4212630093097687, 0.41844937205314636, 0.4167558550834656, 0.4288999140262604, 0.42409563064575195], "val_accuracy": [0.40299999713897705, 0.4633333384990692, 0.6433333158493042, 0.687333345413208, 0.7123333215713501, 0.7329999804496765, 0.7403333187103271, 0.7319999933242798, 0.7443333268165588, 0.765666663646698, 0.7670000195503235, 0.7743333578109741, 0.7816666960716248, 0.7906666398048401, 0.7863333225250244, 0.7926666736602783, 0.7983333468437195, 0.809333324432373, 0.8033333420753479, 0.8149999976158142, 0.8153333067893982, 0.8163333535194397, 0.8213333487510681, 0.8303333520889282, 0.82833331823349, 0.8303333520889282, 0.8336666822433472, 0.8333333134651184, 0.8379999995231628, 0.8416666388511658, 0.8399999737739563, 0.840666651725769, 0.8433333039283752, 0.8433333039283752, 0.8429999947547913, 0.8460000157356262, 0.8463333249092102, 0.8516666889190674, 0.8486666679382324, 0.8516666889190674, 0.8503333330154419, 0.8519999980926514, 0.859333336353302, 0.8513333201408386, 0.8460000157356262, 0.8513333201408386, 0.8553333282470703, 0.8573333621025085]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 2, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 2, 3, 2, 5], [0, 1, 3, 4, 2], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [4, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30330228805542, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 2, 2, 0, 1, 11, 6, 5, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 7, 3, 0], [0, 0, 1, 0, 2, 3, 0], [83, 99, 27, 36], [1, 0, 1, 0, 0, 1], [8, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 4, 3], [0, 1, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [10397.2666015625, 5639.806640625, 15215.603515625, 24359.77734375, 32574.181640625, 36130.1484375, 30792.0625], "accuracy": [0.10091137140989304, 0.0956280529499054, 0.09681680053472519, 0.0956280529499054, 0.09549596905708313, 0.10170386731624603, 0.1014397069811821], "val_loss": [2291.107421875, 11227.17578125, 20780.2421875, 29712.205078125, 35427.79296875, 32799.9296875, 27215.439453125], "val_accuracy": [0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09933333098888397, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 3, 6, 3, 3, 1, 0, 8], [0, 0, 2, 0, 2, 2, 3], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 2, 1, 8, 0], [0, 3, 3, 2], [94], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3, 4], [0, 2, 7, 1], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 10, 6, 4, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.sqrt(grad)), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.negative(grad)), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 3, 0, 3], [0, 0, 1, 2, 2], [39, 99, 75], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0], [5, 9], [1], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 5, 3, 2, 2, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.311069965362549, 2.3111608028411865, 2.3085756301879883, 2.3093769550323486, 2.31081485748291, 2.3096115589141846], "accuracy": [0.09126931428909302, 0.09206181764602661, 0.09681680053472519, 0.08955223858356476, 0.08981640636920929, 0.09457138925790787], "val_loss": [2.30808424949646, 2.30808424949646, 2.30808424949646, 2.30808424949646, 2.30808424949646, 2.30808424949646], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]