[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935848236083984, 2.1898298263549805, 1.7673313617706299, 1.3549638986587524, 1.0518512725830078, 0.9102857708930969, 0.8406710624694824, 0.8082935214042664, 0.7530636787414551, 0.7316341400146484, 0.6931853294372559, 0.6799611449241638, 0.6442999243736267, 0.613315999507904, 0.5998348593711853, 0.5753489136695862, 0.5626461505889893, 0.564355194568634, 0.5403735041618347, 0.5239999890327454, 0.5211579203605652, 0.5075275897979736, 0.4985504746437073, 0.4811364710330963, 0.4799662232398987, 0.4829827845096588, 0.4644199013710022, 0.4516105651855469, 0.4490925073623657, 0.44091740250587463, 0.4287561774253845, 0.42578667402267456, 0.41993066668510437, 0.4141865074634552, 0.3981105089187622, 0.4130704402923584, 0.3906172513961792, 0.38636451959609985, 0.3989074230194092, 0.38238227367401123, 0.3563622832298279, 0.3654429018497467, 0.3629516363143921, 0.3480781018733978, 0.34073030948638916, 0.3540676236152649, 0.3490539491176605, 0.3365916609764099, 0.3310188353061676, 0.3401452898979187, 0.3291932940483093, 0.3292401134967804], "accuracy": [0.1310262829065323, 0.3234711289405823, 0.4435345530509949, 0.538237988948822, 0.6366398334503174, 0.6625280380249023, 0.6963412761688232, 0.6992471218109131, 0.709021270275116, 0.7116629481315613, 0.7364945411682129, 0.7382115721702576, 0.7526086568832397, 0.7668735980987549, 0.7646281719207764, 0.7765156626701355, 0.7865539789199829, 0.7861577272415161, 0.7956677079200745, 0.7984414100646973, 0.7952714562416077, 0.8064984679222107, 0.805177628993988, 0.8145555257797241, 0.8157442808151245, 0.8088759779930115, 0.8238013386726379, 0.8239334225654602, 0.8293488025665283, 0.8297450542449951, 0.834632158279419, 0.8418967127799988, 0.8372738361358643, 0.8366134166717529, 0.8436138033866882, 0.8453308939933777, 0.850350022315979, 0.8504821062088013, 0.8502179384231567, 0.8551049828529358, 0.8622375130653381, 0.8582749962806702, 0.8628978729248047, 0.8595958352088928, 0.8685774803161621, 0.863029956817627, 0.8643507957458496, 0.8661999702453613, 0.8677849769592285, 0.8663320541381836, 0.8693699836730957, 0.8704266548156738], "val_loss": [2.246549367904663, 2.022984266281128, 1.1608195304870605, 0.8868094086647034, 0.7641502022743225, 0.7110195159912109, 0.676626980304718, 0.6670809984207153, 0.647773027420044, 0.6183109283447266, 0.5981772541999817, 0.5702306032180786, 0.5493025183677673, 0.5387373566627502, 0.5316901803016663, 0.529922604560852, 0.520113468170166, 0.5051413774490356, 0.49258625507354736, 0.4908449649810791, 0.4930967092514038, 0.49065715074539185, 0.47549185156822205, 0.48373398184776306, 0.4679769277572632, 0.4614431858062744, 0.4614357054233551, 0.449951708316803, 0.45125842094421387, 0.4360769987106323, 0.4311734139919281, 0.4369044601917267, 0.4300651550292969, 0.4313761293888092, 0.43665429949760437, 0.42981666326522827, 0.43609675765037537, 0.4262937009334564, 0.43821167945861816, 0.42586231231689453, 0.4262109398841858, 0.45214465260505676, 0.43793725967407227, 0.4344210922718048, 0.4457165002822876, 0.4415256381034851, 0.4255259931087494, 0.42402327060699463, 0.41856539249420166, 0.43668872117996216, 0.4342966675758362, 0.4304737150669098], "val_accuracy": [0.3943333327770233, 0.46299999952316284, 0.6380000114440918, 0.6919999718666077, 0.7210000157356262, 0.7316666841506958, 0.7363333106040955, 0.7506666779518127, 0.7616666555404663, 0.768666684627533, 0.7706666588783264, 0.781000018119812, 0.7919999957084656, 0.7913333177566528, 0.7990000247955322, 0.79666668176651, 0.8029999732971191, 0.8056666851043701, 0.812666654586792, 0.8069999814033508, 0.8143333196640015, 0.8209999799728394, 0.8226666450500488, 0.8206666707992554, 0.8343333601951599, 0.8370000123977661, 0.8393333554267883, 0.8376666903495789, 0.8363333344459534, 0.8383333086967468, 0.8416666388511658, 0.8416666388511658, 0.843666672706604, 0.8496666550636292, 0.8483333587646484, 0.8450000286102295, 0.846666693687439, 0.8569999933242798, 0.8523333072662354, 0.8529999852180481, 0.8533333539962769, 0.8586666584014893, 0.8633333444595337, 0.8606666922569275, 0.859333336353302, 0.8586666584014893, 0.8653333187103271, 0.8633333444595337, 0.8619999885559082, 0.8586666584014893, 0.8629999756813049, 0.8610000014305115]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [6, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46617952256.0, 6915166306304.0, 117431821402112.0, 829606823198720.0, 3642914487926784.0, 1.2174952383905792e+16], "accuracy": [0.1022322028875351, 0.0940430611371994, 0.10077928751707077, 0.09945846349000931, 0.09985470771789551, 0.09840179979801178], "val_loss": [487206518784.0, 26267124498432.0, 281944101224448.0, 1537038872477696.0, 5758511761850368.0, 1.6985632509263872e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [2, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 2, 6, 7, 2, 8, 0], [0, 3, 3, 4, 2, 5], [0], [1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 14, 8, 6, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.negative(grad)), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6288325786590576, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2086910605430603, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2613.125732421875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06333333253860474, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 2, 2, 0, 0, 7, 7, 6, 8, 1, 2, 0, 4, 4], [0, 3, 3, 5, 4, 0, 5, 0, 4, 1, 3, 2], [0, 71, 27], [0, 1, 0, 0, 0, 1, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09828571230173111, "mapping_values": [1, 10, 5, 5, 2, 28, 16, 12, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.negative(grad)), tf.math.add(grad, tf.math.add(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.pow(alpha, tf.math.pow(grad, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3089427947998047, 2.302382707595825, 2.3021035194396973, 2.302459478378296, 2.3028645515441895, 2.3030014038085938], "accuracy": [0.08968432247638702, 0.09602430462837219, 0.09100515395402908, 0.0944393053650856, 0.09734513610601425, 0.09932637959718704], "val_loss": [2.303250551223755, 2.302023410797119, 2.3028221130371094, 2.302856206893921, 2.30308198928833, 2.3032891750335693], "val_accuracy": [0.10400000214576721, 0.08033332973718643, 0.09233333170413971, 0.09533333033323288, 0.0976666659116745, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 7], [0, 2, 1, 2, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309635639190674, 2.3111090660095215, 2.3098092079162598, 2.310164213180542, 2.3096094131469727, 2.3092026710510254], "accuracy": [0.09576013684272766, 0.09074098616838455, 0.08942015469074249, 0.08955223858356476, 0.09351472556591034, 0.09642054885625839], "val_loss": [2.3084352016448975, 2.3084352016448975, 2.3084352016448975, 2.3084352016448975, 2.3084352016448975, 2.3084352016448975], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]