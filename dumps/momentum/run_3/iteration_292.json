[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937264442443848, 2.1930041313171387, 1.786202311515808, 1.3540689945220947, 1.090741515159607, 0.9182593822479248, 0.848689079284668, 0.8107718229293823, 0.7759919762611389, 0.7438044548034668, 0.7119640707969666, 0.6854166984558105, 0.643264889717102, 0.6318264603614807, 0.6232094168663025, 0.6024878621101379, 0.5758543014526367, 0.5680627226829529, 0.5544514060020447, 0.5449567437171936, 0.542604386806488, 0.5393437147140503, 0.519656777381897, 0.5105018615722656, 0.49127671122550964, 0.48955878615379333, 0.4760316014289856, 0.469052791595459, 0.4580463767051697, 0.4633854627609253, 0.44686344265937805, 0.43592745065689087, 0.42325833439826965, 0.4146970510482788, 0.4141293168067932, 0.4061252772808075, 0.4000643193721771, 0.38786086440086365, 0.3964740037918091, 0.38255345821380615, 0.3734334707260132, 0.3744397461414337, 0.3613012731075287, 0.3567314147949219], "accuracy": [0.13274335861206055, 0.3273015320301056, 0.431779146194458, 0.5408796668052673, 0.6260731816291809, 0.6653017997741699, 0.6844538450241089, 0.7021529674530029, 0.6996433734893799, 0.7174745798110962, 0.7199841737747192, 0.7374191284179688, 0.7584202885627747, 0.7666094303131104, 0.7683265209197998, 0.7714964747428894, 0.7783648371696472, 0.7887993454933167, 0.7913089394569397, 0.7936864495277405, 0.7923656105995178, 0.7917051911354065, 0.7915731072425842, 0.7961959838867188, 0.8156121969223022, 0.8112534880638123, 0.8203672170639038, 0.8228767514228821, 0.8313300609588623, 0.8234050869941711, 0.833179235458374, 0.835160493850708, 0.8404437899589539, 0.8454629778862, 0.845859169960022, 0.8474441766738892, 0.8498216867446899, 0.8562937378883362, 0.8525954484939575, 0.8582749962806702, 0.8607845902442932, 0.8589354157447815, 0.8607845902442932, 0.8602562546730042], "val_loss": [2.2464864253997803, 2.0281636714935303, 1.1532254219055176, 0.8374444842338562, 0.7618459463119507, 0.6862920522689819, 0.6506574153900146, 0.6419165134429932, 0.6305705308914185, 0.5881820321083069, 0.5697658061981201, 0.5422334671020508, 0.516772449016571, 0.5028980374336243, 0.4928305745124817, 0.49299734830856323, 0.4777294099330902, 0.47073689103126526, 0.4683954119682312, 0.46695348620414734, 0.46360135078430176, 0.45818018913269043, 0.45643991231918335, 0.4469788372516632, 0.4421849250793457, 0.4375658631324768, 0.43185484409332275, 0.43653279542922974, 0.42040103673934937, 0.42089542746543884, 0.417808473110199, 0.40509411692619324, 0.4022025465965271, 0.40523186326026917, 0.4034273624420166, 0.4024730920791626, 0.3976510763168335, 0.3994245231151581, 0.3872647285461426, 0.38557958602905273, 0.39415013790130615, 0.38716423511505127, 0.3893781006336212, 0.38341134786605835], "val_accuracy": [0.39766666293144226, 0.4723333418369293, 0.6600000262260437, 0.7039999961853027, 0.7286666631698608, 0.7450000047683716, 0.7493333220481873, 0.7599999904632568, 0.7553333044052124, 0.7743333578109741, 0.7730000019073486, 0.7870000004768372, 0.800000011920929, 0.8019999861717224, 0.8026666641235352, 0.8119999766349792, 0.809333324432373, 0.8159999847412109, 0.824999988079071, 0.8183333277702332, 0.8159999847412109, 0.8259999752044678, 0.8259999752044678, 0.8266666531562805, 0.8356666564941406, 0.8370000123977661, 0.8346666693687439, 0.8356666564941406, 0.847000002861023, 0.8479999899864197, 0.8550000190734863, 0.8513333201408386, 0.8573333621025085, 0.8543333411216736, 0.856333315372467, 0.8519999980926514, 0.856333315372467, 0.8613333106040955, 0.8663333058357239, 0.8656666874885559, 0.8646666407585144, 0.8653333187103271, 0.8656666874885559, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 2, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [7, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [47, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 5, 2, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 9, 3, 1, 3], [3, 0, 1, 0, 2], [67, 99, 27], [1, 0, 1, 0, 1, 1], [2, 1, 2], [4, 2, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 4, 3, 6, 9], [1, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038485050201416, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025856018066406], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025851249694824, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 3, 7, 3], [3, 0, 1, 0, 2], [83, 99, 46], [1, 0, 0, 1, 1, 1], [0, 9, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 4, 9], [0, 0, 4], [0, 20], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 1, 5, 4, 1, 2, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 2, 6, 8, 1, 2], [0, 3, 3, 4, 0, 3], [0, 79], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 4, 3, 7, 2], [0, 0, 4, 7, 3, 0], [0, 58, 14], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 4, 6, 9, 1, 2, 3, 1, 2], [1, 5, 1, 5, 1, 7, 6, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 13, 7, 6, 2, 12, 6, 6, 3, 19, 10, 9, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(grad, alpha), grad), grad), beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]