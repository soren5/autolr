[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2950479984283447, 2.188459634780884, 1.7718032598495483, 1.346601963043213, 1.0746876001358032, 0.9061286449432373, 0.8389589190483093, 0.820000410079956, 0.7580453753471375, 0.7364384531974792, 0.6877992153167725, 0.673882246017456, 0.6490848064422607, 0.6223763823509216, 0.5998950004577637, 0.5868375897407532, 0.5705983638763428, 0.5692391395568848, 0.5481604337692261, 0.5481448769569397, 0.5403534173965454, 0.516947329044342, 0.4991181194782257, 0.5076469779014587, 0.4833455979824066, 0.4760798215866089, 0.47741150856018066, 0.4581299126148224, 0.4515085518360138, 0.43872925639152527, 0.43189895153045654, 0.4151058495044708, 0.4245182275772095, 0.40573474764823914, 0.4016915559768677, 0.4075010418891907, 0.3854254186153412, 0.3796128034591675, 0.3708127439022064, 0.368490993976593, 0.3551497459411621, 0.3563016653060913, 0.35279902815818787, 0.34195566177368164, 0.353722482919693, 0.32923007011413574, 0.3401127755641937, 0.3334839344024658, 0.3296293318271637, 0.3299051523208618, 0.3223145306110382, 0.31012892723083496, 0.3100302517414093, 0.3100765347480774, 0.2881031632423401, 0.29820582270622253, 0.29453349113464355, 0.2921677827835083, 0.2859663665294647, 0.30017662048339844, 0.2672485113143921], "accuracy": [0.12772421538829803, 0.342491090297699, 0.43045833706855774, 0.5352001190185547, 0.6346585750579834, 0.6654338836669922, 0.6905296444892883, 0.7043983340263367, 0.7128516435623169, 0.7172104120254517, 0.7366266250610352, 0.7424382567405701, 0.7514199018478394, 0.7685906887054443, 0.7740060687065125, 0.7779685854911804, 0.783119797706604, 0.7825914621353149, 0.7828556299209595, 0.7903843522071838, 0.7961959838867188, 0.7981772422790527, 0.8086118102073669, 0.8101968169212341, 0.8164047002792358, 0.8137630224227905, 0.8216879963874817, 0.8240655064582825, 0.8272355198860168, 0.8359529972076416, 0.8360850811004639, 0.8411042094230652, 0.8350284099578857, 0.8449346423149109, 0.850350022315979, 0.8461233377456665, 0.8536521196365356, 0.8543124794960022, 0.8580108284950256, 0.8584070801734924, 0.8643507957458496, 0.8617091774940491, 0.8660678863525391, 0.8642187118530273, 0.8640866279602051, 0.8746532797813416, 0.8733324408531189, 0.8730682730674744, 0.8716153502464294, 0.8720116019248962, 0.8684453964233398, 0.8819178342819214, 0.8790120482444763, 0.8819178342819214, 0.8879936337471008, 0.880729079246521, 0.8837670087814331, 0.8836349248886108, 0.8868049383163452, 0.8919561505317688, 0.8961827754974365], "val_loss": [2.2458713054656982, 2.0200953483581543, 1.1275328397750854, 0.8625265955924988, 0.7496451139450073, 0.7183020114898682, 0.6527407765388489, 0.629342794418335, 0.6149795055389404, 0.6017376780509949, 0.5582644939422607, 0.540346086025238, 0.523393452167511, 0.5175499320030212, 0.5129684209823608, 0.49561750888824463, 0.48618364334106445, 0.47842931747436523, 0.4673164188861847, 0.4681340456008911, 0.4591011106967926, 0.44689273834228516, 0.4510045647621155, 0.44521239399909973, 0.44265642762184143, 0.44196817278862, 0.43660032749176025, 0.42620590329170227, 0.4176473021507263, 0.4357815682888031, 0.421072393655777, 0.41763705015182495, 0.42086052894592285, 0.40560147166252136, 0.4061485528945923, 0.39664188027381897, 0.3980444073677063, 0.40437257289886475, 0.38590776920318604, 0.3909887671470642, 0.4015575349330902, 0.3989422917366028, 0.39117610454559326, 0.3896269202232361, 0.3832450211048126, 0.3921050727367401, 0.3983769118785858, 0.3778873682022095, 0.3776792883872986, 0.3897261619567871, 0.3932080864906311, 0.40283268690109253, 0.3956846594810486, 0.39225614070892334, 0.3896036446094513, 0.3861576318740845, 0.40104350447654724, 0.4177655577659607, 0.45149675011634827, 0.4261228144168854, 0.4044772982597351], "val_accuracy": [0.4156666696071625, 0.45233333110809326, 0.6576666831970215, 0.6963333487510681, 0.7193333506584167, 0.7386666536331177, 0.7540000081062317, 0.7446666955947876, 0.7563333511352539, 0.7706666588783264, 0.7763333320617676, 0.7893333435058594, 0.8016666769981384, 0.7976666688919067, 0.812333345413208, 0.8066666722297668, 0.8096666932106018, 0.8119999766349792, 0.8133333325386047, 0.8116666674613953, 0.8263333439826965, 0.8293333053588867, 0.8253333568572998, 0.82833331823349, 0.8349999785423279, 0.8363333344459534, 0.8360000252723694, 0.840666651725769, 0.8443333506584167, 0.8426666855812073, 0.8473333120346069, 0.8529999852180481, 0.847000002861023, 0.8500000238418579, 0.856333315372467, 0.8579999804496765, 0.862666666507721, 0.8629999756813049, 0.8690000176429749, 0.8636666536331177, 0.8636666536331177, 0.862666666507721, 0.8696666955947876, 0.8656666874885559, 0.8673333525657654, 0.8693333268165588, 0.8713333606719971, 0.8723333477973938, 0.871999979019165, 0.8713333606719971, 0.8786666393280029, 0.8759999871253967, 0.8726666569709778, 0.8773333430290222, 0.8740000128746033, 0.8803333044052124, 0.8796666860580444, 0.8796666860580444, 0.8759999871253967, 0.878000020980835, 0.8776666522026062]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 2, 7, 3, 6], [3, 0, 1, 0, 2, 1, 0, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 1], [1, 1, 2], [0, 3, 3, 5], [0], [0, 0, 1, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 3, 7, 3, 4, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13221503794193268, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 2, 8, 4, 3, 3, 7, 0, 3, 4, 3, 5, 4, 7, 2, 1, 3, 3, 7, 1, 7, 0, 8, 9, 1, 9, 0, 7, 5, 2, 2, 7, 3, 8, 6, 1], [0, 3, 3, 4, 3, 1, 5, 5, 0, 2, 5, 5, 5, 1, 3, 4, 2, 3, 1, 5, 4, 3, 3, 1, 1, 0], [0, 45, 38, 41, 30], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 63, 37, 26, 5, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), grad)), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.negative(grad), grad), tf.math.multiply(tf.math.pow(alpha, tf.math.multiply(tf.math.square(grad), tf.math.pow(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(beta, tf.math.multiply(grad, grad)), grad))))), tf.math.multiply(tf.math.add(tf.math.subtract(alpha, tf.math.add(grad, tf.math.negative(tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.math.divide_no_nan(grad, grad)), tf.math.subtract(grad, grad)), alpha))))))), alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303177833557129, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 1, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 4], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46580502528.0, 6957827620864.0, 120528861921280.0, 855809076494336.0, 3741764502421504.0, 1.23374814625792e+16], "accuracy": [0.09866596013307571, 0.10236428678035736, 0.10289261490106583, 0.0956280529499054, 0.10421344637870789, 0.09932637959718704], "val_loss": [466357387264.0, 25143724212224.0, 269875075350528.0, 1471327483461632.0, 5511505508302848.0, 1.625783634231296e+16], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 7, 5, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [2, 6, 4], [97, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 12}]