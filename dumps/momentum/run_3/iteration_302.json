[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935950756073, 2.192020893096924, 1.7756216526031494, 1.365323543548584, 1.0880897045135498, 0.9461183547973633, 0.8517420887947083, 0.830624520778656, 0.7513676285743713, 0.7502375245094299, 0.7145188450813293, 0.6743448376655579, 0.6442859172821045, 0.6292661428451538, 0.6145952939987183, 0.5914535522460938, 0.5855564475059509, 0.5758889317512512, 0.5689214468002319, 0.5561114549636841, 0.5320581793785095, 0.5426881909370422, 0.5059179663658142, 0.5153941512107849, 0.49994969367980957, 0.49274975061416626, 0.48369693756103516, 0.47246748208999634, 0.46510252356529236, 0.4611296057701111, 0.4675080478191376], "accuracy": [0.12561088800430298, 0.32479196786880493, 0.450931191444397, 0.5341434478759766, 0.6272619366645813, 0.6623960137367249, 0.6905296444892883, 0.7009642124176025, 0.7066437602043152, 0.7042662501335144, 0.7276449799537659, 0.7428345084190369, 0.754589855670929, 0.7586844563484192, 0.7666094303131104, 0.7766477465629578, 0.7791573405265808, 0.7827235460281372, 0.7799497842788696, 0.7828556299209595, 0.7928939461708069, 0.7951393723487854, 0.8080834746360779, 0.8049134612083435, 0.8141592741012573, 0.8215559124946594, 0.8148196935653687, 0.8168009519577026, 0.8267071843147278, 0.8253863453865051, 0.8224804997444153], "val_loss": [2.247410774230957, 2.0246214866638184, 1.1503372192382812, 0.8678697943687439, 0.7843853235244751, 0.7232621312141418, 0.7023277878761292, 0.6498184204101562, 0.6390573978424072, 0.6206173300743103, 0.5842919945716858, 0.5600274801254272, 0.5506620407104492, 0.5432808995246887, 0.5338975191116333, 0.5208061933517456, 0.5273647308349609, 0.514849066734314, 0.5104490518569946, 0.49800044298171997, 0.4963724911212921, 0.4953494966030121, 0.47509709000587463, 0.4713064730167389, 0.49008288979530334, 0.46422478556632996, 0.4578779339790344, 0.4617901146411896, 0.47753646969795227, 0.4577999413013458, 0.4418885409832001], "val_accuracy": [0.4126666784286499, 0.49566665291786194, 0.6396666765213013, 0.6976666450500488, 0.7213333249092102, 0.7306666374206543, 0.7463333606719971, 0.7606666684150696, 0.7553333044052124, 0.7599999904632568, 0.7689999938011169, 0.781000018119812, 0.7923333048820496, 0.7960000038146973, 0.8033333420753479, 0.8069999814033508, 0.8003333210945129, 0.812333345413208, 0.8109999895095825, 0.8236666917800903, 0.82833331823349, 0.8236666917800903, 0.8320000171661377, 0.8370000123977661, 0.8333333134651184, 0.8446666598320007, 0.8379999995231628, 0.8389999866485596, 0.8433333039283752, 0.8389999866485596, 0.8446666598320007]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 9, 1, 3], [3, 0, 1, 0, 2], [33, 99, 27], [0, 0, 0, 1, 1, 1], [0, 1, 2], [0, 3, 3], [94], [0, 0, 0, 1, 1, 1, 1], [0, 3, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 1, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 8, 3, 7, 7, 0, 5, 0, 2, 7, 8, 8, 6], [0, 0, 1, 0, 2, 2, 2, 1, 0, 1, 3], [83, 99, 27, 4], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 1, 0, 1, 0, 0], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 4, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.square(tf.math.negative(grad))), grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 1, 3, 1, 8], [1, 0, 0, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 2, 8, 3, 3], [0, 2, 3, 4, 0], [0, 16], [0, 0, 0, 1, 1, 1, 0], [4, 0, 4, 3], [0, 0, 4], [36, 58], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 4, 2, 8, 4, 9, 0, 2, 2, 9, 4, 5, 0], [1, 6, 0, 7, 6, 3], [0, 92, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 11, 6, 5, 2, 6, 3, 3, 2, 20, 14, 6, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))))), grad)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 4, 3, 9, 3, 7, 0], [0, 0, 1, 0, 1, 3, 2, 1], [83, 99, 27, 96], [0, 0, 1, 0, 1, 1], [0, 7, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 1, 1], [0, 9, 4, 3], [0, 0, 4], [0, 58], [0, 0], [9], [5], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 19, 11, 8, 4, 6, 3, 3, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.math.add(grad, tf.math.negative(grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310025930404663, 2.310030460357666, 2.309608221054077, 2.3086984157562256, 2.3101041316986084, 2.3105411529541016], "accuracy": [0.09628847241401672, 0.09126931428909302, 0.0944393053650856, 0.09496764093637466, 0.09192973375320435, 0.09509972482919693], "val_loss": [2.308359146118164, 2.308359146118164, 2.308359146118164, 2.308359146118164, 2.308359146118164, 2.308359146118164], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]