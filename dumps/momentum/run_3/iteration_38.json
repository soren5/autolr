[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293532609939575, 2.1884031295776367, 1.7644073963165283, 1.3461971282958984, 1.0844613313674927, 0.9249250292778015, 0.8453390002250671, 0.8227518200874329, 0.7535346150398254, 0.7356789112091064, 0.6882506608963013, 0.6791243553161621, 0.6513134241104126, 0.6147082448005676, 0.6054701209068298, 0.5819156765937805, 0.5679884552955627, 0.556107759475708, 0.5511130690574646, 0.5606293678283691, 0.5341442823410034, 0.5237429738044739, 0.5085355639457703, 0.49319812655448914, 0.48455655574798584, 0.47632506489753723, 0.47226682305336, 0.4663133919239044, 0.44630002975463867, 0.44810816645622253, 0.44162166118621826, 0.4197206497192383, 0.41245904564857483, 0.40679460763931274, 0.4080503284931183, 0.3974204957485199, 0.39243513345718384, 0.3930402398109436, 0.37407729029655457, 0.3799402713775635, 0.3750362992286682, 0.3511413037776947], "accuracy": [0.1266675442457199, 0.32465988397598267, 0.4336283206939697, 0.5509179830551147, 0.6275261044502258, 0.661471426486969, 0.684982180595398, 0.6942279934883118, 0.7013604640960693, 0.7213049530982971, 0.7334566116333008, 0.7386078238487244, 0.7586844563484192, 0.7567031979560852, 0.7631752490997314, 0.7766477465629578, 0.7728173136711121, 0.7852331399917603, 0.7903843522071838, 0.7796856164932251, 0.7897239327430725, 0.7893276810646057, 0.8033285140991211, 0.8108572363853455, 0.81112140417099, 0.8127063512802124, 0.8186501264572144, 0.819970965385437, 0.8235371708869934, 0.830669641494751, 0.8280280232429504, 0.8411042094230652, 0.8416325449943542, 0.8389908671379089, 0.8393871188163757, 0.8467837572097778, 0.8498216867446899, 0.846387505531311, 0.8531237840652466, 0.8540483713150024, 0.8514066934585571, 0.860652506351471], "val_loss": [2.2453205585479736, 2.0166475772857666, 1.139129400253296, 0.8638331890106201, 0.7642269134521484, 0.735521137714386, 0.6727818846702576, 0.6556298136711121, 0.640454888343811, 0.622804582118988, 0.5805173516273499, 0.5757723450660706, 0.5582587122917175, 0.5367503762245178, 0.5428571105003357, 0.5229455828666687, 0.5204020738601685, 0.5121291279792786, 0.5155211687088013, 0.5114638805389404, 0.49939510226249695, 0.49393245577812195, 0.4879133403301239, 0.48071131110191345, 0.46327030658721924, 0.46234309673309326, 0.4623675048351288, 0.45206502079963684, 0.4523508846759796, 0.43652141094207764, 0.4456135630607605, 0.4391902685165405, 0.42711499333381653, 0.42647120356559753, 0.4343964457511902, 0.44028541445732117, 0.4156109094619751, 0.41380640864372253, 0.42304569482803345, 0.4183957576751709, 0.4186479449272156, 0.42295923829078674], "val_accuracy": [0.4320000112056732, 0.4533333480358124, 0.637666642665863, 0.6923333406448364, 0.7286666631698608, 0.737333357334137, 0.7436666488647461, 0.75, 0.7553333044052124, 0.7643333077430725, 0.7703333497047424, 0.7789999842643738, 0.7836666703224182, 0.7896666526794434, 0.7910000085830688, 0.7973333597183228, 0.7990000247955322, 0.8059999942779541, 0.8109999895095825, 0.8086666464805603, 0.8026666641235352, 0.8069999814033508, 0.8163333535194397, 0.8243333101272583, 0.8259999752044678, 0.8293333053588867, 0.8349999785423279, 0.8396666646003723, 0.8370000123977661, 0.8433333039283752, 0.8503333330154419, 0.8483333587646484, 0.8453333377838135, 0.859333336353302, 0.859666645526886, 0.8510000109672546, 0.8600000143051147, 0.8573333621025085, 0.8586666584014893, 0.8566666841506958, 0.859666645526886, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [0, 0, 1], [59, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303316116333008, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [4, 1, 3, 9, 6], [0, 0, 3, 0, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 7, 7], [0, 0, 0], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 6, 3, 3, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.30338978767395, 2.302586078643799, 2.3025870323181152, 2.302586555480957, 2.302586793899536, 2.302586555480957, 2.3025858402252197], "accuracy": [0.09840179979801178, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025858402252197, 2.3025848865509033, 2.302583932876587, 2.3025834560394287, 2.3025827407836914, 2.3025827407836914, 2.3025808334350586], "val_accuracy": [0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 1], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 7, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 5, 4, 3], [0, 1, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309122323989868, 2.310823678970337, 2.3112261295318604, 2.3102004528045654, 2.3100695610046387, 2.309762716293335], "accuracy": [0.08994849026203156, 0.09232597798109055, 0.09047681838274002, 0.08902391046285629, 0.0936468094587326, 0.09377889335155487], "val_loss": [2.308631181716919, 2.308631181716919, 2.308631181716919, 2.308631181716919, 2.308631181716919, 2.308631181716919], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 5], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3], [2, 0, 4], [0, 58], [0, 1, 1], [2], [1, 1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 1, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.309797525405884, 2.310053825378418, 2.310157299041748, 2.3102540969848633, 2.3103339672088623, 2.3104703426361084], "accuracy": [0.09087307006120682, 0.09166556596755981, 0.08809932321310043, 0.09338264167308807, 0.09787346422672272, 0.09325055778026581], "val_loss": [2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]