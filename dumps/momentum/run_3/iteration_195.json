[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292226552963257, 2.1870901584625244, 1.7573691606521606, 1.3510609865188599, 1.0895826816558838, 0.9319721460342407, 0.8454441428184509, 0.8528040051460266, 0.7644838690757751, 0.76781165599823, 0.7141374945640564, 0.6971506476402283, 0.6629430651664734, 0.6403941512107849, 0.6088326573371887, 0.5926608443260193, 0.5856311917304993, 0.5837231278419495, 0.5713328123092651, 0.5667263269424438, 0.5477110743522644, 0.553154706954956, 0.52412348985672, 0.5247935652732849, 0.5099613666534424, 0.492756724357605, 0.48487862944602966, 0.48198366165161133, 0.46803784370422363, 0.4685136079788208, 0.4577561616897583, 0.43855491280555725, 0.4365023076534271, 0.430433064699173, 0.42867323756217957, 0.4198751747608185, 0.4076206088066101, 0.4099246561527252, 0.3995991349220276, 0.3937488794326782, 0.386562317609787], "accuracy": [0.13776251673698425, 0.3350944519042969, 0.4325716495513916, 0.5468233823776245, 0.6333377361297607, 0.6656980514526367, 0.698190450668335, 0.7025492191314697, 0.7051908373832703, 0.7065116763114929, 0.7316074371337891, 0.7343811988830566, 0.7519482374191284, 0.7689869403839111, 0.7697794437408447, 0.7666094303131104, 0.7821952104568481, 0.7736098170280457, 0.7860256433486938, 0.7880068421363831, 0.7940827012062073, 0.7959318161010742, 0.8021397590637207, 0.8004226684570312, 0.7975168228149414, 0.8193105459213257, 0.8251221776008606, 0.8189142942428589, 0.8293488025665283, 0.8216879963874817, 0.8285563588142395, 0.8385946154594421, 0.8370096683502197, 0.8378021121025085, 0.8424250483512878, 0.8467837572097778, 0.8479725122451782, 0.8462554216384888, 0.8430854678153992, 0.8539162874221802, 0.852859616279602], "val_loss": [2.2470648288726807, 2.017615795135498, 1.1508440971374512, 0.9078338146209717, 0.7866978645324707, 0.7371185421943665, 0.7245973944664001, 0.667401134967804, 0.6805766820907593, 0.6349737048149109, 0.6163926124572754, 0.5905981659889221, 0.5755178332328796, 0.5573595762252808, 0.5525829195976257, 0.5338334441184998, 0.5285311937332153, 0.5173525214195251, 0.522200882434845, 0.5096030235290527, 0.5150496959686279, 0.5064884424209595, 0.5051772594451904, 0.4957992434501648, 0.48041996359825134, 0.478062242269516, 0.4871072471141815, 0.48187413811683655, 0.4645146429538727, 0.45156779885292053, 0.4483528733253479, 0.44150039553642273, 0.4336068630218506, 0.4351705312728882, 0.4384012520313263, 0.44493603706359863, 0.43906518816947937, 0.4447344243526459, 0.43605154752731323, 0.4283300042152405, 0.42646655440330505], "val_accuracy": [0.42800000309944153, 0.46266666054725647, 0.6386666893959045, 0.6796666383743286, 0.7113333344459534, 0.7226666808128357, 0.7360000014305115, 0.7523333430290222, 0.7406666874885559, 0.7446666955947876, 0.7633333206176758, 0.7639999985694885, 0.7760000228881836, 0.7836666703224182, 0.7963333129882812, 0.7929999828338623, 0.7896666526794434, 0.7950000166893005, 0.8029999732971191, 0.8053333163261414, 0.8006666898727417, 0.8103333115577698, 0.8153333067893982, 0.8196666836738586, 0.8203333616256714, 0.8276666402816772, 0.8273333311080933, 0.8253333568572998, 0.8296666741371155, 0.8333333134651184, 0.8393333554267883, 0.8443333506584167, 0.8450000286102295, 0.8456666469573975, 0.846666693687439, 0.8519999980926514, 0.847000002861023, 0.8446666598320007, 0.847000002861023, 0.8483333587646484, 0.8500000238418579]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 4, 1, 1, 6, 6, 2, 0, 6, 2, 3, 2, 6, 0, 7, 6, 7, 5, 7, 0, 0, 6, 8, 7, 4, 3, 4, 8, 2, 4, 5, 1, 7, 5, 9, 7, 9, 4, 9, 2, 2, 1], [0, 0, 1, 0, 2, 3, 3, 3, 3, 1, 0, 0, 0, 2, 0, 2, 3, 1, 2, 0, 3, 1, 2, 1, 2, 2, 3, 2, 0, 0, 1], [83, 95, 27, 22, 49, 41, 35, 85, 95, 48, 30, 66, 7], [1, 0, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 8, 3], [5, 0, 4], [0, 32], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 77, 46, 31, 13, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, grad)), tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad)), grad), tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.multiply(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.math.pow(tf.math.square(alpha), tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.square(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, grad))))))))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 8, 3, 3, 2, 2, 8, 6], [0, 0, 1, 2, 2, 0, 2, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 1], [0], [0, 1, 1, 0, 0, 1, 0], [0, 0, 4, 3], [0, 1, 4], [0, 19], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.add(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.305467367172241, 2.323347330093384, 2.443099021911621, 5.96735954284668, 47.01750946044922, 63.14748764038086, 100.92855834960938], "accuracy": [0.09549596905708313, 0.09470347315073013, 0.09628847241401672, 0.09998679161071777, 0.09496764093637466, 0.09972262382507324, 0.09126931428909302], "val_loss": [2.3100459575653076, 2.3776590824127197, 2.8476574420928955, 20.820981979370117, 31.87360954284668, 94.3418197631836, 129.92425537109375], "val_accuracy": [0.09666666388511658, 0.10300000011920929, 0.10300000011920929, 0.09666666388511658, 0.09666666388511658, 0.10300000011920929, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 7, 3], [1, 0, 1, 0, 2], [83, 50, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 2, 3, 0, 1], [0, 2, 3, 3, 5], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303455114364624, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 8, 4, 4, 2, 11, 6, 5, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 6, 2, 9, 3, 4, 3, 0, 0], [0, 2, 1, 2, 2, 3, 0, 0, 1], [18, 71, 27, 47], [0, 0, 1, 0, 1, 1], [0, 8, 2], [0, 1, 3], [0], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 32], [0, 1, 0], [4, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 4, 3, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.pow(grad, tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034682273864746, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]