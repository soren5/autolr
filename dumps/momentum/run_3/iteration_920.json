[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939772605895996, 2.1889779567718506, 1.7714917659759521, 1.3530113697052002, 1.0728347301483154, 0.9240290522575378, 0.8391023874282837, 0.8214446902275085, 0.7704898715019226, 0.7428052425384521, 0.7033383846282959, 0.6821398735046387, 0.6465490460395813, 0.6245819330215454, 0.6048339009284973, 0.6043788194656372, 0.5742575526237488, 0.5631594061851501, 0.5572815537452698, 0.5402055382728577, 0.5252083539962769, 0.5205312967300415, 0.49893051385879517, 0.4893544018268585, 0.47883909940719604, 0.4782230257987976, 0.4676850438117981, 0.47196677327156067, 0.4543284475803375, 0.4394497573375702, 0.44525954127311707, 0.42433345317840576, 0.4288320541381836, 0.4273415803909302, 0.41343727707862854, 0.40372660756111145, 0.3890796899795532, 0.38571903109550476, 0.3871060609817505, 0.3753601312637329], "accuracy": [0.1266675442457199, 0.33126401901245117, 0.4367983043193817, 0.5423325896263123, 0.6324131488800049, 0.6618676781654358, 0.6893408894538879, 0.7017567157745361, 0.7003037929534912, 0.7102100253105164, 0.7323999404907227, 0.7407211661338806, 0.7503632307052612, 0.7660810947418213, 0.767401933670044, 0.774270236492157, 0.7792893648147583, 0.7881389260292053, 0.7893276810646057, 0.7940827012062073, 0.8033285140991211, 0.8010830879211426, 0.805177628993988, 0.8099326491355896, 0.8222163319587708, 0.8170651197433472, 0.8153480291366577, 0.8198388814926147, 0.8277638554573059, 0.8245938420295715, 0.828820526599884, 0.8342359066009521, 0.8362171649932861, 0.8367455005645752, 0.8454629778862, 0.8492933511734009, 0.8549728989601135, 0.8524633646011353, 0.8525954484939575, 0.8576145768165588], "val_loss": [2.2453489303588867, 2.0158848762512207, 1.1328574419021606, 0.8590134978294373, 0.7566655278205872, 0.7026906609535217, 0.6615968346595764, 0.6475578546524048, 0.6423283815383911, 0.5991207957267761, 0.5795094966888428, 0.5427161455154419, 0.5355378985404968, 0.5257201194763184, 0.5078171491622925, 0.4995375871658325, 0.4988746643066406, 0.5008068084716797, 0.4882197976112366, 0.4752998948097229, 0.47289708256721497, 0.47643762826919556, 0.4621858298778534, 0.44703954458236694, 0.4501158595085144, 0.45516934990882874, 0.44141027331352234, 0.4362611472606659, 0.44363972544670105, 0.4289715886116028, 0.4306129217147827, 0.4184630513191223, 0.41144827008247375, 0.40113526582717896, 0.41178205609321594, 0.41094279289245605, 0.4109472930431366, 0.4251115024089813, 0.42828458547592163, 0.41272974014282227], "val_accuracy": [0.42366665601730347, 0.48399999737739563, 0.6499999761581421, 0.6940000057220459, 0.7283333539962769, 0.7409999966621399, 0.7563333511352539, 0.7583333253860474, 0.7603333592414856, 0.7743333578109741, 0.7733333110809326, 0.7860000133514404, 0.7996666431427002, 0.8069999814033508, 0.8143333196640015, 0.8140000104904175, 0.8153333067893982, 0.8193333148956299, 0.8196666836738586, 0.8306666612625122, 0.8339999914169312, 0.8243333101272583, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8360000252723694, 0.8379999995231628, 0.8463333249092102, 0.8363333344459534, 0.8460000157356262, 0.8510000109672546, 0.8533333539962769, 0.8533333539962769, 0.8653333187103271, 0.8669999837875366, 0.8569999933242798, 0.8576666712760925, 0.8613333106040955, 0.8613333106040955, 0.8653333187103271]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 5], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [2, 0, 4], [0, 58], [0, 1, 1], [7], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 6, 2, 3, 0, 8, 4, 7], [0, 0, 1, 0, 2, 0, 0], [83, 99, 27, 81, 62], [0, 1, 0, 0, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [96, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 16, 9, 7, 5, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 8], [0, 0, 1, 0, 2], [83, 21, 27], [0, 0, 1, 0, 1, 1], [0, 1, 9], [0, 3, 3], [0, 24], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [3, 0, 4, 3, 0, 8, 4, 9], [5, 0, 4, 0], [0, 58, 46], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 4, 3, 1, 2, 12, 8, 4, 3, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3036372661590576, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 4, 1, 7, 4, 0, 3, 6, 5, 3, 2, 4, 0, 1, 5, 1, 2, 2, 1, 7, 2, 0, 6, 5, 1, 0, 0, 6, 8], [0, 0, 3, 2, 2, 1, 2, 2, 3, 3, 2, 2, 3, 0, 0, 0, 3, 3, 1, 2, 3, 0, 2], [83, 99, 27, 45, 32, 74], [1, 1, 1, 0, 1, 1], [0, 1, 2], [2, 5, 3], [0], [0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3], [0, 5, 4], [0, 58], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 3, 8, 6, 0, 3, 2, 4, 2, 6, 0, 9, 0], [1, 2, 6, 3, 2, 4, 0], [0, 28]], "fitness": -0.0908571407198906, "mapping_values": [1, 55, 32, 23, 6, 1, 0, 1, 0, 7, 4, 3, 1, 20, 13, 7, 2], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(tf.math.pow(grad, tf.math.negative(tf.math.subtract(alpha, grad))), grad), grad)), tf.math.square(grad)), grad)), tf.math.subtract(tf.math.add(grad, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.add(tf.math.negative(grad), grad), tf.math.divide_no_nan(tf.math.square(alpha), tf.math.subtract(tf.math.negative(tf.math.negative(grad)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(beta))), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(sigma, tf.math.negative(beta))), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3098902702331543, 2.3095779418945312, 2.3112921714782715, 2.3096470832824707, 2.3100221157073975, 2.3106689453125], "accuracy": [0.09377889335155487, 0.09008057415485382, 0.09008057415485382, 0.09457138925790787, 0.09576013684272766, 0.09285431355237961], "val_loss": [2.3084402084350586, 2.3084402084350586, 2.3084402084350586, 2.3084402084350586, 2.3084402084350586, 2.3084402084350586], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]