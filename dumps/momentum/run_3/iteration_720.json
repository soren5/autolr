[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922089099884033, 2.186678647994995, 1.7609182596206665, 1.3543256521224976, 1.0682337284088135, 0.9002143144607544, 0.8409832119941711, 0.8155359625816345, 0.7607147693634033, 0.7394798994064331, 0.6925479173660278, 0.6735919713973999, 0.6449443697929382, 0.6233344078063965, 0.6061908006668091, 0.588442862033844, 0.5676741600036621, 0.5563856959342957, 0.547285795211792, 0.54232257604599, 0.5272732377052307, 0.5239202380180359, 0.5146528482437134, 0.49986568093299866, 0.4911530613899231, 0.48306113481521606, 0.46352723240852356, 0.4599255919456482, 0.4490613341331482, 0.4395766258239746, 0.43738222122192383, 0.41150277853012085, 0.4213866591453552, 0.4302518963813782, 0.3933853209018707, 0.3996470868587494, 0.39628615975379944, 0.393098384141922, 0.3751673400402069, 0.39086100459098816, 0.3748517632484436, 0.37359434366226196, 0.3647676110267639, 0.36423271894454956, 0.34191128611564636, 0.34401383996009827, 0.34639301896095276, 0.35331976413726807, 0.329380601644516, 0.3266657888889313, 0.3266812562942505, 0.3250015377998352, 0.3233877122402191], "accuracy": [0.13234710693359375, 0.322150319814682, 0.442609965801239, 0.5461629629135132, 0.6444327235221863, 0.6728305220603943, 0.6968696117401123, 0.6979262828826904, 0.7112666964530945, 0.7086250185966492, 0.7360982894897461, 0.7481178045272827, 0.7548540234565735, 0.7660810947418213, 0.7712323069572449, 0.778761088848114, 0.7873464822769165, 0.791969358921051, 0.7906485199928284, 0.7989697456359863, 0.7967243194580078, 0.7980451583862305, 0.8054417967796326, 0.8082155585289001, 0.8112534880638123, 0.8156121969223022, 0.8207634687423706, 0.8211596608161926, 0.8276317715644836, 0.8281601071357727, 0.8339717388153076, 0.839519202709198, 0.8384625315666199, 0.8362171649932861, 0.8459912538528442, 0.841500461101532, 0.8494254350662231, 0.8508783578872681, 0.8564258217811584, 0.8477083444595337, 0.8531237840652466, 0.858671247959137, 0.8578787446022034, 0.8605204224586487, 0.8663320541381836, 0.8652753829956055, 0.8710870146751404, 0.8626337051391602, 0.870030403137207, 0.8776912093162537, 0.878879964351654, 0.8697662353515625, 0.8728041052818298], "val_loss": [2.2457363605499268, 2.0204861164093018, 1.1551897525787354, 0.894733726978302, 0.7787208557128906, 0.6976209878921509, 0.6610420346260071, 0.6435758471488953, 0.6239758133888245, 0.6072011590003967, 0.5760019421577454, 0.5446789264678955, 0.5314072370529175, 0.5250597596168518, 0.5092545747756958, 0.5018131732940674, 0.4985435903072357, 0.48519495129585266, 0.48680904507637024, 0.48437556624412537, 0.4820879399776459, 0.470203161239624, 0.46007397770881653, 0.4548419713973999, 0.440144807100296, 0.4387855529785156, 0.44413378834724426, 0.4384893774986267, 0.43127304315567017, 0.420538991689682, 0.4271685779094696, 0.4294517934322357, 0.41550886631011963, 0.4119167625904083, 0.41401207447052, 0.42264726758003235, 0.4070427119731903, 0.3984491229057312, 0.4122045934200287, 0.42336100339889526, 0.4216165244579315, 0.38906046748161316, 0.3906523883342743, 0.3891047239303589, 0.4069473445415497, 0.39200544357299805, 0.3829803466796875, 0.38819825649261475, 0.40774065256118774, 0.42945215106010437, 0.4250803291797638, 0.4141060709953308, 0.40672868490219116], "val_accuracy": [0.3970000147819519, 0.4090000092983246, 0.6359999775886536, 0.6866666674613953, 0.7099999785423279, 0.7253333330154419, 0.7473333477973938, 0.7519999742507935, 0.7516666650772095, 0.7616666555404663, 0.7776666879653931, 0.7773333191871643, 0.7933333516120911, 0.7933333516120911, 0.7986666560173035, 0.7973333597183228, 0.7996666431427002, 0.8109999895095825, 0.8119999766349792, 0.8090000152587891, 0.8119999766349792, 0.8186666369438171, 0.824999988079071, 0.8190000057220459, 0.8286666870117188, 0.8246666789054871, 0.8253333568572998, 0.8323333263397217, 0.8306666612625122, 0.8426666855812073, 0.846666693687439, 0.8450000286102295, 0.847000002861023, 0.8526666760444641, 0.8479999899864197, 0.8496666550636292, 0.8583333492279053, 0.8550000190734863, 0.8519999980926514, 0.8543333411216736, 0.8576666712760925, 0.8619999885559082, 0.862333357334137, 0.8569999933242798, 0.8553333282470703, 0.862333357334137, 0.8696666955947876, 0.8703333139419556, 0.8696666955947876, 0.8666666746139526, 0.8629999756813049, 0.8560000061988831, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 2, 5, 1, 4, 0, 3, 0, 9, 0, 5, 2, 0, 2], [0, 0, 1, 0, 2, 2, 0, 0, 3], [83, 99, 27, 48, 14, 99], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 1], [0, 2], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 17, 9, 6, 6, 3, 3, 1, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha))), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), grad)), grad), tf.math.square(tf.math.add(tf.math.negative(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, grad))", "other_info": {"loss": [2.307565927505493, 3.273238182067871, 9.980162620544434, 12.560901641845703, 14.763421058654785, 20.032329559326172, 19.624446868896484, 30.17574691772461, 37.948543548583984, 38.66799545288086], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.10117553919553757, 0.10170386731624603, 0.10513802617788315, 0.10328886657953262, 0.10421344637870789, 0.10117553919553757, 0.09509972482919693, 0.09985470771789551], "val_loss": [2.360503911972046, 6.7269439697265625, 14.845054626464844, 12.309252738952637, 18.02552604675293, 22.415464401245117, 23.334518432617188, 36.61064529418945, 41.404869079589844, 42.38850402832031], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.0989999994635582, 0.10133333504199982, 0.10400000214576721, 0.10233332961797714, 0.10100000351667404, 0.09333333373069763, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 3, 1, 3, 2, 9], [0, 0, 3, 0, 2], [83, 66, 27, 73], [0, 0, 1, 1, 1, 1], [0, 1, 2], [3, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3, 2], [0, 2, 4, 1], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 4, 2, 2, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 3], [0, 0, 2, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 2, 6, 8, 6, 7, 7, 5, 1, 6, 1, 7, 4, 1, 5, 4, 4, 8, 4, 9, 0, 5, 2, 3, 9, 2, 1, 5, 5, 6, 7, 7, 2, 2, 5, 8, 7, 5], [0, 3, 3, 4, 4, 0, 2, 0, 5, 1, 4, 1, 0, 3, 2, 2, 2, 3, 1, 2, 4, 2, 1, 4], [0, 52, 49, 49, 80, 2], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [4, 0, 1], [48, 58], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(tf.math.subtract(grad, grad)), grad), grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(grad))))), tf.math.add(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.subtract(grad, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, beta)))), beta)))), grad))), alpha), tf.math.square(tf.math.sqrt(beta))), grad))), beta), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [154.7139434814453, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2098798006772995, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5118.53857421875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 10, 5, 5, 3, 63, 39, 24, 6, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 5], [2, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 5], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 0, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]