[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294006824493408, 2.191896915435791, 1.777875304222107, 1.3549778461456299, 1.083184003829956, 0.9250786304473877, 0.835294246673584, 0.8126457333564758, 0.7643774151802063, 0.7451713681221008, 0.710703432559967, 0.6737437844276428, 0.6558347940444946, 0.6169290542602539, 0.5997650623321533, 0.5995158553123474, 0.5789928436279297, 0.563055157661438, 0.562187910079956, 0.5524764657020569, 0.5171689987182617, 0.5113838911056519, 0.5012530088424683, 0.48519614338874817, 0.47796630859375, 0.47148966789245605, 0.4644724726676941, 0.45773857831954956, 0.4597505033016205, 0.4456384778022766, 0.43650636076927185, 0.4195745587348938, 0.41287678480148315, 0.39964529871940613, 0.3988855183124542, 0.3905918598175049, 0.38542208075523376, 0.38632524013519287, 0.36458373069763184, 0.36599093675613403, 0.36135947704315186, 0.3618429899215698, 0.3469034731388092, 0.34270304441452026, 0.3394024968147278, 0.33552297949790955, 0.32531940937042236, 0.31023213267326355, 0.322353720664978, 0.3006916642189026, 0.30379316210746765, 0.29308244585990906], "accuracy": [0.1270637959241867, 0.3263769745826721, 0.4371945559978485, 0.5408796668052673, 0.627129852771759, 0.6579051613807678, 0.6839255094528198, 0.7094175219535828, 0.7029454708099365, 0.713379979133606, 0.7277770638465881, 0.7403249144554138, 0.746268630027771, 0.7618544697761536, 0.767930269241333, 0.7691190242767334, 0.7717606425285339, 0.7808743715286255, 0.7890635132789612, 0.7861577272415161, 0.8006868362426758, 0.8068947196006775, 0.8092722296714783, 0.8092722296714783, 0.8198388814926147, 0.8215559124946594, 0.8230088353157043, 0.8256505131721497, 0.8317263126373291, 0.8370096683502197, 0.8315942287445068, 0.8379341959953308, 0.8445383906364441, 0.8500858545303345, 0.8492933511734009, 0.8515387773513794, 0.8504821062088013, 0.8562937378883362, 0.858671247959137, 0.8609166741371155, 0.8601241707801819, 0.8668603897094727, 0.8677849769592285, 0.8691058158874512, 0.8667283058166504, 0.8659358024597168, 0.8749174475669861, 0.8829745054244995, 0.8790120482444763, 0.8849557638168335, 0.8794082403182983, 0.882710337638855], "val_loss": [2.246009111404419, 2.0207793712615967, 1.1351103782653809, 0.8866982460021973, 0.7615571022033691, 0.720770001411438, 0.6670127511024475, 0.63748699426651, 0.6361101269721985, 0.6345365643501282, 0.5774785876274109, 0.5463350415229797, 0.5344657301902771, 0.523326575756073, 0.5139254331588745, 0.5053960084915161, 0.4983679950237274, 0.4906492233276367, 0.4728116989135742, 0.4659607410430908, 0.45829302072525024, 0.4579119384288788, 0.45185062289237976, 0.4457113444805145, 0.4402604103088379, 0.43865641951560974, 0.44329822063446045, 0.43239641189575195, 0.42449650168418884, 0.42275139689445496, 0.42066991329193115, 0.4116702377796173, 0.4056301712989807, 0.41276106238365173, 0.4097537696361542, 0.41331836581230164, 0.4258713722229004, 0.409982293844223, 0.4123387932777405, 0.39820271730422974, 0.4133360981941223, 0.40619194507598877, 0.41868793964385986, 0.4075615108013153, 0.414613276720047, 0.4180944561958313, 0.4102902114391327, 0.4111148416996002, 0.3931277394294739, 0.39090174436569214, 0.4034973978996277, 0.395111083984375], "val_accuracy": [0.4176666736602783, 0.46000000834465027, 0.6499999761581421, 0.6973333358764648, 0.7239999771118164, 0.7416666746139526, 0.750333309173584, 0.7593333125114441, 0.7620000243186951, 0.7603333592414856, 0.7723333239555359, 0.7983333468437195, 0.7953333258628845, 0.8026666641235352, 0.8040000200271606, 0.8053333163261414, 0.8109999895095825, 0.8176666498184204, 0.8183333277702332, 0.8246666789054871, 0.8266666531562805, 0.8289999961853027, 0.8356666564941406, 0.8389999866485596, 0.8426666855812073, 0.8450000286102295, 0.8356666564941406, 0.8433333039283752, 0.8463333249092102, 0.8483333587646484, 0.8513333201408386, 0.8546666502952576, 0.8586666584014893, 0.8600000143051147, 0.859000027179718, 0.8610000014305115, 0.8583333492279053, 0.8666666746139526, 0.859333336353302, 0.8666666746139526, 0.8669999837875366, 0.871999979019165, 0.8676666617393494, 0.8693333268165588, 0.8636666536331177, 0.8696666955947876, 0.874666690826416, 0.8730000257492065, 0.874666690826416, 0.8713333606719971, 0.8686666488647461, 0.8726666569709778]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 4], [0, 0, 1, 0, 2, 3], [83, 99, 73], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 2, 2, 1, 3, 8, 9, 0, 7, 4, 3, 8], [0, 0, 4, 5, 2, 7, 5], [0, 58, 7], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 1, 0, 1, 1, 21, 14, 7, 3, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), tf.math.add(grad, tf.math.pow(beta, tf.math.multiply(tf.math.sqrt(grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 1], [0, 1, 2], [1, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [73, 58], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 6, 8, 7, 9, 4, 9, 7, 8, 3, 3, 3, 6, 0, 1, 4, 6, 0, 1, 6, 6, 8, 0, 8, 7, 7, 9, 5], [1, 6, 0, 2, 3, 4, 1, 3, 4, 7, 2, 3, 2, 0, 6], [0, 60, 24, 67, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 0, 3, 2, 1, 1, 43, 28, 15, 5], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(sigma), grad), alpha), tf.math.subtract(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.negative(grad)))), tf.math.sqrt(tf.math.add(tf.math.add(beta, sigma), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), beta), tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 7], [2, 0, 1, 0, 2], [70, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 4, 3], [2, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3043761253356934, 2.3034749031066895, 2.3037991523742676, 2.3036270141601562, 2.3031630516052246, 2.3034212589263916, 2.3035786151885986], "accuracy": [0.09496764093637466, 0.0944393053650856, 0.09470347315073013, 0.09853387624025345, 0.09866596013307571, 0.09721305221319199, 0.09338264167308807], "val_loss": [2.3025524616241455, 2.3026208877563477, 2.3027079105377197, 2.3026392459869385, 2.302736282348633, 2.302793502807617, 2.3026890754699707], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.1003333330154419, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 3, 1, 3, 8, 8], [0, 0, 1, 0, 2], [83, 99, 27], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]