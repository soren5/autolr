[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930188179016113, 2.1905717849731445, 1.7755283117294312, 1.3570235967636108, 1.089180827140808, 0.9242956638336182, 0.8422631621360779, 0.8065903782844543, 0.7590506672859192, 0.7298510670661926, 0.6827425360679626, 0.6767504811286926, 0.655308187007904, 0.6184736490249634, 0.5980156064033508, 0.5779648423194885, 0.5750115513801575, 0.568355143070221, 0.5428335070610046, 0.5460326075553894, 0.5242791771888733, 0.5146350264549255, 0.506226658821106, 0.4859088957309723, 0.48481789231300354, 0.48722997307777405, 0.46062707901000977, 0.4492475390434265, 0.4551857113838196, 0.43299296498298645, 0.4253200888633728, 0.4304153323173523, 0.41596201062202454, 0.41176745295524597, 0.4168451726436615, 0.40392062067985535, 0.40731263160705566, 0.39377161860466003, 0.38045844435691833, 0.38231682777404785, 0.3761990964412689, 0.37610700726509094, 0.35434797406196594, 0.35222628712654114], "accuracy": [0.13036586344242096, 0.32320696115493774, 0.4423457980155945, 0.5420684218406677, 0.627129852771759, 0.6588297486305237, 0.6893408894538879, 0.7094175219535828, 0.707040011882782, 0.7292299270629883, 0.7395324110984802, 0.7388719916343689, 0.7547219395637512, 0.7633073329925537, 0.7749306559562683, 0.7848368883132935, 0.7873464822769165, 0.7849689722061157, 0.7950072884559631, 0.7956677079200745, 0.7994980812072754, 0.8061022162437439, 0.8165367841720581, 0.8148196935653687, 0.8156121969223022, 0.8227446675300598, 0.8226125836372375, 0.8261788487434387, 0.8300092220306396, 0.8372738361358643, 0.8367455005645752, 0.8388587832450867, 0.8416325449943542, 0.8441421389579773, 0.8467837572097778, 0.8449346423149109, 0.8500858545303345, 0.8525954484939575, 0.8515387773513794, 0.854708731174469, 0.8574824929237366, 0.8518029451370239, 0.8640866279602051, 0.8607845902442932], "val_loss": [2.2467594146728516, 2.018287420272827, 1.144587516784668, 0.9243810176849365, 0.7832285165786743, 0.7384824156761169, 0.6844500303268433, 0.6641108393669128, 0.6341142058372498, 0.6145532727241516, 0.589911699295044, 0.56012362241745, 0.5425033569335938, 0.5244029760360718, 0.5104634761810303, 0.4953458607196808, 0.4945894479751587, 0.4805873930454254, 0.48150303959846497, 0.47596850991249084, 0.4767334461212158, 0.46897661685943604, 0.452444463968277, 0.44945698976516724, 0.4402731657028198, 0.42885470390319824, 0.4270697832107544, 0.42407217621803284, 0.42918360233306885, 0.4157145619392395, 0.4091933071613312, 0.41089171171188354, 0.4145423173904419, 0.4156491756439209, 0.40947607159614563, 0.4125611484050751, 0.42599430680274963, 0.4109145402908325, 0.40542447566986084, 0.4142203629016876, 0.4171346127986908, 0.40924975275993347, 0.39556750655174255, 0.3941831588745117], "val_accuracy": [0.4073333442211151, 0.5056666731834412, 0.6426666378974915, 0.6850000023841858, 0.7059999704360962, 0.7239999771118164, 0.7483333349227905, 0.7556666731834412, 0.7609999775886536, 0.7699999809265137, 0.7649999856948853, 0.7816666960716248, 0.7889999747276306, 0.8009999990463257, 0.809333324432373, 0.812333345413208, 0.8083333373069763, 0.8243333101272583, 0.8190000057220459, 0.8209999799728394, 0.8216666579246521, 0.8209999799728394, 0.8246666789054871, 0.8266666531562805, 0.8289999961853027, 0.8336666822433472, 0.8316666483879089, 0.8370000123977661, 0.8446666598320007, 0.840666651725769, 0.8410000205039978, 0.8426666855812073, 0.8493333458900452, 0.8546666502952576, 0.8600000143051147, 0.8486666679382324, 0.8443333506584167, 0.8510000109672546, 0.8619999885559082, 0.8500000238418579, 0.846666693687439, 0.8529999852180481, 0.8576666712760925, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 7, 3, 0, 2, 3, 8, 3, 4, 6], [0, 1, 1, 0, 2, 0, 3, 0, 0, 2], [83, 99, 83, 45, 80], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 0], [0, 0, 4, 3], [0, 0, 4], [56, 58], [1, 0], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 5, 4, 2, 2, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 1, 3], [0, 0, 3, 1, 2], [83, 99, 27], [1, 0, 1, 0, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 4, 3, 3, 4, 8, 5, 0, 8, 7, 2, 3, 0, 4], [0, 0, 5, 0, 3, 5, 2, 2, 7, 4, 3], [69, 58, 59], [1, 1], [1], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 26, 15, 11, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.pow(beta, grad)), grad)))))))), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3031063079833984, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 0], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1], [0, 1, 2, 8], [0, 2, 3], [0], [0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 8], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 7, 4, 3, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1124175488.0, 21480286208.0, 98299445248.0, 277595684864.0, 588694618112.0, 1077655568384.0], "accuracy": [0.10077928751707077, 0.09774138033390045, 0.10236428678035736, 0.09906221181154251, 0.09536388516426086, 0.10236428678035736], "val_loss": [5136287232.0, 41085149184.0, 138656595968.0, 328660746240.0, 641906769920.0, 1109203615744.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 9, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [23], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3, 0], [4, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 4, 2, 3, 6, 3, 3, 1, 8, 5, 3, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30951189994812, 2.3090100288391113, 2.3092544078826904, 2.309370279312134, 2.3096516132354736, 2.3091464042663574], "accuracy": [0.09113723784685135, 0.09681680053472519, 0.09259014576673508, 0.09391097724437714, 0.08413683623075485, 0.09179764986038208], "val_loss": [2.308560371398926, 2.308560371398926, 2.308560371398926, 2.308560371398926, 2.308560371398926, 2.308560371398926], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]