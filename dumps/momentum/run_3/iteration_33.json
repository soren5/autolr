[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923054695129395, 2.189579486846924, 1.76615309715271, 1.3728079795837402, 1.088489055633545, 0.9419674873352051, 0.853193998336792, 0.8098227381706238, 0.7639078497886658, 0.7409681677818298, 0.7092435359954834, 0.6861432194709778, 0.646795392036438, 0.6283355951309204, 0.603215217590332, 0.5783750414848328, 0.5889904499053955, 0.5604762434959412, 0.5533658266067505, 0.5548684000968933, 0.5325570106506348, 0.5197109580039978, 0.5123831033706665, 0.512501060962677, 0.4964468777179718, 0.4754887521266937, 0.4698735773563385, 0.46425431966781616, 0.4434521198272705, 0.44401198625564575, 0.45129328966140747, 0.41686713695526123, 0.4256865084171295, 0.40891367197036743, 0.4061886668205261, 0.39718568325042725, 0.39524322748184204, 0.386784166097641, 0.3783095180988312, 0.37681832909584045, 0.3663824200630188, 0.3542017638683319, 0.3586064577102661, 0.34590429067611694, 0.34382325410842896, 0.338329941034317, 0.3373141586780548, 0.32921668887138367, 0.32660821080207825, 0.32330578565597534, 0.3159938156604767, 0.30820950865745544, 0.30875852704048157, 0.3052704632282257, 0.2994564473628998, 0.2864236533641815, 0.27646106481552124, 0.2824470102787018, 0.2703104317188263, 0.2774239182472229, 0.2794246971607208, 0.28552690148353577], "accuracy": [0.12732796370983124, 0.3287544548511505, 0.4344208240509033, 0.5386342406272888, 0.6281865239143372, 0.6613393425941467, 0.6894729733467102, 0.7047945857048035, 0.6960771083831787, 0.7165499925613403, 0.7248712182044983, 0.7391361594200134, 0.750759482383728, 0.7677981853485107, 0.7733456492424011, 0.7749306559562683, 0.7734777331352234, 0.7827235460281372, 0.7854973077774048, 0.7876105904579163, 0.8000264167785645, 0.8043851256370544, 0.8009510040283203, 0.809140145778656, 0.8145555257797241, 0.8182538747787476, 0.8231409192085266, 0.824329674243927, 0.8310658931732178, 0.8339717388153076, 0.8274996876716614, 0.8358209133148193, 0.8388587832450867, 0.848368763923645, 0.8515387773513794, 0.8481045961380005, 0.8488970994949341, 0.8532558679580688, 0.8548408150672913, 0.8594637513160706, 0.8646149635314941, 0.863558292388916, 0.8667283058166504, 0.8717474341392517, 0.8710870146751404, 0.870030403137207, 0.8722757697105408, 0.8697662353515625, 0.8706908226013184, 0.8726720213890076, 0.8802007436752319, 0.8771628737449646, 0.8849557638168335, 0.8795403242111206, 0.8805969953536987, 0.8869370222091675, 0.8883898854255676, 0.8882578015327454, 0.8905032277107239, 0.8945978283882141, 0.8901069760322571, 0.8879936337471008], "val_loss": [2.246098041534424, 2.0192642211914062, 1.1377829313278198, 0.8938160538673401, 0.7761314511299133, 0.6973502039909363, 0.6435896158218384, 0.6186378002166748, 0.6246665716171265, 0.6038700342178345, 0.5719664096832275, 0.5474671125411987, 0.5466460585594177, 0.5295010805130005, 0.5112246870994568, 0.4994581639766693, 0.498259574174881, 0.4904300272464752, 0.4890749156475067, 0.49021580815315247, 0.4771748483181, 0.46311140060424805, 0.4592134654521942, 0.4593612551689148, 0.4595729112625122, 0.46191173791885376, 0.45628809928894043, 0.44539394974708557, 0.4493333697319031, 0.4417704939842224, 0.43857795000076294, 0.44209542870521545, 0.4358769655227661, 0.42773929238319397, 0.4253920912742615, 0.42864689230918884, 0.426545649766922, 0.4192831218242645, 0.4217461347579956, 0.4333188533782959, 0.41738632321357727, 0.41283032298088074, 0.4188709259033203, 0.4084535837173462, 0.4098704755306244, 0.4086964428424835, 0.40638062357902527, 0.3988504111766815, 0.40252718329429626, 0.4101829528808594, 0.41087818145751953, 0.40751534700393677, 0.40280482172966003, 0.40757983922958374, 0.40942731499671936, 0.4204128086566925, 0.4220602214336395, 0.43844860792160034, 0.44906550645828247, 0.43794986605644226, 0.44139933586120605, 0.4512505829334259], "val_accuracy": [0.4339999854564667, 0.4726666808128357, 0.6423333287239075, 0.6783333420753479, 0.7196666598320007, 0.7289999723434448, 0.7409999966621399, 0.753000020980835, 0.7613333463668823, 0.7673333287239075, 0.7680000066757202, 0.7833333611488342, 0.781333327293396, 0.7833333611488342, 0.7979999780654907, 0.796999990940094, 0.7996666431427002, 0.812666654586792, 0.8116666674613953, 0.8226666450500488, 0.8203333616256714, 0.8320000171661377, 0.8393333554267883, 0.8333333134651184, 0.8296666741371155, 0.8349999785423279, 0.8353333473205566, 0.8426666855812073, 0.8433333039283752, 0.8426666855812073, 0.8366666436195374, 0.8379999995231628, 0.8399999737739563, 0.8519999980926514, 0.8546666502952576, 0.8516666889190674, 0.8503333330154419, 0.8519999980926514, 0.8523333072662354, 0.8550000190734863, 0.8523333072662354, 0.8600000143051147, 0.8566666841506958, 0.8619999885559082, 0.8653333187103271, 0.8629999756813049, 0.8606666922569275, 0.8676666617393494, 0.8629999756813049, 0.8666666746139526, 0.8676666617393494, 0.8706666827201843, 0.8686666488647461, 0.8633333444595337, 0.8666666746139526, 0.871999979019165, 0.874666690826416, 0.8713333606719971, 0.8736666440963745, 0.8713333606719971, 0.874666690826416, 0.8723333477973938]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 3, 1, 8], [0, 0, 1, 0, 2], [51, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3, 4], [0, 0, 4, 2], [0, 58], [1, 1], [0], [5], [0]], "fitness": -0.15457142889499664, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.467752456665039, 2.6016793251037598, 2.30735182762146, 2.303516149520874, 2.3027775287628174, 2.3014209270477295], "accuracy": [0.20182274281978607, 0.11900673806667328, 0.09998679161071777, 0.10091137140989304, 0.10051512718200684, 0.10777968913316727], "val_loss": [2.3240013122558594, 2.3108737468719482, 2.3039779663085938, 2.302609443664551, 2.3016867637634277, 2.299520254135132], "val_accuracy": [0.14900000393390656, 0.0963333323597908, 0.0963333323597908, 0.10066666454076767, 0.10066666454076767, 0.12533333897590637]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 4, 9, 8, 1, 4, 9, 1], [0, 0, 3, 1, 2, 1, 0], [83, 65, 27, 90, 48], [0, 1, 1, 0, 1, 1], [3, 1, 7], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 2], [3, 4, 4], [0, 58], [0, 1, 1], [7], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 5, 3, 1, 2, 1, 5, 3, 2, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha), grad))), tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3026812076568604, 2.3039631843566895, 2.3440492153167725, 3.276665687561035, 8.240857124328613, 13.92548942565918], "accuracy": [0.10315678268671036, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.303020477294922, 2.310957431793213, 2.482442617416382, 5.820125102996826, 11.606191635131836, 17.33177947998047], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 7, 3, 1, 1], [2, 0, 1, 0, 2], [83, 99, 82], [1, 0, 1, 0, 1, 1], [0, 1, 1], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 4, 3, 1, 4, 4, 9, 2, 9], [0, 0, 1, 5, 1], [0, 58, 70, 28], [0, 1, 1], [1], [1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 15, 10, 5, 4, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(alpha, tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, beta)", "other_info": {"loss": [47452282880.0, 7093016854528.0, 119268440014848.0, 844725913387008.0, 3722557677109248.0, 1.2187861981855744e+16], "accuracy": [0.09813763201236725, 0.10091137140989304, 0.09787346422672272, 0.1014397069811821, 0.10091137140989304, 0.10487385839223862], "val_loss": [476804284416.0, 25706419453952.0, 275931197341696.0, 1504338065227776.0, 5635838369071104.0, 1.661997187858432e+16], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 4], [0, 0, 1, 0, 2], [83, 10, 27], [0, 0, 1, 1, 0, 1], [0, 1, 2], [0, 1, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 2, 4, 3], [3, 0, 4], [58, 58], [0, 0, 0], [0, 8, 9], [1], [0]], "fitness": -0.09314285963773727, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3101906776428223, 2.3102974891662598, 2.3107073307037354, 2.310044765472412, 2.3097753524780273, 2.3106119632720947], "accuracy": [0.08968432247638702, 0.08770307898521423, 0.08889182657003403, 0.09338264167308807, 0.0952318087220192, 0.0944393053650856], "val_loss": [2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 6, 3, 3, 1, 3, 3, 0, 1], "tree_depth": 10}]