[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29317569732666, 2.1897120475769043, 1.7609236240386963, 1.348552942276001, 1.0845801830291748, 0.9238079786300659, 0.8556621074676514, 0.8412009477615356, 0.7504035234451294, 0.7360031604766846, 0.6924134492874146, 0.6779158711433411, 0.6375955939292908, 0.6116462349891663, 0.595353901386261, 0.5874731540679932, 0.5735810995101929, 0.575837254524231, 0.5471593737602234, 0.536880373954773, 0.5271841883659363, 0.5272337198257446, 0.49570825695991516, 0.5042480230331421, 0.48529794812202454, 0.4718468189239502, 0.48574304580688477, 0.46385249495506287, 0.45765504240989685, 0.45047107338905334, 0.4406212270259857, 0.430818647146225, 0.421774685382843, 0.4184262454509735, 0.41108909249305725, 0.4027194678783417, 0.3900386095046997, 0.378325879573822, 0.3914872705936432, 0.3780946433544159], "accuracy": [0.13313961029052734, 0.3229427933692932, 0.44485536217689514, 0.5461629629135132, 0.6310923099517822, 0.6609430909156799, 0.6913221478462219, 0.6877558827400208, 0.7094175219535828, 0.722229540348053, 0.7358341217041016, 0.7433628439903259, 0.7601373791694641, 0.7656848430633545, 0.7703077793121338, 0.7766477465629578, 0.78113853931427, 0.7755910754203796, 0.7895918488502502, 0.7961959838867188, 0.7967243194580078, 0.8047813773155212, 0.8080834746360779, 0.813498854637146, 0.816008448600769, 0.8215559124946594, 0.8169330358505249, 0.8227446675300598, 0.8240655064582825, 0.8206313848495483, 0.8297450542449951, 0.8318583965301514, 0.8381983637809753, 0.8407079577445984, 0.8397833704948425, 0.8459912538528442, 0.845859169960022, 0.8582749962806702, 0.8537842035293579, 0.8573504090309143], "val_loss": [2.246553659439087, 2.0224790573120117, 1.1384963989257812, 0.9215826988220215, 0.7854316234588623, 0.7163258194923401, 0.7373644113540649, 0.6870190501213074, 0.6548729538917542, 0.6227519512176514, 0.608633279800415, 0.5845144987106323, 0.5640328526496887, 0.5549977421760559, 0.5480689406394958, 0.5419503450393677, 0.533711850643158, 0.5207530856132507, 0.5298264026641846, 0.5167838931083679, 0.5036161541938782, 0.49737870693206787, 0.507773756980896, 0.4895598888397217, 0.4738696217536926, 0.4774343967437744, 0.507653534412384, 0.4839034974575043, 0.4707348644733429, 0.46155524253845215, 0.4715149700641632, 0.48048099875450134, 0.4509558081626892, 0.4362984895706177, 0.43802228569984436, 0.4498980641365051, 0.442954421043396, 0.43456441164016724, 0.4233478307723999, 0.42985987663269043], "val_accuracy": [0.4129999876022339, 0.45533332228660583, 0.6470000147819519, 0.6890000104904175, 0.7149999737739563, 0.746999979019165, 0.7463333606719971, 0.753333330154419, 0.7576666474342346, 0.7739999890327454, 0.7730000019073486, 0.7853333353996277, 0.7933333516120911, 0.7913333177566528, 0.7953333258628845, 0.7929999828338623, 0.8009999990463257, 0.8036666512489319, 0.8100000023841858, 0.8149999976158142, 0.8206666707992554, 0.8220000267028809, 0.8273333311080933, 0.8256666660308838, 0.82833331823349, 0.8333333134651184, 0.8213333487510681, 0.8323333263397217, 0.8330000042915344, 0.8349999785423279, 0.828000009059906, 0.8296666741371155, 0.8389999866485596, 0.8523333072662354, 0.8546666502952576, 0.8489999771118164, 0.8506666421890259, 0.8513333201408386, 0.8489999771118164, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 3, 1, 3, 6, 6, 1, 1, 6, 8, 1, 2, 8, 2, 5, 4, 5, 2, 2, 0, 2, 9], [0, 3, 1, 0, 2, 0, 0, 2, 0, 3, 3, 3, 3, 3, 2, 2], [83, 99, 27, 56, 8, 39], [0, 0, 1, 0, 1, 1], [3, 1, 9], [0, 3, 3], [0, 51], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [1, 1, 4], [0, 8], [0, 0, 0, 0, 1, 1, 1], [0, 7, 1, 5], [1, 4, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 23, 16, 6, 5, 3, 2, 2, 3, 2, 1, 0, 7, 4, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(grad, tf.math.square(grad))))), tf.math.pow(grad, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(alpha), grad), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 8, 5, 2, 4, 7, 6, 4, 8], [0, 0, 1, 0, 2, 3, 0, 1, 0], [83, 99, 27, 98, 26], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 2, 3], [0], [0, 0, 1, 0, 1, 1, 1], [6, 0, 4, 3], [7, 0, 4], [0, 58], [0, 1, 1], [7], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 5, 6, 3, 3, 1, 6, 3, 3, 1, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.math.sqrt(grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [8, 9, 3, 1, 3], [2, 3, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 3, 2], [0, 3, 3], [81], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 2, 4], [21, 70], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3040072917938232, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 3, 1, 3], [0, 0, 1, 3, 3], [88, 99, 27], [0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 2], [0, 3, 3, 2], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 0, 4, 3, 4, 8, 6, 5, 5], [0, 0, 4, 6, 3, 1], [0, 69], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 8, 4, 4, 1, 15, 9, 6, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.divide_no_nan(tf.math.square(grad), sigma))), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.773790121078491, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2118610441684723, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3195433616638184, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]