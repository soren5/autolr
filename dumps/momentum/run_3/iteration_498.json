[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8159999847412109, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936460971832275, 2.1926968097686768, 1.7743422985076904, 1.342259168624878, 1.074281930923462, 0.9289583563804626, 0.8474377393722534, 0.8454616665840149, 0.7536680102348328, 0.731200098991394, 0.6929282546043396, 0.6829379200935364, 0.6373972296714783, 0.6125123500823975, 0.6018186211585999, 0.5893463492393494, 0.5957427024841309, 0.5661203861236572, 0.5435038805007935, 0.5307431817054749, 0.5190715789794922, 0.5242304801940918, 0.5004611015319824, 0.49766603112220764, 0.48908838629722595, 0.48344874382019043, 0.4639321565628052, 0.46813562512397766, 0.4620727598667145, 0.4535060226917267, 0.4414796233177185, 0.43481171131134033, 0.42543140053749084, 0.4226498007774353, 0.40897512435913086, 0.4030236601829529, 0.39502257108688354, 0.40107011795043945, 0.384128600358963], "accuracy": [0.12957337498664856, 0.32743361592292786, 0.4439307749271393, 0.5493329763412476, 0.6382247805595398, 0.6623960137367249, 0.683529257774353, 0.6906617283821106, 0.7049266695976257, 0.722229540348053, 0.7321357727050781, 0.7386078238487244, 0.7609298825263977, 0.7650244235992432, 0.7714964747428894, 0.7703077793121338, 0.7637035846710205, 0.7781006693840027, 0.7882710099220276, 0.791969358921051, 0.7959318161010742, 0.7948752045631409, 0.8025360107421875, 0.8050455451011658, 0.8039889335632324, 0.8078193068504333, 0.8164047002792358, 0.8186501264572144, 0.819442629814148, 0.8169330358505249, 0.8296129703521729, 0.8335754871368408, 0.8319904804229736, 0.8325188159942627, 0.8376700282096863, 0.8454629778862, 0.8457271456718445, 0.8401796221733093, 0.8466516733169556], "val_loss": [2.246399402618408, 2.0251564979553223, 1.1635589599609375, 0.9350816011428833, 0.781504213809967, 0.7539376020431519, 0.7302794456481934, 0.6988536715507507, 0.6643545031547546, 0.6357589364051819, 0.6027467250823975, 0.5921270251274109, 0.576153576374054, 0.5691676139831543, 0.5663025975227356, 0.5445326566696167, 0.5363370180130005, 0.5245469808578491, 0.5226854085922241, 0.5131669044494629, 0.5049924850463867, 0.5010027885437012, 0.49993306398391724, 0.5048081874847412, 0.5073269009590149, 0.483076810836792, 0.4858030676841736, 0.48118504881858826, 0.4846154451370239, 0.46059107780456543, 0.4587528109550476, 0.4742456078529358, 0.44447949528694153, 0.44201549887657166, 0.46289438009262085, 0.473451167345047, 0.45979639887809753, 0.4486592710018158, 0.4500874876976013], "val_accuracy": [0.41100001335144043, 0.4703333377838135, 0.653333306312561, 0.6863333582878113, 0.7173333168029785, 0.7279999852180481, 0.7293333411216736, 0.7386666536331177, 0.7716666460037231, 0.762666642665863, 0.7743333578109741, 0.7850000262260437, 0.7850000262260437, 0.7913333177566528, 0.7996666431427002, 0.7979999780654907, 0.8006666898727417, 0.8036666512489319, 0.8130000233650208, 0.8243333101272583, 0.8240000009536743, 0.8193333148956299, 0.8149999976158142, 0.8240000009536743, 0.8246666789054871, 0.8399999737739563, 0.8306666612625122, 0.843999981880188, 0.8320000171661377, 0.8423333168029785, 0.8433333039283752, 0.8416666388511658, 0.8489999771118164, 0.8550000190734863, 0.8493333458900452, 0.8516666889190674, 0.8500000238418579, 0.8473333120346069, 0.8486666679382324]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 9, 5, 0, 0, 4, 2, 6, 8, 8, 2, 3, 1, 0, 5, 2, 4, 2, 2, 5, 9, 4, 5, 1, 9, 2, 3, 9, 3, 1, 0, 2, 9, 4], [0, 3, 1, 3, 1, 1, 2, 1, 3, 3, 2, 1, 1, 3, 1, 2, 2, 0], [83, 99, 27, 65, 39, 11, 77], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 2, 3], [25], [0, 1, 0, 0, 1, 1, 1], [0, 1, 4, 6], [0, 0, 7], [0, 35], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 56, 38, 18, 7, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), alpha), tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(alpha)), alpha), tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.negative(grad), tf.math.square(tf.math.add(tf.math.pow(alpha, grad), tf.math.add(tf.math.add(tf.math.square(grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.square(tf.math.subtract(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))), alpha), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 2, 5, 5], [0, 1, 5], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 4, 4], [0, 0, 4, 4], [0, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 8, 5, 3, 1, 8, 4, 4, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 3, 1, 3, 0, 9], [0, 0, 1, 0, 2], [83, 99, 27, 18], [0, 0, 1, 1, 1, 1], [0, 5, 2], [0, 5, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 3], [0, 5, 4], [0, 58], [0, 0, 0, 1], [0, 2, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 3, 2, 1, 1, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [33617.47265625, 5237754.5, 100835768.0, 755997632.0, 3624015104.0, 13233089536.0], "accuracy": [0.09853387624025345, 0.10077928751707077, 0.10368511080741882, 0.1022322028875351, 0.09628847241401672, 0.09708096832036972], "val_loss": [345271.375, 20166468.0, 235826448.0, 1403244544.0, 5744822784.0, 18544875520.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 1, 2, 0, 9, 6, 5, 4, 3, 3, 4, 7, 5, 0, 8, 2, 7, 2, 9, 2, 4, 8, 8, 8, 3, 3, 3, 9, 8, 3, 7, 8, 7, 1, 9, 5, 5], [0, 0, 1, 0, 2, 3, 2, 2, 3, 0, 3, 0, 0, 0, 1, 3, 1, 1, 0, 3, 0], [83, 99, 27, 56, 8, 56, 70, 33, 89, 90, 58, 1, 65], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 2, 6, 7, 0], [0, 3, 2, 5], [0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3, 0, 2, 0, 4, 2, 7, 8, 2, 6, 8, 5, 2, 0], [0, 0, 4, 1, 7, 0, 4, 6, 1, 7], [0, 58, 15], [0, 1], [9], [1], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 62, 41, 21, 13, 10, 6, 4, 1, 27, 17, 10, 3, 1, 1, 0, 1], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.pow(tf.math.add(tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(tf.math.pow(grad, tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), grad)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), grad)))), grad), tf.math.square(tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310157299041748, 2.3096766471862793, 2.309722900390625, 2.3101444244384766, 2.309570550918579, 2.3100502490997314], "accuracy": [0.09311848133802414, 0.0952318087220192, 0.09074098616838455, 0.0940430611371994, 0.09457138925790787, 0.09509972482919693], "val_loss": [2.3077690601348877, 2.3077690601348877, 2.3077690601348877, 2.3077690601348877, 2.3077690601348877, 2.3077690601348877], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]