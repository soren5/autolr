[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942192554473877, 2.192513942718506, 1.7713737487792969, 1.3446474075317383, 1.097374439239502, 0.9178552031517029, 0.8455296754837036, 0.8145369291305542, 0.7656101584434509, 0.7337616682052612, 0.7109864354133606, 0.6864432096481323, 0.6498677730560303, 0.6270158886909485, 0.6153761744499207, 0.5788508057594299, 0.5756162405014038, 0.5575971007347107, 0.5596561431884766, 0.545785129070282, 0.5372664928436279, 0.521395206451416, 0.5161059498786926, 0.5065832138061523, 0.48499345779418945, 0.4867427945137024, 0.4754757285118103, 0.46667104959487915, 0.46549636125564575, 0.4527004063129425, 0.4396035969257355, 0.43536028265953064, 0.42235761880874634, 0.41895726323127747, 0.4081096351146698, 0.40645357966423035, 0.3954840898513794, 0.3907075822353363, 0.3880707025527954, 0.3849358856678009, 0.38243553042411804, 0.379171758890152, 0.3704434633255005], "accuracy": [0.12534672021865845, 0.32320696115493774, 0.4399682879447937, 0.5499933958053589, 0.633469820022583, 0.6535464525222778, 0.6900013089179993, 0.6931713223457336, 0.7016246318817139, 0.715889573097229, 0.728701651096344, 0.7372870445251465, 0.7474573850631714, 0.7578919529914856, 0.763967752456665, 0.7777044177055359, 0.7808743715286255, 0.780610203742981, 0.780610203742981, 0.7865539789199829, 0.7918372750282288, 0.8029322624206543, 0.7994980812072754, 0.8009510040283203, 0.8112534880638123, 0.8150838613510132, 0.8216879963874817, 0.817989706993103, 0.8247259259223938, 0.8273676037788391, 0.8334434032440186, 0.8318583965301514, 0.8360850811004639, 0.8389908671379089, 0.8462554216384888, 0.845859169960022, 0.8412362933158875, 0.8502179384231567, 0.8496896028518677, 0.8545766472816467, 0.8527275323867798, 0.8536521196365356, 0.8527275323867798], "val_loss": [2.247866630554199, 2.0303192138671875, 1.1759357452392578, 0.9041386842727661, 0.773633599281311, 0.7269008159637451, 0.6757434606552124, 0.6621556282043457, 0.6482849717140198, 0.6177670359611511, 0.56797194480896, 0.5629645586013794, 0.5468007922172546, 0.5332071781158447, 0.5148626565933228, 0.5112155675888062, 0.5010598301887512, 0.498103529214859, 0.49390193819999695, 0.48325401544570923, 0.47375568747520447, 0.4768494963645935, 0.46632120013237, 0.45963460206985474, 0.4654567837715149, 0.46024683117866516, 0.451619952917099, 0.4495983421802521, 0.44725626707077026, 0.4355667233467102, 0.4336925745010376, 0.43578287959098816, 0.42553067207336426, 0.4204968214035034, 0.42172932624816895, 0.4025439918041229, 0.40615513920783997, 0.4238337278366089, 0.41555583477020264, 0.4160146415233612, 0.41171619296073914, 0.41752055287361145, 0.4164513647556305], "val_accuracy": [0.406333327293396, 0.46933332085609436, 0.6349999904632568, 0.6883333325386047, 0.699999988079071, 0.7276666760444641, 0.7440000176429749, 0.7396666407585144, 0.7566666603088379, 0.7606666684150696, 0.7763333320617676, 0.7770000100135803, 0.7929999828338623, 0.7960000038146973, 0.8056666851043701, 0.8066666722297668, 0.8033333420753479, 0.8143333196640015, 0.8136666417121887, 0.8206666707992554, 0.8343333601951599, 0.8316666483879089, 0.8309999704360962, 0.8333333134651184, 0.8326666951179504, 0.8370000123977661, 0.8346666693687439, 0.8360000252723694, 0.8426666855812073, 0.8473333120346069, 0.8396666646003723, 0.8363333344459534, 0.8410000205039978, 0.8523333072662354, 0.8503333330154419, 0.859666645526886, 0.859000027179718, 0.8633333444595337, 0.8576666712760925, 0.8569999933242798, 0.859333336353302, 0.8586666584014893, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 4, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [4, 0, 4, 3, 6], [0, 7, 4, 1, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 10, 5, 5, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, grad), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47369904128.0, 6937421283328.0, 122423663919104.0, 864310628712448.0, 3773719864410112.0, 1.2604077598834688e+16], "accuracy": [0.09615638852119446, 0.09734513610601425, 0.09272222965955734, 0.09945846349000931, 0.09800554811954498, 0.09232597798109055], "val_loss": [468472397824.0, 25256995586048.0, 271104476184576.0, 1477884287909888.0, 5537374633197568.0, 1.6331716222255104e+16], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 3, 1, 3], [1, 0, 1, 0, 3], [83, 66, 63], [0, 0, 1, 0, 1, 1], [0, 1, 2], [1, 3, 3], [0], [1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 3], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 3, 3, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 5, 7, 2], [0, 0, 1, 3, 2, 1, 3, 3], [83, 99, 37], [0, 0, 1, 1, 1, 1], [3, 1, 2], [0, 3, 4], [0], [0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3], [0, 4, 4], [0, 58], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 2, 5, 2, 3, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.square(grad))), tf.math.add(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 8, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 2, 5, 0], [0, 2, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 4, 3, 3, 5, 2, 3, 8, 2, 7, 2, 3, 3, 4, 9, 9, 4, 3, 5, 0, 0, 5, 6, 7, 9, 6], [0, 0, 4, 2, 6, 4, 0, 2, 7, 6, 4, 3, 4, 2, 3], [0, 58, 89, 6, 53, 63], [0, 1, 0], [2, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 8, 5, 3, 1, 42, 27, 15, 6, 3, 2, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(beta), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(tf.math.square(beta), tf.math.negative(grad)), grad))), grad), tf.math.negative(sigma))))), tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]