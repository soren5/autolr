[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937734127044678, 2.190591812133789, 1.7752211093902588, 1.3762513399124146, 1.083681583404541, 0.9301788210868835, 0.8624619245529175, 0.7935205698013306, 0.7541349530220032, 0.7385367155075073, 0.7000818848609924, 0.6742125153541565, 0.6360904574394226, 0.6168721318244934, 0.5920930504798889, 0.5844883322715759, 0.5701624751091003, 0.5679709911346436, 0.5554424524307251, 0.5374924540519714, 0.5367606282234192, 0.5157220363616943, 0.5083505511283875, 0.49554190039634705, 0.4830361008644104, 0.4695802927017212, 0.4662807881832123, 0.4508284330368042, 0.4455335736274719, 0.43403559923171997, 0.42961084842681885, 0.42412492632865906, 0.4116238057613373, 0.39807695150375366, 0.3944137692451477, 0.3878152668476105, 0.3901599645614624, 0.36797720193862915, 0.36819010972976685, 0.36621394753456116, 0.34643256664276123, 0.3430483043193817, 0.34842339158058167], "accuracy": [0.12798838317394257, 0.3209615647792816, 0.42385417222976685, 0.5361247062683105, 0.629111111164093, 0.6608110070228577, 0.6865671873092651, 0.7124554514884949, 0.7125874757766724, 0.7145687341690063, 0.7342491149902344, 0.7429665923118591, 0.7516840696334839, 0.7648923397064209, 0.7720248103141785, 0.7783648371696472, 0.7795535326004028, 0.7804781198501587, 0.7853652238845825, 0.7927618622779846, 0.7910447716712952, 0.8025360107421875, 0.8058380484580994, 0.8098005652427673, 0.8121780753135681, 0.8236692547798157, 0.8195747137069702, 0.8232730031013489, 0.8278959393501282, 0.8348963260650635, 0.8362171649932861, 0.8362171649932861, 0.8421608805656433, 0.8490291833877563, 0.8492933511734009, 0.8487650156021118, 0.8518029451370239, 0.8642187118530273, 0.8598600029945374, 0.8601241707801819, 0.8689737319946289, 0.8692378997802734, 0.8673887252807617], "val_loss": [2.2470147609710693, 2.021895408630371, 1.1348079442977905, 0.875722348690033, 0.7968767881393433, 0.7057599425315857, 0.6489238142967224, 0.635749340057373, 0.6274169087409973, 0.6080718040466309, 0.5683673620223999, 0.5434831380844116, 0.5474451780319214, 0.5162398219108582, 0.5070469379425049, 0.5111681222915649, 0.508003830909729, 0.5025548338890076, 0.4963758587837219, 0.48659417033195496, 0.47470271587371826, 0.4792358875274658, 0.4721162021160126, 0.45806217193603516, 0.46087726950645447, 0.4443792402744293, 0.4382771849632263, 0.4415857791900635, 0.4347762167453766, 0.42062002420425415, 0.42190030217170715, 0.4112384021282196, 0.4131886065006256, 0.417276531457901, 0.405923455953598, 0.4056088924407959, 0.4080731272697449, 0.398007333278656, 0.39704638719558716, 0.39994552731513977, 0.40539926290512085, 0.4078200161457062, 0.39877843856811523], "val_accuracy": [0.37166666984558105, 0.468666672706604, 0.6499999761581421, 0.6919999718666077, 0.7080000042915344, 0.7353333234786987, 0.7506666779518127, 0.7580000162124634, 0.7639999985694885, 0.7586666941642761, 0.765333354473114, 0.7839999794960022, 0.7833333611488342, 0.7973333597183228, 0.7986666560173035, 0.7976666688919067, 0.8026666641235352, 0.8096666932106018, 0.8113333582878113, 0.8173333406448364, 0.8236666917800903, 0.8196666836738586, 0.8230000138282776, 0.8316666483879089, 0.8299999833106995, 0.8410000205039978, 0.8399999737739563, 0.8320000171661377, 0.8453333377838135, 0.8483333587646484, 0.8473333120346069, 0.8500000238418579, 0.8533333539962769, 0.8533333539962769, 0.8579999804496765, 0.859000027179718, 0.862666666507721, 0.8696666955947876, 0.8653333187103271, 0.862666666507721, 0.8663333058357239, 0.8669999837875366, 0.8610000014305115]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 8, 3, 1, 3], [0, 0, 3, 1, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [5, 1, 7], [0, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [4, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 0], [7, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [4, 0, 0], [0, 58], [0, 1, 1], [4], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 1, 2, 1, 5, 3, 2, 1, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, grad)", "other_info": {"loss": [2.3037564754486084, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.3025851249694824, 2.302584648132324, 2.302584648132324], "accuracy": [0.1014397069811821, 0.11015717685222626, 0.109232597053051, 0.10645885765552521, 0.11015717685222626, 0.10434553027153015, 0.1026284471154213], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 2, 3, 9, 7, 0], [4, 3, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [2, 0, 4], [76, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 11, 7, 4, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 5, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 7, 4], [0, 58], [0, 1, 1], [3], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 2, 1, 1, 1, 7, 4, 3, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]