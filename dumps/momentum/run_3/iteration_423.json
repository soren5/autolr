[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2945847511291504, 2.190094470977783, 1.7746400833129883, 1.3348528146743774, 1.065075397491455, 0.9192966818809509, 0.8432480692863464, 0.8128088712692261, 0.7667216658592224, 0.7446145415306091, 0.7160571217536926, 0.683356761932373, 0.6409724354743958, 0.6294741034507751, 0.6084798574447632, 0.5872626900672913, 0.5752087235450745, 0.5686765909194946, 0.5566806197166443, 0.5483049154281616, 0.5357668995857239, 0.5193204283714294, 0.5170760154724121, 0.4966832995414734, 0.5031702518463135, 0.48924577236175537, 0.4953387379646301, 0.471019446849823, 0.46486952900886536, 0.4555104672908783, 0.4463915228843689, 0.4405992329120636, 0.4414350092411041, 0.43698859214782715, 0.420746773481369, 0.4159719944000244, 0.40666723251342773, 0.40673401951789856, 0.3938157856464386, 0.38144710659980774, 0.39236214756965637, 0.374341756105423, 0.36952611804008484, 0.3665989339351654, 0.3708995580673218, 0.375095397233963, 0.36007753014564514, 0.3371387720108032, 0.34241554141044617, 0.3449563980102539, 0.3373474180698395, 0.3194221556186676], "accuracy": [0.12534672021865845, 0.3295469582080841, 0.4365341365337372, 0.5477479696273804, 0.6367719173431396, 0.6609430909156799, 0.6913221478462219, 0.7053229212760925, 0.7108704447746277, 0.7207766771316528, 0.726192057132721, 0.7358341217041016, 0.7541936039924622, 0.7594769597053528, 0.769911527633667, 0.7753269076347351, 0.7808743715286255, 0.7808743715286255, 0.7852331399917603, 0.7961959838867188, 0.8031964302062988, 0.805177628993988, 0.8020076751708984, 0.8099326491355896, 0.8107251524925232, 0.8132346868515015, 0.8057059645652771, 0.8203672170639038, 0.8256505131721497, 0.8234050869941711, 0.829216718673706, 0.8342359066009521, 0.8334434032440186, 0.8338396549224854, 0.8383304476737976, 0.8366134166717529, 0.845859169960022, 0.8496896028518677, 0.8502179384231567, 0.8474441766738892, 0.8482366800308228, 0.8524633646011353, 0.8544445633888245, 0.8619733452796936, 0.8555012345314026, 0.8613129258155823, 0.860652506351471, 0.8684453964233398, 0.870030403137207, 0.8636903762817383, 0.8697662353515625, 0.8735966086387634], "val_loss": [2.2465884685516357, 2.0251715183258057, 1.152004599571228, 0.8810431957244873, 0.7640971541404724, 0.722857654094696, 0.6780804395675659, 0.6538777947425842, 0.6416314840316772, 0.6314997673034668, 0.5816212296485901, 0.5610707402229309, 0.5586053729057312, 0.5412461161613464, 0.5308107733726501, 0.5264451503753662, 0.5156106948852539, 0.5095420479774475, 0.4972711205482483, 0.4886082410812378, 0.4886229932308197, 0.47472065687179565, 0.46993380784988403, 0.4853513240814209, 0.47443708777427673, 0.47156643867492676, 0.46995809674263, 0.47023889422416687, 0.45483195781707764, 0.4507720172405243, 0.4556363821029663, 0.4533882737159729, 0.44582226872444153, 0.4350528419017792, 0.42768681049346924, 0.42675334215164185, 0.45020467042922974, 0.44600191712379456, 0.4158337414264679, 0.42086082696914673, 0.4167757034301758, 0.4091635048389435, 0.4157474637031555, 0.4269285798072815, 0.43074682354927063, 0.43478289246559143, 0.4182960093021393, 0.40485110878944397, 0.4150492250919342, 0.41432154178619385, 0.42168134450912476, 0.43353137373924255], "val_accuracy": [0.4283333420753479, 0.4976666569709778, 0.6396666765213013, 0.6773333549499512, 0.7020000219345093, 0.7360000014305115, 0.7283333539962769, 0.7483333349227905, 0.7523333430290222, 0.7646666765213013, 0.7639999985694885, 0.7826666831970215, 0.7820000052452087, 0.784333348274231, 0.7896666526794434, 0.7896666526794434, 0.8076666593551636, 0.8003333210945129, 0.8029999732971191, 0.8196666836738586, 0.8256666660308838, 0.8233333230018616, 0.8226666450500488, 0.8246666789054871, 0.8240000009536743, 0.8263333439826965, 0.8289999961853027, 0.82833331823349, 0.8433333039283752, 0.8366666436195374, 0.8373333215713501, 0.8343333601951599, 0.8423333168029785, 0.8463333249092102, 0.843999981880188, 0.8473333120346069, 0.8503333330154419, 0.8533333539962769, 0.8529999852180481, 0.8529999852180481, 0.859666645526886, 0.862333357334137, 0.8616666793823242, 0.8606666922569275, 0.8610000014305115, 0.8656666874885559, 0.871666669845581, 0.8700000047683716, 0.8603333234786987, 0.8633333444595337, 0.8683333396911621, 0.8650000095367432]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [9, 1, 3, 1, 3], [0, 0, 2, 3, 2], [83, 99, 27], [0, 1, 1, 0, 0, 1], [0, 1, 0], [2, 4, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3037664890289307, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [9, 9, 3, 1, 3], [0, 3, 1, 0, 2], [67, 99, 27], [0, 0, 1, 0, 1, 1], [9, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 2, 3, 0], [5, 0, 4], [0, 58], [0, 1, 1], [2], [1, 6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.multiply(grad, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [26096602.0, 2.314183235168457, 2.305494785308838, 773547299438592.0, 2.3231563568115234, 2.309248924255371, 2.3044519424438477, 2.30324649810791, 2.303159236907959], "accuracy": [0.10196803510189056, 0.09549596905708313, 0.09628847241401672, 0.09945846349000931, 0.09192973375320435, 0.0952318087220192, 0.09668471664190292, 0.09549596905708313, 0.0948355570435524], "val_loss": [2.3210370540618896, 2.307002067565918, 2.303588628768921, 2.33304762840271, 2.3128066062927246, 2.305452823638916, 2.3031716346740723, 2.3028063774108887, 2.3026371002197266], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10266666859388351, 0.10000000149011612, 0.10266666859388351, 0.09866666793823242, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 0, 1, 8, 5, 3, 1, 3, 1, 2, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 1], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 6, 2, 0, 6, 1, 2, 9], [0, 3, 3, 0, 2], [0, 59, 68], [0, 0, 1, 1, 1, 1, 1], [7, 0, 4, 3], [4, 0, 4], [15, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 13, 8, 5, 3, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3043322563171387, 2.434760570526123, 9.33733081817627, 58.59306716918945, 164.38340759277344, 327.13568115234375], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.310150146484375, 3.214776039123535, 29.03631591796875, 111.20746612548828, 249.93472290039062, 444.4627380371094], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 0, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 0], [0, 3, 3], [32], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 4, 3, 1, 0, 1, 3, 8, 5, 3, 2, 6, 2, 2, 1], [0, 0, 4, 4, 3, 0, 2, 7, 7, 5, 5, 4], [0, 58, 2], [0, 1, 0, 1], [4, 0], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 1, 28, 16, 12, 3, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.square(grad)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, sigma), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.add(grad, grad), grad))), tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.negative(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]