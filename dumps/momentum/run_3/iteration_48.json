[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8454285860061646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294105052947998, 2.189099073410034, 1.763905644416809, 1.364841341972351, 1.08909273147583, 0.9302565455436707, 0.8616848587989807, 0.8285667300224304, 0.7856433987617493, 0.7674875855445862, 0.7341284155845642, 0.7131609320640564, 0.656497597694397, 0.6310845017433167, 0.6246775984764099, 0.6095285415649414, 0.6030486226081848, 0.6000518202781677, 0.5640374422073364, 0.5735824704170227, 0.5458467602729797, 0.5421433448791504, 0.5234155654907227, 0.5055807828903198, 0.5056585073471069, 0.5020742416381836, 0.4870537221431732, 0.4797557294368744, 0.46229496598243713, 0.4606454372406006, 0.4442996680736542, 0.42943885922431946, 0.4426659643650055, 0.405977338552475, 0.4164581298828125, 0.414287805557251, 0.40725409984588623, 0.3948952555656433, 0.38629767298698425, 0.3772631585597992, 0.38907185196876526, 0.3722005784511566, 0.3580782413482666, 0.3576911389827728, 0.3516262471675873], "accuracy": [0.1200634017586708, 0.3366794288158417, 0.4344208240509033, 0.5311055183410645, 0.6242240071296692, 0.6701889038085938, 0.6868313550949097, 0.6963412761688232, 0.6894729733467102, 0.7120591998100281, 0.7251353859901428, 0.7256637215614319, 0.7432307600975037, 0.7506273984909058, 0.7585523724555969, 0.7642319202423096, 0.7700436115264893, 0.7771760821342468, 0.7794214487075806, 0.7741381525993347, 0.7868181467056274, 0.7922335267066956, 0.802800178527832, 0.8016114234924316, 0.7979130744934082, 0.8006868362426758, 0.8047813773155212, 0.8125742673873901, 0.821820080280304, 0.8215559124946594, 0.833179235458374, 0.8363492488861084, 0.8308017253875732, 0.8385946154594421, 0.8411042094230652, 0.8379341959953308, 0.8372738361358643, 0.8442742228507996, 0.8451988101005554, 0.8502179384231567, 0.8475762605667114, 0.8488970994949341, 0.8594637513160706, 0.8590674996376038, 0.8581429123878479], "val_loss": [2.246267557144165, 2.018920660018921, 1.1316773891448975, 0.8519474864006042, 0.777174711227417, 0.6893759965896606, 0.6575482487678528, 0.6351905465126038, 0.6455960273742676, 0.6347047686576843, 0.5620511770248413, 0.5413816571235657, 0.5330027937889099, 0.5200420618057251, 0.5000643134117126, 0.4927811324596405, 0.4897196590900421, 0.4861235022544861, 0.480622261762619, 0.4660188853740692, 0.46619898080825806, 0.46896782517433167, 0.46856653690338135, 0.45026883482933044, 0.4414435625076294, 0.4480454623699188, 0.43288370966911316, 0.4274689257144928, 0.43009406328201294, 0.42497551441192627, 0.4241829514503479, 0.4358586370944977, 0.42313581705093384, 0.4161425828933716, 0.42853909730911255, 0.42385002970695496, 0.42197176814079285, 0.4179005026817322, 0.4141675531864166, 0.4143197536468506, 0.4306234121322632, 0.41691598296165466, 0.4220331311225891, 0.42494499683380127, 0.4245023727416992], "val_accuracy": [0.43166667222976685, 0.43433332443237305, 0.6413333415985107, 0.6890000104904175, 0.7123333215713501, 0.7436666488647461, 0.746999979019165, 0.7390000224113464, 0.7613333463668823, 0.7536666393280029, 0.7766666412353516, 0.7773333191871643, 0.7900000214576721, 0.7940000295639038, 0.8046666383743286, 0.8029999732971191, 0.8106666803359985, 0.8209999799728394, 0.8113333582878113, 0.8196666836738586, 0.8190000057220459, 0.8240000009536743, 0.8183333277702332, 0.8316666483879089, 0.8346666693687439, 0.8349999785423279, 0.8403333425521851, 0.8420000076293945, 0.8460000157356262, 0.8456666469573975, 0.8463333249092102, 0.8500000238418579, 0.846666693687439, 0.8536666631698608, 0.8489999771118164, 0.8546666502952576, 0.8543333411216736, 0.8576666712760925, 0.856333315372467, 0.8666666746139526, 0.8586666584014893, 0.8573333621025085, 0.8613333106040955, 0.859000027179718, 0.8566666841506958]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 6], [0, 0, 1, 0, 2, 2], [52, 99, 27], [0, 1, 1, 1, 1, 1], [0, 8, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 0], [6, 0, 4, 3], [0, 0, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303514242172241, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 3, 1, 0], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 4, 0, 5, 2, 7, 8, 0, 7, 5, 6, 0, 0, 0, 0, 7, 0], [0, 3, 3, 5, 2, 0, 5, 3, 2], [0, 17], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 6, 7, 5, 9, 8, 3, 7, 5], [7, 0, 4, 0, 7, 2], [0, 58, 12], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 4, 6, 4, 7, 8, 3, 2, 5, 3, 4, 0], [1, 1, 3, 1, 0, 0, 3, 1, 4, 4], [0, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 27, 18, 9, 2, 18, 12, 6, 3, 22, 12, 10, 2], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)))))))), tf.math.add(tf.math.negative(grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad), tf.math.square(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(sigma, alpha), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(tf.math.pow(sigma, alpha), grad)), tf.math.negative(grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 2, 8], [0, 0, 2, 0, 2, 0], [83, 99, 27, 94], [0, 0, 1, 0, 1, 1], [0, 1, 2], [5, 0, 3], [0], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 4, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3041579723358154, 2.5646376609802246, 9.053504943847656, 29.3587646484375, 60.6848258972168, 102.85980987548828], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.323171854019165, 3.994389057159424, 19.143220901489258, 45.98652648925781, 83.66746520996094, 132.18069458007812], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 3, 1, 3], [0, 1, 1, 0, 2], [83, 99, 2], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 4, 0, 0, 5, 9, 3, 6, 5, 3, 3, 2, 2, 5, 2, 8, 5, 1, 7, 6, 4, 1, 5, 9, 2, 3, 9, 7, 9, 5, 8], [0, 3, 3, 5, 0, 1, 1, 2, 4, 1, 5, 0, 5, 0, 3], [0, 99, 79, 52, 83, 7, 64, 82], [0, 0, 0, 0, 1, 1, 1], [3, 0, 0, 3], [0, 0, 4], [0, 58], [1, 1], [0], [3], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 7, 4, 3, 1, 48, 33, 15, 8, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.square(grad))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.sqrt(alpha), tf.math.square(tf.math.subtract(beta, tf.math.add(grad, alpha)))))), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(grad, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3109512329101562, 2.3091375827789307, 2.31091570854187, 2.3101038932800293, 2.3102989196777344, 2.309535503387451], "accuracy": [0.08611807972192764, 0.0952318087220192, 0.08757099509239197, 0.09179764986038208, 0.09206181764602661, 0.09576013684272766], "val_loss": [2.3095107078552246, 2.3095107078552246, 2.3095107078552246, 2.3095107078552246, 2.3095107078552246, 2.3095107078552246], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]