[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928450107574463, 2.1891579627990723, 1.7739193439483643, 1.3692339658737183, 1.0680463314056396, 0.911870539188385, 0.8477339744567871, 0.7954385280609131, 0.7662801146507263, 0.7467252612113953, 0.6987233757972717, 0.6828442215919495, 0.666480302810669, 0.6342312693595886, 0.6171789765357971, 0.5990118980407715, 0.5953051447868347, 0.5891768932342529, 0.5716775059700012, 0.5541879534721375, 0.5450591444969177, 0.5308095812797546, 0.5276315808296204, 0.5209558010101318, 0.5041173696517944, 0.49247807264328003, 0.47382664680480957, 0.48744431138038635, 0.47193947434425354, 0.4585931599140167, 0.44890668988227844, 0.4449261426925659, 0.44203048944473267, 0.43401625752449036, 0.43751585483551025, 0.42228108644485474, 0.4103336036205292, 0.39529451727867126, 0.40162187814712524, 0.3964023292064667, 0.3745928704738617, 0.36625057458877563, 0.36551475524902344, 0.3681372404098511, 0.35778093338012695, 0.3393652141094208, 0.34321972727775574], "accuracy": [0.1332716941833496, 0.32267865538597107, 0.4313828945159912, 0.5344076156616211, 0.6412627100944519, 0.6725663542747498, 0.6917183995246887, 0.7141724824905396, 0.7046625018119812, 0.7180029153823853, 0.7347774505615234, 0.7411174178123474, 0.7515519857406616, 0.7618544697761536, 0.7633073329925537, 0.7753269076347351, 0.7714964747428894, 0.7778365015983582, 0.7844406366348267, 0.7906485199928284, 0.7973847389221191, 0.7946110367774963, 0.8014793395996094, 0.8038568496704102, 0.8061022162437439, 0.813498854637146, 0.8181217908859253, 0.813498854637146, 0.817989706993103, 0.8234050869941711, 0.8289526104927063, 0.8304054737091064, 0.8281601071357727, 0.8322546482086182, 0.8304054737091064, 0.8360850811004639, 0.8466516733169556, 0.8536521196365356, 0.8502179384231567, 0.8532558679580688, 0.8565579056739807, 0.8656716346740723, 0.8605204224586487, 0.8568220734596252, 0.8652753829956055, 0.8732003569602966, 0.8683133125305176], "val_loss": [2.247616767883301, 2.021312952041626, 1.1420204639434814, 0.8478093147277832, 0.7491776347160339, 0.669892430305481, 0.6492624282836914, 0.6253907084465027, 0.6160886883735657, 0.5833675265312195, 0.5474482178688049, 0.5365398526191711, 0.5300018191337585, 0.5104907751083374, 0.5040725469589233, 0.49709004163742065, 0.49151813983917236, 0.48207998275756836, 0.4695620834827423, 0.46857792139053345, 0.4618207514286041, 0.4645986258983612, 0.4473423659801483, 0.45336082577705383, 0.44990217685699463, 0.4457645118236542, 0.4364370107650757, 0.4235153794288635, 0.414944589138031, 0.41340360045433044, 0.41418546438217163, 0.40281763672828674, 0.39763766527175903, 0.39627206325531006, 0.4013141393661499, 0.39435458183288574, 0.38817915320396423, 0.3785468339920044, 0.37896931171417236, 0.3866826593875885, 0.397041380405426, 0.3929571211338043, 0.39052361249923706, 0.3913276493549347, 0.38644474744796753, 0.38823002576828003, 0.3925890028476715], "val_accuracy": [0.4166666567325592, 0.42933332920074463, 0.6463333368301392, 0.7003333568572998, 0.7350000143051147, 0.7519999742507935, 0.7523333430290222, 0.762333333492279, 0.7696666717529297, 0.7799999713897705, 0.7873333096504211, 0.7893333435058594, 0.8050000071525574, 0.7946666479110718, 0.8059999942779541, 0.8096666932106018, 0.8100000023841858, 0.8053333163261414, 0.8163333535194397, 0.8209999799728394, 0.8149999976158142, 0.8199999928474426, 0.8209999799728394, 0.8246666789054871, 0.8256666660308838, 0.828000009059906, 0.8266666531562805, 0.8320000171661377, 0.8403333425521851, 0.8413333296775818, 0.8456666469573975, 0.8493333458900452, 0.8463333249092102, 0.847000002861023, 0.8489999771118164, 0.8543333411216736, 0.8556666374206543, 0.862666666507721, 0.859666645526886, 0.8603333234786987, 0.8583333492279053, 0.8663333058357239, 0.8600000143051147, 0.8560000061988831, 0.8576666712760925, 0.8640000224113464, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 3, 1, 2], [0, 0, 1, 0, 2, 0], [83, 99, 27, 46], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1], [0, 0, 5, 3, 8], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 4, 6, 3, 3, 1, 7, 5, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 5, 3], [0, 0, 1, 0, 3], [83, 34, 27], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [8, 1, 2, 1, 4, 3, 5, 8, 8, 9, 2, 5, 9], [0, 3, 2, 0, 0], [0, 59, 75, 44, 99], [0, 1, 1, 0, 1, 1, 1], [0, 0, 6, 3], [5, 4, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 18, 13, 5, 5, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(grad), beta)), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3031818866729736, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 94], [0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 6, 3], [0, 5, 3, 5], [0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 4, 0, 2, 0], [0, 0, 4, 3], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 8, 4, 4, 1, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 1, 6, 1, 3], [0, 0, 1, 0, 1], [83, 99, 10], [0, 0, 1, 0, 1, 1], [0, 3, 2], [4, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 6, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 6, 3, 3, 0, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(grad, tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304368019104004, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]