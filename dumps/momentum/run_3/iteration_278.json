[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942209243774414, 2.189019203186035, 1.7699990272521973, 1.3429491519927979, 1.074594497680664, 0.9102766513824463, 0.8427092432975769, 0.8000800609588623, 0.7604283690452576, 0.7271139025688171, 0.6957821249961853, 0.683654248714447, 0.6681938171386719, 0.643911600112915, 0.6184995174407959, 0.6076781749725342, 0.5862846970558167, 0.5754950642585754, 0.5562055706977844, 0.5559423565864563, 0.535042941570282, 0.5207951664924622, 0.5075799226760864, 0.5014464855194092, 0.4910576343536377, 0.4751974642276764, 0.48795756697654724, 0.47445833683013916, 0.45660650730133057, 0.45713576674461365, 0.4430406987667084, 0.43163377046585083, 0.4279722273349762, 0.4243665039539337, 0.41104158759117126, 0.4094490110874176, 0.39508357644081116, 0.3934973180294037, 0.3785012662410736, 0.37503376603126526, 0.3730803430080414, 0.3614702820777893, 0.3538898825645447, 0.3525018095970154, 0.34785589575767517, 0.34598830342292786, 0.34451764822006226, 0.34733033180236816, 0.3323066234588623, 0.3351145386695862, 0.3259674906730652, 0.3166704475879669, 0.31488725543022156, 0.3129527270793915, 0.2999188005924225, 0.29479289054870605], "accuracy": [0.1266675442457199, 0.3349623680114746, 0.439439982175827, 0.5502575635910034, 0.6355831623077393, 0.6619997620582581, 0.6851142644882202, 0.7045304179191589, 0.7013604640960693, 0.7156254053115845, 0.7342491149902344, 0.7333245277404785, 0.7483819723129272, 0.750231146812439, 0.7580240368843079, 0.7611940503120422, 0.7744023203849792, 0.7796856164932251, 0.7905164361000061, 0.7918372750282288, 0.793422281742096, 0.7971205711364746, 0.8084797263145447, 0.8057059645652771, 0.8120459914207458, 0.8177255392074585, 0.8140271902084351, 0.8148196935653687, 0.8222163319587708, 0.8206313848495483, 0.8278959393501282, 0.8325188159942627, 0.8325188159942627, 0.841500461101532, 0.8466516733169556, 0.8418967127799988, 0.8481045961380005, 0.8512746095657349, 0.8536521196365356, 0.8508783578872681, 0.8504821062088013, 0.8595958352088928, 0.860652506351471, 0.8621054291725159, 0.8646149635314941, 0.8656716346740723, 0.8688416481018066, 0.8622375130653381, 0.8665962219238281, 0.8730682730674744, 0.8726720213890076, 0.8734645247459412, 0.872407853603363, 0.8750495314598083, 0.8804649114608765, 0.8812574148178101], "val_loss": [2.245509147644043, 2.0166397094726562, 1.1458061933517456, 0.8902966380119324, 0.7654355764389038, 0.6937693953514099, 0.6689098477363586, 0.6536318063735962, 0.638059675693512, 0.619749128818512, 0.5829593539237976, 0.5570160150527954, 0.5466898083686829, 0.5440096259117126, 0.5322200655937195, 0.5318065881729126, 0.5175408124923706, 0.5063930153846741, 0.5056529641151428, 0.4919852018356323, 0.48352962732315063, 0.48119327425956726, 0.4901757836341858, 0.4767698645591736, 0.47320252656936646, 0.4744825065135956, 0.4608316719532013, 0.45130541920661926, 0.44381868839263916, 0.46187451481819153, 0.4333668351173401, 0.43045443296432495, 0.41384074091911316, 0.43389183282852173, 0.41929835081100464, 0.4265149235725403, 0.4182085692882538, 0.4251929521560669, 0.4102335274219513, 0.4137743413448334, 0.41943585872650146, 0.4129236340522766, 0.4146169424057007, 0.4071257710456848, 0.41612508893013, 0.41746190190315247, 0.4018546938896179, 0.4008600115776062, 0.4181992709636688, 0.4282912611961365, 0.414090096950531, 0.4010733366012573, 0.40342357754707336, 0.42106518149375916, 0.42837995290756226, 0.43960458040237427], "val_accuracy": [0.4283333420753479, 0.4596666693687439, 0.6460000276565552, 0.6833333373069763, 0.7303333282470703, 0.7483333349227905, 0.7603333592414856, 0.7663333415985107, 0.7513333559036255, 0.7723333239555359, 0.7730000019073486, 0.7829999923706055, 0.7866666913032532, 0.796999990940094, 0.7866666913032532, 0.7976666688919067, 0.8063333630561829, 0.8106666803359985, 0.8076666593551636, 0.8133333325386047, 0.8176666498184204, 0.8206666707992554, 0.8256666660308838, 0.8366666436195374, 0.8306666612625122, 0.8360000252723694, 0.8389999866485596, 0.8426666855812073, 0.8489999771118164, 0.8473333120346069, 0.8506666421890259, 0.8489999771118164, 0.8539999723434448, 0.8576666712760925, 0.8550000190734863, 0.8523333072662354, 0.8619999885559082, 0.8613333106040955, 0.8586666584014893, 0.8640000224113464, 0.8646666407585144, 0.8659999966621399, 0.862666666507721, 0.8683333396911621, 0.8673333525657654, 0.8653333187103271, 0.8676666617393494, 0.8713333606719971, 0.8730000257492065, 0.8663333058357239, 0.8736666440963745, 0.8709999918937683, 0.8693333268165588, 0.8683333396911621, 0.8700000047683716, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27, 83], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 2, 4], [37], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 4, 3, 6, 5], [0, 0, 4, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 6, 3, 3, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303410768508911, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3, 2, 8, 7, 7, 0], [0, 0, 0, 3, 6, 6], [0, 58, 86], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 15, 9, 6, 3, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), sigma)), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [7.461982727050781, 57.920108795166016, 200.8953857421875, 482.524658203125, 1000.6526489257812, 1792.2276611328125], "accuracy": [0.1018359512090683, 0.10117553919553757, 0.10368511080741882, 0.10593052208423615, 0.09985470771789551, 0.09800554811954498], "val_loss": [20.332805633544922, 94.82664489746094, 262.2241516113281, 570.552978515625, 1067.589111328125, 1801.544677734375], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303745746612549, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 9, 4, 3], [0, 0, 5], [0, 58], [0, 1, 0], [3, 9], [1], [0]], "fitness": -0.0860000029206276, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 2, 2, 0, 1, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309880256652832, 2.3090667724609375, 2.3084659576416016, 2.3095414638519287, 2.307769536972046, 2.3102974891662598], "accuracy": [0.0952318087220192, 0.09536388516426086, 0.08942015469074249, 0.0944393053650856, 0.09734513610601425, 0.08902391046285629], "val_loss": [2.3091917037963867, 2.3091917037963867, 2.3091917037963867, 2.3091917037963867, 2.3091917037963867, 2.3091917037963867], "val_accuracy": [0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122]}}]