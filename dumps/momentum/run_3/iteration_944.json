[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924001216888428, 2.1861953735351562, 1.7624138593673706, 1.3607404232025146, 1.0667155981063843, 0.9016110897064209, 0.8520680665969849, 0.831790030002594, 0.7777172923088074, 0.7490878105163574, 0.7158116698265076, 0.695671021938324, 0.6562027335166931, 0.6334532499313354, 0.6221451759338379, 0.5935682654380798, 0.5952000617980957, 0.5739384889602661, 0.5609675645828247, 0.5657191276550293, 0.5410598516464233, 0.5246456265449524, 0.5192628502845764, 0.5168222188949585, 0.49302971363067627, 0.4889398515224457, 0.48226186633110046, 0.48001477122306824, 0.4656536281108856, 0.46119117736816406, 0.45184385776519775, 0.4413833022117615, 0.42984193563461304, 0.431728720664978, 0.41879191994667053, 0.41503822803497314, 0.40661054849624634, 0.39488542079925537, 0.3919316828250885, 0.38068684935569763, 0.37926366925239563, 0.363978773355484, 0.35489484667778015, 0.3578256070613861, 0.3465723991394043, 0.34216180443763733, 0.34105584025382996, 0.3354227542877197, 0.33182868361473083, 0.32601627707481384, 0.3218977153301239, 0.32088378071784973, 0.30431243777275085, 0.3046149015426636, 0.2872501611709595, 0.2918471097946167, 0.2894953489303589, 0.2776479721069336, 0.29432931542396545, 0.2898891270160675, 0.2755729556083679, 0.2842119336128235, 0.27727067470550537, 0.2762920558452606, 0.26091763377189636], "accuracy": [0.12679962813854218, 0.33984941244125366, 0.4361378848552704, 0.5428609251976013, 0.6341302394866943, 0.6720380187034607, 0.6859067678451538, 0.6833971738815308, 0.7049266695976257, 0.7073041796684265, 0.7257958054542542, 0.7232862114906311, 0.7429665923118591, 0.7577598690986633, 0.7543256878852844, 0.765949010848999, 0.7771760821342468, 0.7769119143486023, 0.7791573405265808, 0.7866860628128052, 0.7903843522071838, 0.7969884872436523, 0.8009510040283203, 0.8039889335632324, 0.8053097128868103, 0.8084797263145447, 0.81112140417099, 0.8137630224227905, 0.8162726163864136, 0.8166688680648804, 0.8214238286018372, 0.8302733898162842, 0.8310658931732178, 0.8370096683502197, 0.8392550349235535, 0.8441421389579773, 0.8421608805656433, 0.8473120927810669, 0.846387505531311, 0.8553691506385803, 0.8549728989601135, 0.8595958352088928, 0.8636903762817383, 0.8618412613868713, 0.8654074668884277, 0.8696341514587402, 0.8683133125305176, 0.8689737319946289, 0.8730682730674744, 0.8779553771018982, 0.8766345381736755, 0.8754457831382751, 0.8842953443527222, 0.8819178342819214, 0.8919561505317688, 0.887201189994812, 0.8864086866378784, 0.8902390599250793, 0.885219931602478, 0.8844274282455444, 0.8883898854255676, 0.8928807377815247, 0.8906353116035461, 0.8901069760322571, 0.8942015767097473], "val_loss": [2.245849847793579, 2.0141515731811523, 1.12749445438385, 0.8846967816352844, 0.7819164991378784, 0.7049335837364197, 0.6728318929672241, 0.6638160943984985, 0.6409052610397339, 0.6302191615104675, 0.573542058467865, 0.5546035766601562, 0.5428872108459473, 0.5206228494644165, 0.5255465507507324, 0.5128120183944702, 0.49869412183761597, 0.5035436153411865, 0.4809816777706146, 0.47580695152282715, 0.4830755293369293, 0.47174492478370667, 0.47201359272003174, 0.461592435836792, 0.45732471346855164, 0.4496004283428192, 0.45684272050857544, 0.43848860263824463, 0.4302053153514862, 0.42246440052986145, 0.415850430727005, 0.41840147972106934, 0.42160457372665405, 0.41150200366973877, 0.4050293266773224, 0.40519535541534424, 0.3954234719276428, 0.39099520444869995, 0.38854679465293884, 0.3889009654521942, 0.37930411100387573, 0.37944018840789795, 0.3806779086589813, 0.3749007284641266, 0.3725769817829132, 0.37806379795074463, 0.36238786578178406, 0.3532046675682068, 0.36112189292907715, 0.3662579357624054, 0.3714534640312195, 0.3788483738899231, 0.36554938554763794, 0.3698994815349579, 0.3892287611961365, 0.38498327136039734, 0.3795841336250305, 0.4027951955795288, 0.42196670174598694, 0.43084296584129333, 0.42885369062423706, 0.4123551547527313, 0.4036916494369507, 0.40002572536468506, 0.4038894474506378], "val_accuracy": [0.41100001335144043, 0.45500001311302185, 0.6460000276565552, 0.6933333277702332, 0.7256666421890259, 0.7429999709129333, 0.7486666440963745, 0.7519999742507935, 0.7490000128746033, 0.7540000081062317, 0.7793333530426025, 0.7793333530426025, 0.7906666398048401, 0.8013333082199097, 0.7976666688919067, 0.8029999732971191, 0.8083333373069763, 0.8050000071525574, 0.812333345413208, 0.8243333101272583, 0.8149999976158142, 0.8213333487510681, 0.8206666707992554, 0.8256666660308838, 0.8373333215713501, 0.8376666903495789, 0.8336666822433472, 0.8426666855812073, 0.8443333506584167, 0.8416666388511658, 0.8519999980926514, 0.8510000109672546, 0.8483333587646484, 0.8579999804496765, 0.859333336353302, 0.8643333315849304, 0.8583333492279053, 0.862666666507721, 0.8676666617393494, 0.8700000047683716, 0.8666666746139526, 0.8673333525657654, 0.8696666955947876, 0.8703333139419556, 0.8709999918937683, 0.8666666746139526, 0.8740000128746033, 0.8730000257492065, 0.871666669845581, 0.8669999837875366, 0.8769999742507935, 0.8726666569709778, 0.874666690826416, 0.8773333430290222, 0.8763333559036255, 0.8759999871253967, 0.8803333044052124, 0.8830000162124634, 0.8806666731834412, 0.8856666684150696, 0.8803333044052124, 0.8809999823570251, 0.8836666941642761, 0.8776666522026062, 0.8796666860580444]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 1, 3, 1, 3], [0, 0, 3, 0, 2], [80, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 2, 0], [0, 3, 3, 4], [0], [0, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3032405376434326, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 2, 1, 1, 1, 8, 4, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 9}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [7, 4, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 64], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 2, 1, 0, 8], [0, 3, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 48], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 10, 6, 4, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.negative(grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 1, 7, 1, 5, 4, 8, 6, 7, 4, 5, 2, 4, 1, 4, 3, 3, 2, 9], [3, 0, 2, 1, 0, 3, 1, 1, 3, 1, 2, 2, 2, 2, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 5, 2], [0, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [26, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 19, 15, 3, 3, 2, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.square(alpha), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, alpha), tf.math.pow(tf.math.multiply(alpha, grad), tf.math.multiply(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))))), grad), grad))), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 3, 1, 3], [0, 2, 1, 2, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 9, 2], [0, 4, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 2, 2, 0, 1, 2, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3086624145507812, 2.3104662895202637, 2.30997896194458, 2.3093600273132324, 2.3102126121520996, 2.309858798980713], "accuracy": [0.10117553919553757, 0.09245806187391281, 0.09179764986038208, 0.09615638852119446, 0.09338264167308807, 0.09576013684272766], "val_loss": [2.3090434074401855, 2.3090434074401855, 2.3090434074401855, 2.3090434074401855, 2.3090434074401855, 2.3090434074401855], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]