[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935681343078613, 2.1906368732452393, 1.7807610034942627, 1.354093313217163, 1.1053301095962524, 0.9404116272926331, 0.8551350831985474, 0.821251630783081, 0.7680315375328064, 0.7548159956932068, 0.7099679708480835, 0.6964966654777527, 0.6766356825828552, 0.6384313106536865, 0.6260706186294556, 0.6320178508758545, 0.6076978445053101, 0.5766561627388, 0.5927426218986511, 0.559573233127594, 0.56830894947052, 0.5478407144546509, 0.5442097783088684, 0.5210927724838257, 0.5167989730834961, 0.5015172958374023, 0.48100584745407104, 0.4768696427345276, 0.46903231739997864, 0.47125035524368286, 0.45482301712036133, 0.4444483816623688, 0.4279429614543915, 0.4247608184814453, 0.4231651723384857, 0.4117904007434845, 0.41431719064712524, 0.39867910742759705, 0.39936232566833496, 0.39556437730789185, 0.3744489252567291, 0.3847290575504303, 0.38148438930511475, 0.38051262497901917], "accuracy": [0.1298375427722931, 0.33483028411865234, 0.4297979176044464, 0.5435213446617126, 0.6317527294158936, 0.6551313996315002, 0.6886804699897766, 0.6980583667755127, 0.7051908373832703, 0.7062475085258484, 0.7308149337768555, 0.7281733155250549, 0.7347774505615234, 0.7576277852058411, 0.752212405204773, 0.7544577717781067, 0.7692511081695557, 0.7765156626701355, 0.7732135653495789, 0.7814027070999146, 0.7814027070999146, 0.7921014428138733, 0.7927618622779846, 0.8025360107421875, 0.8016114234924316, 0.8127063512802124, 0.8164047002792358, 0.8099326491355896, 0.822348415851593, 0.8210275769233704, 0.8257825970649719, 0.8294808864593506, 0.8348963260650635, 0.8323867321014404, 0.8355567455291748, 0.8399154543876648, 0.8413683772087097, 0.8475762605667114, 0.8488970994949341, 0.8512746095657349, 0.859199583530426, 0.848368763923645, 0.8512746095657349, 0.8576145768165588], "val_loss": [2.247141122817993, 2.022200107574463, 1.1422938108444214, 0.8719834089279175, 0.7785933613777161, 0.7228963375091553, 0.6599037051200867, 0.6343563795089722, 0.6284051537513733, 0.608142077922821, 0.5814921259880066, 0.567899227142334, 0.5565354228019714, 0.544879674911499, 0.5384923815727234, 0.5267313122749329, 0.5289715528488159, 0.5132318735122681, 0.516593873500824, 0.509132981300354, 0.4948926270008087, 0.49650996923446655, 0.4802572429180145, 0.4818938076496124, 0.4614362120628357, 0.45707520842552185, 0.44880008697509766, 0.4415191113948822, 0.43122443556785583, 0.43502572178840637, 0.42211422324180603, 0.41926729679107666, 0.41458797454833984, 0.4039335250854492, 0.4024431109428406, 0.3973526656627655, 0.3971197009086609, 0.401243656873703, 0.39988410472869873, 0.39567631483078003, 0.4038912057876587, 0.39377179741859436, 0.3887011408805847, 0.40061238408088684], "val_accuracy": [0.4246666729450226, 0.4580000042915344, 0.6466666460037231, 0.6746666431427002, 0.7026666402816772, 0.718999981880188, 0.7513333559036255, 0.746666669845581, 0.7396666407585144, 0.7743333578109741, 0.765333354473114, 0.7693333625793457, 0.7889999747276306, 0.7749999761581421, 0.7870000004768372, 0.7923333048820496, 0.7919999957084656, 0.812333345413208, 0.8003333210945129, 0.8076666593551636, 0.809333324432373, 0.812333345413208, 0.8246666789054871, 0.8240000009536743, 0.8320000171661377, 0.8309999704360962, 0.8366666436195374, 0.8389999866485596, 0.8463333249092102, 0.847000002861023, 0.8450000286102295, 0.8479999899864197, 0.8539999723434448, 0.8529999852180481, 0.8576666712760925, 0.8583333492279053, 0.859666645526886, 0.8636666536331177, 0.8676666617393494, 0.862666666507721, 0.8659999966621399, 0.862666666507721, 0.8643333315849304, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 7, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 1], [40], [1, 0, 1, 0, 1, 0, 1], [9, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1124593024.0, 21407209472.0, 99819798528.0, 280209620992.0, 592538042368.0, 1091425533952.0], "accuracy": [0.10091137140989304, 0.09906221181154251, 0.10355303436517715, 0.09655263274908066, 0.10276053100824356, 0.10302469879388809], "val_loss": [5245788672.0, 41961213952.0, 141613596672.0, 335668346880.0, 655596257280.0, 1132863553536.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 3, 8, 3, 6, 6, 5, 3, 7, 8, 6, 6, 6, 4, 7, 3, 1, 4, 0, 2, 6, 3, 4, 4, 1, 7, 7, 4, 3, 4, 6, 9, 3, 5, 2, 3, 8, 4, 8, 4, 8], [0, 0, 3, 0, 2, 2, 3, 0, 2, 0, 0, 1, 3, 0, 3, 2, 1, 1, 1, 0, 2, 1, 3, 1, 0, 0, 0, 3, 0, 0, 2, 2], [83, 99, 27, 98, 64, 57, 43, 52, 68, 11, 41, 5, 63, 4], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [1, 0, 2], [0, 58], [0, 0, 1, 0], [0, 2, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 74, 42, 32, 14, 6, 3, 3, 1, 7, 4, 3, 1, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, grad))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, tf.math.multiply(tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.multiply(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(alpha, alpha))), alpha))), tf.math.add(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(alpha, grad)), alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 2, 2, 4], [3, 3, 4, 4, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 5, 5, 0, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.add(grad, tf.math.pow(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035755157470703, 3.0462732315063477, 288.7692565917969, 72290.96875, 18799962.0, 4954123776.0], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3033010959625244, 12.203773498535156, 2721.527587890625, 694931.375, 177899216.0, 45542199296.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [9, 8, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1, 0], [4, 1, 1, 1, 9], [0, 3, 1, 0], [0, 36, 13], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [9], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 3, 5, 3, 2, 2, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3102378845214844, 2.310436248779297, 2.309508800506592, 2.310298442840576, 2.309288740158081, 2.308631420135498], "accuracy": [0.0948355570435524, 0.09457138925790787, 0.0940430611371994, 0.09272222965955734, 0.08928807079792023, 0.0940430611371994], "val_loss": [2.309407949447632, 2.309407949447632, 2.309407949447632, 2.309407949447632, 2.309407949447632, 2.309407949447632], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]