[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941229343414307, 2.1938819885253906, 1.7884244918823242, 1.3396614789962769, 1.0836094617843628, 0.9398035407066345, 0.8544273972511292, 0.8242715001106262, 0.7603240013122559, 0.7325721979141235, 0.6953654885292053, 0.6728653907775879, 0.6550278067588806, 0.6188022494316101, 0.6176405549049377, 0.5877962112426758, 0.5695870518684387, 0.5768401622772217, 0.5587292909622192, 0.5408468842506409, 0.5320782661437988, 0.5186452269554138, 0.5127851963043213, 0.5058104991912842, 0.4866795539855957, 0.4995526373386383, 0.4836147725582123, 0.47049668431282043, 0.468660444021225, 0.4391329288482666, 0.46298548579216003, 0.4380298852920532, 0.42571699619293213, 0.4212777614593506, 0.40826117992401123, 0.40785473585128784, 0.3989408314228058, 0.3889563977718353, 0.38593143224716187, 0.3757984936237335, 0.38248956203460693, 0.3726896047592163, 0.37104490399360657, 0.3650910258293152, 0.34728744626045227], "accuracy": [0.12574297189712524, 0.31924447417259216, 0.4231937527656555, 0.5408796668052673, 0.6297714710235596, 0.6498481035232544, 0.6893408894538879, 0.6977941989898682, 0.6993792057037354, 0.7162858247756958, 0.7376832365989685, 0.7411174178123474, 0.7497028112411499, 0.7638356685638428, 0.7582882046699524, 0.7750627398490906, 0.7861577272415161, 0.7816668748855591, 0.7885351777076721, 0.7923656105995178, 0.7927618622779846, 0.7997622489929199, 0.8096684813499451, 0.8026680946350098, 0.8080834746360779, 0.806630551815033, 0.8164047002792358, 0.8212917447090149, 0.8189142942428589, 0.8269713521003723, 0.8293488025665283, 0.832650899887085, 0.8335754871368408, 0.8334434032440186, 0.8391229510307312, 0.8413683772087097, 0.8514066934585571, 0.8479725122451782, 0.8511425256729126, 0.8557654023170471, 0.8533879518508911, 0.8506141901016235, 0.8562937378883362, 0.8580108284950256, 0.8693699836730957], "val_loss": [2.247278928756714, 2.030846357345581, 1.1662633419036865, 0.9091839790344238, 0.7820788025856018, 0.7363949418067932, 0.6978636980056763, 0.670070469379425, 0.663270890712738, 0.6148130893707275, 0.571727454662323, 0.5655272006988525, 0.5357133746147156, 0.5350595712661743, 0.5362173914909363, 0.5312195420265198, 0.5183889269828796, 0.5080763697624207, 0.49870777130126953, 0.5054973363876343, 0.4979408085346222, 0.4859268069267273, 0.47255659103393555, 0.4767027199268341, 0.47674793004989624, 0.4711592495441437, 0.4558785855770111, 0.438100665807724, 0.4278290867805481, 0.46541500091552734, 0.4377179443836212, 0.42220568656921387, 0.4248916506767273, 0.42101746797561646, 0.41428568959236145, 0.405436635017395, 0.411686509847641, 0.4134107530117035, 0.39394888281822205, 0.3929319679737091, 0.39909473061561584, 0.4017925262451172, 0.4003092348575592, 0.40030521154403687, 0.40380582213401794], "val_accuracy": [0.41966667771339417, 0.4476666748523712, 0.6493333578109741, 0.6886666417121887, 0.7149999737739563, 0.7269999980926514, 0.722000002861023, 0.7386666536331177, 0.734666645526886, 0.7519999742507935, 0.7753333449363708, 0.7760000228881836, 0.7856666445732117, 0.7893333435058594, 0.7900000214576721, 0.7896666526794434, 0.7893333435058594, 0.7933333516120911, 0.7983333468437195, 0.8059999942779541, 0.8056666851043701, 0.8076666593551636, 0.8180000185966492, 0.8146666884422302, 0.8203333616256714, 0.8209999799728394, 0.8320000171661377, 0.8373333215713501, 0.8426666855812073, 0.8379999995231628, 0.8413333296775818, 0.8453333377838135, 0.8423333168029785, 0.8510000109672546, 0.8553333282470703, 0.8519999980926514, 0.8556666374206543, 0.8583333492279053, 0.8603333234786987, 0.8663333058357239, 0.8646666407585144, 0.862666666507721, 0.8619999885559082, 0.8643333315849304, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 2, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 19], [0, 1], [0], [1], [0]], "fitness": -0.8325714468955994, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934958934783936, 2.1894752979278564, 1.7712546586990356, 1.3462626934051514, 1.0818750858306885, 0.9242163300514221, 0.8517134189605713, 0.8050360679626465, 0.7696545720100403, 0.7452306151390076, 0.6983909010887146, 0.6929207444190979, 0.6706293821334839, 0.6376736164093018, 0.6317530274391174, 0.6023861765861511, 0.5831502676010132, 0.5722517371177673, 0.5622037649154663, 0.553676187992096, 0.5391227602958679, 0.5347527265548706, 0.5186349153518677, 0.5063718557357788, 0.4985272288322449, 0.49076300859451294, 0.47963032126426697, 0.4695528447628021, 0.46435555815696716, 0.4615049660205841, 0.4513152539730072, 0.4385502338409424, 0.4402591288089752, 0.43048328161239624, 0.41377049684524536, 0.3993939459323883, 0.3965926170349121, 0.3834581971168518, 0.38049623370170593, 0.37628671526908875, 0.3785792291164398, 0.3599075675010681, 0.3660789728164673, 0.36279407143592834, 0.34700706601142883, 0.34611383080482483, 0.3387157917022705, 0.34191444516181946, 0.3328361511230469], "accuracy": [0.12561088800430298, 0.3265090584754944, 0.43785497546195984, 0.5499933958053589, 0.6280544400215149, 0.6682076454162598, 0.6952846646308899, 0.7022850513458252, 0.707040011882782, 0.7154933214187622, 0.7296261787414551, 0.7368907928466797, 0.7391361594200134, 0.7582882046699524, 0.7576277852058411, 0.7664773464202881, 0.787082314491272, 0.7890635132789612, 0.7872143983840942, 0.7889314293861389, 0.787082314491272, 0.791969358921051, 0.8049134612083435, 0.8109893202781677, 0.8138951063156128, 0.8127063512802124, 0.8150838613510132, 0.8181217908859253, 0.8182538747787476, 0.8231409192085266, 0.8260467648506165, 0.8309338092803955, 0.8301413059234619, 0.832650899887085, 0.8454629778862, 0.850350022315979, 0.8514066934585571, 0.8553691506385803, 0.8568220734596252, 0.8544445633888245, 0.8605204224586487, 0.8613129258155823, 0.860652506351471, 0.8594637513160706, 0.8628978729248047, 0.8659358024597168, 0.8735966086387634, 0.8714832663536072, 0.8716153502464294], "val_loss": [2.2465384006500244, 2.017397165298462, 1.1306803226470947, 0.855278491973877, 0.7627114057540894, 0.7139184474945068, 0.6857184767723083, 0.6707650423049927, 0.639143705368042, 0.6052159667015076, 0.5956044793128967, 0.5672225952148438, 0.5441393256187439, 0.5468679070472717, 0.5482046008110046, 0.5244874954223633, 0.507741391658783, 0.5204679369926453, 0.5114432573318481, 0.5041425228118896, 0.49448299407958984, 0.49216195940971375, 0.4828015863895416, 0.4721946716308594, 0.4735856056213379, 0.47031062841415405, 0.46241891384124756, 0.4591699242591858, 0.45698243379592896, 0.4619876444339752, 0.46080952882766724, 0.4345695674419403, 0.43277597427368164, 0.439444363117218, 0.4334825873374939, 0.4270941913127899, 0.41879040002822876, 0.4135933518409729, 0.4113924205303192, 0.4233418107032776, 0.42226624488830566, 0.4181298017501831, 0.4195973575115204, 0.4152999818325043, 0.4106111526489258, 0.4204182028770447, 0.43989241123199463, 0.4480677843093872, 0.43910855054855347], "val_accuracy": [0.4320000112056732, 0.4716666638851166, 0.653333306312561, 0.7106666564941406, 0.7366666793823242, 0.7393333315849304, 0.753333330154419, 0.7553333044052124, 0.7633333206176758, 0.7689999938011169, 0.768666684627533, 0.7816666960716248, 0.7919999957084656, 0.7889999747276306, 0.8003333210945129, 0.8033333420753479, 0.812666654586792, 0.8193333148956299, 0.8130000233650208, 0.8116666674613953, 0.8296666741371155, 0.8293333053588867, 0.8180000185966492, 0.8339999914169312, 0.8349999785423279, 0.8360000252723694, 0.8423333168029785, 0.8336666822433472, 0.8410000205039978, 0.8353333473205566, 0.8309999704360962, 0.8533333539962769, 0.8479999899864197, 0.8516666889190674, 0.8579999804496765, 0.856333315372467, 0.8600000143051147, 0.8603333234786987, 0.8640000224113464, 0.8646666407585144, 0.8663333058357239, 0.8636666536331177, 0.8690000176429749, 0.8696666955947876, 0.8673333525657654, 0.8679999709129333, 0.8616666793823242, 0.8633333444595337, 0.8610000014305115]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 0, 1, 1], [6, 0, 4, 2], [0, 0, 4, 3], [7, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 6, 3, 3, 1, 8, 4, 4, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303680181503296, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 1], [7, 5, 3, 7], [0, 3, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 8, 4, 4, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 1, 3, 5, 2], [1, 0, 1, 0, 0], [35, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 2, 8], [0, 3, 3, 0], [18, 83], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 3, 4, 3, 9, 3, 1, 0, 7, 2, 8, 3, 8], [1, 7, 5, 6, 5, 1, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 8, 4, 4, 2, 7, 4, 3, 2, 21, 13, 8, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), grad)), tf.math.multiply(grad, alpha)), grad)), tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]