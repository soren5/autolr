[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293961524963379, 2.1879560947418213, 1.7739393711090088, 1.3709070682525635, 1.0826020240783691, 0.92225182056427, 0.8541887402534485, 0.8276393413543701, 0.7734955549240112, 0.7439058423042297, 0.703963041305542, 0.683513879776001, 0.6593770384788513, 0.6320956349372864, 0.6142434477806091, 0.6185829043388367, 0.588823139667511, 0.5825633406639099, 0.5537015199661255, 0.5557303428649902, 0.5418073534965515, 0.5232921242713928, 0.5063751339912415, 0.5060282945632935, 0.49684587121009827, 0.49012821912765503, 0.47986066341400146, 0.46514594554901123, 0.4620491564273834, 0.455079048871994, 0.45150598883628845, 0.4355229437351227, 0.4232673943042755, 0.4243239462375641, 0.41415804624557495, 0.39843329787254333, 0.3973207175731659, 0.377269983291626, 0.3806535303592682, 0.37647736072540283, 0.37152549624443054, 0.3607064187526703, 0.3578830361366272, 0.3562200963497162, 0.35486623644828796, 0.34854987263679504, 0.3409419655799866, 0.3328838348388672, 0.34199368953704834, 0.32866692543029785, 0.32548972964286804], "accuracy": [0.13181878626346588, 0.3255844712257385, 0.4255712628364563, 0.538237988948822, 0.622639000415802, 0.6646413803100586, 0.6861709356307983, 0.6959450244903564, 0.7021529674530029, 0.720380425453186, 0.7301545143127441, 0.7401928305625916, 0.7491744756698608, 0.7618544697761536, 0.7685906887054443, 0.765949010848999, 0.7774402499198914, 0.7794214487075806, 0.7917051911354065, 0.7847048044204712, 0.7840443849563599, 0.7989697456359863, 0.8043851256370544, 0.8105930685997009, 0.8105930685997009, 0.8146876096725464, 0.8125742673873901, 0.8170651197433472, 0.8231409192085266, 0.8264430165290833, 0.8244617581367493, 0.8338396549224854, 0.8385946154594421, 0.8356888294219971, 0.8425571322441101, 0.844010055065155, 0.8499537706375122, 0.8578787446022034, 0.8564258217811584, 0.858671247959137, 0.8590674996376038, 0.860652506351471, 0.8590674996376038, 0.8585391640663147, 0.863558292388916, 0.8607845902442932, 0.8659358024597168, 0.8659358024597168, 0.8663320541381836, 0.8714832663536072, 0.8677849769592285], "val_loss": [2.245682716369629, 2.0187370777130127, 1.1352580785751343, 0.8890756964683533, 0.7744949460029602, 0.7012835144996643, 0.6913012862205505, 0.6664324998855591, 0.6519084572792053, 0.6202196478843689, 0.583280622959137, 0.5635493397712708, 0.5539624094963074, 0.5455436110496521, 0.5375510454177856, 0.5350285768508911, 0.5284949541091919, 0.5197956562042236, 0.5178860425949097, 0.5091598629951477, 0.49906831979751587, 0.49934813380241394, 0.4947967231273651, 0.485764741897583, 0.48061680793762207, 0.47304829955101013, 0.47150781750679016, 0.4655027687549591, 0.4661104381084442, 0.4474838078022003, 0.45113837718963623, 0.445479154586792, 0.45484253764152527, 0.44116756319999695, 0.436312735080719, 0.42973193526268005, 0.4430750608444214, 0.4331301152706146, 0.43648266792297363, 0.4231422543525696, 0.44176164269447327, 0.4175909757614136, 0.42278459668159485, 0.44143229722976685, 0.4529118537902832, 0.4221585988998413, 0.4209214746952057, 0.4435756802558899, 0.45463183522224426, 0.437843918800354, 0.4314301013946533], "val_accuracy": [0.41999998688697815, 0.4493333399295807, 0.6466666460037231, 0.6956666707992554, 0.7096666693687439, 0.7306666374206543, 0.7416666746139526, 0.746999979019165, 0.750333309173584, 0.7639999985694885, 0.7710000276565552, 0.7820000052452087, 0.7916666865348816, 0.7976666688919067, 0.7923333048820496, 0.7933333516120911, 0.8023333549499512, 0.8059999942779541, 0.8066666722297668, 0.8019999861717224, 0.8023333549499512, 0.8196666836738586, 0.8206666707992554, 0.8256666660308838, 0.8266666531562805, 0.8209999799728394, 0.8246666789054871, 0.8323333263397217, 0.8306666612625122, 0.840666651725769, 0.8360000252723694, 0.8333333134651184, 0.8379999995231628, 0.843999981880188, 0.8413333296775818, 0.8479999899864197, 0.8456666469573975, 0.8483333587646484, 0.8473333120346069, 0.8533333539962769, 0.8479999899864197, 0.8550000190734863, 0.8519999980926514, 0.8583333492279053, 0.8576666712760925, 0.8610000014305115, 0.8553333282470703, 0.8486666679382324, 0.8556666374206543, 0.8533333539962769, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 35, 27], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 2, 1, 0, 6, 4, 7, 5, 0, 7, 1, 9], [0, 3, 3, 3, 0, 1, 2, 3], [0, 50, 65], [0, 0, 0, 0, 1, 1, 1], [9, 0, 0, 3], [0, 0, 4], [59, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 13, 8, 3, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha))), beta))))), tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303591728210449, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 4, 1, 3], [0, 0, 3, 1, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [4, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0], [0, 1, 2, 9], [2, 3, 3], [0], [0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 0], [0, 0, 4], [83, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304111957550049, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5, 2, 8], [0, 0, 3, 0, 2, 2], [83, 99, 27], [0, 1, 1, 1, 1, 1], [2, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 8], [0, 0, 4], [0, 58], [0, 0, 0, 0, 1, 1, 0, 1, 0], [3, 4, 0, 7, 5, 9], [1, 7, 5], [0]], "fitness": -0.09514285624027252, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.square(grad)), tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309316635131836, 2.3098390102386475, 2.309739828109741, 2.310028314590454, 2.309542179107666, 2.3093812465667725], "accuracy": [0.09166556596755981, 0.08994849026203156, 0.09219389408826828, 0.08889182657003403, 0.09391097724437714, 0.09351472556591034], "val_loss": [2.3090403079986572, 2.3090403079986572, 2.3090403079986572, 2.3090403079986572, 2.3090403079986572, 2.3090403079986572], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 14, 8, 6, 3, 3, 1, 2, 1, 6, 4, 2, 2, 9, 6, 3, 1], "tree_depth": 14}]