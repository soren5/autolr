[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292210102081299, 2.1866588592529297, 1.766102910041809, 1.3637410402297974, 1.1063721179962158, 0.9243221282958984, 0.8630074858665466, 0.8051626682281494, 0.7797458171844482, 0.757876455783844, 0.7212037444114685, 0.6934763193130493, 0.6695910096168518, 0.6371955275535583, 0.6213671565055847, 0.5967933535575867, 0.5810601115226746, 0.5645434856414795, 0.5699296593666077, 0.5485711097717285, 0.5349918007850647, 0.5188029408454895, 0.5191103219985962, 0.5016507506370544, 0.4906201660633087, 0.4877292513847351, 0.4676516652107239, 0.47137507796287537, 0.4571150243282318, 0.4580948054790497, 0.4433569610118866, 0.42786186933517456, 0.4246232211589813], "accuracy": [0.12732796370983124, 0.3401135802268982, 0.4291374981403351, 0.5370492935180664, 0.6223748326301575, 0.6556597352027893, 0.6947563290596008, 0.7103421092033386, 0.6996433734893799, 0.7107383608818054, 0.7246070504188538, 0.741909921169281, 0.750231146812439, 0.7606657147407532, 0.7637035846710205, 0.7757231593132019, 0.778232753276825, 0.7906485199928284, 0.7841764688491821, 0.796328067779541, 0.7968564033508301, 0.8070268034934998, 0.804649293422699, 0.8057059645652771, 0.8133667707443237, 0.8132346868515015, 0.8190463781356812, 0.8224804997444153, 0.8297450542449951, 0.8271034359931946, 0.8301413059234619, 0.8401796221733093, 0.8358209133148193], "val_loss": [2.246173620223999, 2.018484115600586, 1.135515809059143, 0.8343844413757324, 0.7954028248786926, 0.7035426497459412, 0.6774875521659851, 0.6511529684066772, 0.6654542088508606, 0.6175232529640198, 0.5970999598503113, 0.5598776936531067, 0.558928370475769, 0.5367249250411987, 0.535695493221283, 0.5230454802513123, 0.5209211707115173, 0.5066614747047424, 0.50179123878479, 0.48408082127571106, 0.48108312487602234, 0.4742436110973358, 0.47304239869117737, 0.46690577268600464, 0.46294718980789185, 0.44846540689468384, 0.4508761465549469, 0.4542687237262726, 0.44369587302207947, 0.4449009597301483, 0.441324919462204, 0.4343453645706177, 0.4257369935512543], "val_accuracy": [0.41499999165534973, 0.4493333399295807, 0.6589999794960022, 0.7049999833106995, 0.7110000252723694, 0.7310000061988831, 0.7409999966621399, 0.7463333606719971, 0.746999979019165, 0.7720000147819519, 0.7706666588783264, 0.7839999794960022, 0.7996666431427002, 0.796999990940094, 0.7950000166893005, 0.8096666932106018, 0.8103333115577698, 0.8206666707992554, 0.8276666402816772, 0.8363333344459534, 0.8366666436195374, 0.8376666903495789, 0.8379999995231628, 0.8386666774749756, 0.8429999947547913, 0.847000002861023, 0.8523333072662354, 0.8573333621025085, 0.8516666889190674, 0.8503333330154419, 0.8536666631698608, 0.8519999980926514, 0.8573333621025085]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 8], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 4], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 0], [0, 0, 4], [0, 58], [1, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [37762.140625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2114647924900055, 0.10170386731624603, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4212681728.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [9, 4, 3, 9, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 5], [0, 3, 3], [1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [6, 0, 8, 6, 5, 2, 8], [0, 0, 4, 3], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 5, 3, 2, 1, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(grad, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [45964021760.0, 7040017629184.0, 119130204143616.0, 836239863316480.0, 3694829636681728.0, 1.2239048328347648e+16], "accuracy": [0.09959053993225098, 0.09615638852119446, 0.09642054885625839, 0.10196803510189056, 0.10091137140989304, 0.0936468094587326], "val_loss": [471817453568.0, 25437453418496.0, 273044979318784.0, 1488577682735104.0, 5576693448179712.0, 1.6454342907265024e+16], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 7, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 4, 3, 4, 4, 6, 7], [0, 3, 4, 3, 1, 5, 0, 7], [0, 58], [0, 1, 1], [7], [5, 4], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad), tf.math.pow(tf.math.pow(sigma, alpha), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad)", "other_info": {"loss": [154953024.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15638621151447296, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.1844403082374855e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 4, 2, 2, 2, 6, 3, 3, 1, 16, 8, 8, 2, 3, 1, 2, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 2, 1, 0], [0, 0, 1, 0, 2], [83, 7, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 2, 4, 7, 9, 3, 8, 6, 6, 5], [0, 3, 3, 0, 0, 4, 0], [0, 6, 72, 22, 42], [0, 0, 0, 1, 0, 1, 1], [0, 0, 7, 3], [0, 0, 4], [0, 58], [0, 1, 0, 0, 0, 0, 1, 1], [3, 6, 7, 0, 9], [0, 0, 1], [0, 62, 46]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 5, 7, 4, 3, 2, 8, 5, 3, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.309931516647339, 2.309586524963379, 2.3093831539154053, 2.309656858444214, 2.3100905418395996, 2.3094701766967773], "accuracy": [0.09166556596755981, 0.09391097724437714, 0.09153348207473755, 0.09377889335155487, 0.09126931428909302, 0.09272222965955734], "val_loss": [2.3090016841888428, 2.3090016841888428, 2.3090016841888428, 2.3090016841888428, 2.3090016841888428, 2.3090016841888428], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]