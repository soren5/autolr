[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929558753967285, 2.1856179237365723, 1.7474104166030884, 1.3378833532333374, 1.074607253074646, 0.9420862197875977, 0.8385327458381653, 0.8156681060791016, 0.7748253345489502, 0.7345137000083923, 0.7071546912193298, 0.6762261986732483, 0.6440039277076721, 0.6217468976974487, 0.5971778631210327, 0.5911180973052979, 0.575425922870636, 0.578341543674469, 0.5619716048240662, 0.5463826060295105, 0.524725079536438, 0.5228132605552673, 0.5145934820175171, 0.5063676238059998, 0.4859861731529236, 0.4925110638141632, 0.4814649522304535, 0.4685015082359314, 0.45991507172584534, 0.4494785666465759, 0.4382651448249817, 0.4296130836009979, 0.42518508434295654, 0.4296084940433502, 0.42195335030555725, 0.40861284732818604, 0.39952754974365234, 0.39425304532051086, 0.3989304304122925, 0.38489431142807007, 0.3779066205024719], "accuracy": [0.1310262829065323, 0.33760401606559753, 0.44564786553382874, 0.5506538152694702, 0.6322810649871826, 0.6579051613807678, 0.6976621150970459, 0.69673752784729, 0.700171709060669, 0.7140403985977173, 0.7293620109558105, 0.7445515990257263, 0.7561748623847961, 0.767930269241333, 0.7677981853485107, 0.7622507214546204, 0.77677983045578, 0.7765156626701355, 0.7817989587783813, 0.7872143983840942, 0.7976489067077637, 0.7980451583862305, 0.798309326171875, 0.8076872229576111, 0.8133667707443237, 0.8107251524925232, 0.8075551390647888, 0.817989706993103, 0.8202351331710815, 0.8261788487434387, 0.8338396549224854, 0.83119797706604, 0.8360850811004639, 0.8345000743865967, 0.8372738361358643, 0.8417646288871765, 0.8391229510307312, 0.8506141901016235, 0.8450667262077332, 0.8475762605667114, 0.8543124794960022], "val_loss": [2.2455406188964844, 2.0113167762756348, 1.1247764825820923, 0.8820682168006897, 0.8010587692260742, 0.7244834899902344, 0.6840871572494507, 0.6708722114562988, 0.6587038040161133, 0.6343435049057007, 0.5953044295310974, 0.5752277970314026, 0.5649591684341431, 0.5553891658782959, 0.5381966829299927, 0.5319543480873108, 0.5250300168991089, 0.5237839221954346, 0.5178477168083191, 0.5091312527656555, 0.5021103620529175, 0.496743381023407, 0.48311200737953186, 0.47974321246147156, 0.47776156663894653, 0.46400660276412964, 0.4506654441356659, 0.4546898305416107, 0.4545588493347168, 0.4555056095123291, 0.44473767280578613, 0.4520658254623413, 0.44169360399246216, 0.4426034390926361, 0.44306132197380066, 0.4217107892036438, 0.41561609506607056, 0.4261951148509979, 0.4201410412788391, 0.42085587978363037, 0.42499613761901855], "val_accuracy": [0.4116666615009308, 0.47333332896232605, 0.652999997138977, 0.7039999961853027, 0.7206666469573975, 0.7296666502952576, 0.750333309173584, 0.734000027179718, 0.765333354473114, 0.7683333158493042, 0.7753333449363708, 0.7846666574478149, 0.7886666655540466, 0.7916666865348816, 0.7916666865348816, 0.8003333210945129, 0.8080000281333923, 0.8050000071525574, 0.8043333292007446, 0.8066666722297668, 0.8166666626930237, 0.8066666722297668, 0.8183333277702332, 0.8209999799728394, 0.8253333568572998, 0.8163333535194397, 0.8306666612625122, 0.8360000252723694, 0.8356666564941406, 0.8320000171661377, 0.8366666436195374, 0.8393333554267883, 0.8343333601951599, 0.8383333086967468, 0.843999981880188, 0.8516666889190674, 0.8503333330154419, 0.8503333330154419, 0.8443333506584167, 0.8446666598320007, 0.8500000238418579]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [61], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 3, 1, 3, 4, 3, 9, 2, 3, 5, 4, 8, 3, 8, 1, 3, 5, 1, 3, 1, 2, 4, 9], [0, 1, 1, 0, 2, 2, 1, 2, 1, 3, 0, 1, 1, 3, 0, 1], [83, 99, 27, 16, 7, 95], [0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1], [0, 3, 3, 0], [0, 17], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 24, 16, 6, 8, 4, 4, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(alpha, tf.math.pow(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, tf.math.square(grad)), tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, alpha)), tf.math.multiply(tf.math.square(tf.math.subtract(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)))), grad)))))))), tf.math.add(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 7, 1, 3], [0, 0, 1, 0, 2], [63, 59, 27], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 2, 2, 9, 0, 4, 7, 6], [0, 3, 3, 3, 4, 1], [0, 75], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 4, 3, 4, 2, 5, 3, 5], [0, 0, 4, 0, 4, 4, 0], [2, 58, 16, 62], [0, 1, 1], [6], [1, 1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(grad, grad), grad))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, alpha)", "other_info": {"loss": [2.3040571212768555, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 1, 0, 1, 1, 14, 8, 6, 2, 16, 9, 7, 4, 3, 1, 2, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 3, 1, 3, 7, 2, 7, 1, 9, 8], [0, 0, 1, 1, 2, 2, 2, 3, 0], [83, 99, 27, 48], [0, 0, 0, 1, 1, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 1], [0, 6], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 4, 6, 3, 3, 0, 7, 4, 3, 2, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(alpha, grad))), tf.math.add(tf.math.add(tf.math.add(grad, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]