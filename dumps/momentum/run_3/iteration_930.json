[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2953033447265625, 2.196061134338379, 1.7921727895736694, 1.373821496963501, 1.0893054008483887, 0.9259101748466492, 0.8539649248123169, 0.8122377395629883, 0.7734299898147583, 0.72589510679245, 0.6975041031837463, 0.6745491623878479, 0.6547678709030151, 0.6379354596138, 0.6033576130867004, 0.5851421356201172, 0.5699569582939148, 0.568148672580719, 0.5582727789878845, 0.5424842834472656, 0.5330443978309631, 0.5236929059028625, 0.5172587633132935, 0.5073474645614624, 0.5047406554222107, 0.49559926986694336, 0.4829045534133911, 0.46359604597091675, 0.47342684864997864, 0.4568958580493927, 0.4399362802505493, 0.44280093908309937, 0.44797050952911377, 0.43779370188713074, 0.41601118445396423, 0.4240081310272217, 0.40873783826828003, 0.4019789397716522, 0.3912949562072754, 0.3989271819591522, 0.38811182975769043, 0.38262423872947693, 0.37587738037109375, 0.3735566735267639, 0.36832088232040405, 0.36531054973602295], "accuracy": [0.12178047746419907, 0.31686699390411377, 0.43428874015808105, 0.5375775694847107, 0.6317527294158936, 0.6539427042007446, 0.6804913282394409, 0.6956809163093567, 0.6984546184539795, 0.720380425453186, 0.7367587089538574, 0.7354378700256348, 0.7469290494918823, 0.7613261342048645, 0.767401933670044, 0.7794214487075806, 0.783119797706604, 0.7889314293861389, 0.7878747582435608, 0.7942147850990295, 0.7907806038856506, 0.7984414100646973, 0.8005547523498535, 0.8029322624206543, 0.8115176558494568, 0.811649739742279, 0.8145555257797241, 0.8227446675300598, 0.8178576231002808, 0.8248580098152161, 0.8257825970649719, 0.8333113193511963, 0.8321225643157959, 0.8329150676727295, 0.8391229510307312, 0.8392550349235535, 0.841500461101532, 0.845859169960022, 0.8488970994949341, 0.8496896028518677, 0.8496896028518677, 0.8506141901016235, 0.8533879518508911, 0.8544445633888245, 0.8590674996376038, 0.8569541573524475], "val_loss": [2.247666358947754, 2.0355427265167236, 1.1872175931930542, 0.8745973110198975, 0.7696353197097778, 0.7355825901031494, 0.6831850409507751, 0.6734943985939026, 0.64311683177948, 0.6242972612380981, 0.5890307426452637, 0.5769819617271423, 0.567997395992279, 0.5461621284484863, 0.5343810319900513, 0.5236032009124756, 0.5125016570091248, 0.5034862756729126, 0.4958798885345459, 0.49054276943206787, 0.4958716630935669, 0.49304744601249695, 0.4876665472984314, 0.4795397222042084, 0.47416621446609497, 0.46591639518737793, 0.45424002408981323, 0.46710139513015747, 0.4489831030368805, 0.44060078263282776, 0.44497695565223694, 0.4339459538459778, 0.4322618842124939, 0.43558382987976074, 0.4306974411010742, 0.429142564535141, 0.4211941063404083, 0.4160946011543274, 0.43150776624679565, 0.43589290976524353, 0.42738986015319824, 0.4243614375591278, 0.43755069375038147, 0.43249496817588806, 0.4225957989692688, 0.4192045032978058], "val_accuracy": [0.4116666615009308, 0.46266666054725647, 0.628333330154419, 0.6746666431427002, 0.7049999833106995, 0.7136666774749756, 0.7363333106040955, 0.7300000190734863, 0.7493333220481873, 0.7636666893959045, 0.7696666717529297, 0.781000018119812, 0.7716666460037231, 0.7919999957084656, 0.7956666946411133, 0.7976666688919067, 0.8066666722297668, 0.8076666593551636, 0.8073333501815796, 0.8183333277702332, 0.8069999814033508, 0.8059999942779541, 0.8196666836738586, 0.8209999799728394, 0.8193333148956299, 0.8286666870117188, 0.8330000042915344, 0.8243333101272583, 0.8353333473205566, 0.8396666646003723, 0.8349999785423279, 0.8396666646003723, 0.8429999947547913, 0.8376666903495789, 0.8366666436195374, 0.840666651725769, 0.8503333330154419, 0.8550000190734863, 0.8513333201408386, 0.8510000109672546, 0.8566666841506958, 0.8550000190734863, 0.8506666421890259, 0.8539999723434448, 0.8550000190734863, 0.8513333201408386]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 3, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 2, 6, 2, 1, 0], [0, 4, 3, 1, 0, 0], [87, 44, 38], [0, 0, 0, 0, 1, 1, 1], [6, 0, 8, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3037099838256836, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 1, 0, 1, 1, 13, 7, 6, 3, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 3, 1, 5, 0, 3, 0], [0, 0, 1, 0, 1, 1, 0, 0], [83, 37, 27, 34, 6], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 4], [75, 68], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 5, 2, 1, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.multiply(alpha, alpha))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3097474575042725, 2.305922269821167, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3081729412078857, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09133332967758179, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 3, 1, 6], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 2, 7, 6, 5, 9, 7, 8], [0, 0, 3, 3, 1, 3], [70, 8, 20], [0, 0, 0, 0, 1, 1, 1], [0, 0, 7, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 15, 9, 6, 3, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.974950456076142e+27, 49.798458099365234, 153.2604522705078, 315.3442687988281, 536.9120483398438, 818.67236328125], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21.924823760986328, 100.90416717529297, 238.14791870117188, 434.2889099121094, 689.8724975585938, 1005.3751831054688], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 1, 5, 1, 3, 8], [0, 1, 1, 0, 2], [83, 89, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 5, 3], [0, 0, 4], [24, 49], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 1, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [908213381758976.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15149913728237152, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]