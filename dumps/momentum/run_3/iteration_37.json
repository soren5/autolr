[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293058156967163, 2.188194751739502, 1.7723129987716675, 1.3314822912216187, 1.0834721326828003, 0.9286869168281555, 0.8542972207069397, 0.8375974893569946, 0.7720603942871094, 0.7556444406509399, 0.7163702249526978, 0.6858833432197571, 0.6431366205215454, 0.6284104585647583, 0.6155600547790527, 0.5984305143356323, 0.5907137393951416, 0.5729368329048157, 0.5716085433959961, 0.5521353483200073, 0.5401254296302795, 0.5298624038696289, 0.5078316330909729, 0.5167238712310791, 0.4937107563018799, 0.47569990158081055, 0.47097480297088623, 0.46094000339508057, 0.45419856905937195, 0.4485246241092682, 0.43558773398399353, 0.43311166763305664, 0.4295012652873993, 0.41916632652282715, 0.4150797724723816, 0.41202104091644287, 0.39696329832077026, 0.3894927501678467, 0.3809160590171814, 0.38374242186546326], "accuracy": [0.13168670237064362, 0.3279619514942169, 0.4364020526409149, 0.5480121374130249, 0.640338122844696, 0.6631884574890137, 0.6921146512031555, 0.691850483417511, 0.6985867023468018, 0.7083608508110046, 0.7255316376686096, 0.7380794882774353, 0.7555144429206848, 0.7594769597053528, 0.7664773464202881, 0.7728173136711121, 0.7778365015983582, 0.7848368883132935, 0.7860256433486938, 0.7897239327430725, 0.7946110367774963, 0.7993659973144531, 0.8018755912780762, 0.800818920135498, 0.8094043135643005, 0.8170651197433472, 0.8226125836372375, 0.8259146809577942, 0.8304054737091064, 0.8298771381378174, 0.8370096683502197, 0.8302733898162842, 0.8399154543876648, 0.8445383906364441, 0.8432175517082214, 0.8446704745292664, 0.8488970994949341, 0.856689989566803, 0.8543124794960022, 0.858671247959137], "val_loss": [2.245666027069092, 2.0209338665008545, 1.1469496488571167, 0.8925054669380188, 0.7837550640106201, 0.703457772731781, 0.6975663900375366, 0.6536878943443298, 0.6570895314216614, 0.6102150082588196, 0.5765271782875061, 0.558538019657135, 0.5492587089538574, 0.5241463780403137, 0.517102062702179, 0.5056403875350952, 0.4989337623119354, 0.48321589827537537, 0.48296964168548584, 0.47021484375, 0.47641104459762573, 0.47499310970306396, 0.4592604637145996, 0.4534590244293213, 0.43956974148750305, 0.42931342124938965, 0.4184388816356659, 0.414736807346344, 0.4159051775932312, 0.405597448348999, 0.3988306522369385, 0.39372897148132324, 0.4118103086948395, 0.4111340641975403, 0.3908849358558655, 0.39165857434272766, 0.38551679253578186, 0.38222089409828186, 0.3813451826572418, 0.3943054676055908], "val_accuracy": [0.4189999997615814, 0.4699999988079071, 0.637333333492279, 0.6956666707992554, 0.7093333601951599, 0.7396666407585144, 0.7446666955947876, 0.7526666522026062, 0.7543333172798157, 0.7720000147819519, 0.778333306312561, 0.7776666879653931, 0.784333348274231, 0.8006666898727417, 0.8043333292007446, 0.8023333549499512, 0.8103333115577698, 0.8176666498184204, 0.8196666836738586, 0.8346666693687439, 0.8220000267028809, 0.8223333358764648, 0.831333339214325, 0.8323333263397217, 0.8420000076293945, 0.8363333344459534, 0.8476666808128357, 0.8476666808128357, 0.847000002861023, 0.8473333120346069, 0.8510000109672546, 0.8576666712760925, 0.8543333411216736, 0.8579999804496765, 0.8600000143051147, 0.8533333539962769, 0.8560000061988831, 0.8553333282470703, 0.8569999933242798, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 2, 4, 4, 6, 2], [0, 0, 3, 0, 3, 3, 3], [0, 44, 72], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [4, 0, 4], [0, 54], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 7, 7, 3, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 3, 1, 3], [0, 0, 1, 0, 2, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [88], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 8, 2, 2, 9], [1, 1, 7, 6, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 6, 3, 3, 1, 7, 4, 3, 2, 12, 7, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 5, 3, 0], [0, 0, 1, 0, 2], [83, 53, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3029279708862305, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 8, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 9, 4, 3], [0, 0, 4], [0, 58], [0, 0], [0, 9], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 3, 3, 1, 3, 2, 1, 1, 2, 2, 0, 1, 2, 2, 0, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309391975402832, 2.3100051879882812, 2.310615062713623, 2.308786630630493, 2.3104116916656494, 2.3095691204071045], "accuracy": [0.09285431355237961, 0.09126931428909302, 0.08625016361474991, 0.09391097724437714, 0.09008057415485382, 0.09311848133802414], "val_loss": [2.3078184127807617, 2.3078184127807617, 2.3078184127807617, 2.3078184127807617, 2.3078184127807617, 2.3078184127807617], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]