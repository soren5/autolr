[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925727367401123, 2.1896824836730957, 1.7782522439956665, 1.335084080696106, 1.0835593938827515, 0.9288801550865173, 0.8575827479362488, 0.8259586095809937, 0.7766615152359009, 0.7321768403053284, 0.710283637046814, 0.6891294717788696, 0.6496003270149231, 0.6277013421058655, 0.6238388419151306, 0.5873975157737732, 0.5691528916358948, 0.5616603493690491, 0.5461959838867188, 0.5372480750083923, 0.5258826017379761, 0.5167140960693359, 0.5086777210235596, 0.49817270040512085, 0.48244673013687134, 0.4890916347503662, 0.464117169380188, 0.45829641819000244, 0.45417675375938416, 0.44002053141593933, 0.4378039240837097, 0.43490666151046753, 0.4160870313644409, 0.4262723922729492, 0.412132203578949, 0.40188735723495483, 0.3959936499595642, 0.3908924460411072, 0.3690076172351837, 0.37035471200942993, 0.36802223324775696, 0.36408481001853943, 0.3497522473335266, 0.3592539429664612, 0.3549007773399353, 0.3338143229484558, 0.35265564918518066, 0.34412214159965515, 0.3335266709327698], "accuracy": [0.12468630075454712, 0.33126401901245117, 0.43970412015914917, 0.5414080023765564, 0.6321489810943604, 0.6616035103797913, 0.6913221478462219, 0.6964733600616455, 0.7033417224884033, 0.7230220437049866, 0.7338528633117676, 0.7467969655990601, 0.7563069462776184, 0.7730814814567566, 0.7638356685638428, 0.78113853931427, 0.7868181467056274, 0.7910447716712952, 0.7959318161010742, 0.7955356240272522, 0.7965922355651855, 0.8018755912780762, 0.8113855719566345, 0.8115176558494568, 0.8168009519577026, 0.8232730031013489, 0.8244617581367493, 0.8224804997444153, 0.8245938420295715, 0.8317263126373291, 0.8330471515655518, 0.8296129703521729, 0.8436138033866882, 0.8367455005645752, 0.8383304476737976, 0.8466516733169556, 0.848368763923645, 0.8492933511734009, 0.8552370667457581, 0.8602562546730042, 0.8585391640663147, 0.8545766472816467, 0.859199583530426, 0.8619733452796936, 0.8582749962806702, 0.8692378997802734, 0.8632941246032715, 0.8698983192443848, 0.8701624870300293], "val_loss": [2.2463772296905518, 2.0205588340759277, 1.1264973878860474, 0.8273629546165466, 0.7692710757255554, 0.6938028931617737, 0.6559823751449585, 0.6329085230827332, 0.628393828868866, 0.590953528881073, 0.5552398562431335, 0.5281050205230713, 0.5090513825416565, 0.4941946566104889, 0.48254090547561646, 0.48401179909706116, 0.47809019684791565, 0.46581438183784485, 0.4562678933143616, 0.4548611342906952, 0.4404773414134979, 0.4464395344257355, 0.43996021151542664, 0.4315306544303894, 0.42931413650512695, 0.4162200093269348, 0.4136541485786438, 0.4150580167770386, 0.4135594069957733, 0.40207740664482117, 0.4078967571258545, 0.3985852003097534, 0.4010043442249298, 0.39531657099723816, 0.3807779848575592, 0.38762885332107544, 0.3938923478126526, 0.3899035155773163, 0.38497355580329895, 0.37955209612846375, 0.3712987005710602, 0.37540486454963684, 0.37784650921821594, 0.3707050681114197, 0.39165791869163513, 0.3805276155471802, 0.38328832387924194, 0.38674816489219666, 0.38066643476486206], "val_accuracy": [0.43066665530204773, 0.45500001311302185, 0.6536666750907898, 0.7053333520889282, 0.7283333539962769, 0.7286666631698608, 0.7433333396911621, 0.7596666812896729, 0.7586666941642761, 0.7706666588783264, 0.7806666493415833, 0.7963333129882812, 0.7996666431427002, 0.8046666383743286, 0.8183333277702332, 0.8016666769981384, 0.8053333163261414, 0.8163333535194397, 0.8193333148956299, 0.8256666660308838, 0.8303333520889282, 0.8276666402816772, 0.8316666483879089, 0.8326666951179504, 0.8403333425521851, 0.8450000286102295, 0.8476666808128357, 0.8476666808128357, 0.8513333201408386, 0.8546666502952576, 0.8489999771118164, 0.8476666808128357, 0.8573333621025085, 0.862666666507721, 0.8566666841506958, 0.8619999885559082, 0.8616666793823242, 0.8629999756813049, 0.8603333234786987, 0.8673333525657654, 0.8669999837875366, 0.8653333187103271, 0.8706666827201843, 0.874666690826416, 0.8633333444595337, 0.8679999709129333, 0.871999979019165, 0.871666669845581, 0.8653333187103271]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 4, 3, 1, 6, 0, 2, 7, 7, 7, 6, 7, 5, 1, 6, 2, 6, 6, 4, 0, 2, 1, 0, 1, 1, 1, 5, 2], [0, 0, 4, 4, 0, 6, 4, 4, 6, 4, 4, 1, 0, 2, 2, 7, 5, 4, 5, 0, 7, 2, 5], [0, 58, 85, 72, 53], [1, 1], [0], [4], [0]], "fitness": -0.1931428611278534, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 52, 29, 23, 5, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.divide_no_nan(grad, grad), grad)))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.negative(tf.math.add(grad, alpha))), tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.subtract(beta, beta), grad)))), grad))), tf.math.subtract(tf.math.square(grad), grad)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta))), grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.141693353652954, 2.325317621231079, 2.471684694290161, 2.2884254455566406, 2.3062024116516113, 2.303602933883667], "accuracy": [0.1966715157032013, 0.11662924289703369, 0.12178047746419907, 0.1310262829065323, 0.10117553919553757, 0.09945846349000931], "val_loss": [2.290278911590576, 2.2951765060424805, 2.3100521564483643, 2.308596134185791, 2.304037094116211, 2.3027427196502686], "val_accuracy": [0.18766666948795319, 0.09700000286102295, 0.0989999994635582, 0.10000000149011612, 0.10166666656732559, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 2, 1, 0, 2], [0, 3, 0, 5, 1], [0, 9], [0, 0, 0, 0, 1, 0, 1], [0, 0, 4, 3, 9], [7, 1, 7], [0, 58], [0, 0, 1, 0, 0, 1, 1], [0, 4, 8, 2], [1, 3, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 7, 5, 2, 1, 7, 4, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.sqrt(tf.math.add(sigma, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 3, 1, 0, 0], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 8, 1, 4, 8, 1, 1, 7, 7, 3, 4, 4, 4, 9, 0, 1, 1, 9, 2, 7, 4], [4, 3, 3, 2, 2, 3, 2, 4, 5, 4, 2, 2, 5, 0, 5, 0], [0, 80, 40, 71], [0, 0, 0, 0, 1, 1, 1], [5, 0, 4, 3], [0, 5, 1], [0, 58], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 39, 23, 16, 4, 7, 4, 3, 1, 3, 2, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.sqrt(grad), tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), beta), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(tf.math.pow(beta, grad), tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), beta), beta))), tf.math.add(grad, tf.math.add(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [7, 1, 2, 1, 3], [3, 2, 1, 0, 2], [11, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [51], [0, 0, 0, 0, 1, 1, 1], [0, 9, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 6, 6, 9, 1], [1, 2, 6, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 0, 4, 2, 2, 1, 2, 2, 0, 1, 10, 6, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), beta), tf.math.subtract(grad, grad)))", "other_info": {"loss": [1137582976.0, 21088864256.0, 99537494016.0, 278311239680.0, 590728462336.0, 1087975260160.0], "accuracy": [0.09615638852119446, 0.10236428678035736, 0.10342095047235489, 0.09430722147226334, 0.10645885765552521, 0.1010434553027153], "val_loss": [5213551616.0, 41703256064.0, 140743163904.0, 333603995648.0, 651561402368.0, 1125884755968.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]