[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929086685180664, 2.1889657974243164, 1.7731549739837646, 1.3672692775726318, 1.09017813205719, 0.9389215707778931, 0.8554087281227112, 0.8279613256454468, 0.7839634418487549, 0.758611261844635, 0.7329609990119934, 0.6975224018096924, 0.6755707263946533, 0.6518436074256897, 0.6327763795852661, 0.6230430603027344, 0.6137810945510864, 0.5848290324211121, 0.5804259777069092, 0.575109601020813, 0.5658949017524719, 0.5507977604866028, 0.5537475943565369, 0.5325634479522705, 0.5262829065322876, 0.5004875659942627, 0.49987563490867615, 0.4802517592906952, 0.47277718782424927, 0.45120730996131897, 0.45339658856391907, 0.4540698826313019, 0.44919267296791077, 0.4354226291179657, 0.4275335669517517, 0.4179287552833557, 0.41088709235191345, 0.4133654832839966, 0.39944419264793396, 0.3804614841938019, 0.3768256902694702, 0.37335455417633057, 0.3716713786125183, 0.3719877302646637, 0.36161062121391296, 0.3544694185256958, 0.3469325006008148, 0.3376157879829407, 0.3352992534637451, 0.331510454416275, 0.33065149188041687], "accuracy": [0.1254788041114807, 0.32505613565444946, 0.43851539492607117, 0.5303130149841309, 0.6263373494148254, 0.6546030640602112, 0.6856426000595093, 0.7003037929534912, 0.7045304179191589, 0.7030775547027588, 0.7145687341690063, 0.720380425453186, 0.7396644949913025, 0.7523444890975952, 0.7515519857406616, 0.7568352818489075, 0.7644960880279541, 0.7730814814567566, 0.7765156626701355, 0.7816668748855591, 0.7852331399917603, 0.7858935594558716, 0.7864218950271606, 0.802271842956543, 0.7959318161010742, 0.8038568496704102, 0.8083476424217224, 0.81548011302948, 0.8108572363853455, 0.8231409192085266, 0.8240655064582825, 0.8308017253875732, 0.8319904804229736, 0.8335754871368408, 0.835160493850708, 0.8403117060661316, 0.8442742228507996, 0.8425571322441101, 0.852331280708313, 0.8576145768165588, 0.8570862412452698, 0.8568220734596252, 0.856689989566803, 0.8576145768165588, 0.8609166741371155, 0.8625016212463379, 0.8681812286376953, 0.8737286925315857, 0.8726720213890076, 0.8726720213890076, 0.8778232932090759], "val_loss": [2.2454957962036133, 2.018663167953491, 1.1369019746780396, 0.8809317946434021, 0.7529739737510681, 0.6860517859458923, 0.6511063575744629, 0.6352995038032532, 0.6433528065681458, 0.6116973161697388, 0.5761303305625916, 0.5625508427619934, 0.5438917875289917, 0.5205426812171936, 0.5229366421699524, 0.5209673047065735, 0.5080190300941467, 0.4954010844230652, 0.5013124942779541, 0.49330586194992065, 0.49867168068885803, 0.4799594581127167, 0.47944775223731995, 0.46611833572387695, 0.4603098928928375, 0.4552493393421173, 0.44906753301620483, 0.43824079632759094, 0.4323955178260803, 0.43115633726119995, 0.4316992163658142, 0.42338040471076965, 0.4168330132961273, 0.4227633476257324, 0.4204042851924896, 0.4065028429031372, 0.4032861292362213, 0.4107307195663452, 0.40364405512809753, 0.40413323044776917, 0.3978883922100067, 0.39625445008277893, 0.39010152220726013, 0.38694247603416443, 0.40037044882774353, 0.4008408486843109, 0.3896220028400421, 0.3869873583316803, 0.39318081736564636, 0.41067802906036377, 0.4095815420150757], "val_accuracy": [0.4176666736602783, 0.44333332777023315, 0.6496666669845581, 0.6959999799728394, 0.718999981880188, 0.7443333268165588, 0.7446666955947876, 0.7636666893959045, 0.7570000290870667, 0.7670000195503235, 0.7689999938011169, 0.7776666879653931, 0.7900000214576721, 0.8009999990463257, 0.7953333258628845, 0.7910000085830688, 0.7943333387374878, 0.8083333373069763, 0.8086666464805603, 0.809333324432373, 0.79666668176651, 0.8206666707992554, 0.8220000267028809, 0.8320000171661377, 0.8276666402816772, 0.8309999704360962, 0.840666651725769, 0.8489999771118164, 0.8473333120346069, 0.8420000076293945, 0.8416666388511658, 0.8489999771118164, 0.8513333201408386, 0.856333315372467, 0.8539999723434448, 0.8553333282470703, 0.8583333492279053, 0.8606666922569275, 0.8613333106040955, 0.862666666507721, 0.8653333187103271, 0.8653333187103271, 0.8610000014305115, 0.8640000224113464, 0.8659999966621399, 0.8703333139419556, 0.8690000176429749, 0.8653333187103271, 0.8640000224113464, 0.8643333315849304, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [5, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 8, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 3, 2, 6, 6, 6, 7, 7, 1, 6, 4, 2, 1, 8, 0, 4, 7, 6, 9, 1, 1, 9], [6, 3, 2, 2, 7, 5, 2, 1, 1, 0, 4, 0, 3, 1, 0, 3, 1], [0, 12, 98, 6, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 2, 1, 1, 1, 7, 4, 3, 2, 40, 23, 17, 5], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(beta, alpha), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(alpha, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), sigma)))))), alpha)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 3, 4], [0, 0, 1, 0, 2], [83, 70, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 8, 5, 5, 1, 3], [0, 3, 3, 0], [0, 62], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 7, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1079734272.0, 20465268736.0, 95022063616.0, 263405764608.0, 564464844800.0, 1047584768000.0], "accuracy": [0.09219389408826828, 0.1002509593963623, 0.10051512718200684, 0.09655263274908066, 0.10645885765552521, 0.1018359512090683], "val_loss": [4864496640.0, 38910984192.0, 131319046144.0, 311268638720.0, 607936380928.0, 1050508525568.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [1, 0, 1, 0, 0, 1], [7, 1, 2], [0, 3, 3], [0], [0, 1, 1, 0, 1, 0, 0], [0, 0, 4, 3], [0, 0, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3074541091918945, 2.3030121326446533, 2.3017890453338623, 2.302532196044922, 2.302762031555176, 2.3027803897857666, 2.3028323650360107, 2.3029558658599854, 2.3030478954315186], "accuracy": [0.09351472556591034, 0.0956280529499054, 0.09311848133802414, 0.10606260597705841, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.303083896636963, 2.301759719848633, 2.3025951385498047, 2.3027284145355225, 2.302783727645874, 2.302783727645874, 2.3028645515441895, 2.302966833114624, 2.3030917644500732], "val_accuracy": [0.09700000286102295, 0.07433333247900009, 0.09466666728258133, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 1, 3, 3, 3], [0, 3, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 2, 7, 8, 2, 0, 5, 3, 1, 5, 3, 0, 3, 9], [0, 3, 4, 3, 2, 5, 5, 3], [0, 26], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 23, 15, 8, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.add(grad, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.negative(grad), beta)), grad), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]