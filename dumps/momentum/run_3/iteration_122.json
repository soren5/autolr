[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920024394989014, 2.1857011318206787, 1.760136365890503, 1.3302229642868042, 1.0715677738189697, 0.9308558106422424, 0.8643644452095032, 0.807637631893158, 0.7704823017120361, 0.7386249899864197, 0.69757479429245, 0.6842246055603027, 0.6534628868103027, 0.6332293152809143, 0.617301344871521, 0.6131114363670349, 0.5995308756828308, 0.5741503834724426, 0.5672467350959778, 0.5408792495727539, 0.543700098991394, 0.5243459939956665, 0.5124422311782837, 0.5007948279380798, 0.4955129027366638, 0.4882989525794983, 0.4690263867378235, 0.4612361788749695, 0.4534217417240143, 0.44570109248161316, 0.43704289197921753, 0.4156915843486786, 0.4181385040283203, 0.40265771746635437, 0.39419642090797424, 0.40033018589019775, 0.38668909668922424, 0.3875075578689575, 0.37691494822502136, 0.3790355622768402, 0.37259185314178467], "accuracy": [0.13089419901371002, 0.33641526103019714, 0.4422137141227722, 0.5443138480186462, 0.6419231295585632, 0.6552634835243225, 0.6866992712020874, 0.7037379741668701, 0.7025492191314697, 0.7174745798110962, 0.7338528633117676, 0.7326641082763672, 0.7520803213119507, 0.7627789974212646, 0.7602694630622864, 0.767401933670044, 0.7671377658843994, 0.7769119143486023, 0.7820631265640259, 0.7862898111343384, 0.7866860628128052, 0.800818920135498, 0.8099326491355896, 0.8038568496704102, 0.8105930685997009, 0.8138951063156128, 0.8186501264572144, 0.8189142942428589, 0.8274996876716614, 0.82683926820755, 0.8301413059234619, 0.8380662798881531, 0.8363492488861084, 0.8437458872795105, 0.8486329317092896, 0.8437458872795105, 0.8481045961380005, 0.8481045961380005, 0.8537842035293579, 0.8582749962806702, 0.8548408150672913], "val_loss": [2.246131181716919, 2.0126686096191406, 1.1246867179870605, 0.8713443875312805, 0.7772820591926575, 0.7125695943832397, 0.6926908493041992, 0.6621971726417542, 0.6603212356567383, 0.6174701452255249, 0.5914471745491028, 0.578113317489624, 0.567075252532959, 0.5475100874900818, 0.5433276295661926, 0.5297649502754211, 0.528773844242096, 0.5124450325965881, 0.5002521276473999, 0.4944199323654175, 0.48584049940109253, 0.48178404569625854, 0.47774064540863037, 0.46755871176719666, 0.46680667996406555, 0.45109182596206665, 0.45126327872276306, 0.4396713376045227, 0.4337535798549652, 0.4293873608112335, 0.42390239238739014, 0.4265297055244446, 0.42084163427352905, 0.4133009910583496, 0.41049426794052124, 0.40933293104171753, 0.41271981596946716, 0.42389777302742004, 0.4215218126773834, 0.4203067123889923, 0.42646196484565735], "val_accuracy": [0.42100000381469727, 0.45133334398269653, 0.6496666669845581, 0.6990000009536743, 0.7039999961853027, 0.7323333621025085, 0.7363333106040955, 0.7390000224113464, 0.7526666522026062, 0.7576666474342346, 0.765999972820282, 0.7756666541099548, 0.7853333353996277, 0.8029999732971191, 0.7940000295639038, 0.8019999861717224, 0.8056666851043701, 0.8066666722297668, 0.8116666674613953, 0.8253333568572998, 0.8153333067893982, 0.8193333148956299, 0.8296666741371155, 0.8320000171661377, 0.82833331823349, 0.8393333554267883, 0.847000002861023, 0.8443333506584167, 0.8463333249092102, 0.8500000238418579, 0.8553333282470703, 0.8493333458900452, 0.8566666841506958, 0.862666666507721, 0.8650000095367432, 0.8713333606719971, 0.8693333268165588, 0.8653333187103271, 0.8656666874885559, 0.862666666507721, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 6, 3, 6, 7, 9, 6, 1, 8], [0, 0, 1, 0, 2, 3, 2, 2, 3], [83, 99, 27, 82], [0, 0, 1, 0, 1, 1], [0, 1, 7], [1, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3, 3, 0, 6, 1], [0, 0, 4, 4, 6, 3], [0, 58], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 4, 3, 0, 0, 1, 4, 1], [1, 6, 3, 5, 3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 4, 6, 3, 3, 0, 14, 8, 6, 2, 14, 8, 6, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.sqrt(grad)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.math.subtract(grad, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.subtract(alpha, tf.math.pow(tf.math.subtract(grad, sigma), grad)))), sigma), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 3, 1, 3, 6, 9], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 0, 2], [0, 3, 3], [7], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3, 6, 9, 4, 5, 0, 4, 5], [0, 2, 1, 1, 6], [0, 86], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 3, 2, 1, 1, 16, 11, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(alpha), tf.math.negative(tf.math.pow(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7.88620662689209, 2.460116147994995, 2.7984747886657715, 3.362687349319458, 4.402219772338867, 6.5379486083984375, 10.926608085632324, 20.22277069091797, 39.26668930053711], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.1014397069811821, 0.09998679161071777, 0.10302469879388809, 0.09879804402589798, 0.09628847241401672, 0.10117553919553757], "val_loss": [2.3673133850097656, 2.6211998462677, 3.0670006275177, 3.802919864654541, 5.319309711456299, 8.482328414916992, 14.986933708190918, 28.45828628540039, 57.273555755615234], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10433333367109299, 0.10199999809265137, 0.09866666793823242, 0.09833333641290665, 0.10433333367109299, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 1, 3, 1, 3], [0, 0, 1, 0, 1, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [5, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0, 0, 1, 1], [1, 3, 5, 5], [1, 5, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 6, 3, 3, 1, 7, 4, 3, 2, 7, 4, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.math.square(grad))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 1, 2, 9], [0, 3, 3], [0, 69], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [3, 2, 4, 3, 2, 5, 1], [0, 0, 4, 7, 4, 1, 5], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 4, 2, 2, 14, 7, 7, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.subtract(grad, grad))), alpha), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3109073638916016, 2.3256378173828125, 33.052337646484375, 556145584373760.0, 65.20326232910156, 163.40646362304688, 306.8171691894531], "accuracy": [0.09866596013307571, 0.09628847241401672, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3133788108825684, 2.3279833793640137, 4161496087003136.0, 36.09281921386719, 115.62577056884766, 240.28843688964844, 409.45965576171875], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]