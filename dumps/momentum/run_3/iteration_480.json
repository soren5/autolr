[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939841747283936, 2.190124273300171, 1.7739695310592651, 1.363964319229126, 1.0777597427368164, 0.9088582992553711, 0.8496537208557129, 0.8137590885162354, 0.760007917881012, 0.744925856590271, 0.7292817234992981, 0.6920649409294128, 0.6576523780822754, 0.6465301513671875, 0.6190462112426758, 0.5985015630722046, 0.579145610332489, 0.5779908895492554, 0.5764187574386597, 0.560102105140686, 0.5506322979927063, 0.5416741967201233, 0.5290806293487549, 0.526495635509491, 0.511141836643219, 0.503312885761261, 0.4836276173591614, 0.46995919942855835, 0.4633522927761078, 0.4527541697025299, 0.4451870322227478, 0.44503235816955566, 0.4422321915626526, 0.43574070930480957, 0.42384934425354004, 0.41443803906440735, 0.41259828209877014, 0.4071190059185028, 0.3948698341846466, 0.3772883713245392, 0.3749240040779114, 0.3750063180923462, 0.3703480660915375, 0.37532615661621094, 0.3464014232158661, 0.35395199060440063, 0.33684849739074707, 0.3317871689796448, 0.33014416694641113], "accuracy": [0.12415797263383865, 0.3307357132434845, 0.4410249590873718, 0.5436534285545349, 0.6366398334503174, 0.6711134314537048, 0.6884163022041321, 0.6922467350959778, 0.707568347454071, 0.7112666964530945, 0.7304186820983887, 0.7339849472045898, 0.739928662776947, 0.7604015469551086, 0.763967752456665, 0.7688548564910889, 0.7786290049552917, 0.7833839654922485, 0.7759873270988464, 0.7812706232070923, 0.7897239327430725, 0.7877426743507385, 0.7905164361000061, 0.7948752045631409, 0.8017435073852539, 0.8079513907432556, 0.8115176558494568, 0.8162726163864136, 0.8140271902084351, 0.8197067975997925, 0.8301413059234619, 0.8267071843147278, 0.8272355198860168, 0.8298771381378174, 0.837141752243042, 0.8409721255302429, 0.8403117060661316, 0.8470479249954224, 0.8507462739944458, 0.8527275323867798, 0.8492933511734009, 0.8609166741371155, 0.8577466607093811, 0.8533879518508911, 0.8672566413879395, 0.8661999702453613, 0.8693699836730957, 0.8714832663536072, 0.8728041052818298], "val_loss": [2.2445285320281982, 2.016711950302124, 1.1451878547668457, 0.8934116363525391, 0.7714802026748657, 0.7183992266654968, 0.6963111758232117, 0.6741102337837219, 0.6375350952148438, 0.6288135647773743, 0.6114363670349121, 0.5848913788795471, 0.5677697062492371, 0.5604978203773499, 0.5451117753982544, 0.526796281337738, 0.5362836718559265, 0.5328369140625, 0.5271100401878357, 0.5167076587677002, 0.5136185884475708, 0.4949667155742645, 0.49237415194511414, 0.4826899468898773, 0.4772132933139801, 0.47511571645736694, 0.46459993720054626, 0.4682551324367523, 0.4751252830028534, 0.46209052205085754, 0.45639103651046753, 0.4493832290172577, 0.43384382128715515, 0.44339972734451294, 0.4443669319152832, 0.43385303020477295, 0.42501717805862427, 0.4206423759460449, 0.4150733947753906, 0.41305941343307495, 0.40784668922424316, 0.42234790325164795, 0.41195163130760193, 0.4075949788093567, 0.40675511956214905, 0.4028257131576538, 0.4125744700431824, 0.41326138377189636, 0.4069003164768219], "val_accuracy": [0.4476666748523712, 0.4519999921321869, 0.6423333287239075, 0.6783333420753479, 0.706333339214325, 0.7306666374206543, 0.7356666922569275, 0.7409999966621399, 0.7463333606719971, 0.75, 0.7586666941642761, 0.7609999775886536, 0.7730000019073486, 0.781333327293396, 0.7879999876022339, 0.7870000004768372, 0.7886666655540466, 0.7926666736602783, 0.7910000085830688, 0.7950000166893005, 0.7973333597183228, 0.812333345413208, 0.809333324432373, 0.8103333115577698, 0.8159999847412109, 0.8103333115577698, 0.8213333487510681, 0.8236666917800903, 0.8246666789054871, 0.8296666741371155, 0.8379999995231628, 0.8403333425521851, 0.8373333215713501, 0.8363333344459534, 0.8413333296775818, 0.843999981880188, 0.8453333377838135, 0.846666693687439, 0.8506666421890259, 0.8529999852180481, 0.8566666841506958, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.8566666841506958, 0.8550000190734863, 0.8576666712760925, 0.8566666841506958, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 2], [44, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 2, 8, 6, 8, 8, 9], [3, 3, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 1, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.20657142996788025, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(grad, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7597713470458984, 3.427978277206421, 2.3696389198303223, 2.315321207046509, 2.288113832473755, 2.328007698059082], "accuracy": [0.24765552580356598, 0.16391493380069733, 0.10196803510189056, 0.12851670384407043, 0.14040417969226837, 0.13313961029052734], "val_loss": [2.4929397106170654, 2.345008611679077, 2.3591115474700928, 2.212644338607788, 2.215498924255371, 2.359611749649048], "val_accuracy": [0.19866666197776794, 0.10266666859388351, 0.1340000033378601, 0.1509999930858612, 0.15933333337306976, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 8, 9, 2], [0, 0, 1, 0, 2], [83, 99, 27, 48], [0, 0, 1, 0, 1, 1], [0, 1, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 4, 3, 7, 1, 1, 2, 5, 0], [0, 0, 4, 2, 7, 3, 5, 0], [0, 58, 27], [0, 0, 1, 1], [0, 4], [1, 7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.subtract(beta, grad)))), sigma)), tf.math.add(grad, tf.math.square(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 13, 8, 5, 4, 5, 3, 2, 1, 18, 10, 8, 3, 4, 2, 2, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 1, 1], [83, 99, 27], [0, 1, 1, 0, 0, 1], [0, 1, 2], [0, 3, 1], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 1, 1], [2, 7], [1, 7, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 2, 1, 1, 1, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.multiply(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(grad, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 0, 2], [0, 0, 4], [0, 58], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]