[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925779819488525, 2.1889100074768066, 1.766744613647461, 1.3676347732543945, 1.0856846570968628, 0.9293292760848999, 0.837589681148529, 0.8083940148353577, 0.7649335861206055, 0.7507778406143188, 0.7183030843734741, 0.6867740750312805, 0.6473506093025208, 0.6238626837730408, 0.6052554249763489, 0.5967949628829956, 0.5908389091491699, 0.567905843257904, 0.5565863847732544, 0.5434179306030273, 0.530673623085022, 0.5302298665046692, 0.512214720249176, 0.5059261322021484, 0.48379528522491455, 0.4778438210487366, 0.4708698093891144, 0.4642922282218933, 0.4586119055747986, 0.4376709461212158, 0.4270693063735962, 0.42464113235473633, 0.40836793184280396, 0.4117944836616516, 0.4021155834197998, 0.40229532122612, 0.3843350410461426, 0.3876454532146454, 0.37388554215431213, 0.3602144420146942, 0.3710232675075531, 0.37085843086242676, 0.3554573953151703, 0.3445923328399658, 0.35249802470207214, 0.33720359206199646, 0.34763669967651367, 0.34970229864120483, 0.33579516410827637, 0.3366505801677704], "accuracy": [0.1320829540491104, 0.3276977837085724, 0.44010037183761597, 0.5474838018417358, 0.6379606127738953, 0.6651697158813477, 0.6991150379180908, 0.7029454708099365, 0.7061154246330261, 0.7106062769889832, 0.7329282760620117, 0.733588695526123, 0.746268630027771, 0.7594769597053528, 0.7630431652069092, 0.7642319202423096, 0.7726852297782898, 0.7828556299209595, 0.7820631265640259, 0.793950617313385, 0.7935543656349182, 0.8009510040283203, 0.8026680946350098, 0.8010830879211426, 0.8070268034934998, 0.8133667707443237, 0.817461371421814, 0.8234050869941711, 0.8198388814926147, 0.8280280232429504, 0.8313300609588623, 0.8389908671379089, 0.846387505531311, 0.8401796221733093, 0.844010055065155, 0.8495575189590454, 0.8506141901016235, 0.8524633646011353, 0.8535200357437134, 0.8609166741371155, 0.8548408150672913, 0.8524633646011353, 0.8589354157447815, 0.8631620407104492, 0.8639545440673828, 0.8660678863525391, 0.8644828796386719, 0.8648791313171387, 0.8673887252807617, 0.8663320541381836], "val_loss": [2.2466542720794678, 2.0213708877563477, 1.1488558053970337, 0.9528706073760986, 0.796188235282898, 0.7308530211448669, 0.7012569308280945, 0.6573713421821594, 0.669512927532196, 0.632017195224762, 0.6220692992210388, 0.590105414390564, 0.5679541230201721, 0.5657753348350525, 0.5400341153144836, 0.5349231958389282, 0.5225051045417786, 0.5223979353904724, 0.511059582233429, 0.5117326378822327, 0.4979912042617798, 0.49563655257225037, 0.488268107175827, 0.48112285137176514, 0.4756356477737427, 0.46576130390167236, 0.4631223678588867, 0.46864137053489685, 0.45183345675468445, 0.44334301352500916, 0.43519577383995056, 0.42659416794776917, 0.4351474642753601, 0.4306500554084778, 0.424143522977829, 0.424794465303421, 0.4196942448616028, 0.4178565740585327, 0.4261839687824249, 0.4303028881549835, 0.4361015558242798, 0.42051637172698975, 0.41362276673316956, 0.4196696877479553, 0.4264410138130188, 0.42025211453437805, 0.4136042594909668, 0.4226393699645996, 0.4346408545970917, 0.42811280488967896], "val_accuracy": [0.406333327293396, 0.468666672706604, 0.640666663646698, 0.6769999861717224, 0.6980000138282776, 0.718999981880188, 0.7329999804496765, 0.7350000143051147, 0.7599999904632568, 0.7473333477973938, 0.7506666779518127, 0.7693333625793457, 0.7770000100135803, 0.7786666750907898, 0.7850000262260437, 0.7946666479110718, 0.793666660785675, 0.8023333549499512, 0.8080000281333923, 0.809333324432373, 0.8136666417121887, 0.8199999928474426, 0.8256666660308838, 0.824999988079071, 0.8256666660308838, 0.8373333215713501, 0.8353333473205566, 0.8320000171661377, 0.8416666388511658, 0.8389999866485596, 0.8456666469573975, 0.8500000238418579, 0.847000002861023, 0.8476666808128357, 0.8539999723434448, 0.8486666679382324, 0.846666693687439, 0.8546666502952576, 0.8573333621025085, 0.8556666374206543, 0.8513333201408386, 0.8583333492279053, 0.8619999885559082, 0.8533333539962769, 0.862666666507721, 0.8553333282470703, 0.862666666507721, 0.8606666922569275, 0.8610000014305115, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 5], [0, 0, 1, 0, 0], [83, 99, 27], [0, 0, 1, 0, 0, 0], [0, 0, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [48729534464.0, 7109410816000.0, 119984961355776.0, 852425179136000.0, 3704142199521280.0, 1.2300643528081408e+16], "accuracy": [0.09338264167308807, 0.09787346422672272, 0.09866596013307571, 0.09998679161071777, 0.1014397069811821, 0.09945846349000931], "val_loss": [472087691264.0, 25452561301504.0, 273190253232128.0, 1489444729257984.0, 5579543158980608.0, 1.6459171524247552e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 3, 1, 3], [3, 0, 1, 3, 2], [65, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3, 3, 2, 9], [3, 0, 4, 0], [0, 58, 76], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 1, 1, 0, 1, 1, 11, 7, 4, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [38.0800895690918, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [905441.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 2], [0, 0, 1, 0, 2, 0], [83, 99, 27, 98], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 6, 3, 3, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304145097732544, 2.6008288860321045, 21.3631649017334, 100.34579467773438, 245.5226593017578, 457.46942138671875], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3145790100097656, 5.492079257965088, 57.13842010498047, 174.86749267578125, 359.0998229980469, 610.2554321289062], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 8, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [8, 1, 2, 0, 4, 2, 5, 7, 1, 9], [4, 3, 4, 1, 0, 0], [0, 0, 66], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [3, 0, 4], [0, 26], [0, 1, 1], [6], [1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 16, 10, 6, 3, 7, 4, 3, 1, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.add(grad, tf.math.negative(tf.math.pow(grad, tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]