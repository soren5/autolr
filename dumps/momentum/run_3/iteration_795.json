[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937991619110107, 2.185311794281006, 1.7538816928863525, 1.3677109479904175, 1.0688544511795044, 0.9284889101982117, 0.8401147127151489, 0.8055549263954163, 0.7657628059387207, 0.7393390536308289, 0.6804483532905579, 0.6783809065818787, 0.6205801963806152, 0.5997433662414551, 0.5862839221954346, 0.5819921493530273, 0.56918865442276, 0.5515469312667847, 0.5502286553382874, 0.5322830080986023, 0.5277729034423828, 0.5113804936408997, 0.5037519335746765, 0.4816649258136749, 0.47922131419181824, 0.4734794795513153, 0.4607786238193512, 0.4553549289703369, 0.44045668840408325, 0.4338260293006897, 0.43180444836616516, 0.42158278822898865, 0.41529661417007446, 0.40696078538894653, 0.3911174535751343, 0.4012162983417511, 0.3805691599845886, 0.37468865513801575, 0.37240251898765564, 0.3661171495914459, 0.36916470527648926, 0.3624122440814972], "accuracy": [0.13313961029052734, 0.3385286033153534, 0.439439982175827, 0.5394267439842224, 0.6387531161308289, 0.6553955674171448, 0.6927750706672668, 0.7024171352386475, 0.7037379741668701, 0.7099458575248718, 0.7403249144554138, 0.7456082701683044, 0.7536653280258179, 0.7740060687065125, 0.7658169269561768, 0.7766477465629578, 0.7835160493850708, 0.7836481332778931, 0.7928939461708069, 0.7935543656349182, 0.7965922355651855, 0.8039889335632324, 0.8058380484580994, 0.8117818236351013, 0.8113855719566345, 0.8227446675300598, 0.8226125836372375, 0.8286884427070618, 0.8280280232429504, 0.8368775844573975, 0.832650899887085, 0.8376700282096863, 0.8405758738517761, 0.8469158411026001, 0.8506141901016235, 0.8486329317092896, 0.8560295701026917, 0.8562937378883362, 0.8588033318519592, 0.8593316674232483, 0.8516708612442017, 0.8580108284950256], "val_loss": [2.2458224296569824, 2.0121476650238037, 1.1270463466644287, 0.8530175685882568, 0.7664574980735779, 0.7017503380775452, 0.6292030215263367, 0.6253467798233032, 0.6319757103919983, 0.6078235507011414, 0.5638744235038757, 0.5425061583518982, 0.5237016081809998, 0.5076598525047302, 0.4985623359680176, 0.4978584349155426, 0.48596784472465515, 0.4821847379207611, 0.476093590259552, 0.46410372853279114, 0.460736483335495, 0.4495019018650055, 0.43959522247314453, 0.4370487332344055, 0.4344416558742523, 0.4251576364040375, 0.42753565311431885, 0.419790655374527, 0.42029452323913574, 0.4314744472503662, 0.4213947355747223, 0.4105585813522339, 0.4075261652469635, 0.3941865563392639, 0.3952047526836395, 0.3976704776287079, 0.39212557673454285, 0.3940187692642212, 0.3969546854496002, 0.3948131799697876, 0.3937317728996277, 0.3965645730495453], "val_accuracy": [0.4269999861717224, 0.47600001096725464, 0.6543333530426025, 0.6940000057220459, 0.7213333249092102, 0.7443333268165588, 0.7473333477973938, 0.7703333497047424, 0.7519999742507935, 0.7649999856948853, 0.7823333144187927, 0.79666668176651, 0.7993333339691162, 0.8116666674613953, 0.8090000152587891, 0.8133333325386047, 0.8180000185966492, 0.8163333535194397, 0.8186666369438171, 0.8356666564941406, 0.8383333086967468, 0.8346666693687439, 0.8463333249092102, 0.8493333458900452, 0.847000002861023, 0.8576666712760925, 0.8610000014305115, 0.8550000190734863, 0.8529999852180481, 0.8576666712760925, 0.8616666793823242, 0.8600000143051147, 0.859666645526886, 0.871999979019165, 0.8703333139419556, 0.871666669845581, 0.8740000128746033, 0.8733333349227905, 0.8703333139419556, 0.8706666827201843, 0.8733333349227905, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 3, 1, 3, 4, 9], [0, 0, 1, 0, 2], [83, 6, 84, 10], [0, 0, 1, 1, 1, 0], [0, 1, 5], [0, 3, 3], [87], [0, 1, 0, 0, 1, 1, 1], [0, 6, 4, 3], [2, 3, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 4, 2, 2, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 4, 4, 7, 6], [0, 0, 4, 1, 7, 3], [0, 58], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 1, 9, 6, 8, 2, 8], [1, 4, 3, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 12, 6, 6, 2, 12, 8, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.divide_no_nan(alpha, grad), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, sigma)), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 1, 1, 9, 7, 4, 4, 8, 4], [0, 0, 1, 0, 2, 1, 0, 0, 0], [83, 99, 27, 82, 88, 90, 3], [1, 0, 1, 0, 0, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 0], [0, 58, 19], [0, 1, 0], [7, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 7, 1, 0, 1, 1, 7, 4, 3, 3, 3, 2, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.pow(tf.math.sqrt(grad), alpha), tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 4, 3, 6, 5], [0, 4, 4, 0], [0, 58], [1, 1], [0], [0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3107516765594482, 2.3095083236694336, 2.3110504150390625, 2.3114798069000244, 2.30912184715271, 2.310068130493164], "accuracy": [0.09113723784685135, 0.09642054885625839, 0.09100515395402908, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981], "val_loss": [2.3075056076049805, 2.3075056076049805, 2.3075056076049805, 2.3075056076049805, 2.3075056076049805, 2.3075056076049805], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]