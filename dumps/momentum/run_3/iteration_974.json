[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293140411376953, 2.187272310256958, 1.772265076637268, 1.3440021276474, 1.0680930614471436, 0.9144114255905151, 0.8623074889183044, 0.7948631644248962, 0.7743365168571472, 0.7505801916122437, 0.7078747153282166, 0.688203752040863, 0.6616905331611633, 0.6388567686080933, 0.6118893623352051, 0.6142970323562622, 0.6098278164863586, 0.5808292627334595, 0.5785359740257263, 0.5566335320472717, 0.5606673955917358, 0.5367312431335449, 0.5271358489990234, 0.5297272205352783, 0.5018414855003357, 0.5095524191856384, 0.4969431757926941, 0.4858001470565796, 0.47033044695854187, 0.46131226420402527, 0.4665277898311615, 0.4582100212574005, 0.44541028141975403, 0.4368952512741089, 0.43719035387039185, 0.409020334482193, 0.4198962450027466, 0.40006211400032043, 0.3970646262168884, 0.3856056034564972, 0.3862663805484772, 0.38598331809043884, 0.3868771195411682, 0.3619748055934906, 0.37033113837242126, 0.3678910732269287, 0.3580749034881592, 0.3582330644130707, 0.34892499446868896, 0.3480095863342285], "accuracy": [0.13261127471923828, 0.3291507065296173, 0.44525161385536194, 0.5548804402351379, 0.6400739550590515, 0.6601505875587463, 0.6836613416671753, 0.7096816897392273, 0.6976621150970459, 0.7042662501335144, 0.7302865982055664, 0.7363624572753906, 0.7464007139205933, 0.7540615797042847, 0.7625148296356201, 0.7684586048126221, 0.7687227725982666, 0.7770439982414246, 0.7849689722061157, 0.7874785661697388, 0.7921014428138733, 0.7906485199928284, 0.7938185334205627, 0.7907806038856506, 0.8070268034934998, 0.8049134612083435, 0.8074230551719666, 0.8070268034934998, 0.8168009519577026, 0.8215559124946594, 0.819442629814148, 0.8247259259223938, 0.824329674243927, 0.8238013386726379, 0.8240655064582825, 0.8378021121025085, 0.8342359066009521, 0.845859169960022, 0.8426892161369324, 0.8494254350662231, 0.8500858545303345, 0.8469158411026001, 0.8451988101005554, 0.8582749962806702, 0.8541803956031799, 0.8552370667457581, 0.8577466607093811, 0.8565579056739807, 0.8648791313171387, 0.8607845902442932], "val_loss": [2.2452657222747803, 2.017771005630493, 1.1455409526824951, 0.8965944051742554, 0.7790847420692444, 0.740546464920044, 0.6820183992385864, 0.6812258958816528, 0.6609255075454712, 0.6283050775527954, 0.6067529916763306, 0.5826187133789062, 0.5622064471244812, 0.563437283039093, 0.5503506064414978, 0.5342263579368591, 0.5241783261299133, 0.5206677913665771, 0.5168484449386597, 0.5138378143310547, 0.5060238242149353, 0.5082931518554688, 0.5010790824890137, 0.4872261881828308, 0.49145784974098206, 0.4886264503002167, 0.47930386662483215, 0.4926123023033142, 0.4902057349681854, 0.4733480215072632, 0.4665214419364929, 0.4721819758415222, 0.4719330370426178, 0.4592633545398712, 0.4560251832008362, 0.47597071528434753, 0.45994412899017334, 0.4288623034954071, 0.4467795491218567, 0.4633600115776062, 0.4416760802268982, 0.42514851689338684, 0.4286709725856781, 0.45470625162124634, 0.44954776763916016, 0.4351157248020172, 0.46028339862823486, 0.45435887575149536, 0.4619280695915222, 0.4592578113079071], "val_accuracy": [0.40700000524520874, 0.46133333444595337, 0.6296666860580444, 0.671999990940094, 0.7146666646003723, 0.7200000286102295, 0.7293333411216736, 0.7440000176429749, 0.7423333525657654, 0.7646666765213013, 0.7596666812896729, 0.7713333368301392, 0.7793333530426025, 0.7816666960716248, 0.7950000166893005, 0.7940000295639038, 0.8003333210945129, 0.8036666512489319, 0.8040000200271606, 0.8029999732971191, 0.8056666851043701, 0.8040000200271606, 0.8059999942779541, 0.8233333230018616, 0.8240000009536743, 0.8286666870117188, 0.8289999961853027, 0.8309999704360962, 0.8276666402816772, 0.8293333053588867, 0.8383333086967468, 0.8379999995231628, 0.8363333344459534, 0.8413333296775818, 0.8456666469573975, 0.8446666598320007, 0.846666693687439, 0.8486666679382324, 0.8460000157356262, 0.8493333458900452, 0.8493333458900452, 0.8529999852180481, 0.8576666712760925, 0.843666672706604, 0.8629999756813049, 0.8573333621025085, 0.8456666469573975, 0.8529999852180481, 0.859666645526886, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 3, 3, 1, 9, 0], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 2, 2, 9], [2, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 4, 3, 4, 0], [4, 0, 6, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.1014285683631897, "mapping_values": [1, 13, 8, 5, 3, 8, 5, 3, 1, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.0043251514434814, 7.970662593841553, 2.5770750045776367, 2.512847900390625, 2.4883828163146973, 2.522838830947876, 2.5206308364868164], "accuracy": [0.1736890822649002, 0.10487385839223862, 0.1072513535618782, 0.10645885765552521, 0.09840179979801178, 0.10447761416435242, 0.09576013684272766], "val_loss": [2.37963604927063, 2.601984739303589, 2.46353816986084, 2.4617178440093994, 2.5707969665527344, 2.4658455848693848, 2.440959930419922], "val_accuracy": [0.10066666454076767, 0.10433333367109299, 0.09700000286102295, 0.09666666388511658, 0.10000000149011612, 0.09566666930913925, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 3, 1, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 4, 3, 4, 9, 7, 8, 3, 8, 2, 0, 1, 4, 1, 3, 9, 9, 3, 8, 2, 7], [0, 0, 4, 3, 3, 1, 0, 1, 4, 7, 2, 1, 7], [0, 58, 75, 94, 93, 47], [1, 1], [2], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 6, 3, 3, 1, 35, 22, 13, 6, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.math.multiply(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(alpha, tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), alpha), grad)))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [44608647168.0, 7077312331776.0, 120753869553664.0, 842080817512448.0, 3741665181302784.0, 1.2341730258976768e+16], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.09959053993225098, 0.09800554811954498, 0.09311848133802414, 0.09998679161071777], "val_loss": [474944700416.0, 25605896667136.0, 274852992778240.0, 1498516371275776.0, 5613142688137216.0, 1.6554667974590464e+16], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 3], [83, 99, 27], [1, 0, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 5], [92, 58], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303288221359253, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 7, 1, 3, 7, 4, 6, 0, 7, 2], [0, 1, 1, 1, 2, 0, 0, 3, 2, 3], [69, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 4], [0, 3, 3, 2, 4], [71], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 4, 3, 5, 3, 1, 3, 7, 5, 6, 5, 3, 7], [0, 7, 4, 2, 0, 4, 4, 5, 4, 3, 4], [0, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 11, 10, 3, 11, 6, 5, 1, 25, 14, 11, 2, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.pow(grad, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.square(grad))), tf.math.multiply(grad, grad))), tf.math.add(sigma, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]