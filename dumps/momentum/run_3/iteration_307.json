[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926411628723145, 2.187879800796509, 1.7710704803466797, 1.3458908796310425, 1.065244436264038, 0.9329190850257874, 0.8504372239112854, 0.8284974694252014, 0.7893971800804138, 0.773387610912323, 0.7090818881988525, 0.7040908336639404, 0.6700186133384705, 0.6542137265205383, 0.6258813738822937, 0.6143094301223755, 0.5916205644607544, 0.5864982008934021, 0.5748506188392639, 0.5612366199493408, 0.5526261329650879, 0.5360670685768127, 0.5307437181472778, 0.518681526184082, 0.5218226313591003, 0.5084232091903687, 0.497883677482605, 0.4843611717224121, 0.47531870007514954, 0.46539413928985596, 0.4567646086215973, 0.45660239458084106, 0.4348745048046112, 0.43906861543655396, 0.4358561635017395, 0.42299869656562805, 0.40530163049697876, 0.40544378757476807, 0.40186798572540283, 0.38935744762420654, 0.3952569365501404, 0.38201889395713806, 0.38997912406921387, 0.36309945583343506, 0.360169380903244, 0.36075058579444885, 0.3504261076450348, 0.346382200717926, 0.34367817640304565, 0.33446186780929565, 0.33513978123664856, 0.32572370767593384, 0.3258284032344818, 0.32600659132003784, 0.32588499784469604], "accuracy": [0.13591335713863373, 0.33099988102912903, 0.42966583371162415, 0.5474838018417358, 0.6382247805595398, 0.6528860330581665, 0.6890767216682434, 0.7022850513458252, 0.6975300312042236, 0.6995112895965576, 0.7289658188819885, 0.7243428826332092, 0.7436270117759705, 0.7456082701683044, 0.7602694630622864, 0.7693831920623779, 0.7730814814567566, 0.7820631265640259, 0.7798177003860474, 0.7862898111343384, 0.7922335267066956, 0.7985734939575195, 0.7997622489929199, 0.8067626357078552, 0.8049134612083435, 0.8105930685997009, 0.8187822103500366, 0.8169330358505249, 0.8198388814926147, 0.8255184292793274, 0.8290846943855286, 0.826310932636261, 0.8352925777435303, 0.832650899887085, 0.8364813327789307, 0.8444063067436218, 0.8475762605667114, 0.8490291833877563, 0.8469158411026001, 0.8496896028518677, 0.8543124794960022, 0.8532558679580688, 0.8495575189590454, 0.8605204224586487, 0.8577466607093811, 0.8651432991027832, 0.8652753829956055, 0.8687095642089844, 0.8659358024597168, 0.869502067565918, 0.8698983192443848, 0.8768987059593201, 0.8729361891746521, 0.8755778670310974, 0.8716153502464294], "val_loss": [2.2451796531677246, 2.015721082687378, 1.1551545858383179, 0.899503231048584, 0.7946764230728149, 0.7521721124649048, 0.7117761969566345, 0.6947529315948486, 0.6864690184593201, 0.6517189145088196, 0.601732075214386, 0.5763776898384094, 0.5669623017311096, 0.5602767467498779, 0.5672300457954407, 0.5353773832321167, 0.5286602973937988, 0.5226106643676758, 0.5186290740966797, 0.525550365447998, 0.5038372278213501, 0.4995434284210205, 0.4945050776004791, 0.4953415095806122, 0.4838738739490509, 0.47379979491233826, 0.46778565645217896, 0.46161189675331116, 0.46622151136398315, 0.45966464281082153, 0.4443749189376831, 0.4412974417209625, 0.4474436342716217, 0.44243180751800537, 0.4452318549156189, 0.4525314271450043, 0.4467659592628479, 0.43733951449394226, 0.4326155185699463, 0.45162850618362427, 0.44167619943618774, 0.43096867203712463, 0.4267747104167938, 0.4221729040145874, 0.437225341796875, 0.437928706407547, 0.4223305583000183, 0.4245951473712921, 0.4341556429862976, 0.4404956102371216, 0.44244420528411865, 0.4543304741382599, 0.46662935614585876, 0.46368399262428284, 0.44853129982948303], "val_accuracy": [0.43433332443237305, 0.46833333373069763, 0.6446666717529297, 0.6966666579246521, 0.7089999914169312, 0.7263333201408386, 0.7419999837875366, 0.7419999837875366, 0.7590000033378601, 0.7606666684150696, 0.7706666588783264, 0.7733333110809326, 0.7943333387374878, 0.7856666445732117, 0.7789999842643738, 0.79666668176651, 0.8053333163261414, 0.800000011920929, 0.8086666464805603, 0.8026666641235352, 0.8119999766349792, 0.8159999847412109, 0.8176666498184204, 0.8190000057220459, 0.8233333230018616, 0.8296666741371155, 0.8289999961853027, 0.8330000042915344, 0.8360000252723694, 0.8379999995231628, 0.840666651725769, 0.8420000076293945, 0.843999981880188, 0.8443333506584167, 0.8460000157356262, 0.847000002861023, 0.8479999899864197, 0.8539999723434448, 0.8576666712760925, 0.8516666889190674, 0.859666645526886, 0.859333336353302, 0.8579999804496765, 0.8573333621025085, 0.859000027179718, 0.8603333234786987, 0.8606666922569275, 0.862666666507721, 0.862666666507721, 0.8663333058357239, 0.8653333187103271, 0.8659999966621399, 0.8643333315849304, 0.8646666407585144, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 1, 3, 7, 3, 1, 0, 4, 6], [0, 0, 1, 0, 2, 2, 2, 3, 0], [83, 99, 27, 65], [1, 1, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [20], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 8, 4, 3, 3], [0, 0, 4, 6], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 4, 1, 0, 1, 1, 9, 5, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(grad, grad)))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.404787302017212, 58.41926193237305, 463.3899230957031, 2332.763671875, 10471.0556640625, 45552.140625], "accuracy": [0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.792052268981934, 194.4786834716797, 1125.6558837890625, 5234.783203125, 23026.91796875, 99385.109375], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 6, 1, 0, 8, 8, 8, 4, 2], [0, 0, 1, 0, 2, 0], [57, 99, 27, 39], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 0], [0, 75], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 1, 0, 0, 1, 0], [7, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 8, 3], [6, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034775257110596, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 5, 4], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 3], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 10, 5, 5, 2, 3, 2, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310391902923584, 2.3089470863342285, 2.3103368282318115, 2.308790922164917, 2.311058521270752, 2.3104896545410156], "accuracy": [0.09298639744520187, 0.0936468094587326, 0.09179764986038208, 0.0948355570435524, 0.09060890227556229, 0.09074098616838455], "val_loss": [2.3083226680755615, 2.3083226680755615, 2.3083226680755615, 2.3083226680755615, 2.3083226680755615, 2.3083226680755615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]