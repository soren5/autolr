[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29439115524292, 2.191685914993286, 1.7851073741912842, 1.3659416437149048, 1.05288565158844, 0.9222548604011536, 0.863036036491394, 0.8114092946052551, 0.7694360613822937, 0.742057740688324, 0.7156912684440613, 0.6774153113365173, 0.6504332423210144, 0.6175613403320312, 0.6094947457313538, 0.5885928273200989, 0.5783815383911133, 0.5725551247596741, 0.5573771595954895, 0.5443069934844971, 0.5330644845962524, 0.5251704454421997, 0.521391749382019, 0.502344012260437, 0.48759740591049194, 0.4809166193008423, 0.46923884749412537, 0.4680519104003906, 0.4454602003097534, 0.4449615776538849, 0.4463779330253601, 0.433316707611084, 0.42402464151382446, 0.41814926266670227, 0.4184359312057495, 0.4056006968021393, 0.4006534218788147, 0.40243205428123474], "accuracy": [0.11953506618738174, 0.3234711289405823, 0.43547746539115906, 0.535332202911377, 0.6446968913078308, 0.6634526252746582, 0.6777176260948181, 0.7057191729545593, 0.6995112895965576, 0.7135120630264282, 0.7263241410255432, 0.7427024245262146, 0.7503632307052612, 0.7668735980987549, 0.7664773464202881, 0.7681944370269775, 0.7790252566337585, 0.7790252566337585, 0.7872143983840942, 0.7926297783851624, 0.7993659973144531, 0.7984414100646973, 0.8009510040283203, 0.8087438941001892, 0.8095363974571228, 0.816008448600769, 0.8214238286018372, 0.8149517774581909, 0.8301413059234619, 0.8334434032440186, 0.8264430165290833, 0.8317263126373291, 0.8418967127799988, 0.8385946154594421, 0.846387505531311, 0.8442742228507996, 0.8486329317092896, 0.8465195894241333], "val_loss": [2.2474300861358643, 2.026329278945923, 1.1534240245819092, 0.8704497814178467, 0.7648529410362244, 0.7331582903862, 0.6910393834114075, 0.659652590751648, 0.6462441682815552, 0.6400275230407715, 0.604204535484314, 0.5736192464828491, 0.5603142976760864, 0.5559737682342529, 0.5389407277107239, 0.5252161026000977, 0.5149872899055481, 0.5070850253105164, 0.49917662143707275, 0.4997405707836151, 0.491609662771225, 0.4896121025085449, 0.49291056394577026, 0.4793357849121094, 0.47359225153923035, 0.4724232852458954, 0.47082018852233887, 0.46659237146377563, 0.46372881531715393, 0.4537001848220825, 0.456202894449234, 0.4683731198310852, 0.44125881791114807, 0.4372989237308502, 0.4442089796066284, 0.43517428636550903, 0.4340170919895172, 0.4302603006362915], "val_accuracy": [0.4033333361148834, 0.45899999141693115, 0.6330000162124634, 0.6869999766349792, 0.7086666822433472, 0.7166666388511658, 0.7379999756813049, 0.7353333234786987, 0.7406666874885559, 0.7519999742507935, 0.753000020980835, 0.778333306312561, 0.7760000228881836, 0.7866666913032532, 0.79666668176651, 0.7973333597183228, 0.7996666431427002, 0.7979999780654907, 0.8046666383743286, 0.8073333501815796, 0.8186666369438171, 0.8176666498184204, 0.8140000104904175, 0.8253333568572998, 0.8209999799728394, 0.8236666917800903, 0.828000009059906, 0.8296666741371155, 0.8379999995231628, 0.8339999914169312, 0.8326666951179504, 0.8349999785423279, 0.8483333587646484, 0.843999981880188, 0.8426666855812073, 0.8433333039283752, 0.8460000157356262, 0.8456666469573975]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 3, 3, 1, 3, 5, 6, 1, 6, 5, 7, 9, 7, 1, 7, 9], [3, 0, 1, 0, 1, 0, 2, 2, 1, 0], [83, 99, 27, 88, 94, 52], [1, 0, 1, 0, 1, 1], [0, 1, 8], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.30971428751945496, "mapping_values": [1, 26, 16, 10, 6, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(grad, alpha))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.434741497039795, 8.961395263671875, NaN, NaN, NaN, NaN], "accuracy": [0.25742965936660767, 0.1364416927099228, 0.1022322028875351, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.17950177192688, 29.353374481201172, NaN, NaN, NaN, NaN], "val_accuracy": [0.3243333399295807, 0.12066666781902313, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 2, 5, 3, 2, 8, 0, 7, 7, 7, 2, 1, 1, 6, 3, 9, 0, 5, 0], [0, 5, 1, 2, 1, 2, 3, 4, 1, 2, 1, 4], [0, 23], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 32, 20, 12, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(alpha, beta), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), grad)), alpha))), beta))), alpha), tf.math.negative(tf.math.square(tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [18262765076480.0, 3.485776259960579e+20, 4.178320349252544e+26, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09787346422672272, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1279662420393984.0, 2.3787740763993504e+22, NaN, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.10000000149011612, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 4, 8], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 0, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1], [0, 0, 4, 0, 9], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 6, 5, 1, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1118268928.0, 21552166912.0, 97434681344.0, 276773044224.0, 594950750208.0, 1091974135808.0], "accuracy": [0.0952318087220192, 0.09708096832036972, 0.1022322028875351, 0.10460969805717468, 0.1010434553027153, 0.09681680053472519], "val_loss": [5200345600.0, 41597612032.0, 140386254848.0, 332760023040.0, 649918545920.0, 1123047702528.0], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 1, 3, 7, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 6, 5, 6, 6, 3, 1], [0, 4, 3, 5, 3, 5, 0], [0, 68], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 4, 3, 4], [0, 0, 4, 6, 1], [0, 26], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 15, 8, 7, 2, 10, 5, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(grad), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.subtract(grad, grad), grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47932104704.0, 7130317324288.0, 117514608574464.0, 839957157511168.0, 3716567808344064.0, 1.2128341251325952e+16], "accuracy": [0.09708096832036972, 0.0952318087220192, 0.10447761416435242, 0.09681680053472519, 0.09945846349000931, 0.1010434553027153], "val_loss": [467921207296.0, 25227624972288.0, 270784215908352.0, 1476192876101632.0, 5530353972281344.0, 1.6314450453725184e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]