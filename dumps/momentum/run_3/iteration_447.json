[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293992757797241, 2.19038462638855, 1.766972541809082, 1.3572564125061035, 1.0769538879394531, 0.9182923436164856, 0.8272152543067932, 0.8222033381462097, 0.752788782119751, 0.7327074408531189, 0.6931701898574829, 0.6698970198631287, 0.6484394073486328, 0.6154451370239258, 0.6033135652542114, 0.5902912020683289, 0.5715724229812622, 0.5582120418548584, 0.5565142631530762, 0.5477594137191772, 0.5298779010772705, 0.5260252356529236, 0.5147514343261719, 0.5033507943153381, 0.49342891573905945, 0.47659024596214294, 0.46540507674217224, 0.4502432346343994, 0.44233939051628113, 0.437633752822876, 0.41977396607398987, 0.4165884852409363, 0.39704081416130066, 0.4055127203464508, 0.3975420594215393, 0.37993675470352173, 0.37630948424339294, 0.38030099868774414, 0.3733646869659424, 0.3674429655075073, 0.3508043885231018, 0.36174747347831726, 0.34997934103012085, 0.3392917513847351], "accuracy": [0.12481838464736938, 0.3335094451904297, 0.44525161385536194, 0.5432571768760681, 0.6367719173431396, 0.6670188903808594, 0.6934354901313782, 0.6954167485237122, 0.7062475085258484, 0.7154933214187622, 0.7320036888122559, 0.7395324110984802, 0.7537974119186401, 0.763967752456665, 0.7644960880279541, 0.7781006693840027, 0.7848368883132935, 0.7823272943496704, 0.785629391670227, 0.7902522683143616, 0.8004226684570312, 0.8043851256370544, 0.800818920135498, 0.8068947196006775, 0.8104609847068787, 0.8152159452438354, 0.821820080280304, 0.8273676037788391, 0.8274996876716614, 0.830669641494751, 0.8405758738517761, 0.8417646288871765, 0.847840428352356, 0.8442742228507996, 0.8502179384231567, 0.8557654023170471, 0.8553691506385803, 0.8541803956031799, 0.8590674996376038, 0.8605204224586487, 0.8643507957458496, 0.860652506351471, 0.8617091774940491, 0.8679170608520508], "val_loss": [2.2470479011535645, 2.025491952896118, 1.1493921279907227, 0.9002695083618164, 0.7781633138656616, 0.7133828401565552, 0.678825318813324, 0.6716014742851257, 0.6344776153564453, 0.6211923956871033, 0.5840843915939331, 0.5624135732650757, 0.5534917116165161, 0.5433717966079712, 0.5360463857650757, 0.5261620879173279, 0.5140049457550049, 0.5098443031311035, 0.5049712657928467, 0.5011617541313171, 0.49285033345222473, 0.48677271604537964, 0.4693310558795929, 0.4694679081439972, 0.47464099526405334, 0.44740810990333557, 0.43660977482795715, 0.43598002195358276, 0.42456871271133423, 0.42451250553131104, 0.42730680108070374, 0.416515052318573, 0.4136955142021179, 0.4058154821395874, 0.4064672887325287, 0.4194628894329071, 0.41326528787612915, 0.40690165758132935, 0.4011518657207489, 0.4088495373725891, 0.4114239811897278, 0.4005054831504822, 0.40220901370048523, 0.4028512239456177], "val_accuracy": [0.43066665530204773, 0.44600000977516174, 0.6493333578109741, 0.6896666884422302, 0.7206666469573975, 0.7323333621025085, 0.7419999837875366, 0.7450000047683716, 0.7490000128746033, 0.7596666812896729, 0.7646666765213013, 0.7733333110809326, 0.7793333530426025, 0.7796666622161865, 0.7883333563804626, 0.7943333387374878, 0.7993333339691162, 0.8059999942779541, 0.7929999828338623, 0.8106666803359985, 0.812666654586792, 0.8073333501815796, 0.8226666450500488, 0.8266666531562805, 0.8220000267028809, 0.8323333263397217, 0.840666651725769, 0.840666651725769, 0.8450000286102295, 0.846666693687439, 0.8510000109672546, 0.8483333587646484, 0.8546666502952576, 0.8556666374206543, 0.8616666793823242, 0.8586666584014893, 0.8613333106040955, 0.8640000224113464, 0.8696666955947876, 0.8653333187103271, 0.862333357334137, 0.8683333396911621, 0.8656666874885559, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.2240000069141388, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.314997673034668, 3.951988935470581, NaN, NaN, NaN, NaN], "accuracy": [0.1954827606678009, 0.17553824186325073, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2641959190368652, 4.666344165802002, NaN, NaN, NaN, NaN], "val_accuracy": [0.22100000083446503, 0.10300000011920929, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 1, 3, 1, 4, 2, 4], [0, 0, 1, 0, 2, 0, 3, 1], [83, 99, 84, 39], [1, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 4, 3, 9], [7, 0, 4], [78, 58], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 7, 0, 4, 0, 4, 2, 7, 7, 1, 4, 0, 4, 6, 2, 2, 6, 5, 7, 2, 8, 2, 6, 3, 5, 3, 5, 6, 6, 2, 4], [1, 7, 6, 2, 6, 2, 5, 5, 3, 1, 7, 6, 5, 1, 3, 0, 3, 3, 2, 4, 5, 0, 3, 0, 4], [0, 53, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 7, 8, 4, 1, 0, 1, 1, 8, 5, 3, 2, 56, 31, 25, 3], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.multiply(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(tf.math.add(sigma, alpha), grad))), grad), grad), alpha), sigma))), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(beta, tf.math.add(grad, grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 3, 5, 0], [3, 0, 1, 0, 2, 0], [83, 25, 4], [1, 0, 1, 0, 1, 1], [4, 1, 5], [0, 3, 3], [7], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [1, 0, 4], [0, 34], [0, 1], [0], [1], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 14, 8, 6, 3, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3100287914276123, 2.309612989425659, 2.3099589347839355, 2.310244083404541, 2.31046724319458, 2.310512065887451], "accuracy": [0.09179764986038208, 0.09615638852119446, 0.09245806187391281, 0.09087307006120682, 0.08955223858356476, 0.09021265059709549], "val_loss": [2.3087034225463867, 2.3087034225463867, 2.3087034225463867, 2.3087034225463867, 2.3087034225463867, 2.3087034225463867], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 3, 1, 3, 4, 3, 8, 4, 0, 0, 8, 8, 9, 4, 3, 2], [0, 0, 1, 0, 2, 1, 1, 3, 3], [83, 99, 27, 94], [1, 0, 1, 0, 1, 1], [0, 1, 2], [4, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [3, 7, 8, 3], [1, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 26, 17, 9, 4, 1, 0, 1, 0, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, alpha))))), tf.math.multiply(alpha, tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.311141014099121, 2.3095974922180176, 2.3102681636810303, 2.3109960556030273, 2.310939073562622, 2.3103830814361572], "accuracy": [0.08981640636920929, 0.0948355570435524, 0.09047681838274002, 0.0886276587843895, 0.09140139818191528, 0.09140139818191528], "val_loss": [2.309006452560425, 2.309006452560425, 2.309006452560425, 2.309006452560425, 2.309006452560425, 2.309006452560425], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]