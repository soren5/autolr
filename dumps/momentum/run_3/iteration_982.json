[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292870044708252, 2.1905341148376465, 1.7655433416366577, 1.3264787197113037, 1.0907968282699585, 0.9363084435462952, 0.8544074296951294, 0.8243476152420044, 0.7543895244598389, 0.737434983253479, 0.7031944990158081, 0.6802684664726257, 0.6461917161941528, 0.6197729706764221, 0.6062542796134949, 0.5895857810974121, 0.5711058974266052, 0.5698876976966858, 0.5638158917427063, 0.5557357668876648, 0.5475634336471558, 0.5265512466430664, 0.5206520557403564, 0.5099312663078308, 0.4967966675758362, 0.49367189407348633, 0.4765520989894867, 0.4753184914588928, 0.4591420590877533, 0.4596308469772339, 0.44582459330558777, 0.4402386546134949, 0.42813828587532043, 0.4278850853443146, 0.4275164306163788, 0.42195290327072144, 0.4065271019935608, 0.4024959206581116, 0.3963042199611664, 0.37776288390159607, 0.3819378912448883, 0.37618061900138855, 0.37012359499931335, 0.3770347833633423], "accuracy": [0.1266675442457199, 0.32545238733291626, 0.4403645396232605, 0.547087550163269, 0.635451078414917, 0.6571126580238342, 0.6868313550949097, 0.6999075412750244, 0.7160216569900513, 0.7280412316322327, 0.7351737022399902, 0.7416457533836365, 0.7547219395637512, 0.7584202885627747, 0.7726852297782898, 0.7733456492424011, 0.7771760821342468, 0.7796856164932251, 0.7777044177055359, 0.7854973077774048, 0.789988100528717, 0.7984414100646973, 0.7997622489929199, 0.8010830879211426, 0.8043851256370544, 0.8063663840293884, 0.8181217908859253, 0.8146876096725464, 0.8222163319587708, 0.8235371708869934, 0.8285563588142395, 0.8274996876716614, 0.8343679904937744, 0.8330471515655518, 0.8356888294219971, 0.8432175517082214, 0.8466516733169556, 0.8506141901016235, 0.8465195894241333, 0.8510104417800903, 0.8549728989601135, 0.8558974862098694, 0.8580108284950256, 0.8515387773513794], "val_loss": [2.2464511394500732, 2.0193023681640625, 1.139094352722168, 0.9087403416633606, 0.7931033372879028, 0.7451207637786865, 0.6973446607589722, 0.6630588173866272, 0.6502706408500671, 0.6138299703598022, 0.569034993648529, 0.5451697707176208, 0.5365936160087585, 0.5243073105812073, 0.5153675675392151, 0.5025761723518372, 0.49773716926574707, 0.4935401976108551, 0.490706205368042, 0.48662182688713074, 0.48620718717575073, 0.47210270166397095, 0.46377429366111755, 0.47238659858703613, 0.45604586601257324, 0.4592565596103668, 0.45164063572883606, 0.44665178656578064, 0.436705619096756, 0.4402170479297638, 0.43227237462997437, 0.43088963627815247, 0.42306384444236755, 0.4305429756641388, 0.41552385687828064, 0.4026035666465759, 0.3984556794166565, 0.3921496570110321, 0.3948915898799896, 0.4049892723560333, 0.40458178520202637, 0.3994850218296051, 0.3907841742038727, 0.395219087600708], "val_accuracy": [0.4090000092983246, 0.43700000643730164, 0.6480000019073486, 0.6736666560173035, 0.7020000219345093, 0.7166666388511658, 0.7246666550636292, 0.7506666779518127, 0.749666690826416, 0.7576666474342346, 0.7673333287239075, 0.7743333578109741, 0.7799999713897705, 0.7876666784286499, 0.7910000085830688, 0.8056666851043701, 0.7979999780654907, 0.7940000295639038, 0.8076666593551636, 0.8069999814033508, 0.8063333630561829, 0.8253333568572998, 0.8273333311080933, 0.8106666803359985, 0.8323333263397217, 0.8293333053588867, 0.8303333520889282, 0.8299999833106995, 0.8330000042915344, 0.8353333473205566, 0.840666651725769, 0.8376666903495789, 0.8379999995231628, 0.8389999866485596, 0.8486666679382324, 0.8516666889190674, 0.8519999980926514, 0.8583333492279053, 0.8603333234786987, 0.859333336353302, 0.8560000061988831, 0.859666645526886, 0.8576666712760925, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 2, 8, 4, 0], [0, 3, 0, 1], [0, 37], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3, 5, 7, 6, 3, 4, 7, 8, 0, 9, 9, 1, 3, 4, 3, 2, 8, 0, 8, 4, 2, 0, 8, 8], [5, 0, 5, 0, 0, 0, 7, 1, 1, 6, 5, 4, 3], [0, 98, 51, 9, 66, 90], [1, 0], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 40, 27, 13, 6, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(alpha), tf.math.negative(tf.math.sqrt(tf.math.pow(alpha, grad))))), tf.math.add(tf.math.negative(tf.math.sqrt(grad)), tf.math.sqrt(grad)))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 6], [0, 0, 1, 1, 2], [52, 99, 27], [1, 0, 1, 0, 0, 1], [7, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [4, 0, 4, 9], [0, 0, 1], [0, 58], [1, 1], [1], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303712844848633, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 2, 4, 6, 2, 9, 7, 5, 7, 9, 5, 1, 1], [0, 3, 3, 0, 5, 5, 1, 2], [0, 22, 39, 80], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 5], [0, 0, 4], [0, 86], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 4, 4], [1, 0, 3, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 22, 14, 8, 4, 8, 5, 3, 2, 8, 4, 4, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.square(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, tf.math.subtract(alpha, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 2, 1, 4, 9], [1, 3, 3, 4], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 1, 1, 0, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3090484142303467, 2.310276508331299, 2.310811758041382, 2.3094818592071533, 2.3102662563323975, 2.3104350566864014], "accuracy": [0.09417514503002167, 0.09721305221319199, 0.0886276587843895, 0.09470347315073013, 0.09047681838274002, 0.09430722147226334], "val_loss": [2.308464527130127, 2.308464527130127, 2.308464527130127, 2.308464527130127, 2.308464527130127, 2.308464527130127], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]