[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943387031555176, 2.1915125846862793, 1.7741496562957764, 1.3209806680679321, 1.0730174779891968, 0.9101482629776001, 0.830523669719696, 0.7813759446144104, 0.7623337507247925, 0.7363372445106506, 0.6962016224861145, 0.6554288864135742, 0.647777259349823, 0.6273936629295349, 0.616849422454834, 0.6056644916534424, 0.5878307819366455, 0.5878937244415283, 0.5578186511993408, 0.568924069404602, 0.5378961563110352, 0.5385779142379761, 0.5224614143371582, 0.5239299535751343, 0.5058999061584473, 0.4979455769062042, 0.48611578345298767, 0.48024100065231323, 0.46804583072662354, 0.45523324608802795, 0.45448166131973267, 0.4394960105419159, 0.4307194948196411, 0.43042176961898804, 0.4359692633152008, 0.4215449392795563, 0.41436654329299927, 0.4002538323402405, 0.4127746522426605, 0.4013531804084778, 0.39340871572494507, 0.3845006823539734, 0.3822396695613861, 0.38247111439704895, 0.35990259051322937, 0.35703107714653015, 0.36499667167663574, 0.3618542551994324, 0.36999446153640747, 0.34711065888404846, 0.34812670946121216, 0.3534882068634033, 0.3403153419494629, 0.3340144157409668], "accuracy": [0.12917712330818176, 0.32941487431526184, 0.44010037183761597, 0.5503896474838257, 0.6365077495574951, 0.6660943031311035, 0.6989829540252686, 0.7132478952407837, 0.7108704447746277, 0.7176066637039185, 0.7367587089538574, 0.7434949278831482, 0.7497028112411499, 0.7617223858833313, 0.7666094303131104, 0.772288978099823, 0.7815347909927368, 0.7746664881706238, 0.7869502305984497, 0.7821952104568481, 0.7922335267066956, 0.7928939461708069, 0.8018755912780762, 0.8013472557067871, 0.8014793395996094, 0.8096684813499451, 0.8173292875289917, 0.8182538747787476, 0.8173292875289917, 0.8271034359931946, 0.8245938420295715, 0.8359529972076416, 0.8348963260650635, 0.837141752243042, 0.8350284099578857, 0.8383304476737976, 0.8426892161369324, 0.8521991968154907, 0.8448025584220886, 0.8457271456718445, 0.8496896028518677, 0.8545766472816467, 0.8537842035293579, 0.8524633646011353, 0.8589354157447815, 0.8593316674232483, 0.8615770936012268, 0.8639545440673828, 0.8537842035293579, 0.8636903762817383, 0.8614450097084045, 0.8650112152099609, 0.8644828796386719, 0.8702945709228516], "val_loss": [2.245863437652588, 2.024540424346924, 1.1221238374710083, 0.8614134192466736, 0.7602570056915283, 0.7221987247467041, 0.6745585203170776, 0.6816837787628174, 0.6419760584831238, 0.6339482665061951, 0.5841988325119019, 0.5680888891220093, 0.5573946833610535, 0.5345464944839478, 0.5235341787338257, 0.5227691531181335, 0.5185906291007996, 0.5051727890968323, 0.5063689947128296, 0.49271005392074585, 0.5032866597175598, 0.493025541305542, 0.49203768372535706, 0.4788620173931122, 0.46258196234703064, 0.45804598927497864, 0.46282461285591125, 0.45864883065223694, 0.4384172260761261, 0.4390996992588043, 0.4306022822856903, 0.4290199875831604, 0.4362034499645233, 0.4455976188182831, 0.44008511304855347, 0.43133285641670227, 0.43484410643577576, 0.4305063486099243, 0.4268089234828949, 0.4230079650878906, 0.42575663328170776, 0.42327481508255005, 0.424775630235672, 0.41568994522094727, 0.40886780619621277, 0.4140435457229614, 0.44143328070640564, 0.4432295262813568, 0.416635662317276, 0.4172598421573639, 0.41609126329421997, 0.42244455218315125, 0.42273542284965515, 0.4343881905078888], "val_accuracy": [0.4336666762828827, 0.48899999260902405, 0.6516666412353516, 0.7043333053588867, 0.7166666388511658, 0.734333336353302, 0.7436666488647461, 0.7516666650772095, 0.7393333315849304, 0.7586666941642761, 0.7773333191871643, 0.7839999794960022, 0.7903333306312561, 0.8046666383743286, 0.8106666803359985, 0.7983333468437195, 0.8069999814033508, 0.812666654586792, 0.8146666884422302, 0.8199999928474426, 0.8236666917800903, 0.8206666707992554, 0.8180000185966492, 0.8320000171661377, 0.8420000076293945, 0.8289999961853027, 0.8389999866485596, 0.8346666693687439, 0.840666651725769, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.8493333458900452, 0.8513333201408386, 0.8510000109672546, 0.8546666502952576, 0.8583333492279053, 0.8529999852180481, 0.8586666584014893, 0.8556666374206543, 0.859666645526886, 0.859666645526886, 0.8603333234786987, 0.8579999804496765, 0.8629999756813049, 0.8616666793823242, 0.8633333444595337, 0.8606666922569275, 0.8640000224113464, 0.859000027179718, 0.859333336353302, 0.8550000190734863, 0.859666645526886, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293433904647827, 2.1913015842437744, 1.7810777425765991, 1.376064658164978, 1.0601370334625244, 0.9396569728851318, 0.8510249853134155, 0.8234309554100037, 0.7623305320739746, 0.7383331060409546, 0.6923049092292786, 0.6916730999946594, 0.6564050912857056, 0.6253320574760437, 0.6143171191215515, 0.5943901538848877, 0.5919548869132996, 0.570068895816803, 0.5558026432991028, 0.5451187491416931, 0.551402747631073, 0.5266167521476746, 0.5236963629722595, 0.5112724304199219, 0.50320965051651, 0.49123308062553406, 0.4799603819847107, 0.46595677733421326, 0.468029260635376, 0.44257989525794983, 0.44577234983444214, 0.4437609910964966, 0.4331377446651459, 0.4225236773490906, 0.4063194990158081, 0.40226367115974426, 0.3874363899230957, 0.38604065775871277, 0.3864312767982483, 0.39000609517097473], "accuracy": [0.1220446452498436, 0.3179236650466919, 0.4340245723724365, 0.5283318161964417, 0.6363756656646729, 0.6522256135940552, 0.6931713223457336, 0.694360077381134, 0.7046625018119812, 0.7164179086685181, 0.7301545143127441, 0.7392682433128357, 0.7524765729904175, 0.7660810947418213, 0.7622507214546204, 0.7666094303131104, 0.7836481332778931, 0.7839123010635376, 0.7895918488502502, 0.7910447716712952, 0.7835160493850708, 0.7930260300636292, 0.8018755912780762, 0.8039889335632324, 0.8049134612083435, 0.8117818236351013, 0.8157442808151245, 0.8253863453865051, 0.817989706993103, 0.8301413059234619, 0.8319904804229736, 0.8366134166717529, 0.8356888294219971, 0.8366134166717529, 0.8446704745292664, 0.852331280708313, 0.8529917001724243, 0.8496896028518677, 0.8527275323867798, 0.8491612672805786], "val_loss": [2.2468149662017822, 2.020554780960083, 1.142863392829895, 0.8779515027999878, 0.7664416432380676, 0.7141229510307312, 0.6674129366874695, 0.6399067640304565, 0.6371012330055237, 0.626134991645813, 0.58779376745224, 0.5731143951416016, 0.5587012767791748, 0.5454604625701904, 0.5369954705238342, 0.5145817995071411, 0.5079792737960815, 0.5070989727973938, 0.515637993812561, 0.5014600157737732, 0.5034395456314087, 0.49454551935195923, 0.49605488777160645, 0.484272301197052, 0.4806416928768158, 0.4815851151943207, 0.4784228801727295, 0.4613369405269623, 0.4613313674926758, 0.46104729175567627, 0.4622446596622467, 0.4471382796764374, 0.4466171860694885, 0.4406086504459381, 0.4322996437549591, 0.4483735263347626, 0.45251232385635376, 0.4340786039829254, 0.4316346049308777, 0.44307947158813477], "val_accuracy": [0.4020000100135803, 0.4636666774749756, 0.653333306312561, 0.7043333053588867, 0.7283333539962769, 0.7403333187103271, 0.7603333592414856, 0.7443333268165588, 0.765666663646698, 0.7590000033378601, 0.7733333110809326, 0.7886666655540466, 0.7943333387374878, 0.7950000166893005, 0.7979999780654907, 0.8083333373069763, 0.8096666932106018, 0.8136666417121887, 0.8130000233650208, 0.8213333487510681, 0.8206666707992554, 0.8166666626930237, 0.8199999928474426, 0.8276666402816772, 0.8333333134651184, 0.8289999961853027, 0.8320000171661377, 0.8366666436195374, 0.8370000123977661, 0.8410000205039978, 0.8389999866485596, 0.8450000286102295, 0.847000002861023, 0.8479999899864197, 0.8586666584014893, 0.8560000061988831, 0.8506666421890259, 0.8526666760444641, 0.856333315372467, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 2, 2, 0, 0], [83, 20, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1], [0, 0, 4, 9], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 6, 3, 3, 1, 5, 4, 1, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3046436309814453, 2.3837027549743652, 9.449020385742188, 28.81899642944336, 61.15690231323242, 105.46113586425781], "accuracy": [0.10236428678035736, 0.09959053993225098, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308283567428589, 3.142735719680786, 23.005016326904297, 45.562808990478516, 85.2376480102539, 136.26556396484375], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 3, 2], [0, 4, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [8, 0, 4, 3, 6, 8, 7, 0], [4, 0, 4, 5, 2], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.add(grad, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1, 3, 4, 2, 6], [0, 0, 1, 0, 2, 1, 1, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1], [0, 1, 9], [0, 2, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [56, 82], [0, 1], [0], [0], [0]], "fitness": -0.09514285624027252, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(alpha, alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3096325397491455, 2.3097870349884033, 2.3099043369293213, 2.309072971343994, 2.3102848529815674, 2.309117555618286], "accuracy": [0.08875974267721176, 0.0866464152932167, 0.09377889335155487, 0.0952318087220192, 0.09153348207473755, 0.0956280529499054], "val_loss": [2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}, "mapping_values": [1, 16, 8, 8, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 15}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 6, 3, 1, 3], [0, 0, 3, 1, 2], [85, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 2, 7, 2, 5, 8, 0, 4, 8], [0, 3, 3, 5, 1, 1], [0], [0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 3, 3, 8], [0, 0, 4], [0, 58], [0, 1], [0], [0], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 16, 10, 6, 1, 8, 5, 3, 2, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), grad), tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.sqrt(alpha), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3108980655670166, 2.309648275375366, 2.3101236820220947, 2.3114054203033447, 2.310297966003418, 2.3094358444213867], "accuracy": [0.08875974267721176, 0.08902391046285629, 0.09509972482919693, 0.09021265059709549, 0.09259014576673508, 0.10196803510189056], "val_loss": [2.308851718902588, 2.308851718902588, 2.308851718902588, 2.308851718902588, 2.308851718902588, 2.308851718902588], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]