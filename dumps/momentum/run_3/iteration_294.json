[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938592433929443, 2.18827486038208, 1.7745648622512817, 1.332204818725586, 1.0871524810791016, 0.9496241211891174, 0.8495282530784607, 0.8053144216537476, 0.75249183177948, 0.7255010604858398, 0.6926472187042236, 0.6755130887031555, 0.6485415697097778, 0.6153110861778259, 0.5950180888175964, 0.5822423100471497, 0.559321939945221, 0.5433618426322937, 0.5518952012062073, 0.5471440553665161, 0.5276926159858704, 0.5150861144065857, 0.5038558840751648, 0.4992360770702362, 0.4778468906879425, 0.4628139138221741, 0.4549638032913208, 0.4424203336238861, 0.44443565607070923, 0.4215035140514374, 0.43081188201904297, 0.41130149364471436, 0.4124935269355774, 0.3953689634799957, 0.4015907645225525, 0.3891724646091461, 0.3724795877933502, 0.37177595496177673, 0.3529350459575653, 0.350199818611145, 0.34975674748420715, 0.34575918316841125, 0.32871729135513306, 0.33410993218421936], "accuracy": [0.12323339283466339, 0.33179235458374023, 0.4375908076763153, 0.5534275770187378, 0.6388852000236511, 0.6425835490226746, 0.6956809163093567, 0.7000396251678467, 0.7107383608818054, 0.7226257920265198, 0.7341170310974121, 0.741909921169281, 0.7574957013130188, 0.7650244235992432, 0.7685906887054443, 0.7755910754203796, 0.787082314491272, 0.7898560166358948, 0.7828556299209595, 0.7895918488502502, 0.7994980812072754, 0.8057059645652771, 0.8103289008140564, 0.8113855719566345, 0.8187822103500366, 0.8212917447090149, 0.8241975903511047, 0.8244617581367493, 0.8305375576019287, 0.8389908671379089, 0.8367455005645752, 0.8436138033866882, 0.8449346423149109, 0.8465195894241333, 0.8457271456718445, 0.8519350290298462, 0.858671247959137, 0.8568220734596252, 0.8650112152099609, 0.8687095642089844, 0.8642187118530273, 0.869502067565918, 0.8696341514587402, 0.8676528930664062], "val_loss": [2.246678113937378, 2.0199317932128906, 1.1353909969329834, 0.8709021806716919, 0.7703002095222473, 0.7240263819694519, 0.6652960777282715, 0.664752185344696, 0.639492928981781, 0.6216543912887573, 0.5948092341423035, 0.5739064812660217, 0.5534696578979492, 0.5465320348739624, 0.5275852680206299, 0.5232923030853271, 0.5162917375564575, 0.5086753368377686, 0.504000186920166, 0.5104678273200989, 0.4954267144203186, 0.48596078157424927, 0.48578372597694397, 0.4825495481491089, 0.47837647795677185, 0.47061726450920105, 0.4674050807952881, 0.46295157074928284, 0.45401355624198914, 0.4499964118003845, 0.449440598487854, 0.44555142521858215, 0.4295521676540375, 0.4323396384716034, 0.4364839196205139, 0.4331958293914795, 0.42812541127204895, 0.44044750928878784, 0.44169920682907104, 0.4282000660896301, 0.4399583041667938, 0.43747347593307495, 0.43161576986312866, 0.4328845143318176], "val_accuracy": [0.4099999964237213, 0.4690000116825104, 0.656000018119812, 0.6936666369438171, 0.7283333539962769, 0.7366666793823242, 0.7456666827201843, 0.7543333172798157, 0.7426666617393494, 0.7636666893959045, 0.7643333077430725, 0.781000018119812, 0.7873333096504211, 0.7913333177566528, 0.796999990940094, 0.7986666560173035, 0.7950000166893005, 0.8019999861717224, 0.8113333582878113, 0.8056666851043701, 0.812333345413208, 0.8169999718666077, 0.8223333358764648, 0.8263333439826965, 0.8306666612625122, 0.8330000042915344, 0.8316666483879089, 0.8363333344459534, 0.8370000123977661, 0.8450000286102295, 0.843999981880188, 0.8413333296775818, 0.8413333296775818, 0.8460000157356262, 0.8526666760444641, 0.8550000190734863, 0.8523333072662354, 0.8533333539962769, 0.8636666536331177, 0.859333336353302, 0.8633333444595337, 0.8603333234786987, 0.8616666793823242, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 4, 3, 6, 0, 2, 5, 8, 0, 3, 4, 2], [0, 0, 2, 0, 2, 3, 1, 0, 1, 2], [83, 99, 16, 20], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 5, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [6], [0]], "fitness": -0.22428570687770844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))))), tf.math.negative(grad)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [9.03913688659668, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21476687490940094, 0.10817593336105347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.0759968757629395, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.22166666388511658, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 24, 14, 10, 4, 6, 3, 3, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 7, 3], [0, 0, 1, 0, 2], [83, 99, 37], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 1, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1639.0360107421875, 2.986428737640381, 3.1397950649261475, 3.159353017807007, 3.974458932876587, 5.762668132781982, 7.756167888641357, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09351472556591034, 0.09826971590518951, 0.09774138033390045, 0.09985470771789551, 0.10196803510189056, 0.09576013684272766, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.881286144256592, 3.094761371612549, 2.8206779956817627, 4.693593978881836, 4.703116416931152, 6.985057353973389, 944297216.0, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.10000000149011612, 0.09933333098888397, 0.10166666656732559, 0.0989999994635582, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 3, 1, 3, 0, 5, 6, 6, 9, 3, 1, 5, 4, 4, 8, 8, 9], [0, 0, 1, 3, 2, 0, 3, 1, 3], [83, 37, 27, 60, 10], [0, 1, 1, 0, 1, 1], [0, 1, 8], [0, 3, 3], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [73, 58], [0, 1, 0, 1, 1], [3, 1], [1, 5, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 18, 9, 5, 2, 1, 1, 1, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.math.square(grad), grad), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))))))), tf.math.pow(alpha, grad)), tf.math.sqrt(tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3], [1, 0, 1, 0, 2], [83, 99, 45], [1, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 5], [0], [0, 1, 0, 0, 1, 1, 1], [6, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3097240924835205, 2.310330390930176, 2.310784101486206, 2.3117282390594482, 2.3094730377197266, 2.3109214305877686], "accuracy": [0.09100515395402908, 0.09509972482919693, 0.09206181764602661, 0.08994849026203156, 0.09140139818191528, 0.08889182657003403], "val_loss": [2.308302640914917, 2.308302640914917, 2.308302640914917, 2.308302640914917, 2.308302640914917, 2.308302640914917], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]