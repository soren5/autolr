[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928683757781982, 2.1901628971099854, 1.7697961330413818, 1.3496822118759155, 1.1077007055282593, 0.9286104440689087, 0.8615520000457764, 0.8328994512557983, 0.7728447914123535, 0.7685898542404175, 0.7246163487434387, 0.6959064602851868, 0.662222683429718, 0.6407942771911621, 0.6195049285888672, 0.5955256223678589, 0.5900296568870544, 0.5778141617774963, 0.5645498633384705, 0.5420811176300049, 0.5322176814079285, 0.52994704246521, 0.5088420510292053, 0.5136384963989258, 0.48336702585220337, 0.49400094151496887, 0.46770384907722473, 0.4677831530570984, 0.46833792328834534, 0.45978131890296936, 0.4325345754623413, 0.43386828899383545, 0.43038153648376465, 0.4202442765235901, 0.4075172543525696, 0.40918272733688354, 0.4027402698993683, 0.38632720708847046, 0.3822862207889557, 0.3789995610713959, 0.37960973381996155], "accuracy": [0.12495046854019165, 0.3327169418334961, 0.4415532946586609, 0.5420684218406677, 0.62660151720047, 0.6583014130592346, 0.6870955228805542, 0.6909258961677551, 0.6979262828826904, 0.6950204968452454, 0.7211728692054749, 0.7360982894897461, 0.7359662055969238, 0.7528728246688843, 0.7565711140632629, 0.7630431652069092, 0.7754589915275574, 0.7769119143486023, 0.7769119143486023, 0.7843085527420044, 0.7890635132789612, 0.7935543656349182, 0.7972526550292969, 0.7922335267066956, 0.8084797263145447, 0.8087438941001892, 0.8112534880638123, 0.8138951063156128, 0.8141592741012573, 0.8185180425643921, 0.8272355198860168, 0.8308017253875732, 0.8305375576019287, 0.8348963260650635, 0.8355567455291748, 0.8404437899589539, 0.8409721255302429, 0.845859169960022, 0.8491612672805786, 0.8518029451370239, 0.8507462739944458], "val_loss": [2.2454769611358643, 2.0135090351104736, 1.140293002128601, 0.9143846035003662, 0.7587356567382812, 0.7293322682380676, 0.692581057548523, 0.6658245921134949, 0.6412516832351685, 0.6131638288497925, 0.5757889151573181, 0.5386587977409363, 0.5146933794021606, 0.5126427412033081, 0.4928707182407379, 0.4833066761493683, 0.4801503121852875, 0.47318997979164124, 0.4668067991733551, 0.46136319637298584, 0.4640022814273834, 0.4485625922679901, 0.4384576380252838, 0.43308374285697937, 0.4282447099685669, 0.43224307894706726, 0.4168719947338104, 0.42109131813049316, 0.4211196303367615, 0.41777369379997253, 0.4125221371650696, 0.4023718237876892, 0.40070629119873047, 0.40001580119132996, 0.394944429397583, 0.4045082926750183, 0.40252619981765747, 0.3973004221916199, 0.4022701680660248, 0.4133979380130768, 0.4058501422405243], "val_accuracy": [0.43966665863990784, 0.4466666579246521, 0.6476666927337646, 0.684333324432373, 0.7146666646003723, 0.7053333520889282, 0.722000002861023, 0.7279999852180481, 0.7443333268165588, 0.7473333477973938, 0.768666684627533, 0.781000018119812, 0.8050000071525574, 0.8029999732971191, 0.8096666932106018, 0.8026666641235352, 0.8113333582878113, 0.8176666498184204, 0.8103333115577698, 0.8203333616256714, 0.8203333616256714, 0.8259999752044678, 0.8363333344459534, 0.8363333344459534, 0.8423333168029785, 0.8373333215713501, 0.8423333168029785, 0.8493333458900452, 0.8433333039283752, 0.8450000286102295, 0.8479999899864197, 0.8546666502952576, 0.8536666631698608, 0.8536666631698608, 0.8550000190734863, 0.856333315372467, 0.8533333539962769, 0.8556666374206543, 0.8529999852180481, 0.8529999852180481, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 3, 1, 3, 8, 2, 4, 9], [3, 0, 1, 0, 3, 0], [83, 99, 27, 55], [0, 0, 1, 1, 1, 1], [0, 1, 2], [3, 3, 3], [0], [1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [4, 8, 0, 0, 4, 2], [1, 2, 0, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 4, 2, 2, 0, 1, 0, 1, 1, 10, 6, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 9, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [7, 0, 4, 3], [3, 0, 4, 5], [0, 58], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 2, 0, 1, 8, 4, 4, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [1137058688.0, 21176086528.0, 99900571648.0, 274559303680.0, 594009063424.0, 1087781011456.0], "accuracy": [0.10434553027153015, 0.10328886657953262, 0.09879804402589798, 0.10130762308835983, 0.10051512718200684, 0.10170386731624603], "val_loss": [5136983040.0, 41090764800.0, 138675732480.0, 328705048576.0, 641989804032.0, 1109359591424.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 8, 3, 4, 3, 5], [0, 0, 1, 0, 2, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 0, 4, 3, 4, 2, 2, 1, 0, 1, 0, 7, 0, 4, 0, 0], [0, 0, 1, 3, 4, 2, 7, 6, 3, 5], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(sigma, tf.math.add(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.negative(grad), tf.math.add(tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.negative(grad))), grad))), sigma), grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037233352661133, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 14, 8, 6, 3, 6, 3, 3, 1, 26, 16, 10, 2, 1, 0, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27, 0], [0, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [28, 58], [0, 0], [9], [1], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 10, 5, 5, 4, 2, 1, 1, 1, 7, 4, 3, 2, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3097777366638184, 2.308638572692871, 2.3099281787872314, 2.309379816055298, 2.3089749813079834, 2.311403274536133], "accuracy": [0.09192973375320435, 0.08849557489156723, 0.09311848133802414, 0.09060890227556229, 0.09298639744520187, 0.08889182657003403], "val_loss": [2.308108329772949, 2.308108329772949, 2.308108329772949, 2.308108329772949, 2.308108329772949, 2.308108329772949], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]