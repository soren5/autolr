[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29266095161438, 2.1899712085723877, 1.7715191841125488, 1.3603317737579346, 1.100934624671936, 0.9565983414649963, 0.87105393409729, 0.8245379328727722, 0.7840367555618286, 0.7602444887161255, 0.7133836150169373, 0.6911603808403015, 0.6690551042556763, 0.6492990851402283, 0.6351330280303955, 0.6091084480285645, 0.6075262427330017, 0.5905929803848267, 0.5663727521896362, 0.5619640946388245, 0.5523497462272644, 0.5404525399208069, 0.5264410376548767, 0.5263640880584717, 0.5166812539100647, 0.508063554763794, 0.4909096658229828, 0.4936097264289856, 0.4714697003364563, 0.4609403908252716, 0.461004376411438, 0.44765639305114746, 0.4386407434940338, 0.43005743622779846, 0.42731592059135437, 0.4233261048793793, 0.41491222381591797, 0.3939880430698395, 0.4066564440727234, 0.3933163583278656, 0.38346660137176514, 0.37663647532463074], "accuracy": [0.1306300312280655, 0.3271694481372833, 0.43045833706855774, 0.5456346869468689, 0.63096022605896, 0.6565843224525452, 0.6840575933456421, 0.6922467350959778, 0.6975300312042236, 0.7100779414176941, 0.7323999404907227, 0.7289658188819885, 0.7460044622421265, 0.7512878179550171, 0.7539294958114624, 0.7693831920623779, 0.767930269241333, 0.7718927264213562, 0.7861577272415161, 0.7873464822769165, 0.7936864495277405, 0.791969358921051, 0.7942147850990295, 0.7957997918128967, 0.7984414100646973, 0.8031964302062988, 0.81112140417099, 0.8098005652427673, 0.8150838613510132, 0.8171972036361694, 0.8231409192085266, 0.8284242749214172, 0.8354246616363525, 0.8383304476737976, 0.8359529972076416, 0.8392550349235535, 0.8385946154594421, 0.8445383906364441, 0.8421608805656433, 0.845859169960022, 0.8500858545303345, 0.8532558679580688], "val_loss": [2.2466514110565186, 2.020174503326416, 1.1442339420318604, 0.9539210796356201, 0.8000314235687256, 0.7202145457267761, 0.6806519627571106, 0.662026584148407, 0.648781955242157, 0.6164819598197937, 0.5760483145713806, 0.5463336706161499, 0.5445669889450073, 0.5354573726654053, 0.5257377028465271, 0.5146947503089905, 0.5048681497573853, 0.5004569292068481, 0.4921891391277313, 0.4875228703022003, 0.47988972067832947, 0.4720093905925751, 0.46690478920936584, 0.46170637011528015, 0.4517372250556946, 0.4531499743461609, 0.45496705174446106, 0.43534329533576965, 0.4392569065093994, 0.4404038190841675, 0.4339747726917267, 0.42286035418510437, 0.416316419839859, 0.4100700616836548, 0.40214046835899353, 0.4002440869808197, 0.4036467373371124, 0.3986088037490845, 0.40318384766578674, 0.41037943959236145, 0.39757758378982544, 0.41228142380714417], "val_accuracy": [0.43066665530204773, 0.4803333282470703, 0.6393333077430725, 0.6679999828338623, 0.7113333344459534, 0.722000002861023, 0.7403333187103271, 0.7423333525657654, 0.7509999871253967, 0.762333333492279, 0.7706666588783264, 0.7846666574478149, 0.7900000214576721, 0.7860000133514404, 0.7916666865348816, 0.7993333339691162, 0.8006666898727417, 0.8100000023841858, 0.8066666722297668, 0.8180000185966492, 0.8169999718666077, 0.8143333196640015, 0.8176666498184204, 0.8190000057220459, 0.8330000042915344, 0.8353333473205566, 0.8289999961853027, 0.8463333249092102, 0.8399999737739563, 0.8399999737739563, 0.8360000252723694, 0.8450000286102295, 0.8533333539962769, 0.8579999804496765, 0.859666645526886, 0.8586666584014893, 0.8600000143051147, 0.8576666712760925, 0.859000027179718, 0.8503333330154419, 0.8576666712760925, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 7, 6, 3, 8, 1, 5, 4], [0, 0, 1, 0, 2, 3, 2, 3, 1, 0], [83, 99, 27, 49], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 4, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.pow(grad, grad)), grad)), grad), alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 8, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 1], [49], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 5, 4], [98, 58], [1, 1], [6], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47045804032.0, 7005859741696.0, 116892836560896.0, 825173880078336.0, 3666830744879104.0, 1.2076467710066688e+16], "accuracy": [0.10276053100824356, 0.09708096832036972, 0.09800554811954498, 0.10210011899471283, 0.09813763201236725, 0.09866596013307571], "val_loss": [467072679936.0, 25181548445696.0, 270295696932864.0, 1473542612844544.0, 5520702643896320.0, 1.6283277581090816e+16], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [8, 1, 3, 1, 3], [0, 0, 1, 0, 1], [83, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.30375337600708, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 5, 56], [0, 0, 1, 0, 1, 0, 1], [0, 1, 2, 5], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 4, 3, 5, 5, 4, 6, 4, 5, 7, 4, 9, 1, 0, 8, 1], [4, 4, 4, 6, 1, 0, 6, 6, 2, 1, 3], [0, 58, 67, 46], [0, 0], [0, 9], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 24, 16, 8, 2, 2, 2, 0, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.math.square(grad)), tf.math.square(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.sqrt(grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3089966773986816, 2.3095438480377197, 2.3102970123291016, 2.309084177017212, 2.3103275299072266, 2.3090248107910156], "accuracy": [0.08638224750757217, 0.09549596905708313, 0.09100515395402908, 0.09430722147226334, 0.09100515395402908, 0.09311848133802414], "val_loss": [2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]