[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2947797775268555, 2.193633556365967, 1.783368468284607, 1.3501206636428833, 1.0879017114639282, 0.933532178401947, 0.8553421497344971, 0.8218012452125549, 0.7509196996688843, 0.7335807085037231, 0.6939184069633484, 0.6731107234954834, 0.6585641503334045, 0.6285301446914673, 0.611064612865448, 0.6003289818763733, 0.586688756942749, 0.5740374326705933, 0.5635424852371216, 0.5492655038833618, 0.5357402563095093, 0.5223378539085388, 0.5149942636489868, 0.5009043216705322, 0.4878358840942383, 0.49034181237220764, 0.47497931122779846, 0.46069133281707764, 0.4551370441913605, 0.43564069271087646, 0.4261370599269867, 0.4347047507762909, 0.4183792173862457, 0.40830639004707336, 0.4179089665412903, 0.39750605821609497, 0.3957555294036865, 0.38822516798973083, 0.39041590690612793, 0.36636605858802795, 0.3662715554237366, 0.3662402927875519, 0.3637350797653198, 0.36409491300582886, 0.35777783393859863, 0.35256651043891907, 0.3637586832046509, 0.33163002133369446], "accuracy": [0.12270505726337433, 0.3203011453151703, 0.4294016659259796, 0.5453705191612244, 0.6353189945220947, 0.6597543358802795, 0.6906617283821106, 0.700171709060669, 0.7113987803459167, 0.7173424959182739, 0.7327961921691895, 0.7407211661338806, 0.7427024245262146, 0.7644960880279541, 0.7670056819915771, 0.7651565074920654, 0.7779685854911804, 0.7816668748855591, 0.7819310426712036, 0.7858935594558716, 0.7918372750282288, 0.7944789528846741, 0.7993659973144531, 0.8087438941001892, 0.8075551390647888, 0.8096684813499451, 0.819442629814148, 0.822348415851593, 0.8204993009567261, 0.8277638554573059, 0.8325188159942627, 0.8296129703521729, 0.8325188159942627, 0.8409721255302429, 0.8362171649932861, 0.8446704745292664, 0.8455950617790222, 0.8499537706375122, 0.8453308939933777, 0.8565579056739807, 0.8557654023170471, 0.8532558679580688, 0.8536521196365356, 0.8593316674232483, 0.8565579056739807, 0.8568220734596252, 0.8562937378883362, 0.8688416481018066], "val_loss": [2.2459635734558105, 2.0238277912139893, 1.1457531452178955, 0.8670788407325745, 0.7470685243606567, 0.6979299187660217, 0.6509038209915161, 0.620814859867096, 0.6123481392860413, 0.5854545831680298, 0.5546427965164185, 0.5278202891349792, 0.5164595246315002, 0.4947841763496399, 0.48051732778549194, 0.47804707288742065, 0.46826988458633423, 0.45125237107276917, 0.4508264660835266, 0.4424033463001251, 0.43523600697517395, 0.42603394389152527, 0.42004841566085815, 0.40698277950286865, 0.40549203753471375, 0.40122827887535095, 0.3934808075428009, 0.3929429054260254, 0.3859873116016388, 0.3837849497795105, 0.3835245370864868, 0.37945011258125305, 0.3721756041049957, 0.3700260519981384, 0.3666267991065979, 0.3644436001777649, 0.3686597943305969, 0.35816946625709534, 0.36337581276893616, 0.36072656512260437, 0.35979411005973816, 0.3670388162136078, 0.3604161739349365, 0.3732971251010895, 0.3647388219833374, 0.37483271956443787, 0.3748791217803955, 0.3872721493244171], "val_accuracy": [0.4246666729450226, 0.4713333249092102, 0.6446666717529297, 0.6909999847412109, 0.7293333411216736, 0.734333336353302, 0.7450000047683716, 0.7616666555404663, 0.7786666750907898, 0.7793333530426025, 0.7829999923706055, 0.7979999780654907, 0.7996666431427002, 0.8080000281333923, 0.8183333277702332, 0.8173333406448364, 0.8240000009536743, 0.82833331823349, 0.8276666402816772, 0.8326666951179504, 0.8326666951179504, 0.8326666951179504, 0.8373333215713501, 0.8500000238418579, 0.8453333377838135, 0.8493333458900452, 0.8586666584014893, 0.8606666922569275, 0.8640000224113464, 0.8586666584014893, 0.8573333621025085, 0.8613333106040955, 0.8610000014305115, 0.8656666874885559, 0.871666669845581, 0.8690000176429749, 0.8659999966621399, 0.875, 0.8763333559036255, 0.8736666440963745, 0.8676666617393494, 0.8653333187103271, 0.878000020980835, 0.8759999871253967, 0.874666690826416, 0.8693333268165588, 0.8713333606719971, 0.8703333139419556]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 2], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 2], [0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3, 3, 6, 4, 0], [0, 0, 7, 7, 1, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 14, 8, 6, 2, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), grad)), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 4, 3, 1, 3, 6], [0, 0, 1, 0, 3, 0], [83, 99, 27, 27], [0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 2, 7], [0, 3, 3, 2], [0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 8], [2, 0, 4], [0, 58], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 8, 4, 4, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 3, 1, 3, 4, 3, 0, 0, 6, 3, 9, 7, 1, 8, 7, 3], [0, 0, 1, 0, 2, 2, 0, 0, 2, 1, 3], [49, 99, 58, 13, 38, 31], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 3], [39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 7, 4, 1, 5, 0], [0, 0, 4, 0], [0, 58, 29], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 6, 6, 3, 3, 1, 10, 6, 4, 3, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.sqrt(grad), grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 1, 8, 2, 6, 3, 3, 1, 3, 5, 3, 1, 2], [0, 0, 3, 0, 2, 0, 3, 3, 2, 3, 2, 2, 1, 3, 1, 0], [83, 99, 27, 16, 63], [0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 2, 0, 8], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 1, 4, 3], [0, 0, 3], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 18, 16, 5, 8, 5, 3, 1, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.square(grad), tf.math.multiply(grad, grad)))))), tf.math.subtract(alpha, grad))))), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]