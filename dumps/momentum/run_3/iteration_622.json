[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926695346832275, 2.1902570724487305, 1.7765398025512695, 1.3497463464736938, 1.0940616130828857, 0.9667956233024597, 0.8719022274017334, 0.8780686259269714, 0.7799981236457825, 0.774800181388855, 0.7229777574539185, 0.7118949294090271, 0.6814836859703064, 0.6455610394477844, 0.6335930228233337, 0.6320536136627197, 0.6075792908668518, 0.5930386781692505, 0.5734296441078186, 0.5731582641601562, 0.563312292098999, 0.5575348138809204, 0.5360642671585083, 0.5293854475021362, 0.5137122273445129, 0.5076829195022583, 0.4946281909942627, 0.4791582524776459, 0.4615359902381897, 0.45595473051071167, 0.44042181968688965, 0.4376187026500702, 0.43597227334976196, 0.42071035504341125, 0.4195782244205475, 0.4098614752292633, 0.3959033489227295, 0.3777289390563965, 0.38041388988494873, 0.3702062964439392, 0.36553993821144104, 0.3652823269367218, 0.34005019068717957, 0.33713892102241516, 0.3389447033405304, 0.3304584324359894, 0.33585578203201294, 0.3202526271343231, 0.3101584017276764, 0.31221649050712585], "accuracy": [0.1310262829065323, 0.32439571619033813, 0.4309866726398468, 0.54220050573349, 0.6304318904876709, 0.6454893946647644, 0.6828688383102417, 0.6806234121322632, 0.6975300312042236, 0.7038700580596924, 0.7209087014198303, 0.7277770638465881, 0.7325320243835449, 0.7508915662765503, 0.7609298825263977, 0.7514199018478394, 0.7667415142059326, 0.772288978099823, 0.7766477465629578, 0.7754589915275574, 0.7816668748855591, 0.7880068421363831, 0.7938185334205627, 0.793422281742096, 0.8001585006713867, 0.8055738806724548, 0.8121780753135681, 0.8185180425643921, 0.8201030492782593, 0.8219521641731262, 0.8298771381378174, 0.8308017253875732, 0.8363492488861084, 0.8366134166717529, 0.844010055065155, 0.8401796221733093, 0.8479725122451782, 0.8504821062088013, 0.8536521196365356, 0.858671247959137, 0.8588033318519592, 0.8639545440673828, 0.8646149635314941, 0.8644828796386719, 0.8672566413879395, 0.8696341514587402, 0.8684453964233398, 0.8742570281028748, 0.8812574148178101, 0.8790120482444763], "val_loss": [2.2461624145507812, 2.021773099899292, 1.132142424583435, 0.8552545309066772, 0.7766663432121277, 0.7380170226097107, 0.6806994080543518, 0.6259705424308777, 0.6630756258964539, 0.6100922226905823, 0.5667954683303833, 0.5387635231018066, 0.5439153909683228, 0.5288962125778198, 0.5187132358551025, 0.5048436522483826, 0.503438413143158, 0.49956271052360535, 0.507550060749054, 0.49267446994781494, 0.48778587579727173, 0.4835021495819092, 0.4747397005558014, 0.4646235704421997, 0.4549690783023834, 0.4510495960712433, 0.45236241817474365, 0.44319334626197815, 0.4311572313308716, 0.4254019260406494, 0.4292144775390625, 0.4266800582408905, 0.41715899109840393, 0.4187135398387909, 0.4157678186893463, 0.41085606813430786, 0.4064446985721588, 0.4040200114250183, 0.40907177329063416, 0.40522462129592896, 0.401842325925827, 0.39553409814834595, 0.39532023668289185, 0.40190088748931885, 0.40728023648262024, 0.4094383418560028, 0.398796021938324, 0.4075966477394104, 0.41348621249198914, 0.41745254397392273], "val_accuracy": [0.4230000078678131, 0.4723333418369293, 0.6493333578109741, 0.7006666660308838, 0.7066666483879089, 0.7120000123977661, 0.7476666569709778, 0.7536666393280029, 0.7590000033378601, 0.7573333382606506, 0.7713333368301392, 0.7883333563804626, 0.793666660785675, 0.7979999780654907, 0.79666668176651, 0.8033333420753479, 0.8033333420753479, 0.8036666512489319, 0.8019999861717224, 0.8116666674613953, 0.8140000104904175, 0.8173333406448364, 0.8226666450500488, 0.8206666707992554, 0.8373333215713501, 0.8296666741371155, 0.8389999866485596, 0.8403333425521851, 0.8453333377838135, 0.847000002861023, 0.843999981880188, 0.8483333587646484, 0.8489999771118164, 0.8519999980926514, 0.8550000190734863, 0.8573333621025085, 0.859666645526886, 0.8633333444595337, 0.862666666507721, 0.8526666760444641, 0.8633333444595337, 0.8636666536331177, 0.8586666584014893, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8646666407585144, 0.8636666536331177, 0.8669999837875366, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 1, 2, 4, 5, 7, 6, 3, 7, 2, 3, 5, 3, 3], [0, 2, 1, 0, 2, 3, 3, 0, 2, 0, 1, 1, 0, 2, 2, 3, 2], [83, 99, 82, 42, 44], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 2, 3, 3, 5, 3, 7, 1, 3, 0, 6, 2, 4, 4, 2, 1, 3, 5, 5, 3, 3, 5, 5, 2, 7, 9], [0, 3, 3, 3, 1, 4, 4, 0, 4, 3, 3, 1, 2, 4, 3, 5, 1, 0, 2], [0, 71, 21, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 4, 3, 7, 3, 5, 2, 3, 1, 5, 9, 0], [0, 0, 4, 2, 6, 7, 6], [38, 58, 51], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 18, 17, 5, 46, 27, 19, 4, 20, 13, 7, 3, 3, 2, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, tf.math.pow(tf.math.square(grad), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.multiply(grad, grad)))))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(grad), tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.math.negative(alpha)), tf.math.divide_no_nan(grad, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad))), tf.math.multiply(tf.math.multiply(tf.math.square(grad), tf.math.square(grad)), alpha)), beta), grad), tf.math.add(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), grad)))), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(grad, beta)), grad))), tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [6, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3, 4, 1, 8, 2], [0, 0, 4, 1, 6, 5], [0, 58], [0, 0, 1, 1], [0, 4], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 5, 2, 3, 1, 14, 8, 6, 2, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, alpha))), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 8], [0, 3, 1], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 3, 4, 0], [0, 0, 4, 7, 3], [0, 58], [0, 0, 0, 0, 0, 1, 1, 0, 1], [8, 5, 1, 3, 5, 5], [1, 7, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 12, 7, 5, 2, 9, 6, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, grad), tf.math.negative(sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.square(alpha), grad), tf.math.square(grad))))", "other_info": {"loss": [2.3098018169403076, 21.661861419677734, 1362973.375, 87442055168.0, 4897915206107136.0, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09879804402589798, 0.09721305221319199, 0.10394927859306335, 0.09549596905708313, 0.10381719470024109, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.306231737136841, 696.157958984375, 50834332.0, 2657725186048.0, 1.853536258060452e+17, NaN, NaN, NaN], "val_accuracy": [0.08733333647251129, 0.09966666996479034, 0.10300000011920929, 0.10233332961797714, 0.09966666996479034, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 5, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [86, 91], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303431749343872, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 12}]