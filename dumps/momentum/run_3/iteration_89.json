[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948877811431885, 2.1954846382141113, 1.7930604219436646, 1.3646754026412964, 1.1012818813323975, 0.9411959648132324, 0.8554933667182922, 0.8345027565956116, 0.7798101305961609, 0.749616801738739, 0.6855085492134094, 0.6688554286956787, 0.655380368232727, 0.6226345300674438, 0.6134007573127747, 0.5986575484275818, 0.5848514437675476, 0.5766753554344177, 0.5731635689735413, 0.5459082126617432, 0.5263314247131348, 0.5312963128089905, 0.5132877826690674, 0.49971631169319153, 0.5028613209724426, 0.48898208141326904, 0.48745039105415344, 0.4650484621524811, 0.4590970575809479, 0.45980605483055115, 0.43793773651123047, 0.43147653341293335, 0.422543466091156, 0.41548416018486023, 0.41713207960128784, 0.40661177039146423, 0.39301422238349915, 0.3974282741546631, 0.39296436309814453, 0.37487778067588806, 0.3682710826396942, 0.3683367967605591, 0.36311736702919006, 0.3414930999279022, 0.3475029170513153, 0.3410283327102661, 0.33939436078071594, 0.34266453981399536, 0.31287017464637756, 0.31818220019340515, 0.31779056787490845, 0.31292906403541565, 0.3013741075992584, 0.2995980381965637, 0.30085739493370056, 0.3029523193836212, 0.2981523871421814, 0.2951223850250244], "accuracy": [0.1266675442457199, 0.32320696115493774, 0.42609959840774536, 0.5381059050559998, 0.6333377361297607, 0.6487914323806763, 0.6853784322738647, 0.6933034062385559, 0.7077004313468933, 0.7170783281326294, 0.7357020378112793, 0.7474573850631714, 0.7461365461349487, 0.7574957013130188, 0.7647602558135986, 0.7712323069572449, 0.7769119143486023, 0.7773081660270691, 0.778232753276825, 0.7857614755630493, 0.7965922355651855, 0.7918372750282288, 0.8053097128868103, 0.8078193068504333, 0.8059701323509216, 0.8170651197433472, 0.8136309385299683, 0.8204993009567261, 0.8231409192085266, 0.8240655064582825, 0.8297450542449951, 0.8364813327789307, 0.8345000743865967, 0.8380662798881531, 0.8372738361358643, 0.8422929644584656, 0.8491612672805786, 0.8506141901016235, 0.8496896028518677, 0.8529917001724243, 0.8590674996376038, 0.857218325138092, 0.8557654023170471, 0.8658037185668945, 0.8627657890319824, 0.8622375130653381, 0.8673887252807617, 0.8659358024597168, 0.8794082403182983, 0.8749174475669861, 0.8778232932090759, 0.8812574148178101, 0.8787478804588318, 0.8841632604598999, 0.8809932470321655, 0.8766345381736755, 0.8804649114608765, 0.8848236799240112], "val_loss": [2.247529983520508, 2.0335114002227783, 1.155472993850708, 0.8592795133590698, 0.750808596611023, 0.7304698824882507, 0.6456077694892883, 0.6257857084274292, 0.6296886205673218, 0.6070670485496521, 0.5511266589164734, 0.53155118227005, 0.528304934501648, 0.5311113595962524, 0.5157961249351501, 0.4984745681285858, 0.5018811225891113, 0.4928642511367798, 0.48898738622665405, 0.4902074337005615, 0.46941518783569336, 0.4600239396095276, 0.4597311317920685, 0.45761969685554504, 0.45749470591545105, 0.43508219718933105, 0.4414220452308655, 0.43007975816726685, 0.4291536808013916, 0.42972779273986816, 0.4252420961856842, 0.4084354639053345, 0.40831151604652405, 0.4072764813899994, 0.4027370512485504, 0.4104064106941223, 0.426766037940979, 0.41800764203071594, 0.41849836707115173, 0.4336315393447876, 0.42286571860313416, 0.40909886360168457, 0.4095710813999176, 0.41921699047088623, 0.40877702832221985, 0.4043923318386078, 0.42768359184265137, 0.4185326397418976, 0.40205496549606323, 0.40598633885383606, 0.41404110193252563, 0.4081402122974396, 0.4193907082080841, 0.4317120909690857, 0.4367465078830719, 0.4301920533180237, 0.42750224471092224, 0.42822134494781494], "val_accuracy": [0.4346666634082794, 0.4633333384990692, 0.6639999747276306, 0.7070000171661377, 0.7273333072662354, 0.7379999756813049, 0.7483333349227905, 0.753333330154419, 0.7643333077430725, 0.7670000195503235, 0.7796666622161865, 0.7846666574478149, 0.79666668176651, 0.7929999828338623, 0.8059999942779541, 0.8090000152587891, 0.8013333082199097, 0.8149999976158142, 0.8113333582878113, 0.8050000071525574, 0.8253333568572998, 0.8309999704360962, 0.8299999833106995, 0.8259999752044678, 0.8326666951179504, 0.8426666855812073, 0.8433333039283752, 0.8460000157356262, 0.8473333120346069, 0.8506666421890259, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8650000095367432, 0.8610000014305115, 0.8633333444595337, 0.8656666874885559, 0.8606666922569275, 0.8610000014305115, 0.8650000095367432, 0.8669999837875366, 0.871666669845581, 0.8673333525657654, 0.8700000047683716, 0.8676666617393494, 0.8703333139419556, 0.874666690826416, 0.878000020980835, 0.8723333477973938, 0.8709999918937683, 0.8756666779518127, 0.8769999742507935, 0.8790000081062317, 0.871999979019165, 0.8683333396911621, 0.8696666955947876, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8097142577171326, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926597595214844, 2.1884472370147705, 1.7666122913360596, 1.3438926935195923, 1.072086215019226, 0.9331791996955872, 0.8448430299758911, 0.8146522641181946, 0.7629279494285583, 0.7283120155334473, 0.701728880405426, 0.6871601343154907, 0.6487045288085938, 0.6346407532691956, 0.6037890315055847, 0.5822322368621826, 0.5776730179786682, 0.5699465274810791, 0.5663105845451355, 0.5441303849220276, 0.5325635671615601, 0.5330699682235718, 0.5229718089103699, 0.5154528617858887, 0.5046903491020203, 0.49125710129737854, 0.4996769428253174, 0.48517906665802, 0.47042036056518555, 0.45138755440711975, 0.4427538812160492, 0.4446883201599121, 0.43346360325813293, 0.40888261795043945, 0.4203653633594513, 0.4088347554206848, 0.403879314661026, 0.39145058393478394, 0.3935703933238983, 0.38414105772972107, 0.36748260259628296, 0.37175458669662476, 0.3621710538864136, 0.35804352164268494], "accuracy": [0.12838461995124817, 0.31884822249412537, 0.4441949427127838, 0.5391625761985779, 0.6317527294158936, 0.6608110070228577, 0.6876237988471985, 0.69673752784729, 0.6977941989898682, 0.7187954187393188, 0.7334566116333008, 0.7321357727050781, 0.7483819723129272, 0.7560427784919739, 0.7640998363494873, 0.7703077793121338, 0.7759873270988464, 0.776251494884491, 0.7804781198501587, 0.7936864495277405, 0.7957997918128967, 0.7965922355651855, 0.7926297783851624, 0.7956677079200745, 0.7988376617431641, 0.8129705190658569, 0.8092722296714783, 0.8084797263145447, 0.8216879963874817, 0.8260467648506165, 0.8315942287445068, 0.8272355198860168, 0.8319904804229736, 0.8454629778862, 0.8359529972076416, 0.8405758738517761, 0.8416325449943542, 0.8506141901016235, 0.8446704745292664, 0.8511425256729126, 0.8535200357437134, 0.856689989566803, 0.8625016212463379, 0.8621054291725159], "val_loss": [2.244415760040283, 2.010909080505371, 1.123714566230774, 0.8730348944664001, 0.7634676098823547, 0.7044180631637573, 0.6617928147315979, 0.6277481913566589, 0.612114429473877, 0.5927438735961914, 0.5692759156227112, 0.5479689240455627, 0.5455828309059143, 0.540453314781189, 0.5194652676582336, 0.5188055634498596, 0.5177297592163086, 0.5142106413841248, 0.5113853812217712, 0.517686128616333, 0.5098177194595337, 0.5054957270622253, 0.48450130224227905, 0.5027921795845032, 0.47299498319625854, 0.4848690927028656, 0.4656537175178528, 0.4709587097167969, 0.4589666426181793, 0.4510652720928192, 0.45083698630332947, 0.43858471512794495, 0.42849084734916687, 0.4270271956920624, 0.4378781318664551, 0.437783420085907, 0.42416951060295105, 0.42545098066329956, 0.41946062445640564, 0.423283189535141, 0.42470964789390564, 0.43419623374938965, 0.43540501594543457, 0.4270731508731842], "val_accuracy": [0.40533334016799927, 0.44866666197776794, 0.6480000019073486, 0.6909999847412109, 0.7243333458900452, 0.7379999756813049, 0.7429999709129333, 0.7583333253860474, 0.7593333125114441, 0.7703333497047424, 0.7723333239555359, 0.796999990940094, 0.7863333225250244, 0.8036666512489319, 0.8026666641235352, 0.8023333549499512, 0.809333324432373, 0.8090000152587891, 0.8033333420753479, 0.8190000057220459, 0.8213333487510681, 0.8140000104904175, 0.8243333101272583, 0.8220000267028809, 0.831333339214325, 0.8206666707992554, 0.8320000171661377, 0.8216666579246521, 0.8306666612625122, 0.8303333520889282, 0.8416666388511658, 0.8413333296775818, 0.8496666550636292, 0.8513333201408386, 0.8460000157356262, 0.8516666889190674, 0.8526666760444641, 0.8583333492279053, 0.8636666536331177, 0.8560000061988831, 0.856333315372467, 0.8560000061988831, 0.8616666793823242, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 6, 4], [0, 0, 1, 2, 1, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 7], [0, 3, 5], [0], [1, 1, 0, 0, 1, 1, 1], [0, 4, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(grad, tf.math.pow(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12455421686172485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 9, 2], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 5, 7, 2, 2, 5, 7], [0, 3, 3, 0, 3, 1], [0, 45], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 0, 4, 3, 1], [0, 0, 4, 0, 0], [0, 58, 18, 54], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.add(tf.math.square(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08321225643157959, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 6, 4, 2, 3, 14, 8, 6, 2, 10, 5, 5, 4, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [9, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0], [5, 1, 0], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3, 1, 6, 3, 4, 7, 3, 2], [0, 0, 4, 5, 7, 4, 6, 3, 4, 0], [12, 58, 66], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 21, 11, 10, 3, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.pow(grad, tf.math.add(tf.math.multiply(grad, tf.math.add(grad, sigma)), grad))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303358316421509, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 4, 3, 8], [0, 3, 1, 3, 2], [83, 99, 27], [0, 0, 1, 1, 1, 0], [0, 1, 2], [4, 4, 3], [0], [0, 1, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 4, 2, 2, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]