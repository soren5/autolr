[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294557809829712, 2.193612813949585, 1.784807562828064, 1.3635449409484863, 1.0810402631759644, 0.9357309937477112, 0.8470022082328796, 0.8286221027374268, 0.7723211050033569, 0.745373010635376, 0.7134280800819397, 0.6982585191726685, 0.6727968454360962, 0.649928092956543, 0.6148405075073242, 0.614366352558136, 0.5764865279197693, 0.5918212532997131, 0.5807986259460449, 0.5550824999809265, 0.550838053226471, 0.5347083806991577, 0.5198450088500977, 0.5115987658500671, 0.5003476142883301, 0.494423508644104, 0.47681480646133423, 0.46733424067497253, 0.46690985560417175, 0.449181467294693, 0.42854180932044983, 0.43669480085372925, 0.4308231472969055, 0.4130571186542511, 0.4089037775993347, 0.39856618642807007, 0.3924001157283783, 0.3888866603374481, 0.37909746170043945, 0.3767796754837036, 0.37004050612449646, 0.3676280677318573, 0.37137067317962646, 0.3548317551612854, 0.32981613278388977, 0.33922669291496277, 0.3348172903060913, 0.33760306239128113, 0.32603001594543457, 0.3256589472293854, 0.31640905141830444, 0.3039408326148987, 0.3034544289112091, 0.3083101511001587, 0.2939431965351105, 0.2951729893684387, 0.2891955077648163, 0.29192620515823364], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.43045833706855774, 0.537709653377533, 0.6302998065948486, 0.650640606880188, 0.687887966632843, 0.7025492191314697, 0.7103421092033386, 0.7206445932388306, 0.7343811988830566, 0.7281733155250549, 0.750759482383728, 0.7519482374191284, 0.7565711140632629, 0.7700436115264893, 0.7781006693840027, 0.7680623531341553, 0.7816668748855591, 0.7877426743507385, 0.7825914621353149, 0.7977809906005859, 0.8037247657775879, 0.8021397590637207, 0.8039889335632324, 0.8088759779930115, 0.8144234418869019, 0.8177255392074585, 0.8165367841720581, 0.8267071843147278, 0.837537944316864, 0.8359529972076416, 0.8330471515655518, 0.8396512866020203, 0.8428213000297546, 0.8477083444595337, 0.8466516733169556, 0.8479725122451782, 0.8573504090309143, 0.8569541573524475, 0.852859616279602, 0.8514066934585571, 0.8565579056739807, 0.8594637513160706, 0.8677849769592285, 0.8676528930664062, 0.8640866279602051, 0.8652753829956055, 0.8664641380310059, 0.8677849769592285, 0.8776912093162537, 0.8837670087814331, 0.8841632604598999, 0.8772949576377869, 0.8804649114608765, 0.8815215826034546, 0.8835028409957886, 0.8803328275680542], "val_loss": [2.246450901031494, 2.024763822555542, 1.1391948461532593, 0.8761961460113525, 0.7571859359741211, 0.700238823890686, 0.6614601016044617, 0.6314088702201843, 0.6291053295135498, 0.6177295446395874, 0.5632996559143066, 0.5438107252120972, 0.5465230345726013, 0.5370399951934814, 0.5201399922370911, 0.5104144811630249, 0.5002843141555786, 0.5024071931838989, 0.5075006484985352, 0.4859510064125061, 0.48503822088241577, 0.4887068271636963, 0.4827807545661926, 0.46761614084243774, 0.4618785083293915, 0.45623546838760376, 0.4477541148662567, 0.45004451274871826, 0.43641921877861023, 0.44630077481269836, 0.4551275372505188, 0.42984095215797424, 0.42031246423721313, 0.4328964948654175, 0.4379987120628357, 0.4219444990158081, 0.4227760136127472, 0.42395246028900146, 0.43413469195365906, 0.42045703530311584, 0.4151044189929962, 0.41649720072746277, 0.4154265820980072, 0.4126054644584656, 0.4174047112464905, 0.4132534861564636, 0.40519437193870544, 0.40441325306892395, 0.4196004569530487, 0.4084586501121521, 0.39875903725624084, 0.40641164779663086, 0.40847843885421753, 0.41223469376564026, 0.4157455265522003, 0.4123656451702118, 0.4061170220375061, 0.4057122468948364], "val_accuracy": [0.42933332920074463, 0.44866666197776794, 0.6620000004768372, 0.6963333487510681, 0.7250000238418579, 0.7476666569709778, 0.746999979019165, 0.7643333077430725, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7893333435058594, 0.7896666526794434, 0.7889999747276306, 0.800000011920929, 0.8103333115577698, 0.812333345413208, 0.8113333582878113, 0.8080000281333923, 0.8109999895095825, 0.8173333406448364, 0.8119999766349792, 0.8113333582878113, 0.8256666660308838, 0.82833331823349, 0.8326666951179504, 0.8353333473205566, 0.8309999704360962, 0.8426666855812073, 0.8353333473205566, 0.8443333506584167, 0.843999981880188, 0.843666672706604, 0.8489999771118164, 0.8479999899864197, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8576666712760925, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8646666407585144, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942276000976562, 2.1925082206726074, 1.7896627187728882, 1.3441647291183472, 1.0506477355957031, 0.9164724349975586, 0.8469372987747192, 0.8191865086555481, 0.7627696990966797, 0.7610929012298584, 0.7094292640686035, 0.6942988038063049, 0.6666536331176758, 0.633251428604126, 0.6120252013206482, 0.6040016412734985, 0.5835146307945251, 0.5746829509735107, 0.562236487865448, 0.5663596391677856, 0.5456777811050415, 0.5274014472961426, 0.5192476511001587, 0.5200347304344177, 0.5004452466964722, 0.49548617005348206, 0.4876597225666046, 0.4730590879917145, 0.47597309947013855, 0.46276065707206726, 0.4511006772518158, 0.45622092485427856, 0.43983957171440125, 0.43303996324539185, 0.4234192967414856, 0.4181721806526184, 0.4059445261955261, 0.4032166600227356, 0.39159509539604187, 0.3964751958847046, 0.38467565178871155, 0.37068983912467957, 0.35975703597068787, 0.35994744300842285, 0.3533709943294525, 0.3462216854095459, 0.35367006063461304], "accuracy": [0.12759213149547577, 0.33284902572631836, 0.43230748176574707, 0.5431250929832458, 0.6453573107719421, 0.656980574131012, 0.6931713223457336, 0.6984546184539795, 0.7046625018119812, 0.7030775547027588, 0.7323999404907227, 0.7334566116333008, 0.7411174178123474, 0.759609043598175, 0.7648923397064209, 0.767930269241333, 0.7804781198501587, 0.7800818681716919, 0.7882710099220276, 0.7854973077774048, 0.7864218950271606, 0.7981772422790527, 0.8012151718139648, 0.802271842956543, 0.807158887386322, 0.8080834746360779, 0.8146876096725464, 0.8193105459213257, 0.8178576231002808, 0.8212917447090149, 0.8272355198860168, 0.8273676037788391, 0.8318583965301514, 0.8401796221733093, 0.8399154543876648, 0.8413683772087097, 0.8417646288871765, 0.8518029451370239, 0.8491612672805786, 0.8508783578872681, 0.8508783578872681, 0.863029956817627, 0.8601241707801819, 0.8601241707801819, 0.8640866279602051, 0.867520809173584, 0.8663320541381836], "val_loss": [2.247483015060425, 2.026404857635498, 1.1279242038726807, 0.8484053015708923, 0.7186742424964905, 0.6737934350967407, 0.6088950037956238, 0.6034839153289795, 0.6093146800994873, 0.5744773745536804, 0.5500525832176208, 0.5416260361671448, 0.5110331177711487, 0.5082483887672424, 0.4978729784488678, 0.4820095896720886, 0.46846118569374084, 0.4624563753604889, 0.4511384963989258, 0.44813624024391174, 0.43707194924354553, 0.4397129416465759, 0.4328533411026001, 0.42757323384284973, 0.42286741733551025, 0.4197165071964264, 0.4151047468185425, 0.4051346480846405, 0.39818358421325684, 0.39087584614753723, 0.3894210755825043, 0.3870407044887543, 0.37898746132850647, 0.37763962149620056, 0.37965428829193115, 0.37333521246910095, 0.37037792801856995, 0.37899723649024963, 0.36780834197998047, 0.3600705862045288, 0.36334148049354553, 0.36489006876945496, 0.35332465171813965, 0.35949254035949707, 0.3600424826145172, 0.3686997890472412, 0.3525809049606323], "val_accuracy": [0.4416666626930237, 0.45266667008399963, 0.6740000247955322, 0.6980000138282776, 0.753333330154419, 0.7636666893959045, 0.7663333415985107, 0.765999972820282, 0.781333327293396, 0.7720000147819519, 0.778333306312561, 0.781000018119812, 0.8019999861717224, 0.8063333630561829, 0.8130000233650208, 0.8149999976158142, 0.8183333277702332, 0.8206666707992554, 0.8236666917800903, 0.8243333101272583, 0.8299999833106995, 0.8246666789054871, 0.8296666741371155, 0.8296666741371155, 0.8376666903495789, 0.8403333425521851, 0.8479999899864197, 0.8446666598320007, 0.8463333249092102, 0.8476666808128357, 0.8519999980926514, 0.8526666760444641, 0.8579999804496765, 0.8600000143051147, 0.8553333282470703, 0.8586666584014893, 0.8676666617393494, 0.8679999709129333, 0.8669999837875366, 0.8629999756813049, 0.8686666488647461, 0.871666669845581, 0.8706666827201843, 0.8610000014305115, 0.8706666827201843, 0.8690000176429749, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 2, 6, 5, 4, 3, 0, 1, 1, 3, 9, 5, 4, 9, 6, 0], [0, 3, 3, 2, 1, 0, 4, 0, 5], [0, 4, 47, 64, 81], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 4, 4, 3, 0, 6, 1, 9, 0, 1, 3, 2, 2, 9, 2], [0, 0, 4, 5, 7, 0, 3, 2, 5], [0, 58, 19, 20, 29], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 26, 17, 9, 5, 25, 16, 9, 5, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.math.pow(grad, tf.math.multiply(tf.math.negative(tf.math.subtract(beta, tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), sigma), beta), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 8, 0], [0, 3, 1, 0, 2], [83, 65, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 4], [77], [1, 0, 0, 0, 0, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 85], [0, 1, 0, 1], [3, 0], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 4, 2, 2, 1, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.sqrt(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 7], [0, 3, 0, 1, 1, 3], [76, 2, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}, "mapping_values": [1, 12, 6, 6, 2, 1, 0, 1, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 7, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 4], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 4, 3], [0, 0, 4, 5], [0, 15], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 0, 8, 4, 4, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]