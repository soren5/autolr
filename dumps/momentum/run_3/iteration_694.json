[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933504581451416, 2.1909995079040527, 1.7754079103469849, 1.3450111150741577, 1.0845175981521606, 0.9266800284385681, 0.8393142819404602, 0.8101369738578796, 0.7721529603004456, 0.7515595555305481, 0.7164309620857239, 0.6888658404350281, 0.6659083366394043, 0.6251179575920105, 0.6147065162658691, 0.6069039702415466, 0.5959651470184326, 0.5680341720581055, 0.571647584438324, 0.5641142129898071, 0.556872546672821, 0.5389307141304016, 0.5403499007225037, 0.5239837765693665, 0.5120849013328552, 0.4937076270580292, 0.48890915513038635, 0.4771951735019684, 0.4763433635234833, 0.46340212225914, 0.45193687081336975, 0.43418213725090027, 0.4315737187862396, 0.4456259608268738, 0.4241635203361511, 0.4170880913734436, 0.4216986298561096, 0.41405755281448364, 0.41673997044563293, 0.39970728754997253, 0.38857075572013855, 0.38556259870529175, 0.3890761137008667, 0.3887472450733185, 0.3820839822292328, 0.37813788652420044, 0.36640051007270813, 0.366649329662323, 0.3716599941253662, 0.37238967418670654, 0.3547588586807251, 0.3505151569843292, 0.3439939618110657, 0.3398945927619934, 0.34855562448501587, 0.3436882197856903, 0.33583781123161316], "accuracy": [0.12891295552253723, 0.3353586196899414, 0.4422137141227722, 0.5329546928405762, 0.6296393871307373, 0.6612072587013245, 0.6947563290596008, 0.7004358768463135, 0.7112666964530945, 0.7088891863822937, 0.7290979027748108, 0.7436270117759705, 0.748249888420105, 0.7601373791694641, 0.7707040309906006, 0.7716285586357117, 0.7754589915275574, 0.783119797706604, 0.7828556299209595, 0.7835160493850708, 0.7862898111343384, 0.7950072884559631, 0.7942147850990295, 0.7998943328857422, 0.8064984679222107, 0.8138951063156128, 0.8104609847068787, 0.8211596608161926, 0.816008448600769, 0.8210275769233704, 0.8244617581367493, 0.8383304476737976, 0.8360850811004639, 0.833179235458374, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8436138033866882, 0.8379341959953308, 0.8498216867446899, 0.8527275323867798, 0.8508783578872681, 0.8533879518508911, 0.8532558679580688, 0.8556333184242249, 0.852331280708313, 0.8558974862098694, 0.8564258217811584, 0.8578787446022034, 0.8589354157447815, 0.8644828796386719, 0.8693699836730957, 0.8710870146751404, 0.8638224601745605, 0.8710870146751404, 0.8681812286376953, 0.869502067565918], "val_loss": [2.2467968463897705, 2.0251553058624268, 1.1582398414611816, 0.8884643316268921, 0.7703434824943542, 0.7293754816055298, 0.6898866891860962, 0.681486189365387, 0.6537735462188721, 0.6252081394195557, 0.5928545594215393, 0.5683081150054932, 0.5572694540023804, 0.5410200357437134, 0.5353891849517822, 0.5245903134346008, 0.5063334703445435, 0.5063199996948242, 0.5022578239440918, 0.49087202548980713, 0.4887511730194092, 0.49896377325057983, 0.48697924613952637, 0.47436463832855225, 0.4690796732902527, 0.47217774391174316, 0.4574185311794281, 0.4456326365470886, 0.441571444272995, 0.4423570930957794, 0.4394589960575104, 0.4315498173236847, 0.42569801211357117, 0.4251650273799896, 0.4249386489391327, 0.4293137192726135, 0.42555123567581177, 0.4157761335372925, 0.42215752601623535, 0.41665157675743103, 0.4310242235660553, 0.43199247121810913, 0.4372439384460449, 0.4205200970172882, 0.4082633852958679, 0.4116285741329193, 0.4100372791290283, 0.42931464314460754, 0.42106103897094727, 0.4177834093570709, 0.4261944591999054, 0.42340922355651855, 0.41630762815475464, 0.42779338359832764, 0.4403954744338989, 0.428333044052124, 0.4311327338218689], "val_accuracy": [0.4013333320617676, 0.4673333466053009, 0.6460000276565552, 0.6903333067893982, 0.7200000286102295, 0.721666693687439, 0.746999979019165, 0.7386666536331177, 0.7566666603088379, 0.7666666507720947, 0.7730000019073486, 0.7823333144187927, 0.7889999747276306, 0.7916666865348816, 0.7910000085830688, 0.7993333339691162, 0.8043333292007446, 0.8073333501815796, 0.8086666464805603, 0.8083333373069763, 0.8019999861717224, 0.8073333501815796, 0.8240000009536743, 0.8199999928474426, 0.824999988079071, 0.8339999914169312, 0.8389999866485596, 0.8326666951179504, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8433333039283752, 0.8433333039283752, 0.8393333554267883, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8546666502952576, 0.8500000238418579, 0.8553333282470703, 0.8476666808128357, 0.8550000190734863, 0.8510000109672546, 0.8513333201408386, 0.8566666841506958, 0.8539999723434448, 0.862333357334137, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8603333234786987, 0.8673333525657654, 0.8616666793823242, 0.8636666536331177, 0.8640000224113464, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938590049743652, 2.1879520416259766, 1.7665719985961914, 1.3552032709121704, 1.0837916135787964, 0.9172000885009766, 0.8616306185722351, 0.8173699378967285, 0.7563672065734863, 0.7327018976211548, 0.6976020336151123, 0.6710394620895386, 0.6240312457084656, 0.6179616451263428, 0.5987392663955688, 0.5999506711959839, 0.5731610655784607, 0.5630117058753967, 0.5408079624176025, 0.5320116281509399, 0.5251467227935791, 0.5149397850036621, 0.5031195878982544, 0.4888722896575928, 0.4854166507720947, 0.47454777359962463, 0.47016897797584534, 0.4500422775745392, 0.44938573241233826, 0.43948230147361755, 0.4283280372619629, 0.42212530970573425, 0.41391271352767944, 0.40825924277305603, 0.397074818611145], "accuracy": [0.12112006545066833, 0.3397173285484314, 0.44287413358688354, 0.5420684218406677, 0.6293752193450928, 0.6630563735961914, 0.6906617283821106, 0.7003037929534912, 0.707040011882782, 0.7218332886695862, 0.7333245277404785, 0.735569953918457, 0.7552502751350403, 0.7609298825263977, 0.7656848430633545, 0.7740060687065125, 0.7794214487075806, 0.7817989587783813, 0.7942147850990295, 0.798309326171875, 0.7950072884559631, 0.8050455451011658, 0.8074230551719666, 0.8119139075279236, 0.8120459914207458, 0.8197067975997925, 0.8215559124946594, 0.8259146809577942, 0.8304054737091064, 0.8314621448516846, 0.8367455005645752, 0.8424250483512878, 0.8454629778862, 0.8430854678153992, 0.8457271456718445], "val_loss": [2.2459888458251953, 2.01728892326355, 1.1431342363357544, 0.9196656942367554, 0.7801092267036438, 0.7147459983825684, 0.6726597547531128, 0.6689931750297546, 0.6470904350280762, 0.6314211487770081, 0.5812894105911255, 0.5603131651878357, 0.539810061454773, 0.5329893231391907, 0.5374459624290466, 0.5195134878158569, 0.5155619382858276, 0.5073320865631104, 0.5018314719200134, 0.5017974972724915, 0.49582698941230774, 0.49011144042015076, 0.485605925321579, 0.48073479533195496, 0.47135570645332336, 0.4591580331325531, 0.4454720914363861, 0.4425285756587982, 0.45338743925094604, 0.4395046532154083, 0.42867061495780945, 0.42369556427001953, 0.4257235527038574, 0.43226611614227295, 0.4274217188358307], "val_accuracy": [0.4216666519641876, 0.4533333480358124, 0.6503333449363708, 0.6933333277702332, 0.718999981880188, 0.7379999756813049, 0.7493333220481873, 0.7523333430290222, 0.7506666779518127, 0.7609999775886536, 0.7743333578109741, 0.7846666574478149, 0.7886666655540466, 0.8019999861717224, 0.796999990940094, 0.8036666512489319, 0.8019999861717224, 0.8090000152587891, 0.8169999718666077, 0.8190000057220459, 0.8173333406448364, 0.8233333230018616, 0.8303333520889282, 0.82833331823349, 0.8349999785423279, 0.8460000157356262, 0.847000002861023, 0.840666651725769, 0.8423333168029785, 0.8529999852180481, 0.8500000238418579, 0.8486666679382324, 0.8503333330154419, 0.847000002861023, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 2, 4, 0, 4, 8, 8], [0, 2, 4, 5, 0], [0, 25], [0, 1, 0, 0, 1, 1, 1], [1, 0, 4, 3], [0, 0, 4], [30, 58], [0, 1], [0], [1], [0]], "fitness": -0.39714285731315613, "mapping_values": [1, 10, 5, 5, 2, 13, 8, 5, 2, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.sqrt(grad), tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.0625176429748535, 2.3043930530548096, 2.2732012271881104, 2.730557680130005, 2.2467875480651855, 2.505263090133667, 2.2781810760498047, 2.0695202350616455], "accuracy": [0.18055738508701324, 0.10342095047235489, 0.151234969496727, 0.13736626505851746, 0.13498876988887787, 0.12600713968276978, 0.12230881303548813, 0.23682472109794617], "val_loss": [2.305817127227783, 2.30057692527771, 1.8910090923309326, 2.297971248626709, 1.8690797090530396, 2.302155017852783, 2.1575722694396973, 2.037457227706909], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.38233333826065063, 0.12933333218097687, 0.281333327293396, 0.10199999809265137, 0.1666666716337204, 0.35466668009757996]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 7, 7, 7, 6, 0], [0, 0, 1, 0, 2, 3, 3, 2, 0], [83, 50, 27, 13], [0, 0, 0, 0, 1, 1, 1], [0, 1, 2, 0], [0, 3, 3], [59], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [2], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 4, 7, 4, 3, 1, 7, 4, 3, 2, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 6, 3, 1, 3, 1, 6, 8, 3, 3, 4, 1, 2, 3, 5, 9], [0, 0, 1, 0, 2, 3, 0, 0, 1, 3, 3, 2], [83, 99, 27, 73, 57, 70], [0, 0, 0, 1, 1, 1], [0, 1, 3, 9], [0, 3, 3], [0, 8], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 16, 12, 6, 6, 3, 3, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.multiply(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, grad)), grad), tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 23, 24], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [26], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [65, 58], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 4, 8, 2, 3, 7, 3, 9, 0, 6, 7, 4, 1, 7, 3, 4, 1, 7, 2, 4, 5, 3, 7, 8, 5], [1, 7, 3, 5, 7, 6, 1, 7, 4, 2, 3, 6, 2, 7, 2, 6, 0, 4], [0, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 7, 4, 3, 2, 44, 26, 18, 2], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.subtract(grad, tf.math.add(grad, tf.math.add(tf.math.pow(alpha, grad), tf.math.square(tf.math.multiply(grad, beta))))), sigma), grad)), tf.math.add(beta, grad)), beta), grad), tf.math.sqrt(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]