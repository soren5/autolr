[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293297290802002, 2.1879308223724365, 1.7747962474822998, 1.353939175605774, 1.0632727146148682, 0.9240025877952576, 0.8604941964149475, 0.8152939081192017, 0.7578306198120117, 0.731812059879303, 0.696572482585907, 0.6783276796340942, 0.6684688925743103, 0.6401306390762329, 0.6146101951599121, 0.5990896821022034, 0.5848409533500671, 0.5874819755554199, 0.5645292401313782, 0.5519828796386719, 0.5445597171783447, 0.5238736867904663, 0.5051087737083435, 0.5119733810424805, 0.5051712393760681, 0.4802536964416504, 0.48226773738861084, 0.46697935461997986, 0.45155227184295654, 0.4464550018310547, 0.4392109811306, 0.4336746335029602, 0.4243222773075104, 0.4232427179813385, 0.4060904383659363, 0.40281304717063904, 0.3838312327861786, 0.3685399293899536, 0.36923927068710327, 0.36680686473846436, 0.36109089851379395, 0.3555125296115875, 0.3504466414451599, 0.33774620294570923], "accuracy": [0.12349755316972733, 0.3279619514942169, 0.42966583371162415, 0.5388984084129333, 0.6353189945220947, 0.6551313996315002, 0.6909258961677551, 0.7058512568473816, 0.7091533541679382, 0.7235503792762756, 0.7384757399559021, 0.7423061728477478, 0.7553823590278625, 0.7503632307052612, 0.7630431652069092, 0.774270236492157, 0.7707040309906006, 0.7769119143486023, 0.7817989587783813, 0.7866860628128052, 0.789988100528717, 0.7968564033508301, 0.8013472557067871, 0.7975168228149414, 0.8053097128868103, 0.8124422430992126, 0.8140271902084351, 0.8119139075279236, 0.8232730031013489, 0.8253863453865051, 0.8313300609588623, 0.8281601071357727, 0.8355567455291748, 0.8380662798881531, 0.8399154543876648, 0.8449346423149109, 0.852331280708313, 0.86118084192276, 0.8533879518508911, 0.8589354157447815, 0.859199583530426, 0.857218325138092, 0.8609166741371155, 0.8673887252807617], "val_loss": [2.2455368041992188, 2.0176005363464355, 1.1325968503952026, 0.8553513884544373, 0.7542434334754944, 0.6951223015785217, 0.6439266800880432, 0.6102309823036194, 0.6155306100845337, 0.5876657962799072, 0.5511422753334045, 0.5394973158836365, 0.522717297077179, 0.5131659507751465, 0.5118964910507202, 0.501843273639679, 0.4936556816101074, 0.47666099667549133, 0.47012895345687866, 0.46236082911491394, 0.46626386046409607, 0.45449206233024597, 0.4459999203681946, 0.45310238003730774, 0.4314790964126587, 0.4272124767303467, 0.4304234981536865, 0.4239576756954193, 0.41860446333885193, 0.40115299820899963, 0.39519402384757996, 0.3956555724143982, 0.3900914788246155, 0.38323408365249634, 0.3830294609069824, 0.385202556848526, 0.3794548809528351, 0.3773189187049866, 0.3777340352535248, 0.39430272579193115, 0.38696107268333435, 0.3794994652271271, 0.38124409317970276, 0.3885442614555359], "val_accuracy": [0.40400001406669617, 0.46299999952316284, 0.6543333530426025, 0.6890000104904175, 0.7103333473205566, 0.7400000095367432, 0.7506666779518127, 0.7586666941642761, 0.7706666588783264, 0.7736666798591614, 0.7839999794960022, 0.781000018119812, 0.7913333177566528, 0.7990000247955322, 0.7913333177566528, 0.7976666688919067, 0.8130000233650208, 0.8076666593551636, 0.815666675567627, 0.8266666531562805, 0.8246666789054871, 0.8199999928474426, 0.8323333263397217, 0.8396666646003723, 0.8393333554267883, 0.8383333086967468, 0.8393333554267883, 0.840666651725769, 0.8473333120346069, 0.8573333621025085, 0.8586666584014893, 0.8636666536331177, 0.862666666507721, 0.8709999918937683, 0.8700000047683716, 0.8679999709129333, 0.8723333477973938, 0.8686666488647461, 0.8759999871253967, 0.8759999871253967, 0.871999979019165, 0.8693333268165588, 0.8706666827201843, 0.8726666569709778]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 6, 6, 1, 0, 3, 2, 2, 1, 5, 7, 3, 1, 1, 7, 7, 4, 6, 8, 2], [0, 0, 1, 0, 0, 2, 1, 2, 3, 1, 3, 2, 2, 2, 3, 2, 3, 2, 3, 0, 0], [83, 99, 27, 46, 60, 36], [1, 0, 1, 1, 1, 1], [0, 1, 1], [0, 3, 3], [0], [1, 0, 1, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 71], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 24, 21, 6, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.math.subtract(grad, grad), alpha), tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(grad, grad), tf.math.add(grad, tf.math.pow(grad, grad))), tf.math.divide_no_nan(grad, grad)), tf.math.sqrt(grad)), grad))), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 2, 7], [0, 3, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 4, 4, 3, 4, 7, 3, 9], [0, 0, 4, 5, 1, 1], [0, 58, 3], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 1, 14, 8, 6, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(grad, tf.math.add(tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303983449935913, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 3, 1, 3, 7, 8, 7, 4, 1, 3, 8, 7, 5, 8, 0], [0, 1, 1, 0, 2, 2, 1, 2, 2, 3, 0], [84, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 0], [0], [1, 0, 0, 0, 1, 1, 1], [0, 4, 4, 3], [4, 7, 0], [0, 58], [0, 0, 0, 0, 1, 1], [0, 7, 9, 4], [5, 0], [0, 49]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 16, 11, 3, 1, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.subtract(tf.math.multiply(grad, tf.math.sqrt(alpha)), grad), tf.math.add(grad, grad))))), tf.math.square(tf.math.sqrt(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 5, 1, 1, 3, 7, 9, 5, 5, 2, 6], [0, 0, 1, 0, 2, 0, 2, 3, 2], [83, 99, 27, 58, 11], [1, 0, 1, 1, 1, 1], [0, 5, 2], [0, 3, 4], [0], [0, 0, 0, 0, 0, 1, 1, 1], [2, 0, 4, 3, 9], [0, 0, 4], [0, 74, 96], [0, 1, 1], [7], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 5, 1, 0, 1, 1, 8, 5, 3, 3, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [2.124738050956198e+18, 3827.83251953125, 985099.75, 253148736.0, 64368594944.0, 16430480228352.0], "accuracy": [0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [133.5716094970703, 37184.375, 9525851.0, 2438627584.0, 624288661504.0, 159817897345024.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]