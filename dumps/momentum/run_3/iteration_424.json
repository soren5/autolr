[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293220281600952, 2.1879959106445312, 1.7628027200698853, 1.3351041078567505, 1.082892656326294, 0.9183201193809509, 0.8427686095237732, 0.8232514262199402, 0.7695569396018982, 0.7551688551902771, 0.7183231115341187, 0.6833053231239319, 0.6767714619636536, 0.6452427506446838, 0.6357340812683105, 0.6310191750526428, 0.6042162179946899, 0.5881560444831848, 0.5772266387939453, 0.5571297407150269, 0.5552922487258911, 0.535980761051178, 0.5437387228012085, 0.5295334458351135, 0.5179896950721741, 0.5074491500854492, 0.49605873227119446, 0.5011383891105652, 0.4726990759372711, 0.46778133511543274, 0.4436054825782776, 0.45077216625213623, 0.443736732006073, 0.4262619912624359, 0.4329679608345032, 0.4181358218193054, 0.4043691158294678, 0.40455156564712524, 0.38785409927368164, 0.39158475399017334, 0.3907564878463745, 0.37531086802482605, 0.3786782920360565, 0.3713167905807495, 0.36218327283859253, 0.3485584259033203, 0.3411598801612854, 0.34659263491630554, 0.33445796370506287, 0.3292905390262604, 0.32241785526275635, 0.30608630180358887, 0.31127578020095825, 0.30925387144088745, 0.31085169315338135], "accuracy": [0.1270637959241867, 0.328490287065506, 0.4361378848552704, 0.5445780158042908, 0.6404702067375183, 0.6668868064880371, 0.6992471218109131, 0.707568347454071, 0.7080966830253601, 0.7166820764541626, 0.7347774505615234, 0.7433628439903259, 0.7514199018478394, 0.7614582180976868, 0.763967752456665, 0.7622507214546204, 0.7643640041351318, 0.7761194109916687, 0.7845727205276489, 0.7854973077774048, 0.7829877138137817, 0.7984414100646973, 0.7979130744934082, 0.8039889335632324, 0.800290584564209, 0.8061022162437439, 0.816008448600769, 0.8165367841720581, 0.8285563588142395, 0.8222163319587708, 0.8317263126373291, 0.8367455005645752, 0.8334434032440186, 0.8412362933158875, 0.8409721255302429, 0.8421608805656433, 0.8455950617790222, 0.8512746095657349, 0.8599920868873596, 0.8531237840652466, 0.8496896028518677, 0.8532558679580688, 0.8578787446022034, 0.86118084192276, 0.8618412613868713, 0.8639545440673828, 0.8714832663536072, 0.8701624870300293, 0.8697662353515625, 0.8717474341392517, 0.8754457831382751, 0.8823140859603882, 0.8765024542808533, 0.8776912093162537, 0.8815215826034546], "val_loss": [2.2466037273406982, 2.015439748764038, 1.1265393495559692, 0.8665294051170349, 0.7466377019882202, 0.703758955001831, 0.6468445062637329, 0.6332395672798157, 0.6446119546890259, 0.6077549457550049, 0.5682090520858765, 0.5478847026824951, 0.5361809134483337, 0.5319778919219971, 0.5364961624145508, 0.5101642608642578, 0.5151212811470032, 0.49760201573371887, 0.47911831736564636, 0.476012647151947, 0.46239933371543884, 0.46086442470550537, 0.459988534450531, 0.4563518762588501, 0.4547592103481293, 0.45228731632232666, 0.44753211736679077, 0.4410930871963501, 0.43644094467163086, 0.42479199171066284, 0.4180029332637787, 0.41031527519226074, 0.4172816574573517, 0.41063135862350464, 0.4091041684150696, 0.40624967217445374, 0.4126127064228058, 0.40867024660110474, 0.39871078729629517, 0.39342039823532104, 0.3988095223903656, 0.40615934133529663, 0.4072129726409912, 0.38960084319114685, 0.3941440284252167, 0.4032483696937561, 0.40664970874786377, 0.4009970724582672, 0.3980042338371277, 0.4001745283603668, 0.4034116566181183, 0.41563475131988525, 0.4219389259815216, 0.4274849593639374, 0.4203849136829376], "val_accuracy": [0.4026666581630707, 0.4390000104904175, 0.6513333320617676, 0.6949999928474426, 0.7303333282470703, 0.7450000047683716, 0.7583333253860474, 0.7670000195503235, 0.7556666731834412, 0.778333306312561, 0.7866666913032532, 0.7883333563804626, 0.8009999990463257, 0.7993333339691162, 0.7850000262260437, 0.8046666383743286, 0.8069999814033508, 0.8009999990463257, 0.8109999895095825, 0.8186666369438171, 0.8270000219345093, 0.8206666707992554, 0.8296666741371155, 0.8370000123977661, 0.8363333344459534, 0.8320000171661377, 0.82833331823349, 0.8376666903495789, 0.846666693687439, 0.8483333587646484, 0.8483333587646484, 0.8536666631698608, 0.8496666550636292, 0.8583333492279053, 0.8579999804496765, 0.8583333492279053, 0.8556666374206543, 0.859666645526886, 0.8606666922569275, 0.8603333234786987, 0.8586666584014893, 0.8673333525657654, 0.8659999966621399, 0.8669999837875366, 0.862666666507721, 0.8659999966621399, 0.8683333396911621, 0.8696666955947876, 0.871999979019165, 0.8736666440963745, 0.8713333606719971, 0.8690000176429749, 0.8706666827201843, 0.8703333139419556, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [8, 1, 3, 1, 3, 3, 2, 3, 2, 1, 5, 8, 9, 5, 3, 7, 7, 9], [0, 0, 1, 0, 2, 1, 1, 1, 0, 2, 1], [40, 99, 27, 48, 36, 21], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 1, 1, 0, 1], [0, 0, 4, 3], [0, 3, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 18, 11, 6, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.multiply(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)), alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 3, 1, 7], [3, 1, 1, 0, 2], [6, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 2, 8, 2, 1, 3, 4, 1, 0, 1, 5, 8, 4, 2, 2], [0, 3, 4, 5, 1, 1, 0, 1, 3, 3, 2, 1], [0, 85], [0, 0, 0, 0, 1, 1, 1], [0, 4, 1, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, alpha), alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(grad, tf.math.multiply(tf.math.pow(tf.math.subtract(grad, alpha), tf.math.negative(tf.math.subtract(alpha, tf.math.square(tf.math.sqrt(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3048593997955322, 2.3025872707366943, 2.3025879859924316, 2.30258846282959, 2.3025903701782227, 2.3025927543640137, 2.3025906085968018, 2.3026092052459717, 2.3026137351989746, 2.302626132965088], "accuracy": [0.09272222965955734, 0.09985470771789551, 0.09998679161071777, 0.09734513610601425, 0.09760929644107819, 0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.0956280529499054, 0.09906221181154251], "val_loss": [2.3025848865509033, 2.302583932876587, 2.3025827407836914, 2.3025765419006348, 2.302570343017578, 2.302567720413208, 2.302556037902832, 2.3025407791137695, 2.3025224208831787, 2.302513360977173], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10566666722297668, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 8, 4, 4, 1, 28, 16, 12, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 29}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [11, 99, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 2, 1, 1, 8, 9, 9], [0, 3, 3], [0, 70, 21], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [15, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 8, 3, 3, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304168224334717, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 0, 0], [64, 99, 43], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 2, 6, 0, 1, 2, 7, 4, 6, 6, 6, 3, 2, 6, 2, 1, 4, 6, 1, 1, 8, 3, 9], [2, 3, 1, 3, 1, 0, 3, 5, 5, 0, 2, 3, 2, 5, 3, 5, 3, 2, 3, 3], [0, 32, 79], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 44, 24, 20, 3, 7, 4, 3, 2, 3, 2, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.subtract(tf.math.add(tf.math.add(tf.math.pow(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.subtract(grad, grad), grad)), tf.math.sqrt(grad)), beta)), grad))))), tf.math.multiply(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [4055256320.0, 211845758976.0, 1851604074496.0, 8078976614400.0, 25054599446528.0, 61187161063424.0], "accuracy": [0.09655263274908066, 0.09879804402589798, 0.09840179979801178, 0.10289261490106583, 0.10210011899471283, 0.09536388516426086], "val_loss": [27838722048.0, 564610662400.0, 3365983748096.0, 12036825153536.0, 32451135012864.0, 73094504906752.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]