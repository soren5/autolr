[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934696674346924, 2.1944291591644287, 1.7854660749435425, 1.3783612251281738, 1.100260853767395, 0.9470992684364319, 0.8791588544845581, 0.8387473821640015, 0.7921196818351746, 0.764136791229248, 0.7270902991294861, 0.6976239085197449, 0.6610077023506165, 0.6538786888122559, 0.6200559735298157, 0.6197589039802551, 0.5897399187088013, 0.5956176519393921, 0.5721307396888733, 0.5615857839584351, 0.5356224179267883, 0.5288006067276001, 0.527190089225769, 0.5087187886238098, 0.5021171569824219, 0.4864705502986908, 0.49320417642593384, 0.4885835349559784, 0.4749141037464142, 0.4584778845310211, 0.44157740473747253, 0.43809255957603455, 0.4473237693309784, 0.4204663932323456, 0.4069300889968872, 0.40992581844329834, 0.38645532727241516, 0.3907458186149597, 0.3846314251422882, 0.3774717450141907, 0.3639763295650482, 0.3572778105735779, 0.3465198576450348, 0.3568978011608124, 0.34595516324043274, 0.33760762214660645, 0.32352280616760254, 0.33330363035202026, 0.3168088495731354, 0.3159087598323822], "accuracy": [0.1302337795495987, 0.3203011453151703, 0.44089287519454956, 0.5341434478759766, 0.6341302394866943, 0.6621318459510803, 0.6873596906661987, 0.696209192276001, 0.7014925479888916, 0.7078325152397156, 0.7210407853126526, 0.7366266250610352, 0.7481178045272827, 0.7503632307052612, 0.7637035846710205, 0.7643640041351318, 0.7774402499198914, 0.778232753276825, 0.7840443849563599, 0.7906485199928284, 0.8001585006713867, 0.802271842956543, 0.7996301651000977, 0.81112140417099, 0.8074230551719666, 0.8191784620285034, 0.8079513907432556, 0.8168009519577026, 0.8185180425643921, 0.8232730031013489, 0.8274996876716614, 0.8334434032440186, 0.8289526104927063, 0.8407079577445984, 0.8455950617790222, 0.8421608805656433, 0.8506141901016235, 0.8525954484939575, 0.8507462739944458, 0.8518029451370239, 0.8582749962806702, 0.8614450097084045, 0.8654074668884277, 0.8597279191017151, 0.8648791313171387, 0.8705587387084961, 0.8765024542808533, 0.867520809173584, 0.8761062026023865, 0.8755778670310974], "val_loss": [2.247824192047119, 2.0302414894104004, 1.1701130867004395, 0.8869785070419312, 0.7655559182167053, 0.7047428488731384, 0.6724584698677063, 0.6537401676177979, 0.6545267105102539, 0.6127445697784424, 0.5798906087875366, 0.5538859963417053, 0.5439566969871521, 0.5308407545089722, 0.5229664444923401, 0.5091771483421326, 0.5024814605712891, 0.49803364276885986, 0.4857134222984314, 0.47996097803115845, 0.4750661253929138, 0.4728539288043976, 0.46891552209854126, 0.45464131236076355, 0.44189921021461487, 0.43502941727638245, 0.4317253530025482, 0.42383426427841187, 0.42094579339027405, 0.4171049892902374, 0.4063841998577118, 0.4065234661102295, 0.3985024392604828, 0.3959784209728241, 0.3949865400791168, 0.39373287558555603, 0.38319849967956543, 0.38305044174194336, 0.3826206922531128, 0.3778504729270935, 0.37596628069877625, 0.3790314793586731, 0.37442195415496826, 0.38430577516555786, 0.37884366512298584, 0.3745218515396118, 0.3736059069633484, 0.3721162974834442, 0.38574153184890747, 0.3951967656612396], "val_accuracy": [0.4256666600704193, 0.4866666793823242, 0.637666642665863, 0.6943333148956299, 0.7263333201408386, 0.7390000224113464, 0.7513333559036255, 0.7570000290870667, 0.7413333058357239, 0.765999972820282, 0.7696666717529297, 0.7826666831970215, 0.7903333306312561, 0.7933333516120911, 0.7940000295639038, 0.8006666898727417, 0.8053333163261414, 0.8036666512489319, 0.8116666674613953, 0.8169999718666077, 0.8176666498184204, 0.8163333535194397, 0.8289999961853027, 0.8293333053588867, 0.8360000252723694, 0.8360000252723694, 0.8349999785423279, 0.8343333601951599, 0.8399999737739563, 0.8450000286102295, 0.8493333458900452, 0.8463333249092102, 0.8513333201408386, 0.8583333492279053, 0.8636666536331177, 0.8633333444595337, 0.8619999885559082, 0.8606666922569275, 0.8636666536331177, 0.8676666617393494, 0.8700000047683716, 0.8656666874885559, 0.8713333606719971, 0.8703333139419556, 0.874666690826416, 0.8673333525657654, 0.8723333477973938, 0.8743333220481873, 0.8713333606719971, 0.874666690826416]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 8, 1, 3], [0, 0, 2, 0, 3], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [3, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 4, 8, 1, 0, 1, 5, 1, 5], [2, 0, 4, 5, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 0, 2, 1, 1, 1, 14, 9, 5, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad)), tf.math.square(sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 7, 1, 3, 3, 9, 6, 4, 8, 0], [0, 3, 1, 0, 2, 3, 2, 1, 1, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 5, 4, 3, 7, 1, 5, 7, 8, 5, 5, 2, 4, 0, 0, 4, 5, 2, 7, 9], [0, 0, 0, 0, 1, 7, 3, 1, 2, 3], [0, 58, 26, 58, 55], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 14, 10, 3, 6, 3, 3, 1, 30, 20, 10, 5, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(alpha), tf.math.negative(alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), alpha), grad))))), tf.math.pow(tf.math.square(sigma), alpha))), tf.math.add(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 3, 2, 3, 2, 6, 6, 5, 6, 9, 9], [3, 0, 1, 0, 2, 1, 3], [28, 99, 27, 16], [0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 5], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1], [9, 0, 4, 3], [0, 6, 4], [0, 72], [1, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 4, 7, 4, 3, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0, 1, 0, 1], [0, 1, 5], [0, 4, 3], [0], [0, 0, 1, 1, 0, 1, 1], [0, 1, 4, 3], [0, 2, 5], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1143627392.0, 21574983680.0, 101110177792.0, 274221334528.0, 590488666112.0, 1092392910848.0], "accuracy": [0.09813763201236725, 0.10236428678035736, 0.09576013684272766, 0.10791176557540894, 0.1018359512090683, 0.09760929644107819], "val_loss": [5145995264.0, 41162809344.0, 138919165952.0, 329282846720.0, 643117154304.0, 1111302995968.0], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]