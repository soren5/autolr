[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293525218963623, 2.189080238342285, 1.7737877368927002, 1.3766014575958252, 1.098747968673706, 0.9449859261512756, 0.8622022867202759, 0.8408292531967163, 0.7874965667724609, 0.7622768878936768, 0.6999418139457703, 0.6905337572097778, 0.65557461977005, 0.6305596232414246, 0.6104207038879395, 0.606000542640686, 0.5838289856910706, 0.5672492384910583, 0.5592297315597534, 0.5603825449943542, 0.5392176508903503, 0.5378840565681458, 0.5230110287666321, 0.513543426990509, 0.49865469336509705, 0.4887285828590393, 0.4865356683731079, 0.48178809881210327, 0.46452727913856506, 0.46338433027267456, 0.44621267914772034, 0.4391153156757355, 0.43204131722450256, 0.42630958557128906, 0.42938709259033203, 0.4204593300819397, 0.4043427109718323, 0.39643970131874084, 0.39707857370376587, 0.4026663601398468, 0.38716521859169006, 0.36659765243530273, 0.3676517903804779, 0.3622009754180908, 0.3576161563396454, 0.35365042090415955, 0.3500840365886688, 0.33714547753334045, 0.34512466192245483, 0.3292636275291443, 0.33644652366638184, 0.32645100355148315, 0.32902684807777405, 0.30538836121559143], "accuracy": [0.12732796370983124, 0.32981112599372864, 0.43785497546195984, 0.5381059050559998, 0.6254127621650696, 0.654999315738678, 0.6839255094528198, 0.6942279934883118, 0.6997754573822021, 0.71100252866745, 0.733060359954834, 0.7413815855979919, 0.7511557340621948, 0.7642319202423096, 0.7667415142059326, 0.7738739848136902, 0.776251494884491, 0.7800818681716919, 0.7828556299209595, 0.7854973077774048, 0.7976489067077637, 0.7979130744934082, 0.7994980812072754, 0.7979130744934082, 0.8067626357078552, 0.8105930685997009, 0.8088759779930115, 0.8109893202781677, 0.8219521641731262, 0.8244617581367493, 0.8245938420295715, 0.8318583965301514, 0.8348963260650635, 0.8383304476737976, 0.8403117060661316, 0.837537944316864, 0.8432175517082214, 0.8465195894241333, 0.8521991968154907, 0.844010055065155, 0.8515387773513794, 0.8601241707801819, 0.8610487580299377, 0.86118084192276, 0.8614450097084045, 0.8631620407104492, 0.8627657890319824, 0.867520809173584, 0.8663320541381836, 0.872407853603363, 0.8712190985679626, 0.8730682730674744, 0.8720116019248962, 0.8771628737449646], "val_loss": [2.246365547180176, 2.0170581340789795, 1.131354808807373, 0.8582857251167297, 0.758592963218689, 0.696884274482727, 0.6534432172775269, 0.638354480266571, 0.6423830986022949, 0.6097372770309448, 0.5660011768341064, 0.544907808303833, 0.5320417284965515, 0.5288482904434204, 0.5209434628486633, 0.5117611289024353, 0.5043467879295349, 0.4983753263950348, 0.4971466362476349, 0.4988471567630768, 0.48638859391212463, 0.47397685050964355, 0.4655439555644989, 0.4583089053630829, 0.4650152325630188, 0.4472111463546753, 0.4495599865913391, 0.4294402599334717, 0.43163180351257324, 0.4275546371936798, 0.42469489574432373, 0.4201795756816864, 0.4234684109687805, 0.41908979415893555, 0.41075247526168823, 0.40541011095046997, 0.4050922393798828, 0.4147148132324219, 0.39904674887657166, 0.39241576194763184, 0.40389376878738403, 0.3991853892803192, 0.3929644227027893, 0.3778640627861023, 0.37598490715026855, 0.37930577993392944, 0.3710791766643524, 0.3704157769680023, 0.37717488408088684, 0.37740373611450195, 0.3896198868751526, 0.3859187066555023, 0.3740386962890625, 0.38503172993659973], "val_accuracy": [0.41966667771339417, 0.45633333921432495, 0.6579999923706055, 0.6899999976158142, 0.7223333120346069, 0.7423333525657654, 0.7509999871253967, 0.7576666474342346, 0.7676666378974915, 0.7773333191871643, 0.7753333449363708, 0.7876666784286499, 0.7923333048820496, 0.8023333549499512, 0.8046666383743286, 0.7983333468437195, 0.8003333210945129, 0.8106666803359985, 0.8009999990463257, 0.8116666674613953, 0.8180000185966492, 0.8176666498184204, 0.8183333277702332, 0.8236666917800903, 0.8226666450500488, 0.8316666483879089, 0.8303333520889282, 0.8426666855812073, 0.8349999785423279, 0.8410000205039978, 0.8443333506584167, 0.8506666421890259, 0.8510000109672546, 0.8503333330154419, 0.856333315372467, 0.8560000061988831, 0.859666645526886, 0.8586666584014893, 0.8610000014305115, 0.862666666507721, 0.8576666712760925, 0.862666666507721, 0.8616666793823242, 0.8683333396911621, 0.8686666488647461, 0.8659999966621399, 0.8686666488647461, 0.8730000257492065, 0.8743333220481873, 0.8743333220481873, 0.8683333396911621, 0.8709999918937683, 0.871666669845581, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 3, 2, 6, 8, 5, 6, 7, 3, 8, 9, 1, 8, 1, 4, 2, 8, 0, 7, 1], [0, 3, 3, 5, 2, 3, 1, 2, 1, 4, 2, 0, 3, 3], [0, 72, 44], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 36, 22, 14, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(grad)), grad), tf.math.divide_no_nan(beta, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.sqrt(alpha))), tf.math.subtract(tf.math.pow(beta, alpha), tf.math.add(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(beta, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3030858039855957, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 3, 3, 1, 2, 3, 0], [0, 0, 1, 2, 2, 1], [64, 99, 27], [1, 0, 1, 1, 0, 1], [0, 7, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 0, 1], [0, 0, 4, 3], [5, 0, 4], [0, 58], [0, 0, 0, 0, 0, 1, 1], [0, 2, 9, 1, 5], [0, 3], [0, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 1, 0, 1, 1, 2, 1, 1, 0, 7, 5, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.multiply(grad, tf.math.negative(grad)), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [13503.47265625, 2.714160680770874, 2.491966485977173, 2.593914747238159, 2.6558377742767334, 2.531151533126831, 2.649109125137329], "accuracy": [0.10236428678035736, 0.10566636174917221, 0.10196803510189056, 0.09932637959718704, 0.09681680053472519, 0.09496764093637466, 0.09694888442754745], "val_loss": [2.745588541030884, 2.648622512817383, 2.721959352493286, 2.650156259536743, 2.750552177429199, 2.6202468872070312, 2.6393301486968994], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10166666656732559, 0.10133333504199982, 0.10233332961797714, 0.10166666656732559, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [2, 6, 3, 1, 3, 5, 4, 9, 9], [0, 0, 1, 0, 1], [83, 99, 27, 29, 72], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 2, 2, 5, 0, 5], [0, 3, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [5, 0, 4], [0, 58], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 5, 11, 7, 4, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.square(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.square(grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 3, 2], [83, 0, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [2, 2, 1], [0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 4, 3, 9], [0, 0, 4], [70, 58, 35], [0, 1, 1], [6], [1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 0, 7, 5, 2, 3, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [9450561536.0, 156385869824.0, 479325749248.0, 1046319661056.0, 1933453164544.0, 3244018106368.0], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [66662420480.0, 307927285760.0, 752757964800.0, 1492283686912.0, 2604096290816.0, 4164205150208.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]