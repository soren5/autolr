[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8511428833007812, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294004440307617, 2.1889560222625732, 1.7764500379562378, 1.368436574935913, 1.0916520357131958, 0.9413624405860901, 0.8532223701477051, 0.8577184677124023, 0.7864415049552917, 0.7567142844200134, 0.7322450280189514, 0.6979417204856873, 0.6607203483581543, 0.6357775926589966, 0.6240370273590088, 0.5982629060745239, 0.5976462364196777, 0.5736170411109924, 0.5552724003791809, 0.5691951513290405, 0.5427546501159668, 0.5406880974769592, 0.5248408317565918, 0.5130197405815125, 0.5011118650436401, 0.49245837330818176, 0.48347991704940796, 0.4796666204929352, 0.4686300754547119, 0.4693262577056885, 0.4503988027572632, 0.44827547669410706, 0.44454720616340637, 0.4337601959705353, 0.42714598774909973, 0.41318488121032715, 0.4078795611858368, 0.4044192433357239, 0.4014666974544525, 0.3874705135822296, 0.38289764523506165, 0.3745568096637726, 0.3751634955406189, 0.36507710814476013, 0.3582175374031067, 0.3519761860370636, 0.3467295467853546, 0.346096009016037, 0.33674630522727966, 0.3179154396057129, 0.33965885639190674, 0.34553900361061096, 0.32533833384513855, 0.3324059545993805, 0.32490649819374084, 0.31558161973953247, 0.32014867663383484, 0.3034573197364807], "accuracy": [0.13076211512088776, 0.33403778076171875, 0.4360058009624481, 0.5346717834472656, 0.6215823292732239, 0.6606789231300354, 0.6831330060958862, 0.6915863156318665, 0.6984546184539795, 0.7173424959182739, 0.7284374833106995, 0.7310791015625, 0.7499669790267944, 0.7607977986335754, 0.7611940503120422, 0.778232753276825, 0.776251494884491, 0.7766477465629578, 0.7821952104568481, 0.787082314491272, 0.7869502305984497, 0.7910447716712952, 0.8010830879211426, 0.800818920135498, 0.8038568496704102, 0.8123101592063904, 0.8145555257797241, 0.8161405324935913, 0.8248580098152161, 0.8216879963874817, 0.8277638554573059, 0.8274996876716614, 0.8308017253875732, 0.8355567455291748, 0.8396512866020203, 0.8470479249954224, 0.8432175517082214, 0.8487650156021118, 0.8506141901016235, 0.8541803956031799, 0.8520671129226685, 0.8543124794960022, 0.8551049828529358, 0.8569541573524475, 0.8595958352088928, 0.8667283058166504, 0.8632941246032715, 0.8651432991027832, 0.8722757697105408, 0.8767666220664978, 0.8739928603172302, 0.8659358024597168, 0.8742570281028748, 0.8747853636741638, 0.8761062026023865, 0.8726720213890076, 0.873860776424408, 0.8794082403182983], "val_loss": [2.245021343231201, 2.0184009075164795, 1.1440551280975342, 0.8815978169441223, 0.7884619235992432, 0.730684220790863, 0.6939848065376282, 0.650761067867279, 0.6682496666908264, 0.6120402216911316, 0.571184515953064, 0.5498497486114502, 0.5382781028747559, 0.5336768627166748, 0.5208187699317932, 0.5175373554229736, 0.5047558546066284, 0.5043100714683533, 0.5031498074531555, 0.4948572516441345, 0.4861983358860016, 0.4755938649177551, 0.4649405777454376, 0.451587438583374, 0.44595712423324585, 0.45628035068511963, 0.4444829523563385, 0.4401780664920807, 0.4457615613937378, 0.44011813402175903, 0.4273347556591034, 0.42638614773750305, 0.4214766323566437, 0.41319799423217773, 0.4044809937477112, 0.40376192331314087, 0.4027993083000183, 0.4048563539981842, 0.3944600820541382, 0.3858373165130615, 0.38977450132369995, 0.3834230899810791, 0.3845718502998352, 0.38953685760498047, 0.3835606575012207, 0.3807465136051178, 0.3832958936691284, 0.37958472967147827, 0.37832945585250854, 0.38934457302093506, 0.39242956042289734, 0.3870644271373749, 0.39028793573379517, 0.40253809094429016, 0.3889044523239136, 0.3886580467224121, 0.38785701990127563, 0.41320955753326416], "val_accuracy": [0.43066665530204773, 0.45500001311302185, 0.6503333449363708, 0.6946666836738586, 0.703000009059906, 0.7226666808128357, 0.7296666502952576, 0.7586666941642761, 0.7576666474342346, 0.7673333287239075, 0.7733333110809326, 0.7853333353996277, 0.7940000295639038, 0.7923333048820496, 0.8033333420753479, 0.8050000071525574, 0.812333345413208, 0.8100000023841858, 0.8086666464805603, 0.8159999847412109, 0.8233333230018616, 0.8240000009536743, 0.8209999799728394, 0.8293333053588867, 0.8353333473205566, 0.8356666564941406, 0.843999981880188, 0.8420000076293945, 0.8339999914169312, 0.8463333249092102, 0.8566666841506958, 0.8583333492279053, 0.859000027179718, 0.8569999933242798, 0.8583333492279053, 0.859666645526886, 0.8640000224113464, 0.8613333106040955, 0.8636666536331177, 0.8659999966621399, 0.8629999756813049, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8713333606719971, 0.8703333139419556, 0.8666666746139526, 0.8736666440963745, 0.878000020980835, 0.8790000081062317, 0.8759999871253967, 0.8726666569709778, 0.8793333172798157, 0.8766666650772095, 0.8733333349227905, 0.8730000257492065, 0.8726666569709778, 0.8756666779518127]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 2], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 4, 3, 0], [0, 0, 2], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 6, 3, 3, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303961992263794, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [99, 22, 27], [0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 8], [0, 3, 3], [0], [0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 3], [0, 0, 4], [0, 58], [0, 1], [5], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 7, 3], [0, 3, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 2, 2, 5, 3, 8], [0, 3, 0, 1, 3], [3, 26], [1, 0, 0, 0, 1, 0, 0], [4, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 12, 7, 5, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.sqrt(alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 6, 3], [0, 0, 1, 0, 2], [83, 99, 65], [1, 0, 1, 0, 0, 0], [0, 1, 6], [2, 3, 3], [0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 4, 3, 6], [0, 0, 5, 2], [0, 58], [0, 1, 1], [3], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 9, 5, 4, 2, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, grad)", "other_info": {"loss": [2.3182454109191895, 78076490809344.0, 27499.841796875, 6914518.5, 1767909888.0, 453431197696.0], "accuracy": [0.09681680053472519, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6460318565368652, 1022.0415649414062, 267374.6875, 66887920.0, 17116855296.0, 4384887406592.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]