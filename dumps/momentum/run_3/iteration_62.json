[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293224811553955, 2.186264991760254, 1.7567553520202637, 1.357261300086975, 1.0795527696609497, 0.9386889338493347, 0.8434094190597534, 0.8033757209777832, 0.7595253586769104, 0.7364202737808228, 0.7069935202598572, 0.6688284277915955, 0.6559283137321472, 0.6294549107551575, 0.6043095588684082, 0.6156558394432068, 0.5910214781761169, 0.5796576142311096, 0.5736597180366516, 0.566565215587616, 0.535643458366394, 0.5445792078971863, 0.5192268490791321, 0.5188539624214172, 0.5096459984779358, 0.49533581733703613, 0.4694710373878479, 0.49201908707618713, 0.4705401360988617, 0.4556286334991455, 0.4421955943107605, 0.44368281960487366, 0.4296818673610687, 0.4284782409667969, 0.4104374051094055, 0.41092807054519653, 0.39602425694465637, 0.3903878629207611, 0.3955531120300293, 0.3924608826637268, 0.36671891808509827, 0.37721535563468933, 0.3699907064437866, 0.361694872379303, 0.36802729964256287, 0.36170050501823425, 0.34901922941207886, 0.34144097566604614, 0.34408119320869446, 0.3217064142227173, 0.3357899487018585, 0.3249680697917938, 0.32106584310531616, 0.31762903928756714, 0.3086373507976532, 0.3152432143688202, 0.29057565331459045, 0.3000473082065582, 0.29663291573524475], "accuracy": [0.1254788041114807, 0.3358869254589081, 0.4431383013725281, 0.5449742674827576, 0.6339981555938721, 0.6592260003089905, 0.6884163022041321, 0.7047945857048035, 0.7092854380607605, 0.7135120630264282, 0.7309470176696777, 0.7412495017051697, 0.7541936039924622, 0.7643640041351318, 0.7696473598480225, 0.7688548564910889, 0.7695152759552002, 0.77677983045578, 0.7821952104568481, 0.7808743715286255, 0.7885351777076721, 0.7880068421363831, 0.8030643463134766, 0.8009510040283203, 0.8058380484580994, 0.8108572363853455, 0.8207634687423706, 0.8136309385299683, 0.8193105459213257, 0.8256505131721497, 0.8259146809577942, 0.8308017253875732, 0.834632158279419, 0.8374059200286865, 0.8437458872795105, 0.8379341959953308, 0.8475762605667114, 0.852859616279602, 0.8491612672805786, 0.8445383906364441, 0.8615770936012268, 0.8573504090309143, 0.8585391640663147, 0.8582749962806702, 0.8594637513160706, 0.8659358024597168, 0.8669924736022949, 0.8671245574951172, 0.86553955078125, 0.8746532797813416, 0.8664641380310059, 0.8729361891746521, 0.8749174475669861, 0.8747853636741638, 0.8808611631393433, 0.8776912093162537, 0.883238673210144, 0.8813894987106323, 0.8813894987106323], "val_loss": [2.2457900047302246, 2.013885974884033, 1.1139345169067383, 0.8585897088050842, 0.7604690790176392, 0.7192150354385376, 0.6613243222236633, 0.6364076137542725, 0.6238407492637634, 0.6075907945632935, 0.5759216547012329, 0.5527611374855042, 0.5384721755981445, 0.545252799987793, 0.5386388897895813, 0.526878833770752, 0.5187151432037354, 0.5360267758369446, 0.5163339972496033, 0.5060296058654785, 0.5038988590240479, 0.4948747456073761, 0.4875233471393585, 0.47402530908584595, 0.49268439412117004, 0.4808070957660675, 0.46105054020881653, 0.4477558135986328, 0.44734781980514526, 0.4539737403392792, 0.44291675090789795, 0.4340611696243286, 0.44734886288642883, 0.4546806514263153, 0.4436325132846832, 0.4479984939098358, 0.4494059979915619, 0.45093831419944763, 0.4460432827472687, 0.4468097686767578, 0.4501698315143585, 0.44767463207244873, 0.4359217882156372, 0.46674883365631104, 0.47166934609413147, 0.45930662751197815, 0.4701012670993805, 0.47844937443733215, 0.46960145235061646, 0.47932347655296326, 0.46310704946517944, 0.47479039430618286, 0.4788918197154999, 0.4891957640647888, 0.518072247505188, 0.4995591342449188, 0.5004543662071228, 0.5178477168083191, 0.5139950513839722], "val_accuracy": [0.41200000047683716, 0.4803333282470703, 0.6566666960716248, 0.6819999814033508, 0.7316666841506958, 0.7393333315849304, 0.7456666827201843, 0.7453333139419556, 0.7670000195503235, 0.7616666555404663, 0.7820000052452087, 0.7873333096504211, 0.793666660785675, 0.7903333306312561, 0.7960000038146973, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8106666803359985, 0.8090000152587891, 0.8203333616256714, 0.8296666741371155, 0.8133333325386047, 0.8326666951179504, 0.8209999799728394, 0.8296666741371155, 0.8306666612625122, 0.8320000171661377, 0.8356666564941406, 0.8386666774749756, 0.8453333377838135, 0.847000002861023, 0.843666672706604, 0.8513333201408386, 0.8526666760444641, 0.8463333249092102, 0.8513333201408386, 0.8543333411216736, 0.8553333282470703, 0.8546666502952576, 0.8556666374206543, 0.8586666584014893, 0.859666645526886, 0.8429999947547913, 0.8566666841506958, 0.859666645526886, 0.8519999980926514, 0.862666666507721, 0.8616666793823242, 0.859000027179718, 0.8613333106040955, 0.8633333444595337, 0.8610000014305115, 0.8646666407585144, 0.8636666536331177, 0.8636666536331177, 0.8629999756813049, 0.8586666584014893, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 20], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 7, 8], [0, 3, 3, 2], [0], [1, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1153597312.0, 21295779840.0, 99448381440.0, 275782434816.0, 590747533312.0, 1081214959616.0], "accuracy": [0.09615638852119446, 0.10328886657953262, 0.10593052208423615, 0.10672302544116974, 0.09866596013307571, 0.10077928751707077], "val_loss": [5225094656.0, 41795690496.0, 141055131648.0, 334344224768.0, 653013024768.0, 1128394915840.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 7, 2, 0, 3, 6, 4, 7, 7, 3, 5, 6, 5, 8, 2, 8, 6, 0, 4, 9, 8, 0, 7, 8, 7, 5, 4, 3, 3, 2, 4], [0, 3, 3, 5, 3, 5, 4, 2, 0, 0, 5, 1, 1, 5, 4, 0, 5, 5, 5], [26, 98, 25, 80, 48], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 4, 3, 2, 6, 4, 2, 8, 3, 7], [0, 4, 4, 6, 2, 7, 4, 1, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 50, 31, 19, 5, 20, 11, 9, 1, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, tf.math.square(grad))), grad)), tf.math.sqrt(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(grad, alpha)), tf.math.square(alpha))))), tf.math.pow(tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, grad))), grad), alpha)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.966431234372403e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19191652536392212, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 1, 6], [0, 0, 1, 0, 2], [35, 99, 27], [1, 0, 1, 0, 1, 0], [0, 1, 2], [0, 3, 3], [0], [1, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3], [0, 0, 5], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033738136291504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]