[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920663356781006, 2.185276508331299, 1.7578325271606445, 1.3515681028366089, 1.082993984222412, 0.9414936900138855, 0.8576012849807739, 0.8034690618515015, 0.7668125033378601, 0.7317481637001038, 0.6842067241668701, 0.6606413125991821, 0.6396399736404419, 0.6053635478019714, 0.5956940054893494, 0.5820983648300171, 0.5670436024665833, 0.5475907325744629, 0.5549615621566772, 0.5251314640045166, 0.5291730761528015, 0.5010846257209778, 0.5028993487358093, 0.4797198176383972, 0.4815050959587097, 0.46300262212753296, 0.4517352879047394, 0.44133472442626953, 0.43277642130851746, 0.4377061426639557, 0.42428210377693176, 0.41106924414634705, 0.3990556597709656, 0.39082446694374084, 0.38865262269973755, 0.3928459882736206, 0.3863619565963745, 0.3768024742603302, 0.376310259103775, 0.36080724000930786, 0.3570418357849121, 0.35349228978157043, 0.34703749418258667, 0.3343483507633209, 0.33620741963386536, 0.33409613370895386, 0.3234362304210663, 0.30993035435676575, 0.3214024007320404], "accuracy": [0.12996962666511536, 0.33126401901245117, 0.44010037183761597, 0.54220050573349, 0.6342623233795166, 0.6602826714515686, 0.6853784322738647, 0.7083608508110046, 0.7030775547027588, 0.7112666964530945, 0.7378153204917908, 0.7448157668113708, 0.7600052952766418, 0.7630431652069092, 0.7733456492424011, 0.7774402499198914, 0.7847048044204712, 0.7957997918128967, 0.7906485199928284, 0.800290584564209, 0.806630551815033, 0.8119139075279236, 0.81112140417099, 0.816008448600769, 0.817989706993103, 0.8267071843147278, 0.83119797706604, 0.8298771381378174, 0.8359529972076416, 0.8370096683502197, 0.8444063067436218, 0.8450667262077332, 0.8448025584220886, 0.8470479249954224, 0.8531237840652466, 0.8549728989601135, 0.8532558679580688, 0.8536521196365356, 0.856689989566803, 0.863029956817627, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8754457831382751, 0.8716153502464294, 0.8733324408531189, 0.8792761564254761, 0.8794082403182983, 0.8765024542808533], "val_loss": [2.2461321353912354, 2.012413501739502, 1.1324365139007568, 0.878569483757019, 0.7897820472717285, 0.7288833260536194, 0.6544919610023499, 0.6524633169174194, 0.6534215211868286, 0.6189378499984741, 0.5731630921363831, 0.5479750633239746, 0.5404879450798035, 0.5298352241516113, 0.5296421051025391, 0.49914485216140747, 0.49476391077041626, 0.497409462928772, 0.49930787086486816, 0.4891403913497925, 0.4710923731327057, 0.47762224078178406, 0.4615679383277893, 0.45719411969184875, 0.45511266589164734, 0.44638264179229736, 0.4381406307220459, 0.4261350929737091, 0.4344121217727661, 0.4263553023338318, 0.42141708731651306, 0.4238625764846802, 0.412326455116272, 0.40169277787208557, 0.39760157465934753, 0.40143871307373047, 0.4009151756763458, 0.39585351943969727, 0.39606884121894836, 0.3917231559753418, 0.3923390805721283, 0.3919047713279724, 0.38560977578163147, 0.38719621300697327, 0.3912845849990845, 0.4073242247104645, 0.40052127838134766, 0.3893061876296997, 0.37414899468421936], "val_accuracy": [0.41733333468437195, 0.46166667342185974, 0.6526666879653931, 0.6903333067893982, 0.7146666646003723, 0.7279999852180481, 0.7379999756813049, 0.7543333172798157, 0.7606666684150696, 0.7680000066757202, 0.7760000228881836, 0.781333327293396, 0.7886666655540466, 0.7993333339691162, 0.7960000038146973, 0.8190000057220459, 0.8209999799728394, 0.8186666369438171, 0.8163333535194397, 0.8203333616256714, 0.831333339214325, 0.8203333616256714, 0.8339999914169312, 0.8343333601951599, 0.8429999947547913, 0.8433333039283752, 0.8473333120346069, 0.8523333072662354, 0.8460000157356262, 0.8536666631698608, 0.8460000157356262, 0.840666651725769, 0.8479999899864197, 0.8543333411216736, 0.856333315372467, 0.8576666712760925, 0.8476666808128357, 0.8526666760444641, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928826808929443, 2.186264991760254, 1.759624719619751, 1.3355004787445068, 1.0555424690246582, 0.9212947487831116, 0.8462608456611633, 0.8203238248825073, 0.7648040056228638, 0.7374565601348877, 0.6949785351753235, 0.6775788068771362, 0.6588428020477295, 0.6236724853515625, 0.6014978885650635, 0.6025532484054565, 0.5833227634429932, 0.5658604502677917, 0.5525256991386414, 0.5558576583862305, 0.5319743752479553, 0.5253446102142334, 0.5182562470436096, 0.5098028182983398, 0.49154072999954224, 0.48417747020721436, 0.47293227910995483, 0.47688135504722595, 0.4594511091709137, 0.4567086398601532, 0.4507475793361664], "accuracy": [0.13221503794193268, 0.3345661163330078, 0.4399682879447937, 0.5507858991622925, 0.6431118845939636, 0.6633205413818359, 0.6847180128097534, 0.6903975605964661, 0.7088891863822937, 0.7132478952407837, 0.7390040755271912, 0.7415136694908142, 0.7442874312400818, 0.7668735980987549, 0.7684586048126221, 0.7672698497772217, 0.7827235460281372, 0.7810064554214478, 0.7877426743507385, 0.7814027070999146, 0.7976489067077637, 0.7965922355651855, 0.8042530417442322, 0.8099326491355896, 0.816008448600769, 0.8178576231002808, 0.8219521641731262, 0.8202351331710815, 0.8256505131721497, 0.8252542614936829, 0.8267071843147278], "val_loss": [2.2454066276550293, 2.014984369277954, 1.1378852128982544, 0.8710688352584839, 0.7783923149108887, 0.7272657752037048, 0.6778250336647034, 0.6601818203926086, 0.6424815058708191, 0.6323906183242798, 0.5814253091812134, 0.5577094554901123, 0.5464089512825012, 0.5382261276245117, 0.5309869647026062, 0.5099046230316162, 0.513175904750824, 0.5028114318847656, 0.4979438781738281, 0.48988428711891174, 0.4872561991214752, 0.48409411311149597, 0.46857669949531555, 0.4657023251056671, 0.456875741481781, 0.447330117225647, 0.45768600702285767, 0.45381656289100647, 0.4548737704753876, 0.4522521495819092, 0.43471312522888184], "val_accuracy": [0.41466665267944336, 0.4543333351612091, 0.6413333415985107, 0.703000009059906, 0.7243333458900452, 0.7236666679382324, 0.7406666874885559, 0.7433333396911621, 0.7456666827201843, 0.7649999856948853, 0.7716666460037231, 0.781333327293396, 0.7876666784286499, 0.7879999876022339, 0.7900000214576721, 0.7940000295639038, 0.7979999780654907, 0.800000011920929, 0.7986666560173035, 0.8033333420753479, 0.809333324432373, 0.8033333420753479, 0.8153333067893982, 0.8193333148956299, 0.8286666870117188, 0.831333339214325, 0.8206666707992554, 0.8309999704360962, 0.8306666612625122, 0.828000009059906, 0.8309999704360962]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 3, 5, 4, 1, 8, 6, 1, 4, 4, 7, 1, 4], [0, 0, 1, 0, 2, 1, 2, 1, 0, 1, 1, 1, 2, 0], [4, 99, 27, 1, 73], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [72], [0, 0, 0, 0, 1, 0, 1, 1], [2, 0, 4, 3, 9], [7, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 16, 14, 5, 4, 2, 2, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(grad, alpha), grad))), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.add(tf.math.subtract(tf.math.pow(alpha, alpha), grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 7, 2, 8], [0, 0, 1, 0, 2, 0, 3], [90, 99, 17, 31], [0, 0, 1, 0, 1, 1], [0, 4, 2], [0, 3, 3], [0], [0, 1, 0, 0, 1, 0, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303180456161499, 2.3185923099517822, 7.912478446960449, 49.951168060302734, 157.5811004638672, 402.2231140136719, 940.312744140625], "accuracy": [0.10276053100824356, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3027265071868896, 2.5386667251586914, 24.99523162841797, 98.2267837524414, 269.1473388671875, 649.3790283203125, 1479.0980224609375], "val_accuracy": [0.09966666996479034, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [83, 16, 27], [0, 0, 1, 0, 1, 1], [0, 1, 8], [2, 3, 2], [0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [33, 5], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 4, 7, 3, 7, 1, 3, 4, 7, 8, 3, 3, 0, 8], [7, 1, 4, 4, 2, 4, 1, 2, 4, 1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 5, 3, 2, 0, 5, 3, 2, 2, 25, 14, 11, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.pow(grad, beta), grad)))), alpha), tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.multiply(beta, grad), tf.math.negative(tf.math.sqrt(alpha)))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 3, 1, 3, 6, 2, 6, 2, 8, 8, 7, 1, 1, 1, 8, 2, 4, 7, 6, 0, 5, 3, 5, 2, 4, 0, 3, 3, 5, 8, 6, 7, 5, 3, 9, 2, 6, 0, 6, 2, 3, 1, 5, 2, 5, 7, 9, 9], [0, 0, 1, 0, 2, 1, 0, 2, 1, 1, 1, 1, 2, 0, 1, 0, 1, 2, 1, 1, 0, 3, 2, 1, 1, 2, 0, 2, 0, 0], [83, 99, 27, 84, 3, 63, 68, 56, 28, 95, 55, 54, 35], [1, 0, 1, 0, 1, 1], [6, 8, 2], [0, 3, 3], [0], [0, 0, 1, 1, 0, 1, 1], [0, 0, 4, 3], [3, 3, 4], [0, 2], [0, 0, 0, 0, 1, 0, 0], [0, 6, 1, 5, 9, 9], [2], [0, 91]], "fitness": -0.09285714477300644, "mapping_values": [1, 79, 49, 30, 13, 1, 0, 1, 1, 3, 2, 1, 0, 7, 6, 1, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.sqrt(grad)), alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), grad))))), tf.math.square(tf.math.multiply(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), alpha))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.multiply(grad, tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(alpha, alpha))), tf.math.add(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.square(alpha), grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.square(tf.math.add(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(beta), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3106231689453125, 2.3095741271972656, 2.310500383377075, 2.3094234466552734, 2.311007022857666, 2.3095550537109375], "accuracy": [0.09232597798109055, 0.09087307006120682, 0.09100515395402908, 0.0952318087220192, 0.08717474341392517, 0.09074098616838455], "val_loss": [2.307680606842041, 2.307680606842041, 2.307680606842041, 2.307680606842041, 2.307680606842041, 2.307680606842041], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]