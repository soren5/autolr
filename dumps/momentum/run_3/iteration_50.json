[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8497142791748047, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936453819274902, 2.186387538909912, 1.7593775987625122, 1.343786358833313, 1.0672379732131958, 0.9131346940994263, 0.8408889174461365, 0.7881213426589966, 0.7596825361251831, 0.7325485944747925, 0.6888083815574646, 0.684139609336853, 0.6462896466255188, 0.6256585717201233, 0.6220166683197021, 0.6040215492248535, 0.5872412919998169, 0.5716128945350647, 0.5594078302383423, 0.5525088906288147, 0.5363558530807495, 0.5178146958351135, 0.5094321370124817, 0.49476319551467896, 0.4883463382720947, 0.48340141773223877, 0.47362852096557617, 0.4695953130722046, 0.4500940144062042, 0.45550400018692017, 0.44220754504203796, 0.43391627073287964, 0.41917684674263, 0.43121737241744995, 0.4206056594848633, 0.4120689034461975, 0.396803081035614], "accuracy": [0.13221503794193268, 0.33443403244018555, 0.43864747881889343, 0.5399550795555115, 0.6390172839164734, 0.6613393425941467, 0.6901333928108215, 0.7117950320243835, 0.7063795924186707, 0.7205125093460083, 0.7338528633117676, 0.7427024245262146, 0.7541936039924622, 0.7629110813140869, 0.7646281719207764, 0.769911527633667, 0.7728173136711121, 0.7845727205276489, 0.7825914621353149, 0.7821952104568481, 0.7935543656349182, 0.8017435073852539, 0.8020076751708984, 0.8087438941001892, 0.8045172095298767, 0.8078193068504333, 0.8115176558494568, 0.817989706993103, 0.8273676037788391, 0.8294808864593506, 0.8240655064582825, 0.8388587832450867, 0.837141752243042, 0.837141752243042, 0.842028796672821, 0.8448025584220886, 0.8545766472816467], "val_loss": [2.2456250190734863, 2.0113911628723145, 1.1315724849700928, 0.8759200572967529, 0.774961531162262, 0.7108524441719055, 0.6674877405166626, 0.6496637463569641, 0.6439520120620728, 0.6132269501686096, 0.5787724852561951, 0.5651703476905823, 0.5459538698196411, 0.5346293449401855, 0.5296013355255127, 0.5213222503662109, 0.5120430588722229, 0.5091557502746582, 0.5017298460006714, 0.495373010635376, 0.4920143783092499, 0.48675233125686646, 0.477063924074173, 0.4667949080467224, 0.45491787791252136, 0.4491204023361206, 0.4569401144981384, 0.4591309130191803, 0.45121222734451294, 0.44433194398880005, 0.44226211309432983, 0.43121102452278137, 0.429933100938797, 0.42467474937438965, 0.42406103014945984, 0.4358541965484619, 0.45271092653274536], "val_accuracy": [0.4206666648387909, 0.45266667008399963, 0.6363333463668823, 0.6813333630561829, 0.7283333539962769, 0.7440000176429749, 0.7403333187103271, 0.7549999952316284, 0.7536666393280029, 0.7726666927337646, 0.7730000019073486, 0.7789999842643738, 0.7910000085830688, 0.7916666865348816, 0.7963333129882812, 0.7929999828338623, 0.8009999990463257, 0.8046666383743286, 0.7879999876022339, 0.8033333420753479, 0.8096666932106018, 0.8169999718666077, 0.8136666417121887, 0.8209999799728394, 0.8309999704360962, 0.8286666870117188, 0.824999988079071, 0.8320000171661377, 0.8410000205039978, 0.8429999947547913, 0.8433333039283752, 0.8553333282470703, 0.8513333201408386, 0.8479999899864197, 0.8483333587646484, 0.847000002861023, 0.8513333201408386]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27, 49], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [92], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [2], [1, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 6, 3, 3, 1, 7, 4, 3, 2, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [366483.40625, 1817224019968.0, 2.3220038414001465, 2.307152509689331, 2.303776741027832, 2.3031182289123535, 2.3030717372894287, 2.3029003143310547, 2.3030319213867188], "accuracy": [0.10394927859306335, 0.10091137140989304, 0.09113723784685135, 0.09919429570436478, 0.09681680053472519, 0.0936468094587326, 0.09774138033390045, 0.0944393053650856, 0.09351472556591034], "val_loss": [176290320.0, 2.3342831134796143, 2.309718132019043, 2.3039677143096924, 2.3027870655059814, 2.3026187419891357, 2.302619457244873, 2.3025894165039062, 2.3026230335235596], "val_accuracy": [0.09933333098888397, 0.09533333033323288, 0.09533333033323288, 0.10433333367109299, 0.10433333367109299, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 2, 2, 3, 9, 8, 0], [0, 0, 1, 0, 0, 0, 3], [14, 99, 93, 14, 81, 36], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 1, 0, 1, 0, 1], [0, 9, 4, 3], [1, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 6, 6, 3, 3, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 3], [0, 3, 3], [90], [0, 0, 0, 1, 1, 1, 0], [3, 0, 4, 3], [0, 0, 4], [0, 58], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 1, 3, 7, 9, 0], [1, 5, 2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 6, 3, 3, 1, 6, 3, 3, 2, 11, 7, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.multiply(alpha, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.negative(beta))), grad)", "other_info": {"loss": [2.304360866546631, 2.3029677867889404, 2.3029637336730957, 2.3029887676239014, 2.302903890609741, 2.3030624389648438, 2.3030989170074463], "accuracy": [0.09628847241401672, 0.09985470771789551, 0.09549596905708313, 0.09747721254825592, 0.0948355570435524, 0.09206181764602661, 0.08942015469074249], "val_loss": [2.302600383758545, 2.302562952041626, 2.302558422088623, 2.3025119304656982, 2.3026986122131348, 2.3026185035705566, 2.3026318550109863], "val_accuracy": [0.10133333504199982, 0.10333333164453506, 0.10100000351667404, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 4], [0, 3, 3], [3], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 4, 3, 1, 8, 0, 4, 6, 9], [0, 0, 5, 0, 4], [0, 58, 93, 62], [0, 1, 0], [6, 9], [1], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 15, 10, 5, 4, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3098368644714355, 2.30995774269104, 2.3090760707855225, 2.3097002506256104, 2.3102357387542725, 2.3109309673309326], "accuracy": [0.0940430611371994, 0.09232597798109055, 0.09074098616838455, 0.08849557489156723, 0.09166556596755981, 0.08955223858356476], "val_loss": [2.3094213008880615, 2.3094213008880615, 2.3094213008880615, 2.3094213008880615, 2.3094213008880615, 2.3094213008880615], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]