[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925729751586914, 2.187127113342285, 1.7641993761062622, 1.3437129259109497, 1.066947102546692, 0.9399238228797913, 0.83198082447052, 0.8183948993682861, 0.7502648234367371, 0.7335941791534424, 0.6953815221786499, 0.6771264672279358, 0.6458533406257629, 0.631897509098053, 0.6137565970420837, 0.6143407225608826, 0.5831570029258728, 0.5775274634361267, 0.5659123659133911, 0.5445622801780701, 0.5250616073608398, 0.5268460512161255, 0.5136592984199524, 0.5071079730987549, 0.4892207384109497, 0.4756522476673126, 0.4633692502975464, 0.4587489366531372, 0.4412362575531006, 0.43845537304878235, 0.43738627433776855, 0.4113951027393341, 0.40735265612602234, 0.4034321904182434, 0.3907977044582367, 0.3785591423511505, 0.377972811460495, 0.38382214307785034, 0.36559638381004333, 0.35672247409820557, 0.3628215789794922, 0.3511592745780945, 0.33784613013267517], "accuracy": [0.13049794733524323, 0.32901862263679504, 0.436930388212204, 0.5461629629135132, 0.6320168972015381, 0.6583014130592346, 0.6890767216682434, 0.7069079279899597, 0.7117950320243835, 0.7176066637039185, 0.7407211661338806, 0.739928662776947, 0.7531369924545288, 0.7646281719207764, 0.7614582180976868, 0.7609298825263977, 0.7799497842788696, 0.7783648371696472, 0.7895918488502502, 0.7954035401344299, 0.8005547523498535, 0.7951393723487854, 0.8050455451011658, 0.8109893202781677, 0.8108572363853455, 0.8164047002792358, 0.8216879963874817, 0.8216879963874817, 0.8330471515655518, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8486329317092896, 0.8481045961380005, 0.856689989566803, 0.8578787446022034, 0.8565579056739807, 0.8564258217811584, 0.8594637513160706, 0.8639545440673828, 0.863558292388916, 0.8665962219238281, 0.8685774803161621], "val_loss": [2.24591326713562, 2.0144011974334717, 1.1282657384872437, 0.9047408103942871, 0.7838723063468933, 0.7243306636810303, 0.6873480081558228, 0.6663627028465271, 0.6509034633636475, 0.6413266658782959, 0.6253200769424438, 0.5865140557289124, 0.5787449479103088, 0.5782256126403809, 0.5565901398658752, 0.5439684391021729, 0.5274800062179565, 0.5167201161384583, 0.5248816013336182, 0.5196475982666016, 0.5039010643959045, 0.5016937851905823, 0.5016798973083496, 0.49514147639274597, 0.48202112317085266, 0.4754898250102997, 0.464834064245224, 0.46113210916519165, 0.45827656984329224, 0.4549710154533386, 0.46381810307502747, 0.44992658495903015, 0.4331768751144409, 0.4280094504356384, 0.43140140175819397, 0.4241963326931, 0.418281614780426, 0.41222453117370605, 0.42213916778564453, 0.4112643897533417, 0.4112035036087036, 0.42114537954330444, 0.41954028606414795], "val_accuracy": [0.4283333420753479, 0.47099998593330383, 0.6426666378974915, 0.6863333582878113, 0.7103333473205566, 0.7203333377838135, 0.734000027179718, 0.746666669845581, 0.7490000128746033, 0.7546666860580444, 0.7580000162124634, 0.781000018119812, 0.7796666622161865, 0.781000018119812, 0.7850000262260437, 0.7883333563804626, 0.7990000247955322, 0.8116666674613953, 0.7946666479110718, 0.8050000071525574, 0.8193333148956299, 0.8140000104904175, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426, 0.8236666917800903, 0.8259999752044678, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8353333473205566, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8489999771118164, 0.8513333201408386, 0.8573333621025085, 0.8603333234786987, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8526666760444641, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294865608215332, 2.192575693130493, 1.7842098474502563, 1.3668162822723389, 1.0909090042114258, 0.9343055486679077, 0.8406357169151306, 0.8139198422431946, 0.7754889130592346, 0.7415790557861328, 0.6982870101928711, 0.6721431612968445, 0.6274912357330322, 0.6208455562591553, 0.5988675951957703, 0.5908879041671753, 0.5686677098274231, 0.5561642050743103, 0.5522430539131165, 0.5475278496742249, 0.5277912020683289, 0.5239531397819519, 0.5021281242370605, 0.5012149810791016, 0.4803198277950287, 0.4636813998222351, 0.4577428102493286, 0.44723159074783325, 0.4328060448169708, 0.4276851415634155, 0.42058348655700684, 0.4198039174079895, 0.40873804688453674, 0.41267380118370056, 0.4003756046295166, 0.389790803194046, 0.37479764223098755, 0.37769410014152527, 0.3691934645175934, 0.36219385266304016, 0.35194453597068787, 0.34929409623146057, 0.3434769809246063, 0.3394796848297119], "accuracy": [0.13340377807617188, 0.3295469582080841, 0.4373266398906708, 0.5455026030540466, 0.6305639743804932, 0.6604147553443909, 0.6959450244903564, 0.7065116763114929, 0.7025492191314697, 0.7170783281326294, 0.7382115721702576, 0.7440232634544373, 0.7568352818489075, 0.7643640041351318, 0.7648923397064209, 0.7730814814567566, 0.7802139520645142, 0.7812706232070923, 0.7861577272415161, 0.7884030938148499, 0.800818920135498, 0.8031964302062988, 0.8101968169212341, 0.8120459914207458, 0.8214238286018372, 0.8281601071357727, 0.8300092220306396, 0.8323867321014404, 0.8381983637809753, 0.844010055065155, 0.8403117060661316, 0.8379341959953308, 0.8449346423149109, 0.8494254350662231, 0.8496896028518677, 0.8537842035293579, 0.854708731174469, 0.8570862412452698, 0.8593316674232483, 0.8642187118530273, 0.8673887252807617, 0.8692378997802734, 0.8689737319946289, 0.863558292388916], "val_loss": [2.2471489906311035, 2.0248959064483643, 1.1652765274047852, 0.8933182954788208, 0.7691178321838379, 0.7288713455200195, 0.6676343679428101, 0.6577619314193726, 0.6366585493087769, 0.6180256605148315, 0.5816701054573059, 0.5716518759727478, 0.544289231300354, 0.534669816493988, 0.5282707214355469, 0.5157555341720581, 0.5163877606391907, 0.49963298439979553, 0.49701303243637085, 0.5122125744819641, 0.48824968934059143, 0.47737830877304077, 0.46838605403900146, 0.4610665738582611, 0.4712303876876831, 0.45048704743385315, 0.455800324678421, 0.44327419996261597, 0.4438175559043884, 0.4502466917037964, 0.4228491485118866, 0.42228490114212036, 0.43904125690460205, 0.4321214258670807, 0.4212515950202942, 0.4267699420452118, 0.40887340903282166, 0.4004460871219635, 0.405763179063797, 0.4126805067062378, 0.41165855526924133, 0.421705961227417, 0.4266669452190399, 0.4142701029777527], "val_accuracy": [0.43833333253860474, 0.44600000977516174, 0.640666663646698, 0.6903333067893982, 0.7286666631698608, 0.7366666793823242, 0.7440000176429749, 0.7546666860580444, 0.7536666393280029, 0.7713333368301392, 0.7693333625793457, 0.7826666831970215, 0.7913333177566528, 0.7953333258628845, 0.7960000038146973, 0.800000011920929, 0.7956666946411133, 0.8116666674613953, 0.8149999976158142, 0.8003333210945129, 0.8190000057220459, 0.8320000171661377, 0.8259999752044678, 0.831333339214325, 0.82833331823349, 0.8360000252723694, 0.828000009059906, 0.8389999866485596, 0.8403333425521851, 0.8450000286102295, 0.8429999947547913, 0.843666672706604, 0.847000002861023, 0.8493333458900452, 0.8460000157356262, 0.8453333377838135, 0.8503333330154419, 0.8523333072662354, 0.8543333411216736, 0.8523333072662354, 0.8536666631698608, 0.8526666760444641, 0.8526666760444641, 0.8536666631698608]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 6, 3, 0, 9, 6], [3, 0, 1, 0, 2], [83, 11, 27], [0, 0, 1, 0, 1, 1], [0, 1, 5], [3, 3, 3], [0], [0, 0, 1, 0, 1, 1, 1], [7, 9, 4, 4], [0, 0, 4], [0, 27], [0, 0, 1, 1], [1, 0], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 5, 3, 2, 0, 3, 2, 1, 2, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(alpha), grad)", "other_info": {"loss": [2.09124846609042e+19, 8.801951749725339e+33, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.1002509593963623, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.05779089280467e+17, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 5, 3, 1, 3], [0, 0, 1, 0, 1], [83, 99, 27], [1, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 4, 3, 5, 3], [0, 0, 4, 7], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [45625614336.0, 6997451735040.0, 120468656881664.0, 842933167194112.0, 3651366178258944.0, 1.2315208835923968e+16], "accuracy": [0.09391097724437714, 0.10011887550354004, 0.10011887550354004, 0.1018359512090683, 0.10513802617788315, 0.09879804402589798], "val_loss": [462844297216.0, 24953409765376.0, 267829966274560.0, 1460178016796672.0, 5469194174857216.0, 1.6136646323863552e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 2], [83, 17, 27, 19], [0, 1, 1, 0, 1, 1], [4, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031299114227295, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 10, 6, 4, 4, 3, 1, 2, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 0], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 2, 7, 6, 0, 1, 3, 4, 2, 2, 5, 5, 0], [5, 5, 5, 3, 1, 4, 2, 2, 4, 0], [0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 4, 3, 8, 2, 4, 9, 1, 9], [0, 0, 7, 5], [0, 58, 96, 40], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 24, 14, 10, 1, 14, 10, 4, 4, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.subtract(alpha, tf.math.multiply(tf.math.pow(tf.math.add(grad, beta), beta), tf.math.add(tf.math.square(tf.math.square(grad)), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3039307594299316, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]