[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294304847717285, 2.192103624343872, 1.7857767343521118, 1.3607056140899658, 1.099927544593811, 0.9389083981513977, 0.8470690846443176, 0.8454976081848145, 0.7741630673408508, 0.7616719007492065, 0.7103725075721741, 0.6974170207977295, 0.6608983278274536, 0.6338894963264465, 0.6045244932174683, 0.6092884540557861, 0.5888407826423645, 0.5741831064224243, 0.563585638999939, 0.5488932132720947, 0.5453349947929382, 0.5305578112602234, 0.5258418321609497, 0.4943788945674896, 0.49320778250694275, 0.48580384254455566, 0.48067429661750793, 0.4796926975250244, 0.46376150846481323, 0.4548250734806061, 0.4405079782009125, 0.44322729110717773, 0.4334387183189392, 0.42063289880752563, 0.4331969618797302, 0.4135703444480896, 0.4118955731391907, 0.401089072227478, 0.40325725078582764, 0.3918025493621826, 0.3675272762775421, 0.3550134301185608], "accuracy": [0.12376172095537186, 0.33139610290527344, 0.4333641529083252, 0.5429930090904236, 0.6304318904876709, 0.6565843224525452, 0.6873596906661987, 0.6959450244903564, 0.7008321285247803, 0.7029454708099365, 0.7243428826332092, 0.7333245277404785, 0.7469290494918823, 0.7605336308479309, 0.7688548564910889, 0.7675340175628662, 0.7836481332778931, 0.7861577272415161, 0.7881389260292053, 0.7940827012062073, 0.7915731072425842, 0.7948752045631409, 0.7977809906005859, 0.809140145778656, 0.8096684813499451, 0.8149517774581909, 0.8144234418869019, 0.8166688680648804, 0.828292191028595, 0.83119797706604, 0.8337075710296631, 0.8339717388153076, 0.8399154543876648, 0.8356888294219971, 0.837141752243042, 0.8437458872795105, 0.8426892161369324, 0.8461233377456665, 0.8475762605667114, 0.8496896028518677, 0.8599920868873596, 0.8654074668884277], "val_loss": [2.246436834335327, 2.0250775814056396, 1.1393718719482422, 0.8497561812400818, 0.7639734148979187, 0.7092989683151245, 0.6813888549804688, 0.6556240916252136, 0.6388952732086182, 0.6047614812850952, 0.5794531106948853, 0.5539135932922363, 0.5436311960220337, 0.5358590483665466, 0.5284149050712585, 0.5143079161643982, 0.5151547193527222, 0.5093623995780945, 0.5067101716995239, 0.49943530559539795, 0.49699893593788147, 0.496021032333374, 0.4861862063407898, 0.47826677560806274, 0.4843396842479706, 0.4685012996196747, 0.456290602684021, 0.45540153980255127, 0.44835788011550903, 0.4463074505329132, 0.4429974853992462, 0.4418887495994568, 0.4285948574542999, 0.42980968952178955, 0.43589335680007935, 0.4238627552986145, 0.4277287721633911, 0.4350525736808777, 0.42249366641044617, 0.42642343044281006, 0.422536164522171, 0.4140663146972656], "val_accuracy": [0.429666668176651, 0.46966665983200073, 0.6463333368301392, 0.7036666870117188, 0.7236666679382324, 0.7260000109672546, 0.7456666827201843, 0.749666690826416, 0.7586666941642761, 0.7710000276565552, 0.7710000276565552, 0.7903333306312561, 0.7860000133514404, 0.7943333387374878, 0.7983333468437195, 0.7973333597183228, 0.8159999847412109, 0.8153333067893982, 0.8083333373069763, 0.8173333406448364, 0.8186666369438171, 0.8136666417121887, 0.8230000138282776, 0.8309999704360962, 0.8230000138282776, 0.8346666693687439, 0.8356666564941406, 0.8413333296775818, 0.8420000076293945, 0.8433333039283752, 0.8446666598320007, 0.843666672706604, 0.8519999980926514, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292177200317383, 2.185673952102661, 1.746969223022461, 1.3463560342788696, 1.0412124395370483, 0.9130537509918213, 0.8241942524909973, 0.8066849112510681, 0.7676918506622314, 0.7303025722503662, 0.6805320382118225, 0.6831133961677551, 0.6392697691917419, 0.6174938678741455, 0.5917608737945557, 0.577721357345581, 0.581897497177124, 0.5733065009117126, 0.5441738963127136, 0.5366401672363281, 0.5335338711738586, 0.5117746591567993, 0.5176751017570496, 0.5034960508346558, 0.4905370771884918, 0.4796241521835327, 0.4694651663303375, 0.45657676458358765, 0.46045830845832825, 0.43403059244155884, 0.43402332067489624, 0.4318399429321289, 0.4330872595310211, 0.4154333174228668, 0.41528236865997314, 0.4081895351409912, 0.39399924874305725, 0.3908257782459259, 0.3958085775375366], "accuracy": [0.12970545887947083, 0.3183199167251587, 0.43785497546195984, 0.5436534285545349, 0.632941484451294, 0.6717738509178162, 0.6991150379180908, 0.7057191729545593, 0.7017567157745361, 0.7191916704177856, 0.7347774505615234, 0.7396644949913025, 0.7532690763473511, 0.7635715007781982, 0.7738739848136902, 0.7799497842788696, 0.783119797706604, 0.7794214487075806, 0.7902522683143616, 0.7926297783851624, 0.7972526550292969, 0.8010830879211426, 0.8041210174560547, 0.8035926818847656, 0.8063663840293884, 0.816008448600769, 0.8165367841720581, 0.8286884427070618, 0.8273676037788391, 0.8310658931732178, 0.8323867321014404, 0.8327829837799072, 0.8315942287445068, 0.8378021121025085, 0.8470479249954224, 0.8474441766738892, 0.8473120927810669, 0.8499537706375122, 0.8498216867446899], "val_loss": [2.2449870109558105, 2.008798122406006, 1.1104423999786377, 0.8275509476661682, 0.7503151297569275, 0.6755422949790955, 0.6532335877418518, 0.6357465982437134, 0.6366989612579346, 0.5962181687355042, 0.5534361004829407, 0.5300197601318359, 0.5117653608322144, 0.5126754641532898, 0.4948360323905945, 0.4891328513622284, 0.48860904574394226, 0.4806656837463379, 0.4807773530483246, 0.4732527732849121, 0.4721114933490753, 0.46156737208366394, 0.4595547616481781, 0.45588546991348267, 0.45681989192962646, 0.4503193795681, 0.445506751537323, 0.4385671019554138, 0.42589643597602844, 0.43248486518859863, 0.43397533893585205, 0.4439047574996948, 0.4302023947238922, 0.4382682740688324, 0.441629558801651, 0.43611910939216614, 0.44152745604515076, 0.44633275270462036, 0.43587321043014526], "val_accuracy": [0.4020000100135803, 0.476666659116745, 0.6516666412353516, 0.6983333230018616, 0.737333357334137, 0.7476666569709778, 0.7573333382606506, 0.762333333492279, 0.7639999985694885, 0.781333327293396, 0.7799999713897705, 0.7900000214576721, 0.8090000152587891, 0.8036666512489319, 0.8119999766349792, 0.812333345413208, 0.8130000233650208, 0.8190000057220459, 0.812666654586792, 0.8236666917800903, 0.8316666483879089, 0.8296666741371155, 0.8360000252723694, 0.8353333473205566, 0.8306666612625122, 0.8376666903495789, 0.8416666388511658, 0.8476666808128357, 0.8513333201408386, 0.8506666421890259, 0.8500000238418579, 0.8579999804496765, 0.8586666584014893, 0.8653333187103271, 0.8646666407585144, 0.8583333492279053, 0.8636666536331177, 0.8629999756813049, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 1], [0, 0, 1, 0, 2, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 2, 7, 5, 7, 6, 6, 9, 0, 7, 4, 4, 4, 3, 2, 2, 6, 6, 1, 5, 5], [5, 3, 3, 3, 3, 5, 0, 0, 3, 3, 0, 4, 0, 4, 1, 5], [0, 0, 6, 8, 37], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.5237143039703369, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(grad, grad), tf.math.pow(grad, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(grad), grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad), alpha)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293153762817383, 2.1346709728240967, 85.0083236694336, 4.498293109376942e+18, 51.623592376708984, 139.86114501953125, 272.5567932128906], "accuracy": [0.1302337795495987, 0.3027341067790985, 0.354510635137558, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.234262704849243, 1.778017282485962, 3.429984796963504e+19, 26.58074951171875, 96.49203491210938, 211.13943481445312, 370.1375732421875], "val_accuracy": [0.3853333294391632, 0.5403333306312561, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 12, 6, 6, 3, 38, 22, 16, 5, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 29}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0], [0, 1, 8], [4, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [5, 4, 4, 3, 3], [0, 0, 4, 1, 3], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 0, 10, 5, 5, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [42223868.0, 2.6127147674560547, 2.9230635166168213, 8.699456214904785, 50.90006637573242, 90.13052368164062, 80.64972686767578], "accuracy": [0.09853387624025345, 0.09787346422672272, 0.10170386731624603, 0.09549596905708313, 0.09668471664190292, 0.1018359512090683, 0.10236428678035736], "val_loss": [3.0024359226226807, 2.457073926925659, 3.1533915996551514, 29.219629287719727, 89.74129486083984, 79.21221160888672, 92.46724700927734], "val_accuracy": [0.09666666388511658, 0.10166666656732559, 0.09966666996479034, 0.10100000351667404, 0.09966666996479034, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 1, 0, 2], [37, 99, 99], [0, 1, 0, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 1, 1], [0, 1, 4, 3], [0, 0, 4], [59, 58], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 4, 6, 8, 4, 8, 1, 3, 5, 6, 4, 0, 3, 3, 4, 6], [1, 3, 3, 7, 3, 2, 5, 6, 1, 7, 3, 3, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 6, 3, 3, 2, 29, 16, 13, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(alpha, sigma)), tf.math.sqrt(tf.math.subtract(sigma, grad))), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.pow(beta, tf.math.negative(tf.math.multiply(grad, tf.math.multiply(tf.math.pow(grad, alpha), tf.math.divide_no_nan(grad, sigma))))))), sigma)), tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [79, 99, 27], [0, 1, 1, 0, 1, 0], [0, 3, 2], [0, 3, 3], [0], [0, 0, 0, 1, 1, 0, 1], [0, 0, 4, 3], [0, 4, 0], [0, 58], [1, 1], [4], [1], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.311220645904541, 2.309340238571167, 2.311007499694824, 2.308940887451172, 2.308445453643799, 2.309272289276123], "accuracy": [0.09074098616838455, 0.09774138033390045, 0.09509972482919693, 0.09694888442754745, 0.09311848133802414, 0.09536388516426086], "val_loss": [2.3076629638671875, 2.3076629638671875, 2.3076629638671875, 2.3076629638671875, 2.3076629638671875, 2.3076629638671875], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]