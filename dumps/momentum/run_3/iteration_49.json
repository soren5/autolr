[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923834323883057, 2.1889407634735107, 1.7645962238311768, 1.3581336736679077, 1.0713711977005005, 0.9324289560317993, 0.8733577728271484, 0.8213781714439392, 0.7735388875007629, 0.7477298974990845, 0.7026875019073486, 0.6956027150154114, 0.6567690968513489, 0.6345532536506653, 0.6202870607376099, 0.5963889360427856, 0.5742583274841309, 0.5828102231025696, 0.5587208271026611, 0.5483556985855103, 0.5339842438697815, 0.5249099135398865, 0.5263219475746155, 0.5094848871231079, 0.5055311918258667, 0.49362626671791077, 0.492054283618927, 0.4717646539211273, 0.46201664209365845, 0.4534401297569275, 0.4354040026664734, 0.43411898612976074, 0.41996026039123535, 0.4101247787475586, 0.41195884346961975, 0.4070257246494293, 0.4060525894165039, 0.38620615005493164, 0.3781440556049347, 0.37892118096351624], "accuracy": [0.13115836679935455, 0.3237352967262268, 0.4465724527835846, 0.5481442213058472, 0.64231938123703, 0.6649055480957031, 0.6822084188461304, 0.6939638257026672, 0.7051908373832703, 0.7223616242408752, 0.7277770638465881, 0.7425703406333923, 0.7458723783493042, 0.7614582180976868, 0.7618544697761536, 0.7707040309906006, 0.7774402499198914, 0.783119797706604, 0.7884030938148499, 0.7891955971717834, 0.7967243194580078, 0.7979130744934082, 0.7968564033508301, 0.8121780753135681, 0.8079513907432556, 0.8101968169212341, 0.8162726163864136, 0.8228767514228821, 0.8269713521003723, 0.8314621448516846, 0.8317263126373291, 0.8343679904937744, 0.8397833704948425, 0.8437458872795105, 0.8465195894241333, 0.8451988101005554, 0.8457271456718445, 0.8539162874221802, 0.8504821062088013, 0.8555012345314026], "val_loss": [2.246166944503784, 2.0171594619750977, 1.132443904876709, 0.8806336522102356, 0.7696613073348999, 0.7301961779594421, 0.6701276898384094, 0.6593276858329773, 0.6416698694229126, 0.6181098818778992, 0.5777679681777954, 0.5553255081176758, 0.54523104429245, 0.5395349264144897, 0.5274631977081299, 0.5157209634780884, 0.5100258588790894, 0.5044673085212708, 0.5140815377235413, 0.5056582689285278, 0.5005766153335571, 0.48797985911369324, 0.49456727504730225, 0.48846670985221863, 0.4840965270996094, 0.4601652920246124, 0.4623236060142517, 0.4541293978691101, 0.45140501856803894, 0.4431198835372925, 0.4481762647628784, 0.4416334927082062, 0.4298308193683624, 0.44409701228141785, 0.4298262596130371, 0.42281460762023926, 0.42649415135383606, 0.41888248920440674, 0.427418977022171, 0.41300126910209656], "val_accuracy": [0.41999998688697815, 0.503000020980835, 0.640333354473114, 0.6853333115577698, 0.7103333473205566, 0.7300000190734863, 0.7363333106040955, 0.7523333430290222, 0.7553333044052124, 0.7696666717529297, 0.7699999809265137, 0.7749999761581421, 0.7946666479110718, 0.7860000133514404, 0.7916666865348816, 0.7976666688919067, 0.8019999861717224, 0.8130000233650208, 0.8116666674613953, 0.8046666383743286, 0.8059999942779541, 0.8209999799728394, 0.8233333230018616, 0.824999988079071, 0.8230000138282776, 0.8296666741371155, 0.8326666951179504, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.843999981880188, 0.8463333249092102, 0.8516666889190674, 0.8546666502952576, 0.859000027179718, 0.8560000061988831, 0.8486666679382324, 0.8506666421890259, 0.856333315372467, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2950809001922607, 2.1923329830169678, 1.779259443283081, 1.3365163803100586, 1.0721592903137207, 0.9031651616096497, 0.8389860987663269, 0.799017071723938, 0.7529945969581604, 0.7084632515907288, 0.6880492568016052, 0.660165548324585, 0.6348992586135864, 0.6116015911102295, 0.6045021414756775, 0.5997751951217651, 0.5851975083351135, 0.5561555027961731, 0.564985454082489, 0.5405318140983582, 0.5240131616592407, 0.5348124504089355, 0.5013967752456665, 0.5049302577972412, 0.5047124624252319, 0.4994983673095703, 0.4836869537830353, 0.47421887516975403, 0.46313923597335815, 0.4615074098110199, 0.4439082443714142, 0.452846884727478, 0.4228071868419647, 0.4239024817943573, 0.425334632396698, 0.4217759966850281, 0.4129423499107361, 0.40633898973464966, 0.3930988907814026, 0.38905373215675354, 0.3839264214038849, 0.37647345662117004, 0.38783201575279236, 0.3652515411376953, 0.36486801505088806, 0.3536686599254608, 0.34790241718292236, 0.339581698179245, 0.3372651934623718, 0.32995474338531494, 0.3137858211994171, 0.32091864943504333, 0.3188357651233673, 0.30441465973854065, 0.2961409091949463, 0.2972464859485626, 0.29931601881980896, 0.2890831232070923, 0.2920834422111511, 0.2893667221069336, 0.2819407880306244, 0.28181707859039307], "accuracy": [0.12362963706254959, 0.3365473449230194, 0.43825122714042664, 0.5472196340560913, 0.6370360851287842, 0.6687359809875488, 0.6901333928108215, 0.7107383608818054, 0.713379979133606, 0.7293620109558105, 0.7405890822410583, 0.7471932172775269, 0.7633073329925537, 0.763967752456665, 0.7711002230644226, 0.7737419009208679, 0.7810064554214478, 0.7917051911354065, 0.7869502305984497, 0.800818920135498, 0.7956677079200745, 0.8005547523498535, 0.8113855719566345, 0.8034605979919434, 0.8103289008140564, 0.8121780753135681, 0.8148196935653687, 0.8185180425643921, 0.826310932636261, 0.8251221776008606, 0.8280280232429504, 0.8318583965301514, 0.8378021121025085, 0.8341038227081299, 0.8383304476737976, 0.8384625315666199, 0.8425571322441101, 0.847840428352356, 0.8417646288871765, 0.8474441766738892, 0.8498216867446899, 0.8558974862098694, 0.8595958352088928, 0.8584070801734924, 0.8549728989601135, 0.8607845902442932, 0.8577466607093811, 0.8667283058166504, 0.8634262084960938, 0.8664641380310059, 0.8778232932090759, 0.8745211958885193, 0.8735966086387634, 0.8778232932090759, 0.884691596031189, 0.883238673210144, 0.8845595121383667, 0.8824461698532104, 0.880729079246521, 0.8891823887825012, 0.889578640460968, 0.8883898854255676], "val_loss": [2.2467548847198486, 2.030352830886841, 1.15548574924469, 0.891539454460144, 0.7618887424468994, 0.7264406085014343, 0.6824750900268555, 0.6752685904502869, 0.6320655345916748, 0.6225862503051758, 0.5774048566818237, 0.5693009495735168, 0.5422722697257996, 0.5381891131401062, 0.5328676104545593, 0.5335609316825867, 0.5184149742126465, 0.5168399810791016, 0.5084732174873352, 0.5071032047271729, 0.5234746336936951, 0.493704617023468, 0.488301157951355, 0.4903656840324402, 0.5052012205123901, 0.49912142753601074, 0.48940014839172363, 0.47741881012916565, 0.4807390570640564, 0.4507228136062622, 0.46137288212776184, 0.44621509313583374, 0.436006098985672, 0.45891073346138, 0.43601366877555847, 0.43559879064559937, 0.45353707671165466, 0.4460172653198242, 0.42596402764320374, 0.42482516169548035, 0.4222845733165741, 0.44708096981048584, 0.4369940459728241, 0.4141145348548889, 0.40577009320259094, 0.4236181974411011, 0.43577244877815247, 0.42595699429512024, 0.4339734613895416, 0.4339057207107544, 0.44567516446113586, 0.44051140546798706, 0.42219921946525574, 0.41492894291877747, 0.4284627139568329, 0.4431113004684448, 0.4385411739349365, 0.42976826429367065, 0.44978067278862, 0.4576851725578308, 0.4591643810272217, 0.4709179699420929], "val_accuracy": [0.44699999690055847, 0.4806666672229767, 0.6443333625793457, 0.6819999814033508, 0.7139999866485596, 0.7250000238418579, 0.7459999918937683, 0.7463333606719971, 0.7596666812896729, 0.7593333125114441, 0.7703333497047424, 0.7763333320617676, 0.7940000295639038, 0.7953333258628845, 0.7953333258628845, 0.7956666946411133, 0.8003333210945129, 0.8009999990463257, 0.8096666932106018, 0.8206666707992554, 0.8103333115577698, 0.8236666917800903, 0.8149999976158142, 0.8183333277702332, 0.8230000138282776, 0.8213333487510681, 0.8243333101272583, 0.8289999961853027, 0.8259999752044678, 0.8416666388511658, 0.843666672706604, 0.8453333377838135, 0.8450000286102295, 0.8366666436195374, 0.8479999899864197, 0.843666672706604, 0.8463333249092102, 0.8453333377838135, 0.8510000109672546, 0.8473333120346069, 0.8553333282470703, 0.8536666631698608, 0.8573333621025085, 0.8486666679382324, 0.8523333072662354, 0.8503333330154419, 0.847000002861023, 0.8583333492279053, 0.8543333411216736, 0.8640000224113464, 0.859333336353302, 0.8533333539962769, 0.8636666536331177, 0.8653333187103271, 0.8633333444595337, 0.8686666488647461, 0.8723333477973938, 0.8633333444595337, 0.8656666874885559, 0.8693333268165588, 0.8616666793823242, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 0, 0, 2], [83, 64, 27], [0, 0, 1, 0, 0, 1], [0, 1, 2, 9], [0, 3, 3], [0, 93], [1, 0, 0, 0, 0, 1, 1], [2, 0, 4, 2], [0, 0, 4], [66, 58], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303921937942505, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 0], [0, 93], [1, 0, 0, 0, 1, 1, 1], [0, 0, 7, 5], [0, 0, 4], [0, 13], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [6168451072.0, 326964805632.0, 2941408772096.0, 12868696145920.0, 39353363464192.0, 97548631015424.0], "accuracy": [0.09576013684272766, 0.09615638852119446, 0.10091137140989304, 0.09919429570436478, 0.09972262382507324, 0.0952318087220192], "val_loss": [44305125376.0, 898573795328.0, 5357090373632.0, 19157103935488.0, 51647015288832.0, 116334759247872.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 5, 5], [3, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 1, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 3], [0, 0, 4], [0, 58], [0, 1, 1], [7], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 4, 2, 2, 1, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad)", "other_info": {"loss": [3.509988307952881, 2.413959503173828, 2.3068253993988037, 2.3039207458496094, 2.303222417831421, 2.3032355308532715, 2.303046464920044, 2.3028316497802734], "accuracy": [0.19852067530155182, 0.15136705338954926, 0.09642054885625839, 0.09576013684272766, 0.09774138033390045, 0.09668471664190292, 0.0940430611371994, 0.10011887550354004], "val_loss": [2.225128173828125, 2.3099100589752197, 2.304136276245117, 2.3031017780303955, 2.3028171062469482, 2.302713632583618, 2.3025803565979004, 2.3026983737945557], "val_accuracy": [0.09933333098888397, 0.09866666793823242, 0.10133333504199982, 0.09866666793823242, 0.09866666793823242, 0.09466666728258133, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [2, 0, 1, 0, 1], [2, 99, 27], [0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 5], [0, 3, 3], [89], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 4, 3, 1, 6, 8, 4, 4, 1, 6, 7, 1, 2], [0, 5, 3, 3, 5, 6, 0, 3, 7, 2, 5, 7], [86, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), sigma), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(sigma, grad)), tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(grad, tf.math.subtract(beta, tf.math.add(grad, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 2, 1, 1, 0, 7, 4, 3, 1, 26, 14, 12, 2, 2, 1, 1, 0], "tree_depth": 19}]