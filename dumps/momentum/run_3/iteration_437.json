[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936229705810547, 2.192690849304199, 1.7867786884307861, 1.3359767198562622, 1.081196904182434, 0.9026419520378113, 0.8500229120254517, 0.7995601296424866, 0.7609877586364746, 0.7380879521369934, 0.684198260307312, 0.6745951771736145, 0.6415651440620422, 0.6169758439064026, 0.5825735330581665, 0.5761429667472839, 0.5548312067985535, 0.5558091998100281, 0.5375869274139404, 0.5296298861503601, 0.5215854048728943, 0.5058385729789734, 0.4980889856815338, 0.48853373527526855, 0.47668859362602234, 0.47050508856773376, 0.45564261078834534, 0.4569638669490814, 0.45195722579956055, 0.44825586676597595, 0.4320906698703766, 0.42233261466026306, 0.42156192660331726, 0.4026586711406708, 0.39455142617225647, 0.3901272714138031, 0.3932284414768219, 0.3820863366127014, 0.36579662561416626, 0.3733993470668793, 0.35381078720092773, 0.36042889952659607, 0.35910356044769287, 0.34749966859817505, 0.3457123041152954, 0.33667340874671936, 0.3236151933670044, 0.3317699730396271, 0.3222176134586334, 0.30985090136528015, 0.3110199570655823, 0.31441837549209595], "accuracy": [0.1302337795495987, 0.3329811096191406, 0.4352133274078369, 0.5509179830551147, 0.6313564777374268, 0.6621318459510803, 0.6931713223457336, 0.7017567157745361, 0.7017567157745361, 0.7207766771316528, 0.7411174178123474, 0.7396644949913025, 0.7578919529914856, 0.7725531458854675, 0.7773081660270691, 0.7836481332778931, 0.7923656105995178, 0.7924976944923401, 0.7975168228149414, 0.8037247657775879, 0.8053097128868103, 0.8104609847068787, 0.8129705190658569, 0.8137630224227905, 0.8150838613510132, 0.8226125836372375, 0.8297450542449951, 0.8301413059234619, 0.82683926820755, 0.8296129703521729, 0.837141752243042, 0.841500461101532, 0.8389908671379089, 0.848368763923645, 0.8446704745292664, 0.8504821062088013, 0.8502179384231567, 0.8599920868873596, 0.8610487580299377, 0.8557654023170471, 0.858671247959137, 0.8618412613868713, 0.8643507957458496, 0.8658037185668945, 0.8626337051391602, 0.8726720213890076, 0.8709549307823181, 0.8717474341392517, 0.8755778670310974, 0.8775591254234314, 0.8780874609947205, 0.8787478804588318], "val_loss": [2.245551347732544, 2.0260813236236572, 1.1421434879302979, 0.8597432971000671, 0.7424938082695007, 0.6994643807411194, 0.6316900253295898, 0.6354409456253052, 0.6059148907661438, 0.5848223567008972, 0.5541093945503235, 0.5389283895492554, 0.5184044241905212, 0.5059802532196045, 0.5085408091545105, 0.49281421303749084, 0.483408123254776, 0.4837137758731842, 0.48090681433677673, 0.47241079807281494, 0.46431592106819153, 0.45804867148399353, 0.4634776711463928, 0.4442225694656372, 0.4333667755126953, 0.43544596433639526, 0.4273797571659088, 0.42278599739074707, 0.4350523352622986, 0.41935229301452637, 0.41412100195884705, 0.41271427273750305, 0.4197908639907837, 0.3930894434452057, 0.39791515469551086, 0.39285293221473694, 0.3921273648738861, 0.3876456618309021, 0.384278804063797, 0.3778151869773865, 0.3786627948284149, 0.385344535112381, 0.3865177035331726, 0.37540820240974426, 0.37541890144348145, 0.376173734664917, 0.3844706118106842, 0.3838532567024231, 0.3842633366584778, 0.39804574847221375, 0.3988495171070099, 0.3973153829574585], "val_accuracy": [0.4399999976158142, 0.492333322763443, 0.6553333401679993, 0.7076666951179504, 0.7310000061988831, 0.7426666617393494, 0.7583333253860474, 0.7613333463668823, 0.7763333320617676, 0.7789999842643738, 0.7893333435058594, 0.7916666865348816, 0.8063333630561829, 0.8073333501815796, 0.8116666674613953, 0.8113333582878113, 0.8153333067893982, 0.8196666836738586, 0.8223333358764648, 0.8296666741371155, 0.8326666951179504, 0.8330000042915344, 0.8286666870117188, 0.8366666436195374, 0.8373333215713501, 0.8429999947547913, 0.8420000076293945, 0.8479999899864197, 0.843666672706604, 0.8533333539962769, 0.8506666421890259, 0.8486666679382324, 0.8446666598320007, 0.856333315372467, 0.8579999804496765, 0.8576666712760925, 0.8573333621025085, 0.8640000224113464, 0.8659999966621399, 0.8669999837875366, 0.8693333268165588, 0.8693333268165588, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8706666827201843, 0.8730000257492065, 0.8683333396911621, 0.871666669845581, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 9, 1, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 5, 3], [0], [0, 0, 1, 1, 0, 1, 1], [0, 0, 7, 3], [5, 0, 7], [0, 58], [0, 1, 1], [3], [1, 7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, grad)", "other_info": {"loss": [2.3206334114074707, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4897799491882324, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 6, 4, 2, 2, 6, 3, 3, 1, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 0], [2, 0, 3, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1], [0, 6, 2, 8], [1, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [14, 58], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 0, 7, 4, 3, 2, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.negative(grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 1, 7, 1, 3, 6, 5, 3], [0, 2, 1, 0, 2, 2, 0], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [47], [0, 0, 0, 1, 1, 1, 1], [0, 3, 1, 5], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 6, 3, 3, 1, 6, 3, 3, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 6, 6, 7, 6], [0, 0, 1, 1, 2, 1, 2, 3, 3], [65, 4, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 1], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 2, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, alpha)), grad), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.divide_no_nan(grad, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [26.88804817199707, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18874652683734894, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2627585.5, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]