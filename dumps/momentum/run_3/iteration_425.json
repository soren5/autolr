[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293152332305908, 2.188211679458618, 1.7608391046524048, 1.3252723217010498, 1.078700065612793, 0.9118653535842896, 0.8385469913482666, 0.8101076483726501, 0.761439859867096, 0.7347464561462402, 0.7123180627822876, 0.6777012944221497, 0.643057107925415, 0.6314175724983215, 0.6165218353271484, 0.5910436511039734, 0.5896372199058533, 0.5740755796432495, 0.5635482668876648, 0.5487987995147705, 0.5324008464813232, 0.5215209126472473, 0.5187078714370728, 0.4956742227077484, 0.4883137345314026, 0.48198309540748596, 0.46235164999961853, 0.45480015873908997, 0.447836309671402, 0.4470028579235077, 0.443393737077713, 0.43302857875823975, 0.41960757970809937, 0.4146021604537964, 0.40606892108917236, 0.4035026431083679, 0.39098310470581055, 0.3869178295135498, 0.3887503743171692, 0.3851431906223297, 0.357649028301239, 0.3731098771095276, 0.36437520384788513, 0.3550907075405121, 0.3465290069580078, 0.3442644476890564, 0.33952003717422485], "accuracy": [0.1302337795495987, 0.3335094451904297, 0.44168537855148315, 0.5506538152694702, 0.6394135355949402, 0.6646413803100586, 0.6939638257026672, 0.6980583667755127, 0.7009642124176025, 0.7201162576675415, 0.7341170310974121, 0.7364945411682129, 0.7518161535263062, 0.761590301990509, 0.7574957013130188, 0.7736098170280457, 0.7821952104568481, 0.7858935594558716, 0.7893276810646057, 0.7922335267066956, 0.7921014428138733, 0.793422281742096, 0.7998943328857422, 0.8062343001365662, 0.8107251524925232, 0.8129705190658569, 0.8227446675300598, 0.8222163319587708, 0.8284242749214172, 0.832650899887085, 0.8330471515655518, 0.8343679904937744, 0.8424250483512878, 0.8404437899589539, 0.8400475382804871, 0.846387505531311, 0.8495575189590454, 0.8515387773513794, 0.8510104417800903, 0.8515387773513794, 0.8625016212463379, 0.8537842035293579, 0.8618412613868713, 0.8614450097084045, 0.8644828796386719, 0.8698983192443848, 0.8636903762817383], "val_loss": [2.246065378189087, 2.014096260070801, 1.1289830207824707, 0.9094581604003906, 0.7623652219772339, 0.7203189134597778, 0.6759260296821594, 0.6583852767944336, 0.651975691318512, 0.626010000705719, 0.6004306674003601, 0.5730299353599548, 0.5544441938400269, 0.5551794171333313, 0.5469516515731812, 0.5399172902107239, 0.5263733863830566, 0.5277446508407593, 0.5256025195121765, 0.5122920870780945, 0.49659955501556396, 0.488593190908432, 0.4861938953399658, 0.47119832038879395, 0.46705958247184753, 0.46457964181900024, 0.45660537481307983, 0.44910457730293274, 0.44522085785865784, 0.4571770429611206, 0.4385019540786743, 0.43823519349098206, 0.4432738423347473, 0.4245140850543976, 0.4158971309661865, 0.4380069971084595, 0.4292415380477905, 0.41092565655708313, 0.4139261543750763, 0.43351006507873535, 0.4235716164112091, 0.4035252332687378, 0.41654446721076965, 0.4090940058231354, 0.43002867698669434, 0.4110669791698456, 0.41546979546546936], "val_accuracy": [0.4156666696071625, 0.46533334255218506, 0.6499999761581421, 0.6859999895095825, 0.7210000157356262, 0.7353333234786987, 0.7459999918937683, 0.7476666569709778, 0.7603333592414856, 0.7573333382606506, 0.762666642665863, 0.7806666493415833, 0.7943333387374878, 0.7906666398048401, 0.7923333048820496, 0.7976666688919067, 0.8040000200271606, 0.8090000152587891, 0.8143333196640015, 0.8109999895095825, 0.8209999799728394, 0.8216666579246521, 0.8180000185966492, 0.8236666917800903, 0.8259999752044678, 0.8286666870117188, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.8353333473205566, 0.8410000205039978, 0.8433333039283752, 0.8500000238418579, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8496666550636292, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8573333621025085, 0.859666645526886, 0.8539999723434448, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293398857116699, 2.1889889240264893, 1.7630051374435425, 1.3200950622558594, 1.0912917852401733, 0.9232562780380249, 0.8680566549301147, 0.8219442367553711, 0.77332603931427, 0.7420270442962646, 0.7107962369918823, 0.6799519062042236, 0.6658036708831787, 0.6349542140960693, 0.605047345161438, 0.5896933078765869, 0.5788845419883728, 0.5716921091079712, 0.5599761009216309, 0.5452724695205688, 0.5395745038986206, 0.5221764445304871, 0.5166608691215515, 0.5066248178482056, 0.49553123116493225, 0.49515673518180847, 0.4720114469528198, 0.46628570556640625, 0.46458548307418823, 0.4674607217311859, 0.4500514566898346, 0.43729251623153687, 0.44547736644744873, 0.42782989144325256, 0.41382989287376404, 0.4044944941997528, 0.39964669942855835, 0.3912813663482666, 0.3939027786254883, 0.38081595301628113, 0.377410888671875, 0.382161945104599, 0.37942156195640564, 0.3626271188259125, 0.378959983587265, 0.3536355793476105, 0.3679710030555725, 0.3457319736480713, 0.3613820970058441, 0.33625948429107666, 0.32071030139923096, 0.31332311034202576, 0.32505369186401367, 0.30829283595085144], "accuracy": [0.12732796370983124, 0.32703739404678345, 0.4419495463371277, 0.5522388219833374, 0.6275261044502258, 0.6596222519874573, 0.6789063811302185, 0.6959450244903564, 0.7017567157745361, 0.720380425453186, 0.7320036888122559, 0.7407211661338806, 0.7495707273483276, 0.7600052952766418, 0.7667415142059326, 0.7765156626701355, 0.7783648371696472, 0.7852331399917603, 0.7836481332778931, 0.7927618622779846, 0.7915731072425842, 0.798309326171875, 0.798309326171875, 0.802800178527832, 0.8105930685997009, 0.8115176558494568, 0.8181217908859253, 0.821820080280304, 0.8240655064582825, 0.8202351331710815, 0.8230088353157043, 0.829216718673706, 0.8300092220306396, 0.835160493850708, 0.8433496356010437, 0.8465195894241333, 0.8459912538528442, 0.8455950617790222, 0.8491612672805786, 0.8525954484939575, 0.8573504090309143, 0.854708731174469, 0.8465195894241333, 0.8605204224586487, 0.8569541573524475, 0.8627657890319824, 0.863029956817627, 0.8648791313171387, 0.8644828796386719, 0.8712190985679626, 0.8746532797813416, 0.871879518032074, 0.876370370388031, 0.8850878477096558], "val_loss": [2.245986223220825, 2.0220534801483154, 1.1447594165802002, 0.8981417417526245, 0.7846370339393616, 0.7413439750671387, 0.7005642056465149, 0.6720983982086182, 0.6566805243492126, 0.6338309049606323, 0.5912749171257019, 0.5724081993103027, 0.557100772857666, 0.5433258414268494, 0.53542160987854, 0.529420018196106, 0.5171549320220947, 0.5145783424377441, 0.5093348622322083, 0.49940234422683716, 0.49777865409851074, 0.487342894077301, 0.4801008403301239, 0.47721976041793823, 0.4713013470172882, 0.46327751874923706, 0.4528472423553467, 0.44728222489356995, 0.45427677035331726, 0.4444630444049835, 0.44800660014152527, 0.44631510972976685, 0.43301066756248474, 0.4221436381340027, 0.42532971501350403, 0.42175906896591187, 0.41808822751045227, 0.4237414002418518, 0.4196782112121582, 0.41407790780067444, 0.4190135598182678, 0.410241037607193, 0.41293659806251526, 0.4299350678920746, 0.4253237247467041, 0.4226301312446594, 0.40303516387939453, 0.41611865162849426, 0.4086761176586151, 0.4076877534389496, 0.4185195863246918, 0.4236815571784973, 0.41678759455680847, 0.42048123478889465], "val_accuracy": [0.40700000524520874, 0.4336666762828827, 0.6370000243186951, 0.6793333292007446, 0.6996666789054871, 0.7196666598320007, 0.7283333539962769, 0.7296666502952576, 0.7416666746139526, 0.7513333559036255, 0.7583333253860474, 0.7693333625793457, 0.7760000228881836, 0.7929999828338623, 0.7933333516120911, 0.800000011920929, 0.796999990940094, 0.8013333082199097, 0.7990000247955322, 0.8116666674613953, 0.8166666626930237, 0.8106666803359985, 0.8116666674613953, 0.8136666417121887, 0.8220000267028809, 0.8323333263397217, 0.8333333134651184, 0.8413333296775818, 0.8316666483879089, 0.8413333296775818, 0.8386666774749756, 0.8353333473205566, 0.843666672706604, 0.8483333587646484, 0.8489999771118164, 0.8479999899864197, 0.8476666808128357, 0.8526666760444641, 0.8513333201408386, 0.8486666679382324, 0.8569999933242798, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8603333234786987, 0.8556666374206543, 0.8629999756813049, 0.8600000143051147, 0.8666666746139526, 0.8643333315849304, 0.8646666407585144, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 1, 3, 1, 3], [0, 3, 1, 1, 2], [48, 99, 27], [0, 1, 1, 0, 1, 1], [0, 3, 2], [0, 3, 3], [43], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [1, 5, 4], [69, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(alpha, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3036129474639893, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3, 6, 6, 5, 7, 6, 7, 6, 8, 9, 0], [0, 3, 1, 0, 2, 3, 0, 0, 2, 1], [60, 99, 27, 5, 96], [0, 0, 1, 1, 1, 1], [0, 1, 8], [0, 3, 3], [0], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 15, 10, 5, 4, 2, 2, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(grad))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 8], [0, 0, 1, 3, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 0, 3], [0, 77], [0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 3], [0, 58], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 2, 7, 4, 3, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 0, 3], [83, 99, 27], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 3, 0], [0, 76], [0, 1, 0, 0, 1, 1, 1], [0, 0, 4, 3], [0, 0, 4], [0, 58], [0, 1, 1], [3], [0, 3], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 8, 4, 4, 3, 6, 3, 3, 2, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.310584783554077, 2.3093435764312744, 2.3101136684417725, 2.3102471828460693, 2.310346841812134, 2.3101046085357666], "accuracy": [0.09536388516426086, 0.09602430462837219, 0.09153348207473755, 0.08849557489156723, 0.09113723784685135, 0.09417514503002167], "val_loss": [2.309614896774292, 2.309614896774292, 2.309614896774292, 2.309614896774292, 2.309614896774292, 2.309614896774292], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]