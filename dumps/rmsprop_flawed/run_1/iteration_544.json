[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8174285888671875, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5602153539657593, 0.845830500125885, 0.6654928922653198, 0.6163186430931091, 0.5822609066963196, 0.5500065684318542, 0.5364864468574524, 0.5018309354782104, 0.5066663026809692, 0.4934020936489105, 0.5029364824295044, 0.49070918560028076, 0.4945647716522217, 0.4820568263530731, 0.46948233246803284, 0.5051781535148621, 0.5082162022590637, 0.5025539398193359, 0.4734136164188385, 0.482810378074646, 0.4856945276260376, 0.4747319221496582, 0.4758526086807251, 0.5210483074188232, 0.5451619029045105, 0.5802246928215027, 0.5119970440864563], "accuracy": [0.47206446528434753, 0.6996433734893799, 0.7675340175628662, 0.7761194109916687, 0.7936864495277405, 0.8026680946350098, 0.8123101592063904, 0.8158763647079468, 0.8253863453865051, 0.8210275769233704, 0.8245938420295715, 0.8362171649932861, 0.8227446675300598, 0.834632158279419, 0.8330471515655518, 0.8327829837799072, 0.8479725122451782, 0.8372738361358643, 0.8437458872795105, 0.8356888294219971, 0.8260467648506165, 0.8366134166717529, 0.8564258217811584, 0.8356888294219971, 0.8157442808151245, 0.8317263126373291, 0.8376700282096863], "val_loss": [0.7289762496948242, 0.5885269641876221, 0.5108124017715454, 0.50394606590271, 0.47992178797721863, 0.48406746983528137, 0.46134722232818604, 0.4691893756389618, 0.4612049162387848, 0.5433388948440552, 0.46506568789482117, 0.5097566246986389, 0.4971286952495575, 0.4886189103126526, 0.49102261662483215, 0.5501300096511841, 0.5453892350196838, 0.511125922203064, 0.5239308476448059, 0.4962606728076935, 0.5472940802574158, 0.496262788772583, 0.5500075817108154, 0.5192306041717529, 0.5152074694633484, 0.560932993888855, 0.5304736495018005], "val_accuracy": [0.7416666746139526, 0.7863333225250244, 0.809333324432373, 0.8173333406448364, 0.8209999799728394, 0.8323333263397217, 0.8403333425521851, 0.8379999995231628, 0.8376666903495789, 0.8356666564941406, 0.8410000205039978, 0.8426666855812073, 0.8423333168029785, 0.8366666436195374, 0.8433333039283752, 0.8473333120346069, 0.8496666550636292, 0.8539999723434448, 0.8376666903495789, 0.8316666483879089, 0.8539999723434448, 0.8576666712760925, 0.8503333330154419, 0.8316666483879089, 0.8389999866485596, 0.8399999737739563, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 9, 3, 1, 6, 3, 7, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [4, 5], [0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 1, 6], [3, 3, 1, 3, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 10, 5, 5, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.subtract(sigma, alpha), tf.math.divide_no_nan(sigma, sigma))))", "other_info": {"loss": [4.407334392482862e+29, 91.24382019042969, 290.336669921875, 604.45849609375, 1033.7113037109375, 1578.3751220703125], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [38.674922943115234, 190.63214111328125, 457.9668884277344, 840.68115234375, 1338.79345703125, 1952.2696533203125], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 3, 2, 6, 3, 8, 2], [0, 0, 2, 0, 2, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 2], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096532821655273, 2.3100602626800537, 2.3091039657592773, 2.3096916675567627, 2.3108558654785156, 2.31006121635437], "accuracy": [0.08915598690509796, 0.09060890227556229, 0.09298639744520187, 0.08889182657003403, 0.09113723784685135, 0.08770307898521423], "val_loss": [2.3089027404785156, 2.3089027404785156, 2.3089027404785156, 2.3089027404785156, 2.3089027404785156, 2.3089027404785156], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 3, 1, 6, 3, 8, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 0, 1, 0], [0, 7], [2, 5], [0], [0, 0, 0, 1, 1], [0, 6, 5], [3, 3], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 1, 0, 1, 1, 11, 5, 6, 3, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(sigma), sigma))", "other_info": {"loss": [3.199937717423466e+19, 2.049945100686782e+22, 9.133844799718293e+23, 1.481002266688843e+25, 1.1492390733211327e+26, 6.000167648702047e+26], "accuracy": [0.09760929644107819, 0.10645885765552521, 0.09787346422672272, 0.09972262382507324, 0.10910051316022873, 0.10302469879388809], "val_loss": [5.541919650740762e+20, 1.2648868460227931e+23, 3.36154729024833e+24, 3.626136434487326e+25, 2.375317136744099e+26, 1.1333484023399967e+27], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 8, 3, 8, 2], [0, 0, 1, 2, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1, 1], [7, 7], [4, 5, 3], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, grad), sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097498416900635, 2.310476541519165, 2.309495449066162, 2.309877634048462, 2.3088743686676025, 2.310270309448242], "accuracy": [0.09813763201236725, 0.0940430611371994, 0.0956280529499054, 0.09721305221319199, 0.09972262382507324, 0.09245806187391281], "val_loss": [2.3086912631988525, 2.3086912631988525, 2.3086912631988525, 2.3086912631988525, 2.3086912631988525, 2.3086912631988525], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]