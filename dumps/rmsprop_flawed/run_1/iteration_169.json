[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.611362099647522, 0.8675376772880554, 0.717356264591217, 0.6241614818572998, 0.597083330154419, 0.5844187140464783, 0.5634630918502808, 0.5284832119941711, 0.5231626629829407, 0.5266320109367371, 0.5078549981117249, 0.5031976699829102, 0.5237892866134644, 0.5242740511894226, 0.5354053974151611, 0.5370426774024963, 0.5226532220840454, 0.5430070757865906, 0.5110233426094055, 0.5516557097434998, 0.5418047308921814, 0.5368773937225342, 0.5395342707633972, 0.5640690922737122, 0.5689741969108582, 0.5799440145492554, 0.5855021476745605], "accuracy": [0.46387532353401184, 0.6993792057037354, 0.7497028112411499, 0.7720248103141785, 0.7858935594558716, 0.7804781198501587, 0.789988100528717, 0.8009510040283203, 0.805177628993988, 0.8146876096725464, 0.8197067975997925, 0.8168009519577026, 0.8168009519577026, 0.8165367841720581, 0.811649739742279, 0.8158763647079468, 0.8236692547798157, 0.8168009519577026, 0.8257825970649719, 0.8191784620285034, 0.8197067975997925, 0.830669641494751, 0.8293488025665283, 0.8261788487434387, 0.8232730031013489, 0.8149517774581909, 0.7968564033508301], "val_loss": [0.9247053861618042, 0.6752337217330933, 0.5684044361114502, 0.5340821146965027, 0.5445023775100708, 0.5452593564987183, 0.5121293663978577, 0.5125269889831543, 0.5147292613983154, 0.5643375515937805, 0.5367828011512756, 0.5164248943328857, 0.6020895838737488, 0.5695493221282959, 0.5384626984596252, 0.5432406663894653, 0.6154769062995911, 0.5328497886657715, 0.6226556301116943, 0.5305055379867554, 0.5939303636550903, 0.571252703666687, 0.6709363460540771, 0.6300748586654663, 0.6120418906211853, 0.5829433798789978, 0.6322908401489258], "val_accuracy": [0.6763333082199097, 0.7583333253860474, 0.7886666655540466, 0.7950000166893005, 0.7986666560173035, 0.8033333420753479, 0.8153333067893982, 0.8116666674613953, 0.8190000057220459, 0.815666675567627, 0.824999988079071, 0.824999988079071, 0.828000009059906, 0.8169999718666077, 0.8253333568572998, 0.8263333439826965, 0.8320000171661377, 0.8366666436195374, 0.8266666531562805, 0.8286666870117188, 0.8339999914169312, 0.840666651725769, 0.8240000009536743, 0.8349999785423279, 0.8363333344459534, 0.8100000023841858, 0.8276666402816772]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 8, 4, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 1, 3, 1, 0], [0, 27, 16, 40], [0, 0, 1, 1], [0, 2], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 5, 6, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), alpha), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 5, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [8, 5, 3, 1, 6, 3, 9, 2, 5, 5], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 1, 1, 0], [0, 7], [4, 7], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 11, 6, 5, 3, 15, 10, 5, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309143304824829, 2.309732675552368, 2.3091328144073486, 2.3097646236419678, 2.3094305992126465, 2.3089466094970703], "accuracy": [0.09747721254825592, 0.09008057415485382, 0.09774138033390045, 0.09219389408826828, 0.09219389408826828, 0.08994849026203156], "val_loss": [2.308948278427124, 2.308948278427124, 2.308948278427124, 2.308948278427124, 2.308948278427124, 2.308948278427124], "val_accuracy": [0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 6, 3, 6, 8, 6, 7, 3, 9, 7, 7], [0, 0, 1, 0, 2, 2, 2, 2, 0, 1, 0, 1], [0, 39, 77, 63, 65, 41], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 0, 9, 2], [0, 0, 2, 0, 3, 2, 0], [0, 27, 16, 16], [0, 1, 0, 1, 1], [4, 7], [3, 7, 3], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 28, 16, 12, 6, 2, 1, 1, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.add(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3119521141052246, 2.310319185256958, 2.3104147911071777, 2.310103178024292, 2.309743642807007, 2.310350179672241], "accuracy": [0.08809932321310043, 0.09047681838274002, 0.09034473448991776, 0.09417514503002167, 0.08677849918603897, 0.09351472556591034], "val_loss": [2.308781147003174, 2.308781147003174, 2.308781147003174, 2.308781147003174, 2.308781147003174, 2.308781147003174], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 2, 3, 1, 6, 3, 9, 2, 0], [0, 0, 5, 0, 3, 1, 4], [0, 27, 16, 9], [1, 0, 1, 1], [0, 6], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.07657142728567123, "mapping_values": [1, 9, 5, 4, 3, 16, 9, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1276859383808.0, 103577255149568.0, 939479737040896.0, 4749789837131776.0, 1.802036207157248e+16, 5.113757284329062e+16], "accuracy": [0.08928807079792023, 0.06709814071655273, 0.06577730923891068, 0.0614185705780983, 0.05798441544175148, 0.05270109698176384], "val_loss": [12156219162624.0, 330851900456960.0, 2223236938989568.0, 8610079599230976.0, 2.938457710133248e+16, 7.86098243460137e+16], "val_accuracy": [0.08933333307504654, 0.0533333346247673, 0.057999998331069946, 0.049666665494441986, 0.04333333298563957, 0.0430000014603138]}}]