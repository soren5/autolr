[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.592228889465332, 0.8477302193641663, 0.7205613851547241, 0.6278841495513916, 0.5756508111953735, 0.5454928278923035, 0.5206089019775391, 0.49386173486709595, 0.4835300147533417, 0.46938830614089966, 0.4807005822658539, 0.4799538850784302, 0.5111778974533081, 0.47941216826438904], "accuracy": [0.4823669195175171, 0.7045304179191589, 0.739928662776947, 0.7676661014556885, 0.7840443849563599, 0.7993659973144531, 0.8058380484580994, 0.8215559124946594, 0.8219521641731262, 0.8178576231002808, 0.8256505131721497, 0.8211596608161926, 0.8171972036361694, 0.821820080280304], "val_loss": [0.9190195202827454, 0.6423252820968628, 0.5723564028739929, 0.5454291701316833, 0.5039819478988647, 0.4752714931964874, 0.49838289618492126, 0.4986931085586548, 0.5040833950042725, 0.49589964747428894, 0.570378303527832, 0.5327050089836121, 0.5347545742988586, 0.5260154604911804], "val_accuracy": [0.6993333101272583, 0.7673333287239075, 0.7986666560173035, 0.8036666512489319, 0.8213333487510681, 0.831333339214325, 0.8343333601951599, 0.8293333053588867, 0.8416666388511658, 0.8376666903495789, 0.8323333263397217, 0.82833331823349, 0.8403333425521851, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 2, 3, 1, 3, 5, 2, 1], [0, 0, 1, 1, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 5, 1, 6, 3, 8, 2, 9, 3, 7, 3, 1, 9, 2, 0, 0, 9], [0, 0, 2, 0, 3, 4, 0, 3], [0, 27, 16, 82, 35, 27, 62], [0, 0, 1, 1], [0, 9], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 26, 18, 8, 7, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))), tf.math.negative(grad))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303367853164673, 2.3025989532470703, 2.3026137351989746, 2.302649974822998, 2.3027288913726807, 2.3028719425201416], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302586317062378, 2.302565097808838, 2.3025639057159424, 2.302625894546509, 2.3027288913726807, 2.3028783798217773], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0, 0, 1, 6, 5, 7, 7, 7, 2, 4], [0, 0, 1, 0, 2, 3, 3, 3, 3, 0, 0, 0], [0, 39, 77, 72, 86, 49], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 4, 7, 2], [0, 0, 2, 0, 3, 4, 0], [0, 27, 16, 16], [1, 1, 1, 1], [1, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 28, 16, 12, 6, 6, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(alpha))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.add(grad, tf.math.add(grad, tf.math.add(tf.math.add(grad, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309459924697876, 2.3106601238250732, 2.309454917907715, 2.310080051422119, 2.3095695972442627, 2.3111417293548584], "accuracy": [0.09721305221319199, 0.09021265059709549, 0.09325055778026581, 0.09008057415485382, 0.09351472556591034, 0.08770307898521423], "val_loss": [2.3091862201690674, 2.3091862201690674, 2.3091862201690674, 2.3091862201690674, 2.3091862201690674, 2.3091862201690674], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 9, 1, 2, 7], [0, 0, 1, 0, 2, 0, 1], [0, 39, 77, 27, 58], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 1, 1], [0, 0, 3, 0, 3, 1, 3], [0, 27, 16, 67], [1, 0, 0, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 17, 10, 7, 5, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098132610321045, 2.309878349304199, 2.310065746307373, 2.30899977684021, 2.3095359802246094, 2.309293746948242], "accuracy": [0.09113723784685135, 0.09232597798109055, 0.0874389111995697, 0.08691058307886124, 0.09153348207473755, 0.09153348207473755], "val_loss": [2.3090500831604004, 2.3090500831604004, 2.3090500831604004, 2.3090500831604004, 2.3090500831604004, 2.3090500831604004], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 0], [0, 39, 19, 69], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 8, 5, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 48, 16], [0, 1, 1, 1], [0, 7], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 4, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101165294647217, 2.3098318576812744, 2.3101706504821777, 2.3104569911956787, 2.3098819255828857, 2.309044122695923], "accuracy": [0.0936468094587326, 0.09509972482919693, 0.09417514503002167, 0.09219389408826828, 0.09192973375320435, 0.09509972482919693], "val_loss": [2.3088252544403076, 2.3088252544403076, 2.3088252544403076, 2.3088252544403076, 2.3088252544403076, 2.3088252544403076], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]