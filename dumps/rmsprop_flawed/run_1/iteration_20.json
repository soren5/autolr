[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5965871810913086, 0.8424918055534363, 0.6626642942428589, 0.6048578023910522, 0.5762543678283691, 0.5441622138023376, 0.5000262260437012, 0.5131178498268127, 0.4849379062652588, 0.4780111312866211, 0.4839017391204834, 0.4990459680557251, 0.5002049803733826, 0.4980020821094513, 0.4841219186782837, 0.46960219740867615, 0.48160427808761597, 0.5054437518119812, 0.498380571603775], "accuracy": [0.46968695521354675, 0.7108704447746277, 0.7576277852058411, 0.7765156626701355, 0.7889314293861389, 0.7988376617431641, 0.8210275769233704, 0.8120459914207458, 0.8247259259223938, 0.8352925777435303, 0.8277638554573059, 0.8300092220306396, 0.8269713521003723, 0.8298771381378174, 0.8368775844573975, 0.8343679904937744, 0.8276317715644836, 0.8248580098152161, 0.8321225643157959], "val_loss": [0.8522036075592041, 0.6078245639801025, 0.5334678292274475, 0.5285949110984802, 0.5239529609680176, 0.50274658203125, 0.553644061088562, 0.49625861644744873, 0.5147064328193665, 0.5767109990119934, 0.5758713483810425, 0.549501895904541, 0.6034963130950928, 0.5799657106399536, 0.5844851732254028, 0.5661908984184265, 0.5830247402191162, 0.6317936778068542, 0.6813535094261169], "val_accuracy": [0.6996666789054871, 0.7730000019073486, 0.796999990940094, 0.8013333082199097, 0.8169999718666077, 0.8183333277702332, 0.8226666450500488, 0.8246666789054871, 0.8353333473205566, 0.8276666402816772, 0.8336666822433472, 0.8176666498184204, 0.8343333601951599, 0.8379999995231628, 0.8293333053588867, 0.8360000252723694, 0.8330000042915344, 0.8339999914169312, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 4, 8, 9], [0, 0, 2, 0, 2, 1, 0], [0, 27, 16, 24], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [5], [0]], "fitness": -0.27457141876220703, "mapping_values": [1, 1, 0, 1, 1, 13, 7, 6, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.335163116455078, 2.288005828857422, 2.2549667358398438, 2.3331422805786133, 2.298308849334717, 2.3495705127716064], "accuracy": [0.19865275919437408, 0.12455421686172485, 0.1916523575782776, 0.10051512718200684, 0.11200633645057678, 0.10579843819141388], "val_loss": [2.0487987995147705, 2.293449640274048, 2.459930419921875, 2.3029346466064453, 2.4560046195983887, 2.3074092864990234], "val_accuracy": [0.27933332324028015, 0.09933333098888397, 0.09799999743700027, 0.10999999940395355, 0.11266666650772095, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5], [0, 0, 0, 3, 2], [2, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 5], [5, 0, 3, 0, 3, 1, 0, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 6], [0, 6], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 18, 10, 8, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [8.751572608947754, 2.3202319145202637, 2.305931806564331, 2.3033902645111084, 2.3030624389648438, 2.303050994873047], "accuracy": [0.18531237542629242, 0.09998679161071777, 0.09721305221319199, 0.09959053993225098, 0.09589222073554993, 0.09708096832036972], "val_loss": [2.3364927768707275, 2.306993246078491, 2.303046941757202, 2.302694320678711, 2.302619695663452, 2.3025922775268555], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.0989999994635582, 0.10100000351667404, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 2, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 0, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 5], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090875148773193, 2.3031673431396484, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.08757099509239197, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3044273853302, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.07066666334867477, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 8, 5, 4, 0, 4, 8, 3, 7, 1, 6, 2], [0, 0, 1, 0, 2, 0, 3, 1, 0, 0, 3, 0], [0, 75, 39, 79, 42, 60, 13], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 5, 2, 0, 3, 1, 0], [0, 27, 96, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 4, 0, 2], [0, 6, 5, 2], [0], [1], [0], [0], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 29, 17, 12, 7, 1, 0, 1, 1, 9, 5, 4, 1, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.add(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, alpha))), tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3108232021331787, 2.310112476348877, 2.30898380279541, 2.3096694946289062, 2.309932231903076, 2.309295415878296], "accuracy": [0.09285431355237961, 0.09272222965955734, 0.09734513610601425, 0.0886276587843895, 0.09774138033390045, 0.0956280529499054], "val_loss": [2.3085808753967285, 2.3085808753967285, 2.3085808753967285, 2.3085808753967285, 2.3085808753967285, 2.3085808753967285], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]