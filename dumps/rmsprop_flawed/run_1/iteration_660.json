[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.60089910030365, 0.8720558285713196, 0.7171480655670166, 0.6528516411781311, 0.6170699000358582, 0.5799705386161804, 0.5380520224571228, 0.5314851403236389, 0.5417995452880859, 0.5194016695022583, 0.4887343645095825, 0.49142324924468994, 0.49398207664489746, 0.4757445156574249, 0.46946242451667786, 0.4679129123687744, 0.48496952652931213, 0.4633716940879822, 0.47284847497940063, 0.4651384949684143, 0.5598515272140503, 0.546544075012207, 0.5889692306518555, 0.5354139804840088, 0.5494601726531982, 0.5060881972312927], "accuracy": [0.44644036889076233, 0.6925109028816223, 0.7301545143127441, 0.7567031979560852, 0.76542067527771, 0.7758552432060242, 0.7997622489929199, 0.8087438941001892, 0.8087438941001892, 0.8087438941001892, 0.8157442808151245, 0.8259146809577942, 0.828292191028595, 0.8289526104927063, 0.8354246616363525, 0.8348963260650635, 0.8321225643157959, 0.8409721255302429, 0.8396512866020203, 0.8339717388153076, 0.8416325449943542, 0.829216718673706, 0.8070268034934998, 0.8156121969223022, 0.8074230551719666, 0.8142913579940796], "val_loss": [0.8602840900421143, 0.6615673303604126, 0.6445550322532654, 0.5948489308357239, 0.5568895936012268, 0.5561181902885437, 0.5420436263084412, 0.533032238483429, 0.5622981190681458, 0.5254184007644653, 0.5510707497596741, 0.5536621809005737, 0.5444769859313965, 0.550180971622467, 0.5532487630844116, 0.6604663133621216, 0.547177255153656, 0.6270855069160461, 0.5716436505317688, 0.7123047113418579, 0.7758620381355286, 0.7257630228996277, 0.7049460411071777, 0.6672868132591248, 0.5956456065177917, 0.6532965302467346], "val_accuracy": [0.6629999876022339, 0.7473333477973938, 0.7563333511352539, 0.7873333096504211, 0.7889999747276306, 0.7976666688919067, 0.8209999799728394, 0.809333324432373, 0.8236666917800903, 0.8270000219345093, 0.8376666903495789, 0.8316666483879089, 0.8339999914169312, 0.8410000205039978, 0.8370000123977661, 0.8220000267028809, 0.8429999947547913, 0.8323333263397217, 0.8346666693687439, 0.831333339214325, 0.8453333377838135, 0.8166666626930237, 0.8236666917800903, 0.8136666417121887, 0.8253333568572998, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [1, 0, 1, 0, 2], [0, 39, 77], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 3, 6, 3, 8, 2, 2, 2, 4, 4, 7, 9, 2, 4, 3, 8, 8, 0, 3, 3, 2, 7, 3, 3, 0, 8, 2, 5, 8, 2, 4, 9, 0, 7, 4, 9, 5, 3, 4], [1, 0, 2, 0, 3, 2, 0, 3, 1, 2, 4, 1, 4, 4, 4, 5, 4, 0, 0, 1, 1, 0, 0, 1, 0], [34, 27, 16, 16, 80, 10, 1, 63, 9, 96, 94], [0, 1, 1, 1], [0, 3], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 66, 41, 25, 11, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(grad, beta), tf.math.add(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha), beta)))), tf.math.add(grad, tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(alpha)), tf.math.negative(grad)), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.multiply(grad, tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.sqrt(grad)))))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.pow(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), alpha))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 5, 1, 0], [0, 27, 93, 16], [0, 0, 1, 1], [0, 7], [1, 5], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309465169906616, 2.3091766834259033, 2.309452533721924, 2.310011148452759, 2.309565305709839, 2.309896945953369], "accuracy": [0.09417514503002167, 0.0882314071059227, 0.09377889335155487, 0.09206181764602661, 0.09615638852119446, 0.08902391046285629], "val_loss": [2.308513641357422, 2.308513641357422, 2.308513641357422, 2.308513641357422, 2.308513641357422, 2.308513641357422], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 4, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 72], [0, 0, 1, 1], [0, 7], [4, 5], [0], [0, 0, 1, 1], [0, 3], [2, 1], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [2.3094732761383057, 2.309283494949341, 2.3086555004119873, 2.310035228729248, 2.3095037937164307, 2.309546947479248], "accuracy": [0.09655263274908066, 0.09457138925790787, 0.09259014576673508, 0.0944393053650856, 0.08968432247638702, 0.09377889335155487], "val_loss": [2.3085947036743164, 2.3085947036743164, 2.3085947036743164, 2.3085947036743164, 2.3085947036743164, 2.3085947036743164], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 1, 6, 4, 1, 5], [0, 0, 2, 2, 3, 4, 0], [0, 27, 16, 0], [0, 1, 0, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310417890548706, 2.3096954822540283, 2.309612512588501, 2.3100719451904297, 2.309610605239868, 2.3104093074798584], "accuracy": [0.09166556596755981, 0.09272222965955734, 0.08730682730674744, 0.09113723784685135, 0.09113723784685135, 0.09113723784685135], "val_loss": [2.3084020614624023, 2.3084020614624023, 2.3084020614624023, 2.3084020614624023, 2.3084020614624023, 2.3084020614624023], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]