[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4889380931854248, 0.7797419428825378, 0.6809708476066589, 0.6133443117141724, 0.5941759347915649, 0.533788800239563, 0.49338504672050476, 0.4704238474369049, 0.4519960582256317, 0.4690704345703125, 0.4706115126609802, 0.510091245174408, 0.45397689938545227], "accuracy": [0.4865935742855072, 0.7231541275978088, 0.7491744756698608, 0.7726852297782898, 0.7788931727409363, 0.8034605979919434, 0.8169330358505249, 0.8252542614936829, 0.8343679904937744, 0.8289526104927063, 0.8437458872795105, 0.8227446675300598, 0.8366134166717529], "val_loss": [0.7928842902183533, 0.6213945150375366, 0.5445704460144043, 0.5431666374206543, 0.4954869747161865, 0.49194833636283875, 0.47882434725761414, 0.4438592791557312, 0.5006858110427856, 0.5195860266685486, 0.5442189574241638, 0.4856928288936615, 0.5647995471954346], "val_accuracy": [0.7273333072662354, 0.7703333497047424, 0.8063333630561829, 0.7946666479110718, 0.8146666884422302, 0.8320000171661377, 0.8326666951179504, 0.8423333168029785, 0.8256666660308838, 0.8383333086967468, 0.8373333215713501, 0.8330000042915344, 0.8223333358764648]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 6, 8], [4, 0, 2, 4, 3, 1, 0], [0, 27, 16, 0], [0, 1, 0, 0], [0, 7], [3, 7], [0], [1], [0], [2], [0]], "fitness": -0.33485713601112366, "mapping_values": [1, 8, 4, 4, 3, 15, 8, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309122085571289, 2.30987811088562, 2.308553457260132, 2.308403730392456, 2.3067452907562256, 2.305243492126465, 2.3046743869781494, 2.30332350730896, 2.302096366882324, 2.3011553287506104, 2.300546169281006, 2.299121618270874, 2.298527956008911, 2.297152042388916, 2.2963926792144775, 2.2953882217407227, 2.2957355976104736, 2.295898675918579, 2.295401096343994, 2.2954814434051514, 2.2954001426696777, 2.2954318523406982, 2.2951717376708984, 2.295360803604126, 2.295238971710205, 2.295201063156128, 2.295431613922119, 2.2953743934631348, 2.295287847518921, 2.2952651977539062, 2.2953522205352783, 2.2959635257720947, 2.295808792114258, 2.295524835586548, 2.296128988265991, 2.2954437732696533, 2.2959442138671875, 2.295772075653076, 2.295884370803833, 2.296034574508667, 2.2961673736572266, 2.2959887981414795, 2.2961585521698, 2.296109437942505, 2.2960212230682373, 2.296111822128296], "accuracy": [0.09298639744520187, 0.08889182657003403, 0.09708096832036972, 0.09325055778026581, 0.09457138925790787, 0.0956280529499054, 0.09655263274908066, 0.10289261490106583, 0.10289261490106583, 0.10276053100824356, 0.10249637067317963, 0.10830801725387573, 0.108440101146698, 0.11094967275857925, 0.11081759631633759, 0.11795007437467575, 0.1200634017586708, 0.12296922504901886, 0.11993131786584854, 0.11755382269620895, 0.12151630967855453, 0.12402588874101639, 0.13802668452262878, 0.13538502156734467, 0.13710209727287292, 0.14291374385356903, 0.14621582627296448, 0.15361246466636658, 0.1632545292377472, 0.16563200950622559, 0.16695284843444824, 0.16140536963939667, 0.17038699984550476, 0.1802932173013687, 0.1798969805240631, 0.18570862710475922, 0.1888786107301712, 0.19442610442638397, 0.19442610442638397, 0.19614318013191223, 0.19653943181037903, 0.19931316375732422, 0.19244486093521118, 0.19891692698001862, 0.20472857356071472, 0.20935148000717163], "val_loss": [2.308234930038452, 2.3078174591064453, 2.3071296215057373, 2.3061466217041016, 2.3049540519714355, 2.3036274909973145, 2.3023834228515625, 2.301136016845703, 2.299936294555664, 2.298821210861206, 2.2978785037994385, 2.2970528602600098, 2.296295642852783, 2.295624017715454, 2.295118570327759, 2.294754981994629, 2.2945163249969482, 2.294389247894287, 2.2943661212921143, 2.294386148452759, 2.294365644454956, 2.2943410873413086, 2.2943294048309326, 2.2943668365478516, 2.2944328784942627, 2.2945241928100586, 2.294613838195801, 2.2947139739990234, 2.29482364654541, 2.2949278354644775, 2.295023202896118, 2.2951154708862305, 2.2952098846435547, 2.295302629470825, 2.295382261276245, 2.2954530715942383, 2.2955191135406494, 2.295569896697998, 2.2956106662750244, 2.2956411838531494, 2.2956557273864746, 2.295661687850952, 2.2956602573394775, 2.295652389526367, 2.2956268787384033, 2.2955799102783203], "val_accuracy": [0.08766666799783707, 0.08833333104848862, 0.08900000154972076, 0.09000000357627869, 0.09099999815225601, 0.09000000357627869, 0.09233333170413971, 0.0949999988079071, 0.09700000286102295, 0.10000000149011612, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10433333367109299, 0.10700000077486038, 0.11166666448116302, 0.1146666631102562, 0.11400000005960464, 0.11666666716337204, 0.12333333492279053, 0.13233333826065063, 0.1459999978542328, 0.15833333134651184, 0.17299999296665192, 0.1863333284854889, 0.20533333718776703, 0.2226666659116745, 0.23866666853427887, 0.2553333342075348, 0.2653333246707916, 0.2750000059604645, 0.2823333442211151, 0.2943333387374878, 0.30433332920074463, 0.3073333203792572, 0.31433331966400146, 0.3216666579246521, 0.32499998807907104, 0.3266666531562805, 0.3283333480358124, 0.33133333921432495, 0.33000001311302185, 0.32466667890548706, 0.32233333587646484, 0.31966665387153625, 0.3233333230018616]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 3, 2], [0, 39, 36], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 1, 6, 3, 8, 2, 7, 8], [0, 0, 2, 0, 3, 1, 0, 5], [54, 27, 16, 0], [0, 0, 1, 1], [0, 3], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 18, 10, 8, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11610091477632523, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 8, 7, 0, 4, 8, 2], [0, 0, 3, 2, 3, 1, 2], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 7, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309790849685669, 2.3101401329040527, 2.3087918758392334, 2.309720039367676, 2.308732271194458, 2.3105194568634033], "accuracy": [0.09219389408826828, 0.09192973375320435, 0.09272222965955734, 0.08968432247638702, 0.08981640636920929, 0.08889182657003403], "val_loss": [2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 1, 7, 8], [0, 0, 1, 0, 1], [29, 6, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 1, 2, 0, 3, 1, 1], [0, 27, 16, 0], [1, 0, 1, 1], [0, 5], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31018328666687, 2.3106651306152344, 2.3097920417785645, 2.3107078075408936, 2.3096585273742676, 2.309375762939453], "accuracy": [0.09457138925790787, 0.08875974267721176, 0.09853387624025345, 0.0944393053650856, 0.08836349099874496, 0.09576013684272766], "val_loss": [2.309457778930664, 2.309457778930664, 2.309457778930664, 2.309457778930664, 2.309457778930664, 2.309457778930664], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]