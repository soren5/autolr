[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.572250247001648, 0.8548324108123779, 0.7239619493484497, 0.6537827849388123, 0.5908397436141968, 0.5672357678413391, 0.5490962862968445, 0.5769360065460205, 0.5364657640457153, 0.5175898671150208, 0.5333629250526428, 0.5092797875404358, 0.5301761031150818, 0.5023452043533325, 0.4668007791042328, 0.4490618407726288, 0.49014511704444885, 0.4872366487979889, 0.4933306872844696, 0.4903123080730438], "accuracy": [0.4694227874279022, 0.7004358768463135, 0.7378153204917908, 0.7577598690986633, 0.7823272943496704, 0.7924976944923401, 0.7938185334205627, 0.8076872229576111, 0.7971205711364746, 0.8210275769233704, 0.7991018295288086, 0.8123101592063904, 0.8090080618858337, 0.8249900937080383, 0.8301413059234619, 0.8363492488861084, 0.8267071843147278, 0.8224804997444153, 0.833179235458374, 0.8298771381378174], "val_loss": [0.8229337334632874, 0.6461024284362793, 0.567223310470581, 0.5168814063072205, 0.47757214307785034, 0.49522870779037476, 0.4977479577064514, 0.48170140385627747, 0.46843695640563965, 0.5283768773078918, 0.5230113863945007, 0.49387475848197937, 0.4921695291996002, 0.4885927438735962, 0.47495272755622864, 0.4680872857570648, 0.5105010867118835, 0.49868327379226685, 0.497534841299057, 0.4956875145435333], "val_accuracy": [0.6936666369438171, 0.7580000162124634, 0.7726666927337646, 0.8113333582878113, 0.8180000185966492, 0.8180000185966492, 0.8209999799728394, 0.828000009059906, 0.8270000219345093, 0.8116666674613953, 0.8143333196640015, 0.809333324432373, 0.8316666483879089, 0.8383333086967468, 0.8476666808128357, 0.8370000123977661, 0.8303333520889282, 0.8443333506584167, 0.8416666388511658, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 9, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 9, 1, 1, 0, 3, 9, 6, 0, 4, 9], [0, 0, 2, 3, 5, 1, 0, 5, 3], [0, 0, 16, 59, 78, 47], [0, 0, 1, 1], [0, 7], [2, 6], [0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 4, 1, 8, 7, 4, 6, 0, 1, 9, 5, 0, 8, 3, 7], [2, 0, 2, 1, 5, 7, 4, 7], [0, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 27, 18, 9, 6, 4, 2, 2, 0, 23, 15, 8, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.subtract(tf.math.negative(tf.math.multiply(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(grad, grad), grad))))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 0, 0, 3, 1, 2], [0, 27, 16, 16], [0, 0, 1, 1], [0, 5], [0, 7], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4945054054260254, 2.3524842262268066, 2.3045477867126465, 2.303480863571167, 2.3031299114227295, 2.3029680252075195], "accuracy": [0.177255317568779, 0.18399155139923096, 0.09800554811954498, 0.10051512718200684, 0.09602430462837219, 0.09813763201236725], "val_loss": [2.2965548038482666, 2.3063554763793945, 2.3033857345581055, 2.302802562713623, 2.302689552307129, 2.3026316165924072], "val_accuracy": [0.10100000351667404, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [88, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 3, 0, 3, 1, 0], [0, 27, 61, 0], [0, 0, 1, 1], [0, 7], [4, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 6, 4, 2, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037350177764893, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 9], [0, 0, 1, 0, 1, 1, 1], [7, 7, 7], [2, 7, 1, 0], [0], [1], [0], [0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 7, 3, 4, 1, 1, 0, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.308882713317871, 2.310539960861206, 2.312330484390259, 2.3092520236968994, 2.3106343746185303, 2.3080129623413086], "accuracy": [0.09311848133802414, 0.08942015469074249, 0.08968432247638702, 0.09509972482919693, 0.09206181764602661, 0.0944393053650856], "val_loss": [2.308892250061035, 2.308892250061035, 2.308892250061035, 2.308892250061035, 2.308892250061035, 2.308892250061035], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]