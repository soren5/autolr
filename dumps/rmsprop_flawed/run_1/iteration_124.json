[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8357142806053162, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.667508840560913, 0.9428143501281738, 0.7241913676261902, 0.6505811810493469, 0.6189755797386169, 0.6080970168113708, 0.5816611051559448, 0.5678912401199341, 0.5243993401527405, 0.5247946977615356, 0.4925345778465271, 0.5030156970024109, 0.4899226129055023, 0.5185229778289795, 0.5319874882698059, 0.5236928462982178, 0.5198360085487366, 0.516572117805481], "accuracy": [0.46466779708862305, 0.6745476126670837, 0.7320036888122559, 0.7585523724555969, 0.776251494884491, 0.7749306559562683, 0.7952714562416077, 0.791441023349762, 0.8103289008140564, 0.8136309385299683, 0.8226125836372375, 0.8238013386726379, 0.8231409192085266, 0.8204993009567261, 0.8153480291366577, 0.8227446675300598, 0.8132346868515015, 0.828292191028595], "val_loss": [0.9566047191619873, 0.7006642818450928, 0.6289793848991394, 0.5865663290023804, 0.5806887745857239, 0.6283963918685913, 0.5670796632766724, 0.5263939499855042, 0.5614894032478333, 0.504317045211792, 0.5753936171531677, 0.5797096490859985, 0.5488799810409546, 0.6060269474983215, 0.6956827640533447, 0.6120378971099854, 0.6347631216049194, 0.750714898109436], "val_accuracy": [0.6823333501815796, 0.7523333430290222, 0.7633333206176758, 0.7860000133514404, 0.7926666736602783, 0.7906666398048401, 0.8016666769981384, 0.8183333277702332, 0.8199999928474426, 0.8230000138282776, 0.8203333616256714, 0.8166666626930237, 0.8276666402816772, 0.8196666836738586, 0.8193333148956299, 0.8213333487510681, 0.809333324432373, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5, 6, 6, 0, 8, 2, 4, 3, 1, 2, 5, 8, 3, 2, 8, 1, 1, 5, 1, 8, 7, 4, 3, 5, 0, 3, 1, 2, 5, 8, 1, 5, 7, 3, 1, 4, 7, 7, 7, 2, 9, 5, 1, 2, 4, 9], [0, 0, 1, 0, 2, 1, 0, 0, 1, 2, 0, 3, 3, 1, 0, 1, 3, 2, 0, 1, 2, 3, 2, 3, 1, 0, 0, 2, 0, 3, 3, 0, 3], [43, 39, 85, 78, 41, 72, 2, 73, 48, 58, 31, 37, 88, 80], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 4], [0, 1, 2, 0, 3, 1, 0], [0, 26, 16, 16], [0, 0, 1, 1], [0, 7], [5, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 84, 51, 33, 14, 15, 8, 7, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.sqrt(tf.math.add(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), grad), tf.math.subtract(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), grad))))), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.square(alpha), grad), grad), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), alpha)), grad))), tf.math.subtract(tf.math.square(grad), tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.subtract(grad, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 1, 77], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [3, 0, 2, 0, 3, 1, 0], [0, 27, 16, 65], [0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 3, 5], [0, 7, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.992232799530029, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1970677524805069, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [352.2415771484375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 1], [0, 3, 1, 3, 0], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 3, 1, 6, 3, 8, 2], [2, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091518878936768, 2.309925079345703, 2.310239315032959, 2.3081092834472656, 2.310007333755493, 2.3088696002960205], "accuracy": [0.09047681838274002, 0.09008057415485382, 0.08717474341392517, 0.09311848133802414, 0.08981640636920929, 0.09826971590518951], "val_loss": [2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 1, 3, 7], [0, 1, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 0], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 7, 4, 3, 1, 13, 7, 6, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103294372558594, 2.3102142810821533, 2.3108110427856445, 2.3110828399658203, 2.3096578121185303, 2.309720277786255], "accuracy": [0.08651433140039444, 0.09060890227556229, 0.08968432247638702, 0.08968432247638702, 0.09166556596755981, 0.09272222965955734], "val_loss": [2.308328866958618, 2.308328866958618, 2.308328866958618, 2.308328866958618, 2.308328866958618, 2.308328866958618], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]