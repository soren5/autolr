[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [2, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 4, 9], [3, 0, 2, 0, 3, 4, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8434285521507263, "mapping_values": [1, 1, 0, 1, 0, 14, 8, 6, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.29195499420166, 2.1937334537506104, 1.8141051530838013, 1.3415029048919678, 1.0737595558166504, 0.927452802658081, 0.8234714269638062, 0.7852979302406311, 0.7356836795806885, 0.7204012274742126, 0.7030078172683716, 0.6763902902603149, 0.6606083512306213, 0.6495470404624939, 0.6411579847335815, 0.6273891925811768, 0.6167758107185364, 0.609295666217804, 0.5938370823860168, 0.5887516140937805, 0.5797153115272522, 0.5609214901924133, 0.5575540065765381, 0.5442205667495728, 0.5383793711662292, 0.5282980799674988, 0.5099326372146606, 0.5127136707305908, 0.5038633346557617, 0.486563116312027, 0.4836852550506592, 0.4746535122394562, 0.4659605324268341, 0.47058477997779846, 0.444220632314682, 0.45308932662010193, 0.4363168776035309, 0.42786651849746704, 0.42473524808883667, 0.42547619342803955, 0.4204214811325073, 0.42134207487106323, 0.4149152338504791, 0.41127902269363403, 0.40631556510925293], "accuracy": [0.13591335713863373, 0.32281073927879333, 0.43785497546195984, 0.5406154990196228, 0.6272619366645813, 0.6783780455589294, 0.6960771083831787, 0.7103421092033386, 0.7213049530982971, 0.7235503792762756, 0.7285695672035217, 0.7342491149902344, 0.7514199018478394, 0.7576277852058411, 0.7537974119186401, 0.7643640041351318, 0.7705719470977783, 0.7668735980987549, 0.7729493975639343, 0.7623828053474426, 0.7757231593132019, 0.7828556299209595, 0.7869502305984497, 0.7965922355651855, 0.8001585006713867, 0.8039889335632324, 0.8088759779930115, 0.8061022162437439, 0.8095363974571228, 0.8191784620285034, 0.8208954930305481, 0.8215559124946594, 0.8259146809577942, 0.8232730031013489, 0.8334434032440186, 0.8290846943855286, 0.8358209133148193, 0.8432175517082214, 0.839519202709198, 0.843481719493866, 0.8411042094230652, 0.8428213000297546, 0.8445383906364441, 0.8421608805656433, 0.8451988101005554], "val_loss": [2.247300386428833, 2.0392189025878906, 1.2656948566436768, 0.8816918134689331, 0.8509318232536316, 0.7678406834602356, 0.6859014630317688, 0.653607189655304, 0.6384851336479187, 0.6154675483703613, 0.5894441604614258, 0.5810980796813965, 0.585244357585907, 0.5748409628868103, 0.5650626420974731, 0.5593145489692688, 0.5412678718566895, 0.5303638577461243, 0.5352540612220764, 0.5195192098617554, 0.5274715423583984, 0.5181618332862854, 0.49921274185180664, 0.4885275959968567, 0.47751736640930176, 0.48021313548088074, 0.4790182411670685, 0.4639523923397064, 0.4546603858470917, 0.45705854892730713, 0.44675150513648987, 0.4454840421676636, 0.4538617730140686, 0.4427127540111542, 0.44319596886634827, 0.42629581689834595, 0.4258291721343994, 0.42356395721435547, 0.42915746569633484, 0.42673829197883606, 0.4206596612930298, 0.42425084114074707, 0.4201853573322296, 0.43164199590682983, 0.43344706296920776], "val_accuracy": [0.43299999833106995, 0.46833333373069763, 0.6226666569709778, 0.67166668176651, 0.7153333425521851, 0.7200000286102295, 0.7350000143051147, 0.7459999918937683, 0.746666669845581, 0.7636666893959045, 0.7793333530426025, 0.7673333287239075, 0.778333306312561, 0.777999997138977, 0.7833333611488342, 0.7900000214576721, 0.7993333339691162, 0.8053333163261414, 0.8056666851043701, 0.8083333373069763, 0.7853333353996277, 0.8076666593551636, 0.8133333325386047, 0.8243333101272583, 0.824999988079071, 0.8266666531562805, 0.8236666917800903, 0.8360000252723694, 0.8349999785423279, 0.831333339214325, 0.8373333215713501, 0.8366666436195374, 0.831333339214325, 0.8386666774749756, 0.8386666774749756, 0.843999981880188, 0.843999981880188, 0.8486666679382324, 0.8536666631698608, 0.8550000190734863, 0.8526666760444641, 0.8443333506584167, 0.8529999852180481, 0.8500000238418579, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741257667541504, 0.852375864982605, 0.7188090085983276, 0.6424533724784851, 0.604951024055481, 0.5494203567504883, 0.514083743095398, 0.49501219391822815, 0.5056870579719543, 0.48132821917533875, 0.49873068928718567, 0.49721983075141907, 0.47256648540496826, 0.4866008758544922, 0.5198191404342651, 0.5076775550842285, 0.4991002380847931, 0.49312153458595276, 0.5123242735862732, 0.5410614013671875, 0.5490894913673401], "accuracy": [0.4748381972312927, 0.7059833407402039, 0.7368907928466797, 0.7543256878852844, 0.7865539789199829, 0.7979130744934082, 0.8107251524925232, 0.8267071843147278, 0.81548011302948, 0.8232730031013489, 0.8214238286018372, 0.8276317715644836, 0.8290846943855286, 0.8313300609588623, 0.819442629814148, 0.821820080280304, 0.8247259259223938, 0.8383304476737976, 0.8227446675300598, 0.8286884427070618, 0.8191784620285034], "val_loss": [0.8454893231391907, 0.660936713218689, 0.5753248929977417, 0.5502074956893921, 0.5413045287132263, 0.5191186666488647, 0.5269740223884583, 0.5276317596435547, 0.5293283462524414, 0.5158898830413818, 0.6517561078071594, 0.5666059851646423, 0.5680646896362305, 0.6576630473136902, 0.6352623105049133, 0.5755237340927124, 0.6441361308097839, 0.6211320757865906, 0.608540952205658, 0.6865974068641663, 0.6893863677978516], "val_accuracy": [0.7170000076293945, 0.7570000290870667, 0.7770000100135803, 0.8023333549499512, 0.8119999766349792, 0.8316666483879089, 0.8193333148956299, 0.8276666402816772, 0.8339999914169312, 0.8323333263397217, 0.8253333568572998, 0.8240000009536743, 0.8339999914169312, 0.8396666646003723, 0.8306666612625122, 0.8426666855812073, 0.8396666646003723, 0.8326666951179504, 0.8270000219345093, 0.8226666450500488, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [2, 3, 3, 1, 1, 5, 1, 7, 5, 6, 1, 8, 2, 1, 1, 5, 6, 2, 8, 9, 0, 5, 9, 5, 5, 6, 7, 9], [0, 0, 1, 0, 1, 3, 2, 2, 3, 2, 0, 1, 3, 2], [0, 39, 77, 85, 13, 12, 87], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 3, 1, 7, 3, 4, 0], [0, 0, 2, 5, 3, 1, 0, 5, 4, 4, 2, 5], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [0, 0, 1, 1], [0, 4], [2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 28, 14, 7, 26, 14, 12, 3, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), grad), grad)), grad), tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.negative(tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.subtract(grad, grad), alpha))), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)), grad)))), beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 1, 3, 0], [0, 27, 16, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 7, 1, 1, 2, 8, 5, 9, 1, 6, 8, 2, 7, 2, 5, 9, 8, 0, 9], [4, 5, 5, 4, 7, 1, 2], [0, 96, 31], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 26, 19, 7, 3, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.square(grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), alpha), beta)), tf.math.sqrt(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [26, 39, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 7, 6, 3, 5, 2], [2, 0, 5, 0, 3, 1, 0], [85, 69, 16, 0], [0, 0, 1, 1], [0, 1], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310075044631958, 2.309849977493286, 2.310731887817383, 2.310588836669922, 2.3108110427856445, 2.310270309448242], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.0878351628780365, 0.09166556596755981, 0.09457138925790787, 0.08532558381557465], "val_loss": [2.3087058067321777, 2.3087058067321777, 2.3087058067321777, 2.3087058067321777, 2.3087058067321777, 2.3087058067321777], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]