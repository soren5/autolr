[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8420000076293945, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5321000814437866, 0.8762044906616211, 0.6950653195381165, 0.6245458126068115, 0.5728849172592163, 0.5448288321495056, 0.4974496066570282, 0.5025383234024048, 0.502230703830719, 0.48791563510894775, 0.5151405930519104, 0.5221247673034668, 0.5161311030387878, 0.5286874175071716, 0.5032570362091064, 0.5258702039718628, 0.5158066153526306, 0.5054153800010681, 0.5092363953590393, 0.5327770709991455, 0.5476793646812439, 0.5939062237739563, 0.5350328087806702, 0.5765784382820129], "accuracy": [0.4855369031429291, 0.7140403985977173, 0.7553823590278625, 0.767930269241333, 0.7938185334205627, 0.8078193068504333, 0.8236692547798157, 0.8210275769233704, 0.8187822103500366, 0.8301413059234619, 0.8359529972076416, 0.8222163319587708, 0.8342359066009521, 0.8333113193511963, 0.8274996876716614, 0.8301413059234619, 0.8207634687423706, 0.8260467648506165, 0.8403117060661316, 0.8338396549224854, 0.8358209133148193, 0.8127063512802124, 0.8289526104927063, 0.8171972036361694], "val_loss": [0.8880554437637329, 0.6287407279014587, 0.5546947717666626, 0.5525298118591309, 0.542270302772522, 0.5237311720848083, 0.4961744248867035, 0.5075333118438721, 0.49232715368270874, 0.5230562090873718, 0.5597582459449768, 0.518312394618988, 0.6842945218086243, 0.6023997664451599, 0.5981045365333557, 0.6087203025817871, 0.5812546014785767, 0.6138591170310974, 0.6659550666809082, 0.6206744313240051, 0.6700558662414551, 0.6955869197845459, 0.6430109143257141, 0.5986091494560242], "val_accuracy": [0.703000009059906, 0.7723333239555359, 0.784333348274231, 0.7953333258628845, 0.7996666431427002, 0.8140000104904175, 0.8209999799728394, 0.8206666707992554, 0.8169999718666077, 0.8236666917800903, 0.8186666369438171, 0.8206666707992554, 0.8296666741371155, 0.8163333535194397, 0.8173333406448364, 0.8276666402816772, 0.8143333196640015, 0.831333339214325, 0.8413333296775818, 0.8306666612625122, 0.8173333406448364, 0.815666675567627, 0.824999988079071, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 7, 8, 1, 4, 7, 1, 8, 6, 0, 2, 7, 0, 9], [0, 0, 1, 0, 2, 1, 2, 2, 0, 2, 1, 0], [0, 62, 77, 49, 78, 87], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 3, 2, 6, 0, 1, 5, 5], [0, 0, 2, 0, 3, 1, 0, 4, 5, 5], [0, 27, 16, 16], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 7, 5, 6, 7, 3, 8, 1], [0, 7, 0, 6, 1, 5], [6, 5], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 18, 12, 6, 23, 13, 10, 4, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.sqrt(grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.square(grad)), grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 1, 3, 6, 7, 0, 0, 1, 5, 7, 5, 2, 0, 7, 3, 4, 4, 8, 0, 9, 9, 7, 1, 4, 9], [0, 0, 1, 0, 2, 0, 3, 1, 1, 1, 2, 1, 0, 3, 0], [0, 39, 77, 57, 14, 58, 39, 43, 9], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 3, 1, 6, 3, 8, 2, 4, 1, 8, 6, 2, 1, 3, 5, 8, 0, 0, 2, 5, 0, 2, 0, 7, 9], [0, 0, 2, 4, 3, 1, 0, 1, 0, 2, 2, 4, 0, 2, 0, 2], [0, 27, 16, 16, 7, 87, 72], [0, 0, 1, 1], [0, 4], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 27, 15, 9, 42, 26, 16, 7, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.negative(alpha))), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.pow(alpha, tf.math.sqrt(alpha)), tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), beta)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 1, 4, 8, 8, 2], [0, 0, 2, 0, 3, 2, 3], [0, 72, 16, 0], [0, 0, 1, 0, 1], [1, 8, 5], [0, 7], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 14, 8, 6, 3, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 1, 1, 6, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 2, 4, 4, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 4], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110647201538086, 2.310009479522705, 2.310025930404663, 2.3107359409332275, 2.3104124069213867, 2.310450315475464], "accuracy": [0.09034473448991776, 0.0882314071059227, 0.09417514503002167, 0.08836349099874496, 0.09417514503002167, 0.0944393053650856], "val_loss": [2.3084492683410645, 2.3084492683410645, 2.3084492683410645, 2.3084492683410645, 2.3084492683410645, 2.3084492683410645], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]