[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6565418243408203, 0.9543019533157349, 0.7914039492607117, 0.754849910736084, 0.7076857089996338, 0.6351273655891418, 0.6232892870903015, 0.5805808901786804, 0.5742667317390442, 0.5621122717857361, 0.5333040356636047, 0.5119155645370483, 0.5058823227882385, 0.5099615454673767, 0.47905799746513367, 0.4736328721046448, 0.49099913239479065, 0.46125105023384094, 0.4760952293872833, 0.47795504331588745, 0.5292807817459106, 0.4997424781322479, 0.5186835527420044, 0.5671700835227966, 0.5734143853187561], "accuracy": [0.46413949131965637, 0.6812838315963745, 0.7140403985977173, 0.7259278893470764, 0.7543256878852844, 0.7705719470977783, 0.7691190242767334, 0.7848368883132935, 0.785101056098938, 0.7950072884559631, 0.805177628993988, 0.8079513907432556, 0.8289526104927063, 0.8150838613510132, 0.8090080618858337, 0.8290846943855286, 0.8285563588142395, 0.8207634687423706, 0.829216718673706, 0.8337075710296631, 0.8152159452438354, 0.8264430165290833, 0.8387266993522644, 0.8145555257797241, 0.8063663840293884], "val_loss": [0.8639315366744995, 0.6904717087745667, 0.6076127886772156, 0.6020874977111816, 0.5613653063774109, 0.5390316843986511, 0.49493351578712463, 0.5187734365463257, 0.5061295628547668, 0.5080615282058716, 0.47356030344963074, 0.4952736794948578, 0.4680353105068207, 0.4775265157222748, 0.49266505241394043, 0.49066057801246643, 0.4802806079387665, 0.5167639255523682, 0.498543381690979, 0.5669756531715393, 0.5881820321083069, 0.5783656239509583, 0.6951452493667603, 0.5956385731697083, 0.5596893429756165], "val_accuracy": [0.690666675567627, 0.7509999871253967, 0.7756666541099548, 0.7633333206176758, 0.79666668176651, 0.7956666946411133, 0.828000009059906, 0.8146666884422302, 0.8169999718666077, 0.8286666870117188, 0.8356666564941406, 0.8379999995231628, 0.8450000286102295, 0.8270000219345093, 0.846666693687439, 0.8506666421890259, 0.8510000109672546, 0.8396666646003723, 0.8510000109672546, 0.8516666889190674, 0.8326666951179504, 0.843999981880188, 0.8453333377838135, 0.8343333601951599, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [2, 5, 3, 1, 1, 5, 4], [0, 0, 1, 0, 2, 2, 3], [0, 12, 77], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 2, 0, 3, 1, 0], [0, 76, 16, 16], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 6, 4, 6, 5, 4, 6, 8, 4, 3, 7, 4, 1, 7, 2, 2, 6, 5, 9, 8, 4, 7, 9, 6, 1, 7, 1, 7, 7, 0, 6, 6, 2, 2, 3, 2, 9, 7, 3, 2, 5, 9, 8, 2, 6, 6, 0, 3], [0, 6, 7, 7, 2, 0, 3, 0, 0, 2, 2, 4, 5, 4, 4, 2, 2, 0, 1, 1, 3, 2, 3, 0, 5, 0, 2, 1, 7, 0, 0, 1, 5], [0, 29, 63, 94, 74, 14, 94, 40, 63, 25, 17, 4, 62], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 2, 82, 49, 33, 13, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), beta), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), tf.math.pow(tf.math.multiply(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.subtract(grad, tf.math.add(grad, tf.math.subtract(grad, grad))))), beta))), tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), tf.math.divide_no_nan(alpha, sigma)), beta)), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), beta), tf.math.sqrt(alpha)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha)), grad))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038058280944824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [2, 0, 1, 0, 2], [89, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 0, 2], [3, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [413.5931701660156, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19984149932861328, 0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4192.423828125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.061666667461395264, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 5, 3, 1, 5], [87, 78, 49, 16], [0, 1, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 7, 0, 5, 5, 3, 1, 6], [0, 2, 2, 2, 3, 0, 1], [0, 27, 16, 0], [0, 1, 1, 1], [0, 7], [4, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 7, 5, 2, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3096864223480225, 2.3107218742370605, 2.31024169921875, 2.309800624847412, 2.309565544128418, 2.309708833694458], "accuracy": [0.09338264167308807, 0.09021265059709549, 0.09192973375320435, 0.09060890227556229, 0.09734513610601425, 0.09879804402589798], "val_loss": [2.3083746433258057, 2.3083746433258057, 2.3083746433258057, 2.3083746433258057, 2.3083746433258057, 2.3083746433258057], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]