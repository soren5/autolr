[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5744211673736572, 0.8415982127189636, 0.6744484305381775, 0.6148642301559448, 0.5588738322257996, 0.5521153807640076, 0.5171462893486023, 0.5125027298927307, 0.519158661365509, 0.49612605571746826, 0.47382864356040955, 0.4787949025630951, 0.4547516703605652, 0.46270301938056946, 0.4439547061920166, 0.47047561407089233, 0.5039483904838562, 0.4751116633415222, 0.467763215303421, 0.4904269874095917, 0.4899049997329712, 0.4690394997596741, 0.48879626393318176], "accuracy": [0.4855369031429291, 0.715889573097229, 0.7617223858833313, 0.7700436115264893, 0.7886672616004944, 0.8012151718139648, 0.8117818236351013, 0.8131026029586792, 0.8173292875289917, 0.8222163319587708, 0.8296129703521729, 0.8208954930305481, 0.8352925777435303, 0.8318583965301514, 0.8412362933158875, 0.8339717388153076, 0.839519202709198, 0.8380662798881531, 0.8376700282096863, 0.829216718673706, 0.8379341959953308, 0.8286884427070618, 0.8383304476737976], "val_loss": [0.8497527837753296, 0.6258829236030579, 0.5595620274543762, 0.535759687423706, 0.495755136013031, 0.504570722579956, 0.5197052955627441, 0.48189136385917664, 0.4978788197040558, 0.5107498168945312, 0.5352425575256348, 0.5360184907913208, 0.48686838150024414, 0.5170636177062988, 0.5124273896217346, 0.5430014729499817, 0.5624554753303528, 0.534018337726593, 0.5607721209526062, 0.602560818195343, 0.5594967603683472, 0.5750592350959778, 0.6088775396347046], "val_accuracy": [0.7086666822433472, 0.781333327293396, 0.8063333630561829, 0.7986666560173035, 0.8216666579246521, 0.8306666612625122, 0.8186666369438171, 0.8453333377838135, 0.8360000252723694, 0.8463333249092102, 0.8289999961853027, 0.8383333086967468, 0.8399999737739563, 0.8506666421890259, 0.8450000286102295, 0.8349999785423279, 0.8543333411216736, 0.8566666841506958, 0.8366666436195374, 0.8389999866485596, 0.8413333296775818, 0.8403333425521851, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [5, 0, 2, 0, 3, 1, 0], [0, 27, 16, 37], [0, 0, 1, 1], [8, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.811914210371546e+22, 274547.5, 46631752.0, 7945285632.0, 1348989353984.0, 228318615961600.0], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13731.7763671875, 2359273.5, 403161088.0, 68400787456.0, 11640248467456.0, 1971708084879360.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 5, 1, 6, 0, 1, 2], [0, 0, 2, 0, 5, 1, 3], [0, 27, 16, 16], [1, 1, 1, 1], [0, 7], [4, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 3, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 4, 4, 9, 7, 1, 8, 7, 8, 8], [0, 0, 1, 0, 0, 1, 1, 2, 3], [0, 39, 39, 7, 73], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 35, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 24, 15, 9, 5, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(alpha)))), tf.math.add(tf.math.sqrt(tf.math.sqrt(grad)), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096923828125, 2.3119537830352783, 2.3097920417785645, 2.309117078781128, 2.309221029281616, 2.309659242630005], "accuracy": [0.09338264167308807, 0.08942015469074249, 0.09232597798109055, 0.09377889335155487, 0.09470347315073013, 0.08981640636920929], "val_loss": [2.3079183101654053, 2.3079183101654053, 2.3079183101654053, 2.3079183101654053, 2.3079183101654053, 2.3079183101654053], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 0, 3, 1, 0], [0, 27, 8, 16], [0, 0, 1, 1], [0, 1], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098483085632324, 2.30940318107605, 2.3107235431671143, 2.3104066848754883, 2.3093953132629395, 2.3090944290161133], "accuracy": [0.09285431355237961, 0.09113723784685135, 0.08651433140039444, 0.09259014576673508, 0.09245806187391281, 0.09153348207473755], "val_loss": [2.308713436126709, 2.308713436126709, 2.308713436126709, 2.308713436126709, 2.308713436126709, 2.308713436126709], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]