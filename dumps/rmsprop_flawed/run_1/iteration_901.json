[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.567413568496704, 0.8767409324645996, 0.6963736414909363, 0.6510089635848999, 0.6068634390830994, 0.565034031867981, 0.5352579355239868, 0.5164227485656738, 0.5156967043876648, 0.5296404361724854, 0.5307176113128662, 0.6377230882644653, 0.5416620969772339, 0.5731611847877502, 0.5956525206565857, 0.5888259410858154, 0.5592882037162781, 0.5693524479866028, 0.5951881408691406, 0.6580730676651001, 0.6567694544792175, 0.6516119241714478], "accuracy": [0.4854048490524292, 0.6995112895965576, 0.7514199018478394, 0.7600052952766418, 0.7753269076347351, 0.7935543656349182, 0.8018755912780762, 0.8197067975997925, 0.8173292875289917, 0.8149517774581909, 0.8186501264572144, 0.7955356240272522, 0.8146876096725464, 0.8142913579940796, 0.8041210174560547, 0.8070268034934998, 0.8087438941001892, 0.8099326491355896, 0.804649293422699, 0.7957997918128967, 0.7932901978492737, 0.8001585006713867], "val_loss": [0.882779598236084, 0.6509288549423218, 0.5833844542503357, 0.5580215454101562, 0.5683606863021851, 0.5329461097717285, 0.5677753686904907, 0.5257908701896667, 0.5619340538978577, 0.5868832468986511, 0.8050296306610107, 0.637215793132782, 0.6079756021499634, 0.6395944952964783, 0.6457183957099915, 0.5696509480476379, 0.6463879942893982, 0.5525711178779602, 0.5807397365570068, 0.6781638264656067, 0.6951866149902344, 0.8641335368156433], "val_accuracy": [0.6886666417121887, 0.7630000114440918, 0.7896666526794434, 0.7926666736602783, 0.7983333468437195, 0.8109999895095825, 0.8253333568572998, 0.8243333101272583, 0.8059999942779541, 0.8253333568572998, 0.8116666674613953, 0.8303333520889282, 0.8293333053588867, 0.8223333358764648, 0.8180000185966492, 0.828000009059906, 0.8333333134651184, 0.8270000219345093, 0.8133333325386047, 0.8243333101272583, 0.8180000185966492, 0.8140000104904175]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 64, 81, 53], [0, 1, 1, 1], [0, 7], [4, 1], [0], [1], [0], [2], [0]], "fitness": -0.13828571140766144, "mapping_values": [1, 9, 4, 5, 3, 12, 6, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [79949037568.0, 997647843328.0, 1836832784384.0, 2133668397056.0, 2320593846272.0, 2977204797440.0, 3000055889920.0, 3083728322560.0, 2966350725120.0, 3029297004544.0, 3015921631232.0], "accuracy": [0.1022322028875351, 0.11279883980751038, 0.11411966383457184, 0.10817593336105347, 0.11398758739233017, 0.11345925182104111, 0.1138555034995079, 0.11015717685222626, 0.11266675591468811, 0.11438383162021637, 0.1154404953122139], "val_loss": [306373165056.0, 1175098621952.0, 1474782298112.0, 1623048060928.0, 2273317224448.0, 2369320910848.0, 2400243154944.0, 2408545255424.0, 2412546883584.0, 2414917189632.0, 2416234463232.0], "val_accuracy": [0.1003333330154419, 0.1353333294391632, 0.13699999451637268, 0.13866665959358215, 0.13866665959358215, 0.1393333375453949, 0.1393333375453949, 0.1393333375453949, 0.1393333375453949, 0.1393333375453949, 0.1393333375453949]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 8, 1, 6, 3, 8, 3, 4, 9, 3, 7, 2, 7, 7, 3, 8, 8, 3, 0, 6, 1, 2, 6, 5], [0, 0, 2, 0, 3, 1, 0, 0, 1, 5, 5, 0, 3, 1, 2, 0, 3], [0, 27, 16, 16, 7, 16, 3, 77], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 42, 25, 17, 8, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.math.sqrt(tf.math.multiply(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.square(alpha), beta)))))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 6, 2, 5, 8, 7, 3, 9, 9], [0, 0, 2, 0, 3, 1, 0, 4], [0, 27, 16, 16, 39, 14], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 22, 14, 8, 6, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), alpha)), tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 3, 3, 3, 1, 0], [0, 1, 1, 2, 2, 1], [72, 39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 2, 0, 2, 1, 0], [0, 27, 94, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100781440734863, 2.309329032897949, 2.3089792728424072, 2.3092644214630127, 2.310473918914795, 2.3098273277282715], "accuracy": [0.0956280529499054, 0.09615638852119446, 0.09232597798109055, 0.09959053993225098, 0.09628847241401672, 0.09113723784685135], "val_loss": [2.3092305660247803, 2.3092305660247803, 2.3092305660247803, 2.3092305660247803, 2.3092305660247803, 2.3092305660247803], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]