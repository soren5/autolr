[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5508829355239868, 0.8152462840080261, 0.7104910612106323, 0.6170893907546997, 0.5687662363052368, 0.5678727030754089, 0.5204035639762878, 0.523783802986145, 0.5214874148368835, 0.5008473992347717, 0.4930827021598816, 0.49260538816452026, 0.4861467778682709, 0.5096462965011597, 0.4860278069972992, 0.5045087933540344, 0.49523136019706726, 0.5048085451126099, 0.5497285723686218, 0.5683441758155823, 0.5373514890670776, 0.549091637134552, 0.540440559387207, 0.5631380081176758], "accuracy": [0.4861973226070404, 0.7312111854553223, 0.7519482374191284, 0.7656848430633545, 0.7853652238845825, 0.7981772422790527, 0.8067626357078552, 0.8265751004219055, 0.8123101592063904, 0.8247259259223938, 0.8276317715644836, 0.8249900937080383, 0.8296129703521729, 0.8226125836372375, 0.8360850811004639, 0.8248580098152161, 0.8294808864593506, 0.8352925777435303, 0.8294808864593506, 0.822348415851593, 0.8267071843147278, 0.8148196935653687, 0.8269713521003723, 0.8181217908859253], "val_loss": [0.8254959583282471, 0.6044514775276184, 0.5234829783439636, 0.49285757541656494, 0.45198118686676025, 0.4507664442062378, 0.4415455758571625, 0.46454355120658875, 0.471629798412323, 0.46049603819847107, 0.41819217801094055, 0.4647168815135956, 0.4213767945766449, 0.48493465781211853, 0.46492984890937805, 0.5210089087486267, 0.4717227518558502, 0.4919872581958771, 0.57761150598526, 0.5054658055305481, 0.5421690344810486, 0.48201659321784973, 0.511517345905304, 0.5247509479522705], "val_accuracy": [0.7416666746139526, 0.7926666736602783, 0.8029999732971191, 0.8136666417121887, 0.831333339214325, 0.8363333344459534, 0.8513333201408386, 0.843666672706604, 0.8403333425521851, 0.8489999771118164, 0.8556666374206543, 0.8473333120346069, 0.8500000238418579, 0.8576666712760925, 0.8573333621025085, 0.8550000190734863, 0.8523333072662354, 0.8579999804496765, 0.8619999885559082, 0.8493333458900452, 0.8503333330154419, 0.8489999771118164, 0.8433333039283752, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 4], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 3, 2, 6, 3, 8, 2, 7, 6], [0, 0, 2, 4, 3, 1, 0, 0, 4], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [2, 4], [0], [0, 0, 1, 1], [0, 3], [5, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 19, 10, 9, 4, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, grad))", "other_info": {"loss": [2.311030387878418, 2.311298370361328, 2.3128435611724854, 2.3155274391174316, 2.3160197734832764, 2.318033218383789, 2.3216869831085205, 2.3239431381225586, 2.327505111694336, 2.3303797245025635, 2.3328731060028076, 2.3359389305114746, 2.3457818031311035], "accuracy": [0.09060890227556229, 0.0948355570435524, 0.0940430611371994, 0.0940430611371994, 0.09509972482919693, 0.09747721254825592, 0.09285431355237961, 0.09708096832036972, 0.09655263274908066, 0.0952318087220192, 0.09615638852119446, 0.09509972482919693, 0.09840179979801178], "val_loss": [2.309380531311035, 2.3108344078063965, 2.312286615371704, 2.314025640487671, 2.3155620098114014, 2.317296266555786, 2.3190674781799316, 2.321361780166626, 2.3237404823303223, 2.3261427879333496, 2.3292577266693115, 2.3339271545410156, 2.3438897132873535], "val_accuracy": [0.09133332967758179, 0.09300000220537186, 0.09466666728258133, 0.09700000286102295, 0.09799999743700027, 0.0989999994635582, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 2, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 4, 4, 1, 0, 1, 0, 2, 9, 4], [0, 5, 2, 0, 3, 1, 0, 2, 3, 3, 3], [0, 27, 16, 16], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 7, 1, 0, 2, 5, 0], [0, 7, 3, 6], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 0, 2, 6, 7, 2, 8, 2, 6, 8, 8, 2, 9, 6, 7, 3, 2, 2, 8, 7, 9, 7, 6, 1, 2, 6, 7, 6], [2, 0, 4, 4, 2, 7, 0, 6, 4, 0, 0, 1, 0, 4, 4, 0, 1, 6, 3, 7], [0, 25, 60, 7, 24, 40, 44, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 27, 16, 11, 4, 11, 7, 4, 1, 49, 29, 20, 8], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.pow(alpha, tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.sqrt(beta)), tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.add(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(alpha, grad), sigma), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 8, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 5, 1], [44, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108229637145996, 2.3102643489837646, 2.309502124786377, 2.3111844062805176, 2.3097875118255615, 2.310074806213379], "accuracy": [0.08942015469074249, 0.09087307006120682, 0.0936468094587326, 0.09021265059709549, 0.09179764986038208, 0.08889182657003403], "val_loss": [2.3087174892425537, 2.3087174892425537, 2.3087174892425537, 2.3087174892425537, 2.3087174892425537, 2.3087174892425537], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 7, 5], [0, 1, 1, 0, 2], [0, 39, 23], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 5], [0, 27, 22, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103652000427246, 2.3098573684692383, 2.309722900390625, 2.309978485107422, 2.31040096282959, 2.31052303314209], "accuracy": [0.08519349992275238, 0.08902391046285629, 0.08994849026203156, 0.09100515395402908, 0.08796724677085876, 0.08796724677085876], "val_loss": [2.30881667137146, 2.30881667137146, 2.30881667137146, 2.30881667137146, 2.30881667137146, 2.30881667137146], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]