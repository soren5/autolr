[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5352997779846191, 0.8132305145263672, 0.6900909543037415, 0.6204204559326172, 0.5970182418823242, 0.5633245706558228, 0.5590507388114929, 0.513851523399353, 0.4689316749572754, 0.47698765993118286, 0.48063963651657104, 0.48522108793258667, 0.521601676940918, 0.5043247938156128, 0.5299904942512512, 0.5092440247535706, 0.5078350305557251, 0.47429147362709045, 0.4812990725040436, 0.5111610889434814, 0.5746601223945618, 0.5452151298522949], "accuracy": [0.47629112005233765, 0.7199841737747192, 0.7515519857406616, 0.7745344042778015, 0.7820631265640259, 0.7915731072425842, 0.8067626357078552, 0.811649739742279, 0.8273676037788391, 0.8251221776008606, 0.8314621448516846, 0.8153480291366577, 0.8255184292793274, 0.8289526104927063, 0.8170651197433472, 0.8289526104927063, 0.8302733898162842, 0.8368775844573975, 0.8339717388153076, 0.8338396549224854, 0.8187822103500366, 0.8117818236351013], "val_loss": [0.7785916328430176, 0.6593586206436157, 0.5879335403442383, 0.5461831092834473, 0.5410013198852539, 0.5668659806251526, 0.5329077243804932, 0.529707133769989, 0.5397517085075378, 0.5156993269920349, 0.5263821482658386, 0.5775762796401978, 0.5766038298606873, 0.5572547912597656, 0.5549268126487732, 0.5895463228225708, 0.5996220707893372, 0.5979495644569397, 0.6387947797775269, 0.6057924628257751, 0.5739913582801819, 0.5591391324996948], "val_accuracy": [0.7446666955947876, 0.753333330154419, 0.7856666445732117, 0.8019999861717224, 0.8040000200271606, 0.8163333535194397, 0.8183333277702332, 0.8190000057220459, 0.8220000267028809, 0.8243333101272583, 0.8360000252723694, 0.8240000009536743, 0.8410000205039978, 0.8299999833106995, 0.8226666450500488, 0.828000009059906, 0.8433333039283752, 0.8296666741371155, 0.8353333473205566, 0.82833331823349, 0.8276666402816772, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [8, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [30, 39, 39, 13], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 5, 2, 0, 3, 1, 0], [0, 82, 16, 71], [0, 0, 1, 0, 1], [0, 7, 5], [0, 6], [0], [1], [0], [6], [0]], "fitness": -0.23685714602470398, "mapping_values": [1, 8, 4, 4, 4, 15, 8, 7, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3275625705718994, 2.946916103363037, 2.309082269668579, 2.2937705516815186, 2.3105931282043457, 2.3072307109832764], "accuracy": [0.2036719024181366, 0.19455818831920624, 0.09470347315073013, 0.14568749070167542, 0.09681680053472519, 0.10791176557540894], "val_loss": [2.214956283569336, 2.319145441055298, 2.3004751205444336, 2.31791353225708, 2.3051950931549072, 2.3036746978759766], "val_accuracy": [0.23066666722297668, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 5, 3, 1, 3, 5], [2, 0, 1, 0, 3], [0, 39, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 4, 6, 3, 0, 2], [0, 0, 2, 0, 3, 4, 0], [0, 27, 16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10085714608430862, "mapping_values": [1, 7, 4, 3, 1, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [159.57427978515625, 17367.24609375, 380494.84375, 3645186.75, 20113210.0, 79932088.0, 253704432.0], "accuracy": [0.10276053100824356, 0.09259014576673508, 0.09734513610601425, 0.09325055778026581, 0.09681680053472519, 0.09721305221319199, 0.09853387624025345], "val_loss": [722.8090209960938, 61532.69140625, 1141579.75, 8715640.0, 41738736.0, 149564864.0, 439368032.0], "val_accuracy": [0.09366666525602341, 0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 3, 4, 6, 3, 8, 2, 4, 0, 7, 2, 4, 9, 9], [0, 0, 2, 0, 3, 1, 2, 3, 4], [0, 27, 16, 0, 77], [0, 0, 1, 1], [0, 7], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 24, 15, 9, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.pow(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [9, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 3, 1, 6, 3, 8, 2], [5, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 7, 1, 1, 0, 8, 6], [0, 4, 2, 6, 7], [0], [0, 1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 1, 0, 1, 8, 4, 4, 2, 12, 7, 5, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.negative(tf.math.sqrt(beta)))), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3096420764923096, 2.30963397026062, 2.3110883235931396, 2.3100104331970215, 2.3104248046875, 2.309842109680176], "accuracy": [0.09126931428909302, 0.08836349099874496, 0.09100515395402908, 0.09179764986038208, 0.08955223858356476, 0.0956280529499054], "val_loss": [2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]