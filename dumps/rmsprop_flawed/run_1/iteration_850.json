[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5515449047088623, 0.8059033751487732, 0.6973258256912231, 0.6038922071456909, 0.5583752393722534, 0.5217835903167725, 0.49481362104415894, 0.5327075123786926, 0.4843425452709198, 0.48428165912628174, 0.4688552916049957, 0.46409666538238525, 0.48797449469566345, 0.48633483052253723, 0.49222832918167114, 0.5018962025642395, 0.5192719101905823, 0.5063302516937256, 0.5070522427558899, 0.48716869950294495], "accuracy": [0.48566898703575134, 0.7147008180618286, 0.7500990629196167, 0.7744023203849792, 0.7987055778503418, 0.8124422430992126, 0.8247259259223938, 0.81548011302948, 0.82683926820755, 0.8309338092803955, 0.8339717388153076, 0.8381983637809753, 0.833179235458374, 0.8360850811004639, 0.8166688680648804, 0.8337075710296631, 0.8253863453865051, 0.8411042094230652, 0.8249900937080383, 0.8289526104927063], "val_loss": [0.8271889686584473, 0.6374063491821289, 0.5580074787139893, 0.5139855742454529, 0.5219485759735107, 0.4828724265098572, 0.5413275361061096, 0.4877583384513855, 0.4874803125858307, 0.4966127872467041, 0.481045663356781, 0.5852664709091187, 0.5364976525306702, 0.6073864102363586, 0.5399237275123596, 0.5487909317016602, 0.5381125211715698, 0.5459226369857788, 0.5419490337371826, 0.5795217752456665], "val_accuracy": [0.7146666646003723, 0.7720000147819519, 0.7996666431427002, 0.815666675567627, 0.8259999752044678, 0.8323333263397217, 0.8136666417121887, 0.8389999866485596, 0.8339999914169312, 0.8323333263397217, 0.8349999785423279, 0.8429999947547913, 0.8316666483879089, 0.8463333249092102, 0.8496666550636292, 0.8373333215713501, 0.8460000157356262, 0.8453333377838135, 0.8316666483879089, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [61, 39, 77], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 6, 4, 7, 3, 0, 3, 9, 8], [0, 0, 2, 3, 3, 1, 0, 4, 1, 0, 2], [78, 27, 16, 16, 71], [1, 1, 1, 0], [0, 7], [4, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 28, 17, 11, 5, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), grad)), tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [9, 2, 3, 1, 6, 2, 9, 5], [0, 0, 2, 0, 3, 1, 2], [0, 27, 16, 16], [1, 0, 1, 0], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309511423110962, 2.311170816421509, 2.309851884841919, 2.3104822635650635, 2.3098042011260986, 2.310046672821045], "accuracy": [0.08994849026203156, 0.09113723784685135, 0.08928807079792023, 0.08928807079792023, 0.09589222073554993, 0.08875974267721176], "val_loss": [2.3094124794006348, 2.3094124794006348, 2.3094124794006348, 2.3094124794006348, 2.3094124794006348, 2.3094124794006348], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [1, 39, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 1, 3, 8, 2], [3, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 7, 8, 6, 6, 1, 2, 1, 8], [4, 5, 1, 7, 1, 6, 4], [0], [1], [0], [0], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 3, 16, 9, 7, 0, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, alpha), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3111443519592285, 2.309612989425659, 2.3097925186157227, 2.3097329139709473, 2.3096916675567627, 2.310243844985962], "accuracy": [0.08836349099874496, 0.09430722147226334, 0.09034473448991776, 0.09008057415485382, 0.08651433140039444, 0.08981640636920929], "val_loss": [2.3095102310180664, 2.3095102310180664, 2.3095102310180664, 2.3095102310180664, 2.3095102310180664, 2.3095102310180664], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [2, 3, 3, 1, 1, 3, 5, 3, 2, 8], [2, 1, 0, 0, 2, 1, 0, 1, 3], [0, 92, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 5, 3, 1, 6, 3, 8, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 15], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.0868571400642395, "mapping_values": [1, 19, 10, 9, 3, 7, 4, 3, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101673126220703, 2.310718059539795, 2.310474157333374, 2.3091671466827393, 2.31014084815979, 2.310547351837158], "accuracy": [0.08994849026203156, 0.09272222965955734, 0.08875974267721176, 0.09285431355237961, 0.09259014576673508, 0.0882314071059227], "val_loss": [2.3087282180786133, 2.3087282180786133, 2.3087282180786133, 2.3087282180786133, 2.3087282180786133, 2.3087282180786133], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]