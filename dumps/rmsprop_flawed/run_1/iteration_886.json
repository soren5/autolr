[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8399999737739563, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5936822891235352, 0.8435210585594177, 0.7019555568695068, 0.6478795409202576, 0.600301206111908, 0.5418276786804199, 0.5293684005737305, 0.5076374411582947, 0.5041082501411438, 0.4863527715206146, 0.4843345582485199, 0.5046213269233704, 0.4819420278072357, 0.45730242133140564, 0.4932316541671753, 0.4757918119430542, 0.4592542052268982, 0.4774636924266815, 0.46800529956817627, 0.508964478969574, 0.468441367149353], "accuracy": [0.4920089840888977, 0.7037379741668701, 0.7400607466697693, 0.7518161535263062, 0.7754589915275574, 0.7961959838867188, 0.8074230551719666, 0.8137630224227905, 0.8107251524925232, 0.8269713521003723, 0.8348963260650635, 0.8201030492782593, 0.8181217908859253, 0.8379341959953308, 0.8304054737091064, 0.8308017253875732, 0.8428213000297546, 0.8232730031013489, 0.8418967127799988, 0.8261788487434387, 0.8409721255302429], "val_loss": [0.7916316986083984, 0.5998384356498718, 0.5961763262748718, 0.5220347046852112, 0.5021324753761292, 0.4923180341720581, 0.5036289095878601, 0.4845077395439148, 0.495563268661499, 0.4783552289009094, 0.5074183940887451, 0.5063441395759583, 0.4885643720626831, 0.5278456807136536, 0.5047731995582581, 0.531440019607544, 0.4743143320083618, 0.5080669522285461, 0.5090850591659546, 0.5166611671447754, 0.5039882063865662], "val_accuracy": [0.7073333263397217, 0.777999997138977, 0.7756666541099548, 0.8019999861717224, 0.8153333067893982, 0.8333333134651184, 0.8259999752044678, 0.8273333311080933, 0.8363333344459534, 0.8320000171661377, 0.8429999947547913, 0.8326666951179504, 0.8323333263397217, 0.8366666436195374, 0.8339999914169312, 0.8503333330154419, 0.8366666436195374, 0.8496666550636292, 0.8360000252723694, 0.8420000076293945, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [8, 2, 3, 1, 1, 3, 8, 2, 8, 6, 4, 4, 7, 5, 0, 0, 0, 6, 7, 4, 5, 7, 5], [0, 0, 4, 0, 3, 5, 0, 5, 5, 3, 4, 0, 1, 2, 5], [0, 28, 17, 16, 49], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [0], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 1, 0, 1, 1, 38, 23, 15, 5, 4, 2, 2, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), grad))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.square(grad), grad), tf.math.negative(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(beta, tf.math.square(grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.31020450592041, 2.3102142810821533, 2.3100504875183105, 2.3106915950775146, 2.310115337371826, 2.3113784790039062], "accuracy": [0.08981640636920929, 0.08717474341392517, 0.09074098616838455, 0.08981640636920929, 0.09100515395402908, 0.09060890227556229], "val_loss": [2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [53, 39, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 1, 0, 1], [0, 7, 0, 5], [4, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 4, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3096182346343994, 2.309804916381836, 2.3100316524505615, 2.309783697128296, 2.3099265098571777, 2.310530185699463], "accuracy": [0.09602430462837219, 0.08638224750757217, 0.09298639744520187, 0.08889182657003403, 0.09179764986038208, 0.0882314071059227], "val_loss": [2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 2, 6, 1, 6, 3, 8, 2], [0, 1, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1, 1, 1], [0, 9], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30991530418396, 2.3093514442443848, 2.3104631900787354, 2.309264898300171, 2.309556484222412, 2.3096556663513184], "accuracy": [0.09457138925790787, 0.0940430611371994, 0.08757099509239197, 0.09298639744520187, 0.09140139818191528, 0.09179764986038208], "val_loss": [2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 1, 6, 6, 8, 3, 5], [0, 0, 2, 0, 3, 1, 0, 2], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [5, 5], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 1, 0, 1, 1, 17, 9, 8, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.multiply(tf.math.square(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107709884643555, 2.309746265411377, 2.310551404953003, 2.309607744216919, 2.3106167316436768, 2.3094265460968018], "accuracy": [0.09008057415485382, 0.09232597798109055, 0.09087307006120682, 0.09179764986038208, 0.09232597798109055, 0.0952318087220192], "val_loss": [2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]