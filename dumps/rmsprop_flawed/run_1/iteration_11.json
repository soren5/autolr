[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7598785161972046, 1.0028936862945557, 0.7610564827919006, 0.6492542028427124, 0.6161548495292664, 0.5734164714813232, 0.553498387336731, 0.5273507237434387, 0.517008364200592, 0.5091184973716736, 0.4810340106487274, 0.47795313596725464, 0.5045442581176758, 0.5533878803253174, 0.5399278998374939, 0.5196585059165955, 0.5472384095191956], "accuracy": [0.44630828499794006, 0.6655659675598145, 0.7269845604896545, 0.763439416885376, 0.7820631265640259, 0.7959318161010742, 0.7969884872436523, 0.8084797263145447, 0.8100647330284119, 0.8168009519577026, 0.8175934553146362, 0.8329150676727295, 0.8239334225654602, 0.8107251524925232, 0.8144234418869019, 0.8104609847068787, 0.8201030492782593], "val_loss": [1.057499647140503, 0.6325463652610779, 0.5710420608520508, 0.5392328500747681, 0.5207337141036987, 0.5064902901649475, 0.48508429527282715, 0.48503634333610535, 0.4869326055049896, 0.4676799178123474, 0.48023533821105957, 0.4590531289577484, 0.5035349726676941, 0.5680221915245056, 0.5323725342750549, 0.5137072205543518, 0.5167717933654785], "val_accuracy": [0.6349999904632568, 0.781000018119812, 0.7896666526794434, 0.8159999847412109, 0.8090000152587891, 0.8146666884422302, 0.8366666436195374, 0.8373333215713501, 0.8360000252723694, 0.8399999737739563, 0.8473333120346069, 0.8556666374206543, 0.8379999995231628, 0.846666693687439, 0.8413333296775818, 0.8396666646003723, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [3, 2, 0, 6, 3, 5, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 7, 1, 1, 8, 3, 8, 2], [0, 0, 2, 0, 3, 0, 0], [0, 27, 16, 0], [0, 1, 1, 1], [0, 2], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 4, 9, 5, 4, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 1, 3, 3, 2, 0, 1, 8], [1, 0, 1, 0, 2, 3, 1, 2, 3], [0, 39, 39], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 7, 3, 1, 6, 3, 1, 2], [0, 0, 2, 0, 3, 4, 0], [97, 27, 16, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 7, 6, 3, 7, 4, 5, 6, 4, 2, 7, 9, 3, 3], [0, 6, 3, 3, 1, 7, 3, 1, 3, 4, 1], [0, 66], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 2, 1, 0, 1, 1, 25, 14, 11, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.sqrt(alpha), grad))))), grad), lambda shape,  alpha, beta, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma))), tf.math.multiply(alpha, sigma)))), grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [46218567680.0, 7032115560448.0, 121004772818944.0, 842106520207360.0, 3724263584432128.0, 1.233963431493632e+16], "accuracy": [0.09787346422672272, 0.09536388516426086, 0.10130762308835983, 0.10487385839223862, 0.09628847241401672, 0.09959053993225098], "val_loss": [467475431424.0, 25203222511616.0, 270478937686016.0, 1474922773741568.0, 5524160629440512.0, 1.629092906532864e+16], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5, 5, 9], [0, 0, 1, 0, 3], [0, 39, 39, 52], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 5, 2, 0, 1, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 4, 2, 0, 2, 8, 3, 7, 0, 2, 4, 5, 3, 3, 7, 2, 8, 3, 5, 2], [0, 6, 4, 4, 6, 0, 3, 4, 4, 0, 4, 5, 4, 4], [0, 52, 93], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(grad, grad)), tf.math.pow(tf.math.square(tf.math.multiply(tf.math.multiply(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(grad, tf.math.add(tf.math.sqrt(grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(grad, tf.math.square(grad)))), tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309502363204956, 2.3089661598205566, 2.3097310066223145, 2.3084661960601807, 2.3089776039123535, 2.30964732170105], "accuracy": [0.0944393053650856, 0.09219389408826828, 0.08968432247638702, 0.09272222965955734, 0.09245806187391281, 0.09536388516426086], "val_loss": [2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984, 2.3090877532958984], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}, "mapping_values": [1, 12, 8, 4, 4, 1, 0, 1, 1, 34, 20, 14, 3, 1, 0, 1, 0], "tree_depth": 28}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 1, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1], [0, 7, 5, 5], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100361824035645, 2.3092315196990967, 2.3098678588867188, 2.3102078437805176, 2.310030937194824, 2.3094191551208496], "accuracy": [0.0944393053650856, 0.09325055778026581, 0.09232597798109055, 0.08902391046285629, 0.08981640636920929, 0.09549596905708313], "val_loss": [2.308479070663452, 2.308479070663452, 2.308479070663452, 2.308479070663452, 2.308479070663452, 2.308479070663452], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]