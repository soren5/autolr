[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.553372859954834, 0.8059576749801636, 0.6901595592498779, 0.5948410630226135, 0.5574048161506653, 0.5445052981376648, 0.5301699042320251, 0.5171670913696289, 0.5056020617485046, 0.5133610367774963, 0.5114380121231079, 0.4934505224227905, 0.4639219343662262, 0.46397846937179565, 0.461309552192688, 0.4590332508087158, 0.454399049282074, 0.4588516056537628, 0.46505430340766907, 0.4827437996864319, 0.46737828850746155, 0.4942106008529663], "accuracy": [0.48289525508880615, 0.7187954187393188, 0.7515519857406616, 0.7836481332778931, 0.7930260300636292, 0.798309326171875, 0.8107251524925232, 0.8108572363853455, 0.8228767514228821, 0.8175934553146362, 0.8247259259223938, 0.8224804997444153, 0.8249900937080383, 0.8358209133148193, 0.8396512866020203, 0.8387266993522644, 0.8436138033866882, 0.8477083444595337, 0.8392550349235535, 0.841500461101532, 0.842028796672821, 0.8274996876716614], "val_loss": [0.8219801187515259, 0.6074608564376831, 0.5334118008613586, 0.4944113492965698, 0.4823768734931946, 0.46972787380218506, 0.4818585515022278, 0.46625927090644836, 0.4886302947998047, 0.5199376940727234, 0.47545182704925537, 0.49010342359542847, 0.47429904341697693, 0.5296645760536194, 0.5052821636199951, 0.458622545003891, 0.5118376016616821, 0.5459254384040833, 0.5338551998138428, 0.5426726341247559, 0.547797441482544, 0.5561508536338806], "val_accuracy": [0.7316666841506958, 0.7730000019073486, 0.7973333597183228, 0.8206666707992554, 0.8233333230018616, 0.8320000171661377, 0.8256666660308838, 0.8339999914169312, 0.8460000157356262, 0.8296666741371155, 0.8489999771118164, 0.8420000076293945, 0.8519999980926514, 0.8450000286102295, 0.8479999899864197, 0.8533333539962769, 0.8600000143051147, 0.8516666889190674, 0.8500000238418579, 0.8446666598320007, 0.8539999723434448, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [2, 3, 1, 0, 2], [13, 53, 60], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 3, 1, 6, 3, 8, 2, 3, 6, 9, 3, 8, 9], [0, 0, 2, 0, 3, 1, 0, 1], [0, 51, 16, 0, 23, 67], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 22, 14, 8, 6, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 3, 1, 7, 5], [0, 0, 1, 2, 2, 1], [0, 62, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 8, 3, 8, 2, 1], [0, 2, 4, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 7, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 16, 9, 7, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 2, 3, 5, 6, 3, 4, 2, 7, 4, 0, 4, 5, 9, 9], [3, 2, 4, 0, 1, 1, 0, 5], [0, 27, 16, 16], [0, 0, 1, 1], [0, 5], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 23, 15, 8, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, beta)), tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.pow(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2552.15673828125, 13952.05859375, 26033.958984375, 38107.578125, 50192.3125, 62260.0234375], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8942.2958984375, 20979.400390625, 33016.42578125, 45053.390625, 57090.2890625, 69127.1328125], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 3, 2], [0, 39, 77], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 4, 3, 8, 2], [0, 0, 2, 0, 3, 1, 3], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [8, 6, 3, 9, 3, 2, 4, 1, 5, 0], [0, 6, 4, 5, 2, 0], [0, 6, 62], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 1, 16, 10, 6, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.pow(grad, grad), grad), tf.math.subtract(tf.math.square(beta), tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090803623199463, 2.310178279876709, 2.309767007827759, 2.309255361557007, 2.3094546794891357, 2.3100807666778564], "accuracy": [0.09126931428909302, 0.09457138925790787, 0.0940430611371994, 0.09787346422672272, 0.09166556596755981, 0.09496764093637466], "val_loss": [2.309291124343872, 2.309291124343872, 2.309291124343872, 2.309291124343872, 2.309291124343872, 2.309291124343872], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]