[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5183814764022827, 0.8422809839248657, 0.6832273602485657, 0.6325373649597168, 0.5741445422172546, 0.5422447323799133, 0.5447962284088135, 0.539811372756958, 0.5133612155914307, 0.4753446578979492, 0.4812614321708679, 0.46733078360557556, 0.4640035629272461, 0.4891427457332611, 0.4825509786605835, 0.49912360310554504, 0.495482474565506, 0.48009341955184937, 0.5008831024169922], "accuracy": [0.4714040458202362, 0.7207766771316528, 0.7494386434555054, 0.7683265209197998, 0.7807422876358032, 0.8038568496704102, 0.8094043135643005, 0.8053097128868103, 0.8129705190658569, 0.8245938420295715, 0.8193105459213257, 0.8360850811004639, 0.8286884427070618, 0.8315942287445068, 0.8261788487434387, 0.8277638554573059, 0.83119797706604, 0.8362171649932861, 0.8183859586715698], "val_loss": [0.8244381546974182, 0.6677687764167786, 0.5813652276992798, 0.5484058856964111, 0.5256189107894897, 0.5248735547065735, 0.5180069208145142, 0.5096635222434998, 0.49661654233932495, 0.5056906938552856, 0.5296136140823364, 0.48888811469078064, 0.5388367772102356, 0.5293786525726318, 0.5408510565757751, 0.5300177931785583, 0.5930901169776917, 0.5666346549987793, 0.6071091890335083], "val_accuracy": [0.7323333621025085, 0.7543333172798157, 0.7823333144187927, 0.7926666736602783, 0.8109999895095825, 0.8163333535194397, 0.8116666674613953, 0.8243333101272583, 0.8259999752044678, 0.82833331823349, 0.8289999961853027, 0.8320000171661377, 0.8270000219345093, 0.8383333086967468, 0.8326666951179504, 0.8233333230018616, 0.8330000042915344, 0.82833331823349, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 5, 2], [0, 0, 2, 0, 3, 1, 0, 5], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 7, 0, 9, 3, 7, 0], [4, 7, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.1494285762310028, "mapping_values": [1, 1, 0, 1, 1, 18, 10, 8, 4, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.negative(grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.411811828613281, 2.5068469047546387, 2.4247305393218994, 6.128676329046591e+32, 2.4665586948394775, 2.534337282180786, 2.508183479309082, 2.464851140975952], "accuracy": [0.19640734791755676, 0.11108175665140152, 0.09840179979801178, 0.11161009222269058, 0.09985470771789551, 0.09959053993225098, 0.09998679161071777, 0.09721305221319199], "val_loss": [2.447695255279541, 2.4222609996795654, 67.04930877685547, 2.5862393379211426, 2.5241904258728027, 2.4022350311279297, 2.4913687705993652, 2.610199213027954], "val_accuracy": [0.0989999994635582, 0.10199999809265137, 0.1456666737794876, 0.09866666793823242, 0.10199999809265137, 0.0989999994635582, 0.09866666793823242, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 6, 1, 6, 9, 8, 2], [0, 0, 5, 0, 3, 1, 0], [0, 27, 48, 12], [1, 0, 1, 1], [0, 0], [4, 7], [0], [1], [0], [2], [0]], "fitness": -0.10199999809265137, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.339257783308318e+20, 5.650564065938983e+20, 1.0837149882002073e+20, 1.6433965773372575e+20, 1.0428848438050711e+20, 3.9118011276642484e+19, 881.0810546875], "accuracy": [0.08030643314123154, 0.10328886657953262, 0.10196803510189056, 0.1006472036242485, 0.10011887550354004, 0.09998679161071777, 0.10011887550354004], "val_loss": [5.6812944483650896e+20, 9.133374811098055e+19, 1.0860786880610304e+17, 513.269287109375, 658.78466796875, 811.0802612304688, 970.1917724609375], "val_accuracy": [0.09866666793823242, 0.10733333230018616, 0.10266666859388351, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 4, 3, 1, 6, 3, 2, 0, 0, 1, 4, 8, 1, 9], [0, 0, 2, 0, 3, 1, 4, 5, 4], [71, 71, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 23, 14, 9, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.negative(alpha)), tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(grad), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 1, 2], [0, 0, 2, 0, 4, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 7, 7, 8, 4, 9], [4, 5, 0], [0, 5], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310312032699585, 2.309704065322876, 2.311072826385498, 2.3107306957244873, 2.3098232746124268, 2.3097732067108154], "accuracy": [0.09285431355237961, 0.09179764986038208, 0.0882314071059227, 0.09259014576673508, 0.09140139818191528, 0.0944393053650856], "val_loss": [2.3092398643493652, 2.3092398643493652, 2.3092398643493652, 2.3092398643493652, 2.3092398643493652, 2.3092398643493652], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]