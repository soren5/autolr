[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5463405847549438, 0.8034745454788208, 0.6724385619163513, 0.6022548675537109, 0.6560831069946289, 0.6140068769454956, 0.5831476449966431, 0.5843969583511353, 0.534031867980957, 0.5169641971588135, 0.49241235852241516, 0.48678943514823914, 0.48947322368621826, 0.5160067677497864, 0.49764591455459595, 0.48898953199386597, 0.5273858904838562, 0.5536519885063171, 0.5674149394035339, 0.521798849105835], "accuracy": [0.48131024837493896, 0.7223616242408752, 0.7515519857406616, 0.7761194109916687, 0.7737419009208679, 0.7889314293861389, 0.7840443849563599, 0.8004226684570312, 0.8045172095298767, 0.8094043135643005, 0.8161405324935913, 0.8227446675300598, 0.82683926820755, 0.8216879963874817, 0.8161405324935913, 0.8296129703521729, 0.8136309385299683, 0.8274996876716614, 0.8249900937080383, 0.8247259259223938], "val_loss": [0.820613443851471, 0.6057794690132141, 0.5414442420005798, 0.5649732947349548, 0.5589758157730103, 0.5494256019592285, 0.5585972666740417, 0.5826271772384644, 0.5462512373924255, 0.5265071988105774, 0.5288952589035034, 0.5571089386940002, 0.6238803863525391, 0.5799707770347595, 0.5590493083000183, 0.6618854403495789, 0.6668121218681335, 0.708734393119812, 0.7251150608062744, 0.8224219679832458], "val_accuracy": [0.721666693687439, 0.7806666493415833, 0.7863333225250244, 0.7896666526794434, 0.812666654586792, 0.8036666512489319, 0.8140000104904175, 0.8213333487510681, 0.809333324432373, 0.8236666917800903, 0.8316666483879089, 0.8159999847412109, 0.8143333196640015, 0.8233333230018616, 0.8323333263397217, 0.8263333439826965, 0.8240000009536743, 0.8303333520889282, 0.8143333196640015, 0.8226666450500488]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.568932294845581, 0.837393581867218, 0.6607809066772461, 0.6003424525260925, 0.5649670958518982, 0.5224294066429138, 0.5101945996284485, 0.4655414819717407, 0.4550030529499054, 0.48447155952453613, 0.486880362033844, 0.4659472107887268, 0.46535852551460266, 0.4683931767940521, 0.4495375156402588, 0.4669104814529419, 0.45188894867897034, 0.4676392674446106, 0.47779959440231323, 0.4997164011001587, 0.4961767792701721, 0.5161375403404236, 0.542359471321106, 0.48758000135421753, 0.5371606945991516, 0.544062614440918], "accuracy": [0.4644036591053009, 0.7078325152397156, 0.7519482374191284, 0.7703077793121338, 0.7889314293861389, 0.7993659973144531, 0.8197067975997925, 0.8195747137069702, 0.8315942287445068, 0.8290846943855286, 0.8304054737091064, 0.8323867321014404, 0.8393871188163757, 0.8412362933158875, 0.837141752243042, 0.8445383906364441, 0.8494254350662231, 0.8455950617790222, 0.8327829837799072, 0.8381983637809753, 0.8372738361358643, 0.8469158411026001, 0.824329674243927, 0.8433496356010437, 0.8308017253875732, 0.8230088353157043], "val_loss": [0.8126494884490967, 0.6052595376968384, 0.5588328242301941, 0.5027473568916321, 0.5093833208084106, 0.49717390537261963, 0.46094730496406555, 0.4296535551548004, 0.4711286127567291, 0.47974371910095215, 0.45945584774017334, 0.4796198606491089, 0.5242534875869751, 0.5259998440742493, 0.5623659491539001, 0.5319300889968872, 0.5106105208396912, 0.5256832242012024, 0.529320240020752, 0.5738688111305237, 0.619310200214386, 0.568016529083252, 0.5820125937461853, 0.5691267251968384, 0.5886105895042419, 0.6071915030479431], "val_accuracy": [0.6946666836738586, 0.7789999842643738, 0.7829999923706055, 0.8103333115577698, 0.8199999928474426, 0.8246666789054871, 0.8336666822433472, 0.8456666469573975, 0.8413333296775818, 0.8486666679382324, 0.8433333039283752, 0.8489999771118164, 0.8476666808128357, 0.8399999737739563, 0.8403333425521851, 0.8533333539962769, 0.8556666374206543, 0.8433333039283752, 0.8476666808128357, 0.8456666469573975, 0.859000027179718, 0.8539999723434448, 0.843666672706604, 0.840666651725769, 0.8396666646003723, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [0, 81, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 8, 3, 8, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 0, 1], [0, 7], [0, 6], [0], [1], [0], [5], [0]], "fitness": -0.23800000548362732, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.296450614929199, 2.4035167694091797, 2.304152011871338, 2.3012993335723877, 2.388423442840576, 2.3081305027008057], "accuracy": [0.20116232335567474, 0.12838461995124817, 0.09576013684272766, 0.10474177449941635, 0.1678774207830429, 0.09760929644107819], "val_loss": [2.1053428649902344, 2.3053176403045654, 2.302567481994629, 2.292041301727295, 2.3144211769104004, 2.3045318126678467], "val_accuracy": [0.2396666705608368, 0.09733333438634872, 0.09733333438634872, 0.1303333342075348, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 4, 3, 0], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 9, 2, 7, 8, 7, 6, 6, 8, 1, 2, 0, 8], [0, 0, 2, 0, 3, 1, 0, 0, 2, 3, 0, 2, 4], [0, 27, 37, 0, 26, 73, 12], [0, 1, 1, 1], [0, 7], [0, 6], [69], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 33, 20, 13, 7, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), beta))), grad))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), beta), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 2, 1, 1, 3, 3, 9], [0, 0, 1, 0, 2], [0, 39, 39, 5], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 1, 6, 3, 3, 2], [0, 0, 2, 0, 3, 3, 0], [0, 27, 42, 0], [0, 1, 0, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 6, 4, 2, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [229180768.0, 33108477952.0, 588855050240.0, 4079843540992.0, 17948313911296.0, 59286411542528.0], "accuracy": [0.09906221181154251, 0.09496764093637466, 0.0956280529499054, 0.10355303436517715, 0.10302469879388809, 0.10500594228506088], "val_loss": [2339659776.0, 126111858688.0, 1353576218624.0, 7379210469376.0, 27640616452096.0, 81531641004032.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 68, 39], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 9, 6, 8, 3, 2], [0, 0, 2, 0, 3, 4, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0], [0, 7, 2, 9], [0, 6], [0, 69], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 11, 7, 4, 4, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308641195297241, 2.310520887374878, 2.3099653720855713, 2.31125545501709, 2.3097429275512695, 2.3103902339935303], "accuracy": [0.09496764093637466, 0.09694888442754745, 0.08625016361474991, 0.0886276587843895, 0.08638224750757217, 0.09126931428909302], "val_loss": [2.308981418609619, 2.308981418609619, 2.308981418609619, 2.308981418609619, 2.308981418609619, 2.308981418609619], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]