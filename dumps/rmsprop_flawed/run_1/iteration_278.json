[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4549016952514648, 0.8090896010398865, 0.6804130673408508, 0.6285203099250793, 0.5933112502098083, 0.5483627915382385, 0.4968787729740143, 0.5007247924804688, 0.4793199598789215, 0.44804972410202026, 0.4563601315021515, 0.4426376223564148, 0.48255351185798645, 0.45044419169425964, 0.4688946008682251, 0.452674925327301, 0.46983659267425537, 0.41944584250450134, 0.42049315571784973], "accuracy": [0.483819842338562, 0.7244749665260315, 0.7498348951339722, 0.7677981853485107, 0.7815347909927368, 0.7991018295288086, 0.8170651197433472, 0.8121780753135681, 0.8251221776008606, 0.8387266993522644, 0.8322546482086182, 0.8333113193511963, 0.8391229510307312, 0.8457271456718445, 0.8512746095657349, 0.8413683772087097, 0.8405758738517761, 0.852331280708313, 0.8506141901016235], "val_loss": [0.7427490949630737, 0.5677407383918762, 0.5329924821853638, 0.49842289090156555, 0.4856495261192322, 0.4769131541252136, 0.44924378395080566, 0.4566364884376526, 0.4596022963523865, 0.456717848777771, 0.5133427977561951, 0.5259146094322205, 0.5275579690933228, 0.487303763628006, 0.5395315885543823, 0.5573373436927795, 0.5899869799613953, 0.48553165793418884, 0.5514764189720154], "val_accuracy": [0.7206666469573975, 0.7850000262260437, 0.8076666593551636, 0.8096666932106018, 0.8236666917800903, 0.8423333168029785, 0.8416666388511658, 0.8383333086967468, 0.8500000238418579, 0.8533333539962769, 0.8476666808128357, 0.831333339214325, 0.8533333539962769, 0.8569999933242798, 0.8463333249092102, 0.8330000042915344, 0.847000002861023, 0.8519999980926514, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 9, 3, 5], [1, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 4, 6, 3, 8, 2, 4, 1, 2], [4, 4, 2, 0, 3, 1, 0, 2, 5, 2], [0, 27, 16, 31], [0, 0, 1, 1], [8, 7], [0, 7], [0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 7, 2, 5, 6, 7, 7, 8, 3, 0], [2, 2, 7, 2, 3, 0, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 21, 11, 10, 2, 4, 2, 2, 1, 17, 10, 7, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.multiply(beta, grad)), beta)), sigma)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 1, 3, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 5, 0], [46, 27, 16, 71], [0, 0, 1, 1], [0, 7], [1, 7], [75], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 9, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), grad))))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 6, 5, 3, 5], [0, 0, 0, 0, 2], [0, 39, 77], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0, 5], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 7, 6, 2, 8, 9, 7, 7, 2, 9, 4, 0], [0, 7, 0, 5, 0, 2, 6], [0, 77, 98, 41, 51], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 16, 8, 8, 4, 19, 12, 7, 5, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309300661087036, 2.309907913208008, 2.3102481365203857, 2.309811592102051, 2.3105828762054443, 2.309929847717285], "accuracy": [0.09034473448991776, 0.09259014576673508, 0.08902391046285629, 0.08942015469074249, 0.08942015469074249, 0.08915598690509796], "val_loss": [2.3087801933288574, 2.3087801933288574, 2.3087801933288574, 2.3087801933288574, 2.3087801933288574, 2.3087801933288574], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 3], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 6, 3, 8, 2], [0, 0, 2, 0, 3, 0, 0], [0, 90, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110249042510986, 2.309774398803711, 2.310582399368286, 2.3093090057373047, 2.3107030391693115, 2.310248613357544], "accuracy": [0.08506141602993011, 0.0936468094587326, 0.09536388516426086, 0.09087307006120682, 0.09681680053472519, 0.09311848133802414], "val_loss": [2.3083655834198, 2.3083655834198, 2.3083655834198, 2.3083655834198, 2.3083655834198, 2.3083655834198], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]