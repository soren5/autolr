[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6253594160079956, 0.90576171875, 0.7348018884658813, 0.66263747215271, 0.6390602588653564, 0.593146026134491, 0.5580111145973206, 0.5152133107185364, 0.5062769651412964, 0.4984986186027527, 0.5321746468544006, 0.49556466937065125, 0.5243317484855652, 0.5220916867256165, 0.5125947594642639, 0.5413773655891418], "accuracy": [0.4834235906600952, 0.6971337795257568, 0.7382115721702576, 0.7504953145980835, 0.7666094303131104, 0.7836481332778931, 0.7980451583862305, 0.8144234418869019, 0.8082155585289001, 0.8222163319587708, 0.8115176558494568, 0.8123101592063904, 0.8076872229576111, 0.8101968169212341, 0.8211596608161926, 0.8240655064582825], "val_loss": [1.0077344179153442, 0.6311743259429932, 0.5815808773040771, 0.5910662412643433, 0.5501786470413208, 0.5580500364303589, 0.5154436230659485, 0.5031480193138123, 0.47421833872795105, 0.5358578562736511, 0.4800640344619751, 0.5318303108215332, 0.5174616575241089, 0.5220268368721008, 0.5498826503753662, 0.5392471551895142], "val_accuracy": [0.70333331823349, 0.7723333239555359, 0.7833333611488342, 0.7983333468437195, 0.8019999861717224, 0.8096666932106018, 0.8190000057220459, 0.8223333358764648, 0.8273333311080933, 0.8256666660308838, 0.8376666903495789, 0.8306666612625122, 0.8330000042915344, 0.8366666436195374, 0.8309999704360962, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [3, 4, 3, 9, 6, 3, 8, 2], [0, 0, 5, 0, 3, 5, 0], [0, 27, 16, 97], [0, 0, 1, 1], [0, 7], [0, 7], [6], [1], [0], [6], [0]], "fitness": -0.3005714416503906, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.568740129470825, 2.2838387489318848, 2.2995378971099854, 2.3563432693481445, 2.3044755458831787, 2.3032915592193604, 2.302863836288452, 2.302945375442505], "accuracy": [0.21252146363258362, 0.1336679458618164, 0.10091137140989304, 0.16193369030952454, 0.09998679161071777, 0.09509972482919693, 0.1010434553027153, 0.0956280529499054], "val_loss": [2.3041696548461914, 2.3091862201690674, 2.085965156555176, 2.304305076599121, 2.3029568195343018, 2.302663803100586, 2.302628517150879, 2.302591323852539], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.3019999861717224, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.09700000286102295, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 7, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16, 32], [0, 0, 1, 1], [0, 7], [0, 6], [92], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 18, 11, 7, 5, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 2, 3, 4, 8, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 7, 6, 3, 8, 2], [0, 4, 2, 0, 3, 1, 0], [0, 27, 16, 37], [0, 0, 1, 1], [0, 7], [0, 0], [0, 33], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 12, 6, 6, 2, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098106384277344, 2.3099968433380127, 2.309049367904663, 2.3099870681762695, 2.3101415634155273, 2.309493064880371], "accuracy": [0.0956280529499054, 0.0940430611371994, 0.08968432247638702, 0.09060890227556229, 0.09206181764602661, 0.0952318087220192], "val_loss": [2.308628559112549, 2.308628559112549, 2.308628559112549, 2.308628559112549, 2.308628559112549, 2.308628559112549], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 1, 9, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 3, 3, 2, 3, 8, 2], [0, 0, 2, 3, 1, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 8, 5, 3, 3, 13, 6, 7, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, alpha)))), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099632263183594, 2.3099560737609863, 2.3104076385498047, 2.3110578060150146, 2.3098976612091064, 2.3104147911071777], "accuracy": [0.0956280529499054, 0.08915598690509796, 0.09100515395402908, 0.09021265059709549, 0.09351472556591034, 0.09338264167308807], "val_loss": [2.3085012435913086, 2.3085012435913086, 2.3085012435913086, 2.3085012435913086, 2.3085012435913086, 2.3085012435913086], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]