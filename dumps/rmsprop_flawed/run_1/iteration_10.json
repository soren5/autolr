[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4926236867904663, 0.7553521990776062, 0.6398839950561523, 0.5731722116470337, 0.5795584917068481, 0.5793570876121521, 0.5769410729408264, 0.5668196082115173, 0.5652719140052795, 0.5648266673088074, 0.5539634823799133, 0.5599344372749329, 0.5221716165542603, 0.5408251285552979, 0.5688982009887695, 0.6033880710601807, 0.6190173029899597, 0.5821875333786011, 0.6383123397827148, 0.6201965808868408, 0.6328688859939575, 0.6338974833488464, 0.6439130902290344], "accuracy": [0.49227315187454224, 0.7293620109558105, 0.7655527591705322, 0.7928939461708069, 0.7971205711364746, 0.8063663840293884, 0.7952714562416077, 0.8030643463134766, 0.8062343001365662, 0.8164047002792358, 0.8090080618858337, 0.8098005652427673, 0.822348415851593, 0.8131026029586792, 0.8129705190658569, 0.8054417967796326, 0.7948752045631409, 0.8117818236351013, 0.7957997918128967, 0.7935543656349182, 0.8020076751708984, 0.8005547523498535, 0.7989697456359863], "val_loss": [0.7596043348312378, 0.6144838929176331, 0.5272321701049805, 0.5985971689224243, 0.6001970767974854, 0.5609699487686157, 0.5450801849365234, 0.5413745641708374, 0.5262157917022705, 0.5454257130622864, 0.5515248775482178, 0.5499775409698486, 0.6172870993614197, 0.5454867482185364, 0.6020980477333069, 0.6117680072784424, 0.6290638446807861, 0.5894115567207336, 0.6125213503837585, 0.5845779180526733, 0.6172630786895752, 0.6309821605682373, 0.6315699815750122], "val_accuracy": [0.734000027179718, 0.7773333191871643, 0.8053333163261414, 0.7956666946411133, 0.8016666769981384, 0.7943333387374878, 0.8046666383743286, 0.815666675567627, 0.8063333630561829, 0.815666675567627, 0.8130000233650208, 0.8109999895095825, 0.8183333277702332, 0.8146666884422302, 0.8193333148956299, 0.8046666383743286, 0.8050000071525574, 0.8196666836738586, 0.8073333501815796, 0.8033333420753479, 0.8183333277702332, 0.800000011920929, 0.8056666851043701]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 60, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 3, 9, 1], [0, 0, 2, 0, 3, 1, 0, 2, 2], [95, 27, 16, 30, 85], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [4], [0]], "fitness": -0.1397142857313156, "mapping_values": [1, 2, 2, 0, 1, 21, 12, 9, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), beta))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3269166946411133, 2.3032479286193848, 2.301936149597168, 2.307748794555664, 2.3020355701446533, 2.5488781929016113, 2.304849624633789, 2.3036398887634277, 2.3031017780303955, 2.3029427528381348], "accuracy": [0.19984149932861328, 0.10011887550354004, 0.10408136248588562, 0.14357416331768036, 0.10632677376270294, 0.16734910011291504, 0.09998679161071777, 0.09840179979801178, 0.09998679161071777, 0.09642054885625839], "val_loss": [2.3032801151275635, 2.3019957542419434, 2.2964251041412354, 2.304452419281006, 2.281933546066284, 2.3062314987182617, 2.3034420013427734, 2.3028104305267334, 2.3025765419006348, 2.3025856018066406], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.0976666659116745, 0.10266666859388351, 0.14499999582767487, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 3, 4, 3, 5], [0, 0, 1, 0, 2], [0, 10, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 3, 1, 6, 2, 8, 2], [0, 0, 2, 0, 2, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [13], [1], [0], [2], [0]], "fitness": -0.11257142573595047, "mapping_values": [1, 11, 6, 5, 3, 14, 7, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8356133752274944.0, 6.72908400463446e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09959053993225098, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.880500967990886e+16, 2.515879966688674e+18, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.1120000034570694, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 7, 6, 3, 8, 2], [5, 0, 2, 0, 3, 1, 0], [65, 99, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 15, 8, 7, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2823.405029296875, 422953.875, 76584648.0, 27404316672.0, 6359329800192.0, 983595560730624.0], "accuracy": [0.09549596905708313, 0.09589222073554993, 0.09813763201236725, 0.10474177449941635, 0.1022322028875351, 0.09998679161071777], "val_loss": [37969.42578125, 5766443.0, 703991744.0, 66032123904.0, 61523384860672.0, 1.2471265398882304e+16], "val_accuracy": [0.10266666859388351, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.10133333504199982, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 4, 7, 8, 2, 9, 8, 5], [0, 0, 1, 0, 2, 1, 3], [0, 39, 39, 70], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 5, 8, 2], [0, 0, 2, 0, 5, 1, 2], [0, 27, 12, 0], [1, 0, 1, 0], [0, 7], [0, 6], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 19, 12, 7, 4, 1, 0, 1, 1, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(alpha))))), grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3096606731414795, 2.309997081756592, 2.3104238510131836, 2.3113174438476562, 2.3093013763427734, 2.310152530670166], "accuracy": [0.0952318087220192, 0.09206181764602661, 0.08889182657003403, 0.08440100401639938, 0.09245806187391281, 0.09470347315073013], "val_loss": [2.309461832046509, 2.309461832046509, 2.309461832046509, 2.309461832046509, 2.309461832046509, 2.309461832046509], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]