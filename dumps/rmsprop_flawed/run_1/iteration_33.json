[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4372632503509521, 0.7607852816581726, 0.6560285091400146, 0.6018012762069702, 0.5543501377105713, 0.5047405958175659, 0.4905906319618225, 0.4916607439517975, 0.4712183177471161, 0.48815494775772095, 0.4566783308982849, 0.4791809320449829, 0.44568637013435364, 0.4402013123035431, 0.44396504759788513, 0.4299061596393585, 0.4375908374786377, 0.48593002557754517], "accuracy": [0.5115572810173035, 0.7277770638465881, 0.7652885913848877, 0.7807422876358032, 0.8013472557067871, 0.8161405324935913, 0.8216879963874817, 0.8253863453865051, 0.835160493850708, 0.8379341959953308, 0.8383304476737976, 0.8305375576019287, 0.8453308939933777, 0.8536521196365356, 0.844010055065155, 0.8511425256729126, 0.8533879518508911, 0.8380662798881531], "val_loss": [0.7836549282073975, 0.6128372550010681, 0.5295650362968445, 0.5313572883605957, 0.48885929584503174, 0.4774055480957031, 0.4741676151752472, 0.4602368474006653, 0.45982426404953003, 0.46007925271987915, 0.4916546940803528, 0.42500895261764526, 0.4985865354537964, 0.4833984375, 0.49141165614128113, 0.593893826007843, 0.5013377070426941, 0.5304698944091797], "val_accuracy": [0.7406666874885559, 0.7706666588783264, 0.809333324432373, 0.8130000233650208, 0.8166666626930237, 0.8386666774749756, 0.8286666870117188, 0.8346666693687439, 0.8383333086967468, 0.8363333344459534, 0.8456666469573975, 0.8453333377838135, 0.8503333330154419, 0.8410000205039978, 0.8450000286102295, 0.8486666679382324, 0.843666672706604, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 5, 2, 6, 5, 5, 1, 9, 5, 5], [0, 0, 1, 3, 2, 0, 0], [0, 39, 39, 90, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 6, 1, 6, 3, 8, 0, 6, 8, 1], [0, 0, 3, 0, 3, 1, 5, 0], [0, 27, 16, 0], [0, 1, 0, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 15, 7, 5, 19, 11, 8, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.square(grad))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 3, 6, 3, 8, 3, 7, 6, 6, 4, 5, 4, 0, 3, 5, 4, 9], [0, 0, 2, 0, 3, 1, 1, 2, 4, 1, 1, 5, 5], [0, 27, 16, 0], [0, 1, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 3, 3, 2, 4, 9, 4, 9, 7], [2, 3, 5, 4, 7], [0, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 32, 19, 13, 4, 2, 1, 1, 1, 14, 9, 5, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(beta, tf.math.square(grad))))), alpha)), tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 1, 1, 2, 2, 3, 9, 5, 7], [0, 0, 2, 0, 3, 1, 0, 0, 4, 4, 0, 1], [0, 27, 16, 0, 73, 41, 60], [0, 0, 1, 0, 1], [0, 7, 0], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 29, 17, 12, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310164213180542, 2.3090617656707764, 2.309762477874756, 2.3100316524505615, 2.310072183609009, 2.3096046447753906], "accuracy": [0.09153348207473755, 0.09245806187391281, 0.09549596905708313, 0.09034473448991776, 0.08915598690509796, 0.0936468094587326], "val_loss": [2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 9, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 2, 8, 2], [0, 0, 1, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 0, 1], [0, 6, 0], [2, 2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 2, 1, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.negative(beta)))", "other_info": {"loss": [2.3102729320526123, 2.309406280517578, 2.310462713241577, 2.309767484664917, 2.30967378616333, 2.3096413612365723], "accuracy": [0.0878351628780365, 0.09391097724437714, 0.09338264167308807, 0.0940430611371994, 0.08453308790922165, 0.09232597798109055], "val_loss": [2.309239625930786, 2.309239625930786, 2.309239625930786, 2.309239625930786, 2.309239625930786, 2.309239625930786], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]