[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.448405146598816, 0.7561113238334656, 0.6534360647201538, 0.6022701263427734, 0.5561075210571289, 0.536844789981842, 0.5225455164909363, 0.4729900062084198, 0.46710070967674255, 0.45822224020957947, 0.4778884947299957, 0.4767039716243744, 0.48501384258270264, 0.49215903878211975, 0.5034763813018799], "accuracy": [0.48910316824913025, 0.7309470176696777, 0.755118191242218, 0.7783648371696472, 0.8001585006713867, 0.7991018295288086, 0.8119139075279236, 0.8245938420295715, 0.829216718673706, 0.8314621448516846, 0.828292191028595, 0.832650899887085, 0.8301413059234619, 0.8293488025665283, 0.8162726163864136], "val_loss": [0.739956796169281, 0.6148694753646851, 0.5518440008163452, 0.5361835360527039, 0.5101341009140015, 0.49935945868492126, 0.4668334424495697, 0.5025603771209717, 0.5283684134483337, 0.5355698466300964, 0.6189205646514893, 0.5725151300430298, 0.5521458983421326, 0.5479100942611694, 0.619178056716919], "val_accuracy": [0.7333333492279053, 0.7733333110809326, 0.7979999780654907, 0.8050000071525574, 0.8193333148956299, 0.8303333520889282, 0.8360000252723694, 0.8353333473205566, 0.8330000042915344, 0.8373333215713501, 0.8343333601951599, 0.8356666564941406, 0.8263333439826965, 0.8266666531562805, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 1, 4], [0, 0, 1, 0, 2, 1, 1], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 4, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [25, 27, 83, 0], [0, 0, 1, 1], [0, 7], [0, 6], [32], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 14, 7, 7, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309159278869629, 2.309458017349243, 2.310971736907959, 2.310539484024048, 2.3104684352874756, 2.310206890106201], "accuracy": [0.0956280529499054, 0.09298639744520187, 0.08849557489156723, 0.09034473448991776, 0.08875974267721176, 0.09589222073554993], "val_loss": [2.3080124855041504, 2.3080124855041504, 2.3080124855041504, 2.3080124855041504, 2.3080124855041504, 2.3080124855041504], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 8, 9, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 0, 1], [0, 27, 38, 16], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 7, 6, 8, 2, 5, 1, 8, 1, 0, 3, 2, 3, 2, 7, 4, 3, 1, 1, 8, 9, 9], [0, 7, 0, 3, 6, 4, 1, 5, 5, 1, 1, 6, 7], [0, 60, 96, 13], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 35, 22, 13, 4, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.subtract(grad, tf.math.subtract(tf.math.sqrt(alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)), grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092434406280518, 2.3085124492645264, 2.3096752166748047, 2.309168577194214, 2.3105409145355225, 2.3089029788970947], "accuracy": [0.0952318087220192, 0.09509972482919693, 0.09219389408826828, 0.09179764986038208, 0.09576013684272766, 0.0940430611371994], "val_loss": [2.307555913925171, 2.307555913925171, 2.307555913925171, 2.307555913925171, 2.307555913925171, 2.307555913925171], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5, 7, 3, 1, 8, 8, 3, 6, 7, 1, 5, 9, 7, 5], [0, 0, 1, 0, 2, 0, 1, 3, 0, 0, 1, 0], [0, 39, 39, 62, 40, 79, 97, 91], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 3, 2, 3, 8, 2], [0, 0, 2, 3, 3, 1, 0], [0, 27, 94, 0], [0, 0, 1, 1], [0, 1], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 32, 20, 12, 8, 6, 3, 3, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.square(alpha), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310554265975952, 2.309941291809082, 2.310980796813965, 2.309133529663086, 2.310602903366089, 2.310152530670166], "accuracy": [0.09351472556591034, 0.09166556596755981, 0.0944393053650856, 0.09628847241401672, 0.09430722147226334, 0.09008057415485382], "val_loss": [2.308494806289673, 2.308494806289673, 2.308494806289673, 2.308494806289673, 2.308494806289673, 2.308494806289673], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 1, 3, 1, 0], [0, 27, 16, 23], [0, 0, 1, 0, 1], [0, 7, 0], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089215755462646, 2.3108460903167725, 2.309947967529297, 2.3106980323791504, 2.3108558654785156, 2.3092758655548096], "accuracy": [0.09496764093637466, 0.09126931428909302, 0.09206181764602661, 0.09192973375320435, 0.09192973375320435, 0.09576013684272766], "val_loss": [2.308919906616211, 2.308919906616211, 2.308919906616211, 2.308919906616211, 2.308919906616211, 2.308919906616211], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]