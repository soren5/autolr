[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5507975816726685, 0.7817403674125671, 0.6592675447463989, 0.5893919467926025, 0.5691025853157043, 0.5489831566810608, 0.5288268327713013, 0.510686457157135, 0.4897615313529968, 0.46340715885162354, 0.4616517424583435, 0.4750189185142517, 0.46024319529533386, 0.4770871698856354, 0.4975526034832001, 0.49099504947662354, 0.48472270369529724], "accuracy": [0.48131024837493896, 0.7234182953834534, 0.7576277852058411, 0.7788931727409363, 0.8005547523498535, 0.7996301651000977, 0.805177628993988, 0.8166688680648804, 0.8220842480659485, 0.8315942287445068, 0.8317263126373291, 0.8389908671379089, 0.8389908671379089, 0.8289526104927063, 0.8354246616363525, 0.8388587832450867, 0.8389908671379089], "val_loss": [0.7891103625297546, 0.6339625716209412, 0.5645889639854431, 0.5206260681152344, 0.4961082339286804, 0.5058985948562622, 0.5135774612426758, 0.4956340193748474, 0.4699974060058594, 0.45612943172454834, 0.45519694685935974, 0.5201457142829895, 0.5123389363288879, 0.5816723704338074, 0.569887101650238, 0.5644741654396057, 0.5997984409332275], "val_accuracy": [0.737666666507721, 0.7706666588783264, 0.8019999861717224, 0.815666675567627, 0.8273333311080933, 0.8230000138282776, 0.8213333487510681, 0.8306666612625122, 0.8426666855812073, 0.846666693687439, 0.8473333120346069, 0.8506666421890259, 0.8389999866485596, 0.8383333086967468, 0.8399999737739563, 0.8423333168029785, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 8, 8, 2], [0, 0, 2, 5, 3, 1, 0], [0, 56, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [4], [0]], "fitness": -0.1988571435213089, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4187209606170654, 2.2812397480010986, 2.606498956680298, 2.3065085411071777, 2.303881883621216, 2.3032212257385254], "accuracy": [0.1950865089893341, 0.14119666814804077, 0.1582353711128235, 0.09681680053472519, 0.0952318087220192, 0.09747721254825592], "val_loss": [2.263284206390381, 2.1576879024505615, 2.309286117553711, 2.304231643676758, 2.303086280822754, 2.3027360439300537], "val_accuracy": [0.20033332705497742, 0.15700000524520874, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 7, 3, 1, 3, 5, 3, 4, 8], [0, 0, 1, 0, 2, 1, 0, 0], [0, 39, 61, 94, 42], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 7, 7, 6, 3, 8, 2], [0, 0, 2, 3, 3, 1, 0], [0, 64, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 1, 1, 3, 7, 5], [2, 0, 6, 5, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 5, 15, 8, 7, 3, 4, 2, 2, 1, 12, 7, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.pow(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, grad)), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(grad)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 0, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 5, 1, 1, 2, 8, 8], [1, 0, 2, 0, 2, 1, 0, 3, 5, 2], [0, 27, 16, 16], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1], [0, 3, 0, 3], [0, 78], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 24, 14, 10, 3, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(beta), tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(grad)))), grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 2], [0, 0, 1, 0, 2], [0, 80, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 1, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 47], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310814142227173, 2.310497522354126, 2.3105311393737793, 2.3100414276123047, 2.3102598190307617, 2.3099944591522217], "accuracy": [0.09219389408826828, 0.09417514503002167, 0.0878351628780365, 0.09192973375320435, 0.09166556596755981, 0.09060890227556229], "val_loss": [2.307765007019043, 2.307765007019043, 2.307765007019043, 2.307765007019043, 2.307765007019043, 2.307765007019043], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]