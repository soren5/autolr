[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 45], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [42], [1], [0], [2], [0]], "fitness": -0.8688571453094482, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2579004764556885, 1.6765589714050293, 1.1108731031417847, 0.8524818420410156, 0.7918075919151306, 0.7277662754058838, 0.6702878475189209, 0.6178891062736511, 0.5978718400001526, 0.5635958909988403, 0.5469719171524048, 0.5390145778656006, 0.5162861943244934, 0.48927193880081177, 0.461177259683609, 0.44167107343673706, 0.43788811564445496, 0.42111724615097046, 0.4116796553134918, 0.3995228111743927, 0.37426942586898804, 0.36675989627838135, 0.3612499237060547, 0.34567803144454956, 0.3392521142959595, 0.3317089080810547, 0.31622591614723206, 0.3080099821090698, 0.29854661226272583, 0.29532670974731445, 0.29503387212753296, 0.28003430366516113, 0.26946690678596497, 0.2538051903247833, 0.25305864214897156, 0.2503046989440918, 0.24325314164161682, 0.2470763474702835, 0.22401775419712067, 0.2252991646528244, 0.21385520696640015, 0.21863460540771484, 0.2045576572418213, 0.20007821917533875, 0.19674119353294373, 0.18843069672584534], "accuracy": [0.20776647329330444, 0.4571390748023987, 0.6235635876655579, 0.6798309087753296, 0.7084929347038269, 0.7195879220962524, 0.733588695526123, 0.7642319202423096, 0.769911527633667, 0.7803460359573364, 0.7921014428138733, 0.7928939461708069, 0.8005547523498535, 0.8125742673873901, 0.8256505131721497, 0.8315942287445068, 0.8296129703521729, 0.8392550349235535, 0.8459912538528442, 0.8479725122451782, 0.8564258217811584, 0.859199583530426, 0.8613129258155823, 0.8660678863525391, 0.8661999702453613, 0.872407853603363, 0.8779553771018982, 0.8796724081039429, 0.8853520154953003, 0.8856161832809448, 0.8912957310676575, 0.8926165699958801, 0.8951261639595032, 0.9000132083892822, 0.9019944667816162, 0.9006736278533936, 0.9025228023529053, 0.9037115573883057, 0.9140139818191528, 0.9088627696037292, 0.9148064851760864, 0.9140139818191528, 0.9167877435684204, 0.9220710396766663, 0.9243164658546448, 0.9227314591407776], "val_loss": [2.083977460861206, 0.9577600955963135, 0.8015905618667603, 0.6431036591529846, 0.6216651201248169, 0.5548271536827087, 0.5231267213821411, 0.49451306462287903, 0.4809243977069855, 0.4771710932254791, 0.45973894000053406, 0.4456694424152374, 0.4244515895843506, 0.4088714122772217, 0.39592602849006653, 0.38867565989494324, 0.38629308342933655, 0.37486156821250916, 0.3634897768497467, 0.36478474736213684, 0.3508811295032501, 0.34780558943748474, 0.3417271673679352, 0.3504887819290161, 0.3385474979877472, 0.332057386636734, 0.32747378945350647, 0.3326922059059143, 0.34789973497390747, 0.33261287212371826, 0.3347722291946411, 0.3297211229801178, 0.33350294828414917, 0.3280714750289917, 0.33079901337623596, 0.33248060941696167, 0.3331587314605713, 0.33203473687171936, 0.3226242661476135, 0.33565229177474976, 0.36003848910331726, 0.3530544340610504, 0.3441510796546936, 0.3501673638820648, 0.34708666801452637, 0.3517689108848572], "val_accuracy": [0.4320000112056732, 0.6673333048820496, 0.7213333249092102, 0.7513333559036255, 0.7706666588783264, 0.7870000004768372, 0.7993333339691162, 0.8086666464805603, 0.8166666626930237, 0.8169999718666077, 0.8309999704360962, 0.8299999833106995, 0.8420000076293945, 0.8519999980926514, 0.8569999933242798, 0.8636666536331177, 0.8573333621025085, 0.8723333477973938, 0.8666666746139526, 0.871666669845581, 0.8733333349227905, 0.8763333559036255, 0.8793333172798157, 0.8769999742507935, 0.8736666440963745, 0.878000020980835, 0.8833333253860474, 0.8813333511352539, 0.8806666731834412, 0.8766666650772095, 0.8853333592414856, 0.8793333172798157, 0.8799999952316284, 0.8866666555404663, 0.8913333415985107, 0.8920000195503235, 0.8943333625793457, 0.8899999856948853, 0.8923333287239075, 0.8920000195503235, 0.8966666460037231, 0.8933333158493042, 0.8939999938011169, 0.8899999856948853, 0.8956666588783264, 0.893666684627533]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5923691987991333, 0.826838493347168, 0.6400747895240784, 0.5947569012641907, 0.5781200528144836, 0.515025794506073, 0.5304877161979675, 0.5174568295478821, 0.49527430534362793, 0.4922363758087158, 0.48466598987579346, 0.49909183382987976, 0.48315560817718506, 0.4967040419578552, 0.5083745121955872, 0.5300437211990356, 0.502796471118927], "accuracy": [0.48527276515960693, 0.7092854380607605, 0.7718927264213562, 0.7835160493850708, 0.791969358921051, 0.8132346868515015, 0.8083476424217224, 0.8108572363853455, 0.8203672170639038, 0.8210275769233704, 0.8255184292793274, 0.8308017253875732, 0.8325188159942627, 0.8267071843147278, 0.8339717388153076, 0.8182538747787476, 0.8355567455291748], "val_loss": [0.8989320993423462, 0.6272791624069214, 0.5633260011672974, 0.5525979995727539, 0.5145728588104248, 0.5212212204933167, 0.528115451335907, 0.5363991856575012, 0.5168219208717346, 0.5594439506530762, 0.5828258991241455, 0.5704278945922852, 0.5529903769493103, 0.5763578414916992, 0.5547941327095032, 0.579419732093811, 0.5564637184143066], "val_accuracy": [0.6899999976158142, 0.7633333206176758, 0.7919999957084656, 0.8009999990463257, 0.8190000057220459, 0.8166666626930237, 0.8199999928474426, 0.8133333325386047, 0.8159999847412109, 0.812666654586792, 0.8253333568572998, 0.8320000171661377, 0.8223333358764648, 0.8180000185966492, 0.8193333148956299, 0.8183333277702332, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [4, 2, 3, 1, 3, 5, 7], [0, 0, 1, 0, 0, 0, 0], [0, 2, 77, 4, 15, 52], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 3, 1, 8, 2, 1, 1, 5, 0, 4, 2, 2, 0, 4, 9], [4, 0, 2, 0, 3, 1, 4, 0, 4, 3, 5, 2, 4, 5, 1], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 6, 37, 22, 15, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(grad, grad))))), grad))), beta), tf.math.add(tf.math.add(tf.math.negative(tf.math.pow(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 4, 3, 1, 9, 3, 8, 2], [0, 0, 3, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 5, 3, 5], [0, 0, 1, 1, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 3, 0], [0, 27, 16, 0], [1, 0, 1, 1], [0, 7], [0, 6], [38], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]