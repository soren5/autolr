[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5594513416290283, 0.8556442260742188, 0.6908341646194458, 0.6321982145309448, 0.593777060508728, 0.5430582761764526, 0.5228118896484375, 0.49511539936065674, 0.49292293190956116, 0.46275594830513, 0.4490354061126709, 0.4382374882698059, 0.4766758680343628, 0.442945659160614, 0.47045162320137024, 0.46089062094688416, 0.5242498517036438, 0.5715541243553162], "accuracy": [0.4764232039451599, 0.6951525807380676, 0.7461365461349487, 0.7670056819915771, 0.7779685854911804, 0.7930260300636292, 0.8083476424217224, 0.8123101592063904, 0.8195747137069702, 0.824329674243927, 0.8358209133148193, 0.8363492488861084, 0.8368775844573975, 0.8383304476737976, 0.8300092220306396, 0.8296129703521729, 0.8309338092803955, 0.8207634687423706], "val_loss": [0.9049822688102722, 0.6530699729919434, 0.6000010371208191, 0.5764688849449158, 0.5389391183853149, 0.5288523435592651, 0.531944751739502, 0.5334006547927856, 0.5139287710189819, 0.49422529339790344, 0.4959627687931061, 0.5236021280288696, 0.5374758839607239, 0.5581746697425842, 0.5763272047042847, 0.630449652671814, 0.6522742509841919, 0.6259239315986633], "val_accuracy": [0.6790000200271606, 0.7606666684150696, 0.7879999876022339, 0.7960000038146973, 0.8013333082199097, 0.8023333549499512, 0.8109999895095825, 0.8223333358764648, 0.8316666483879089, 0.8353333473205566, 0.8426666855812073, 0.8463333249092102, 0.8493333458900452, 0.8256666660308838, 0.8223333358764648, 0.8196666836738586, 0.815666675567627, 0.8253333568572998]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 4], [0, 0, 1, 0, 2, 3], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 0, 3, 8, 2], [0, 0, 1, 0, 3, 1, 1], [0, 27, 73, 16], [0, 1, 1, 1], [0, 7], [4, 3], [0], [1], [0], [5], [0]], "fitness": -0.20800000429153442, "mapping_values": [1, 12, 6, 6, 3, 6, 3, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.297415256500244, 2.4004435539245605, 2.247480630874634, 2.305229663848877, 2.303903102874756, 2.3026645183563232, 2.2652552127838135, 2.298875331878662, 2.303569793701172, 2.3034799098968506, 2.303086519241333, 2.3032379150390625], "accuracy": [0.2016906589269638, 0.13697001338005066, 0.1698586642742157, 0.09972262382507324, 0.09298639744520187, 0.10236428678035736, 0.1628582775592804, 0.11200633645057678, 0.09734513610601425, 0.09787346422672272, 0.09430722147226334, 0.09470347315073013], "val_loss": [2.2565436363220215, 2.2994544506073, 2.3069357872009277, 2.302886486053467, 2.302208662033081, 2.300283193588257, 2.0370681285858154, 2.3030147552490234, 2.3024485111236572, 2.3025546073913574, 2.3026485443115234, 2.3026022911071777], "val_accuracy": [0.11133333295583725, 0.14266666769981384, 0.10199999809265137, 0.10100000351667404, 0.0989999994635582, 0.1589999943971634, 0.20133332908153534, 0.10199999809265137, 0.10199999809265137, 0.0989999994635582, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [79, 8, 16, 16], [0, 0, 0, 1, 0, 1], [0, 7, 3, 9], [0, 6], [0, 28], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035433292388916, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 3, 6, 3, 8, 2, 2, 2, 0, 4, 5, 2, 1, 3, 9, 9, 7, 4, 4, 1], [1, 0, 2, 0, 3, 1, 2, 5, 2, 4, 0, 5, 2, 3, 2], [0, 27, 16, 16, 57], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 37, 22, 15, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.math.add(tf.math.negative(beta), grad))), tf.math.pow(tf.math.square(beta), tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, beta), grad)), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 0, 0, 3, 1, 0], [0, 27, 16, 0, 90], [0, 0, 1, 1], [8, 7], [4, 7], [0], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 5, 4, 2, 2, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3088901042938232, 2.3100595474243164, 2.310842752456665, 2.3092916011810303, 2.3103673458099365, 2.309901714324951, 2.308912515640259, 2.3095905780792236, 2.3117189407348633, 2.3104922771453857, 2.310734748840332, 2.3096470832824707, 2.3120322227478027, 2.3118388652801514, 2.3124582767486572, 2.312891721725464, 2.31198787689209, 2.3121678829193115, 2.313474416732788, 2.3118374347686768, 2.3121016025543213, 2.312772512435913], "accuracy": [0.09417514503002167, 0.09457138925790787, 0.09245806187391281, 0.08730682730674744, 0.09206181764602661, 0.09232597798109055, 0.09694888442754745, 0.0952318087220192, 0.09668471664190292, 0.09100515395402908, 0.0948355570435524, 0.09576013684272766, 0.09100515395402908, 0.08902391046285629, 0.0948355570435524, 0.0944393053650856, 0.09760929644107819, 0.09496764093637466, 0.09959053993225098, 0.09747721254825592, 0.09655263274908066, 0.1006472036242485], "val_loss": [2.3088278770446777, 2.3088295459747314, 2.3088324069976807, 2.3088395595550537, 2.3088510036468506, 2.308868408203125, 2.3088934421539307, 2.3089277744293213, 2.308969736099243, 2.309018611907959, 2.309069871902466, 2.3091228008270264, 2.3091795444488525, 2.309237241744995, 2.309297561645508, 2.3093817234039307, 2.3094875812530518, 2.3095927238464355, 2.3096587657928467, 2.3097214698791504, 2.3097984790802, 2.3099257946014404], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09166666865348816, 0.09166666865348816, 0.09133332967758179, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971, 0.09399999678134918, 0.09333333373069763, 0.09433333575725555, 0.09666666388511658, 0.0976666659116745, 0.09866666793823242, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]