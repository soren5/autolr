[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.574512243270874, 0.8329503536224365, 0.6933216452598572, 0.64066481590271, 0.5988940596580505, 0.6058288812637329, 0.5511704683303833, 0.5263606905937195, 0.5388538241386414, 0.5211689472198486, 0.5439134240150452, 0.5604889988899231, 0.5351349711418152, 0.5396141409873962, 0.5192012786865234, 0.501130998134613, 0.5324092507362366, 0.525265097618103, 0.5519377589225769], "accuracy": [0.4791969358921051, 0.7033417224884033, 0.7464007139205933, 0.7630431652069092, 0.7684586048126221, 0.7763835787773132, 0.7954035401344299, 0.8004226684570312, 0.8035926818847656, 0.8150838613510132, 0.8062343001365662, 0.8109893202781677, 0.8124422430992126, 0.7943468689918518, 0.8146876096725464, 0.8267071843147278, 0.8101968169212341, 0.8183859586715698, 0.8150838613510132], "val_loss": [0.8783159255981445, 0.6074560284614563, 0.5619939565658569, 0.5214406847953796, 0.535385012626648, 0.5118851065635681, 0.4863975942134857, 0.5098145604133606, 0.5545520782470703, 0.5139358043670654, 0.5976091027259827, 0.57468181848526, 0.5432342886924744, 0.5139142274856567, 0.5811925530433655, 0.559019923210144, 0.6453890204429626, 0.6013854742050171, 0.6023205518722534], "val_accuracy": [0.6836666464805603, 0.7853333353996277, 0.784333348274231, 0.8053333163261414, 0.8166666626930237, 0.8090000152587891, 0.8173333406448364, 0.8240000009536743, 0.8253333568572998, 0.8203333616256714, 0.8240000009536743, 0.8299999833106995, 0.8266666531562805, 0.8356666564941406, 0.8326666951179504, 0.831333339214325, 0.8136666417121887, 0.82833331823349, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 6, 3, 8, 2, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 1], [0, 6, 5, 4], [0], [1], [0], [2], [0]], "fitness": -0.7979999780654907, "mapping_values": [1, 11, 6, 5, 3, 15, 9, 6, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614734172821045, 1.7218716144561768, 1.3568158149719238, 0.9735732674598694, 0.8755607604980469, 0.7888233065605164, 0.7795317769050598, 0.783532440662384, 0.7485991716384888, 0.7282690405845642, 0.6874488592147827, 0.6592971682548523, 0.661460816860199, 0.6666154861450195, 0.6870681047439575, 0.6844453811645508], "accuracy": [0.1938977688550949, 0.4555540978908539, 0.5876370072364807, 0.6485272645950317, 0.6794346570968628, 0.7117950320243835, 0.6991150379180908, 0.7049266695976257, 0.7147008180618286, 0.7329282760620117, 0.7458723783493042, 0.7535332441329956, 0.7471932172775269, 0.746268630027771, 0.7504953145980835, 0.7564390301704407], "val_loss": [2.0935957431793213, 0.9562332630157471, 0.7418619990348816, 0.7377729415893555, 0.6475878357887268, 0.6517701148986816, 0.6049771904945374, 0.5433844923973083, 0.5542268753051758, 0.5370727777481079, 0.5350697040557861, 0.540772557258606, 0.5415942072868347, 0.5398572683334351, 0.5410702228546143, 0.5550550818443298], "val_accuracy": [0.4790000021457672, 0.6710000038146973, 0.7279999852180481, 0.722000002861023, 0.7546666860580444, 0.7400000095367432, 0.7649999856948853, 0.7900000214576721, 0.7856666445732117, 0.7883333563804626, 0.8080000281333923, 0.7960000038146973, 0.7923333048820496, 0.7919999957084656, 0.8043333292007446, 0.7993333339691162]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 3, 5], [2, 0, 2, 0, 0], [29, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 6, 3, 8, 2], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 8], [0, 7], [0], [0, 0, 1, 1], [0, 3], [2, 7], [0]], "fitness": -0.7837142944335938, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 2, 3, 2, 1, 1, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, grad))", "other_info": {"loss": [2.291623592376709, 2.0764353275299072, 1.466125249862671, 1.2053252458572388, 1.0477148294448853, 1.0022743940353394, 0.7848252058029175, 0.8479951024055481, 0.8273773193359375, 0.8346859812736511, 0.6335157752037048, 0.7257148623466492, 1.3630101680755615, 2.674814462661743, 2.152273178100586, 2.309361696243286], "accuracy": [0.13340377807617188, 0.36428478360176086, 0.5139347314834595, 0.5711266398429871, 0.6250165104866028, 0.6380926966667175, 0.7013604640960693, 0.6863030195236206, 0.6811517477035522, 0.7079645991325378, 0.7619865536689758, 0.7343811988830566, 0.6470743417739868, 0.15876370668411255, 0.23286223411560059, 0.09932637959718704], "val_loss": [2.2381627559661865, 1.3806097507476807, 1.471163034439087, 0.8799641728401184, 1.1655980348587036, 0.7407779693603516, 0.7177090644836426, 0.619445264339447, 0.7803074717521667, 0.6994432806968689, 0.5792595744132996, 0.6391261219978333, 2.3695549964904785, 2.333667755126953, 2.318681240081787, 2.3026130199432373], "val_accuracy": [0.3893333375453949, 0.6240000128746033, 0.5206666588783264, 0.6826666593551636, 0.5823333263397217, 0.6990000009536743, 0.7276666760444641, 0.7630000114440918, 0.7333333492279053, 0.750333309173584, 0.7793333530426025, 0.765666663646698, 0.0976666659116745, 0.10300000011920929, 0.10166666656732559, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 0, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 3, 7, 2, 8, 7, 4, 0, 6, 9, 6, 3, 9], [0, 0, 2, 4, 3, 1, 0, 2, 3, 0, 3, 2, 4], [0, 27, 16, 0, 18, 61], [0, 0, 1, 1], [0, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 33, 20, 13, 6, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), grad), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), grad), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 2, 6, 3, 8, 2, 8], [4, 0, 3, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [7, 0], [0, 7], [0], [0, 0, 1, 1], [0, 6], [2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 3, 4, 2, 2, 1, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]