[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8285714387893677, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5726326704025269, 0.8536527752876282, 0.6778867840766907, 0.5896195769309998, 0.5951336026191711, 0.5897353887557983, 0.5269356369972229, 0.5285736918449402, 0.5010600686073303, 0.48735347390174866, 0.47057461738586426, 0.5579023361206055, 0.5835305452346802, 0.5471317768096924, 0.5586767792701721], "accuracy": [0.45727115869522095, 0.7051908373832703, 0.7586844563484192, 0.7886672616004944, 0.7936864495277405, 0.7947431206703186, 0.8104609847068787, 0.8210275769233704, 0.8189142942428589, 0.8277638554573059, 0.8280280232429504, 0.8232730031013489, 0.8098005652427673, 0.8094043135643005, 0.8165367841720581], "val_loss": [0.8756449222564697, 0.6330692768096924, 0.5491230487823486, 0.5118166208267212, 0.49677929282188416, 0.484890878200531, 0.4983963966369629, 0.4991239309310913, 0.4626930058002472, 0.48100918531417847, 0.5098946690559387, 0.5799142718315125, 0.5252227187156677, 0.582855224609375, 0.5445470213890076], "val_accuracy": [0.6903333067893982, 0.781000018119812, 0.7946666479110718, 0.8199999928474426, 0.8213333487510681, 0.8236666917800903, 0.831333339214325, 0.8323333263397217, 0.8393333554267883, 0.8413333296775818, 0.8386666774749756, 0.828000009059906, 0.8236666917800903, 0.8346666693687439, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 5, 8, 2], [0, 0, 2, 0, 2, 1, 0], [46, 1, 16, 16], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 6, 7, 2, 8], [4, 5, 7, 7, 0], [0], [1], [0], [5], [0]], "fitness": -0.170571431517601, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.311088800430298, 2.459362745285034, 2.306387186050415, 2.3023033142089844, 2.29137921333313, 2.4922685623168945], "accuracy": [0.20076608657836914, 0.20631356537342072, 0.09694888442754745, 0.10949676483869553, 0.15651829540729523, 0.15374454855918884], "val_loss": [2.231090784072876, 2.308204412460327, 2.3022329807281494, 2.299834966659546, 2.177668333053589, 2.307633399963379], "val_accuracy": [0.16366666555404663, 0.10199999809265137, 0.10400000214576721, 0.10199999809265137, 0.12466666847467422, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 6, 3, 8, 2, 6, 2], [0, 0, 2, 0, 3, 1, 0, 0, 3], [0, 27, 16, 84, 62], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 7, 3, 1, 4, 9, 3, 4, 7, 0, 3, 9, 2, 4, 0, 1, 1, 5, 1, 3, 1, 3, 6, 9, 0], [4, 5, 6, 5, 2, 0, 5, 6, 0, 6, 5, 1, 0, 0, 3], [0, 15, 57, 2, 91, 97, 14], [1], [0], [2], [0]], "fitness": -0.11571428924798965, "mapping_values": [1, 1, 0, 1, 1, 19, 10, 9, 5, 40, 25, 15, 7, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.negative(grad), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))), tf.math.add(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.subtract(grad, grad), tf.math.square(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(grad, alpha))))))), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), tf.math.negative(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.143947387006616e+18, 3.327562342145007e+20, 2.533616219542654e+21, 9.66177381668125e+21, 2.587278354247629e+22, 5.985618522227703e+22], "accuracy": [0.10434553027153015, 0.10130762308835983, 0.10553427785634995, 0.10487385839223862, 0.10408136248588562, 0.1018359512090683], "val_loss": [6.39047153179689e+19, 1.019858431491535e+21, 5.158461856736952e+21, 1.6296030931360355e+22, 3.9774535404640184e+22, 8.246166578189118e+22], "val_accuracy": [0.10999999940395355, 0.10999999940395355, 0.10999999940395355, 0.10999999940395355, 0.10999999940395355, 0.10999999940395355]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 0, 8, 4], [0, 2, 2, 3, 3, 5, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 4, 2, 1, 9, 3, 3, 8, 1, 5], [2, 3, 1, 3, 7, 0, 1], [0, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 5, 5, 1, 4, 2, 2, 0, 18, 11, 7, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, sigma), tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(alpha, tf.math.sqrt(sigma)), tf.math.subtract(grad, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 1, 6, 3, 8, 5], [0, 0, 2, 0, 3, 1, 0], [0, 23, 16, 16], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 7, 4, 7, 1, 5, 8, 1, 2, 9, 0, 7, 5, 3, 8, 2, 7, 5, 8, 9, 6, 1, 0, 6, 6, 5, 0, 5, 5, 7, 0, 7, 6, 2, 9, 6, 3, 5, 2, 9, 2], [4, 5, 4, 2, 4, 7, 6, 1, 1, 7, 7, 0, 4, 6, 7, 7, 6, 4, 6], [0, 37, 60, 91, 26], [1], [0], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 60, 41, 19, 5, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.subtract(grad, grad), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(grad, tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.negative(alpha)), tf.math.square(alpha)), tf.math.square(tf.math.add(grad, tf.math.negative(grad)))))))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.square(grad), grad))))))))), tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089420795440674, 2.3098833560943604, 2.3096470832824707, 2.3095247745513916, 2.3091397285461426, 2.309497117996216], "accuracy": [0.09192973375320435, 0.09008057415485382, 0.09126931428909302, 0.09470347315073013, 0.09192973375320435, 0.08981640636920929], "val_loss": [2.3097352981567383, 2.3097352981567383, 2.3097352981567383, 2.3097352981567383, 2.3097352981567383, 2.3097352981567383], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]