[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6149779558181763, 0.8060575127601624, 0.6275704503059387, 0.5822274684906006, 0.596378743648529, 0.6226047277450562, 0.5741221308708191, 0.5221145749092102, 0.5259429216384888, 0.5843518972396851, 0.533336877822876, 0.5196263790130615, 0.4991607964038849, 0.5298289656639099, 0.5544430613517761, 0.5654486417770386, 0.521486222743988, 0.5157758593559265, 0.5035540461540222], "accuracy": [0.4519878625869751, 0.7140403985977173, 0.7619865536689758, 0.7852331399917603, 0.7791573405265808, 0.7881389260292053, 0.796328067779541, 0.8136309385299683, 0.8094043135643005, 0.802800178527832, 0.8132346868515015, 0.816008448600769, 0.8175934553146362, 0.8082155585289001, 0.811649739742279, 0.8137630224227905, 0.83119797706604, 0.8211596608161926, 0.8244617581367493], "val_loss": [0.7264803051948547, 0.5812032222747803, 0.5277977585792542, 0.547254204750061, 0.5302700400352478, 0.5279576182365417, 0.5119195580482483, 0.5073070526123047, 0.5738325119018555, 0.5746843218803406, 0.5346332788467407, 0.5752533078193665, 0.5364078283309937, 0.5692737102508545, 0.5351824760437012, 0.6391759514808655, 0.597618579864502, 0.6056268811225891, 0.6716604828834534], "val_accuracy": [0.7446666955947876, 0.7826666831970215, 0.796999990940094, 0.8069999814033508, 0.8273333311080933, 0.8230000138282776, 0.8240000009536743, 0.82833331823349, 0.8119999766349792, 0.8186666369438171, 0.8349999785423279, 0.8263333439826965, 0.8286666870117188, 0.846666693687439, 0.8289999961853027, 0.8386666774749756, 0.8366666436195374, 0.8339999914169312, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 6, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 7, 0, 1, 5, 5, 0, 1, 2, 1], [0, 0, 2, 0, 2, 4, 0, 2, 1, 0, 2, 1], [0, 27, 16, 20, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), grad), tf.math.subtract(tf.math.square(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 9, 6, 3, 3, 29, 17, 12, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [3, 3, 0, 1, 1, 5, 9, 9], [2, 0, 3, 0, 2], [0, 39, 39, 59], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 0, 2], [0, 0, 2, 0, 3, 3, 5], [0, 27, 16, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [6, 7, 2, 1, 0, 8, 3, 9], [4, 5, 1, 0, 3], [0, 65], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 8, 3, 3, 6, 3, 3, 2, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.subtract(grad, tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(sigma, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098528385162354, 2.3102872371673584, 2.309959650039673, 2.3098015785217285, 2.3098926544189453, 2.3094921112060547], "accuracy": [0.0944393053650856, 0.09642054885625839, 0.09298639744520187, 0.09549596905708313, 0.09074098616838455, 0.09721305221319199], "val_loss": [2.3085806369781494, 2.3085806369781494, 2.3085806369781494, 2.3085806369781494, 2.3085806369781494, 2.3085806369781494], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 0, 8, 2], [0, 0, 2, 5, 3, 4, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 7], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105967044830322, 2.3101589679718018, 2.30989408493042, 2.3100340366363525, 2.3095061779022217, 2.310734272003174], "accuracy": [0.09259014576673508, 0.09325055778026581, 0.08902391046285629, 0.09113723784685135, 0.09272222965955734, 0.09008057415485382], "val_loss": [2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [5, 0, 3, 1, 6, 2, 8, 2], [0, 1, 2, 2, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 7, 6, 0, 1, 2, 7, 3, 2, 0, 0, 9], [4, 5, 0, 2, 1, 0, 4], [0, 88, 17], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 4, 5, 3, 3, 2, 1, 1, 19, 12, 7, 3, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.math.negative(alpha)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110969066619873, 2.3101987838745117, 2.31010365486145, 2.309638738632202, 2.311366558074951, 2.308501958847046], "accuracy": [0.09206181764602661, 0.09206181764602661, 0.0866464152932167, 0.09219389408826828, 0.09047681838274002, 0.09642054885625839], "val_loss": [2.3089771270751953, 2.3089771270751953, 2.3089771270751953, 2.3089771270751953, 2.3089771270751953, 2.3089771270751953], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]