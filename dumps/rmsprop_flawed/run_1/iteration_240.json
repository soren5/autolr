[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5785785913467407, 0.8734444975852966, 0.718458890914917, 0.6400091648101807, 0.5663774609565735, 0.55888831615448, 0.5278730392456055, 0.489822119474411, 0.48460662364959717, 0.47484090924263, 0.46133890748023987, 0.4528502821922302, 0.4473356306552887, 0.43024829030036926, 0.4390415847301483, 0.42868077754974365, 0.4887280762195587, 0.4767835736274719], "accuracy": [0.4683661460876465, 0.7166820764541626, 0.7401928305625916, 0.7730814814567566, 0.7840443849563599, 0.7940827012062073, 0.806630551815033, 0.8239334225654602, 0.8220842480659485, 0.8274996876716614, 0.8379341959953308, 0.8393871188163757, 0.8408400416374207, 0.8519350290298462, 0.8436138033866882, 0.843481719493866, 0.8364813327789307, 0.8424250483512878], "val_loss": [0.9590961933135986, 0.6428583264350891, 0.5747817158699036, 0.5452672243118286, 0.5208549499511719, 0.5188910365104675, 0.4927106499671936, 0.4845794141292572, 0.5082162022590637, 0.5499275326728821, 0.5605891346931458, 0.5531970262527466, 0.5316197872161865, 0.5785455703735352, 0.5263777375221252, 0.578658401966095, 0.5420462489128113, 0.5868918299674988], "val_accuracy": [0.6549999713897705, 0.7723333239555359, 0.7976666688919067, 0.8050000071525574, 0.8236666917800903, 0.8163333535194397, 0.8259999752044678, 0.8289999961853027, 0.828000009059906, 0.8259999752044678, 0.8333333134651184, 0.8420000076293945, 0.8500000238418579, 0.8426666855812073, 0.8370000123977661, 0.8486666679382324, 0.840666651725769, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 6, 1, 3, 5, 0], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 2, 5, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [7, 7, 8, 1, 7, 4, 2, 0, 7, 5, 6, 3, 9], [0, 0, 7, 3, 5, 3, 6, 0, 4], [0, 75, 45, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 3, 5, 6, 7, 6, 8, 1, 4, 7, 4, 8], [2, 1, 4, 1, 7, 4, 2, 5, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 6, 3, 3, 2, 22, 13, 9, 4, 23, 13, 10, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma)))), tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), sigma)), tf.math.divide_no_nan(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.square(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.sqrt(grad))))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.pow(grad, tf.math.sqrt(beta)), grad), beta), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 5, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 8], [0, 7], [72], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1246.484130859375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18174614012241364, 0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [456633.125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07800000160932541, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 8, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 38], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 8, 6, 4, 8, 2], [2, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098621368408203, 2.311502456665039, 2.310199022293091, 2.310502290725708, 2.3109683990478516, 2.3107106685638428], "accuracy": [0.09047681838274002, 0.08809932321310043, 0.09391097724437714, 0.08836349099874496, 0.08981640636920929, 0.09166556596755981], "val_loss": [2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 9, 3, 9, 6, 3, 8, 3], [0, 0, 2, 0, 3, 1, 2], [22, 27, 66, 0], [0, 1, 1, 1], [0, 7], [1, 7], [0], [0, 0, 0], [0, 5, 9], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 4, 2, 3, 2, 1, 1, 1, 2, 1, 1, 0, 3, 3, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3095808029174805, 2.3097822666168213, 2.3098278045654297, 2.312215805053711, 2.3105666637420654, 2.309357166290283], "accuracy": [0.09325055778026581, 0.09047681838274002, 0.09615638852119446, 0.08625016361474991, 0.09642054885625839, 0.09060890227556229], "val_loss": [2.3092997074127197, 2.3092997074127197, 2.3092997074127197, 2.3092997074127197, 2.3092997074127197, 2.3092997074127197], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]