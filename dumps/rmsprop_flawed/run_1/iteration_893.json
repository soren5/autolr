[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5353128910064697, 0.9571294784545898, 0.7822321653366089, 0.6500469446182251, 0.6234649419784546, 0.5880928039550781, 0.5396398305892944, 0.5234612226486206, 0.5104672312736511, 0.5749890804290771, 0.5628735423088074, 0.5458242893218994, 0.5360536575317383, 0.5496613383293152, 0.5314768552780151, 0.5026243329048157, 0.4940803050994873, 0.5075998902320862, 0.5414923429489136, 0.5944746136665344, 0.6327083706855774, 0.6303766369819641], "accuracy": [0.47285696864128113, 0.6954167485237122, 0.7314753532409668, 0.7613261342048645, 0.7677981853485107, 0.7815347909927368, 0.7967243194580078, 0.8098005652427673, 0.8203672170639038, 0.8057059645652771, 0.8025360107421875, 0.8094043135643005, 0.8031964302062988, 0.800290584564209, 0.8257825970649719, 0.8201030492782593, 0.8345000743865967, 0.8166688680648804, 0.8244617581367493, 0.8166688680648804, 0.8144234418869019, 0.809140145778656], "val_loss": [0.8057838678359985, 0.7029472589492798, 0.5660942792892456, 0.555092453956604, 0.5179581046104431, 0.4896208941936493, 0.4798693358898163, 0.498005211353302, 0.5639030933380127, 0.5315836071968079, 0.5324713587760925, 0.5461666584014893, 0.5218191146850586, 0.5285405516624451, 0.5143023133277893, 0.5221373438835144, 0.5318269729614258, 0.5366725325584412, 0.6454744338989258, 0.7325116395950317, 0.7614156007766724, 0.6657766103744507], "val_accuracy": [0.7176666855812073, 0.7486666440963745, 0.7826666831970215, 0.7906666398048401, 0.8036666512489319, 0.812333345413208, 0.8253333568572998, 0.8213333487510681, 0.8119999766349792, 0.8066666722297668, 0.8266666531562805, 0.8220000267028809, 0.8213333487510681, 0.828000009059906, 0.8396666646003723, 0.8416666388511658, 0.843999981880188, 0.8256666660308838, 0.8289999961853027, 0.8213333487510681, 0.8266666531562805, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [3, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 0, 2], [5, 0, 2, 0, 3, 1, 3], [0, 27, 16, 16], [1, 0, 0, 1], [0, 7], [4, 5], [0], [1], [0], [7], [0]], "fitness": -0.3985714316368103, "mapping_values": [1, 1, 0, 1, 0, 10, 5, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.257509469985962, 2.3372013568878174, 2.29952335357666, 2.198718309402466, 2.089231014251709, 1.9546886682510376, 2.3962738513946533, 2.2923617362976074, 2.3148531913757324, 2.304039716720581, 2.303652763366699], "accuracy": [0.20472857356071472, 0.14463083446025848, 0.17540615797042847, 0.201294407248497, 0.30101704597473145, 0.32545238733291626, 0.2911108136177063, 0.14872540533542633, 0.10447761416435242, 0.10540219396352768, 0.10196803510189056], "val_loss": [2.2151222229003906, 2.2911829948425293, 2.2456982135772705, 2.2191944122314453, 1.8762918710708618, 1.8820068836212158, 2.327641010284424, 2.3459115028381348, 2.3042385578155518, 2.3027939796447754, 2.3026933670043945], "val_accuracy": [0.14666666090488434, 0.09733333438634872, 0.23333333432674408, 0.20866666734218597, 0.34466665983200073, 0.4176666736602783, 0.09866666793823242, 0.09733333438634872, 0.09866666793823242, 0.10199999809265137, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 9, 6, 1, 8, 2, 2, 1, 2, 6], [0, 0, 3, 0, 3, 1, 0, 2, 3], [0, 27, 16, 16, 41], [0, 0, 1, 1], [0, 8], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.17714285850524902, "mapping_values": [1, 1, 0, 1, 1, 21, 12, 9, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1796586513519287, 2.3316783905029297, 2.362337827682495, 2.3803658485412598, 2.8848838806152344, 2.3748931884765625, 2.3503832817077637], "accuracy": [0.20935148000717163, 0.09642054885625839, 0.11979923397302628, 0.12838461995124817, 0.10249637067317963, 0.10011887550354004, 0.1006472036242485], "val_loss": [2.342437267303467, 2.3614604473114014, 2.324037551879883, 7.327542304992676, 2.3592634201049805, 2.372234344482422, 2.376970052719116], "val_accuracy": [0.10100000351667404, 0.1743333339691162, 0.14166666567325592, 0.10599999874830246, 0.09933333098888397, 0.10166666656732559, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [2, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 4, 0], [0, 69, 52, 45], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 0, 9, 7, 2, 5, 2], [4, 5, 0, 5], [0, 81], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.square(grad), grad), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 1, 3, 8, 2], [0, 0, 2, 1, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 1], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310177803039551, 2.3097805976867676, 2.310504674911499, 2.309854030609131, 2.3101229667663574, 2.309969902038574], "accuracy": [0.08889182657003403, 0.09311848133802414, 0.08717474341392517, 0.09285431355237961, 0.09800554811954498, 0.0956280529499054], "val_loss": [2.3082058429718018, 2.3082058429718018, 2.3082058429718018, 2.3082058429718018, 2.3082058429718018, 2.3082058429718018], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]