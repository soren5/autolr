[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4988124370574951, 0.7474319338798523, 0.6741764545440674, 0.6148375272750854, 0.5694629549980164, 0.529469907283783, 0.49771422147750854, 0.479979008436203, 0.4655798077583313, 0.4516810178756714, 0.4402216374874115, 0.4567866921424866, 0.4584745764732361, 0.4540124237537384, 0.43733876943588257, 0.4834165871143341, 0.47202804684638977, 0.4700411558151245, 0.46434223651885986], "accuracy": [0.48646149039268494, 0.7313432693481445, 0.7514199018478394, 0.7771760821342468, 0.7918372750282288, 0.8080834746360779, 0.8222163319587708, 0.8249900937080383, 0.8317263126373291, 0.8348963260650635, 0.8404437899589539, 0.846387505531311, 0.8421608805656433, 0.8512746095657349, 0.8510104417800903, 0.8453308939933777, 0.8368775844573975, 0.8459912538528442, 0.8352925777435303], "val_loss": [0.7385188937187195, 0.6085017323493958, 0.5397458672523499, 0.5397509932518005, 0.4986564815044403, 0.5117981433868408, 0.4655604362487793, 0.4823891520500183, 0.4826931059360504, 0.5084319710731506, 0.5106407999992371, 0.491734117269516, 0.5162461996078491, 0.5325446724891663, 0.5570769309997559, 0.5675660967826843, 0.5444800853729248, 0.5447368621826172, 0.5733049511909485], "val_accuracy": [0.7360000014305115, 0.7649999856948853, 0.8009999990463257, 0.8059999942779541, 0.8169999718666077, 0.8323333263397217, 0.8383333086967468, 0.8320000171661377, 0.8363333344459534, 0.8349999785423279, 0.8446666598320007, 0.840666651725769, 0.8423333168029785, 0.8516666889190674, 0.8446666598320007, 0.843666672706604, 0.8506666421890259, 0.840666651725769, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [4, 39, 39], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 9, 3, 1, 6, 3, 8, 2], [0, 0, 5, 0, 3, 1, 0], [0, 64, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [7], [0]], "fitness": -0.3142857253551483, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3018312454223633, 2.293992280960083, 2.276050329208374, 2.3077638149261475, 2.284146308898926, 2.3897905349731445], "accuracy": [0.1978602558374405, 0.1834632158279419, 0.1356491893529892, 0.10236428678035736, 0.17144367098808289, 0.13010171055793762], "val_loss": [2.244962453842163, 2.304121732711792, 2.3171491622924805, 2.298963785171509, 2.308156967163086, 2.3082470893859863], "val_accuracy": [0.3213333189487457, 0.16099999845027924, 0.10133333504199982, 0.0989999994635582, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 5, 4, 1, 2, 3, 6, 9, 7, 3, 3, 1, 3, 6, 0, 8, 4, 2, 9], [0, 0, 1, 3, 2, 0, 2, 3, 0, 0, 3, 0, 0, 3, 0, 1, 0], [0, 39, 36, 87, 88, 1, 35, 8, 1, 2, 85], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 4], [0, 0, 2, 5, 3, 1, 0], [0, 27, 19, 16], [0, 0, 1, 0], [9, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 25, 17, 11, 4, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.subtract(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3040430545806885, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 3, 1, 6, 3, 8, 2], [0, 0, 5, 0, 3, 4, 1], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 7, 4, 3, 3], [0, 6, 0, 6, 3, 6], [0, 33], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 4, 2, 2, 1, 7, 3, 4, 3, 12, 6, 6, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.multiply(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094165325164795, 2.309441566467285, 2.309380292892456, 2.3098511695861816, 2.3090717792510986, 2.311188220977783], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.0948355570435524, 0.09060890227556229, 0.09338264167308807, 0.08849557489156723], "val_loss": [2.3086631298065186, 2.3086631298065186, 2.3086631298065186, 2.3086631298065186, 2.3086631298065186, 2.3086631298065186], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 5, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 7, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 5, 3, 2, 2, 6, 3, 3, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310699939727783, 2.309330940246582, 2.308851718902588, 2.3105788230895996, 2.309657096862793, 2.309833288192749], "accuracy": [0.09113723784685135, 0.09972262382507324, 0.09615638852119446, 0.09536388516426086, 0.09140139818191528, 0.08928807079792023], "val_loss": [2.3082005977630615, 2.3082005977630615, 2.3082005977630615, 2.3082005977630615, 2.3082005977630615, 2.3082005977630615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]