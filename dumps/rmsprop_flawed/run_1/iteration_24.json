[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5229512453079224, 0.8398356437683105, 0.768315315246582, 0.6635664105415344, 0.6060384511947632, 0.577427089214325, 0.5472424626350403, 0.5155730843544006, 0.48799604177474976, 0.48982787132263184, 0.48329082131385803, 0.4604598879814148, 0.44966864585876465, 0.48021045327186584, 0.4898182153701782, 0.48748382925987244, 0.46514204144477844, 0.48984813690185547, 0.5014886260032654, 0.49229782819747925, 0.5021675229072571, 0.5392447710037231, 0.6692204475402832], "accuracy": [0.505877673625946, 0.7191916704177856, 0.7290979027748108, 0.7535332441329956, 0.770439863204956, 0.7905164361000061, 0.7973847389221191, 0.8162726163864136, 0.8191784620285034, 0.8240655064582825, 0.8321225643157959, 0.8294808864593506, 0.8449346423149109, 0.8319904804229736, 0.8379341959953308, 0.8296129703521729, 0.8396512866020203, 0.8391229510307312, 0.8318583965301514, 0.841500461101532, 0.8374059200286865, 0.83119797706604, 0.8302733898162842], "val_loss": [0.8612575531005859, 0.5978550910949707, 0.5604308247566223, 0.5235444903373718, 0.5537806153297424, 0.5127967000007629, 0.5058331489562988, 0.46544355154037476, 0.5481975674629211, 0.5028566718101501, 0.48835083842277527, 0.514824390411377, 0.5451439023017883, 0.6299095749855042, 0.5453667044639587, 0.518028974533081, 0.6026729941368103, 0.6031602025032043, 0.733207106590271, 0.8000832796096802, 0.7997904419898987, 0.8344039916992188, 0.8225914835929871], "val_accuracy": [0.7179999947547913, 0.7726666927337646, 0.7873333096504211, 0.8103333115577698, 0.812666654586792, 0.8266666531562805, 0.8259999752044678, 0.8370000123977661, 0.8360000252723694, 0.8286666870117188, 0.843999981880188, 0.8376666903495789, 0.8339999914169312, 0.8286666870117188, 0.8370000123977661, 0.8443333506584167, 0.8463333249092102, 0.8496666550636292, 0.8473333120346069, 0.8479999899864197, 0.8353333473205566, 0.828000009059906, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 0], [0, 0, 1, 2, 2, 3], [0, 39, 39], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [85], [1], [0], [5], [0]], "fitness": -0.157428577542305, "mapping_values": [1, 14, 8, 6, 2, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(alpha), grad))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.418086290359497, 2.235621690750122, 3.302363395690918, 2.2969517707824707, 2.3039932250976562, 2.303219795227051, 2.3029463291168213, 2.3033676147460938], "accuracy": [0.17316074669361115, 0.16853784024715424, 0.11240258812904358, 0.10434553027153015, 0.0956280529499054, 0.09906221181154251, 0.10460969805717468, 0.0948355570435524], "val_loss": [2.3033511638641357, 8.353177070617676, 2.210324764251709, 2.3033459186553955, 2.303164482116699, 2.302779197692871, 2.3025810718536377, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.12733332812786102, 0.15933333337306976, 0.0963333323597908, 0.10566666722297668, 0.09933333098888397, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 2, 5, 2, 9, 6, 7, 5, 8, 6], [0, 0, 1, 0, 2, 2, 0, 3], [0, 39, 39, 67, 40], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 2, 3, 1, 6, 7, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 5, 14, 7, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.divide_no_nan(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 0, 2, 0, 1, 3, 6], [0, 0, 2, 0, 4, 1, 0, 0, 1, 2, 3], [0, 27, 16, 0, 76], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 26, 15, 11, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(alpha, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 3, 3, 8, 2], [0, 0, 3, 0, 2, 2], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 1], [0, 27, 16, 0], [1, 0, 0, 1], [0, 9], [5, 6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 13, 7, 6, 3, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095762729644775, 2.309307813644409, 2.3089890480041504, 2.3108572959899902, 2.3104498386383057, 2.310750722885132], "accuracy": [0.09311848133802414, 0.09298639744520187, 0.0944393053650856, 0.09232597798109055, 0.09153348207473755, 0.09245806187391281], "val_loss": [2.308750867843628, 2.308750867843628, 2.308750867843628, 2.308750867843628, 2.308750867843628, 2.308750867843628], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]