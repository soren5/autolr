[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4881588220596313, 0.8002588152885437, 0.6575557589530945, 0.6165233254432678, 0.5748111009597778, 0.5332599878311157, 0.5131555199623108, 0.4853847324848175, 0.46876654028892517, 0.4742886424064636, 0.46380698680877686, 0.45934394001960754, 0.41190028190612793, 0.42635002732276917], "accuracy": [0.5032360553741455, 0.719852089881897, 0.7623828053474426, 0.7724210619926453, 0.7865539789199829, 0.8080834746360779, 0.8140271902084351, 0.828292191028595, 0.8281601071357727, 0.8330471515655518, 0.8277638554573059, 0.834632158279419, 0.850350022315979, 0.8525954484939575], "val_loss": [0.8336887955665588, 0.6071324944496155, 0.5305653214454651, 0.5087183713912964, 0.5015535354614258, 0.4790063202381134, 0.48503705859184265, 0.4652250111103058, 0.44465526938438416, 0.47355398535728455, 0.4440908133983612, 0.4711870849132538, 0.5220996737480164, 0.6156765222549438], "val_accuracy": [0.7059999704360962, 0.7673333287239075, 0.7986666560173035, 0.8040000200271606, 0.815666675567627, 0.8183333277702332, 0.8169999718666077, 0.8326666951179504, 0.847000002861023, 0.8393333554267883, 0.8429999947547913, 0.8453333377838135, 0.8426666855812073, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 0, 5], [0, 0, 1, 0, 1], [0, 39, 77], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 27, 16, 26], [0, 0, 1, 1], [0, 7], [3, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [6, 2, 0, 7, 9, 3, 7, 2], [0, 5, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [54], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088698387145996, 2.308983564376831, 2.309852123260498, 2.3107824325561523, 2.3109054565429688, 2.3105416297912598], "accuracy": [0.09642054885625839, 0.09298639744520187, 0.08928807079792023, 0.09325055778026581, 0.09021265059709549, 0.08875974267721176], "val_loss": [2.30886173248291, 2.30886173248291, 2.30886173248291, 2.30886173248291, 2.30886173248291, 2.30886173248291], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 2, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 5], [0, 0, 1, 0, 3, 1, 0], [0, 99, 16, 16], [0, 0, 1, 1], [0, 2], [0, 2], [0], [1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 2, 1, 1, 1, 16, 9, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3100833892822266, 2.3101043701171875, 2.3093161582946777, 2.309257745742798, 2.3097341060638428, 2.3096182346343994], "accuracy": [0.09417514503002167, 0.09047681838274002, 0.08928807079792023, 0.0940430611371994, 0.09126931428909302, 0.09272222965955734], "val_loss": [2.309601306915283, 2.309601306915283, 2.309601306915283, 2.309601306915283, 2.309601306915283, 2.309601306915283], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 4, 3, 0], [0, 0, 1, 0, 2, 2, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 27, 16, 16], [0, 0, 1, 0, 1, 1], [0, 7, 1], [0, 6, 3], [73], [1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 16, 9, 7, 3, 1, 0, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106849193573, 2.310833215713501, 2.3097591400146484, 2.309110641479492, 2.3101494312286377, 2.3111770153045654], "accuracy": [0.09377889335155487, 0.08625016361474991, 0.09008057415485382, 0.09325055778026581, 0.08942015469074249, 0.08889182657003403], "val_loss": [2.30888295173645, 2.30888295173645, 2.30888295173645, 2.30888295173645, 2.30888295173645, 2.30888295173645], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]