[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4628247022628784, 0.8384518027305603, 0.666275680065155, 0.6143361926078796, 0.6124094724655151, 0.5615366101264954, 0.5470316410064697, 0.5317828059196472, 0.5091390609741211, 0.4971977472305298, 0.49532005190849304, 0.4657844305038452, 0.4734838306903839, 0.47273340821266174, 0.4441460967063904, 0.45198243856430054, 0.46320176124572754, 0.4546775817871094, 0.475811243057251, 0.4758775234222412, 0.4755328893661499, 0.507187008857727, 0.501198410987854, 0.5290219187736511, 0.5006936192512512, 0.524770975112915], "accuracy": [0.48632940649986267, 0.7087571024894714, 0.7555144429206848, 0.770439863204956, 0.7681944370269775, 0.7823272943496704, 0.7976489067077637, 0.7972526550292969, 0.811649739742279, 0.8140271902084351, 0.8175934553146362, 0.8318583965301514, 0.8272355198860168, 0.8304054737091064, 0.8422929644584656, 0.839519202709198, 0.8339717388153076, 0.8405758738517761, 0.8380662798881531, 0.8416325449943542, 0.8403117060661316, 0.8329150676727295, 0.8389908671379089, 0.8086118102073669, 0.8376700282096863, 0.8342359066009521], "val_loss": [0.8046733140945435, 0.6323387622833252, 0.5655555129051208, 0.5264400839805603, 0.5431014895439148, 0.5025715231895447, 0.5072885751724243, 0.5060166716575623, 0.49444466829299927, 0.5422577857971191, 0.5334596633911133, 0.49873682856559753, 0.5161505341529846, 0.5368996262550354, 0.5762616395950317, 0.54958176612854, 0.5578234195709229, 0.6086022257804871, 0.5267521142959595, 0.5315170288085938, 0.6249823570251465, 0.5884502530097961, 0.5972874164581299, 0.6352053284645081, 0.6443560123443604, 0.5652127265930176], "val_accuracy": [0.6983333230018616, 0.7699999809265137, 0.7883333563804626, 0.8196666836738586, 0.8100000023841858, 0.8209999799728394, 0.8216666579246521, 0.8289999961853027, 0.8230000138282776, 0.8259999752044678, 0.8413333296775818, 0.8460000157356262, 0.8413333296775818, 0.8463333249092102, 0.8429999947547913, 0.8456666469573975, 0.847000002861023, 0.8516666889190674, 0.8473333120346069, 0.8476666808128357, 0.8533333539962769, 0.8420000076293945, 0.8383333086967468, 0.8353333473205566, 0.8426666855812073, 0.8309999704360962]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 4, 3, 1, 3, 6, 2, 7, 6, 6, 8, 5, 4, 0, 0, 3, 9], [0, 1, 1, 0, 2, 0, 2, 0, 1, 3, 3], [0, 36, 77, 13, 25], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [3, 0, 2, 0, 3, 1, 0], [0, 27, 16, 64], [0, 0, 0, 1, 0, 1, 0, 1], [0, 7, 7, 3, 9], [0, 7, 5], [0, 66], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 5, 15, 8, 7, 3, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha))), grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 4, 1, 3, 5, 4], [0, 0, 1, 0, 2, 1], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 7, 3, 8, 2], [0, 0, 5, 0, 2, 5, 0], [64, 27, 16, 16], [0, 0, 1, 1], [5, 7], [0, 7], [0], [0, 0, 1, 1], [0, 7], [2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 1, 0, 1, 1, 4, 2, 2, 1, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 6], [0, 0, 1, 0, 3], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2, 0, 6, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16, 19], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 18, 11, 7, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [204.1672821044922, 851.92919921875, 1497.90283203125, 2147.52978515625, 2805.904052734375, 3451.806884765625], "accuracy": [0.1014397069811821, 0.09985470771789551, 0.09998679161071777, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777], "val_loss": [589.7899780273438, 1261.3135986328125, 1932.9200439453125, 2604.931884765625, 3277.375244140625, 3950.019287109375], "val_accuracy": [0.1003333330154419, 0.09733333438634872, 0.09733333438634872, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 27, 61], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 6, 8, 2], [0, 0, 2, 0, 3, 1, 4], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105783462524414, 2.309189558029175, 2.3102619647979736, 2.3091373443603516, 2.3104236125946045, 2.310776710510254], "accuracy": [0.09179764986038208, 0.09285431355237961, 0.08889182657003403, 0.0936468094587326, 0.09417514503002167, 0.08968432247638702], "val_loss": [2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725, 2.3085267543792725], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]