[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5413082838058472, 0.8856174349784851, 0.6901435852050781, 0.6154299974441528, 0.5961193442344666, 0.5554940700531006, 0.5219279527664185, 0.4987534284591675, 0.520434558391571, 0.5067756772041321, 0.4808136224746704, 0.4994799494743347, 0.46659722924232483, 0.4382822513580322, 0.4575645923614502, 0.43629610538482666, 0.43340423703193665, 0.4517512917518616, 0.4358538091182709], "accuracy": [0.47972527146339417, 0.6979262828826904, 0.7543256878852844, 0.7750627398490906, 0.7841764688491821, 0.7943468689918518, 0.817461371421814, 0.8166688680648804, 0.8086118102073669, 0.8186501264572144, 0.8280280232429504, 0.8244617581367493, 0.8277638554573059, 0.8430854678153992, 0.832650899887085, 0.8499537706375122, 0.8437458872795105, 0.8422929644584656, 0.8469158411026001], "val_loss": [0.9118162989616394, 0.6366225481033325, 0.5331764221191406, 0.5288044214248657, 0.5167900919914246, 0.48318180441856384, 0.47705313563346863, 0.47604769468307495, 0.47509586811065674, 0.4992239475250244, 0.45754826068878174, 0.45574748516082764, 0.46820068359375, 0.4643353819847107, 0.46930307149887085, 0.4630770981311798, 0.4765143096446991, 0.5182982087135315, 0.49606820940971375], "val_accuracy": [0.6786666512489319, 0.781000018119812, 0.8046666383743286, 0.7963333129882812, 0.8133333325386047, 0.8333333134651184, 0.8309999704360962, 0.8479999899864197, 0.8396666646003723, 0.8420000076293945, 0.8479999899864197, 0.8460000157356262, 0.8503333330154419, 0.8539999723434448, 0.8413333296775818, 0.8533333539962769, 0.8463333249092102, 0.8389999866485596, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 0, 5], [0, 2, 1, 0, 2], [0, 39, 95], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 6, 2, 0, 3, 2, 6, 7, 7, 0, 7, 7, 6, 3, 4, 9, 1, 0, 1, 0, 4], [0, 4, 2, 0, 3, 1, 0, 0, 3, 4, 0, 3, 0, 5, 5, 0, 4, 3, 2, 0], [0, 27, 16, 16, 67, 13, 22, 9, 35], [1, 0, 1, 0], [0, 7], [0, 7], [0], [1], [0], [5], [0]], "fitness": -0.2937142848968506, "mapping_values": [1, 1, 0, 1, 1, 46, 26, 20, 9, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.math.negative(grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.negative(tf.math.pow(grad, grad)), beta)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2723965644836426, 2.1585440635681152, 2.4324498176574707, 2.306889295578003, 2.303748369216919, 2.303528308868408, 2.3031253814697266], "accuracy": [0.20314356684684753, 0.21859727799892426, 0.19270901381969452, 0.09787346422672272, 0.09826971590518951, 0.0952318087220192, 0.09232597798109055], "val_loss": [2.1372501850128174, 2.018455743789673, 2.3095576763153076, 2.303719997406006, 2.3029541969299316, 2.3026633262634277, 2.3025925159454346], "val_accuracy": [0.1599999964237213, 0.2980000078678131, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 0], [3, 0, 2, 0, 3, 1, 0, 4], [0, 27, 20, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 18, 10, 8, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), alpha)))), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11940298229455948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 1], [0, 0, 1, 0, 2, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 1, 3, 8, 3, 4, 2, 1, 5, 0, 9, 0, 5, 0], [0, 0, 2, 0, 3, 1, 0, 3, 0], [63, 27, 16, 16, 50, 57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 7, 0, 8, 3, 1, 9], [0, 7, 2], [27, 10], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 26, 17, 9, 6, 10, 7, 3, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.square(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(grad)))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.979787349700928, 2.3124258518218994, 2.304265022277832, 2.3038249015808105, 2.303081512451172, 2.3029284477233887, 2.303352117538452, 2.3030498027801514], "accuracy": [0.17936864495277405, 0.10038304328918457, 0.10210011899471283, 0.0948355570435524, 0.09919429570436478, 0.1002509593963623, 0.09708096832036972, 0.09840179979801178], "val_loss": [2.32067608833313, 2.3055782318115234, 2.3031415939331055, 2.3027076721191406, 2.3026764392852783, 2.3026626110076904, 2.302739143371582, 2.3027138710021973], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [47, 4, 77, 92], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 0, 1, 1], [0, 8], [1, 7], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 11, 6, 5, 4, 15, 8, 7, 4, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101444244384766, 2.310213327407837, 2.3101117610931396, 2.3098928928375244, 2.31074857711792, 2.3106606006622314], "accuracy": [0.08479725569486618, 0.09206181764602661, 0.09008057415485382, 0.09457138925790787, 0.08849557489156723, 0.08942015469074249], "val_loss": [2.308901786804199, 2.308901786804199, 2.308901786804199, 2.308901786804199, 2.308901786804199, 2.308901786804199], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]