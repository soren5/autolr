[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5463405847549438, 0.8034745454788208, 0.6724385619163513, 0.6022548675537109, 0.6560831069946289, 0.6140068769454956, 0.5831476449966431, 0.5843969583511353, 0.534031867980957, 0.5169641971588135, 0.49241235852241516, 0.48678943514823914, 0.48947322368621826, 0.5160067677497864, 0.49764591455459595, 0.48898953199386597, 0.5273858904838562, 0.5536519885063171, 0.5674149394035339, 0.521798849105835], "accuracy": [0.48131024837493896, 0.7223616242408752, 0.7515519857406616, 0.7761194109916687, 0.7737419009208679, 0.7889314293861389, 0.7840443849563599, 0.8004226684570312, 0.8045172095298767, 0.8094043135643005, 0.8161405324935913, 0.8227446675300598, 0.82683926820755, 0.8216879963874817, 0.8161405324935913, 0.8296129703521729, 0.8136309385299683, 0.8274996876716614, 0.8249900937080383, 0.8247259259223938], "val_loss": [0.820613443851471, 0.6057794690132141, 0.5414442420005798, 0.5649732947349548, 0.5589758157730103, 0.5494256019592285, 0.5585972666740417, 0.5826271772384644, 0.5462512373924255, 0.5265071988105774, 0.5288952589035034, 0.5571089386940002, 0.6238803863525391, 0.5799707770347595, 0.5590493083000183, 0.6618854403495789, 0.6668121218681335, 0.708734393119812, 0.7251150608062744, 0.8224219679832458], "val_accuracy": [0.721666693687439, 0.7806666493415833, 0.7863333225250244, 0.7896666526794434, 0.812666654586792, 0.8036666512489319, 0.8140000104904175, 0.8213333487510681, 0.809333324432373, 0.8236666917800903, 0.8316666483879089, 0.8159999847412109, 0.8143333196640015, 0.8233333230018616, 0.8323333263397217, 0.8263333439826965, 0.8240000009536743, 0.8303333520889282, 0.8143333196640015, 0.8226666450500488]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.593797206878662, 0.9099551439285278, 0.69660484790802, 0.6318628191947937, 0.5721532106399536, 0.5449855327606201, 0.5345662236213684, 0.5390374660491943, 0.5538626313209534, 0.5288259983062744, 0.5120421648025513], "accuracy": [0.46149781346321106, 0.6890767216682434, 0.744419515132904, 0.7688548564910889, 0.7887993454933167, 0.81112140417099, 0.8045172095298767, 0.8070268034934998, 0.8014793395996094, 0.8152159452438354, 0.8117818236351013], "val_loss": [0.9664652347564697, 0.6723294258117676, 0.6009002327919006, 0.5589582324028015, 0.5260435938835144, 0.5256697535514832, 0.5668321251869202, 0.5540210604667664, 0.5834845900535583, 0.5604575872421265, 0.5886960625648499], "val_accuracy": [0.7056666612625122, 0.7649999856948853, 0.7820000052452087, 0.7873333096504211, 0.8169999718666077, 0.8243333101272583, 0.8113333582878113, 0.812333345413208, 0.8236666917800903, 0.8186666369438171, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 1, 5, 8, 2], [4, 0, 5, 0, 3, 1, 0], [0, 27, 16, 98], [0, 0, 1, 1], [0, 7], [5, 6], [0], [1], [0], [2], [0]], "fitness": -0.1274285763502121, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6.33933162689209, 3.027039051055908, 2.6872546672821045, 2.561070680618286, 2.483330249786377, 21.6018123626709, 2.7594807147979736], "accuracy": [0.20036983489990234, 0.14251750707626343, 0.11161009222269058, 0.10011887550354004, 0.09866596013307571, 0.10117553919553757, 0.10117553919553757], "val_loss": [2.455980062484741, 2.9285213947296143, 2.3900203704833984, 2.4571778774261475, 10.313929557800293, 2.4318618774414062, 2.440342903137207], "val_accuracy": [0.12800000607967377, 0.12999999523162842, 0.12433333694934845, 0.10000000149011612, 0.1146666631102562, 0.0976666659116745, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 1, 3, 5, 9, 2, 6, 1], [0, 1, 1, 0, 2, 3, 3], [0, 39, 80], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 8, 6, 0, 8, 2], [0, 0, 2, 0, 3, 5, 0], [55, 55, 16, 0], [1, 0, 1, 0], [4, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 3, 6, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303297996520996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 3, 2], [0, 39, 70], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 3, 1, 6, 3, 8, 4, 6, 9], [0, 0, 2, 0, 3, 1, 0, 0], [0, 27, 16, 0, 98, 20], [0, 0, 1, 1], [0, 7], [0, 6], [23], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 18, 10, 8, 6, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.divide_no_nan(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 5, 3, 1, 7, 5, 2], [0, 0, 1, 0, 2], [45, 10, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 3, 6, 6, 3, 8, 2], [0, 4, 2, 4, 4, 1, 0], [0, 68, 16, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [7, 7, 0, 1, 2, 2, 0, 5, 8, 4, 1, 6, 0], [0, 6, 1, 7, 5, 6, 3, 0, 2], [69, 71], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 12, 7, 5, 3, 7, 3, 4, 1, 22, 13, 9, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.negative(grad), grad), tf.math.square(tf.math.sqrt(tf.math.pow(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(sigma), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310354471206665, 2.309321641921997, 2.309433698654175, 2.3105368614196777, 2.309652805328369, 2.3103933334350586], "accuracy": [0.09642054885625839, 0.09338264167308807, 0.09351472556591034, 0.09338264167308807, 0.09338264167308807, 0.0874389111995697], "val_loss": [2.3090293407440186, 2.3090293407440186, 2.3090293407440186, 2.3090293407440186, 2.3090293407440186, 2.3090293407440186], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]