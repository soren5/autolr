[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6150047779083252, 0.9094483852386475, 0.6890593767166138, 0.6324566602706909, 0.5987753868103027, 0.5835268497467041, 0.5627325177192688, 0.5531038641929626, 0.5527016520500183, 0.5288897156715393, 0.5040137767791748, 0.47357669472694397, 0.5362249612808228, 0.5233867764472961, 0.5135946869850159, 0.5027392506599426, 0.48692965507507324, 0.5345340371131897, 0.4805283546447754, 0.49977049231529236, 0.4937525689601898, 0.5820021033287048, 0.5737682580947876, 0.6005247235298157, 0.6315876841545105], "accuracy": [0.47127196192741394, 0.6939638257026672, 0.7518161535263062, 0.7692511081695557, 0.7847048044204712, 0.7876105904579163, 0.8021397590637207, 0.81112140417099, 0.8043851256370544, 0.8133667707443237, 0.809140145778656, 0.8286884427070618, 0.8256505131721497, 0.8104609847068787, 0.8183859586715698, 0.8335754871368408, 0.830669641494751, 0.826310932636261, 0.8438779711723328, 0.8355567455291748, 0.8422929644584656, 0.8042530417442322, 0.8195747137069702, 0.8175934553146362, 0.8013472557067871], "val_loss": [0.8977380990982056, 0.621931254863739, 0.5574044585227966, 0.5466424822807312, 0.5181607007980347, 0.5412267446517944, 0.5312117338180542, 0.5233875513076782, 0.5327337384223938, 0.5405917167663574, 0.5319775342941284, 0.5928266048431396, 0.5738705396652222, 0.5857753753662109, 0.5530041456222534, 0.5865914225578308, 0.6129498481750488, 0.5595307350158691, 0.7059480547904968, 0.5978990197181702, 0.5760688185691833, 0.6119956374168396, 0.8026143908500671, 0.6145461201667786, 0.7395870685577393], "val_accuracy": [0.6963333487510681, 0.7646666765213013, 0.7993333339691162, 0.8096666932106018, 0.8213333487510681, 0.8176666498184204, 0.82833331823349, 0.8233333230018616, 0.8286666870117188, 0.8216666579246521, 0.8266666531562805, 0.8286666870117188, 0.8206666707992554, 0.8309999704360962, 0.8446666598320007, 0.8426666855812073, 0.8396666646003723, 0.8446666598320007, 0.8443333506584167, 0.8513333201408386, 0.8306666612625122, 0.8386666774749756, 0.8363333344459534, 0.8240000009536743, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 87], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 5, 3, 8, 2, 6, 4, 3, 4, 9, 1, 4], [5, 0, 2, 3, 3, 1, 0, 1, 3, 2, 2], [0, 43, 16, 16], [0, 0, 1, 0], [0, 7, 9], [0, 7], [0, 30], [1], [0], [6], [0]], "fitness": -0.3845714330673218, "mapping_values": [1, 7, 3, 4, 2, 26, 15, 11, 3, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.multiply(grad, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), beta), tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.multiply(tf.math.pow(grad, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(alpha, grad), beta))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3643696308135986, 2.2975223064422607, 2.5495753288269043, 2.320896625518799, 2.3040120601654053, 2.266719341278076, 2.3047590255737305], "accuracy": [0.2078985571861267, 0.12970545887947083, 0.17738740146160126, 0.09959053993225098, 0.10328886657953262, 0.16695284843444824, 0.09879804402589798], "val_loss": [2.3048815727233887, 2.2275290489196777, 2.3439834117889404, 2.3084278106689453, 2.289605140686035, 2.3057289123535156, 2.3029403686523438], "val_accuracy": [0.09966666996479034, 0.3930000066757202, 0.0989999994635582, 0.0989999994635582, 0.1433333307504654, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 3, 1, 1, 0, 5], [0, 0, 1, 0, 2], [0, 39, 13], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 1, 1, 6, 3, 8, 0], [0, 2, 2, 2, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 0, 1, 1], [0, 7, 2, 9], [7, 5], [0], [1], [0], [7], [0]], "fitness": -0.20885714888572693, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.587282419204712, 2.5828540325164795, 2.3045451641082764, 2.3034303188323975, 2.303170680999756, 2.3031585216522217], "accuracy": [0.20076608657836914, 0.14621582627296448, 0.09615638852119446, 0.09866596013307571, 0.09576013684272766, 0.10077928751707077], "val_loss": [2.189451217651367, 2.304213523864746, 2.3031177520751953, 2.302738904953003, 2.3027408123016357, 2.3026282787323], "val_accuracy": [0.210999995470047, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.10166666656732559, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 6, 3, 1, 3, 5, 6, 6, 7, 8, 3, 6], [0, 0, 1, 0, 3, 3, 0, 3, 0, 1], [0, 39, 39, 39, 29], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 6, 3, 8, 6], [1, 0, 4, 0, 3, 1, 5], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 8, 3], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 5, 13, 7, 6, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5, 8, 3, 0, 8, 2, 8], [0, 2, 1, 0, 2, 3, 1], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 9, 8, 2], [0, 0, 2, 0, 1, 2, 0], [0, 27, 26, 16], [0, 0, 0, 1, 1], [0, 6, 0], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 2, 10, 6, 4, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303654193878174, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]