[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.522822618484497, 0.9386256337165833, 0.7495583295822144, 0.6895424723625183, 0.6389719247817993, 0.6019510626792908, 0.6011770367622375, 0.5439888834953308, 0.5361912846565247, 0.5327643156051636, 0.5142900943756104, 0.4965158700942993, 0.49691328406333923, 0.5147011876106262, 0.5280993580818176, 0.49793457984924316, 0.4954570233821869, 0.4842056930065155, 0.48952704668045044, 0.5440037250518799, 0.5599616169929504, 0.5721885561943054, 0.5833433866500854], "accuracy": [0.4834235906600952, 0.685510516166687, 0.7256637215614319, 0.7539294958114624, 0.7761194109916687, 0.7808743715286255, 0.7874785661697388, 0.8001585006713867, 0.8095363974571228, 0.8033285140991211, 0.804649293422699, 0.8219521641731262, 0.8190463781356812, 0.8187822103500366, 0.8100647330284119, 0.8187822103500366, 0.8289526104927063, 0.8260467648506165, 0.8337075710296631, 0.8138951063156128, 0.8356888294219971, 0.8098005652427673, 0.816008448600769], "val_loss": [1.0128575563430786, 0.6391243934631348, 0.6190907955169678, 0.5933709740638733, 0.5477768778800964, 0.5490407943725586, 0.5384688377380371, 0.5392139554023743, 0.5178977251052856, 0.5213018655776978, 0.501779317855835, 0.4948199987411499, 0.5522872805595398, 0.5516770482063293, 0.5618066191673279, 0.5904325246810913, 0.6053697466850281, 0.5679039359092712, 0.6748974323272705, 0.6086567640304565, 0.6319538354873657, 0.6611290574073792, 0.7218052744865417], "val_accuracy": [0.6273333430290222, 0.7423333525657654, 0.7799999713897705, 0.7870000004768372, 0.7896666526794434, 0.8023333549499512, 0.809333324432373, 0.8146666884422302, 0.812666654586792, 0.8133333325386047, 0.8226666450500488, 0.824999988079071, 0.8213333487510681, 0.8199999928474426, 0.8163333535194397, 0.8203333616256714, 0.8270000219345093, 0.8306666612625122, 0.8236666917800903, 0.8306666612625122, 0.8273333311080933, 0.815666675567627, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6], [0, 0, 1, 0, 0, 1], [0, 39, 77, 52], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 5, 8], [4, 0, 2, 1, 3, 4, 1, 4], [0, 18, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 4, 19, 11, 8, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 27, 16, 0], [0, 0, 1, 1], [0, 0], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30975604057312, 2.3088395595550537, 2.3102660179138184, 2.309173822402954, 2.3103554248809814, 2.3098936080932617], "accuracy": [0.09655263274908066, 0.09298639744520187, 0.0886276587843895, 0.0936468094587326, 0.08836349099874496, 0.08849557489156723], "val_loss": [2.3092849254608154, 2.3092849254608154, 2.3092849254608154, 2.3092849254608154, 2.3092849254608154, 2.3092849254608154], "val_accuracy": [0.08500000089406967, 0.08500000089406967, 0.08500000089406967, 0.08500000089406967, 0.08500000089406967, 0.08500000089406967]}, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 0, 1, 6, 3, 8, 2], [0, 2, 2, 0, 3, 1, 0], [0, 63, 8, 16], [0, 0, 1, 1], [0, 7], [7, 7], [73], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 7, 4, 3, 2, 5, 3, 2, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088948726654053, 2.310265064239502, 2.309438467025757, 2.310257911682129, 2.310110330581665, 2.310230255126953], "accuracy": [0.09391097724437714, 0.09549596905708313, 0.09259014576673508, 0.09206181764602661, 0.09351472556591034, 0.09087307006120682], "val_loss": [2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 3, 3, 1, 3, 5, 0, 7, 0, 4, 1, 0, 0, 8, 9, 5, 9], [0, 1, 1, 0, 2, 3], [40, 39, 77, 68], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 1, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [0], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 23, 17, 6, 4, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3103365898132324, 2.3105061054229736, 2.310821056365967, 2.3096437454223633, 2.309461832046509, 2.3099167346954346], "accuracy": [0.08889182657003403, 0.08981640636920929, 0.09060890227556229, 0.09008057415485382, 0.09021265059709549, 0.08875974267721176], "val_loss": [2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]