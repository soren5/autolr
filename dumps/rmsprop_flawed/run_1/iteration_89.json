[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5033752918243408, 0.770955502986908, 0.6362362504005432, 0.5915186405181885, 0.555644690990448, 0.5186579823493958, 0.490991473197937, 0.4738600552082062, 0.48041385412216187, 0.48919132351875305, 0.5048597455024719, 0.49192094802856445, 0.5171618461608887, 0.5268831253051758], "accuracy": [0.483819842338562, 0.7223616242408752, 0.7658169269561768, 0.7841764688491821, 0.8004226684570312, 0.8061022162437439, 0.8220842480659485, 0.8261788487434387, 0.8309338092803955, 0.8252542614936829, 0.8257825970649719, 0.8302733898162842, 0.822348415851593, 0.8137630224227905], "val_loss": [0.8066738247871399, 0.6112797260284424, 0.5288011431694031, 0.511644184589386, 0.48878246545791626, 0.4867796301841736, 0.49649035930633545, 0.4789251983165741, 0.5274669528007507, 0.5179063677787781, 0.5674760341644287, 0.5459333658218384, 0.5868128538131714, 0.5539942979812622], "val_accuracy": [0.7200000286102295, 0.7796666622161865, 0.8046666383743286, 0.8216666579246521, 0.8209999799728394, 0.8336666822433472, 0.8366666436195374, 0.8353333473205566, 0.8443333506584167, 0.8379999995231628, 0.8399999737739563, 0.8363333344459534, 0.8303333520889282, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 3, 7], [0, 0, 1, 0, 2], [56, 39, 2], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [97, 27, 16, 16], [0, 0, 1, 1], [0, 3], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.4197142720222473, "mapping_values": [1, 4, 2, 2, 2, 16, 9, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.300877332687378, 39.924373626708984, 1209135529984.0, NaN, NaN, NaN], "accuracy": [0.11108175665140152, 0.19455818831920624, 0.14912164211273193, 0.09377889335155487, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.236569404602051, 1175.513671875, 12372346404864.0, NaN, NaN, NaN], "val_accuracy": [0.4059999883174896, 0.13199999928474426, 0.09966666996479034, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 7, 3, 1, 3, 5], [0, 0, 1, 2, 2, 1], [0, 39, 77], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 2, 3, 8, 2, 0, 7, 6, 1, 0, 0, 6, 9, 8, 7, 6], [0, 0, 2, 0, 3, 1, 0, 1, 5, 5, 0, 5], [0, 36, 16, 16, 15, 56], [0, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [5], [0]], "fitness": -0.3594285845756531, "mapping_values": [1, 12, 6, 6, 2, 31, 19, 12, 6, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), tf.math.negative(grad)), tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.383601427078247, 2.1793224811553955, 2.278499126434326, 2.2990705966949463, 2.326354742050171, 2.3043341636657715, 2.3035619258880615], "accuracy": [0.22863557934761047, 0.1966715157032013, 0.13142253458499908, 0.11081759631633759, 0.17791573703289032, 0.10196803510189056, 0.09338264167308807], "val_loss": [2.3329055309295654, 1.9422136545181274, 2.304948568344116, 2.251490592956543, 2.3033804893493652, 2.303043842315674, 2.3026981353759766], "val_accuracy": [0.0989999994635582, 0.36533331871032715, 0.0989999994635582, 0.2303333282470703, 0.10166666656732559, 0.10333333164453506, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 4], [0, 0, 1, 0, 2, 0], [0, 39, 77, 71], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [6, 2, 1, 1, 6, 3, 8, 2], [0, 0, 2, 0, 4, 1, 0], [68, 27, 97, 16], [0, 0, 0, 1, 1, 1], [0, 7, 1], [0, 7, 5], [0], [0, 0, 1, 1], [0, 7], [2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 7, 3, 4, 3, 6, 3, 3, 1, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.pow(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad))", "other_info": {"loss": [2.303201913833618, 2.3023080825805664, 2.3026390075683594, 2.3048644065856934, 2.3151063919067383, 2.3653371334075928], "accuracy": [0.10672302544116974, 0.10474177449941635, 0.10777968913316727, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302546977996826, 2.302666425704956, 2.303541421890259, 2.308030128479004, 2.3303821086883545, 2.4474682807922363], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 9, 3, 5], [0, 0, 1, 3, 2], [0, 39, 77], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 5, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 0, 1, 0], [0, 7, 4, 0, 9], [0, 7], [0, 89], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091073036193848, 2.309084415435791, 2.310670852661133, 2.31006121635437, 2.3087611198425293, 2.3093149662017822], "accuracy": [0.09813763201236725, 0.09377889335155487, 0.08915598690509796, 0.0948355570435524, 0.0940430611371994, 0.08902391046285629], "val_loss": [2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]