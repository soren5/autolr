[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7005646228790283, 0.9378674030303955, 0.749071478843689, 0.6808001399040222, 0.638530433177948, 0.6108924150466919, 0.585411548614502, 0.5928372144699097, 0.5704041719436646, 0.5523785352706909, 0.5461484789848328, 0.5483550429344177, 0.5490489602088928, 0.5301623344421387, 0.5270971059799194, 0.5451323390007019, 0.555585503578186, 0.5309615731239319, 0.5411561131477356, 0.5679247975349426, 0.5505186915397644, 0.6021878123283386, 0.5826379656791687], "accuracy": [0.4760269522666931, 0.6687359809875488, 0.737947404384613, 0.7582882046699524, 0.7701756954193115, 0.7862898111343384, 0.8009510040283203, 0.7947431206703186, 0.7944789528846741, 0.8092722296714783, 0.8088759779930115, 0.8109893202781677, 0.81548011302948, 0.817989706993103, 0.8096684813499451, 0.8152159452438354, 0.798309326171875, 0.8128384351730347, 0.8224804997444153, 0.8054417967796326, 0.8289526104927063, 0.7936864495277405, 0.8055738806724548], "val_loss": [0.9576734304428101, 0.6306389570236206, 0.5840456485748291, 0.5790871381759644, 0.5216753482818604, 0.5160861611366272, 0.5351797938346863, 0.5635157823562622, 0.5309807658195496, 0.5488033294677734, 0.5073560476303101, 0.5637766718864441, 0.5397561192512512, 0.5360914468765259, 0.5266887545585632, 0.5143651366233826, 0.5673115253448486, 0.5362886786460876, 0.5765551924705505, 0.5211056470870972, 0.5545315146446228, 0.577988862991333, 0.567922055721283], "val_accuracy": [0.6476666927337646, 0.7753333449363708, 0.7876666784286499, 0.7933333516120911, 0.8176666498184204, 0.8193333148956299, 0.8159999847412109, 0.8130000233650208, 0.8169999718666077, 0.8176666498184204, 0.8230000138282776, 0.8333333134651184, 0.8296666741371155, 0.8276666402816772, 0.8326666951179504, 0.8320000171661377, 0.8396666646003723, 0.8433333039283752, 0.8433333039283752, 0.8323333263397217, 0.8383333086967468, 0.8086666464805603, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 8, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 6, 3, 3, 2, 1], [0, 0, 2, 0, 3, 1, 0], [81, 27, 16, 0, 66], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 16, 9, 7, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.413151264190674, 36.251590728759766, 149.57659912109375, 289.39434814453125, 424.72259521484375, 347.67462158203125, 358.4173889160156, 406.40765380859375, 476.1141052246094, 420.4635314941406], "accuracy": [0.09417514503002167, 0.09906221181154251, 0.09760929644107819, 0.10051512718200684, 0.10408136248588562, 0.10632677376270294, 0.10513802617788315, 0.09721305221319199, 0.09694888442754745, 0.10500594228506088], "val_loss": [5.189586639404297, 120.07958221435547, 179.88885498046875, 417.28662109375, 435.20361328125, 383.4946594238281, 456.1879577636719, 436.5419616699219, 450.9062805175781, 543.0374755859375], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.09866666793823242, 0.0976666659116745, 0.10300000011920929, 0.09866666793823242, 0.09933333098888397, 0.10133333504199982, 0.09933333098888397, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 5, 1, 2, 9], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 7, 6, 5, 8, 2, 7, 1], [0, 0, 2, 0, 3, 1, 3, 5], [0, 42, 16, 31], [0, 0, 1, 1], [0, 7], [4, 6], [0], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [47167.53515625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1888786107301712, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15174965.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 5, 3, 2, 1, 18, 10, 8, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [88, 39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 2, 8, 2], [4, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035435676574707, 2.3027288913726807, 2.3027477264404297, 2.303095817565918, 2.3028550148010254, 2.3036961555480957], "accuracy": [0.09866596013307571, 0.09628847241401672, 0.09998679161071777, 0.09893012791872025, 0.10196803510189056, 0.09708096832036972], "val_loss": [2.302584648132324, 2.302567481994629, 2.3026578426361084, 2.3027613162994385, 2.3027310371398926, 2.3032610416412354], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10066666454076767, 0.09933333098888397, 0.0989999994635582, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 3], [0, 4, 2, 3, 3, 5, 0], [0, 27, 16, 0], [0, 0, 1, 1, 1], [3, 7], [1, 3, 5], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 4, 3, 1, 2, 6, 3, 3, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, sigma), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098032474517822, 2.309088706970215, 2.3096561431884766, 2.3099207878112793, 2.310004472732544, 2.308783531188965], "accuracy": [0.09311848133802414, 0.09325055778026581, 0.0944393053650856, 0.08902391046285629, 0.09060890227556229, 0.09642054885625839], "val_loss": [2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]