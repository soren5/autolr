[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6257123947143555, 0.8268608450889587, 0.668732225894928, 0.5996761918067932, 0.5577117800712585, 0.5139627456665039, 0.4846492409706116, 0.48696789145469666, 0.4751008450984955, 0.45560091733932495, 0.4573041498661041, 0.4406069815158844, 0.4768984913825989, 0.5154707431793213, 0.5243942737579346], "accuracy": [0.45410117506980896, 0.7059833407402039, 0.754589855670929, 0.785629391670227, 0.7881389260292053, 0.8146876096725464, 0.8249900937080383, 0.8175934553146362, 0.8330471515655518, 0.8350284099578857, 0.8298771381378174, 0.8471800088882446, 0.8348963260650635, 0.8125742673873901, 0.8235371708869934], "val_loss": [0.9083258509635925, 0.656262218952179, 0.5475283265113831, 0.5064535140991211, 0.4710729122161865, 0.48910942673683167, 0.5007391571998596, 0.5092567801475525, 0.46429696679115295, 0.4652288556098938, 0.49526676535606384, 0.5400803089141846, 0.5375862717628479, 0.5130923390388489, 0.5680270791053772], "val_accuracy": [0.6853333115577698, 0.7516666650772095, 0.8003333210945129, 0.8159999847412109, 0.8326666951179504, 0.8276666402816772, 0.8346666693687439, 0.8306666612625122, 0.8443333506584167, 0.8453333377838135, 0.8429999947547913, 0.8443333506584167, 0.8403333425521851, 0.840666651725769, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39, 28], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 2, 6, 8, 8, 2], [5, 0, 3, 1, 3, 1, 0], [0, 27, 37, 0], [0, 0, 1, 1, 1], [3, 7], [0, 4, 0], [0, 66], [1], [0], [2], [0]], "fitness": -0.10257142782211304, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [57.73200607299805, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.186104878783226, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [106804.3984375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10533333569765091, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 11, 7, 4, 4, 2, 1, 1, 0, 5, 2, 3, 2, 1, 0, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 8, 3, 4], [0, 0, 1, 0, 2], [0, 39, 15], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 4, 3, 1, 0], [0, 27, 34, 39], [0, 0, 1, 1], [0, 7], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 15, 8, 7, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 2, 1, 0, 2, 7], [0, 3, 3, 0, 2, 3], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 6, 8, 0, 8, 5, 6, 4], [1, 0, 2, 0, 3, 1, 4, 2], [0, 40, 16, 0], [0, 0, 1, 1], [8, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 20, 12, 8, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.sqrt(grad))), tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0, 1], [0, 39, 39, 91], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1, 0, 1, 1], [1, 7, 6], [3, 6, 5, 6], [0], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 11, 5, 6, 4, 1, 0, 1, 1, 7, 3, 4, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, grad), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105266094207764, 2.3101797103881836, 2.310012102127075, 2.3094329833984375, 2.30903697013855, 2.3109114170074463], "accuracy": [0.08875974267721176, 0.0878351628780365, 0.09219389408826828, 0.09430722147226334, 0.0948355570435524, 0.08942015469074249], "val_loss": [2.3088929653167725, 2.3088929653167725, 2.3088929653167725, 2.3088929653167725, 2.3088929653167725, 2.3088929653167725], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]