[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.661499261856079, 0.8731834888458252, 0.6737675070762634, 0.6028309464454651, 0.5814551115036011, 0.5359422564506531, 0.5033082365989685, 0.47080883383750916, 0.4569588601589203, 0.45452880859375, 0.45229557156562805, 0.43198126554489136, 0.4354155659675598, 0.4448099732398987, 0.43988677859306335, 0.4526509642601013, 0.48627808690071106, 0.472695529460907, 0.48298272490501404], "accuracy": [0.46625280380249023, 0.7021529674530029, 0.7573636174201965, 0.7799497842788696, 0.789988100528717, 0.7994980812072754, 0.8212917447090149, 0.8280280232429504, 0.8305375576019287, 0.8355567455291748, 0.8327829837799072, 0.8436138033866882, 0.8376700282096863, 0.8519350290298462, 0.8408400416374207, 0.8366134166717529, 0.8325188159942627, 0.8438779711723328, 0.8436138033866882], "val_loss": [0.9650816321372986, 0.6328375935554504, 0.5542504787445068, 0.5586948990821838, 0.5069565176963806, 0.5146981477737427, 0.5113717317581177, 0.4911457896232605, 0.46826648712158203, 0.4856293201446533, 0.516899049282074, 0.5027057528495789, 0.5987679958343506, 0.5387517213821411, 0.5310664176940918, 0.5828911662101746, 0.6329368948936462, 0.5918624401092529, 0.6463199853897095], "val_accuracy": [0.6336666941642761, 0.7753333449363708, 0.8096666932106018, 0.7996666431427002, 0.8309999704360962, 0.8263333439826965, 0.8376666903495789, 0.8349999785423279, 0.8416666388511658, 0.8443333506584167, 0.8353333473205566, 0.8426666855812073, 0.8396666646003723, 0.8543333411216736, 0.8416666388511658, 0.8346666693687439, 0.8413333296775818, 0.8320000171661377, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 49, 25], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 3, 3, 6, 2, 3, 8, 2], [0, 2, 0, 0, 3, 1, 0], [91, 27, 87, 0], [0, 1, 1, 1], [0, 7], [5, 6], [0], [1], [0], [5], [0]], "fitness": -0.3465714156627655, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.336914539337158, 2.374330520629883, 2.288135528564453, 2.279656410217285, 2.284419536590576, 2.2344443798065186, 2.3038973808288574, 2.303624391555786, 2.3026747703552246, 2.3008782863616943], "accuracy": [0.1982565075159073, 0.16893409192562103, 0.12032756209373474, 0.12798838317394257, 0.1220446452498436, 0.15110288560390472, 0.09813763201236725, 0.09377889335155487, 0.10606260597705841, 0.11134592443704605], "val_loss": [2.290830612182617, 2.309089422225952, 2.039344310760498, 2.026425361633301, 2.0498626232147217, 2.303114175796509, 2.302919626235962, 2.302556276321411, 2.302199125289917, 2.269944667816162], "val_accuracy": [0.31299999356269836, 0.10133333504199982, 0.16566666960716248, 0.24833333492279053, 0.3333333432674408, 0.10333333164453506, 0.1003333330154419, 0.0976666659116745, 0.09933333098888397, 0.2006666660308838]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 2, 3, 1, 6, 6, 8, 2, 0, 7], [3, 0, 2, 0, 3, 1, 0, 4, 4], [0, 27, 16, 0], [0, 1, 0, 1], [0, 7], [0, 6], [60], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 19, 10, 9, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2281731.25, 65130544.0, 8.94876495013638e+26, 3.328746999953238e+20, 1172774715392.0, 31216849911808.0, 1.0491882999866458e+20, 2.00315127201792e+16], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [11969232.0, 318733152.0, 1.3520060068552245e+19, 209675993088.0, 5373777412096.0, 137724048703488.0, 3529716598308864.0, 9.046278303173837e+16], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10333333164453506, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 6, 3, 1, 1, 5, 6, 6, 4, 6, 4, 4, 5, 6, 8, 9, 2, 0], [0, 0, 1, 0, 2, 3, 2, 0, 3, 3, 0, 3, 2], [0, 98, 39, 45, 60, 47], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 1, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 3], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 31, 18, 13, 6, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 8, 3, 1, 3, 7], [0, 0, 1, 0, 2], [0, 39, 10], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 4], [0, 0, 2, 5, 3, 1, 0], [0, 27, 50, 96], [1, 0, 1, 1], [0, 7], [0, 6], [76], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 5, 3, 2, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106906414031982, 2.3105838298797607, 2.310722827911377, 2.309763193130493, 2.3094661235809326, 2.310994863510132], "accuracy": [0.09074098616838455, 0.08994849026203156, 0.08651433140039444, 0.09536388516426086, 0.0948355570435524, 0.08638224750757217], "val_loss": [2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]