[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5477114915847778, 0.8080236315727234, 0.6776767373085022, 0.6288714408874512, 0.7246578931808472, 0.6318024396896362, 0.5983144640922546, 0.5778184533119202, 0.5502369403839111, 0.5342837572097778, 0.5196550488471985, 0.5137140154838562, 0.5127639770507812, 0.4940488934516907, 0.47642338275909424, 0.5142912864685059], "accuracy": [0.47549861669540405, 0.7111346125602722, 0.7420420050621033, 0.7656848430633545, 0.7512878179550171, 0.7633073329925537, 0.793950617313385, 0.7913089394569397, 0.8001585006713867, 0.8053097128868103, 0.8185180425643921, 0.8191784620285034, 0.8129705190658569, 0.8260467648506165, 0.8244617581367493, 0.8300092220306396], "val_loss": [0.8380450010299683, 0.6453982591629028, 0.5733429789543152, 0.6588895916938782, 0.5292246341705322, 0.5383219718933105, 0.4946445822715759, 0.48412081599235535, 0.5004405379295349, 0.5115978121757507, 0.4905540347099304, 0.46844127774238586, 0.48696109652519226, 0.5330039858818054, 0.5024834275245667, 0.548169732093811], "val_accuracy": [0.6959999799728394, 0.7696666717529297, 0.7916666865348816, 0.793666660785675, 0.8169999718666077, 0.8220000267028809, 0.8240000009536743, 0.8323333263397217, 0.8353333473205566, 0.8326666951179504, 0.8516666889190674, 0.8453333377838135, 0.8513333201408386, 0.8473333120346069, 0.8516666889190674, 0.8486666679382324]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 5, 1, 3, 5], [0, 3, 1, 0, 2], [4, 39, 3], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 2, 4, 1, 6, 9, 5, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [7], [0]], "fitness": -0.18485714495182037, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.491142749786377, 2.302901268005371, 2.2349820137023926, 2.304098129272461, 2.302152156829834, 2.591966390609741, 2.304875135421753], "accuracy": [0.1872936189174652, 0.10910051316022873, 0.20723815262317657, 0.09945846349000931, 0.10540219396352768, 0.16497160494327545, 0.10011887550354004], "val_loss": [2.3044395446777344, 2.298330783843994, 2.3032491207122803, 2.302274465560913, 2.291029930114746, 2.3072915077209473, 2.303668260574341], "val_accuracy": [0.10333333164453506, 0.18933333456516266, 0.10199999809265137, 0.10199999809265137, 0.13300000131130219, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 8, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [7, 7], [0], [1], [0], [2], [0]], "fitness": -0.1745714247226715, "mapping_values": [1, 6, 3, 3, 2, 10, 5, 5, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.1490969178341376e+16, 4.094311577891635e+17, 2.5515904550913966e+18, 8.417810444718178e+18, 2.0655192342934847e+19, 3.982566135832563e+19], "accuracy": [0.10698718577623367, 0.10896842926740646, 0.11108175665140152, 0.1146479994058609, 0.10949676483869553, 0.10632677376270294], "val_loss": [6.366244480273613e+16, 8.623702655673303e+17, 3.707748921930416e+18, 9.976538601392964e+18, 2.078821125966319e+19, 3.687910873435105e+19], "val_accuracy": [0.17266666889190674, 0.1720000058412552, 0.17166666686534882, 0.17166666686534882, 0.17166666686534882, 0.17166666686534882]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 7, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 44, 16], [0, 0, 1, 1], [0, 7], [7, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [390.8863220214844, 2474.96630859375, 5569.5849609375, 9983.33203125, 16290.9501953125, 25345.892578125], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1463.8153076171875, 4128.70849609375, 7928.923828125, 13362.5625, 21153.08984375, 32352.568359375], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 6, 3, 1, 3, 6, 7, 1, 5, 7, 3, 7, 2, 5, 8, 5, 2, 2, 3, 3, 4, 5, 4, 9], [0, 0, 1, 0, 2, 3, 1, 0, 2, 0, 2, 1, 3, 1, 3, 1, 0, 1], [0, 39, 37, 15, 97, 84, 43], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 0, 6, 3, 4, 5], [0, 0, 1, 0, 3, 1, 0, 5, 1], [0, 27, 16, 0], [0, 1, 1, 1], [0, 7], [2, 6], [60], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 24, 18, 7, 21, 12, 9, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(tf.math.square(grad), alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.multiply(grad, tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.square(grad))), alpha))), tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), grad), tf.math.multiply(tf.math.pow(tf.math.square(alpha), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, alpha)))), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]