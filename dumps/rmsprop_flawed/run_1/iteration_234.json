[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4869328737258911, 0.8066443800926208, 0.6536725163459778, 0.5920747518539429, 0.5686376094818115, 0.5453463196754456, 0.5446007251739502, 0.5322883725166321, 0.48625102639198303, 0.5016876459121704, 0.5018972158432007, 0.4733876585960388, 0.4844859540462494, 0.4705192744731903, 0.4660942852497101, 0.4718538224697113], "accuracy": [0.4917448163032532, 0.7228899598121643, 0.7556465268135071, 0.7817989587783813, 0.7905164361000061, 0.7968564033508301, 0.8105930685997009, 0.8064984679222107, 0.8182538747787476, 0.819970965385437, 0.821820080280304, 0.8325188159942627, 0.8267071843147278, 0.8352925777435303, 0.8338396549224854, 0.8401796221733093], "val_loss": [0.8037856221199036, 0.6060487031936646, 0.5189273953437805, 0.5058115124702454, 0.4781077206134796, 0.5016518831253052, 0.47823697328567505, 0.46946656703948975, 0.48097333312034607, 0.4774151146411896, 0.468502938747406, 0.46656617522239685, 0.4889768958091736, 0.5106397867202759, 0.4785216152667999, 0.49420180916786194], "val_accuracy": [0.7279999852180481, 0.7839999794960022, 0.8140000104904175, 0.8163333535194397, 0.8303333520889282, 0.8333333134651184, 0.8356666564941406, 0.8353333473205566, 0.8463333249092102, 0.8399999737739563, 0.8573333621025085, 0.8516666889190674, 0.8443333506584167, 0.8513333201408386, 0.8500000238418579, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 2, 3, 1, 3, 5, 5, 3, 8, 9, 0, 9], [1, 0, 1, 2, 2], [0, 39, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 9, 8, 2], [0, 0, 1, 0, 3, 1, 1], [0, 27, 16, 16], [0, 1, 1, 0], [0, 7], [0, 7], [0], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 12, 4, 3, 11, 7, 4, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.math.multiply(grad, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [463178.4375, 1.0749051343886524e+30, 2.3200154304504395, 2.30637264251709, 2.303816556930542, 2.3031671047210693, 2.3030788898468018, 2.3029048442840576, 2.3028643131256104], "accuracy": [0.19455818831920624, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09391097724437714, 0.09708096832036972, 0.09840179979801178, 0.09998679161071777, 0.09734513610601425], "val_loss": [1423584919552.0, 2.3298070430755615, 2.307772159576416, 2.303596258163452, 2.302779197692871, 2.302651882171631, 2.302762746810913, 2.302621364593506, 2.3025875091552734], "val_accuracy": [0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.09833333641290665, 0.0989999994635582, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 77], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 8, 6, 3, 8, 2], [0, 0, 2, 0, 0, 1, 0], [0, 27, 49, 16], [0, 0, 1, 0], [9, 7], [1, 7], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100342750549316, 2.309319019317627, 2.310086250305176, 2.309887647628784, 2.309149742126465, 2.3098387718200684], "accuracy": [0.09377889335155487, 0.09391097724437714, 0.09298639744520187, 0.09113723784685135, 0.09232597798109055, 0.09708096832036972], "val_loss": [2.308713912963867, 2.308713912963867, 2.308713912963867, 2.308713912963867, 2.308713912963867, 2.308713912963867], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 3, 1, 3, 5, 8, 4, 1, 9], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 2, 5, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [5, 6], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 15, 10, 5, 3, 6, 3, 3, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.pow(alpha, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085052967071533, 2.3082947731018066, 2.3112759590148926, 2.309898853302002, 2.3096837997436523, 2.309023857116699], "accuracy": [0.09496764093637466, 0.09060890227556229, 0.08981640636920929, 0.09219389408826828, 0.08902391046285629, 0.09259014576673508], "val_loss": [2.3083596229553223, 2.3083596229553223, 2.3083596229553223, 2.3083596229553223, 2.3083596229553223, 2.3083596229553223], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 6, 1, 3, 5, 6, 1, 1, 4, 4, 6, 0], [0, 0, 1, 0, 2, 3, 1, 2, 2, 3, 3], [75, 76, 77], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 36, 16], [1, 0, 1, 1], [0, 7], [0, 7], [0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 5, 5, 7, 3, 4, 8, 2, 1], [2, 0, 0, 3, 4, 0, 2], [0, 46, 2]], "fitness": -0.09114285558462143, "mapping_values": [1, 24, 13, 11, 3, 2, 1, 1, 1, 1, 0, 1, 1, 17, 10, 7, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.subtract(grad, tf.math.pow(tf.math.pow(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.negative(grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.add(grad, tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), beta)))))))", "other_info": {"loss": [2.309269428253174, 2.310234308242798, 2.3116776943206787, 2.310504913330078, 2.309553623199463, 2.3102736473083496, 2.309612512588501, 2.3084239959716797], "accuracy": [0.09325055778026581, 0.0874389111995697, 0.08730682730674744, 0.08915598690509796, 0.09509972482919693, 0.09100515395402908, 0.09391097724437714, 0.09509972482919693], "val_loss": [2.30942440032959, 2.30942702293396, 2.309429407119751, 2.3094322681427, 2.309434413909912, 2.309436798095703, 2.3094382286071777, 2.3094401359558105], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]