[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5984066724777222, 0.8676839470863342, 0.7032138109207153, 0.6347440481185913, 0.5766051411628723, 0.5550101399421692, 0.5237676501274109, 0.5102182626724243, 0.49197065830230713, 0.4937501549720764, 0.46607881784439087, 0.4818723797798157, 0.4718434512615204, 0.45138266682624817, 0.46248605847358704, 0.4754544496536255, 0.4835503399372101, 0.4710767865180969, 0.5247304439544678, 0.529658854007721, 0.5607547163963318, 0.5469451546669006], "accuracy": [0.471800297498703, 0.6975300312042236, 0.7387399077415466, 0.7677981853485107, 0.7824593782424927, 0.8017435073852539, 0.8062343001365662, 0.813498854637146, 0.8148196935653687, 0.8220842480659485, 0.828292191028595, 0.8289526104927063, 0.828820526599884, 0.844010055065155, 0.8437458872795105, 0.8372738361358643, 0.8418967127799988, 0.847840428352356, 0.8273676037788391, 0.8215559124946594, 0.833179235458374, 0.8133667707443237], "val_loss": [0.8372136950492859, 0.6534132361412048, 0.5600067377090454, 0.5137830972671509, 0.5036782026290894, 0.483420729637146, 0.48565658926963806, 0.48497435450553894, 0.4837706983089447, 0.4992819130420685, 0.4903642535209656, 0.5130298137664795, 0.5589017868041992, 0.5278353691101074, 0.5392153263092041, 0.534280002117157, 0.5760231614112854, 0.5734516382217407, 0.5742754340171814, 0.5302711725234985, 0.5256072878837585, 0.5700936913490295], "val_accuracy": [0.7013333439826965, 0.765666663646698, 0.7973333597183228, 0.8119999766349792, 0.8143333196640015, 0.8286666870117188, 0.8226666450500488, 0.8370000123977661, 0.8289999961853027, 0.8360000252723694, 0.8416666388511658, 0.8349999785423279, 0.8446666598320007, 0.8423333168029785, 0.8379999995231628, 0.8389999866485596, 0.8553333282470703, 0.8326666951179504, 0.8296666741371155, 0.847000002861023, 0.843999981880188, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [3, 5, 3, 9, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 0, 2], [0, 0, 2, 0, 3, 1, 5], [91, 27, 16, 16], [0, 0, 0, 1, 1], [0, 7, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036248683929443, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 19, 77], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 5, 2, 0, 3, 1, 0], [0, 27, 16, 16], [1, 0, 0, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098108768463135, 2.31025767326355, 2.3101072311401367, 2.310716390609741, 2.3104088306427, 2.3098154067993164], "accuracy": [0.09074098616838455, 0.09219389408826828, 0.0936468094587326, 0.0944393053650856, 0.09311848133802414, 0.09153348207473755], "val_loss": [2.3083488941192627, 2.3083488941192627, 2.3083488941192627, 2.3083488941192627, 2.3083488941192627, 2.3083488941192627], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 6, 1, 3, 9, 2, 7], [0, 0, 1, 0, 2, 2], [0, 39, 77, 67], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [8, 2, 3, 1, 6, 3, 8, 8], [0, 0, 5, 0, 3, 0, 0], [0, 27, 16, 16], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 7, 5, 7, 6, 7, 4, 7, 7, 1, 6, 9, 3, 7, 7, 7, 2, 0, 3, 6, 2, 8, 3, 4, 5, 7, 1, 6, 3, 6, 0, 5, 8, 4, 2, 8, 9, 3, 9, 1, 8, 2, 5, 6, 0, 0, 6, 2, 3, 7, 2, 3, 3, 0, 2, 7, 6, 2, 1, 0, 0, 5, 2, 6, 1, 4, 9], [0, 7, 3, 3, 6, 6, 6, 3, 6, 4, 0, 7, 6, 2, 3, 4, 5, 2, 4, 1, 4, 6, 0, 6, 4, 5, 3, 2, 0, 5, 7, 3, 0, 4, 6, 7, 0, 3, 4, 4, 5, 4, 7, 6], [0, 27, 46, 7, 24, 18, 2, 45, 21, 99], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 14, 8, 6, 4, 1, 0, 1, 1, 111, 67, 44, 10, 1, 0, 1, 0], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.pow(sigma, sigma), tf.math.add(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, grad)), tf.math.add(sigma, grad))), tf.math.add(grad, tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(tf.math.sqrt(beta), tf.math.multiply(sigma, tf.math.pow(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), grad), tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.sqrt(alpha), grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.multiply(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.sqrt(grad), tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.negative(sigma)))))))), tf.math.negative(beta))), tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.add(grad, sigma)), tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.negative(grad), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(sigma), grad)), tf.math.negative(tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(grad, grad), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)))))), grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108937740325928, 2.310382127761841, 2.3096137046813965, 2.309985637664795, 2.3108792304992676, 2.3111507892608643], "accuracy": [0.08955223858356476, 0.09377889335155487, 0.09311848133802414, 0.09417514503002167, 0.09351472556591034, 0.08902391046285629], "val_loss": [2.3086602687835693, 2.3086602687835693, 2.3086602687835693, 2.3086602687835693, 2.3086602687835693, 2.3086602687835693], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 40, 77], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 6], [0, 7], [0], [0, 0, 0, 0, 1, 1], [0, 6, 9, 6], [2, 6], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 6, 3, 3, 1, 6, 4, 2, 3, 4, 2, 2, 1, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, grad)))", "other_info": {"loss": [2.3084146976470947, 2.3098573684692383, 2.310283660888672, 2.3090250492095947, 2.3108816146850586, 2.3090338706970215], "accuracy": [0.09774138033390045, 0.08994849026203156, 0.08928807079792023, 0.0952318087220192, 0.09285431355237961, 0.09708096832036972], "val_loss": [2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]