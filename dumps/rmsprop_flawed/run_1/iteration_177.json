[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5568417310714722, 0.8074567914009094, 0.6866827011108398, 0.6876620650291443, 0.6436557769775391, 0.5815790295600891, 0.5518734455108643, 0.5349267721176147, 0.5278260111808777, 0.5375053882598877, 0.49989962577819824, 0.5198278427124023, 0.5196736454963684, 0.5046537518501282, 0.5113046765327454, 0.5167616009712219, 0.5023123621940613, 0.5045819878578186, 0.5164260268211365, 0.49265891313552856, 0.47944337129592896, 0.5005502700805664, 0.5222151875495911, 0.5118758082389832, 0.5093687176704407, 0.5340316891670227, 0.5487618446350098, 0.569087028503418, 0.5818384885787964], "accuracy": [0.48131024837493896, 0.7137762308120728, 0.7530049085617065, 0.7572315335273743, 0.7668735980987549, 0.7926297783851624, 0.7987055778503418, 0.8064984679222107, 0.8125742673873901, 0.8115176558494568, 0.8319904804229736, 0.8226125836372375, 0.8017435073852539, 0.8274996876716614, 0.817989706993103, 0.8203672170639038, 0.8300092220306396, 0.8256505131721497, 0.8284242749214172, 0.8313300609588623, 0.8297450542449951, 0.8241975903511047, 0.8327829837799072, 0.8314621448516846, 0.8323867321014404, 0.8247259259223938, 0.828820526599884, 0.8177255392074585, 0.8104609847068787], "val_loss": [0.8501789569854736, 0.6311110854148865, 0.5830293297767639, 0.5836181044578552, 0.572313129901886, 0.531561017036438, 0.5213088989257812, 0.5391380190849304, 0.5241219997406006, 0.575023353099823, 0.5933366417884827, 0.5734858512878418, 0.5843809247016907, 0.6006925702095032, 0.579128086566925, 0.534130871295929, 0.5754292607307434, 0.5602900981903076, 0.5715072154998779, 0.5729230046272278, 0.5212833881378174, 0.6161400675773621, 0.5924795866012573, 0.559674859046936, 0.6394932270050049, 0.5869898796081543, 0.592925488948822, 0.6375104784965515, 0.582612931728363], "val_accuracy": [0.7043333053588867, 0.7636666893959045, 0.7683333158493042, 0.796999990940094, 0.809333324432373, 0.809333324432373, 0.8059999942779541, 0.8083333373069763, 0.8180000185966492, 0.8066666722297668, 0.8220000267028809, 0.8136666417121887, 0.815666675567627, 0.8130000233650208, 0.8176666498184204, 0.8230000138282776, 0.8289999961853027, 0.824999988079071, 0.8356666564941406, 0.8206666707992554, 0.8209999799728394, 0.8333333134651184, 0.8303333520889282, 0.840666651725769, 0.8336666822433472, 0.8353333473205566, 0.8216666579246521, 0.8306666612625122, 0.8076666593551636]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 7, 77, 69], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 1, 5, 8, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16, 34], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 7, 7, 4, 6, 5, 3, 1, 5, 5, 4, 1, 7], [4, 5, 2, 3, 6, 6, 1, 0, 7, 4, 0], [47, 67], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 20, 13, 7, 5, 25, 14, 11, 2, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.square(beta), sigma), tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.square(tf.math.pow(tf.math.subtract(grad, grad), alpha))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 3], [0, 3, 1, 2, 2], [0, 39, 77], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 0, 0], [0, 27, 58, 16], [0, 0, 1, 1, 1], [4, 7], [0, 7, 0], [0, 97], [0, 0, 0, 1, 0, 1, 1], [0, 7, 8, 6], [2, 3, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 1, 0, 1, 1, 5, 2, 3, 2, 7, 4, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 1, 0, 2], [96, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 5, 3, 1, 0], [70, 27, 16, 0], [0, 0, 0, 1, 0, 1], [0, 7, 4, 9], [0, 7], [0, 40], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302992820739746, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 77, 31], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 4], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 7], [28], [0, 1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 7, 4, 4, 13, 7, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3104751110076904, 2.3107545375823975, 2.310678720474243, 2.310288906097412, 2.3107872009277344, 2.3100509643554688], "accuracy": [0.09192973375320435, 0.08981640636920929, 0.09060890227556229, 0.09602430462837219, 0.09100515395402908, 0.09087307006120682], "val_loss": [2.3084781169891357, 2.3084781169891357, 2.3084781169891357, 2.3084781169891357, 2.3084781169891357, 2.3084781169891357], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]