[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.639635682106018, 0.8868263363838196, 0.7257312536239624, 0.6465064883232117, 0.5894608497619629, 0.5416134595870972, 0.5130436420440674, 0.4845358729362488, 0.4716683030128479, 0.46989595890045166, 0.47282764315605164, 0.46253544092178345, 0.4765448570251465, 0.4666234850883484, 0.49910634756088257, 0.45519304275512695, 0.4682985842227936, 0.44102415442466736, 0.46818631887435913, 0.46941959857940674, 0.4672447443008423, 0.5051372051239014, 0.5469068884849548], "accuracy": [0.4430062174797058, 0.6831330060958862, 0.7478536367416382, 0.7642319202423096, 0.7844406366348267, 0.7940827012062073, 0.8157442808151245, 0.819442629814148, 0.8305375576019287, 0.8329150676727295, 0.8271034359931946, 0.8293488025665283, 0.8363492488861084, 0.8445383906364441, 0.8378021121025085, 0.8416325449943542, 0.8491612672805786, 0.8482366800308228, 0.842028796672821, 0.8403117060661316, 0.8437458872795105, 0.8381983637809753, 0.8232730031013489], "val_loss": [1.065647840499878, 0.6348004341125488, 0.5808840394020081, 0.5175415873527527, 0.5138276219367981, 0.48897889256477356, 0.4532349407672882, 0.4683268368244171, 0.48422420024871826, 0.5150106549263, 0.47329220175743103, 0.4879993498325348, 0.5068775415420532, 0.5401459336280823, 0.5194364190101624, 0.5396696925163269, 0.5924421548843384, 0.5590372681617737, 0.5365915894508362, 0.5488547086715698, 0.6109467148780823, 0.54319167137146, 0.5591096878051758], "val_accuracy": [0.6000000238418579, 0.7683333158493042, 0.7820000052452087, 0.8073333501815796, 0.8083333373069763, 0.8196666836738586, 0.8286666870117188, 0.8376666903495789, 0.8236666917800903, 0.8336666822433472, 0.8296666741371155, 0.8346666693687439, 0.8473333120346069, 0.8330000042915344, 0.8336666822433472, 0.843666672706604, 0.8463333249092102, 0.8483333587646484, 0.8483333587646484, 0.8420000076293945, 0.8473333120346069, 0.8299999833106995, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 9], [3, 0, 2, 0, 3, 0, 0], [65, 22, 16, 16], [1, 0, 1, 1], [9, 5], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7860000133514404, "mapping_values": [1, 1, 0, 1, 0, 13, 8, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2313601970672607, 1.6310878992080688, 1.1477676630020142, 0.9909325242042542, 0.853545069694519, 0.8294445872306824, 0.7591977119445801, 0.7588632106781006, 0.6961100101470947, 0.7032004594802856, 0.6703423261642456, 0.6643088459968567, 0.63318932056427, 0.6424612402915955, 0.6252191662788391, 0.6343153119087219, 0.5966835618019104, 0.6087971925735474, 0.5777289271354675, 0.57831871509552, 0.5743624567985535], "accuracy": [0.24593845009803772, 0.4876502454280853, 0.5959582328796387, 0.6427156329154968, 0.6802271604537964, 0.6995112895965576, 0.7205125093460083, 0.7127195596694946, 0.739928662776947, 0.7333245277404785, 0.7531369924545288, 0.748778223991394, 0.7671377658843994, 0.7553823590278625, 0.7703077793121338, 0.7629110813140869, 0.7821952104568481, 0.7765156626701355, 0.7827235460281372, 0.7803460359573364, 0.7864218950271606], "val_loss": [1.9992578029632568, 1.2002087831497192, 1.1067380905151367, 0.7735180854797363, 0.7425751090049744, 0.7489254474639893, 0.6844980716705322, 0.6477524638175964, 0.6502082943916321, 0.6663764715194702, 0.5966562628746033, 0.5986257195472717, 0.630685567855835, 0.6030140519142151, 0.6016901731491089, 0.5548262000083923, 0.5598060488700867, 0.5529646873474121, 0.5542445778846741, 0.566173255443573, 0.5485458970069885], "val_accuracy": [0.4833333194255829, 0.5433333516120911, 0.6013333201408386, 0.7039999961853027, 0.7203333377838135, 0.7056666612625122, 0.7326666712760925, 0.7480000257492065, 0.7459999918937683, 0.7456666827201843, 0.7616666555404663, 0.7643333077430725, 0.7580000162124634, 0.7536666393280029, 0.7620000243186951, 0.7856666445732117, 0.7846666574478149, 0.7856666445732117, 0.7799999713897705, 0.7823333144187927, 0.7826666831970215]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [3, 0, 1, 0, 2], [5, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 0, 2, 8, 2], [0, 3, 2, 0, 3, 3, 0], [0, 27, 16, 16], [0, 0, 1, 1], [5, 7], [4, 5], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 11, 7, 4, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [165981.90625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19257694482803345, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [323397091328.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2, 5, 0, 9], [0, 1, 3, 0, 3, 0, 0], [0, 27, 95, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 17, 11, 6, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), grad)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 3, 1, 6, 3, 7, 2, 9, 7, 5, 6, 7, 8, 0, 1, 0], [0, 1, 2, 0, 3, 1, 0, 4, 4, 4, 3, 4], [0, 27, 16, 16], [0, 0, 0, 1, 1, 1], [0, 7, 3], [0, 6, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 29, 17, 12, 4, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.sqrt(grad)), tf.math.negative(tf.math.subtract(tf.math.negative(grad), grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.311302900314331, 2.3095204830169678, 2.3100688457489014, 2.3103392124176025, 2.310239315032959, 2.310056686401367], "accuracy": [0.08955223858356476, 0.09668471664190292, 0.09008057415485382, 0.09153348207473755, 0.08796724677085876, 0.09430722147226334], "val_loss": [2.308593273162842, 2.308593273162842, 2.308593273162842, 2.308593273162842, 2.308593273162842, 2.308593273162842], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]