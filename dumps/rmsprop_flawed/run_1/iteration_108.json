[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4902511835098267, 0.7683755159378052, 0.6440528631210327, 0.5817055702209473, 0.5361871719360352, 0.5137980580329895, 0.4813167154788971, 0.5097212195396423, 0.4690844416618347, 0.4911515712738037, 0.4508539140224457, 0.45718345046043396, 0.5262227654457092, 0.531684160232544], "accuracy": [0.47893276810646057, 0.7292299270629883, 0.7741381525993347, 0.7924976944923401, 0.8099326491355896, 0.8166688680648804, 0.8269713521003723, 0.8244617581367493, 0.8313300609588623, 0.8308017253875732, 0.834632158279419, 0.8374059200286865, 0.826310932636261, 0.828292191028595], "val_loss": [0.7522630095481873, 0.5658150911331177, 0.5095343589782715, 0.4747239649295807, 0.4709942936897278, 0.4707030951976776, 0.5026454925537109, 0.49166059494018555, 0.45206165313720703, 0.4659534990787506, 0.48000285029411316, 0.5354689955711365, 0.5486713647842407, 0.5043097138404846], "val_accuracy": [0.7350000143051147, 0.8050000071525574, 0.8136666417121887, 0.824999988079071, 0.8353333473205566, 0.8326666951179504, 0.8396666646003723, 0.8403333425521851, 0.8489999771118164, 0.8420000076293945, 0.8386666774749756, 0.8346666693687439, 0.8426666855812073, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 1, 5, 8, 1, 2], [0, 0, 2, 0, 3, 1, 0, 0, 4, 3, 4], [0, 27, 16, 16, 61], [1, 0, 1, 1], [0, 7], [0, 2], [39], [1], [0], [2], [0]], "fitness": -0.7125714421272278, "mapping_values": [1, 2, 1, 1, 1, 25, 14, 11, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.262899875640869, 1.7121281623840332, 1.084659457206726, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19970941543579102, 0.4542332589626312, 0.616299033164978, 0.25320300459861755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.102236270904541, 0.9390252232551575, 0.7397748231887817, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4189999997615814, 0.6629999876022339, 0.7393333315849304, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 3, 8, 5, 9, 0, 5, 0, 0], [0, 1, 4, 0, 3, 1, 0], [0, 61, 35, 16], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 7, 8, 1, 7, 9, 9], [3, 7, 0], [0, 51, 96], [1], [0], [2], [0]], "fitness": -0.10828571766614914, "mapping_values": [1, 12, 7, 5, 3, 18, 13, 5, 3, 10, 7, 3, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(grad)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, grad), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.653555870056152, 17.959836959838867, 2.8532092571258545, 6.821615219116211, 3.107144355773926, 3.3956620693206787, 57419004.0, 32.972023010253906, 6.682969662331814e+18, 4.074540138244629, 4.5528764724731445, 3.1752121448516846, 4.404299736022949], "accuracy": [0.1974640041589737, 0.10355303436517715, 0.10474177449941635, 0.10117553919553757, 0.09985470771789551, 0.1022322028875351, 0.10249637067317963, 0.10117553919553757, 0.09681680053472519, 0.09932637959718704, 0.09774138033390045, 0.09470347315073013, 0.09457138925790787], "val_loss": [95.31298828125, 2.89037823677063, 2.649672746658325, 3.6004445552825928, 3.3283565044403076, 3.5740251541137695, 3.6238596439361572, 217.55593872070312, 3.8807103633880615, 4.562248229980469, 3.8606138229370117, 4.312434196472168, 3.466216802597046], "val_accuracy": [0.09033333510160446, 0.0989999994635582, 0.10333333164453506, 0.09733333438634872, 0.10266666859388351, 0.10333333164453506, 0.09733333438634872, 0.10999999940395355, 0.09966666996479034, 0.09733333438634872, 0.10333333164453506, 0.1003333330154419, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 2, 7, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 7, 1, 5, 5], [0, 0, 1, 0, 4, 1, 0, 0, 3], [0, 27, 72, 16, 80], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 1, 2, 2, 7, 7, 6, 1, 3, 8, 2, 3, 6, 2, 3, 8, 9, 2, 5, 8, 8, 8, 6, 3, 5, 1, 3, 3, 3, 4, 4, 9, 2, 7, 7], [0, 7, 4, 7, 7, 2, 0, 4, 2, 4, 1, 0, 0, 5, 6, 5, 7, 1, 4, 4, 7, 2, 4, 4, 2], [0, 97, 57, 72, 42, 56], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 6, 3, 5, 4, 0, 5], [2, 2, 2, 6, 5, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 12, 9, 5, 61, 36, 25, 6, 15, 9, 6, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.subtract(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.multiply(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(beta))), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(alpha), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad))))), grad), tf.math.subtract(grad, grad))), tf.math.multiply(alpha, tf.math.multiply(tf.math.multiply(tf.math.pow(grad, grad), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, beta))), tf.math.add(grad, tf.math.add(grad, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.square(tf.math.pow(beta, tf.math.negative(tf.math.square(grad))))), grad), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 3, 3, 1, 6, 6, 2, 4, 9], [2, 0, 1, 0, 2, 3, 2, 2, 2, 3, 3], [89, 39, 77], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 0, 1, 1, 1], [0, 27, 16, 53], [0, 0, 1, 1], [0, 7], [2, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 14, 11, 3, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.multiply(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, grad), grad)), grad)), grad))), tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]