[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5443882942199707, 0.8050698041915894, 0.665413498878479, 0.6075514554977417, 0.5612055659294128, 0.5235753059387207, 0.4939155876636505, 0.49100998044013977, 0.46985745429992676, 0.4740266799926758, 0.4727429151535034, 0.44164425134658813, 0.40264657139778137, 0.4127684533596039, 0.42685455083847046, 0.43591323494911194, 0.4338374435901642, 0.47472167015075684], "accuracy": [0.4690265357494354, 0.7164179086685181, 0.750759482383728, 0.7725531458854675, 0.7954035401344299, 0.8041210174560547, 0.8171972036361694, 0.8162726163864136, 0.8269713521003723, 0.8392550349235535, 0.8313300609588623, 0.8450667262077332, 0.8479725122451782, 0.8549728989601135, 0.846387505531311, 0.845859169960022, 0.8471800088882446, 0.8515387773513794], "val_loss": [0.8161039352416992, 0.5808139443397522, 0.5227957367897034, 0.49943462014198303, 0.47728437185287476, 0.4651344418525696, 0.4819072186946869, 0.4426526427268982, 0.4353914260864258, 0.4587309956550598, 0.5035513639450073, 0.43909552693367004, 0.5098952054977417, 0.502402663230896, 0.4785043001174927, 0.4804959297180176, 0.5302814841270447, 0.882901668548584], "val_accuracy": [0.7046666741371155, 0.7756666541099548, 0.8106666803359985, 0.8209999799728394, 0.824999988079071, 0.8256666660308838, 0.8349999785423279, 0.8379999995231628, 0.8453333377838135, 0.8493333458900452, 0.8443333506584167, 0.8566666841506958, 0.8583333492279053, 0.8523333072662354, 0.8550000190734863, 0.8446666598320007, 0.8450000286102295, 0.8496666550636292]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 3, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 8, 6, 3, 8, 0, 1, 4], [3, 0, 3, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 0, 1, 1], [0, 7, 4, 5], [0, 7, 0], [0, 23], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 17, 10, 7, 3, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 7, 6, 3, 8, 3], [0, 5, 2, 5, 3, 1, 0], [1, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3106186389923096, 2.496070623397827, 318527776.0, 1.8723099604812314e+30, 146278.609375, 37282616.0, 9509159936.0], "accuracy": [0.09417514503002167, 0.07647603005170822, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.314063549041748, 8.043741226196289, 1097146577190912.0, 5487.1572265625, 1404712.75, 359606464.0, 92059254784.0], "val_accuracy": [0.08900000154972076, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 9, 5], [0, 0, 2, 0, 3], [0, 39, 39, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 3, 3, 8, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 27, 11, 0], [0, 0, 1, 1], [0, 0], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 4, 1, 0, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093478679656982, 2.3103158473968506, 2.3108856678009033, 2.3105697631835938, 2.309429883956909, 2.3107924461364746], "accuracy": [0.09232597798109055, 0.08757099509239197, 0.09087307006120682, 0.09509972482919693, 0.0944393053650856, 0.08757099509239197], "val_loss": [2.3093268871307373, 2.3093268871307373, 2.3093268871307373, 2.3093268871307373, 2.3093268871307373, 2.3093268871307373], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 8, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 5, 1, 1, 0], [0, 27, 79, 16], [0, 0, 1, 1], [0, 0], [0, 7], [0], [0, 1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101649284362793, 2.3112196922302246, 2.3106987476348877, 2.3093342781066895, 2.3108532428741455, 2.310758352279663], "accuracy": [0.09008057415485382, 0.08889182657003403, 0.08757099509239197, 0.0948355570435524, 0.09351472556591034, 0.09008057415485382], "val_loss": [2.308455228805542, 2.308455228805542, 2.308455228805542, 2.308455228805542, 2.308455228805542, 2.308455228805542], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]