[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5289565324783325, 0.7783652544021606, 0.6770519018173218, 0.6033036112785339, 0.5599994659423828, 0.5178110003471375, 0.5035282373428345, 0.4849116802215576, 0.43136298656463623, 0.43503493070602417, 0.4244481921195984, 0.4532566964626312, 0.45718914270401, 0.4518981873989105], "accuracy": [0.4653282165527344, 0.7213049530982971, 0.7563069462776184, 0.7788931727409363, 0.8016114234924316, 0.817461371421814, 0.8240655064582825, 0.8269713521003723, 0.845859169960022, 0.8374059200286865, 0.8486329317092896, 0.8455950617790222, 0.8376700282096863, 0.841500461101532], "val_loss": [0.7510952353477478, 0.5694411993026733, 0.5197407007217407, 0.47463786602020264, 0.4633505940437317, 0.46524617075920105, 0.46703964471817017, 0.4559522271156311, 0.47189342975616455, 0.46734994649887085, 0.5054671168327332, 0.46754229068756104, 0.5266461372375488, 0.5423958897590637], "val_accuracy": [0.7163333296775818, 0.7910000085830688, 0.8113333582878113, 0.8166666626930237, 0.8206666707992554, 0.8356666564941406, 0.8426666855812073, 0.8393333554267883, 0.8566666841506958, 0.847000002861023, 0.8363333344459534, 0.8500000238418579, 0.8496666550636292, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 3, 3, 1, 1, 5], [3, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 5, 1, 0], [0, 27, 16, 86], [0, 0, 1, 1], [8, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.6134285926818848, "mapping_values": [1, 1, 0, 1, 0, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3084301948547363, 2.2964587211608887, 2.2741754055023193, 2.2445969581604004, 2.20727276802063, 2.1499791145324707, 2.060999631881714, 1.960544228553772, 1.8926606178283691, 1.7789044380187988, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.11557257920503616, 0.1814819723367691, 0.2654867172241211, 0.3427552580833435, 0.3737947344779968, 0.39941883087158203, 0.4278166592121124, 0.39228636026382446, 0.38502180576324463, 0.1450270712375641, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.301112413406372, 2.2814979553222656, 2.255110740661621, 2.2209091186523438, 2.171653985977173, 2.0917887687683105, 1.9944628477096558, 1.9003372192382812, 1.8163353204727173, 1.5309197902679443, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.18133333325386047, 0.40433332324028015, 0.4516666531562805, 0.46666666865348816, 0.4806666672229767, 0.515666663646698, 0.5540000200271606, 0.5463333129882812, 0.6243333220481873, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 7, 5, 1, 6, 4, 8, 2], [0, 0, 2, 0, 0, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 1, 1, 7, 7, 9, 7, 3, 6, 4, 3, 4, 1, 6, 1, 0, 5, 6, 3, 2, 1, 4, 5, 9, 0, 7, 3, 5, 8, 2, 1], [5, 5, 5, 3, 0, 4, 2, 3, 4, 5, 3, 1, 7, 6, 6, 5, 0, 4, 3, 6, 2, 3], [0, 52, 97, 34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 54, 32, 22, 4, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(sigma, tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(beta, sigma)), tf.math.negative(grad))), grad), tf.math.square(sigma)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.subtract(alpha, tf.math.pow(tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad)), grad), grad), tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, sigma)))))))), tf.math.subtract(grad, beta)), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3045642375946045, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [5, 1, 2, 0, 3, 1, 0], [95, 2, 16, 16], [0, 0, 1, 0, 1], [0, 7, 8], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 2, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), beta), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [1, 0, 1, 0, 2], [36, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 5, 3, 1, 7, 3, 2, 2], [0, 4, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [2, 7, 6, 7, 6, 6, 6, 1, 0, 6, 0, 2, 4, 0, 7, 6, 2, 2, 3, 9, 4, 9, 3, 1, 9, 8, 8], [4, 5, 0, 0, 5, 3, 7, 3, 7, 4, 1, 4, 4, 5, 4, 4, 5], [0, 59, 76, 96, 77], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 9, 4, 5, 2, 5, 3, 2, 1, 44, 27, 17, 5, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(grad), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(grad, tf.math.pow(tf.math.negative(sigma), grad))), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, grad), grad), tf.math.multiply(alpha, grad)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3082542419433594, 2.310270309448242, 2.3103463649749756, 2.308398962020874, 2.310481309890747, 2.309128522872925], "accuracy": [0.0952318087220192, 0.09100515395402908, 0.08796724677085876, 0.08889182657003403, 0.09245806187391281, 0.09245806187391281], "val_loss": [2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]