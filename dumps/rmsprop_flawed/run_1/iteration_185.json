[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 3, 0, 2], [0, 39, 77], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 4, 0, 3, 2, 0], [0, 27, 16, 0], [0, 1, 1, 1], [2, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "mapping_values": [1, 9, 6, 3, 3, 6, 3, 3, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.293610095977783, 2.18969988822937, 1.7682515382766724, 1.359813928604126, 1.0830429792404175, 0.9254188537597656, 0.8490931391716003, 0.8456025719642639, 0.7916949987411499, 0.7621890902519226, 0.7125085592269897, 0.6784413456916809, 0.6662221550941467, 0.6298526525497437, 0.6179391145706177, 0.6021760702133179, 0.5922255516052246, 0.5747041702270508, 0.5646000504493713, 0.5502319931983948, 0.5575743913650513, 0.531689465045929, 0.5257682800292969, 0.5188246965408325, 0.5108128786087036, 0.4803553819656372, 0.4911980628967285, 0.48248836398124695, 0.4813717305660248, 0.4623548090457916, 0.45301979780197144, 0.45262840390205383, 0.4346855580806732, 0.44187796115875244, 0.4280325174331665, 0.4175489842891693, 0.42272499203681946, 0.39846935868263245, 0.4051515758037567, 0.4158083200454712, 0.39656251668930054, 0.3878723978996277, 0.3839907944202423, 0.39272165298461914, 0.3733595907688141, 0.3792385756969452, 0.3809768855571747, 0.36657997965812683, 0.3762143850326538, 0.3693901598453522, 0.3742816150188446, 0.3512309789657593, 0.34939563274383545, 0.3474210500717163, 0.35116782784461975, 0.353771835565567, 0.3442954421043396, 0.3298432528972626, 0.34505221247673035, 0.336910605430603, 0.33392220735549927, 0.3296160399913788], "accuracy": [0.12455421686172485, 0.32901862263679504, 0.4383833110332489, 0.5392946600914001, 0.6317527294158936, 0.6715096831321716, 0.6881521344184875, 0.6944921612739563, 0.6956809163093567, 0.709549605846405, 0.7275128960609436, 0.7400607466697693, 0.7490423917770386, 0.7652885913848877, 0.7712323069572449, 0.7711002230644226, 0.7788931727409363, 0.7868181467056274, 0.7853652238845825, 0.7940827012062073, 0.7865539789199829, 0.7988376617431641, 0.8072909712791443, 0.8068947196006775, 0.8070268034934998, 0.8235371708869934, 0.822348415851593, 0.8137630224227905, 0.8129705190658569, 0.8249900937080383, 0.8347642421722412, 0.8309338092803955, 0.8372738361358643, 0.8293488025665283, 0.8367455005645752, 0.8422929644584656, 0.8403117060661316, 0.8477083444595337, 0.8486329317092896, 0.8389908671379089, 0.8473120927810669, 0.8552370667457581, 0.8519350290298462, 0.845859169960022, 0.8555012345314026, 0.8519350290298462, 0.857218325138092, 0.8556333184242249, 0.8551049828529358, 0.8561616539955139, 0.8532558679580688, 0.8663320541381836, 0.8654074668884277, 0.863558292388916, 0.8677849769592285, 0.8614450097084045, 0.8644828796386719, 0.8729361891746521, 0.8692378997802734, 0.8745211958885193, 0.870030403137207, 0.8685774803161621], "val_loss": [2.245595932006836, 2.0176429748535156, 1.132338047027588, 0.8872841596603394, 0.7644102573394775, 0.6993403434753418, 0.6696521043777466, 0.6708797812461853, 0.6447668075561523, 0.6146257519721985, 0.5988028049468994, 0.5728120803833008, 0.55283522605896, 0.5487027764320374, 0.5452085733413696, 0.5228787660598755, 0.5150802135467529, 0.5171726942062378, 0.519721508026123, 0.503089189529419, 0.4870931804180145, 0.48281535506248474, 0.4805358946323395, 0.4514259099960327, 0.4599751830101013, 0.47474366426467896, 0.4557134211063385, 0.4487159848213196, 0.4515822231769562, 0.45653361082077026, 0.4434109628200531, 0.43423429131507874, 0.4358120858669281, 0.4289630055427551, 0.4266672432422638, 0.4272366166114807, 0.42456120252609253, 0.4149860739707947, 0.4233642518520355, 0.4176536500453949, 0.4185260534286499, 0.4230090379714966, 0.4176054298877716, 0.4135299623012543, 0.4126003086566925, 0.4335757791996002, 0.4164709448814392, 0.41371509432792664, 0.4112805724143982, 0.41742953658103943, 0.4263870418071747, 0.42530980706214905, 0.414875328540802, 0.41587743163108826, 0.429774671792984, 0.4207858145236969, 0.43128731846809387, 0.4579334259033203, 0.4474605321884155, 0.45035645365715027, 0.44720757007598877, 0.4509007930755615], "val_accuracy": [0.41733333468437195, 0.4436666667461395, 0.6466666460037231, 0.6940000057220459, 0.7366666793823242, 0.7296666502952576, 0.7426666617393494, 0.7436666488647461, 0.7583333253860474, 0.7699999809265137, 0.7636666893959045, 0.7799999713897705, 0.7853333353996277, 0.7820000052452087, 0.8019999861717224, 0.79666668176651, 0.7976666688919067, 0.8046666383743286, 0.8096666932106018, 0.8066666722297668, 0.8209999799728394, 0.8273333311080933, 0.8273333311080933, 0.8403333425521851, 0.8273333311080933, 0.8336666822433472, 0.8346666693687439, 0.8446666598320007, 0.8420000076293945, 0.843666672706604, 0.8403333425521851, 0.847000002861023, 0.846666693687439, 0.8516666889190674, 0.8476666808128357, 0.847000002861023, 0.8533333539962769, 0.8560000061988831, 0.8569999933242798, 0.8553333282470703, 0.8526666760444641, 0.8550000190734863, 0.8560000061988831, 0.8579999804496765, 0.8586666584014893, 0.8579999804496765, 0.8576666712760925, 0.862333357334137, 0.8683333396911621, 0.8643333315849304, 0.8603333234786987, 0.8690000176429749, 0.8650000095367432, 0.8636666536331177, 0.8676666617393494, 0.8643333315849304, 0.8723333477973938, 0.8706666827201843, 0.8653333187103271, 0.8636666536331177, 0.8683333396911621, 0.8679999709129333]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6003222465515137, 0.8853994011878967, 0.7204620242118835, 0.6548445820808411, 0.6064556837081909, 0.5853872299194336, 0.5801694393157959, 0.544201135635376, 0.5318138003349304, 0.5226815342903137, 0.5436652898788452, 0.5462931990623474, 0.5492585301399231, 0.5207901000976562], "accuracy": [0.47285696864128113, 0.7123233675956726, 0.7470611333847046, 0.7696473598480225, 0.7759873270988464, 0.7816668748855591, 0.7968564033508301, 0.8006868362426758, 0.8079513907432556, 0.8138951063156128, 0.8059701323509216, 0.8082155585289001, 0.8140271902084351, 0.8189142942428589], "val_loss": [0.9614853262901306, 0.6733782887458801, 0.5948857665061951, 0.5321417450904846, 0.5468947291374207, 0.5668391585350037, 0.5307872891426086, 0.5788337588310242, 0.5785870552062988, 0.5993279218673706, 0.5381835699081421, 0.6105099320411682, 0.5732945799827576, 0.5344643592834473], "val_accuracy": [0.7193333506584167, 0.7646666765213013, 0.7789999842643738, 0.8043333292007446, 0.7960000038146973, 0.8063333630561829, 0.8143333196640015, 0.8256666660308838, 0.8316666483879089, 0.8213333487510681, 0.8133333325386047, 0.8180000185966492, 0.8309999704360962, 0.8159999847412109]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 7, 3, 5, 2, 7, 1, 7, 2, 2, 4, 5, 8, 2, 7, 2, 6, 3, 7], [0, 0, 1, 2, 2, 1, 1, 1, 3, 3, 1, 0, 3, 0, 1, 0, 1, 2], [0, 39, 77, 38, 95], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [1, 0, 2, 4, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 21, 18, 5, 6, 3, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(alpha, grad), grad)))), alpha), tf.math.add(tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.square(alpha)), tf.math.sqrt(grad)), tf.math.add(tf.math.add(grad, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [86, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 1, 6, 3, 8, 2], [4, 3, 2, 0, 3, 0, 0], [84, 27, 25, 16], [0, 0, 1, 0, 1], [0, 7, 0], [5, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.pow(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0, 5, 4, 5, 8, 7, 6, 5], [0, 0, 1, 0, 2, 3, 0, 2], [0, 39, 77, 93], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 5, 8, 2], [3, 0, 4, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 1, 1], [0, 7], [0, 4], [0], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 14, 8, 4, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1422.14453125, 4.174890334818025e+21, 2.331258773803711, 2.30995512008667, 2.304469108581543, 2.3033268451690674], "accuracy": [0.18412363529205322, 0.10579843819141388, 0.09998679161071777, 0.09021265059709549, 0.09536388516426086, 0.09272222965955734], "val_loss": [41516.98828125, 2.3509509563446045, 2.314711332321167, 2.3055408000946045, 2.3033759593963623, 2.302781820297241], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]