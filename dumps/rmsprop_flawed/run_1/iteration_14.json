[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5967897176742554, 0.8105694651603699, 0.6569843292236328, 0.6171583533287048, 0.5808039307594299, 0.5632414221763611, 0.5254855751991272, 0.5422000885009766, 0.5170251727104187, 0.5060882568359375, 0.49373674392700195, 0.49542197585105896, 0.5328285098075867, 0.5572816133499146, 0.5569394826889038, 0.534559428691864, 0.5278036594390869], "accuracy": [0.45779949426651, 0.7148329019546509, 0.7635715007781982, 0.7758552432060242, 0.7960638999938965, 0.7967243194580078, 0.8047813773155212, 0.8080834746360779, 0.8157442808151245, 0.8201030492782593, 0.8238013386726379, 0.8203672170639038, 0.8224804997444153, 0.8162726163864136, 0.8094043135643005, 0.8117818236351013, 0.8255184292793274], "val_loss": [0.8204847574234009, 0.5788669586181641, 0.5406107902526855, 0.49019575119018555, 0.4937112331390381, 0.4759387671947479, 0.47370287775993347, 0.4611762762069702, 0.4595746397972107, 0.48282358050346375, 0.46981462836265564, 0.4809180498123169, 0.5473660826683044, 0.5615696310997009, 0.5186873078346252, 0.5087169408798218, 0.5114330053329468], "val_accuracy": [0.731333315372467, 0.7903333306312561, 0.8103333115577698, 0.8220000267028809, 0.8173333406448364, 0.8393333554267883, 0.8429999947547913, 0.8389999866485596, 0.8476666808128357, 0.8456666469573975, 0.846666693687439, 0.8493333458900452, 0.8433333039283752, 0.8376666903495789, 0.8360000252723694, 0.8446666598320007, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 7, 1], [0, 2, 1, 0, 2, 3, 3], [83, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 1, 2, 3, 1, 0], [0, 27, 55, 0], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 2, 15, 8, 7, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31278920173645, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.08730682730674744, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.332178831100464, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 6], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 2, 3, 1, 6, 3, 8, 2, 8, 8], [0, 1, 2, 0, 3, 5, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [3, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 17, 10, 7, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(grad), grad)), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 5, 4, 7, 0], [0, 0, 1, 0, 2, 1, 1], [67, 39, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [8, 6, 3, 1, 6, 3, 8, 2], [0, 3, 2, 0, 4, 1, 1], [0, 27, 16, 0], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 16, 9, 7, 3, 6, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(alpha)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308239459991455, 2.310218572616577, 2.3099536895751953, 2.3106400966644287, 2.30967116355896, 2.3089351654052734], "accuracy": [0.09113723784685135, 0.09311848133802414, 0.09232597798109055, 0.0878351628780365, 0.09734513610601425, 0.09430722147226334], "val_loss": [2.3086090087890625, 2.3086090087890625, 2.3086090087890625, 2.3086090087890625, 2.3086090087890625, 2.3086090087890625], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 6, 3, 8, 2, 3, 3, 3], [0, 0, 2, 0, 3, 1, 0, 3, 0, 1], [0, 27, 16, 49, 18], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 6, 3, 3, 2, 21, 11, 10, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309734582901001, 2.309075117111206, 2.310645580291748, 2.310534715652466, 2.3097891807556152, 2.309483289718628], "accuracy": [0.0882314071059227, 0.0940430611371994, 0.09272222965955734, 0.09496764093637466, 0.09034473448991776, 0.09232597798109055], "val_loss": [2.3087079524993896, 2.3087079524993896, 2.3087079524993896, 2.3087079524993896, 2.3087079524993896, 2.3087079524993896], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]