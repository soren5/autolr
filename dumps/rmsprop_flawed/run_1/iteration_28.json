[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5417143106460571, 0.8067253828048706, 0.6933184862136841, 0.6323189735412598, 0.5972690582275391, 0.5577022433280945, 0.5205559730529785, 0.4888659715652466, 0.49605873227119446, 0.4870026111602783, 0.49668577313423157, 0.4956955313682556, 0.5178027749061584, 0.5195057988166809, 0.4923206865787506, 0.5284389853477478, 0.5219929218292236], "accuracy": [0.48051777482032776, 0.7129837274551392, 0.7442874312400818, 0.765949010848999, 0.7775723338127136, 0.7972526550292969, 0.8070268034934998, 0.8173292875289917, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8310658931732178, 0.8329150676727295, 0.8140271902084351, 0.8310658931732178, 0.8238013386726379, 0.8236692547798157], "val_loss": [0.7970668077468872, 0.6241827011108398, 0.5646523237228394, 0.5462636947631836, 0.5303981900215149, 0.5159364938735962, 0.5150139927864075, 0.5142881870269775, 0.503618061542511, 0.512482225894928, 0.5293746590614319, 0.6165418028831482, 0.5922541618347168, 0.5850669741630554, 0.5576406717300415, 0.5920333862304688, 0.5964785218238831], "val_accuracy": [0.7526666522026062, 0.7663333415985107, 0.7839999794960022, 0.8046666383743286, 0.8206666707992554, 0.8159999847412109, 0.8306666612625122, 0.8266666531562805, 0.8363333344459534, 0.8286666870117188, 0.8343333601951599, 0.8366666436195374, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5701797008514404, 0.8675552010536194, 0.7416512966156006, 0.6691782474517822, 0.5919675827026367, 0.583158016204834, 0.606194794178009, 0.5836588740348816, 0.6026450991630554, 0.6195204257965088, 0.5948053002357483, 0.6231491565704346], "accuracy": [0.47946110367774963, 0.6995112895965576, 0.7310791015625, 0.7560427784919739, 0.7837802171707153, 0.7922335267066956, 0.7886672616004944, 0.7975168228149414, 0.7833839654922485, 0.7903843522071838, 0.7909126877784729, 0.7891955971717834], "val_loss": [0.8309918642044067, 0.6297309398651123, 0.5771129727363586, 0.5436662435531616, 0.5250305533409119, 0.5247389078140259, 0.522638738155365, 0.5211744904518127, 0.5777955651283264, 0.5577054619789124, 0.6512833833694458, 0.5616253018379211], "val_accuracy": [0.6916666626930237, 0.7549999952316284, 0.7910000085830688, 0.8016666769981384, 0.8103333115577698, 0.8036666512489319, 0.82833331823349, 0.8193333148956299, 0.8159999847412109, 0.7953333258628845, 0.8243333101272583, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [5, 1, 2, 1, 6, 3, 8, 2, 0, 2, 4, 1, 1, 8, 8, 6, 6, 2, 2, 2, 1, 7], [0, 0, 2, 0, 3, 1, 0, 4, 0, 1, 4, 4, 4, 5, 1, 2, 5, 2], [0, 27, 16, 0, 79], [0, 0, 1, 1], [0, 7], [2, 6], [0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 8, 7, 5, 1, 7, 0, 4, 4, 1, 9, 5, 2], [2, 5, 0, 6, 5, 4, 3], [0, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 40, 22, 18, 5, 4, 2, 2, 0, 20, 13, 7, 2], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(grad), alpha))), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(grad, grad), grad), grad), alpha), tf.math.add(beta, grad))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(tf.math.negative(tf.math.pow(beta, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(grad)))), tf.math.add(grad, sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2], [0, 0, 2, 0, 3, 1, 0, 2], [0, 27, 16, 95], [0, 0, 1, 1, 1], [1, 7], [7, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 6, 3, 3, 2, 17, 9, 8, 4, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(grad, alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(grad, grad), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310499429702759, 2.3098599910736084, 2.3106467723846436, 2.309880256652832, 2.310422897338867, 2.3088676929473877], "accuracy": [0.08691058307886124, 0.09351472556591034, 0.08426892012357712, 0.09272222965955734, 0.08387266844511032, 0.09153348207473755], "val_loss": [2.3083653450012207, 2.3083653450012207, 2.3083653450012207, 2.3083653450012207, 2.3083653450012207, 2.3083653450012207], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 1], [0, 0, 1, 0, 2], [0, 39, 82], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 3, 3, 6, 3, 8, 9], [0, 0, 2, 0, 3, 3, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309781312942505, 2.3095786571502686, 2.3110790252685547, 2.3100497722625732, 2.3086860179901123, 2.3089945316314697], "accuracy": [0.08757099509239197, 0.08994849026203156, 0.08281600475311279, 0.0944393053650856, 0.09325055778026581, 0.09377889335155487], "val_loss": [2.309389591217041, 2.309389591217041, 2.309389591217041, 2.309389591217041, 2.309389591217041, 2.309389591217041], "val_accuracy": [0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 5], [2, 0, 2, 0, 2], [0, 39, 92], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 6, 3, 8, 9], [0, 2, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [8, 4], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 2, 1, 1, 0, 7, 4, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310230255126953, 2.3098397254943848, 2.3099324703216553, 2.3091864585876465, 2.3104631900787354, 2.308602809906006], "accuracy": [0.09642054885625839, 0.08955223858356476, 0.08770307898521423, 0.09549596905708313, 0.09232597798109055, 0.09694888442754745], "val_loss": [2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]