[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5253936052322388, 0.7751553058624268, 0.6605650186538696, 0.5776758790016174, 0.5504449605941772, 0.5226653218269348, 0.5229038596153259, 0.5280417203903198, 0.5509849786758423, 0.5493661165237427, 0.5432984232902527], "accuracy": [0.4803856909275055, 0.718399167060852, 0.7557786107063293, 0.7915731072425842, 0.8043851256370544, 0.8098005652427673, 0.8145555257797241, 0.8098005652427673, 0.7976489067077637, 0.8043851256370544, 0.8054417967796326], "val_loss": [0.7701409459114075, 0.5885067582130432, 0.5228632092475891, 0.5026580095291138, 0.49618110060691833, 0.511443018913269, 0.47737622261047363, 0.525895893573761, 0.53057461977005, 0.537115752696991, 0.5190058350563049], "val_accuracy": [0.7093333601951599, 0.7806666493415833, 0.809333324432373, 0.8303333520889282, 0.8240000009536743, 0.8370000123977661, 0.8356666564941406, 0.8233333230018616, 0.8246666789054871, 0.8293333053588867, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [5, 0, 2, 0, 5, 0, 0], [0, 27, 16, 16], [1, 0, 0, 0], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 5, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [1, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 8, 8, 2, 2], [0, 0, 0, 0, 3, 1, 0], [0, 27, 16, 16, 70], [0, 1, 0, 1], [0, 3], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 16, 9, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3055503368377686, 2.3044590950012207, 2.30652117729187, 2.3057384490966797, 2.306467294692993, 2.307382345199585, 2.3064804077148438, 2.308269500732422, 2.3104233741760254, 2.307234287261963, 2.311206817626953, 2.3103954792022705], "accuracy": [0.09338264167308807, 0.09496764093637466, 0.09509972482919693, 0.10157178342342377, 0.0952318087220192, 0.09681680053472519, 0.09893012791872025, 0.10011887550354004, 0.09219389408826828, 0.1022322028875351, 0.09298639744520187, 0.09866596013307571], "val_loss": [2.302826404571533, 2.303797960281372, 2.304952621459961, 2.3074498176574707, 2.306847095489502, 2.305429697036743, 2.304590940475464, 2.3067710399627686, 2.308586597442627, 2.312412977218628, 2.3108773231506348, 2.3099524974823], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10166666656732559, 0.10000000149011612, 0.09966666996479034, 0.10133333504199982, 0.10199999809265137, 0.0976666659116745, 0.10199999809265137, 0.09966666996479034, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [2, 3, 3, 1, 1, 6], [0, 0, 3, 3, 1, 3], [49, 39, 39, 99], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 3, 8, 2], [0, 0, 2, 0, 0, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [5, 6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 8, 5, 3, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [22.559133529663086, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15797120332717896, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21354.998046875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07900000363588333, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 6, 3, 8, 1], [0, 0, 2, 0, 3, 1, 1], [0, 65, 71, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100602626800537, 2.3093175888061523, 2.3096225261688232, 2.30964732170105, 2.309461832046509, 2.3109138011932373], "accuracy": [0.08757099509239197, 0.08981640636920929, 0.09192973375320435, 0.09087307006120682, 0.09391097724437714, 0.09325055778026581], "val_loss": [2.308199644088745, 2.308199644088745, 2.308199644088745, 2.308199644088745, 2.308199644088745, 2.308199644088745], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]