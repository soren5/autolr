[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8399999737739563, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.479661464691162, 0.7594087719917297, 0.6296314001083374, 0.5780917406082153, 0.5538803339004517, 0.5241457223892212, 0.5205449461936951, 0.5116084814071655, 0.4952540695667267, 0.49298161268234253, 0.4880013167858124, 0.5054924488067627, 0.5222863554954529, 0.5274218320846558, 0.5329435467720032, 0.526888370513916, 0.5195682644844055, 0.5122279524803162, 0.5314569473266602, 0.5272561311721802, 0.5328729152679443, 0.5493003726005554, 0.524091362953186, 0.546065092086792, 0.50849449634552], "accuracy": [0.49108439683914185, 0.7243428826332092, 0.7697794437408447, 0.7889314293861389, 0.7977809906005859, 0.8124422430992126, 0.8171972036361694, 0.8204993009567261, 0.8271034359931946, 0.8141592741012573, 0.8244617581367493, 0.8220842480659485, 0.8181217908859253, 0.8168009519577026, 0.8240655064582825, 0.8318583965301514, 0.8285563588142395, 0.8198388814926147, 0.8322546482086182, 0.8329150676727295, 0.8261788487434387, 0.8271034359931946, 0.8278959393501282, 0.8193105459213257, 0.828292191028595], "val_loss": [0.7671863436698914, 0.5946253538131714, 0.5014728903770447, 0.5398958921432495, 0.5022882223129272, 0.5078136920928955, 0.5287399291992188, 0.516347348690033, 0.49347227811813354, 0.48178279399871826, 0.47732487320899963, 0.512200653553009, 0.4999047815799713, 0.5074544548988342, 0.5226691961288452, 0.528397798538208, 0.5035820603370667, 0.5129237174987793, 0.5498007535934448, 0.5202075839042664, 0.5275404453277588, 0.5237692594528198, 0.5483463406562805, 0.5295146703720093, 0.4741315245628357], "val_accuracy": [0.7163333296775818, 0.7756666541099548, 0.8086666464805603, 0.8113333582878113, 0.8206666707992554, 0.8336666822433472, 0.8243333101272583, 0.8293333053588867, 0.831333339214325, 0.8333333134651184, 0.8346666693687439, 0.8396666646003723, 0.8376666903495789, 0.831333339214325, 0.8326666951179504, 0.8399999737739563, 0.8333333134651184, 0.8323333263397217, 0.8346666693687439, 0.8426666855812073, 0.8330000042915344, 0.8410000205039978, 0.8153333067893982, 0.8226666450500488, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 1, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 5], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [999.94384765625, 17539.087890625, 82133.4921875, 230897.59375, 487631.65625, 902749.0], "accuracy": [0.09906221181154251, 0.10394927859306335, 0.09945846349000931, 0.10791176557540894, 0.09879804402589798, 0.09998679161071777], "val_loss": [4423.94189453125, 34446.44921875, 115456.3203125, 272836.0625, 531967.75, 918232.5625], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [1, 0, 1, 0, 2], [0, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 2, 3, 8, 2], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [9, 7], [4, 1], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095598220825195, 2.3093628883361816, 2.309788703918457, 2.3110320568084717, 2.3108386993408203, 2.308971405029297], "accuracy": [0.09087307006120682, 0.09377889335155487, 0.09457138925790787, 0.09153348207473755, 0.0940430611371994, 0.09192973375320435], "val_loss": [2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2, 3], [23, 39, 77], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 7, 3, 1, 3, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1, 1], [3, 7], [5, 6, 6], [25], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093855381011963, 2.309828996658325, 2.308957815170288, 2.309652328491211, 2.309983968734741, 2.3096940517425537], "accuracy": [0.09166556596755981, 0.09153348207473755, 0.09734513610601425, 0.09034473448991776, 0.09325055778026581, 0.09272222965955734], "val_loss": [2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [2, 3, 3, 1, 1, 8, 4], [0, 3, 1, 0, 2, 1, 0], [0, 39, 39], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 2, 8, 2], [0, 0, 1, 0, 3, 1, 0], [0, 19, 16, 32], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 8, 2, 4, 8, 4, 6, 1, 2, 7, 9, 6, 4, 2, 4, 6, 7, 3, 4, 5, 5, 8, 0, 3, 0, 7, 4, 7, 5, 8, 1, 1, 9], [4, 5, 7, 7, 4, 0, 4, 0, 2, 5, 7, 4, 0, 7, 4, 1, 1, 5, 6, 2], [0, 48, 6, 33, 99], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 14, 7, 7, 3, 2, 1, 1, 1, 53, 33, 20, 5, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), tf.math.pow(tf.math.add(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(beta)))), grad), grad)), grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.multiply(grad, tf.math.negative(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.sqrt(alpha)), alpha)), grad)))))), tf.math.subtract(tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108279705047607, 2.309246063232422, 2.3097028732299805, 2.3103060722351074, 2.3093559741973877, 2.3100883960723877], "accuracy": [0.09285431355237961, 0.09457138925790787, 0.09734513610601425, 0.08875974267721176, 0.09576013684272766, 0.0940430611371994], "val_loss": [2.309730052947998, 2.309730052947998, 2.309730052947998, 2.309730052947998, 2.309730052947998, 2.309730052947998], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]