[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.612770676612854, 0.8402414321899414, 0.6640145778656006, 0.5947086215019226, 0.5528984665870667, 0.5197133421897888, 0.5190154910087585, 0.5276658535003662, 0.5436517000198364, 0.5228826403617859, 0.4664433002471924, 0.46803736686706543, 0.4673837423324585, 0.4627409875392914, 0.4552652835845947, 0.4437790811061859, 0.4895295798778534], "accuracy": [0.4683661460876465, 0.7025492191314697, 0.7553823590278625, 0.7771760821342468, 0.791441023349762, 0.8035926818847656, 0.802271842956543, 0.8098005652427673, 0.8148196935653687, 0.8105930685997009, 0.8300092220306396, 0.8284242749214172, 0.8318583965301514, 0.8374059200286865, 0.8327829837799072, 0.8392550349235535, 0.8417646288871765], "val_loss": [0.9044021964073181, 0.622227132320404, 0.5520730018615723, 0.5204899907112122, 0.5072714686393738, 0.5338049530982971, 0.5268193483352661, 0.5905352234840393, 0.542130708694458, 0.5504549741744995, 0.5471618175506592, 0.5196759700775146, 0.5677488446235657, 0.5395495295524597, 0.5499519109725952, 0.5810818076133728, 0.5455963611602783], "val_accuracy": [0.6773333549499512, 0.7643333077430725, 0.8059999942779541, 0.8056666851043701, 0.8149999976158142, 0.8159999847412109, 0.8113333582878113, 0.8243333101272583, 0.8159999847412109, 0.828000009059906, 0.8230000138282776, 0.8356666564941406, 0.8316666483879089, 0.8240000009536743, 0.8333333134651184, 0.8346666693687439, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4645137786865234, 0.8881200551986694, 0.7445881962776184, 0.6568167209625244, 0.6040480136871338, 0.563564121723175, 0.5546978116035461, 0.5173516273498535, 0.49600130319595337, 0.499566912651062, 0.4849923551082611, 0.4732808470726013, 0.4745097756385803, 0.45130038261413574, 0.44919806718826294, 0.43530118465423584, 0.42605164647102356, 0.4411350190639496, 0.44228097796440125, 0.4460298717021942, 0.4374713897705078], "accuracy": [0.5008585453033447, 0.7057191729545593, 0.737022876739502, 0.7537974119186401, 0.77677983045578, 0.7952714562416077, 0.7913089394569397, 0.8038568496704102, 0.8169330358505249, 0.81548011302948, 0.8241975903511047, 0.8226125836372375, 0.8257825970649719, 0.837141752243042, 0.8302733898162842, 0.8407079577445984, 0.8381983637809753, 0.8350284099578857, 0.8471800088882446, 0.8426892161369324, 0.8411042094230652], "val_loss": [0.9032195806503296, 0.6420830488204956, 0.572384774684906, 0.5314307808876038, 0.5003227591514587, 0.5015659928321838, 0.4784938097000122, 0.46240130066871643, 0.4792321026325226, 0.4996511936187744, 0.5000261068344116, 0.49703067541122437, 0.46855098009109497, 0.5253115892410278, 0.5040485262870789, 0.4920813739299774, 0.5280426144599915, 0.5194981098175049, 0.46776604652404785, 0.5463272929191589, 0.5570531487464905], "val_accuracy": [0.6856666803359985, 0.7739999890327454, 0.7773333191871643, 0.7940000295639038, 0.8180000185966492, 0.8130000233650208, 0.8376666903495789, 0.8323333263397217, 0.8360000252723694, 0.8326666951179504, 0.8379999995231628, 0.8386666774749756, 0.840666651725769, 0.8396666646003723, 0.8443333506584167, 0.846666693687439, 0.8379999995231628, 0.8383333086967468, 0.8403333425521851, 0.8343333601951599, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [16, 39, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 2, 9, 1, 6, 3, 9, 2], [0, 0, 2, 2, 0, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0], [4, 8, 1, 9], [0, 6], [0, 47], [1], [0], [6], [0]], "fitness": -0.27799999713897705, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.433612823486328, 2.303387403488159, 2.3028273582458496, 2.3005082607269287, 2.2226884365081787, 2.3725976943969727, 2.106076955795288, 2.314626932144165, 2.3046188354492188, 2.303199529647827], "accuracy": [0.18914277851581573, 0.09893012791872025, 0.10157178342342377, 0.10527011007070541, 0.16642451286315918, 0.11913882195949554, 0.24435345828533173, 0.09774138033390045, 0.09430722147226334, 0.09338264167308807], "val_loss": [2.3031198978424072, 2.3024213314056396, 2.30189847946167, 2.285662889480591, 1.988955020904541, 2.2847769260406494, 2.3342981338500977, 2.3050267696380615, 2.3032174110412598, 2.303046703338623], "val_accuracy": [0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.19366666674613953, 0.2776666581630707, 0.1263333261013031, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [64, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.12057142704725266, "mapping_values": [1, 12, 7, 5, 3, 10, 5, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.145397824845795e+25, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10962884873151779, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.06165316697276e+27, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.11533333361148834, 0.11533333361148834, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 0, 2], [0, 39, 83], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 7, 6, 0, 7, 1], [0, 3, 5, 0, 3, 1, 0], [0, 27, 16, 85], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [0], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095192909240723, 2.3100426197052, 2.3090150356292725, 2.309535264968872, 2.3101446628570557, 2.3096837997436523], "accuracy": [0.08730682730674744, 0.09060890227556229, 0.09800554811954498, 0.09615638852119446, 0.09457138925790787, 0.09496764093637466], "val_loss": [2.3086941242218018, 2.3086941242218018, 2.3086941242218018, 2.3086941242218018, 2.3086941242218018, 2.3086941242218018], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 0, 5], [0, 0, 1, 0, 2], [0, 37, 21], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 3, 1, 6, 5, 8, 2], [2, 0, 2, 1, 3, 5, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096024990081787, 2.3099169731140137, 2.3089194297790527, 2.3095264434814453, 2.309004545211792, 2.3095948696136475], "accuracy": [0.09602430462837219, 0.08440100401639938, 0.09351472556591034, 0.09008057415485382, 0.08942015469074249, 0.09272222965955734], "val_loss": [2.308598041534424, 2.308598041534424, 2.308598041534424, 2.308598041534424, 2.308598041534424, 2.308598041534424], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]