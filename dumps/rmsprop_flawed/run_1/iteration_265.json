[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5030518770217896, 0.7561511993408203, 0.6442562937736511, 0.5907298922538757, 0.5620502233505249, 0.5221803188323975, 0.5096130967140198, 0.4950762391090393, 0.4881550371646881, 0.48344409465789795, 0.5011148452758789, 0.48629361391067505, 0.5109889507293701, 0.4947919547557831, 0.45827716588974, 0.48500704765319824, 0.4814699590206146, 0.46661272644996643, 0.4810115396976471], "accuracy": [0.4773477613925934, 0.735041618347168, 0.7697794437408447, 0.7825914621353149, 0.7930260300636292, 0.8123101592063904, 0.8120459914207458, 0.8204993009567261, 0.8207634687423706, 0.8329150676727295, 0.8245938420295715, 0.8252542614936829, 0.8280280232429504, 0.8363492488861084, 0.8323867321014404, 0.8305375576019287, 0.8364813327789307, 0.8413683772087097, 0.8363492488861084], "val_loss": [0.7160654067993164, 0.609028160572052, 0.5269114375114441, 0.5021777153015137, 0.5174815058708191, 0.4990592300891876, 0.5007888674736023, 0.47825512290000916, 0.4974118173122406, 0.5407838821411133, 0.5143085718154907, 0.5590226650238037, 0.5016314387321472, 0.47492703795433044, 0.465074747800827, 0.48427483439445496, 0.4682863652706146, 0.4894629418849945, 0.5365526080131531], "val_accuracy": [0.7433333396911621, 0.7793333530426025, 0.8046666383743286, 0.8090000152587891, 0.8146666884422302, 0.8203333616256714, 0.8306666612625122, 0.8353333473205566, 0.8296666741371155, 0.8209999799728394, 0.8403333425521851, 0.8326666951179504, 0.8483333587646484, 0.8516666889190674, 0.8500000238418579, 0.8460000157356262, 0.8426666855812073, 0.8446666598320007, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 1, 3, 5, 7], [3, 0, 3, 0, 2], [0, 39, 12], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 7], [3, 0, 2, 3, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.11028571426868439, "mapping_values": [1, 12, 7, 5, 2, 15, 8, 7, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.306657314300537, 2.3011505603790283, 2.302173614501953, 2.302994728088379, 2.3031933307647705, 2.3033485412597656, 2.3035390377044678], "accuracy": [0.09232597798109055, 0.09959053993225098, 0.09074098616838455, 0.09060890227556229, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3015618324279785, 2.30130672454834, 2.3027260303497314, 2.3029873371124268, 2.303070068359375, 2.303238868713379, 2.3034579753875732], "val_accuracy": [0.10166666656732559, 0.10499999672174454, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 73], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 4, 7, 8, 2, 7, 7, 1, 4, 0, 3, 5, 9, 9, 2, 6, 4, 6, 6, 3, 2, 7, 1, 6, 3, 7, 9, 8, 6, 2, 6, 7, 4, 4, 5, 3, 5, 3, 0, 0, 0, 7, 9, 7, 9, 1, 4, 1], [0, 0, 2, 0, 3, 1, 0, 0, 0, 1, 5, 3, 2, 5, 0, 1, 1, 4, 2, 1, 3, 5, 4, 2, 2, 4, 3, 1, 1, 5, 5, 1], [0, 49, 16, 16, 48, 3, 61, 36, 63, 41, 6, 3], [0, 1, 0, 1, 0, 1, 1], [2, 7, 1], [0, 4, 5, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 83, 51, 32, 12, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))), tf.math.divide_no_nan(tf.math.add(grad, beta), alpha)), grad))), tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.square(grad), tf.math.multiply(tf.math.negative(beta), beta))), tf.math.negative(tf.math.negative(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))))), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))), tf.math.pow(alpha, grad))))))), tf.math.subtract(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 0, 5], [0, 2, 1, 0, 2], [0, 39, 88], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 6, 1, 6, 3, 8, 1], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 1, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091297149658203, 2.3113973140716553, 2.3089699745178223, 2.310117244720459, 2.3099637031555176, 2.3095171451568604], "accuracy": [0.09694888442754745, 0.09219389408826828, 0.09681680053472519, 0.09153348207473755, 0.09351472556591034, 0.09285431355237961], "val_loss": [2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [1, 0, 1, 0, 2], [0, 39, 77], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 7, 3, 9, 6, 4, 3, 3, 4, 7, 7, 1, 3, 7, 2, 5, 1, 3, 6, 4, 3, 7, 5, 8, 5, 6, 0, 9, 6, 9], [0, 7, 3, 6, 0, 4, 6, 0, 2, 6, 3, 3, 3, 2, 2, 4, 6, 2, 4], [57, 3, 77, 36, 62, 59], [0, 1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 49, 30, 19, 6, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.multiply(sigma, grad), tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(grad, tf.math.add(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad))))), tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.square(sigma), beta), tf.math.sqrt(beta)), tf.math.square(tf.math.divide_no_nan(grad, grad))))), tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), beta)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3117496967315674, 2.3107621669769287, 2.3104441165924072, 2.3098530769348145, 2.311628818511963, 2.31044864654541], "accuracy": [0.09311848133802414, 0.08796724677085876, 0.0936468094587326, 0.09192973375320435, 0.08981640636920929, 0.09325055778026581], "val_loss": [2.3094286918640137, 2.3094286918640137, 2.3094286918640137, 2.3094286918640137, 2.3094286918640137, 2.3094286918640137], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]