[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4725117683410645, 0.7826141715049744, 0.6730228662490845, 0.6307454109191895, 0.5901485681533813, 0.5245744585990906, 0.5038901567459106, 0.488270103931427, 0.5126509666442871, 0.4977889955043793, 0.4555976986885071, 0.46309778094291687, 0.4865450859069824, 0.49941596388816833, 0.47800061106681824, 0.4702345132827759, 0.4810505509376526, 0.48103734850883484, 0.4825197756290436, 0.5401149988174438, 0.5264222025871277, 0.46501415967941284, 0.4790932238101959, 0.4582165777683258], "accuracy": [0.4905560612678528, 0.7293620109558105, 0.7563069462776184, 0.7688548564910889, 0.7885351777076721, 0.8131026029586792, 0.8142913579940796, 0.8255184292793274, 0.8206313848495483, 0.8310658931732178, 0.8385946154594421, 0.8321225643157959, 0.8338396549224854, 0.8399154543876648, 0.8335754871368408, 0.8313300609588623, 0.8296129703521729, 0.8453308939933777, 0.8380662798881531, 0.8421608805656433, 0.8252542614936829, 0.841500461101532, 0.8470479249954224, 0.8498216867446899], "val_loss": [0.7319275736808777, 0.604401707649231, 0.5558698177337646, 0.5189864635467529, 0.49832600355148315, 0.49647969007492065, 0.46929216384887695, 0.48561155796051025, 0.5174163579940796, 0.5101012587547302, 0.5138648152351379, 0.4944784641265869, 0.5242185592651367, 0.4548390805721283, 0.48634570837020874, 0.4789465367794037, 0.5308811664581299, 0.4776022136211395, 0.519253671169281, 0.5028704404830933, 0.5077083110809326, 0.5368358492851257, 0.504530131816864, 0.5629123449325562], "val_accuracy": [0.7453333139419556, 0.7699999809265137, 0.793666660785675, 0.8003333210945129, 0.8109999895095825, 0.8169999718666077, 0.8326666951179504, 0.8286666870117188, 0.8323333263397217, 0.8316666483879089, 0.8370000123977661, 0.8236666917800903, 0.8370000123977661, 0.840666651725769, 0.8376666903495789, 0.8410000205039978, 0.8529999852180481, 0.8370000123977661, 0.8533333539962769, 0.8513333201408386, 0.8479999899864197, 0.8429999947547913, 0.847000002861023, 0.8500000238418579]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 6, 4, 8, 2, 1, 0, 8], [0, 0, 2, 0, 3, 1, 0, 5], [34, 57, 16, 16], [0, 0, 1, 1], [0, 6], [2, 5], [0], [1], [0], [4], [0]], "fitness": -0.3082857131958008, "mapping_values": [1, 1, 0, 1, 1, 19, 11, 8, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(grad, alpha), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.242938995361328, 2.2728891372680664, 2.303687572479248, 2.311286449432373, 2.2672038078308105, 2.4742791652679443, 2.3043365478515625, 2.3029837608337402, 2.303121328353882, 2.3031506538391113], "accuracy": [0.21291771531105042, 0.18280279636383057, 0.13895125687122345, 0.16774533689022064, 0.14278165996074677, 0.11596883088350296, 0.10077928751707077, 0.10328886657953262, 0.09998679161071777, 0.09879804402589798], "val_loss": [2.228994846343994, 2.2344255447387695, 2.2924134731292725, 2.3069865703582764, 2.9393067359924316, 2.304595470428467, 2.302960157394409, 2.3025457859039307, 2.3025929927825928, 2.3026227951049805], "val_accuracy": [0.20533333718776703, 0.26366665959358215, 0.10100000351667404, 0.10133333504199982, 0.30666667222976685, 0.09966666996479034, 0.09966666996479034, 0.10333333164453506, 0.10166666656732559, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [69, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 2, 3, 1, 6, 2, 8, 2, 9], [1, 0, 2, 0, 3, 1, 0], [0, 90, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [2, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 7, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 8, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.31023907661438, 2.3100128173828125, 2.31026029586792, 2.3090415000915527, 2.309542655944824, 2.3087785243988037], "accuracy": [0.09311848133802414, 0.09140139818191528, 0.09140139818191528, 0.09272222965955734, 0.08955223858356476, 0.09470347315073013], "val_loss": [2.308600902557373, 2.308600902557373, 2.308600902557373, 2.308600902557373, 2.308600902557373, 2.308600902557373], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 9, 1, 6, 3, 1, 6], [0, 0, 2, 5, 3, 1, 4], [0, 36, 73, 16], [1, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [1], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3108463287353516, 2.3106577396392822, 2.3099615573883057, 2.310908317565918, 2.310152530670166, 2.3114607334136963], "accuracy": [0.08598599582910538, 0.09245806187391281, 0.09245806187391281, 0.09285431355237961, 0.09074098616838455, 0.08585391938686371], "val_loss": [2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]