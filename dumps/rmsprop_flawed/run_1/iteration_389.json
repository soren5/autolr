[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5185531377792358, 0.8179582357406616, 0.7049949169158936, 0.629133939743042, 0.5730012655258179, 0.5548962950706482, 0.5089618563652039, 0.5154933929443359, 0.5202506184577942, 0.48792585730552673, 0.4917534291744232, 0.4898051619529724, 0.5128015875816345, 0.5269511938095093, 0.5171114206314087, 0.5540763139724731], "accuracy": [0.4694227874279022, 0.7087571024894714, 0.7383436560630798, 0.7631752490997314, 0.7816668748855591, 0.7930260300636292, 0.8113855719566345, 0.8100647330284119, 0.8187822103500366, 0.8245938420295715, 0.8256505131721497, 0.8251221776008606, 0.8183859586715698, 0.8129705190658569, 0.828292191028595, 0.81548011302948], "val_loss": [0.7929229140281677, 0.6479796767234802, 0.5471425652503967, 0.5059893727302551, 0.49168774485588074, 0.48406317830085754, 0.46652546525001526, 0.47317513823509216, 0.4560093283653259, 0.45587217807769775, 0.4792560636997223, 0.5135622024536133, 0.5190334916114807, 0.5455248951911926, 0.5483061075210571, 0.5352352857589722], "val_accuracy": [0.7303333282470703, 0.7616666555404663, 0.7903333306312561, 0.8080000281333923, 0.8220000267028809, 0.8256666660308838, 0.8349999785423279, 0.8273333311080933, 0.8330000042915344, 0.8276666402816772, 0.8429999947547913, 0.8270000219345093, 0.8306666612625122, 0.8253333568572998, 0.8346666693687439, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2, 4, 3, 5, 5, 9], [0, 0, 0, 0, 3, 2, 0, 5], [0, 27, 16, 16, 52, 82], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 7, 8, 0, 0, 2, 0, 2, 2, 7, 0, 1, 5, 2, 7], [4, 7, 5, 4, 7, 0, 4, 0, 4], [0, 68], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 4, 6, 0], [2, 2, 3, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 13, 8, 6, 24, 15, 9, 2, 9, 5, 4, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(grad, tf.math.multiply(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.negative(tf.math.subtract(grad, grad)), tf.math.square(tf.math.add(tf.math.add(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.pow(tf.math.divide_no_nan(beta, tf.math.negative(sigma)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 0, 1, 0], [0, 27, 16, 11], [0, 0, 1, 1], [0, 7], [2, 5], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094894886016846, 2.309939384460449, 2.309725284576416, 2.3101911544799805, 2.3090713024139404, 2.309659481048584], "accuracy": [0.09734513610601425, 0.0952318087220192, 0.08981640636920929, 0.09298639744520187, 0.0956280529499054, 0.09496764093637466], "val_loss": [2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627, 2.3082268238067627], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 64], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 5, 1, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 0], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108341693878174, 2.311189889907837, 2.310007095336914, 2.3101279735565186, 2.3098559379577637, 2.3101587295532227], "accuracy": [0.09245806187391281, 0.09192973375320435, 0.09496764093637466, 0.09272222965955734, 0.09100515395402908, 0.09126931428909302], "val_loss": [2.3084590435028076, 2.3084590435028076, 2.3084590435028076, 2.3084590435028076, 2.3084590435028076, 2.3084590435028076], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 4, 2, 2, 2, 1, 0, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 3, 1, 1, 6, 3, 7, 2, 5, 4, 2, 2, 1, 5, 3, 3, 6, 3, 3, 8, 8], [0, 0, 2, 0, 3, 1, 0, 3, 3, 1, 4, 4, 1, 4, 3, 3, 5, 5], [0, 27, 68, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [0, 0, 1, 1], [0, 6], [2, 0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 39, 21, 18, 4, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha)), tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.square(grad), tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.divide_no_nan(grad, grad))), alpha)), tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(grad)), tf.math.sqrt(grad))))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3106026649475098, 2.308859348297119, 2.30962872505188, 2.30935001373291, 2.309157133102417, 2.3113515377044678], "accuracy": [0.09087307006120682, 0.0944393053650856, 0.09206181764602661, 0.09615638852119446, 0.09060890227556229, 0.08809932321310043], "val_loss": [2.3090250492095947, 2.3090250492095947, 2.3090250492095947, 2.3090250492095947, 2.3090250492095947, 2.3090250492095947], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]