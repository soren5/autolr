[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8379999995231628, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5758005380630493, 0.8393032550811768, 0.6826179623603821, 0.5947166085243225, 0.5475149750709534, 0.5188818573951721, 0.49443432688713074, 0.47318369150161743, 0.48809581995010376, 0.46802982687950134, 0.45558202266693115, 0.48094719648361206, 0.48058709502220154, 0.48633891344070435, 0.5161759257316589, 0.499727725982666, 0.4956832826137543, 0.5260524153709412, 0.5436250567436218, 0.5642861723899841, 0.6127673387527466, 0.6376212239265442, 0.6221919655799866], "accuracy": [0.4725928008556366, 0.7102100253105164, 0.7510236501693726, 0.7779685854911804, 0.7947431206703186, 0.8064984679222107, 0.81548011302948, 0.8227446675300598, 0.8203672170639038, 0.8321225643157959, 0.8403117060661316, 0.8252542614936829, 0.8220842480659485, 0.8399154543876648, 0.8342359066009521, 0.8170651197433472, 0.8296129703521729, 0.8342359066009521, 0.8128384351730347, 0.8149517774581909, 0.8112534880638123, 0.8082155585289001, 0.8177255392074585], "val_loss": [0.8829197883605957, 0.6152192950248718, 0.5574227571487427, 0.5234391093254089, 0.5131600499153137, 0.48843473196029663, 0.4927246570587158, 0.5021805167198181, 0.5037736296653748, 0.5261314511299133, 0.5297573804855347, 0.5586363673210144, 0.5762631297111511, 0.607779860496521, 0.5658065676689148, 0.5754117965698242, 0.5799242258071899, 0.5954716205596924, 0.5605992078781128, 0.6514790058135986, 0.6623858213424683, 0.7758844494819641, 0.6170223355293274], "val_accuracy": [0.6980000138282776, 0.7803333401679993, 0.7963333129882812, 0.8056666851043701, 0.8206666707992554, 0.8206666707992554, 0.8243333101272583, 0.8330000042915344, 0.8243333101272583, 0.8373333215713501, 0.8299999833106995, 0.8266666531562805, 0.840666651725769, 0.8273333311080933, 0.8343333601951599, 0.8303333520889282, 0.8233333230018616, 0.8410000205039978, 0.8316666483879089, 0.8320000171661377, 0.8190000057220459, 0.8190000057220459, 0.812333345413208]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 9, 5, 6, 7, 3, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 0, 1], [0, 8, 5], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 4, 3, 1, 2, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303509473800659, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 2, 3, 4, 3, 5, 2, 6, 0], [0, 1, 1, 0, 0, 3, 2, 3], [0, 39, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 7, 4, 7, 8, 8, 6, 2, 1, 7, 0, 1, 2, 1, 1, 5, 4, 6, 6, 5, 0, 1, 1, 9], [0, 0, 3, 4, 3, 1, 0, 1, 0, 2, 0, 1, 0, 3, 4, 0, 0, 1, 2, 3, 1, 0], [0, 27, 16, 16, 58, 84, 17, 34, 25, 78], [0, 0, 0, 1, 0], [0, 7, 0, 9], [0, 7], [94, 87], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 2, 4, 6, 3, 3, 2, 1, 5, 6, 2, 2, 1, 8], [2, 7, 4, 2, 4, 7, 0, 3, 6, 5, 3, 4, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 3, 53, 31, 22, 10, 5, 4, 1, 2, 28, 15, 13, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.sqrt(grad), alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.pow(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))), alpha)), tf.math.subtract(tf.math.subtract(beta, grad), alpha)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.multiply(grad, tf.math.add(grad, tf.math.subtract(beta, grad))), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad), grad)), tf.math.subtract(tf.math.sqrt(sigma), grad)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 1, 1, 0, 2], [0, 39, 77], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 8], [0, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 6, 3, 3, 2, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035049438476562, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [37, 39, 77], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 8, 6, 3, 8, 2], [0, 0, 2, 4, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [3, 7], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309519052505493, 2.3106606006622314, 2.310366630554199, 2.3102340698242188, 2.310670852661133, 2.310173988342285], "accuracy": [0.09325055778026581, 0.09087307006120682, 0.09060890227556229, 0.08968432247638702, 0.09457138925790787, 0.08994849026203156], "val_loss": [2.3082964420318604, 2.3082964420318604, 2.3082964420318604, 2.3082964420318604, 2.3082964420318604, 2.3082964420318604], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]