[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6040945053100586, 0.8861894011497498, 0.709507167339325, 0.6615616679191589, 0.6067823171615601, 0.5606733560562134, 0.52635258436203, 0.5248519778251648, 0.4960067570209503, 0.5023456811904907, 0.4817962348461151, 0.4706996977329254, 0.4804319441318512, 0.4636944830417633, 0.4865212142467499, 0.5025404095649719, 0.5117446780204773, 0.4928118884563446, 0.565104067325592, 0.5224788188934326], "accuracy": [0.4785365164279938, 0.693831741809845, 0.7396644949913025, 0.7606657147407532, 0.7741381525993347, 0.7992339134216309, 0.8042530417442322, 0.809140145778656, 0.8231409192085266, 0.8195747137069702, 0.819970965385437, 0.8309338092803955, 0.8219521641731262, 0.8317263126373291, 0.8322546482086182, 0.8339717388153076, 0.8337075710296631, 0.8208954930305481, 0.8127063512802124, 0.8239334225654602], "val_loss": [0.9197125434875488, 0.6099227666854858, 0.5567067861557007, 0.5190423727035522, 0.5132539868354797, 0.49571481347084045, 0.5056807994842529, 0.5045747756958008, 0.4818653166294098, 0.48219677805900574, 0.49451878666877747, 0.5146176815032959, 0.5127580761909485, 0.5066075325012207, 0.5688368082046509, 0.566802978515625, 0.5174418091773987, 0.6366283893585205, 0.5861673355102539, 0.6222910284996033], "val_accuracy": [0.6679999828338623, 0.778333306312561, 0.7950000166893005, 0.8100000023841858, 0.8240000009536743, 0.8323333263397217, 0.8289999961853027, 0.8316666483879089, 0.8410000205039978, 0.8386666774749756, 0.8399999737739563, 0.8240000009536743, 0.8489999771118164, 0.8493333458900452, 0.8533333539962769, 0.8379999995231628, 0.8489999771118164, 0.8386666774749756, 0.8386666774749756, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 4, 6, 5, 7], [0, 0, 2, 0, 2, 1], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 3, 3, 1, 0], [0, 14, 16, 16], [0, 0, 1, 0, 1, 1], [5, 7, 4], [0, 7, 6], [0], [1], [0], [2], [0]], "fitness": -0.12200000137090683, "mapping_values": [1, 13, 7, 6, 3, 15, 8, 7, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309870719909668, 2.3104758262634277, 2.309645414352417, 2.3077166080474854, 2.3068416118621826, 2.3057608604431152, 2.3058133125305176, 2.3046271800994873, 2.3032774925231934, 2.302577257156372, 2.3024954795837402, 2.3018791675567627, 2.3010354042053223, 2.301198720932007, 2.3009250164031982, 2.300896406173706, 2.3010358810424805, 2.3005423545837402, 2.300684928894043, 2.3010692596435547, 2.3009426593780518, 2.3012588024139404, 2.301922559738159, 2.301602840423584, 2.302222967147827, 2.3022923469543457, 2.3022708892822266, 2.302759885787964, 2.3024728298187256, 2.302701950073242, 2.3031198978424072, 2.3030848503112793, 2.303011655807495], "accuracy": [0.09245806187391281, 0.08968432247638702, 0.09021265059709549, 0.09338264167308807, 0.09985470771789551, 0.09351472556591034, 0.09694888442754745, 0.09285431355237961, 0.10038304328918457, 0.09351472556591034, 0.10170386731624603, 0.10091137140989304, 0.10421344637870789, 0.09800554811954498, 0.10130762308835983, 0.10051512718200684, 0.09945846349000931, 0.107647605240345, 0.10527011007070541, 0.10381719470024109, 0.1080438494682312, 0.10210011899471283, 0.1002509593963623, 0.09932637959718704, 0.1006472036242485, 0.10408136248588562, 0.10236428678035736, 0.10011887550354004, 0.09985470771789551, 0.09998679161071777, 0.09945846349000931, 0.09800554811954498, 0.09087307006120682], "val_loss": [2.3091259002685547, 2.308614492416382, 2.3077995777130127, 2.306872844696045, 2.305847406387329, 2.3049960136413574, 2.304166555404663, 2.303356170654297, 2.3026533126831055, 2.302222967147827, 2.3017923831939697, 2.3014721870422363, 2.301248073577881, 2.301074981689453, 2.3009581565856934, 2.300922155380249, 2.300973892211914, 2.301053762435913, 2.301197052001953, 2.3013715744018555, 2.3015568256378174, 2.3018031120300293, 2.302072286605835, 2.3023083209991455, 2.302487373352051, 2.3026275634765625, 2.302738666534424, 2.302841901779175, 2.3029701709747314, 2.30309796333313, 2.303189754486084, 2.3032619953155518, 2.303340196609497], "val_accuracy": [0.09066666662693024, 0.08966666460037231, 0.09000000357627869, 0.08933333307504654, 0.08966666460037231, 0.09099999815225601, 0.09066666662693024, 0.09033333510160446, 0.09066666662693024, 0.09466666728258133, 0.08933333307504654, 0.09099999815225601, 0.0963333323597908, 0.10133333504199982, 0.10266666859388351, 0.10766666382551193, 0.109333336353302, 0.10999999940395355, 0.1146666631102562, 0.11666666716337204, 0.11666666716337204, 0.11766666918992996, 0.11766666918992996, 0.11966666579246521, 0.12133333086967468, 0.12333333492279053, 0.12133333086967468, 0.12533333897590637, 0.12300000339746475, 0.11966666579246521, 0.11900000274181366, 0.11733333021402359, 0.1146666631102562]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 2, 3, 1, 5, 3, 8, 5], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 33], [0, 1, 0, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.multiply(beta, grad))), tf.math.sqrt(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037595748901367, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.317697763442993, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 7, 8], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 6, 3, 8, 2], [4, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [124.80024719238281, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20578522980213165, 0.10711926966905594, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [676097.3125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 3, 1, 3, 5], [0, 0, 3, 3, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 2, 2, 1, 6, 4, 8, 2, 0], [0, 0, 0, 3, 3, 1, 0, 5], [0, 27, 16, 16], [0, 0, 1, 1], [0, 1], [3, 7], [0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 1, 1, 0], [2, 6, 7, 2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 17, 9, 8, 4, 4, 2, 2, 0, 12, 7, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.subtract(beta, grad)), grad), tf.math.subtract(beta, tf.math.negative(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]