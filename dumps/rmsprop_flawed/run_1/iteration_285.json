[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5569708347320557, 0.8443517684936523, 0.7166106700897217, 0.6508563756942749, 0.5851203203201294, 0.5435761213302612, 0.523209273815155, 0.5139386653900146, 0.4735368490219116, 0.4733242094516754, 0.47589221596717834, 0.452801913022995, 0.47631511092185974, 0.4846844971179962, 0.48231732845306396], "accuracy": [0.47549861669540405, 0.6970016956329346, 0.7388719916343689, 0.7577598690986633, 0.7779685854911804, 0.7946110367774963, 0.8054417967796326, 0.8099326491355896, 0.8204993009567261, 0.8281601071357727, 0.8308017253875732, 0.8352925777435303, 0.8318583965301514, 0.826310932636261, 0.8327829837799072], "val_loss": [0.8666245341300964, 0.6674945950508118, 0.5860562324523926, 0.5586686730384827, 0.5499900579452515, 0.5390536189079285, 0.5371779799461365, 0.506674587726593, 0.5056571364402771, 0.5229828953742981, 0.5354619026184082, 0.5233974456787109, 0.5379294157028198, 0.5575665235519409, 0.526904821395874], "val_accuracy": [0.6693333387374878, 0.7570000290870667, 0.7923333048820496, 0.7960000038146973, 0.8090000152587891, 0.8076666593551636, 0.8136666417121887, 0.8176666498184204, 0.8330000042915344, 0.8399999737739563, 0.8309999704360962, 0.8383333086967468, 0.8376666903495789, 0.8323333263397217, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [7, 2, 3, 1, 6, 0, 3, 3], [2, 0, 3, 0, 2, 1, 0], [0, 27, 16, 16], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 7, 1, 7, 4, 5], [0, 7, 3, 1, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 11, 5, 6, 2, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.square(sigma), alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [41554920.0, 36.19166564941406, 517.0134887695312, 5.188394692609979e+30, 3960.21044921875, 6545.095703125, 16151.34375, 44360.55078125, 83203.015625, 185905.75, 397358.90625], "accuracy": [0.09602430462837219, 0.108440101146698, 0.10011887550354004, 0.1002509593963623, 0.10381719470024109, 0.09668471664190292, 0.09536388516426086, 0.09549596905708313, 0.10236428678035736, 0.1018359512090683, 0.09787346422672272], "val_loss": [3.4185187816619873, 244.70648193359375, 1022.1316528320312, 2867.266357421875, 4580.673828125, 16414.1875, 24778.4375, 39565.1875, 159520.0625, 340498.34375, 820772.5], "val_accuracy": [0.10133333504199982, 0.09933333098888397, 0.0989999994635582, 0.10000000149011612, 0.10100000351667404, 0.10266666859388351, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10233332961797714, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [5, 2, 3, 1, 3, 5, 0, 0, 0, 6, 0, 6], [0, 0, 0, 0, 2, 0, 2], [0, 39, 77, 23, 16], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 5, 7, 7], [0, 0, 2, 0, 3, 1, 2, 1, 1], [0, 27, 92, 16], [0, 0, 1, 0, 1], [2, 7, 9], [0, 7], [0, 75], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 5, 20, 11, 9, 3, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), tf.math.square(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)))), alpha), beta), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 2, 3, 1, 3, 5, 7, 3, 7], [0, 1, 1, 0, 2, 1, 2, 3, 3], [0, 39, 77], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 9, 2, 6, 6, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [6, 7], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 18, 9, 9, 2, 2, 1, 1, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.multiply(alpha, grad))))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309729814529419, 2.3107481002807617, 2.3104779720306396, 2.309720039367676, 2.3107035160064697, 2.3088161945343018], "accuracy": [0.09259014576673508, 0.08770307898521423, 0.09298639744520187, 0.09787346422672272, 0.09245806187391281, 0.09932637959718704], "val_loss": [2.3084771633148193, 2.3084771633148193, 2.3084771633148193, 2.3084771633148193, 2.3084771633148193, 2.3084771633148193], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [6, 2, 3, 1, 3, 5, 8], [0, 2, 1, 0, 3, 1], [0, 39, 97], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 5, 7, 5, 4], [0, 0, 2, 0, 3, 0, 0, 2], [0, 9, 16, 76, 0], [0, 0, 1, 0, 1], [0, 7, 5], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 13, 7, 6, 2, 18, 10, 8, 5, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096141815185547, 2.309262275695801, 2.3096187114715576, 2.30867338180542, 2.309366464614868, 2.3093361854553223, 2.307898998260498], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08955223858356476, 0.09298639744520187, 0.09206181764602661, 0.08796724677085876, 0.09430722147226334], "val_loss": [2.307727575302124, 2.3076565265655518, 2.3075833320617676, 2.3075058460235596, 2.3074352741241455, 2.307368278503418, 2.307302474975586], "val_accuracy": [0.08699999749660492, 0.08733333647251129, 0.0860000029206276, 0.08500000089406967, 0.0846666693687439, 0.08533333241939545, 0.0860000029206276]}}]