[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.8822857141494751, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2614424228668213, 1.693049669265747, 1.1181678771972656, 0.8810990452766418, 0.7989403009414673, 0.7442198991775513, 0.6782535910606384, 0.6376402378082275, 0.5909861922264099, 0.5597288608551025, 0.5457926392555237, 0.5217233300209045, 0.4874698519706726, 0.47798842191696167, 0.4680258631706238, 0.4464002251625061, 0.4304366707801819, 0.41943755745887756, 0.3982115387916565, 0.39155638217926025, 0.3587459623813629, 0.35846543312072754, 0.3510901629924774, 0.333347886800766, 0.32424184679985046, 0.31627652049064636, 0.3087024688720703, 0.2993791699409485, 0.2823450565338135, 0.2763814926147461, 0.27009686827659607, 0.2628701329231262, 0.2578688859939575, 0.24349893629550934, 0.24675719439983368, 0.22635503113269806, 0.22536790370941162, 0.21726372838020325, 0.21968580782413483, 0.20078809559345245, 0.2010490447282791, 0.1993924379348755, 0.18142443895339966, 0.19236648082733154], "accuracy": [0.20842689275741577, 0.45951658487319946, 0.6205257177352905, 0.6851142644882202, 0.7063795924186707, 0.7255316376686096, 0.7360982894897461, 0.7564390301704407, 0.7708360552787781, 0.7915731072425842, 0.7869502305984497, 0.8053097128868103, 0.8140271902084351, 0.8182538747787476, 0.819970965385437, 0.8269713521003723, 0.8368775844573975, 0.8411042094230652, 0.8488970994949341, 0.8551049828529358, 0.86118084192276, 0.8597279191017151, 0.8654074668884277, 0.8667283058166504, 0.8775591254234314, 0.8749174475669861, 0.8798044919967651, 0.8848236799240112, 0.8948619961738586, 0.8953903317451477, 0.8977677822113037, 0.8989565372467041, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.91124027967453, 0.9085986018180847, 0.9119006991386414, 0.9079381823539734, 0.9174481630325317, 0.9170519113540649, 0.9214106202125549, 0.9280148148536682, 0.9248448014259338], "val_loss": [2.0967981815338135, 0.9765368103981018, 0.8291558623313904, 0.6869295239448547, 0.6635818481445312, 0.60366290807724, 0.5659604668617249, 0.5401575565338135, 0.5071874856948853, 0.4996758997440338, 0.47139212489128113, 0.4555804431438446, 0.4663418233394623, 0.4362155795097351, 0.4247021973133087, 0.42111465334892273, 0.4082525372505188, 0.3963467478752136, 0.39586779475212097, 0.3904893696308136, 0.3838195502758026, 0.37752872705459595, 0.3788970410823822, 0.36909252405166626, 0.3622184991836548, 0.3640293776988983, 0.36801984906196594, 0.36465466022491455, 0.371604859828949, 0.36855608224868774, 0.3668927550315857, 0.3822304308414459, 0.3704870939254761, 0.3799261152744293, 0.3877311944961548, 0.3853493928909302, 0.38035181164741516, 0.3818025588989258, 0.39176949858665466, 0.39591076970100403, 0.40516361594200134, 0.39969387650489807, 0.4008403420448303, 0.39525657892227173], "val_accuracy": [0.4560000002384186, 0.6549999713897705, 0.699999988079071, 0.7286666631698608, 0.7606666684150696, 0.7599999904632568, 0.7639999985694885, 0.7760000228881836, 0.8033333420753479, 0.8043333292007446, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8456666469573975, 0.8516666889190674, 0.8553333282470703, 0.862666666507721, 0.8640000224113464, 0.862666666507721, 0.8676666617393494, 0.8706666827201843, 0.8669999837875366, 0.875, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.875333309173584, 0.8733333349227905, 0.874666690826416, 0.878333330154419, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.8840000033378601, 0.8823333382606506, 0.8836666941642761, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4255342483520508, 0.7547571659088135, 0.6501429677009583, 0.5939188003540039, 0.5431709885597229, 0.5260987281799316, 0.49991726875305176, 0.4797409474849701, 0.4647204577922821, 0.46186888217926025, 0.45225730538368225, 0.4649958610534668, 0.4612051248550415, 0.4450611472129822, 0.4541197121143341, 0.5202213525772095, 0.4850255846977234, 0.4885753393173218, 0.5265949964523315, 0.6209591031074524, 0.5982738137245178, 0.5696806907653809], "accuracy": [0.5004622936248779, 0.7271166443824768, 0.7718927264213562, 0.7853652238845825, 0.8012151718139648, 0.8086118102073669, 0.8215559124946594, 0.8261788487434387, 0.8337075710296631, 0.8313300609588623, 0.8449346423149109, 0.8372738361358643, 0.8368775844573975, 0.8453308939933777, 0.8482366800308228, 0.828820526599884, 0.8424250483512878, 0.8432175517082214, 0.8372738361358643, 0.8214238286018372, 0.8064984679222107, 0.830669641494751], "val_loss": [0.6829370260238647, 0.5918161869049072, 0.49239522218704224, 0.4945235252380371, 0.4585384428501129, 0.4827939569950104, 0.46953797340393066, 0.48672428727149963, 0.5097827315330505, 0.49324023723602295, 0.48619621992111206, 0.5452938675880432, 0.5355976223945618, 0.5268606543540955, 0.5502893924713135, 0.6134682893753052, 0.5711538195610046, 0.568539559841156, 0.651797354221344, 0.6585302948951721, 0.6216074228286743, 0.620465874671936], "val_accuracy": [0.7566666603088379, 0.7870000004768372, 0.8180000185966492, 0.8220000267028809, 0.8403333425521851, 0.8303333520889282, 0.8389999866485596, 0.8460000157356262, 0.8443333506584167, 0.8510000109672546, 0.847000002861023, 0.8396666646003723, 0.846666693687439, 0.8506666421890259, 0.8529999852180481, 0.8526666760444641, 0.8560000061988831, 0.8539999723434448, 0.8560000061988831, 0.8309999704360962, 0.8423333168029785, 0.8550000190734863]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [13, 39, 77], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 5, 3, 6, 2], [0, 0, 4, 0, 3, 3, 0], [0, 27, 16, 16], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 7, 3, 6, 4, 4, 4, 6, 3, 3, 0, 5, 5, 7, 7, 5, 5, 7, 4, 2, 2, 8, 7, 9, 4, 9, 2, 7, 3, 5, 3, 8, 3, 0, 7, 6, 0, 6, 8, 6, 6, 0, 6, 9, 4, 2, 8, 2, 9, 5], [4, 1, 3, 1, 0, 5, 2, 1, 2, 4, 6, 7, 0, 2, 7, 7, 5, 1, 2, 5, 7, 6, 5, 7, 7, 7, 0, 0], [0, 80, 64, 61, 48, 94, 29, 99], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 78, 50, 28, 8, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, alpha))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(grad, tf.math.sqrt(grad))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta)), grad)), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), alpha)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(grad, grad))), grad))), tf.math.negative(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), tf.math.add(grad, grad)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [22.980880737304688, 1838.3724365234375, 30653.8203125, 213148.4375, 908890.625, 3016970.25], "accuracy": [0.10249637067317963, 0.09774138033390045, 0.09998679161071777, 0.09760929644107819, 0.10210011899471283, 0.09734513610601425], "val_loss": [158.25575256347656, 6511.0771484375, 68251.40625, 369716.40625, 1381219.875, 4068720.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [1, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 3, 1, 6, 3, 8, 2, 3, 1, 0, 9, 8, 7, 3, 8, 4, 6, 6, 2, 2, 1, 1], [1, 1, 2, 0, 5, 1, 0, 1, 3, 1, 5, 4, 1, 1, 2, 0, 0, 3], [0, 27, 16, 16, 33], [0, 0, 0, 1], [0, 7, 9], [4, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 41, 23, 18, 5, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.sqrt(beta), tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.multiply(grad, alpha), tf.math.subtract(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.math.add(tf.math.subtract(grad, alpha), alpha)), tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 3, 3, 8, 2], [3, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [4, 5], [0], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 6, 3, 3, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [8.600593566894531, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18993528187274933, 0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.150712251663208, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08633333444595337, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 3, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 68, 16, 16], [1, 1, 0, 1], [0, 7], [4, 1], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, beta))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310591697692871, 2.3104934692382812, 2.3097169399261475, 2.3088319301605225, 2.3090131282806396, 2.3090012073516846], "accuracy": [0.09100515395402908, 0.09074098616838455, 0.09774138033390045, 0.0940430611371994, 0.09470347315073013, 0.0878351628780365], "val_loss": [2.3090572357177734, 2.3090572357177734, 2.3090572357177734, 2.3090572357177734, 2.3090572357177734, 2.3090572357177734], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]