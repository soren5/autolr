[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 16], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8691428303718567, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.263667583465576, 1.7699182033538818, 1.2806490659713745, 0.9391272664070129, 0.833174467086792, 0.7627131342887878, 0.7030730247497559, 0.6753454804420471, 0.6495770215988159, 0.5993639230728149, 0.5673115849494934, 0.5554931163787842, 0.5330622792243958, 0.5113481283187866, 0.4948725402355194, 0.4870825707912445, 0.4538663327693939, 0.44422218203544617, 0.43280598521232605, 0.4180435240268707, 0.40807417035102844, 0.39465951919555664, 0.38895300030708313, 0.37016183137893677, 0.35901984572410583, 0.35448911786079407, 0.34295904636383057, 0.340577632188797, 0.3203357756137848, 0.3068925142288208], "accuracy": [0.20063400268554688, 0.43864747881889343, 0.587769091129303, 0.6600185036659241, 0.6905296444892883, 0.7153612375259399, 0.7304186820983887, 0.741909921169281, 0.7515519857406616, 0.7640998363494873, 0.7790252566337585, 0.7817989587783813, 0.7921014428138733, 0.8053097128868103, 0.8138951063156128, 0.8128384351730347, 0.8247259259223938, 0.8322546482086182, 0.8358209133148193, 0.8399154543876648, 0.8473120927810669, 0.8491612672805786, 0.848368763923645, 0.8578787446022034, 0.8609166741371155, 0.8673887252807617, 0.8708229064941406, 0.869502067565918, 0.8770307898521423, 0.8800686597824097], "val_loss": [2.1131086349487305, 1.0185835361480713, 0.7763170599937439, 0.7317901849746704, 0.6597715020179749, 0.6222389340400696, 0.5860831141471863, 0.5587756633758545, 0.5293865203857422, 0.5038555860519409, 0.48604780435562134, 0.4817848205566406, 0.4706636667251587, 0.45862141251564026, 0.4311445355415344, 0.4296719431877136, 0.4097336530685425, 0.40056920051574707, 0.39583903551101685, 0.39528125524520874, 0.3748287856578827, 0.3918174207210541, 0.37213966250419617, 0.38607439398765564, 0.3610917925834656, 0.3729011118412018, 0.35910099744796753, 0.35678234696388245, 0.36579686403274536, 0.34544843435287476], "val_accuracy": [0.43966665863990784, 0.6493333578109741, 0.7136666774749756, 0.7386666536331177, 0.7419999837875366, 0.765999972820282, 0.7663333415985107, 0.7746666669845581, 0.8009999990463257, 0.800000011920929, 0.8076666593551636, 0.8119999766349792, 0.8100000023841858, 0.8286666870117188, 0.847000002861023, 0.8363333344459534, 0.8483333587646484, 0.8550000190734863, 0.859666645526886, 0.8566666841506958, 0.8659999966621399, 0.859000027179718, 0.8666666746139526, 0.8650000095367432, 0.8726666569709778, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8669999837875366, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 2, 3, 1, 0, 5, 8], [2, 0, 1, 0, 2], [0, 15, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 5, 0], [0, 27, 16, 16], [0, 0, 1, 1, 0], [7, 7, 9], [5, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "mapping_values": [1, 12, 7, 5, 2, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(alpha))), tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.263089656829834, 1.7274913787841797, 1.1984089612960815, 0.9337701201438904, 0.8201227784156799, 0.7617135643959045, 0.7047125697135925, 0.6548476219177246, 0.6345739364624023, 0.6162790656089783, 0.6001526713371277, 0.5615512132644653, 0.5525583624839783, 0.539424479007721, 0.5139987468719482, 0.5019681453704834, 0.4986512362957001, 0.47777485847473145, 0.4747929573059082, 0.4632606506347656, 0.45574837923049927, 0.4560762345790863, 0.44699159264564514, 0.4480532109737396, 0.4391948878765106, 0.4197114109992981, 0.424137145280838, 0.416835218667984, 0.4199294447898865, 0.40951821208000183, 0.41239792108535767, 0.4001101553440094, 0.4215785264968872, 0.40041986107826233, 0.43402132391929626, 0.4420605003833771, 0.41801175475120544, 0.4284025728702545], "accuracy": [0.2040681540966034, 0.44247788190841675, 0.6063928008079529, 0.6596222519874573, 0.6963412761688232, 0.7021529674530029, 0.7309470176696777, 0.7493065595626831, 0.7506273984909058, 0.7663452625274658, 0.7680623531341553, 0.7820631265640259, 0.7873464822769165, 0.7905164361000061, 0.8009510040283203, 0.8079513907432556, 0.8049134612083435, 0.8127063512802124, 0.8191784620285034, 0.8226125836372375, 0.8259146809577942, 0.8327829837799072, 0.8300092220306396, 0.8285563588142395, 0.8297450542449951, 0.8407079577445984, 0.8370096683502197, 0.8413683772087097, 0.8424250483512878, 0.8437458872795105, 0.843481719493866, 0.8467837572097778, 0.841500461101532, 0.8432175517082214, 0.8461233377456665, 0.8325188159942627, 0.8333113193511963, 0.8457271456718445], "val_loss": [2.116823196411133, 0.995433509349823, 0.8031255602836609, 0.6711779236793518, 0.6809698939323425, 0.5962687134742737, 0.5524559020996094, 0.5394815802574158, 0.5261176228523254, 0.5066263675689697, 0.4962606132030487, 0.48975953459739685, 0.479302316904068, 0.4649682641029358, 0.47276899218559265, 0.4586387574672699, 0.4660717844963074, 0.4563949406147003, 0.44544145464897156, 0.4441817104816437, 0.44673821330070496, 0.4689023494720459, 0.4527822732925415, 0.457175612449646, 0.45532727241516113, 0.46155011653900146, 0.46401509642601013, 0.47501254081726074, 0.4538332223892212, 0.45059359073638916, 0.44648465514183044, 0.47319042682647705, 0.45201775431632996, 0.4660189747810364, 0.4918731153011322, 0.5010557174682617, 0.486672043800354, 0.5490323305130005], "val_accuracy": [0.41866666078567505, 0.653333306312561, 0.7176666855812073, 0.7436666488647461, 0.7350000143051147, 0.7670000195503235, 0.7850000262260437, 0.7879999876022339, 0.7926666736602783, 0.7963333129882812, 0.7983333468437195, 0.8090000152587891, 0.812666654586792, 0.8259999752044678, 0.8186666369438171, 0.8186666369438171, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8360000252723694, 0.8399999737739563, 0.8403333425521851, 0.8429999947547913, 0.8416666388511658, 0.8450000286102295, 0.8460000157356262, 0.8386666774749756, 0.8423333168029785, 0.8529999852180481, 0.8500000238418579, 0.8476666808128357, 0.8550000190734863, 0.8576666712760925, 0.8500000238418579, 0.8493333458900452, 0.8360000252723694, 0.8529999852180481, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8420000076293945, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6923295259475708, 0.9614713788032532, 0.768093466758728, 0.6733424067497253, 0.6151456236839294, 0.5522947311401367, 0.5620318651199341, 0.5362433791160583, 0.5259955525398254, 0.527981698513031, 0.5116444230079651, 0.49305346608161926, 0.4820067882537842, 0.5053609609603882, 0.5048009753227234, 0.5135923027992249, 0.5099477767944336, 0.5233579874038696, 0.5314835906028748], "accuracy": [0.45304450392723083, 0.6707172393798828, 0.7329282760620117, 0.7651565074920654, 0.7717606425285339, 0.7940827012062073, 0.8026680946350098, 0.7992339134216309, 0.8168009519577026, 0.8165367841720581, 0.8249900937080383, 0.8269713521003723, 0.8315942287445068, 0.8296129703521729, 0.8330471515655518, 0.8171972036361694, 0.833179235458374, 0.8363492488861084, 0.8280280232429504], "val_loss": [0.8916696906089783, 0.6916653513908386, 0.5441075563430786, 0.5156574845314026, 0.5176236033439636, 0.4958615005016327, 0.500175952911377, 0.48940417170524597, 0.4804021120071411, 0.5202910304069519, 0.4878772795200348, 0.4775362014770508, 0.5156729221343994, 0.5306612849235535, 0.5323213934898376, 0.5562528371810913, 0.5796962976455688, 0.630784809589386, 0.5821241736412048], "val_accuracy": [0.6846666932106018, 0.7393333315849304, 0.815666675567627, 0.8140000104904175, 0.8036666512489319, 0.828000009059906, 0.8243333101272583, 0.8296666741371155, 0.8363333344459534, 0.8396666646003723, 0.8386666774749756, 0.8330000042915344, 0.8349999785423279, 0.8429999947547913, 0.8383333086967468, 0.8326666951179504, 0.8386666774749756, 0.8410000205039978, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [51, 39, 45, 57], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5, 8, 2, 1, 9, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 94, 0, 94], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 16, 11, 5, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)))), beta)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12640337646007538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 7, 3, 5], [3, 0, 0, 0, 2], [0, 7, 77], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 0, 8, 2], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0], [0, 7, 8, 9], [0, 7], [0, 61], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094890117645264, 2.3098068237304688, 2.3108246326446533, 2.3096935749053955, 2.309791088104248, 2.3101327419281006], "accuracy": [0.0956280529499054, 0.09325055778026581, 0.09100515395402908, 0.09126931428909302, 0.08994849026203156, 0.08889182657003403], "val_loss": [2.3083980083465576, 2.3083980083465576, 2.3083980083465576, 2.3083980083465576, 2.3083980083465576, 2.3083980083465576], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 7], [0, 0, 3, 0, 2], [0, 34, 77], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 6, 3, 2, 6, 3, 1, 2, 2, 9, 1, 9, 5, 1, 9, 9], [0, 0, 2, 2, 4, 1, 0], [0, 27, 2, 64, 0, 98, 39], [1, 0, 1, 1], [5, 7], [0, 7], [59], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 3, 23, 16, 7, 7, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), beta), grad), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102800846099854, 2.309453010559082, 2.3099117279052734, 2.310429334640503, 2.3102505207061768, 2.3095669746398926], "accuracy": [0.09668471664190292, 0.09219389408826828, 0.09087307006120682, 0.09206181764602661, 0.09245806187391281, 0.08915598690509796], "val_loss": [2.308565139770508, 2.308565139770508, 2.308565139770508, 2.308565139770508, 2.308565139770508, 2.308565139770508], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]