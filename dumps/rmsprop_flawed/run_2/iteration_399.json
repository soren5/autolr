[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 4, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 1, 0], [30, 39, 39, 24], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 2, 0], [0, 14, 16, 14], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(alpha)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.298640727996826, 2.233672857284546, 2.041625499725342, 1.5324417352676392, 1.3390159606933594, 1.0633243322372437, 0.9244093298912048, 0.850245475769043, 0.8136423230171204, 0.8011744022369385, 0.7744681239128113, 0.741187334060669, 0.7029029726982117, 0.7105805277824402, 0.6814234256744385, 0.6654047966003418, 0.6327253580093384, 0.6301496028900146, 0.6137803792953491, 0.6123809218406677, 0.5943525433540344, 0.5834347605705261, 0.5744344592094421, 0.5664715766906738, 0.5496302843093872, 0.5360761284828186, 0.5519905686378479, 0.5364242196083069, 0.5206079483032227, 0.5036301612854004, 0.5073274970054626, 0.5053142309188843, 0.5017164349555969, 0.49947309494018555, 0.49136102199554443, 0.47064730525016785, 0.46426472067832947, 0.47145190834999084, 0.4582349956035614, 0.4607386589050293, 0.4537835419178009, 0.4414023756980896, 0.44491884112358093, 0.44230765104293823, 0.42900267243385315, 0.42819368839263916, 0.41746973991394043, 0.42457184195518494, 0.4193107783794403, 0.40995317697525024], "accuracy": [0.1146479994058609, 0.2678642272949219, 0.38409721851348877, 0.47708359360694885, 0.5547483563423157, 0.637828528881073, 0.6606789231300354, 0.6876237988471985, 0.7082287669181824, 0.6993792057037354, 0.6985867023468018, 0.709549605846405, 0.728701651096344, 0.7320036888122559, 0.7364945411682129, 0.7465327978134155, 0.7586844563484192, 0.7576277852058411, 0.7580240368843079, 0.7662131786346436, 0.7734777331352234, 0.772288978099823, 0.7761194109916687, 0.780610203742981, 0.7861577272415161, 0.7940827012062073, 0.7878747582435608, 0.7930260300636292, 0.7969884872436523, 0.8079513907432556, 0.8082155585289001, 0.8121780753135681, 0.8112534880638123, 0.8078193068504333, 0.8086118102073669, 0.8202351331710815, 0.8170651197433472, 0.8182538747787476, 0.8271034359931946, 0.8264430165290833, 0.8249900937080383, 0.8301413059234619, 0.828292191028595, 0.8343679904937744, 0.833179235458374, 0.8314621448516846, 0.8370096683502197, 0.8370096683502197, 0.8389908671379089, 0.8411042094230652], "val_loss": [2.2646126747131348, 2.1496522426605225, 1.711064338684082, 0.9857240915298462, 0.820152997970581, 0.7393449544906616, 0.7335686683654785, 0.6769847273826599, 0.6882291436195374, 0.6560800671577454, 0.6320518255233765, 0.6025792956352234, 0.5871759057044983, 0.5681388974189758, 0.5562223196029663, 0.5457624197006226, 0.5301094651222229, 0.5175384879112244, 0.5178043842315674, 0.5194306969642639, 0.5145296454429626, 0.4998047649860382, 0.4970981180667877, 0.47990453243255615, 0.48309391736984253, 0.48793846368789673, 0.4889835715293884, 0.47288745641708374, 0.4693111181259155, 0.4683550298213959, 0.4701288938522339, 0.4663192629814148, 0.4556129276752472, 0.44947880506515503, 0.4529998004436493, 0.44966694712638855, 0.44665950536727905, 0.4443773627281189, 0.43722331523895264, 0.42369189858436584, 0.42205896973609924, 0.43265023827552795, 0.4211406111717224, 0.4169183671474457, 0.4185124635696411, 0.42203831672668457, 0.4346003532409668, 0.4201961159706116, 0.4217582046985626, 0.42113611102104187], "val_accuracy": [0.320333331823349, 0.4273333251476288, 0.531000018119812, 0.6606666445732117, 0.70333331823349, 0.7233333587646484, 0.734000027179718, 0.7396666407585144, 0.7269999980926514, 0.722000002861023, 0.7526666522026062, 0.7556666731834412, 0.7606666684150696, 0.7763333320617676, 0.781333327293396, 0.7820000052452087, 0.7906666398048401, 0.7950000166893005, 0.7929999828338623, 0.7929999828338623, 0.7979999780654907, 0.8073333501815796, 0.812333345413208, 0.8146666884422302, 0.8106666803359985, 0.8213333487510681, 0.8163333535194397, 0.824999988079071, 0.8240000009536743, 0.8296666741371155, 0.8320000171661377, 0.8323333263397217, 0.8320000171661377, 0.8320000171661377, 0.8443333506584167, 0.8343333601951599, 0.8386666774749756, 0.8456666469573975, 0.846666693687439, 0.8519999980926514, 0.8489999771118164, 0.8366666436195374, 0.8516666889190674, 0.8576666712760925, 0.8586666584014893, 0.8566666841506958, 0.8529999852180481, 0.8523333072662354, 0.8539999723434448, 0.8529999852180481]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5644278526306152, 0.8190362453460693, 0.654403030872345, 0.5989214777946472, 0.5763567090034485, 0.5306879281997681, 0.5042943358421326, 0.4837811291217804, 0.4619249701499939, 0.462157666683197, 0.46823781728744507, 0.45271092653274536, 0.4610547721385956, 0.47520187497138977, 0.4490550756454468, 0.4605928659439087, 0.4655657708644867, 0.4980534613132477, 0.507920503616333, 0.5242747664451599], "accuracy": [0.4748381972312927, 0.7180029153823853, 0.7637035846710205, 0.7773081660270691, 0.7845727205276489, 0.8025360107421875, 0.819442629814148, 0.8238013386726379, 0.8310658931732178, 0.8358209133148193, 0.8397833704948425, 0.8376700282096863, 0.833179235458374, 0.8412362933158875, 0.8401796221733093, 0.842028796672821, 0.844010055065155, 0.8343679904937744, 0.8290846943855286, 0.8278959393501282], "val_loss": [0.7905156016349792, 0.6060183644294739, 0.5406038165092468, 0.5316386222839355, 0.4853876531124115, 0.512971043586731, 0.5013759136199951, 0.5008580088615417, 0.4743616580963135, 0.5058905482292175, 0.5091736912727356, 0.4881458282470703, 0.5378586053848267, 0.556108832359314, 0.5251930952072144, 0.5361170768737793, 0.5827372074127197, 0.5315663814544678, 0.5564790368080139, 0.5644333362579346], "val_accuracy": [0.7390000224113464, 0.7763333320617676, 0.7946666479110718, 0.8063333630561829, 0.8363333344459534, 0.8303333520889282, 0.8240000009536743, 0.8426666855812073, 0.82833331823349, 0.8506666421890259, 0.846666693687439, 0.8373333215713501, 0.8453333377838135, 0.8456666469573975, 0.8519999980926514, 0.8450000286102295, 0.8450000286102295, 0.8476666808128357, 0.8416666388511658, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 5, 8], [0, 0, 1, 0, 2, 3, 0], [65, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 2, 2, 8], [0, 0, 3, 0, 3, 1, 3], [22, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 4, 12, 6, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 2, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 1, 0, 3, 1, 2], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309455156326294, 2.3105740547180176, 2.3096442222595215, 2.309572219848633, 2.310818672180176, 2.3099184036254883], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.09179764986038208, 0.0886276587843895, 0.09192973375320435, 0.09694888442754745], "val_loss": [2.308225154876709, 2.308225154876709, 2.308225154876709, 2.308225154876709, 2.308225154876709, 2.308225154876709], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [5, 6, 3, 6, 3, 4, 3, 8, 2, 7, 1, 7, 9, 2, 2, 3, 8, 9, 1], [0, 0, 1, 0, 2, 3, 0, 0, 1, 3, 3, 1, 3], [0, 39, 39, 79, 53, 84, 68], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [3, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 32, 19, 13, 7, 7, 3, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104114532470703, 2.309415102005005, 2.3097007274627686, 2.3102333545684814, 2.3098700046539307, 2.308573007583618], "accuracy": [0.09430722147226334, 0.09377889335155487, 0.09113723784685135, 0.08849557489156723, 0.09681680053472519, 0.09800554811954498], "val_loss": [2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822, 2.3085825443267822], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]