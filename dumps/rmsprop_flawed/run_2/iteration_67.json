[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.684888482093811, 0.899023711681366, 0.725297212600708, 0.6327889561653137, 0.5930609107017517, 0.5908899307250977, 0.5748833417892456, 0.539050817489624, 0.5266056656837463, 0.5476164221763611, 0.5214465856552124, 0.5598838329315186, 0.568841814994812, 0.5586620569229126, 0.5613828301429749, 0.6017675399780273, 0.5662783980369568, 0.5667524933815002, 0.5841194987297058, 0.5630858540534973], "accuracy": [0.46268656849861145, 0.6913221478462219, 0.7327961921691895, 0.7696473598480225, 0.7737419009208679, 0.7862898111343384, 0.7924976944923401, 0.7989697456359863, 0.8149517774581909, 0.8109893202781677, 0.8232730031013489, 0.8026680946350098, 0.8078193068504333, 0.816008448600769, 0.8141592741012573, 0.7993659973144531, 0.8058380484580994, 0.8211596608161926, 0.8173292875289917, 0.81112140417099], "val_loss": [0.8762433528900146, 0.6579753756523132, 0.5706465244293213, 0.529665470123291, 0.5343825817108154, 0.517054557800293, 0.5728922486305237, 0.5337017178535461, 0.5317555069923401, 0.5984606742858887, 0.5670613050460815, 0.579638659954071, 0.5635102391242981, 0.5852476954460144, 0.5717104077339172, 0.6145609617233276, 0.588140606880188, 0.6591215133666992, 0.6275761127471924, 0.6857647895812988], "val_accuracy": [0.671999990940094, 0.7689999938011169, 0.7756666541099548, 0.8106666803359985, 0.8069999814033508, 0.8220000267028809, 0.8196666836738586, 0.8343333601951599, 0.824999988079071, 0.8389999866485596, 0.8316666483879089, 0.8176666498184204, 0.8323333263397217, 0.8343333601951599, 0.8410000205039978, 0.8399999737739563, 0.8389999866485596, 0.8253333568572998, 0.8266666531562805, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 2, 9], [1, 0, 1, 0, 0, 3, 0], [0, 29, 39, 64, 11], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 8, 8, 3, 5], [0, 0, 2, 1, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 1, 5, 8, 8], [2, 0, 1, 2], [43], [1], [0], [4], [0]], "fitness": -0.3442857265472412, "mapping_values": [1, 17, 10, 7, 5, 18, 11, 7, 3, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), alpha)), tf.math.sqrt(tf.math.sqrt(grad))), tf.math.multiply(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha))), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2867274284362793, 2.38927960395813, 2.3018155097961426, 2.2689106464385986, 2.2670977115631104, 2.282318115234375, 2.3163235187530518, 2.305354356765747, 2.303008556365967, 2.5451741218566895, 2.290332555770874], "accuracy": [0.21014396846294403, 0.11570466309785843, 0.10500594228506088, 0.20472857356071472, 0.16114120185375214, 0.1298375427722931, 0.2090873122215271, 0.10315678268671036, 0.10381719470024109, 0.15876370668411255, 0.1274600476026535], "val_loss": [2.3965935707092285, 2.3043887615203857, 2.2911505699157715, 2.2556350231170654, 2.304539680480957, 1.844807744026184, 2.305710554122925, 2.302685499191284, 2.301558017730713, 2.310777425765991, 2.3024392127990723], "val_accuracy": [0.1993333399295807, 0.0989999994635582, 0.11166666448116302, 0.20766666531562805, 0.09933333098888397, 0.3199999928474426, 0.10433333367109299, 0.10433333367109299, 0.15566666424274445, 0.09966666996479034, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 1, 3, 0], [0, 39, 39, 79], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 6, 0, 8, 2, 8], [0, 0, 3, 0, 3, 1, 0], [0, 76, 5, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [3], [0]], "fitness": -0.12142857164144516, "mapping_values": [1, 15, 8, 7, 4, 11, 6, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.5262030634088923e+19, 8.879302654823204e+21, 3.7805441851803715e+23, 4.7994156505617685e+24, 3.3778022152496315e+25, 1.636597532296241e+26, 6.262412834346887e+26, 1.908810932610144e+27, 5.550047982476673e+27, 1.3279677061514555e+28, 2.892104738004408e+28], "accuracy": [0.08677849918603897, 0.09021265059709549, 0.08770307898521423, 0.08532558381557465, 0.09377889335155487, 0.08611807972192764, 0.08638224750757217, 0.08691058307886124, 0.08717474341392517, 0.0882314071059227, 0.09206181764602661], "val_loss": [2.5845658643395615e+20, 5.258428145075704e+22, 1.250412835266778e+24, 1.2059487457054334e+25, 7.052951187572202e+25, 2.9998386671222837e+26, 1.0232018604582089e+27, 2.967854447868689e+27, 7.60403242976367e+27, 1.7663138191374577e+28, 3.7896074885931226e+28], "val_accuracy": [0.11833333224058151, 0.11900000274181366, 0.11966666579246521, 0.11999999731779099, 0.11999999731779099, 0.12033333629369736, 0.12033333629369736, 0.12033333629369736, 0.11999999731779099, 0.11966666579246521, 0.11966666579246521]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 2, 5, 3, 3, 3, 0], [0, 2, 1, 0, 0, 3, 0], [0, 39, 39, 79], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 2, 3, 1, 6, 9, 8, 2, 8], [0, 1, 2, 0, 3, 1, 0], [62, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030972480773926, 2.7618789672851562, 54.08781433105469, 335.0845947265625, 1514.722412109375, 9695.9599609375, 109927.984375], "accuracy": [0.10434553027153015, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3057785034179688, 9.311750411987305, 164.50979614257812, 727.1063232421875, 3657.420654296875, 29789.005859375, 426926.6875], "val_accuracy": [0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3, 0, 3, 8, 0, 7], [1, 0, 1, 0, 2, 3, 2], [0, 42, 39, 79], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 4], [0, 0, 2, 0, 3, 1, 0], [0, 76, 9, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 16, 10, 6, 2, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105361461639404, 2.310835123062134, 2.311091423034668, 2.3094446659088135, 2.3098831176757812, 2.309676170349121], "accuracy": [0.09272222965955734, 0.09219389408826828, 0.09047681838274002, 0.09325055778026581, 0.09140139818191528, 0.0944393053650856], "val_loss": [2.3086025714874268, 2.3086025714874268, 2.3086025714874268, 2.3086025714874268, 2.3086025714874268, 2.3086025714874268], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]