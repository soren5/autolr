[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5486230850219727, 0.8320462703704834, 0.6768848299980164, 0.629656970500946, 0.604554295539856, 0.5931002497673035, 0.5663306713104248, 0.5476019978523254, 0.5582296848297119, 0.5679758787155151, 0.5723819732666016, 0.5444105863571167, 0.533372700214386, 0.5804967284202576, 0.5993265509605408, 0.5906850099563599, 0.6130290627479553, 0.6208789348602295, 0.6083635687828064, 0.6208361983299255, 0.6155473589897156, 0.6209100484848022, 0.6342341899871826, 0.5953360199928284, 0.5770624279975891, 0.5739226341247559, 0.6020495295524597, 0.6052132844924927, 0.6015920639038086, 0.599216103553772], "accuracy": [0.45568618178367615, 0.703209638595581, 0.7516840696334839, 0.7642319202423096, 0.7680623531341553, 0.7887993454933167, 0.7922335267066956, 0.7993659973144531, 0.8072909712791443, 0.7975168228149414, 0.8014793395996094, 0.8108572363853455, 0.8166688680648804, 0.8005547523498535, 0.800290584564209, 0.8012151718139648, 0.7895918488502502, 0.7876105904579163, 0.8117818236351013, 0.7996301651000977, 0.7985734939575195, 0.8072909712791443, 0.7909126877784729, 0.8039889335632324, 0.8018755912780762, 0.8004226684570312, 0.817989706993103, 0.7783648371696472, 0.807158887386322, 0.7975168228149414], "val_loss": [0.8488689661026001, 0.5838053822517395, 0.5737168192863464, 0.5287825465202332, 0.5276483297348022, 0.5154197216033936, 0.49508798122406006, 0.502490222454071, 0.5436317324638367, 0.5091591477394104, 0.48663678765296936, 0.49265551567077637, 0.5375675559043884, 0.5548608899116516, 0.5267742276191711, 0.5198026299476624, 0.5502946972846985, 0.5354573130607605, 0.5590878129005432, 0.6168240308761597, 0.5652674436569214, 0.5667046904563904, 0.5417113304138184, 0.5110177993774414, 0.5273433327674866, 0.5356720685958862, 0.49863359332084656, 0.5304791927337646, 0.5223842859268188, 0.5743332505226135], "val_accuracy": [0.7099999785423279, 0.7743333578109741, 0.7839999794960022, 0.8059999942779541, 0.8019999861717224, 0.8176666498184204, 0.8289999961853027, 0.8169999718666077, 0.8243333101272583, 0.8209999799728394, 0.8356666564941406, 0.8289999961853027, 0.8373333215713501, 0.8186666369438171, 0.8323333263397217, 0.8296666741371155, 0.8159999847412109, 0.8376666903495789, 0.8216666579246521, 0.8386666774749756, 0.8240000009536743, 0.8273333311080933, 0.8413333296775818, 0.8320000171661377, 0.8513333201408386, 0.8433333039283752, 0.8209999799728394, 0.8386666774749756, 0.8266666531562805, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 1, 0], [0, 0, 2, 0, 2, 3, 0, 1], [33, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 5, 3, 2, 2, 8], [0, 0, 2, 3, 3, 3, 0], [81, 76, 16, 74], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.6974285840988159, "mapping_values": [1, 16, 8, 8, 4, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.623469591140747, 2.684889316558838, 2.078296184539795, 2.233579635620117, 2.0547971725463867, 1.81948983669281, 1.9166457653045654, 1.5920161008834839, 1.404961109161377, 1.7436175346374512, 1.387475609779358, 1.3006579875946045, 1.2436282634735107, 1.8107194900512695, 1.854451298713684, 1.2893073558807373, 1.2919732332229614, 1.5521774291992188], "accuracy": [0.19772817194461823, 0.1752740740776062, 0.26522254943847656, 0.1974640041589737, 0.2666754722595215, 0.41791045665740967, 0.3813234567642212, 0.4753665328025818, 0.5171047449111938, 0.4167217016220093, 0.5217276215553284, 0.5455026030540466, 0.5571258664131165, 0.3789459764957428, 0.32003697752952576, 0.5400871634483337, 0.5432571768760681, 0.478140264749527], "val_loss": [2.030662775039673, 2.1552414894104004, 1.53795325756073, 2.2886900901794434, 1.7652506828308105, 1.4640508890151978, 1.3504910469055176, 1.184451699256897, 1.3346121311187744, 1.109541654586792, 1.0918774604797363, 0.9870879054069519, 0.8464146256446838, 2.312229871749878, 1.1677682399749756, 0.9644160866737366, 1.2053431272506714, 1.000681757926941], "val_accuracy": [0.27399998903274536, 0.18033333122730255, 0.49433332681655884, 0.12166666984558105, 0.4156666696071625, 0.5463333129882812, 0.5573333501815796, 0.6016666889190674, 0.5210000276565552, 0.5740000009536743, 0.6230000257492065, 0.6610000133514404, 0.6986666917800903, 0.10533333569765091, 0.5976666808128357, 0.6613333225250244, 0.6173333525657654, 0.6579999923706055]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 1, 0], [0, 0, 2, 0, 2, 3, 0], [0, 39, 39, 12], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 3, 1, 6, 3, 3, 2, 9], [0, 0, 2, 0, 3, 1, 0, 0], [15, 27, 16, 0, 17], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 1, 5, 8, 3, 6, 3, 2, 7, 2, 4, 0, 2, 6, 2, 5, 1], [0, 6, 1, 1, 1, 2, 3, 1, 5, 0, 4, 4, 2, 4], [43, 64], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 15, 7, 8, 5, 32, 18, 14, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.negative(grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, alpha)), beta), sigma), tf.math.add(alpha, tf.math.pow(grad, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.square(tf.math.subtract(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [167.09765625, 22292.66796875, 401604.09375, 3075080.75, 14540693.0, 51930452.0], "accuracy": [0.09708096832036972, 0.10196803510189056, 0.09734513610601425, 0.09919429570436478, 0.09879804402589798, 0.09853387624025345], "val_loss": [1498.1929931640625, 81723.875, 941823.3125, 5547569.0, 22502966.0, 71988824.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 2, 3, 2, 3, 8, 0], [1, 1, 2, 0, 2, 2, 0], [0, 0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 9, 1, 6, 3, 5, 5, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 11, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 1, 11, 7, 4, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029532432556152, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 6, 3, 8, 3, 2, 3, 8, 0, 4, 9], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 88], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 6, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 4, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, grad)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7207961082458496, 2.3843212127685547, 2.3035025596618652, 2.3031468391418457, 2.3031392097473145, 2.3030059337615967, 2.303009271621704], "accuracy": [0.18451987206935883, 0.10276053100824356, 0.09721305221319199, 0.09893012791872025, 0.09549596905708313, 0.09708096832036972, 0.0944393053650856], "val_loss": [2.7447409629821777, 2.302992820739746, 2.302640914916992, 2.3026037216186523, 2.3026509284973145, 2.302617311477661, 2.30271053314209], "val_accuracy": [0.10066666454076767, 0.10433333367109299, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.09700000286102295]}}]