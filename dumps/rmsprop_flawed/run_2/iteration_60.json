[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8605714440345764, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5848698616027832, 0.8634531497955322, 0.7267534136772156, 0.6388319134712219, 0.5949017405509949, 0.5652888417243958, 0.5312777757644653, 0.5059605240821838, 0.49188661575317383, 0.4750465154647827, 0.4633360207080841, 0.4521574079990387, 0.43985533714294434, 0.4290573298931122, 0.41240397095680237, 0.406855970621109, 0.4072006046772003, 0.3955540359020233, 0.38211870193481445, 0.3747725486755371, 0.3722988963127136, 0.3670109212398529, 0.36135682463645935, 0.3522881865501404, 0.35751911997795105, 0.34448763728141785, 0.3434971272945404, 0.3416890501976013, 0.33151769638061523, 0.3255850076675415, 0.3213435709476471, 0.32207241654396057, 0.3131572902202606], "accuracy": [0.44591203331947327, 0.6925109028816223, 0.7338528633117676, 0.7684586048126221, 0.7825914621353149, 0.7971205711364746, 0.8108572363853455, 0.8162726163864136, 0.8198388814926147, 0.8290846943855286, 0.8397833704948425, 0.8355567455291748, 0.8449346423149109, 0.8466516733169556, 0.8573504090309143, 0.8555012345314026, 0.8562937378883362, 0.8601241707801819, 0.8650112152099609, 0.8692378997802734, 0.8691058158874512, 0.8765024542808533, 0.8673887252807617, 0.8750495314598083, 0.8766345381736755, 0.8786157965660095, 0.8762382864952087, 0.8767666220664978, 0.8864086866378784, 0.8841632604598999, 0.8842953443527222, 0.8908994793891907, 0.8878615498542786], "val_loss": [0.8584741353988647, 0.6581432223320007, 0.6094487309455872, 0.5580034852027893, 0.5117682814598083, 0.5078674554824829, 0.4834854304790497, 0.47689273953437805, 0.45379379391670227, 0.4605327248573303, 0.4379768967628479, 0.45279598236083984, 0.4216359555721283, 0.4329746961593628, 0.4164107143878937, 0.4244106709957123, 0.41172388195991516, 0.40532657504081726, 0.40834710001945496, 0.4001820385456085, 0.3933616578578949, 0.39905664324760437, 0.38959020376205444, 0.4089116156101227, 0.38486355543136597, 0.38582512736320496, 0.38211479783058167, 0.38379165530204773, 0.3860560655593872, 0.3785111904144287, 0.382414847612381, 0.37823498249053955, 0.38005053997039795], "val_accuracy": [0.6946666836738586, 0.7543333172798157, 0.7713333368301392, 0.7986666560173035, 0.8103333115577698, 0.8196666836738586, 0.8256666660308838, 0.8293333053588867, 0.8410000205039978, 0.8336666822433472, 0.8399999737739563, 0.8410000205039978, 0.8510000109672546, 0.8403333425521851, 0.8550000190734863, 0.8500000238418579, 0.8519999980926514, 0.8573333621025085, 0.8543333411216736, 0.8616666793823242, 0.8646666407585144, 0.859000027179718, 0.862333357334137, 0.8479999899864197, 0.8663333058357239, 0.8633333444595337, 0.8663333058357239, 0.8713333606719971, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8686666488647461, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4853026866912842, 0.7924560904502869, 0.6531010270118713, 0.6307883858680725, 0.6191092133522034, 0.5571723580360413, 0.5473156571388245, 0.5311410427093506, 0.5260323882102966, 0.5112951993942261, 0.5149590373039246, 0.49403947591781616, 0.4921976327896118, 0.4904860556125641, 0.5333741903305054], "accuracy": [0.486989825963974, 0.7152291536331177, 0.7574957013130188, 0.7803460359573364, 0.7675340175628662, 0.7938185334205627, 0.800818920135498, 0.8083476424217224, 0.8136309385299683, 0.819442629814148, 0.8197067975997925, 0.8298771381378174, 0.8210275769233704, 0.8305375576019287, 0.8197067975997925], "val_loss": [0.8181285262107849, 0.6026544570922852, 0.5576468706130981, 0.5450610518455505, 0.5215439796447754, 0.529412031173706, 0.5762419700622559, 0.5255843997001648, 0.5144537091255188, 0.6108261942863464, 0.5449825525283813, 0.5396273732185364, 0.5664857625961304, 0.5941359996795654, 0.5411143898963928], "val_accuracy": [0.7070000171661377, 0.7833333611488342, 0.7873333096504211, 0.8040000200271606, 0.8146666884422302, 0.8180000185966492, 0.8266666531562805, 0.8266666531562805, 0.8293333053588867, 0.8393333554267883, 0.8299999833106995, 0.8330000042915344, 0.8356666564941406, 0.82833331823349, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 6, 3, 6, 3, 2, 3, 8, 0], [0, 0, 1, 0, 1, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 5, 1, 6, 3, 6, 2], [3, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.11657142639160156, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.982518196105957, 3.2110602855682373, 2.3059487342834473, 2.30349063873291, 2.303042411804199, 2.30302095413208], "accuracy": [0.18795403838157654, 0.11808215826749802, 0.10011887550354004, 0.10011887550354004, 0.09972262382507324, 0.0956280529499054], "val_loss": [2.2429187297821045, 2.307935953140259, 2.3039333820343018, 2.3028383255004883, 2.302615165710449, 2.302558183670044], "val_accuracy": [0.11733333021402359, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 2, 0, 7, 8, 7, 4, 2], [0, 0, 1, 0, 2, 2, 2, 0, 2, 1, 1, 3], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 4, 5, 4, 1], [0, 0, 3, 3, 3, 1, 0, 0, 3, 3], [19, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 14, 12, 4, 22, 12, 10, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.math.pow(grad, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad)), alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.pow(grad, alpha), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 2, 1, 0, 2, 3, 0], [0, 39, 69, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 6], [0, 0, 0, 0, 3, 3, 0], [0, 14, 16, 64, 43], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3088347911834717, 2.3096444606781006, 2.3098714351654053, 2.309357166290283, 2.310807704925537, 2.309964895248413], "accuracy": [0.09906221181154251, 0.09694888442754745, 0.09219389408826828, 0.08942015469074249, 0.09245806187391281, 0.09694888442754745], "val_loss": [2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 1], [0, 0, 0, 0, 2, 3, 0, 2], [0, 39, 39, 79, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 54], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0860000029206276, "mapping_values": [1, 17, 9, 8, 5, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099968433380127, 2.3121917247772217, 2.3107171058654785, 2.311542510986328, 2.310964584350586, 2.310302972793579], "accuracy": [0.09430722147226334, 0.08915598690509796, 0.0874389111995697, 0.09100515395402908, 0.0936468094587326, 0.09060890227556229], "val_loss": [2.3078432083129883, 2.3078432083129883, 2.3078432083129883, 2.3078432083129883, 2.3078432083129883, 2.3078432083129883], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]