[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8154285550117493, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.467946171760559, 0.835620641708374, 0.7076311111450195, 0.6876380443572998, 0.6242960095405579, 0.5547637939453125, 0.5286663174629211, 0.5211036801338196, 0.5403986573219299, 0.521947979927063, 0.4899463355541229, 0.5083229541778564, 0.457653284072876, 0.4612957537174225, 0.4445859491825104, 0.44902992248535156, 0.48670125007629395, 0.4786200523376465, 0.5281047224998474, 0.5191001296043396, 0.49764883518218994], "accuracy": [0.49570730328559875, 0.7028133869171143, 0.739928662776947, 0.7631752490997314, 0.7730814814567566, 0.7954035401344299, 0.8108572363853455, 0.8145555257797241, 0.8088759779930115, 0.8078193068504333, 0.8290846943855286, 0.8183859586715698, 0.8284242749214172, 0.839519202709198, 0.8374059200286865, 0.8396512866020203, 0.8343679904937744, 0.8339717388153076, 0.8372738361358643, 0.8224804997444153, 0.8471800088882446], "val_loss": [0.9064890146255493, 0.6388450264930725, 0.6353134512901306, 0.5814801454544067, 0.5520830154418945, 0.5311336517333984, 0.5167388916015625, 0.5268852710723877, 0.5269165635108948, 0.5206329822540283, 0.5382757186889648, 0.5050264596939087, 0.5035326480865479, 0.5216729044914246, 0.5476434230804443, 0.5007947087287903, 0.5414662957191467, 0.5724771618843079, 0.6152138710021973, 0.6172800064086914, 0.6732755899429321], "val_accuracy": [0.6993333101272583, 0.7693333625793457, 0.7860000133514404, 0.7850000262260437, 0.8143333196640015, 0.8203333616256714, 0.8246666789054871, 0.8263333439826965, 0.8206666707992554, 0.8296666741371155, 0.8366666436195374, 0.8303333520889282, 0.831333339214325, 0.8383333086967468, 0.8393333554267883, 0.8489999771118164, 0.8316666483879089, 0.847000002861023, 0.8303333520889282, 0.8266666531562805, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 5, 3, 2, 1, 4, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 3, 8, 2, 8], [0, 3, 2, 0, 3, 1, 1], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 8, 5, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(grad))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309309720993042, 33.38665008544922, 229.00079345703125, 742.6129150390625, 1931.902099609375, 4574.3623046875], "accuracy": [0.10196803510189056, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.640512466430664, 113.56149291992188, 456.1390686035156, 1280.038818359375, 3137.304443359375, 7206.9482421875], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 3, 1, 3, 0, 3, 8, 0, 1], [0, 0, 1, 0, 2, 2, 0], [0, 39, 39, 79], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 17, 10, 7, 4, 7, 3, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.subtract(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308885335922241, 2.310549736022949, 2.3103256225585938, 2.3105006217956543, 2.3095974922180176, 2.309530019760132], "accuracy": [0.09430722147226334, 0.09206181764602661, 0.09615638852119446, 0.09047681838274002, 0.09549596905708313, 0.08955223858356476], "val_loss": [2.308518409729004, 2.308518409729004, 2.308518409729004, 2.308518409729004, 2.308518409729004, 2.308518409729004], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 9, 8, 0, 2], [2, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 6, 3, 1, 6, 3, 8, 2, 0], [0, 0, 2, 0, 3, 1, 0], [0, 23, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 16, 10, 6, 3, 10, 5, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099136352539062, 2.309905767440796, 2.3112542629241943, 2.3097007274627686, 2.3101775646209717, 2.309458017349243], "accuracy": [0.09232597798109055, 0.09576013684272766, 0.08717474341392517, 0.09285431355237961, 0.09021265059709549, 0.09047681838274002], "val_loss": [2.308974504470825, 2.308974504470825, 2.308974504470825, 2.308974504470825, 2.308974504470825, 2.308974504470825], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 3, 1, 9, 8, 4, 9, 0, 1], [0, 0, 1, 0, 2, 3, 0, 1, 1], [0, 39, 39, 79, 15, 17], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 3, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 82], [1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 1, 9, 4, 8], [2, 0, 1], [0], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 26, 17, 9, 6, 11, 6, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.pow(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098955154418945, 2.309776544570923, 2.309333324432373, 2.309232234954834, 2.3085052967071533, 2.3097994327545166], "accuracy": [0.09034473448991776, 0.09179764986038208, 0.09259014576673508, 0.09576013684272766, 0.09589222073554993, 0.09206181764602661], "val_loss": [2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]