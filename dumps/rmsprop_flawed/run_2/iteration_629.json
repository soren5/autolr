[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8151428699493408, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5074137449264526, 0.8670039772987366, 0.6855184435844421, 0.609675943851471, 0.5773699283599854, 0.5628442168235779, 0.5635504126548767, 0.5101448893547058, 0.5365462303161621, 0.5522083044052124, 0.530626654624939, 0.5233058929443359, 0.52483731508255, 0.5291938781738281, 0.5378752946853638, 0.5410690903663635, 0.6414568424224854, 0.6319791674613953, 0.5657405853271484, 0.6155180335044861], "accuracy": [0.47549861669540405, 0.7008321285247803, 0.7495707273483276, 0.7695152759552002, 0.7791573405265808, 0.7917051911354065, 0.805177628993988, 0.8050455451011658, 0.8070268034934998, 0.8055738806724548, 0.8203672170639038, 0.8112534880638123, 0.8203672170639038, 0.8109893202781677, 0.811649739742279, 0.8289526104927063, 0.8096684813499451, 0.8009510040283203, 0.8057059645652771, 0.7968564033508301], "val_loss": [0.8566646575927734, 0.6271728277206421, 0.5523710250854492, 0.555242657661438, 0.5468320846557617, 0.535425066947937, 0.5485082268714905, 0.5514379739761353, 0.5437430143356323, 0.572961688041687, 0.5506104230880737, 0.6225016117095947, 0.5661025643348694, 0.5356689095497131, 0.6450690627098083, 0.7665824294090271, 0.6750446557998657, 0.6092259287834167, 0.5944331288337708, 0.714102566242218], "val_accuracy": [0.6953333616256714, 0.7676666378974915, 0.79666668176651, 0.7919999957084656, 0.8100000023841858, 0.8053333163261414, 0.8116666674613953, 0.8113333582878113, 0.8153333067893982, 0.8336666822433472, 0.8289999961853027, 0.8203333616256714, 0.8256666660308838, 0.8333333134651184, 0.8353333473205566, 0.8303333520889282, 0.7950000166893005, 0.8296666741371155, 0.8003333210945129, 0.8276666402816772]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [8, 6, 3, 1, 3, 2, 3, 0, 0], [0, 0, 2, 0, 2, 3, 0], [94, 0, 39, 79], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 9, 6, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 0, 10, 79], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 3, 1, 1, 3, 0, 2], [2, 0, 2, 0, 3, 1, 0], [37, 27, 16, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 1, 4, 0, 8, 0, 4, 2, 1, 7, 9, 8, 2, 6, 2, 9, 6, 1, 2, 4, 7, 9, 5], [1, 0, 1, 3, 7, 7, 6, 1, 6, 5, 0, 1, 1], [43, 25, 56, 41, 6], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 37, 24, 13, 5, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(sigma, grad), grad))), grad), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(grad, tf.math.pow(grad, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), alpha))))), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310837984085083, 2.310591697692871, 2.310307025909424, 2.3094756603240967, 2.3084354400634766, 2.309622049331665], "accuracy": [0.09153348207473755, 0.08796724677085876, 0.08479725569486618, 0.09232597798109055, 0.09219389408826828, 0.09021265059709549], "val_loss": [2.308743715286255, 2.3086183071136475, 2.308419942855835, 2.308145761489868, 2.3078036308288574, 2.3074140548706055], "val_accuracy": [0.08966666460037231, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 6, 3, 1, 3, 2, 3, 9, 1], [0, 0, 2, 0, 2, 3, 0, 2], [0, 0, 39, 79, 65], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 5, 6, 3, 8, 2, 8], [0, 3, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 17, 9, 8, 5, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309258222579956, 2.3094820976257324, 2.309452772140503, 2.3105685710906982, 2.3089678287506104, 2.3097305297851562], "accuracy": [0.09694888442754745, 0.0940430611371994, 0.09087307006120682, 0.09298639744520187, 0.09800554811954498, 0.09153348207473755], "val_loss": [2.309251070022583, 2.309251070022583, 2.309251070022583, 2.309251070022583, 2.309251070022583, 2.309251070022583], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 6, 3, 1, 3, 2, 3, 8, 0, 9], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 4, 3, 8, 2, 8], [0, 0, 2, 0, 3, 0, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [0, 1], [0], [0], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 16, 10, 6, 4, 8, 4, 4, 3, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), tf.math.sqrt(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3100833892822266, 2.3113670349121094, 2.3105783462524414, 2.310030460357666, 2.3101372718811035, 2.3090176582336426], "accuracy": [0.09945846349000931, 0.09100515395402908, 0.08809932321310043, 0.09060890227556229, 0.09377889335155487, 0.09311848133802414], "val_loss": [2.308960199356079, 2.308960199356079, 2.308960199356079, 2.308960199356079, 2.308960199356079, 2.308960199356079], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]