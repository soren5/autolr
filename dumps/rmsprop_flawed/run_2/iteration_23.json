[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4833853244781494, 0.819710373878479, 0.6576783657073975, 0.6061650514602661, 0.5535271763801575, 0.5343111157417297, 0.5215808153152466, 0.5051693916320801, 0.4962782859802246, 0.49144262075424194, 0.47588950395584106, 0.49020394682884216, 0.48256099224090576, 0.44031456112861633, 0.46240317821502686, 0.47438880801200867, 0.5030977129936218, 0.5239455699920654, 0.5119212865829468], "accuracy": [0.4955752193927765, 0.7182670831680298, 0.7600052952766418, 0.7858935594558716, 0.7950072884559631, 0.8084797263145447, 0.8050455451011658, 0.8169330358505249, 0.8259146809577942, 0.8272355198860168, 0.8329150676727295, 0.8219521641731262, 0.8302733898162842, 0.8387266993522644, 0.8412362933158875, 0.8305375576019287, 0.8178576231002808, 0.8397833704948425, 0.83119797706604], "val_loss": [0.9683820009231567, 0.6673129796981812, 0.5752958059310913, 0.5312533378601074, 0.5427818298339844, 0.5070927739143372, 0.5043888092041016, 0.5093764662742615, 0.5008622407913208, 0.5598694682121277, 0.5138058066368103, 0.49728548526763916, 0.49844011664390564, 0.49872079491615295, 0.5599114298820496, 0.5600507855415344, 0.6157423257827759, 0.6388160586357117, 0.5949455499649048], "val_accuracy": [0.6520000100135803, 0.7603333592414856, 0.7933333516120911, 0.8106666803359985, 0.815666675567627, 0.8320000171661377, 0.8236666917800903, 0.8366666436195374, 0.8360000252723694, 0.8333333134651184, 0.8489999771118164, 0.8463333249092102, 0.843666672706604, 0.8553333282470703, 0.843666672706604, 0.8316666483879089, 0.8493333458900452, 0.8510000109672546, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 3, 1, 3, 5], [1, 3, 1, 0, 2], [45, 95, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 2, 1, 8, 3, 8, 2], [5, 0, 2, 0, 2, 1, 0], [31, 27, 16, 9], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3901562690734863, 2.308530807495117, 2.304072141647339, 2.3033580780029297, 2.303131341934204, 2.3031156063079834, 2.302988290786743, 2.3031041622161865], "accuracy": [0.19019944965839386, 0.09998679161071777, 0.09351472556591034, 0.09708096832036972, 0.09338264167308807, 0.09430722147226334, 0.09681680053472519, 0.09708096832036972], "val_loss": [2.3130297660827637, 2.304631233215332, 2.302865505218506, 2.302527904510498, 2.302522897720337, 2.3025729656219482, 2.302579879760742, 2.3026843070983887], "val_accuracy": [0.09933333098888397, 0.09733333438634872, 0.10400000214576721, 0.10133333504199982, 0.10199999809265137, 0.10400000214576721, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 3, 3, 5], [0, 3, 1, 0, 0], [0, 39, 39], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [9, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310617446899414, 2.310516119003296, 2.3094146251678467, 2.3098888397216797, 2.309436559677124, 2.3103790283203125], "accuracy": [0.09298639744520187, 0.08942015469074249, 0.09087307006120682, 0.09272222965955734, 0.0936468094587326, 0.0870426595211029], "val_loss": [2.3097846508026123, 2.3097846508026123, 2.3097846508026123, 2.3097846508026123, 2.3097846508026123, 2.3097846508026123], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 6, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 2, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095836639404297, 2.309239625930786, 2.310270309448242, 2.3105080127716064, 2.310896158218384, 2.309756278991699], "accuracy": [0.09628847241401672, 0.0936468094587326, 0.08928807079792023, 0.09774138033390045, 0.08796724677085876, 0.08928807079792023], "val_loss": [2.308457136154175, 2.308457136154175, 2.308457136154175, 2.308457136154175, 2.308457136154175, 2.308457136154175], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [5, 2, 3, 1, 3, 5, 0], [0, 0, 1, 0, 2], [65, 39, 67], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 6, 1, 9, 3, 8, 2], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 1, 5, 8, 8], [0, 0, 3, 6], [0, 87], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 12, 7, 5, 3, 11, 7, 4, 3, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(sigma))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3112688064575195, 2.3096399307250977, 2.309342622756958, 2.310607433319092, 2.3105006217956543, 2.3113551139831543], "accuracy": [0.09536388516426086, 0.09087307006120682, 0.09298639744520187, 0.09285431355237961, 0.09576013684272766, 0.09192973375320435], "val_loss": [2.309040069580078, 2.309040069580078, 2.309040069580078, 2.309040069580078, 2.309040069580078, 2.309040069580078], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]