[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 6, 3, 1, 3, 2, 2, 6, 0, 7, 9, 1, 3, 3, 7, 2, 4, 8, 9, 7, 0], [0, 0, 1, 0, 2, 3, 0, 1, 1, 2, 0, 3, 2, 3], [0, 39, 39, 79, 73, 84, 32], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 64, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [1], [0]], "fitness": -0.845714271068573, "mapping_values": [1, 35, 21, 14, 7, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.negative(grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.add(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.122082471847534, 1.1243565082550049, 0.7925395369529724, 0.6870156526565552, 0.6530587077140808, 0.6036131381988525, 0.5686929821968079, 0.5378673672676086, 0.512555718421936, 0.4841526448726654, 0.4738697409629822, 0.4637204706668854, 0.4381164610385895, 0.4410504698753357, 0.4109070301055908, 0.4120185375213623, 0.42661193013191223, 0.4238016605377197, 0.4091220200061798, 0.41953733563423157], "accuracy": [0.28978997468948364, 0.5945053696632385, 0.7033417224884033, 0.7349095344543457, 0.7524765729904175, 0.7695152759552002, 0.7823272943496704, 0.7913089394569397, 0.8053097128868103, 0.8166688680648804, 0.8226125836372375, 0.8247259259223938, 0.8322546482086182, 0.8322546482086182, 0.8455950617790222, 0.8426892161369324, 0.8339717388153076, 0.837141752243042, 0.8449346423149109, 0.8432175517082214], "val_loss": [1.2316524982452393, 0.7170346975326538, 0.6125800013542175, 0.5728151798248291, 0.5222837924957275, 0.5282605886459351, 0.49183300137519836, 0.4531097710132599, 0.4407178461551666, 0.4343852400779724, 0.4269788861274719, 0.41380858421325684, 0.40290072560310364, 0.4163881838321686, 0.41290998458862305, 0.4501664936542511, 0.45061489939689636, 0.44845762848854065, 0.4508291780948639, 0.47997891902923584], "val_accuracy": [0.637333333492279, 0.7266666889190674, 0.7609999775886536, 0.7773333191871643, 0.7916666865348816, 0.7986666560173035, 0.8073333501815796, 0.8336666822433472, 0.8376666903495789, 0.8389999866485596, 0.8460000157356262, 0.8486666679382324, 0.8543333411216736, 0.8560000061988831, 0.859333336353302, 0.8423333168029785, 0.8479999899864197, 0.8460000157356262, 0.8423333168029785, 0.8460000157356262]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5983983278274536, 0.8860211968421936, 0.7053021788597107, 0.6316027045249939, 0.5768792629241943, 0.5438563227653503, 0.5164556503295898, 0.48601680994033813, 0.45562583208084106, 0.4394227862358093, 0.4570685625076294, 0.43269431591033936, 0.4565720558166504, 0.43751785159111023], "accuracy": [0.46730947494506836, 0.7016246318817139, 0.7440232634544373, 0.767930269241333, 0.7865539789199829, 0.8020076751708984, 0.8072909712791443, 0.8247259259223938, 0.8313300609588623, 0.8428213000297546, 0.829216718673706, 0.8338396549224854, 0.8368775844573975, 0.8444063067436218], "val_loss": [0.8172560930252075, 0.6138829588890076, 0.6003288626670837, 0.539591372013092, 0.5347110033035278, 0.523980975151062, 0.5133562684059143, 0.5203246474266052, 0.4808454215526581, 0.5316192507743835, 0.522036075592041, 0.5781972408294678, 0.5446263551712036, 0.578075110912323], "val_accuracy": [0.718666672706604, 0.7593333125114441, 0.7866666913032532, 0.7913333177566528, 0.812333345413208, 0.8153333067893982, 0.8106666803359985, 0.8306666612625122, 0.8343333601951599, 0.8230000138282776, 0.8289999961853027, 0.8256666660308838, 0.8266666531562805, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 8, 3, 2, 3, 8, 0], [0, 0, 1, 0, 1, 3, 0], [0, 39, 39, 79], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 8, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [63, 76, 16, 87], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 4, 2, 2, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036065101623535, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 1, 8, 2], [0, 0, 4, 0, 0, 1, 0], [0, 27, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [7, 0, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [33770.8046875, 2.8474579324705896e+34, 3.809145927429199, 3.1639747619628906, 3.743241548538208, 3.7249245643615723, 3.312603712081909, 3.663721799850464, 3.6563947200775146, 3.3521728515625, 3.7051568031311035], "accuracy": [0.21714437007904053, 0.09351472556591034, 0.09628847241401672, 0.1006472036242485, 0.1006472036242485, 0.09998679161071777, 0.10130762308835983, 0.10077928751707077, 0.09787346422672272, 0.10540219396352768, 0.09998679161071777], "val_loss": [506791.28125, 4.074552059173584, 3.842364549636841, 3.4945757389068604, 3.8582606315612793, 3.5003156661987305, 3.608818769454956, 3.4669742584228516, 3.784791946411133, 3.5268735885620117, 3.9269235134124756], "val_accuracy": [0.05833333358168602, 0.09666666388511658, 0.09966666996479034, 0.10166666656732559, 0.09666666388511658, 0.10366666316986084, 0.09966666996479034, 0.0989999994635582, 0.10366666316986084, 0.09933333098888397, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 2, 3, 2, 3, 8, 0], [0, 2, 1, 1, 2, 3, 0], [0, 39, 39, 74], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 16, 9, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(grad, tf.math.sqrt(alpha)), alpha), grad)), tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310847759246826, 2.309065341949463, 2.310361862182617, 2.310272216796875, 2.3103458881378174, 2.309037923812866], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.0878351628780365, 0.0866464152932167, 0.09311848133802414], "val_loss": [2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]