[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5532974004745483, 0.9265199303627014, 0.7410809397697449, 0.655337393283844, 0.5941665768623352, 0.5845730304718018, 0.6051501035690308, 0.571117639541626, 0.5577634572982788, 0.5744295716285706, 0.557460367679596, 0.564163863658905, 0.5804691314697266, 0.5914658904075623], "accuracy": [0.48487651348114014, 0.6897371411323547, 0.7347774505615234, 0.7548540234565735, 0.7775723338127136, 0.7922335267066956, 0.7824593782424927, 0.7996301651000977, 0.7923656105995178, 0.816008448600769, 0.7956677079200745, 0.8041210174560547, 0.8012151718139648, 0.8072909712791443], "val_loss": [0.9295623302459717, 0.7467034459114075, 0.6221218109130859, 0.5525473356246948, 0.5557647347450256, 0.5591864585876465, 0.5354527235031128, 0.5164790153503418, 0.5864697694778442, 0.5765730738639832, 0.5584275722503662, 0.6090404987335205, 0.5604230165481567, 0.6718867421150208], "val_accuracy": [0.6949999928474426, 0.7646666765213013, 0.7886666655540466, 0.8033333420753479, 0.8090000152587891, 0.8153333067893982, 0.8086666464805603, 0.8223333358764648, 0.8230000138282776, 0.8140000104904175, 0.8196666836738586, 0.8140000104904175, 0.8180000185966492, 0.8173333406448364]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 1], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 1, 5, 8, 8, 8, 1, 6, 7, 3], [0, 6, 1, 7, 5, 7, 4], [0], [1], [0], [2], [0]], "fitness": -0.7962856888771057, "mapping_values": [1, 8, 4, 4, 3, 15, 8, 7, 3, 18, 11, 7, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, grad)), grad), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3062472343444824, 2.2907931804656982, 2.268826961517334, 2.241708755493164, 2.2094101905822754, 2.161668300628662, 2.0898077487945557, 1.9848203659057617, 1.8265049457550049, 1.6286063194274902, 1.434603214263916, 1.3232501745224, 1.2704803943634033, 1.221680760383606, 1.156997561454773, 1.0500895977020264, 0.9579690098762512, 0.9030663371086121, 0.8727536201477051, 0.8689410090446472, 0.8425430655479431, 0.814588189125061, 0.7910268902778625, 0.7846686244010925, 0.7622621655464172, 0.7360795736312866, 0.7206069827079773, 0.7247850298881531, 0.7049116492271423, 0.6946135759353638, 0.6844725012779236, 0.673347532749176, 0.6752089262008667, 0.6568059325218201, 0.6560263633728027, 0.6495224833488464, 0.633141040802002, 0.6260108947753906, 0.6280633807182312, 0.6174149513244629, 0.6207129955291748, 0.6067118048667908, 0.605384349822998, 0.5979941487312317, 0.5924028754234314, 0.5818967223167419], "accuracy": [0.1002509593963623, 0.12719587981700897, 0.18716153502464294, 0.27222296595573425, 0.3237352967262268, 0.363360196352005, 0.39268261194229126, 0.40589091181755066, 0.43059042096138, 0.4695548713207245, 0.4959714710712433, 0.5283318161964417, 0.5473517179489136, 0.5719191431999207, 0.6040153503417969, 0.6346585750579834, 0.6536785364151001, 0.6626601219177246, 0.6833971738815308, 0.6861709356307983, 0.6921146512031555, 0.7000396251678467, 0.7029454708099365, 0.7054550051689148, 0.7124554514884949, 0.7230220437049866, 0.7256637215614319, 0.7268524765968323, 0.7323999404907227, 0.7374191284179688, 0.744419515132904, 0.7457403540611267, 0.7441553473472595, 0.7514199018478394, 0.7477215528488159, 0.763439416885376, 0.7582882046699524, 0.7626469135284424, 0.7652885913848877, 0.765949010848999, 0.7651565074920654, 0.7705719470977783, 0.7708360552787781, 0.7724210619926453, 0.7684586048126221, 0.7781006693840027], "val_loss": [2.2973055839538574, 2.2763564586639404, 2.250880002975464, 2.2197265625, 2.1781249046325684, 2.1163322925567627, 2.0197787284851074, 1.8703117370605469, 1.6557105779647827, 1.3976386785507202, 1.16160249710083, 1.0153520107269287, 0.9433021545410156, 0.8933419585227966, 0.8453560471534729, 0.8026909232139587, 0.7711999416351318, 0.7624130845069885, 0.7623289227485657, 0.7477747201919556, 0.7159560322761536, 0.6940826177597046, 0.6774019598960876, 0.6630507707595825, 0.648431658744812, 0.6456106901168823, 0.6429951190948486, 0.6374990344047546, 0.6316789984703064, 0.6237995624542236, 0.6165986061096191, 0.6101973652839661, 0.5996265411376953, 0.5902701616287231, 0.5825615525245667, 0.5773899555206299, 0.5761484503746033, 0.5692122578620911, 0.5641521215438843, 0.5610926151275635, 0.5570155382156372, 0.5536590814590454, 0.5520513653755188, 0.5485183000564575, 0.5429742932319641, 0.538118839263916], "val_accuracy": [0.10433333367109299, 0.2056666612625122, 0.3933333456516266, 0.42899999022483826, 0.4313333332538605, 0.4506666660308838, 0.46566668152809143, 0.5096666812896729, 0.5743333101272583, 0.6100000143051147, 0.6330000162124634, 0.6463333368301392, 0.656000018119812, 0.6620000004768372, 0.6916666626930237, 0.6926666498184204, 0.7096666693687439, 0.7196666598320007, 0.7239999771118164, 0.7296666502952576, 0.7323333621025085, 0.7310000061988831, 0.737333357334137, 0.7419999837875366, 0.75, 0.7519999742507935, 0.7446666955947876, 0.7563333511352539, 0.7590000033378601, 0.7646666765213013, 0.7633333206176758, 0.7616666555404663, 0.7696666717529297, 0.7723333239555359, 0.7736666798591614, 0.7730000019073486, 0.7680000066757202, 0.7743333578109741, 0.7820000052452087, 0.784333348274231, 0.7866666913032532, 0.7836666703224182, 0.7799999713897705, 0.7796666622161865, 0.7833333611488342, 0.7846666574478149]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 4, 8, 8, 6, 2, 1], [0, 0, 1, 0, 2, 0, 2, 1, 0], [0, 39, 39, 65, 16], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 7, 1, 6, 3, 4, 2, 4, 1, 4, 6, 4, 9, 2, 5, 5, 8, 5, 8, 5, 0], [0, 0, 4, 3, 3, 1, 0, 3, 4, 4, 5, 1, 2], [35, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 5, 35, 22, 13, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(grad), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.pow(tf.math.subtract(grad, alpha), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.square(tf.math.square(tf.math.sqrt(grad))), tf.math.square(grad)))), alpha), tf.math.sqrt(tf.math.square(tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [33, 27, 16, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 2, 1, 5, 5, 8], [3, 6, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 1, 10, 6, 4, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.square(sigma), grad), tf.math.square(tf.math.sqrt(alpha))), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1881836.375, 285780704.0, 4770532864.0, 33902145536.0, 151156391936.0, 494638235648.0], "accuracy": [0.09668471664190292, 0.10408136248588562, 0.09708096832036972, 0.09536388516426086, 0.09734513610601425, 0.09760929644107819], "val_loss": [19429402.0, 1046264832.0, 11227677696.0, 61205336064.0, 229251121152.0, 676211982336.0], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 8], [0, 0, 1, 0, 2], [0, 39, 77], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 0, 2], [0, 0, 2, 0, 3, 4, 0], [0, 27, 16, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 8, 1, 5, 8, 0], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 4, 2, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311326026916504, 2.3098084926605225, 2.3103950023651123, 2.3099441528320312, 2.3098056316375732, 2.3102312088012695], "accuracy": [0.08532558381557465, 0.09694888442754745, 0.09206181764602661, 0.09668471664190292, 0.0948355570435524, 0.09311848133802414], "val_loss": [2.3087589740753174, 2.3087589740753174, 2.3087589740753174, 2.3087589740753174, 2.3087589740753174, 2.3087589740753174], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]