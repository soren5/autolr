[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8605714440345764, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5848698616027832, 0.8634531497955322, 0.7267534136772156, 0.6388319134712219, 0.5949017405509949, 0.5652888417243958, 0.5312777757644653, 0.5059605240821838, 0.49188661575317383, 0.4750465154647827, 0.4633360207080841, 0.4521574079990387, 0.43985533714294434, 0.4290573298931122, 0.41240397095680237, 0.406855970621109, 0.4072006046772003, 0.3955540359020233, 0.38211870193481445, 0.3747725486755371, 0.3722988963127136, 0.3670109212398529, 0.36135682463645935, 0.3522881865501404, 0.35751911997795105, 0.34448763728141785, 0.3434971272945404, 0.3416890501976013, 0.33151769638061523, 0.3255850076675415, 0.3213435709476471, 0.32207241654396057, 0.3131572902202606], "accuracy": [0.44591203331947327, 0.6925109028816223, 0.7338528633117676, 0.7684586048126221, 0.7825914621353149, 0.7971205711364746, 0.8108572363853455, 0.8162726163864136, 0.8198388814926147, 0.8290846943855286, 0.8397833704948425, 0.8355567455291748, 0.8449346423149109, 0.8466516733169556, 0.8573504090309143, 0.8555012345314026, 0.8562937378883362, 0.8601241707801819, 0.8650112152099609, 0.8692378997802734, 0.8691058158874512, 0.8765024542808533, 0.8673887252807617, 0.8750495314598083, 0.8766345381736755, 0.8786157965660095, 0.8762382864952087, 0.8767666220664978, 0.8864086866378784, 0.8841632604598999, 0.8842953443527222, 0.8908994793891907, 0.8878615498542786], "val_loss": [0.8584741353988647, 0.6581432223320007, 0.6094487309455872, 0.5580034852027893, 0.5117682814598083, 0.5078674554824829, 0.4834854304790497, 0.47689273953437805, 0.45379379391670227, 0.4605327248573303, 0.4379768967628479, 0.45279598236083984, 0.4216359555721283, 0.4329746961593628, 0.4164107143878937, 0.4244106709957123, 0.41172388195991516, 0.40532657504081726, 0.40834710001945496, 0.4001820385456085, 0.3933616578578949, 0.39905664324760437, 0.38959020376205444, 0.4089116156101227, 0.38486355543136597, 0.38582512736320496, 0.38211479783058167, 0.38379165530204773, 0.3860560655593872, 0.3785111904144287, 0.382414847612381, 0.37823498249053955, 0.38005053997039795], "val_accuracy": [0.6946666836738586, 0.7543333172798157, 0.7713333368301392, 0.7986666560173035, 0.8103333115577698, 0.8196666836738586, 0.8256666660308838, 0.8293333053588867, 0.8410000205039978, 0.8336666822433472, 0.8399999737739563, 0.8410000205039978, 0.8510000109672546, 0.8403333425521851, 0.8550000190734863, 0.8500000238418579, 0.8519999980926514, 0.8573333621025085, 0.8543333411216736, 0.8616666793823242, 0.8646666407585144, 0.859000027179718, 0.862333357334137, 0.8479999899864197, 0.8663333058357239, 0.8633333444595337, 0.8663333058357239, 0.8713333606719971, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8686666488647461, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6697256565093994, 0.8519366383552551, 0.6769879460334778, 0.611127495765686, 0.583234429359436, 0.5499574542045593, 0.5185294151306152, 0.5052761435508728, 0.478349506855011, 0.4799976348876953, 0.47170114517211914, 0.5434087514877319, 0.5757887363433838, 0.5718966722488403], "accuracy": [0.4574032425880432, 0.6995112895965576, 0.7564390301704407, 0.7732135653495789, 0.7833839654922485, 0.7952714562416077, 0.8120459914207458, 0.8149517774581909, 0.8267071843147278, 0.8202351331710815, 0.833179235458374, 0.8182538747787476, 0.8087438941001892, 0.8012151718139648], "val_loss": [0.8410657644271851, 0.5987602472305298, 0.5098440647125244, 0.51218581199646, 0.4891115725040436, 0.46855172514915466, 0.4574423134326935, 0.4894467294216156, 0.469460129737854, 0.4608500599861145, 0.46858155727386475, 0.5179824233055115, 0.5587455630302429, 0.4808005690574646], "val_accuracy": [0.6946666836738586, 0.777999997138977, 0.8040000200271606, 0.8036666512489319, 0.8243333101272583, 0.82833331823349, 0.8410000205039978, 0.8403333425521851, 0.8486666679382324, 0.8456666469573975, 0.8429999947547913, 0.8289999961853027, 0.8339999914169312, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 0, 4], [0, 0, 2, 0, 3, 1, 0, 2, 3], [0, 76, 87, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 20, 11, 9, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 2, 1, 3, 5, 2, 3, 3, 9, 4, 3, 7, 4, 1, 2, 8, 3, 9, 2, 2, 7, 1, 5, 9, 9], [0, 2, 1, 0, 1, 3, 0, 2, 0, 0, 1, 1, 2, 0, 1], [0, 39, 39, 81, 96, 34, 18, 30, 84, 62], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 6, 1], [85], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 26, 15, 10, 13, 7, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(grad, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.subtract(grad, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(grad, tf.math.subtract(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), alpha)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 2, 3, 0, 2, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 85, 94], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 16, 9, 7, 4, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102078437805176, 2.309725284576416, 2.3106517791748047, 2.309943914413452, 2.3107404708862305, 2.3110604286193848], "accuracy": [0.08730682730674744, 0.09259014576673508, 0.0956280529499054, 0.09126931428909302, 0.09034473448991776, 0.09034473448991776], "val_loss": [2.3097314834594727, 2.3097314834594727, 2.3097314834594727, 2.3097314834594727, 2.3097314834594727, 2.3097314834594727], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 1], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 19, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 16, 9, 7, 3, 15, 8, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106017112731934, 2.309753179550171, 2.3087244033813477, 2.308781862258911, 2.3107621669769287, 2.3100669384002686], "accuracy": [0.09285431355237961, 0.09206181764602661, 0.09377889335155487, 0.09285431355237961, 0.08889182657003403, 0.09536388516426086], "val_loss": [2.308805227279663, 2.308805227279663, 2.308805227279663, 2.308805227279663, 2.308805227279663, 2.308805227279663], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]