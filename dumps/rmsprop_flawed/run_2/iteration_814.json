[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.527441382408142, 0.8180999159812927, 0.693487286567688, 0.6269026398658752, 0.5741157531738281, 0.5363340377807617, 0.5969915390014648, 0.592576801776886, 0.5831839442253113, 0.5843580365180969, 0.5506662726402283, 0.5104423761367798, 0.5051664710044861, 0.5516476631164551, 0.5477110743522644, 0.5269330143928528, 0.530488133430481, 0.5599428415298462, 0.560930073261261, 0.5483697652816772, 0.5564414262771606, 0.5488413572311401, 0.5535774827003479, 0.565747857093811, 0.578580915927887, 0.5605358481407166, 0.5572022199630737, 0.5654476881027222, 0.5851458311080933, 0.6485921740531921, 0.5728391408920288, 0.5671576857566833, 0.6229970455169678, 0.5982969403266907, 0.6234015822410583], "accuracy": [0.47272488474845886, 0.7149649858474731, 0.737947404384613, 0.763967752456665, 0.7959318161010742, 0.7948752045631409, 0.7975168228149414, 0.7940827012062073, 0.7960638999938965, 0.793950617313385, 0.8096684813499451, 0.8119139075279236, 0.8187822103500366, 0.8129705190658569, 0.81112140417099, 0.8189142942428589, 0.8150838613510132, 0.816008448600769, 0.8146876096725464, 0.8098005652427673, 0.8141592741012573, 0.8182538747787476, 0.8090080618858337, 0.8232730031013489, 0.802800178527832, 0.7964601516723633, 0.8264430165290833, 0.8183859586715698, 0.8208954930305481, 0.8207634687423706, 0.8059701323509216, 0.8054417967796326, 0.8226125836372375, 0.8100647330284119, 0.8049134612083435], "val_loss": [0.7067735195159912, 0.574660062789917, 0.4994436800479889, 0.4807674288749695, 0.46961677074432373, 0.4661361873149872, 0.5204839110374451, 0.4884556531906128, 0.49302273988723755, 0.5437218546867371, 0.49929043650627136, 0.4965941607952118, 0.49996012449264526, 0.5259807705879211, 0.5265870690345764, 0.516253650188446, 0.5389036536216736, 0.5537465810775757, 0.5748348832130432, 0.5032521486282349, 0.5741512179374695, 0.6847202181816101, 0.5656995177268982, 0.5690152049064636, 0.5504061579704285, 0.5541764497756958, 0.5298510193824768, 0.6604689955711365, 0.6469031572341919, 0.7238308787345886, 0.5466778874397278, 0.5769955515861511, 0.6030533909797668, 0.5938972234725952, 0.5535168647766113], "val_accuracy": [0.7279999852180481, 0.7829999923706055, 0.8109999895095825, 0.8243333101272583, 0.8349999785423279, 0.8420000076293945, 0.8453333377838135, 0.8376666903495789, 0.8360000252723694, 0.8213333487510681, 0.846666693687439, 0.8379999995231628, 0.840666651725769, 0.8473333120346069, 0.8333333134651184, 0.8433333039283752, 0.8483333587646484, 0.8433333039283752, 0.8420000076293945, 0.8479999899864197, 0.8533333539962769, 0.8510000109672546, 0.8416666388511658, 0.8553333282470703, 0.8296666741371155, 0.859333336353302, 0.847000002861023, 0.843666672706604, 0.8223333358764648, 0.8616666793823242, 0.8270000219345093, 0.8423333168029785, 0.8450000286102295, 0.8566666841506958, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 6, 3, 1, 2, 2, 3, 8, 0, 9, 2, 9, 9], [0, 2, 2, 0, 2, 3, 0], [0, 0, 30, 79, 73], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [22, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 13, 5, 5, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2810.62109375, 400022.75, 7006548.0, 48228220.0, 214914720.0, 690115200.0], "accuracy": [0.10130762308835983, 0.10051512718200684, 0.1010434553027153, 0.09708096832036972, 0.09813763201236725, 0.1026284471154213], "val_loss": [27314.71484375, 1450068.125, 15527607.0, 84585632.0, 316722176.0, 934054528.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 4, 7, 7, 6, 3, 5, 4, 8], [0, 0, 2, 0, 2, 3, 1, 0, 2, 0, 3, 3, 3], [68, 0, 39, 79, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 2, 6, 3, 8, 2, 8, 4, 4, 7, 9], [0, 0, 2, 0, 3, 1, 0, 4, 5], [0, 76, 16, 0, 58], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 17, 13, 5, 22, 13, 9, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, alpha))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.square(tf.math.pow(grad, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(grad), tf.math.pow(alpha, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 2], [49, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 3, 1, 6, 3, 8, 2], [0, 2, 2, 1, 3, 2, 0], [0, 76, 16, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 1, 5, 8, 8, 4], [1, 0, 1, 4], [10], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 15, 8, 7, 3, 2, 2, 0, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106040954589844, 2.310270071029663, 2.309260845184326, 2.3096938133239746, 2.3093488216400146, 2.3099265098571777], "accuracy": [0.08625016361474991, 0.09576013684272766, 0.09192973375320435, 0.08638224750757217, 0.0952318087220192, 0.09826971590518951], "val_loss": [2.3084495067596436, 2.3084495067596436, 2.3084495067596436, 2.3084495067596436, 2.3084495067596436, 2.3084495067596436], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 6, 5, 1, 3, 5, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 14, 79], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [5, 4, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 3], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [0, 0], [0, 9], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3089332580566406, 2.310464382171631, 2.3101673126220703, 2.3091037273406982, 2.3102123737335205, 2.310676336288452], "accuracy": [0.09179764986038208, 0.09470347315073013, 0.09338264167308807, 0.09034473448991776, 0.08836349099874496, 0.08691058307886124], "val_loss": [2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723, 2.3086647987365723], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]