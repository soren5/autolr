[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.682551383972168, 1.0123368501663208, 0.756646990776062, 0.6778952479362488, 0.6354989409446716, 0.620663046836853, 0.5972492694854736, 0.5832951068878174, 0.5699231624603271, 0.5275275707244873, 0.520769476890564, 0.5191906690597534, 0.5006212592124939, 0.4981006681919098, 0.47586894035339355, 0.4602528214454651, 0.4585813581943512, 0.4514283835887909, 0.44871786236763, 0.4616595208644867, 0.49304184317588806, 0.4986707270145416, 0.5868138670921326], "accuracy": [0.4589882493019104, 0.6631884574890137, 0.7257958054542542, 0.7531369924545288, 0.7681944370269775, 0.7821952104568481, 0.7872143983840942, 0.7884030938148499, 0.7946110367774963, 0.8140271902084351, 0.8117818236351013, 0.8203672170639038, 0.8198388814926147, 0.8239334225654602, 0.8300092220306396, 0.8372738361358643, 0.8433496356010437, 0.8421608805656433, 0.8429533839225769, 0.8396512866020203, 0.8436138033866882, 0.8286884427070618, 0.8145555257797241], "val_loss": [1.0595914125442505, 0.6403429508209229, 0.5751079320907593, 0.5333723425865173, 0.5366507172584534, 0.5383639931678772, 0.5274128317832947, 0.5098012089729309, 0.5406092405319214, 0.5246663689613342, 0.5093348622322083, 0.5548036098480225, 0.48537907004356384, 0.5151579976081848, 0.5033618807792664, 0.5149109363555908, 0.5294995307922363, 0.5125531554222107, 0.5358366966247559, 0.5526295304298401, 0.5453075170516968, 0.5596284866333008, 0.561129629611969], "val_accuracy": [0.6463333368301392, 0.7716666460037231, 0.7823333144187927, 0.8059999942779541, 0.8029999732971191, 0.8016666769981384, 0.8130000233650208, 0.8106666803359985, 0.8220000267028809, 0.824999988079071, 0.8286666870117188, 0.8320000171661377, 0.8256666660308838, 0.824999988079071, 0.8346666693687439, 0.8326666951179504, 0.8383333086967468, 0.8456666469573975, 0.8343333601951599, 0.8443333506584167, 0.8403333425521851, 0.8293333053588867, 0.8243333101272583]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 6, 3, 1, 3, 2, 3, 8, 0, 4, 9, 9], [0, 0, 1, 0, 2, 1], [0, 39, 39, 4, 11], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 8, 6, 3, 5, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [32], [1], [0], [6], [0]], "fitness": -0.6691428422927856, "mapping_values": [1, 18, 12, 6, 5, 7, 4, 3, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(tf.math.pow(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.336556911468506, 4.693789005279541, 2.3434431552886963, 2.0526816844940186, 1.8655526638031006, 1.7459394931793213, 1.6944299936294556, 1.8316524028778076, 1.7950836420059204, 1.5225101709365845, 1.4680858850479126, 1.3001182079315186, 1.45852792263031, 3.368290901184082, 2.3678154945373535, 2.3232429027557373, 2.3138229846954346], "accuracy": [0.20036983489990234, 0.16695284843444824, 0.12032756209373474, 0.28860124945640564, 0.3741909861564636, 0.41064587235450745, 0.43811914324760437, 0.38422930240631104, 0.3937392830848694, 0.4663848876953125, 0.46651697158813477, 0.5211992859840393, 0.4768194556236267, 0.23022057116031647, 0.14251750707626343, 0.09972262382507324, 0.10527011007070541], "val_loss": [2.2750260829925537, 2.397458791732788, 2.1212193965911865, 2.1057746410369873, 1.686754584312439, 1.5437403917312622, 1.4821412563323975, 1.8548638820648193, 1.5568522214889526, 1.012778401374817, 1.187940239906311, 0.8801198601722717, 1.9598450660705566, 2.364701509475708, 2.314168691635132, 2.305894613265991, 2.3033039569854736], "val_accuracy": [0.20033332705497742, 0.08799999952316284, 0.2626666724681854, 0.34166666865348816, 0.3959999978542328, 0.5306666493415833, 0.5266666412353516, 0.32600000500679016, 0.4516666531562805, 0.6146666407585144, 0.5673333406448364, 0.6613333225250244, 0.5703333616256714, 0.09833333641290665, 0.09866666793823242, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 8, 3, 0, 0, 5], [0, 0, 2, 2, 2, 1, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 4, 1, 3, 8, 2, 0], [0, 0, 2, 0, 3, 1, 2], [0, 76, 75, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 2, 16, 9, 7, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(grad)))), grad)), tf.math.square(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1328754425048828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 5, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 17, 39, 79], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 5, 3, 5, 2, 8], [0, 0, 3, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309908151626587, 2.309661388397217, 2.310950517654419, 2.3086023330688477, 2.309546709060669, 2.309720993041992], "accuracy": [0.09034473448991776, 0.09298639744520187, 0.09047681838274002, 0.09351472556591034, 0.09377889335155487, 0.09206181764602661], "val_loss": [2.3087120056152344, 2.3087120056152344, 2.3087120056152344, 2.3087120056152344, 2.3087120056152344, 2.3087120056152344], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 8, 8, 0], [0, 0, 2, 0, 0, 3, 0], [0, 0, 39, 61], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 0, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 54, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.07742857187986374, "mapping_values": [1, 15, 9, 6, 4, 10, 5, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.165166999834508e+24, 3.6828460492255516e+24, 3.7006454278744244e+24, 3.7743943577596105e+24, 3.7388863930303527e+24, 3.637755577410754e+24], "accuracy": [0.09932637959718704, 0.10276053100824356, 0.1014397069811821, 0.10038304328918457, 0.09826971590518951, 0.10777968913316727], "val_loss": [2.54175957209387e+24, 2.54175957209387e+24, 2.54175957209387e+24, 2.54175957209387e+24, 2.54175957209387e+24, 2.54175957209387e+24], "val_accuracy": [0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928]}}]