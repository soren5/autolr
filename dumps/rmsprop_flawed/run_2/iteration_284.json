[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 6, 8], [0, 0, 2, 0, 3, 1, 0, 2, 0], [0, 27, 16, 0, 59], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [43], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "mapping_values": [1, 4, 2, 2, 2, 20, 11, 9, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), beta), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308558225631714, 2.2932698726654053, 2.271198034286499, 2.2419979572296143, 2.1973605155944824, 2.12953782081604, 2.0110623836517334, 1.82124924659729, 1.5694738626480103, 1.3686453104019165, 1.2675117254257202, 1.240250825881958, 1.1306284666061401, 1.0043543577194214, 0.903732419013977, 0.8693597912788391, 0.8615122437477112, 0.8125714659690857, 0.7906671762466431, 0.7664443254470825, 0.7545346617698669, 0.7339440584182739, 0.7003361582756042, 0.6961185932159424, 0.6824377775192261, 0.6720884442329407, 0.6582827568054199, 0.6543256640434265, 0.6413868069648743, 0.6259960532188416, 0.6066803336143494, 0.6172447204589844, 0.6011952757835388, 0.5930231213569641, 0.5817418098449707, 0.568530261516571, 0.5704209208488464, 0.5582995414733887, 0.5589035153388977, 0.5454093217849731, 0.5469310879707336, 0.5364400148391724, 0.5322096943855286, 0.524937093257904, 0.5241782665252686, 0.515637218952179, 0.5128133893013, 0.5022169947624207, 0.5034046769142151, 0.5058623552322388, 0.4883720278739929, 0.4890446364879608, 0.4806981682777405, 0.48831707239151, 0.47714763879776, 0.47307294607162476, 0.4719679355621338, 0.4702225625514984, 0.4665234684944153, 0.46192607283592224, 0.45835649967193604, 0.4460948407649994, 0.4463278651237488, 0.4494394361972809, 0.43902742862701416, 0.4328816533088684, 0.43048912286758423, 0.4376509189605713, 0.43288952112197876, 0.4272594451904297, 0.4304434061050415, 0.4148002564907074, 0.4152751863002777, 0.4175390899181366, 0.4169467091560364, 0.4105132520198822, 0.408044695854187, 0.4047321379184723, 0.39512965083122253, 0.4000808000564575, 0.39712727069854736, 0.394087016582489, 0.39297980070114136, 0.3896082043647766, 0.38206422328948975, 0.3908489942550659, 0.38292261958122253, 0.3823308050632477, 0.37670183181762695, 0.37343165278434753, 0.37533271312713623, 0.3672243654727936], "accuracy": [0.09285431355237961, 0.12323339283466339, 0.18478403985500336, 0.26720380783081055, 0.33483028411865234, 0.37841764092445374, 0.4107779562473297, 0.44049662351608276, 0.4880464971065521, 0.5172368288040161, 0.5515784025192261, 0.5811649560928345, 0.6218464970588684, 0.6487914323806763, 0.6676793098449707, 0.687491774559021, 0.6959450244903564, 0.7003037929534912, 0.7013604640960693, 0.7143045663833618, 0.7228899598121643, 0.7239466309547424, 0.7341170310974121, 0.7415136694908142, 0.7429665923118591, 0.7491744756698608, 0.7483819723129272, 0.7534011602401733, 0.7606657147407532, 0.7629110813140869, 0.7672698497772217, 0.7672698497772217, 0.7721568942070007, 0.7784969210624695, 0.7769119143486023, 0.7844406366348267, 0.7833839654922485, 0.7913089394569397, 0.7930260300636292, 0.7961959838867188, 0.7943468689918518, 0.7973847389221191, 0.8018755912780762, 0.8072909712791443, 0.8031964302062988, 0.8057059645652771, 0.8055738806724548, 0.8109893202781677, 0.8153480291366577, 0.8120459914207458, 0.8182538747787476, 0.8149517774581909, 0.8212917447090149, 0.8195747137069702, 0.8202351331710815, 0.8272355198860168, 0.8253863453865051, 0.8284242749214172, 0.8293488025665283, 0.8290846943855286, 0.8359529972076416, 0.8347642421722412, 0.8345000743865967, 0.8318583965301514, 0.837537944316864, 0.8461233377456665, 0.8449346423149109, 0.841500461101532, 0.8412362933158875, 0.8494254350662231, 0.8408400416374207, 0.8494254350662231, 0.8492933511734009, 0.8475762605667114, 0.8491612672805786, 0.8510104417800903, 0.8491612672805786, 0.8531237840652466, 0.8603883385658264, 0.8524633646011353, 0.856689989566803, 0.859199583530426, 0.8535200357437134, 0.8584070801734924, 0.8615770936012268, 0.8628978729248047, 0.8627657890319824, 0.8609166741371155, 0.8667283058166504, 0.8648791313171387, 0.8621054291725159, 0.8664641380310059], "val_loss": [2.3001351356506348, 2.279890537261963, 2.2516705989837646, 2.2130908966064453, 2.154728889465332, 2.055997371673584, 1.8842350244522095, 1.6101305484771729, 1.282747507095337, 1.043868064880371, 0.9355270266532898, 0.8719838261604309, 0.8235858678817749, 0.7674049735069275, 0.7469103932380676, 0.7580904960632324, 0.7410033345222473, 0.6984293460845947, 0.6648873090744019, 0.6542308926582336, 0.6370000243186951, 0.6260307431221008, 0.618401825428009, 0.6150171756744385, 0.6058703064918518, 0.6014773845672607, 0.5898323059082031, 0.5818867087364197, 0.5731115937232971, 0.56040358543396, 0.5528628826141357, 0.5468345284461975, 0.541627049446106, 0.5386232733726501, 0.5358405113220215, 0.5309366583824158, 0.5252777934074402, 0.5212076306343079, 0.5150134563446045, 0.5097557902336121, 0.5056036114692688, 0.5001273155212402, 0.4964442849159241, 0.4926430583000183, 0.4885912239551544, 0.4854831397533417, 0.4816967844963074, 0.478128582239151, 0.4760449230670929, 0.472191721200943, 0.4683753550052643, 0.4658953547477722, 0.4628259241580963, 0.4602394104003906, 0.45866280794143677, 0.4567693769931793, 0.4543036222457886, 0.45134884119033813, 0.4478026032447815, 0.4445295035839081, 0.4407159686088562, 0.4374839663505554, 0.4360600709915161, 0.43358248472213745, 0.43265318870544434, 0.4312707185745239, 0.4285430610179901, 0.4269729554653168, 0.4248315095901489, 0.42326730489730835, 0.4217867851257324, 0.41793110966682434, 0.41535595059394836, 0.41364315152168274, 0.41211897134780884, 0.4118386209011078, 0.41012704372406006, 0.4070735275745392, 0.40520596504211426, 0.4029257893562317, 0.40143415331840515, 0.40162891149520874, 0.39930978417396545, 0.397051602602005, 0.39569079875946045, 0.3946087956428528, 0.39353233575820923, 0.39351439476013184, 0.39245450496673584, 0.39043518900871277, 0.3890242576599121, 0.38751456141471863], "val_accuracy": [0.10599999874830246, 0.1860000044107437, 0.4090000092983246, 0.45633333921432495, 0.4620000123977661, 0.47566667199134827, 0.5223333239555359, 0.5996666550636292, 0.6439999938011169, 0.6576666831970215, 0.6643333435058594, 0.6803333163261414, 0.7009999752044678, 0.7153333425521851, 0.7350000143051147, 0.7283333539962769, 0.7390000224113464, 0.7379999756813049, 0.7480000257492065, 0.7549999952316284, 0.7573333382606506, 0.7620000243186951, 0.7713333368301392, 0.7703333497047424, 0.7726666927337646, 0.7696666717529297, 0.781000018119812, 0.7823333144187927, 0.7816666960716248, 0.7829999923706055, 0.7839999794960022, 0.7883333563804626, 0.7973333597183228, 0.79666668176651, 0.7996666431427002, 0.7986666560173035, 0.8013333082199097, 0.8046666383743286, 0.8066666722297668, 0.8086666464805603, 0.8116666674613953, 0.8130000233650208, 0.8130000233650208, 0.8119999766349792, 0.8153333067893982, 0.8196666836738586, 0.8220000267028809, 0.8246666789054871, 0.8246666789054871, 0.8270000219345093, 0.8330000042915344, 0.8306666612625122, 0.8336666822433472, 0.8323333263397217, 0.828000009059906, 0.8299999833106995, 0.8343333601951599, 0.8356666564941406, 0.8349999785423279, 0.8336666822433472, 0.8343333601951599, 0.8370000123977661, 0.8389999866485596, 0.843666672706604, 0.8420000076293945, 0.8416666388511658, 0.8453333377838135, 0.8433333039283752, 0.8456666469573975, 0.8479999899864197, 0.8463333249092102, 0.8486666679382324, 0.8473333120346069, 0.8513333201408386, 0.8539999723434448, 0.856333315372467, 0.8550000190734863, 0.8543333411216736, 0.8539999723434448, 0.8550000190734863, 0.8566666841506958, 0.8576666712760925, 0.859333336353302, 0.8603333234786987, 0.8603333234786987, 0.8586666584014893, 0.8633333444595337, 0.862333357334137, 0.862333357334137, 0.8616666793823242, 0.859333336353302, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5474687814712524, 0.8262325525283813, 0.6888263821601868, 0.6314159035682678, 0.5872055888175964, 0.5533018708229065, 0.5216230154037476, 0.5204821825027466, 0.5108323693275452, 0.4986325204372406, 0.48244166374206543, 0.4960757791996002, 0.4896761178970337, 0.4946354925632477, 0.5306630730628967, 0.5506242513656616, 0.500392496585846, 0.469282865524292, 0.4779271185398102, 0.44877833127975464, 0.49988213181495667, 0.5203559398651123, 0.47982117533683777, 0.48773205280303955], "accuracy": [0.4527803361415863, 0.7150970697402954, 0.7573636174201965, 0.7675340175628662, 0.7815347909927368, 0.7980451583862305, 0.8074230551719666, 0.8090080618858337, 0.8251221776008606, 0.824329674243927, 0.8244617581367493, 0.8294808864593506, 0.82683926820755, 0.8409721255302429, 0.8309338092803955, 0.8162726163864136, 0.8374059200286865, 0.8345000743865967, 0.8448025584220886, 0.847840428352356, 0.8323867321014404, 0.8500858545303345, 0.8391229510307312, 0.8339717388153076], "val_loss": [0.7657651901245117, 0.6400620937347412, 0.5479331016540527, 0.5261155366897583, 0.4991632103919983, 0.49202775955200195, 0.5358388423919678, 0.49211135506629944, 0.5163825750350952, 0.531529426574707, 0.5300625562667847, 0.5831092000007629, 0.5879868865013123, 0.6206327080726624, 0.5980555415153503, 0.5750381946563721, 0.5385461449623108, 0.5705716013908386, 0.5765652656555176, 0.5595204830169678, 0.6311502456665039, 0.645164966583252, 0.5289195775985718, 0.5611974000930786], "val_accuracy": [0.7363333106040955, 0.7760000228881836, 0.7956666946411133, 0.7973333597183228, 0.812666654586792, 0.8199999928474426, 0.8196666836738586, 0.8339999914169312, 0.8303333520889282, 0.8363333344459534, 0.8383333086967468, 0.8213333487510681, 0.8410000205039978, 0.8323333263397217, 0.8320000171661377, 0.8426666855812073, 0.8356666564941406, 0.8453333377838135, 0.8510000109672546, 0.843666672706604, 0.8510000109672546, 0.8476666808128357, 0.8426666855812073, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 1, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [24, 72, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 4, 8, 0, 2], [0, 0, 2, 0, 3, 1, 0, 5], [0, 38, 57, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [3, 6, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 14, 8, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 9, 1, 3, 2, 2, 8, 0], [0, 0, 1, 2, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2], [3, 0, 2, 0, 3, 3, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 13, 7, 6, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3, 1, 3, 8, 0], [0, 0, 1, 2, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310622215270996, 2.310255289077759, 2.309462785720825, 2.309746026992798, 2.3103091716766357, 2.3111367225646973], "accuracy": [0.09034473448991776, 0.09034473448991776, 0.09457138925790787, 0.08994849026203156, 0.09496764093637466, 0.09245806187391281], "val_loss": [2.308025360107422, 2.308025360107422, 2.308025360107422, 2.308025360107422, 2.308025360107422, 2.308025360107422], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]