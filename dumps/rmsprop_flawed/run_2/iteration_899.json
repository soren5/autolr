[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5209344625473022, 0.941236674785614, 0.7358626127243042, 0.640348494052887, 0.5881878733634949, 0.5595429539680481, 0.5322282314300537, 0.511705219745636, 0.5136902928352356, 0.4956226050853729, 0.48655226826667786, 0.47306352853775024, 0.4530651569366455, 0.4494778513908386, 0.44142913818359375, 0.4786220192909241, 0.48389413952827454, 0.46828970313072205], "accuracy": [0.4908202290534973, 0.6956809163093567, 0.7298903465270996, 0.7540615797042847, 0.7737419009208679, 0.796328067779541, 0.805177628993988, 0.8026680946350098, 0.8170651197433472, 0.8185180425643921, 0.8274996876716614, 0.8271034359931946, 0.8345000743865967, 0.8376700282096863, 0.8446704745292664, 0.8248580098152161, 0.8334434032440186, 0.8389908671379089], "val_loss": [1.027949333190918, 0.6756175756454468, 0.5772039890289307, 0.5305080413818359, 0.5304248929023743, 0.5265070796012878, 0.5168414115905762, 0.47865381836891174, 0.48125821352005005, 0.4741842448711395, 0.49353262782096863, 0.49387189745903015, 0.49708759784698486, 0.4905048906803131, 0.5144376754760742, 0.5054458975791931, 0.5244278907775879, 0.5674771666526794], "val_accuracy": [0.6713333129882812, 0.765333354473114, 0.7816666960716248, 0.7993333339691162, 0.8059999942779541, 0.8206666707992554, 0.8136666417121887, 0.8336666822433472, 0.8223333358764648, 0.8339999914169312, 0.8266666531562805, 0.8320000171661377, 0.8450000286102295, 0.8413333296775818, 0.8413333296775818, 0.8366666436195374, 0.8423333168029785, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3, 2, 3, 9, 0], [0, 0, 2, 0, 0, 3, 0], [0, 0, 39, 79, 26], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 6, 8], [0, 0, 3, 3, 0, 1, 0], [0, 21, 16, 82], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8040000200271606, "mapping_values": [1, 13, 8, 5, 5, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30464768409729, 2.273958683013916, 2.2147469520568848, 2.091413974761963, 1.7915964126586914, 1.416298270225525, 1.3370808362960815, 1.2291970252990723, 0.9651786088943481, 0.9093603491783142, 0.8969488143920898, 0.8466463088989258, 0.8107143044471741, 0.8019524812698364, 0.779558002948761, 0.7401019930839539, 0.7133874893188477, 0.7098506093025208, 0.6945017576217651, 0.6721570491790771, 0.6682718992233276, 0.6636813282966614, 0.6310068368911743, 0.6368076801300049, 0.6031253337860107, 0.5986946821212769, 0.6003077030181885, 0.588737964630127, 0.5666168332099915, 0.5601853132247925, 0.5637885332107544, 0.538916289806366, 0.5387666821479797, 0.536736786365509, 0.5289971828460693, 0.5134968161582947, 0.519960880279541, 0.5101606249809265, 0.5253162384033203, 0.5044673681259155, 0.4837876558303833, 0.48790690302848816, 0.48753833770751953, 0.48037227988243103, 0.46983271837234497, 0.479599267244339, 0.46278658509254456, 0.4622693359851837, 0.4517901837825775, 0.4495958387851715, 0.4425928592681885, 0.4466913640499115, 0.44362491369247437, 0.431094765663147, 0.4270012378692627, 0.4248248040676117, 0.4186558127403259, 0.41627374291419983, 0.4124380648136139, 0.41755709052085876, 0.4076797068119049], "accuracy": [0.09826971590518951, 0.17699114978313446, 0.3156782388687134, 0.39730551838874817, 0.45106327533721924, 0.5031039714813232, 0.5610883831977844, 0.6214502453804016, 0.6597543358802795, 0.6709813475608826, 0.6753401160240173, 0.6866992712020874, 0.7009642124176025, 0.7132478952407837, 0.7152291536331177, 0.7047945857048035, 0.7224937081336975, 0.7310791015625, 0.7354378700256348, 0.7392682433128357, 0.7434949278831482, 0.7442874312400818, 0.7572315335273743, 0.7605336308479309, 0.7703077793121338, 0.7675340175628662, 0.7729493975639343, 0.780610203742981, 0.7865539789199829, 0.7917051911354065, 0.7872143983840942, 0.7901201844215393, 0.7996301651000977, 0.8004226684570312, 0.8014793395996094, 0.7993659973144531, 0.7948752045631409, 0.8020076751708984, 0.8021397590637207, 0.8113855719566345, 0.8193105459213257, 0.8096684813499451, 0.809140145778656, 0.8140271902084351, 0.8230088353157043, 0.8214238286018372, 0.8238013386726379, 0.8265751004219055, 0.8247259259223938, 0.82683926820755, 0.829216718673706, 0.8272355198860168, 0.8256505131721497, 0.8317263126373291, 0.8286884427070618, 0.837141752243042, 0.8388587832450867, 0.8433496356010437, 0.8426892161369324, 0.835160493850708, 0.8405758738517761], "val_loss": [2.287139415740967, 2.2391793727874756, 2.153163194656372, 1.9350769519805908, 1.4373294115066528, 1.0174736976623535, 0.9406145811080933, 0.8560935854911804, 0.7677019834518433, 0.8185389637947083, 0.731319010257721, 0.6985821723937988, 0.6861088871955872, 0.6800335049629211, 0.6628209352493286, 0.6435949802398682, 0.6409377455711365, 0.6300055384635925, 0.6260676980018616, 0.6059540510177612, 0.6038596034049988, 0.5769897699356079, 0.5752922892570496, 0.5636445879936218, 0.5529667735099792, 0.5521100163459778, 0.5440927147865295, 0.5425155162811279, 0.5242465734481812, 0.5246140360832214, 0.5199438333511353, 0.5146809220314026, 0.5195674896240234, 0.5171536803245544, 0.49988093972206116, 0.4996325671672821, 0.5017155408859253, 0.5046629905700684, 0.50227290391922, 0.48707470297813416, 0.48183315992355347, 0.48589566349983215, 0.48392191529273987, 0.4816799461841583, 0.4830789268016815, 0.4751376211643219, 0.4646247923374176, 0.4570111930370331, 0.45291152596473694, 0.4526175558567047, 0.4586503207683563, 0.4654850959777832, 0.4562748968601227, 0.4514221251010895, 0.45238998532295227, 0.45136287808418274, 0.46072152256965637, 0.4614793360233307, 0.45242130756378174, 0.4472258687019348, 0.4460967481136322], "val_accuracy": [0.15600000321865082, 0.42500001192092896, 0.46166667342185974, 0.468666672706604, 0.5916666388511658, 0.6503333449363708, 0.6669999957084656, 0.6990000009536743, 0.7250000238418579, 0.7103333473205566, 0.7176666855812073, 0.7333333492279053, 0.7353333234786987, 0.7513333559036255, 0.734666645526886, 0.7609999775886536, 0.7613333463668823, 0.7556666731834412, 0.7516666650772095, 0.7676666378974915, 0.7666666507720947, 0.7789999842643738, 0.777999997138977, 0.7816666960716248, 0.7923333048820496, 0.7993333339691162, 0.7943333387374878, 0.7929999828338623, 0.7943333387374878, 0.8053333163261414, 0.8026666641235352, 0.8040000200271606, 0.8073333501815796, 0.8096666932106018, 0.8226666450500488, 0.8176666498184204, 0.8149999976158142, 0.812666654586792, 0.8143333196640015, 0.8259999752044678, 0.8333333134651184, 0.8293333053588867, 0.8299999833106995, 0.8333333134651184, 0.8356666564941406, 0.8396666646003723, 0.8423333168029785, 0.8426666855812073, 0.8413333296775818, 0.843666672706604, 0.8413333296775818, 0.8433333039283752, 0.8473333120346069, 0.8429999947547913, 0.8453333377838135, 0.8489999771118164, 0.8429999947547913, 0.8416666388511658, 0.8460000157356262, 0.8483333587646484, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39, 54], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 6, 5], [0, 0, 2, 0, 3, 1, 0], [72, 15, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10428571701049805, "mapping_values": [1, 11, 6, 5, 4, 10, 5, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.2175369403423e+20, 1.1504338327791685e+30, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09906221181154251, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.926789846095951e+22, 1.4267384681049248e+32, NaN, NaN, NaN, NaN], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [3, 2, 3, 1, 1, 5, 4, 2, 0, 8], [0, 0, 1, 0, 2, 3, 3, 2], [0, 0, 39, 79], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 4, 6, 5, 8, 3, 2, 0, 2, 9, 9, 1, 1, 8, 8, 6, 4], [0, 0, 2, 0, 3, 1, 3, 2, 4, 0, 0, 3, 0, 4, 3], [67, 27, 16, 96, 54, 75, 70, 32, 49], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [3, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 40, 25, 15, 8, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.negative(grad), grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 9, 1, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 71], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 5, 3, 1, 6, 8, 8, 5, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 12, 7, 5, 4, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108155727386475, 2.3103153705596924, 2.3088834285736084, 2.310131311416626, 2.310681104660034, 2.3098151683807373], "accuracy": [0.08915598690509796, 0.09391097724437714, 0.09509972482919693, 0.09509972482919693, 0.09192973375320435, 0.09298639744520187], "val_loss": [2.308662176132202, 2.308662176132202, 2.308662176132202, 2.308662176132202, 2.308662176132202, 2.308662176132202], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]