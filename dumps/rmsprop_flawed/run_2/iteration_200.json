[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4998435974121094, 0.7662746906280518, 0.658686637878418, 0.6122828722000122, 0.5813229084014893, 0.5412221550941467, 0.5147916078567505, 0.48227807879447937, 0.4777618944644928, 0.496324360370636, 0.5416660904884338, 0.5495996475219727, 0.5295690894126892, 0.546955406665802], "accuracy": [0.4885748326778412, 0.7260599732398987, 0.7588165402412415, 0.7696473598480225, 0.7862898111343384, 0.8026680946350098, 0.8120459914207458, 0.817989706993103, 0.8226125836372375, 0.8203672170639038, 0.8132346868515015, 0.8035926818847656, 0.817461371421814, 0.8062343001365662], "val_loss": [0.733924150466919, 0.6122869253158569, 0.5353390574455261, 0.5093736052513123, 0.47626155614852905, 0.4677293598651886, 0.4353524446487427, 0.45830729603767395, 0.46933284401893616, 0.5942010283470154, 0.506540834903717, 0.5202463269233704, 0.5424165725708008, 0.5077269077301025], "val_accuracy": [0.7536666393280029, 0.7826666831970215, 0.7933333516120911, 0.8073333501815796, 0.8370000123977661, 0.8389999866485596, 0.8463333249092102, 0.8416666388511658, 0.8513333201408386, 0.8353333473205566, 0.8460000157356262, 0.8389999866485596, 0.840666651725769, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 1, 3, 4, 7, 1, 6, 0, 9], [0, 0, 1, 2, 2, 3, 0, 2], [0, 83, 39, 97], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 5], [2, 0, 2, 5, 3, 1, 0], [0, 27, 16, 68], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 4, 5, 8, 8], [2, 0, 1], [34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 4, 17, 10, 7, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))), tf.math.sqrt(grad)), grad), tf.math.square(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 2, 5, 7, 3, 9], [0, 0, 0, 1, 2, 3, 0, 2, 2], [0, 39, 39, 79, 10], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 1, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 3, 0], [0, 76, 16, 34], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 5, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), grad)), tf.math.negative(grad)), tf.math.add(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 6, 3, 4, 1, 2, 1, 8, 2, 2, 8, 2, 6, 6, 6, 0, 1, 3, 3, 7, 0, 3, 0, 5, 9], [0, 0, 1, 0, 2, 0, 2, 1, 1, 1, 1, 1, 0, 1, 3, 3], [0, 39, 39, 87, 52], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 6, 3, 8, 2, 3, 7], [0, 0, 2, 0, 3, 1, 0, 4, 2], [0, 76, 61, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [3], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 26, 14, 12, 4, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, alpha), alpha))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3093557357788086, 2.31018328666687, 2.3102071285247803, 2.3089845180511475, 2.3100016117095947, 2.3099029064178467], "accuracy": [0.09681680053472519, 0.09179764986038208, 0.09126931428909302, 0.0940430611371994, 0.09668471664190292, 0.09285431355237961], "val_loss": [2.308361053466797, 2.308361053466797, 2.308361053466797, 2.308361053466797, 2.308361053466797, 2.308361053466797], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 0, 0], [0, 38, 74, 58], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 9, 1, 6, 3, 8, 2], [0, 0, 1, 0, 3, 1, 3], [0, 27, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3101632595062256, 2.3108859062194824, 2.3093228340148926, 2.310075521469116, 2.3093645572662354, 2.310093402862549], "accuracy": [0.09430722147226334, 0.08849557489156723, 0.09655263274908066, 0.0940430611371994, 0.09840179979801178, 0.09245806187391281], "val_loss": [2.309621810913086, 2.309621810913086, 2.309621810913086, 2.309621810913086, 2.309621810913086, 2.309621810913086], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]