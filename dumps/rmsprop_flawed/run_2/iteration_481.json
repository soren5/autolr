[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.645815372467041, 0.8574318289756775, 0.7116197347640991, 0.6409668326377869, 0.5851856470108032, 0.5485337972640991, 0.5187969207763672, 0.5134069919586182, 0.5180604457855225, 0.48142439126968384, 0.49952688813209534, 0.4959941506385803, 0.49741822481155396, 0.47887954115867615, 0.48826074600219727, 0.5048500895500183, 0.5134491920471191, 0.5560330152511597, 0.5938435196876526, 0.6110072135925293, 0.5861138701438904], "accuracy": [0.4773477613925934, 0.7008321285247803, 0.7378153204917908, 0.7580240368843079, 0.776251494884491, 0.7928939461708069, 0.8137630224227905, 0.8129705190658569, 0.806630551815033, 0.8259146809577942, 0.8232730031013489, 0.8187822103500366, 0.8224804997444153, 0.8300092220306396, 0.8333113193511963, 0.8206313848495483, 0.816008448600769, 0.8245938420295715, 0.8062343001365662, 0.8101968169212341, 0.807158887386322], "val_loss": [0.8156185150146484, 0.6437265872955322, 0.5637921690940857, 0.519208550453186, 0.4954195022583008, 0.4864242672920227, 0.5101163983345032, 0.4720613658428192, 0.4935469627380371, 0.47808584570884705, 0.4750986397266388, 0.4711361229419708, 0.5496785640716553, 0.4790462553501129, 0.5141391754150391, 0.5364717841148376, 0.517095148563385, 0.5352309346199036, 0.6331081390380859, 0.5865485668182373, 0.6237100958824158], "val_accuracy": [0.7303333282470703, 0.7586666941642761, 0.781000018119812, 0.7986666560173035, 0.8133333325386047, 0.8326666951179504, 0.8259999752044678, 0.831333339214325, 0.8256666660308838, 0.8396666646003723, 0.8263333439826965, 0.8303333520889282, 0.8360000252723694, 0.8423333168029785, 0.8346666693687439, 0.8463333249092102, 0.8353333473205566, 0.8289999961853027, 0.8336666822433472, 0.8159999847412109, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 4, 2, 2, 8, 0, 9], [0, 0, 1, 0, 3, 2, 0], [0, 39, 39, 5], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 4, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 95, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [0], [1], [0], [4], [0]], "fitness": -0.328000009059906, "mapping_values": [1, 16, 10, 6, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3232946395874023, 2.472766876220703, 2.2540175914764404, 2.288886785507202, 2.3070974349975586, 2.309525966644287, 2.3035874366760254, 2.3032164573669434], "accuracy": [0.19997358322143555, 0.17500990629196167, 0.1950865089893341, 0.14000792801380157, 0.16523577272891998, 0.09826971590518951, 0.09760929644107819, 0.09826971590518951], "val_loss": [2.272270679473877, 2.2329354286193848, 1.9646031856536865, 2.3002171516418457, 2.3184447288513184, 2.3043179512023926, 2.303013324737549, 2.3027710914611816], "val_accuracy": [0.1003333330154419, 0.2150000035762787, 0.3343333303928375, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 6, 3, 1, 3, 2, 3, 8, 0, 8, 5, 5, 2], [0, 0, 2, 0, 2, 2, 0, 2, 1], [18, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 4, 3, 8, 2, 8, 6, 1, 9, 5, 6, 8, 6, 0, 0, 7, 2, 4, 7, 4, 3, 1, 8, 0, 8, 1, 1, 9, 4, 6, 8], [0, 0, 0, 0, 3, 1, 3, 1, 2, 3, 2, 0, 1, 1, 2, 1, 4, 1, 0, 2], [0, 76, 16, 0, 92, 47, 8, 26], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 4, 54, 34, 20, 8, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, alpha))))), tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.negative(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, tf.math.sqrt(tf.math.negative(alpha))), beta)), tf.math.sqrt(alpha)), tf.math.subtract(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta)))))))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 6, 0, 1, 3, 2, 3, 8, 8, 4, 0, 1, 5, 7, 8, 3, 4, 5, 4, 9, 9, 3, 6, 2, 9, 2, 1, 9], [2, 0, 1, 0, 2, 3, 0, 2, 2, 0, 0, 3, 3], [0, 0, 39, 79, 31, 34, 51, 79, 54], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 8, 8], [0, 0, 2, 0, 3, 0, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 41, 28, 13, 9, 14, 8, 6, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(grad), tf.math.subtract(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.square(grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105340003967285, 2.309769630432129, 2.308610200881958, 2.310281276702881, 2.3101320266723633, 2.3111162185668945], "accuracy": [0.08757099509239197, 0.09259014576673508, 0.09813763201236725, 0.0952318087220192, 0.08558975160121918, 0.09311848133802414], "val_loss": [2.3085079193115234, 2.3085079193115234, 2.3085079193115234, 2.3085079193115234, 2.3085079193115234, 2.3085079193115234], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 0, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 28, 79], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 4, 6], [0, 0, 2, 0, 3, 1, 0], [0, 31, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 15, 9, 6, 3, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309309482574463, 2.3089723587036133, 2.3102505207061768, 2.3103082180023193, 2.310243844985962, 2.3109323978424072], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09285431355237961, 0.09655263274908066, 0.09100515395402908, 0.09351472556591034], "val_loss": [2.3090596199035645, 2.3090596199035645, 2.3090596199035645, 2.3090596199035645, 2.3090596199035645, 2.3090596199035645], "val_accuracy": [0.08399999886751175, 0.08399999886751175, 0.08399999886751175, 0.08399999886751175, 0.08399999886751175, 0.08399999886751175]}}]