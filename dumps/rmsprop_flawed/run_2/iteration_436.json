[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5494122505187988, 0.782953679561615, 0.6393861174583435, 0.5689206719398499, 0.5273149609565735, 0.4920857548713684, 0.45415249466896057, 0.4588364064693451, 0.4542156755924225, 0.4410687983036041, 0.4587705433368683, 0.4549044966697693, 0.4418494999408722, 0.4647345244884491, 0.4825054705142975, 0.4927152395248413, 0.5030062198638916, 0.4575020670890808, 0.45004069805145264, 0.46741998195648193, 0.4383988380432129, 0.4797566831111908, 0.47237253189086914, 0.5076195597648621, 0.5792394280433655, 0.5430622100830078, 0.6225805878639221], "accuracy": [0.49227315187454224, 0.7283053994178772, 0.767401933670044, 0.7915731072425842, 0.8072909712791443, 0.8253863453865051, 0.8342359066009521, 0.8385946154594421, 0.8441421389579773, 0.8413683772087097, 0.8466516733169556, 0.8408400416374207, 0.8598600029945374, 0.8401796221733093, 0.8462554216384888, 0.8391229510307312, 0.8457271456718445, 0.8519350290298462, 0.8544445633888245, 0.8510104417800903, 0.8551049828529358, 0.8514066934585571, 0.8618412613868713, 0.8338396549224854, 0.8187822103500366, 0.848368763923645, 0.819442629814148], "val_loss": [0.854869544506073, 0.5754818916320801, 0.49785494804382324, 0.4747001826763153, 0.4638705253601074, 0.46106037497520447, 0.43743017315864563, 0.4987782835960388, 0.48775285482406616, 0.5213999152183533, 0.5242621302604675, 0.5538958311080933, 0.586511492729187, 0.5305988788604736, 0.545333743095398, 0.6994518041610718, 0.5607183575630188, 0.5858580470085144, 0.5758334994316101, 0.5307933688163757, 0.6416281461715698, 0.5760689377784729, 0.5817726254463196, 0.5544428825378418, 0.5983130931854248, 0.5876274704933167, 0.6813439726829529], "val_accuracy": [0.7213333249092102, 0.7846666574478149, 0.8180000185966492, 0.8183333277702332, 0.8386666774749756, 0.8393333554267883, 0.8486666679382324, 0.8479999899864197, 0.8429999947547913, 0.8456666469573975, 0.846666693687439, 0.8536666631698608, 0.846666693687439, 0.8336666822433472, 0.8523333072662354, 0.8533333539962769, 0.8579999804496765, 0.8413333296775818, 0.8533333539962769, 0.8569999933242798, 0.8546666502952576, 0.859333336353302, 0.8523333072662354, 0.8516666889190674, 0.8429999947547913, 0.8370000123977661, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 8, 9, 0, 7, 2], [0, 0, 0, 0, 0, 3, 0, 3], [0, 1, 39, 79, 18, 54, 32], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [6, 9, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [35, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.39399999380111694, "mapping_values": [1, 22, 14, 8, 7, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.24288272857666, 2.5990235805511475, 2.299952268600464, 2.3036904335021973, 2.2427964210510254, 2.3057785034179688], "accuracy": [0.22454100847244263, 0.1682736724615097, 0.11042134463787079, 0.10579843819141388, 0.24078720808029175, 0.0936468094587326], "val_loss": [2.115436553955078, 2.3087430000305176, 2.237159252166748, 2.2855331897735596, 2.3085145950317383, 2.302973747253418], "val_accuracy": [0.3853333294391632, 0.0989999994635582, 0.24133333563804626, 0.273333340883255, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 9, 3, 2, 3, 8, 0], [0, 2, 0, 0, 2, 3, 0], [0, 39, 39, 79], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 1, 1, 0], [0, 76, 16, 8], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.30142858624458313, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4189043045043945, 2.302617073059082, 2.3271968364715576, 2.2961266040802, 2.3111259937286377, 2.303168296813965, 2.302865743637085, 2.288641929626465, 2.331571340560913, 2.3034021854400635, 2.303399085998535, 2.303082227706909, 2.3030941486358643], "accuracy": [0.19112402200698853, 0.10434553027153015, 0.14581957459449768, 0.16417910158634186, 0.13802668452262878, 0.09945846349000931, 0.09734513610601425, 0.149649977684021, 0.1530841439962387, 0.10130762308835983, 0.09681680053472519, 0.09694888442754745, 0.10381719470024109], "val_loss": [2.3049328327178955, 2.2943787574768066, 2.3724751472473145, 2.3014156818389893, 2.3042097091674805, 2.3021419048309326, 2.2997148036956787, 2.0530266761779785, 2.3034040927886963, 2.302696466445923, 2.302530527114868, 2.3025758266448975, 2.302677631378174], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.10199999809265137, 0.09666666388511658, 0.10066666454076767, 0.09666666388511658, 0.13066667318344116, 0.3050000071525574, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 1, 6, 0], [0, 0, 1, 0, 0, 3, 0, 1], [0, 39, 64, 79, 76], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 1, 2, 8, 5], [0, 0, 3, 0, 3, 1, 0, 2], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.18114285171031952, "mapping_values": [1, 16, 8, 8, 5, 18, 10, 8, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.277384042739868, 2.319118022918701, 2.209228515625, 2.2852559089660645, 2.304656505584717, 2.303316593170166, 2.3020179271698, 2.257213830947876], "accuracy": [0.20538897812366486, 0.16470743715763092, 0.20155857503414154, 0.13247919082641602, 0.10130762308835983, 0.09787346422672272, 0.10606260597705841, 0.18914277851581573], "val_loss": [2.2944698333740234, 2.2918450832366943, 2.252606153488159, 2.3045849800109863, 2.302548408508301, 2.3023407459259033, 2.297893762588501, 2.30437970161438], "val_accuracy": [0.0989999994635582, 0.1456666737794876, 0.17766666412353516, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 1, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 1, 3, 1, 2, 8, 4, 4, 2, 0, 1, 2, 6, 5, 3, 2, 5, 4, 0, 6, 3, 5, 5], [0, 0, 2, 0, 3, 1, 0, 4, 4, 5, 0, 1, 1, 1, 4, 0, 0, 1, 1], [40, 76, 16, 34, 19, 14, 4], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 45, 26, 19, 7, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, alpha))))), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), alpha))), alpha))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]