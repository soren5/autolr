[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5281546115875244, 0.8378459215164185, 0.6899943947792053, 0.6391484141349792, 0.59699547290802, 0.5610329508781433, 0.5407474637031555, 0.5214024186134338, 0.501141369342804, 0.4762280285358429, 0.4753054082393646, 0.5271224975585938, 0.5098906755447388, 0.48296549916267395, 0.5000839829444885, 0.4781497120857239, 0.5376561880111694, 0.5544261932373047, 0.5790361166000366, 0.5972111225128174, 0.6101422905921936], "accuracy": [0.4834235906600952, 0.7127195596694946, 0.7512878179550171, 0.76106196641922, 0.7791573405265808, 0.7931581139564514, 0.7977809906005859, 0.8165367841720581, 0.8148196935653687, 0.8264430165290833, 0.8309338092803955, 0.830669641494751, 0.8232730031013489, 0.8330471515655518, 0.8238013386726379, 0.8348963260650635, 0.8392550349235535, 0.8157442808151245, 0.8290846943855286, 0.8269713521003723, 0.8029322624206543], "val_loss": [0.7999768853187561, 0.6191308498382568, 0.5227431058883667, 0.5367147326469421, 0.5042676329612732, 0.4827064573764801, 0.4949726164340973, 0.4709959626197815, 0.5322543382644653, 0.5021890997886658, 0.6200105547904968, 0.5456199049949646, 0.5826075077056885, 0.5137267112731934, 0.5429375171661377, 0.6463722586631775, 0.5384675860404968, 0.6447014212608337, 0.6165659427642822, 0.5475121140480042, 0.6289415955543518], "val_accuracy": [0.699999988079071, 0.7770000100135803, 0.8046666383743286, 0.8073333501815796, 0.8183333277702332, 0.8180000185966492, 0.8230000138282776, 0.8270000219345093, 0.8246666789054871, 0.8303333520889282, 0.8320000171661377, 0.8193333148956299, 0.8376666903495789, 0.8426666855812073, 0.8296666741371155, 0.8526666760444641, 0.824999988079071, 0.8420000076293945, 0.8396666646003723, 0.8320000171661377, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 86, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 2, 1, 0], [0, 27, 16, 78], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 5, 4, 8], [0, 6, 1, 3], [0], [1], [0], [5], [0]], "fitness": -0.3311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.pow(tf.math.sqrt(alpha), sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.332873821258545, 2.28717303276062, 2.2744290828704834, 2.4261491298675537, 2.3061635494232178, 2.3034985065460205, 2.303225517272949], "accuracy": [0.18663319945335388, 0.15057456493377686, 0.19693566858768463, 0.16483952105045319, 0.09998679161071777, 0.10051512718200684, 0.09655263274908066], "val_loss": [2.302192449569702, 2.0436716079711914, 2.299748420715332, 2.3083882331848145, 2.3038806915283203, 2.3028383255004883, 2.3026480674743652], "val_accuracy": [0.10400000214576721, 0.3230000138282776, 0.10133333504199982, 0.09533333033323288, 0.09533333033323288, 0.10166666656732559, 0.09533333033323288]}, "mapping_values": [1, 1, 1, 0, 1, 13, 7, 6, 3, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 1, 3, 0], [0, 39, 39, 42], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 1, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [0, 77], [1], [0], [2], [0]], "fitness": -0.09628571569919586, "mapping_values": [1, 16, 8, 8, 4, 10, 5, 5, 3, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), alpha), grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1194197403041792.0, 1481695534514176.0, 1328590419394560.0, 1374220017729536.0, 1383818195894272.0, 1369332747599872.0], "accuracy": [0.09166556596755981, 0.09219389408826828, 0.09655263274908066, 0.09338264167308807, 0.09589222073554993, 0.08915598690509796], "val_loss": [1275076066410496.0, 1275076334845952.0, 1275076334845952.0, 1275076334845952.0, 1275076334845952.0, 1275076334845952.0], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 6, 3, 1, 3, 2, 3, 9, 0, 2, 5, 2, 3, 9], [0, 0, 1, 0, 2, 3, 0, 2], [2, 39, 39, 56, 87, 85], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 8, 6, 3, 8, 2, 0], [0, 0, 2, 0, 3, 1, 0], [0, 76, 45, 38], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 22, 14, 8, 6, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(grad, grad))), tf.math.square(tf.math.add(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093228340148926, 2.309741735458374, 2.310399293899536, 2.308497190475464, 2.3077986240386963, 2.310009479522705], "accuracy": [0.09655263274908066, 0.09008057415485382, 0.09655263274908066, 0.09457138925790787, 0.09932637959718704, 0.08717474341392517], "val_loss": [2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656, 2.3083534240722656], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 0, 3, 1, 0], [0, 0, 1, 0, 0, 3, 0], [0, 39, 39, 79, 74], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 8, 8, 5, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [0], [0, 0, 0, 0, 1, 1], [0, 8, 6, 8], [2, 4], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 16, 9, 7, 5, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(beta), grad)))", "other_info": {"loss": [2.310520887374878, 2.3095951080322266, 2.308626174926758, 2.3095152378082275, 2.30883526802063, 2.309750556945801], "accuracy": [0.09259014576673508, 0.08928807079792023, 0.09285431355237961, 0.09272222965955734, 0.09219389408826828, 0.09219389408826828], "val_loss": [2.3080925941467285, 2.3080925941467285, 2.3080925941467285, 2.3080925941467285, 2.3080925941467285, 2.3080925941467285], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]