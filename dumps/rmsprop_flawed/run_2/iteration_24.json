[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5671613216400146, 0.8373063802719116, 0.7190786600112915, 0.677672803401947, 0.6571072340011597, 0.6125234961509705, 0.5966230034828186, 0.5626567602157593, 0.5883789658546448, 0.5939093232154846, 0.5477678775787354, 0.5627859830856323, 0.5525999665260315, 0.5274871587753296, 0.5347971320152283, 0.5316486358642578, 0.5811856389045715, 0.5545132160186768, 0.5267749428749084], "accuracy": [0.47087571024894714, 0.7132478952407837, 0.7449478507041931, 0.7493065595626831, 0.7598732113838196, 0.7765156626701355, 0.787082314491272, 0.7907806038856506, 0.7930260300636292, 0.789459764957428, 0.8067626357078552, 0.7947431206703186, 0.8092722296714783, 0.8144234418869019, 0.8228767514228821, 0.8183859586715698, 0.7971205711364746, 0.8057059645652771, 0.8271034359931946], "val_loss": [0.8525248765945435, 0.7074192762374878, 0.6323073506355286, 0.5848419666290283, 0.5526188015937805, 0.5888926982879639, 0.549257755279541, 0.5477260947227478, 0.567401111125946, 0.5344749093055725, 0.5577775835990906, 0.5283837914466858, 0.5345897674560547, 0.6086426377296448, 0.5361189842224121, 0.6255632042884827, 0.5915029644966125, 0.692824125289917, 0.5959112048149109], "val_accuracy": [0.7066666483879089, 0.7453333139419556, 0.753000020980835, 0.7799999713897705, 0.7919999957084656, 0.7916666865348816, 0.7956666946411133, 0.8009999990463257, 0.812666654586792, 0.7996666431427002, 0.8163333535194397, 0.8176666498184204, 0.8190000057220459, 0.8216666579246521, 0.8140000104904175, 0.8109999895095825, 0.7796666622161865, 0.8199999928474426, 0.8106666803359985]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 3, 3, 5], [0, 0, 2, 0, 2], [0, 39, 97], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 2, 2, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 2, 1, 5, 8, 8, 2, 0], [0, 6, 1, 5, 0], [0, 82], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 8, 4, 4, 3, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [14314379.0, 299407035596800.0, 5.057801338515641e+21, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09906221181154251, 0.10408136248588562, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777], "val_loss": [1055737280.0, 1.877984328600781e+16, 4.3484808843970783e+23, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.09600000083446503, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 7, 3, 1], [0, 0, 0, 3, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [2, 0, 3, 0, 3, 1, 5], [0, 27, 16, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 6, 1, 5, 8, 8], [0, 6, 1], [3], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 5, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 1, 1, 7, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 3, 8, 2], [0, 0, 2, 0, 3, 1, 2], [0, 27, 16, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3112175464630127, 2.3101775646209717, 2.309128522872925, 2.310610294342041, 2.309190034866333, 2.3098859786987305], "accuracy": [0.09074098616838455, 0.08625016361474991, 0.09206181764602661, 0.09192973375320435, 0.09179764986038208, 0.09140139818191528], "val_loss": [2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 3, 1, 3, 0, 1, 7, 7, 7, 6, 0], [0, 0, 1, 2, 2, 1, 3, 3, 0, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 8, 8, 2], [0, 0, 2, 2, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 5, 7, 8, 5, 3, 8, 4, 2, 8, 2, 2, 2], [0, 6, 1, 6, 7, 2, 5, 4, 7, 2], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 23, 12, 11, 3, 11, 6, 5, 2, 25, 15, 10, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.math.subtract(grad, tf.math.add(grad, alpha))), grad), tf.math.add(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.sqrt(beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.add(tf.math.sqrt(tf.math.square(alpha)), tf.math.multiply(grad, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(grad, beta))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095436096191406, 2.3100128173828125, 2.309983491897583, 2.309152603149414, 2.309485673904419, 2.3101255893707275], "accuracy": [0.09100515395402908, 0.09430722147226334, 0.09008057415485382, 0.08981640636920929, 0.08968432247638702, 0.09192973375320435], "val_loss": [2.309009552001953, 2.309009552001953, 2.309009552001953, 2.309009552001953, 2.309009552001953, 2.309009552001953], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]