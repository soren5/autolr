[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8605714440345764, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5848698616027832, 0.8634531497955322, 0.7267534136772156, 0.6388319134712219, 0.5949017405509949, 0.5652888417243958, 0.5312777757644653, 0.5059605240821838, 0.49188661575317383, 0.4750465154647827, 0.4633360207080841, 0.4521574079990387, 0.43985533714294434, 0.4290573298931122, 0.41240397095680237, 0.406855970621109, 0.4072006046772003, 0.3955540359020233, 0.38211870193481445, 0.3747725486755371, 0.3722988963127136, 0.3670109212398529, 0.36135682463645935, 0.3522881865501404, 0.35751911997795105, 0.34448763728141785, 0.3434971272945404, 0.3416890501976013, 0.33151769638061523, 0.3255850076675415, 0.3213435709476471, 0.32207241654396057, 0.3131572902202606], "accuracy": [0.44591203331947327, 0.6925109028816223, 0.7338528633117676, 0.7684586048126221, 0.7825914621353149, 0.7971205711364746, 0.8108572363853455, 0.8162726163864136, 0.8198388814926147, 0.8290846943855286, 0.8397833704948425, 0.8355567455291748, 0.8449346423149109, 0.8466516733169556, 0.8573504090309143, 0.8555012345314026, 0.8562937378883362, 0.8601241707801819, 0.8650112152099609, 0.8692378997802734, 0.8691058158874512, 0.8765024542808533, 0.8673887252807617, 0.8750495314598083, 0.8766345381736755, 0.8786157965660095, 0.8762382864952087, 0.8767666220664978, 0.8864086866378784, 0.8841632604598999, 0.8842953443527222, 0.8908994793891907, 0.8878615498542786], "val_loss": [0.8584741353988647, 0.6581432223320007, 0.6094487309455872, 0.5580034852027893, 0.5117682814598083, 0.5078674554824829, 0.4834854304790497, 0.47689273953437805, 0.45379379391670227, 0.4605327248573303, 0.4379768967628479, 0.45279598236083984, 0.4216359555721283, 0.4329746961593628, 0.4164107143878937, 0.4244106709957123, 0.41172388195991516, 0.40532657504081726, 0.40834710001945496, 0.4001820385456085, 0.3933616578578949, 0.39905664324760437, 0.38959020376205444, 0.4089116156101227, 0.38486355543136597, 0.38582512736320496, 0.38211479783058167, 0.38379165530204773, 0.3860560655593872, 0.3785111904144287, 0.382414847612381, 0.37823498249053955, 0.38005053997039795], "val_accuracy": [0.6946666836738586, 0.7543333172798157, 0.7713333368301392, 0.7986666560173035, 0.8103333115577698, 0.8196666836738586, 0.8256666660308838, 0.8293333053588867, 0.8410000205039978, 0.8336666822433472, 0.8399999737739563, 0.8410000205039978, 0.8510000109672546, 0.8403333425521851, 0.8550000190734863, 0.8500000238418579, 0.8519999980926514, 0.8573333621025085, 0.8543333411216736, 0.8616666793823242, 0.8646666407585144, 0.859000027179718, 0.862333357334137, 0.8479999899864197, 0.8663333058357239, 0.8633333444595337, 0.8663333058357239, 0.8713333606719971, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8686666488647461, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.66203773021698, 0.9299058318138123, 0.7288843989372253, 0.6683775782585144, 0.616397500038147, 0.6031081080436707, 0.5780296325683594, 0.5544133186340332, 0.5794661641120911, 0.5746286511421204, 0.5457558035850525, 0.5120716094970703, 0.5132327675819397, 0.5364513397216797, 0.5385657548904419, 0.5272431969642639, 0.5501797795295715, 0.5009469985961914, 0.5233624577522278, 0.5298101305961609, 0.4983605742454529, 0.5356871485710144, 0.5885005593299866, 0.5507402420043945, 0.5728294849395752], "accuracy": [0.4671773910522461, 0.6687359809875488, 0.7456082701683044, 0.7552502751350403, 0.7716285586357117, 0.7820631265640259, 0.7927618622779846, 0.7954035401344299, 0.7936864495277405, 0.7881389260292053, 0.7950072884559631, 0.8145555257797241, 0.8087438941001892, 0.8215559124946594, 0.8035926818847656, 0.8239334225654602, 0.8150838613510132, 0.8214238286018372, 0.8224804997444153, 0.8215559124946594, 0.8327829837799072, 0.8313300609588623, 0.8016114234924316, 0.8131026029586792, 0.8156121969223022], "val_loss": [0.9432181119918823, 0.6535766124725342, 0.5671090483665466, 0.5587461590766907, 0.5255292654037476, 0.5161222219467163, 0.5194101333618164, 0.5250339508056641, 0.5197056531906128, 0.4802071452140808, 0.5296114087104797, 0.4944780766963959, 0.49934667348861694, 0.46820706129074097, 0.4805646240711212, 0.46988701820373535, 0.46306025981903076, 0.49679356813430786, 0.4778958857059479, 0.48871320486068726, 0.4969446659088135, 0.5355941653251648, 0.5560413599014282, 0.5107085704803467, 0.5144768953323364], "val_accuracy": [0.6463333368301392, 0.7630000114440918, 0.7773333191871643, 0.7873333096504211, 0.7940000295639038, 0.8063333630561829, 0.812666654586792, 0.8103333115577698, 0.8190000057220459, 0.8209999799728394, 0.8180000185966492, 0.8233333230018616, 0.8336666822433472, 0.82833331823349, 0.8349999785423279, 0.8316666483879089, 0.8356666564941406, 0.8360000252723694, 0.8349999785423279, 0.8456666469573975, 0.8429999947547913, 0.8303333520889282, 0.8333333134651184, 0.8270000219345093, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 5, 3, 1, 4, 2, 3, 8, 0, 3, 5], [0, 0, 1, 0, 2, 2, 2, 2], [35, 30, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 3], [2, 0, 3, 0, 3, 1, 0], [0, 27, 44, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 1, 5, 8, 1], [0, 0, 1, 5], [0, 38], [1], [0], [2], [0]], "fitness": -0.7905714511871338, "mapping_values": [1, 3, 2, 1, 1, 15, 8, 7, 3, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9592766761779785, 1.3420741558074951, 0.997694730758667, 0.84428870677948, 0.7867199182510376, 0.7747939229011536, 0.7235117554664612, 0.7229576110839844, 0.7187422513961792, 0.7316481471061707, 0.7408047914505005, 0.7915761470794678, 0.7726284265518188, 0.776551365852356, 0.7802428007125854, 0.7721496820449829, 0.7570696473121643, 0.7750366926193237, 0.8293968439102173, 0.8887543082237244, 0.8876737952232361], "accuracy": [0.3704926669597626, 0.5420684218406677, 0.624620258808136, 0.6724342703819275, 0.7082287669181824, 0.7062475085258484, 0.7240787148475647, 0.7250033020973206, 0.7259278893470764, 0.7207766771316528, 0.722229540348053, 0.7290979027748108, 0.7279091477394104, 0.72672039270401, 0.7234182953834534, 0.7277770638465881, 0.7322678565979004, 0.7343811988830566, 0.7017567157745361, 0.687491774559021, 0.7042662501335144], "val_loss": [1.3095817565917969, 1.0356944799423218, 0.7532399296760559, 0.6858903169631958, 0.6412841081619263, 0.6608812808990479, 0.6368058323860168, 0.6256520748138428, 0.6300331950187683, 0.653944194316864, 0.6818504333496094, 0.6738349795341492, 0.6677196621894836, 0.6512876749038696, 0.645697295665741, 0.6380519866943359, 0.647940993309021, 0.656406819820404, 0.7194223403930664, 0.7193059921264648, 0.7240419983863831], "val_accuracy": [0.5456666946411133, 0.6396666765213013, 0.6853333115577698, 0.7233333587646484, 0.7476666569709778, 0.7366666793823242, 0.753000020980835, 0.75, 0.7586666941642761, 0.750333309173584, 0.7556666731834412, 0.7620000243186951, 0.7680000066757202, 0.7633333206176758, 0.7536666393280029, 0.7773333191871643, 0.7633333206176758, 0.7673333287239075, 0.7183333039283752, 0.7580000162124634, 0.7473333477973938]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [2, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 1, 0, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [38], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 15, 8, 7, 3, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), grad), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099429607391357, 2.3111419677734375, 2.311718225479126, 2.311554193496704, 2.31028151512146, 2.310852289199829], "accuracy": [0.09655263274908066, 0.09206181764602661, 0.08572183549404144, 0.08809932321310043, 0.08757099509239197, 0.09087307006120682], "val_loss": [2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707, 2.3086705207824707], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [7, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [84, 39, 14], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 3, 1, 6, 5, 8, 2], [0, 0, 2, 0, 3, 1, 5], [0, 27, 16, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 1, 5, 1, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 7, 3, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085715770721436, 2.3086652755737305, 2.3095083236694336, 2.311018466949463, 2.3101260662078857, 2.3098106384277344], "accuracy": [0.09206181764602661, 0.09219389408826828, 0.09087307006120682, 0.08955223858356476, 0.09747721254825592, 0.09113723784685135], "val_loss": [2.3088440895080566, 2.3088440895080566, 2.3088440895080566, 2.3088440895080566, 2.3088440895080566, 2.3088440895080566], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 1, 2, 1, 2], [0, 39, 59, 23], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 1], [0, 0, 2, 0, 3, 1, 0], [16, 76, 64, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43, 80], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 16, 9, 7, 2, 15, 8, 7, 4, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), alpha), grad)), tf.math.negative(alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093762397766113, 2.309161901473999, 2.3106722831726074, 2.309324264526367, 2.309333562850952, 2.309056043624878], "accuracy": [0.09311848133802414, 0.0944393053650856, 0.09206181764602661, 0.09338264167308807, 0.09311848133802414, 0.09549596905708313], "val_loss": [2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]