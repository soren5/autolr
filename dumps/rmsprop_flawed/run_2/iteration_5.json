[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4730595350265503, 0.7949087619781494, 0.6311822533607483, 0.5889476537704468, 0.5463925004005432, 0.5090727210044861, 0.4798522889614105, 0.4584733545780182, 0.4676409661769867, 0.4757080376148224, 0.4553981125354767, 0.4645135700702667, 0.44102174043655396, 0.49337413907051086, 0.5128549933433533, 0.5034480690956116, 0.5565250515937805, 0.5597690343856812, 0.5370953679084778], "accuracy": [0.4795931875705719, 0.7239466309547424, 0.763439416885376, 0.7857614755630493, 0.7955356240272522, 0.8058380484580994, 0.8286884427070618, 0.8285563588142395, 0.8276317715644836, 0.8337075710296631, 0.83119797706604, 0.8387266993522644, 0.847840428352356, 0.8358209133148193, 0.8433496356010437, 0.8330471515655518, 0.8206313848495483, 0.8202351331710815, 0.8417646288871765], "val_loss": [0.7741883397102356, 0.6407173871994019, 0.5597885847091675, 0.5162791609764099, 0.47749537229537964, 0.48503413796424866, 0.5125638842582703, 0.5096772909164429, 0.5098398923873901, 0.49484533071517944, 0.5148327350616455, 0.6381502151489258, 0.6128589510917664, 0.6237725019454956, 0.6423067450523376, 0.5589415431022644, 0.6806777119636536, 0.6599236726760864, 0.6548949480056763], "val_accuracy": [0.7233333587646484, 0.7716666460037231, 0.8086666464805603, 0.8130000233650208, 0.8286666870117188, 0.8306666612625122, 0.8330000042915344, 0.8256666660308838, 0.8370000123977661, 0.8403333425521851, 0.8259999752044678, 0.8286666870117188, 0.8399999737739563, 0.8416666388511658, 0.8230000138282776, 0.8223333358764648, 0.8266666531562805, 0.8309999704360962, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4946582317352295, 0.7583458423614502, 0.6483480334281921, 0.6065235137939453, 0.5698586106300354, 0.5471562147140503, 0.5265089869499207, 0.5118958353996277, 0.4963124096393585, 0.5179072022438049, 0.498710036277771, 0.4811971187591553, 0.4523897171020508, 0.46557819843292236, 0.5229796171188354, 0.5661294460296631], "accuracy": [0.4757627844810486, 0.7197200059890747, 0.759080708026886, 0.7770439982414246, 0.7926297783851624, 0.8033285140991211, 0.8043851256370544, 0.8133667707443237, 0.8189142942428589, 0.830669641494751, 0.8215559124946594, 0.819442629814148, 0.837537944316864, 0.8298771381378174, 0.8207634687423706, 0.8252542614936829], "val_loss": [0.747816801071167, 0.6047317981719971, 0.5563132166862488, 0.5458723902702332, 0.5323112607002258, 0.5106399059295654, 0.5172544121742249, 0.4953705966472626, 0.5346471071243286, 0.5949150323867798, 0.5384277105331421, 0.5409107208251953, 0.5609644651412964, 0.5397039651870728, 0.5767202377319336, 0.6328909397125244], "val_accuracy": [0.7426666617393494, 0.7860000133514404, 0.79666668176651, 0.8036666512489319, 0.8113333582878113, 0.8240000009536743, 0.8220000267028809, 0.8240000009536743, 0.8289999961853027, 0.8213333487510681, 0.8443333506584167, 0.8420000076293945, 0.8376666903495789, 0.8266666531562805, 0.8193333148956299, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [22, 39, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 4, 0, 0, 6, 9, 4, 6, 2, 6], [0, 0, 2, 0, 3, 1, 0, 1, 5, 0, 1, 4], [0, 27, 16, 0, 38, 80], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 2, 6, 1, 8, 1], [0, 6, 1, 0, 0, 6], [0, 56, 68], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.sqrt(tf.math.subtract(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 29, 17, 12, 6, 12, 6, 6, 3, 1, 0, 1, 0], "tree_depth": 25}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 6, 4, 1], [0, 0, 1, 0, 2, 3, 1, 0], [0, 77, 39, 91], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 2, 1, 0], [0, 60, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 5, 1], [40], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 16, 8, 8, 4, 6, 3, 3, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(grad, alpha), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309877395629883, 2.310814142227173, 2.309467315673828, 2.3091228008270264, 2.3088009357452393, 2.310734987258911], "accuracy": [0.09192973375320435, 0.0882314071059227, 0.09245806187391281, 0.0944393053650856, 0.0936468094587326, 0.10051512718200684], "val_loss": [2.308380603790283, 2.308380603790283, 2.308380603790283, 2.308380603790283, 2.308380603790283, 2.308380603790283], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 9, 1, 3, 5], [0, 0, 1, 2, 2], [47, 39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 6, 3, 1, 8, 6, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 6, 3, 3, 7, 3, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308953046798706, 2.308772087097168, 2.3098950386047363, 2.3099324703216553, 2.3089051246643066, 2.3098549842834473], "accuracy": [0.09457138925790787, 0.09549596905708313, 0.09113723784685135, 0.09681680053472519, 0.09840179979801178, 0.09245806187391281], "val_loss": [2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [2, 2, 6, 1, 3, 5, 9], [0, 0, 1, 3, 3], [0, 39, 39], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 6, 8, 6], [0, 0, 2, 0, 3, 1, 0], [44, 27, 35, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 5], [0, 6, 1], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 1, 9, 6, 3, 1, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3100790977478027, 2.30975079536438, 2.3097429275512695, 2.309591054916382, 2.3095479011535645, 2.310462713241577], "accuracy": [0.08994849026203156, 0.09325055778026581, 0.0940430611371994, 0.09298639744520187, 0.09813763201236725, 0.09457138925790787], "val_loss": [2.3090550899505615, 2.3090550899505615, 2.3090550899505615, 2.3090550899505615, 2.3090550899505615, 2.3090550899505615], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]