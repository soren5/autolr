[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6432031393051147, 0.9411282539367676, 0.7145830392837524, 0.6468578577041626, 0.6032797694206238, 0.5629130601882935, 0.544910728931427, 0.5353911519050598, 0.5025556683540344, 0.4971823990345001, 0.48978191614151, 0.48878341913223267, 0.4817309081554413, 0.4459868371486664, 0.47177910804748535, 0.5017426609992981, 0.49275535345077515, 0.5264756679534912, 0.5547733306884766], "accuracy": [0.43428874015808105, 0.6857746839523315, 0.7428345084190369, 0.7600052952766418, 0.7804781198501587, 0.7923656105995178, 0.8113855719566345, 0.8043851256370544, 0.8168009519577026, 0.8278959393501282, 0.8193105459213257, 0.8267071843147278, 0.8341038227081299, 0.8381983637809753, 0.8426892161369324, 0.833179235458374, 0.8322546482086182, 0.8278959393501282, 0.8187822103500366], "val_loss": [0.9715041518211365, 0.722220778465271, 0.6358566284179688, 0.5588071942329407, 0.5874723196029663, 0.5638836026191711, 0.6270418763160706, 0.6046893000602722, 0.5870044231414795, 0.5835756659507751, 0.5684876441955566, 0.5949175357818604, 0.6118434071540833, 0.5751360058784485, 0.6085691452026367, 0.640990138053894, 0.6515494585037231, 0.7553454041481018, 0.6908145546913147], "val_accuracy": [0.659333348274231, 0.7436666488647461, 0.7710000276565552, 0.7850000262260437, 0.7993333339691162, 0.8053333163261414, 0.8103333115577698, 0.8246666789054871, 0.8213333487510681, 0.8226666450500488, 0.8233333230018616, 0.8286666870117188, 0.8306666612625122, 0.8460000157356262, 0.82833331823349, 0.8253333568572998, 0.8309999704360962, 0.8220000267028809, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 0, 0], [48, 39, 39, 78], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 9, 3, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 3], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [3, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039190769195557, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 2, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 1, 1, 0], [0, 76, 16, 90], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 16, 9, 7, 4, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094282150268555, 2.309723377227783, 2.310065269470215, 2.310546636581421, 2.309783697128296, 2.3099656105041504], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09391097724437714, 0.0882314071059227, 0.09219389408826828, 0.09430722147226334], "val_loss": [2.3089187145233154, 2.3089187145233154, 2.3089187145233154, 2.3089187145233154, 2.3089187145233154, 2.3089187145233154], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 0, 2, 9, 0, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 6, 3, 0, 2, 8, 9], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 12], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 11, 7, 4, 4, 16, 10, 6, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.323850631713867, 2.339125394821167, 2.345245122909546, 2.3489668369293213, 2.348369598388672, 2.349694013595581], "accuracy": [0.08083476126194, 0.07013604789972305, 0.06973979622125626, 0.07013604789972305, 0.07079645991325378, 0.07013604789972305], "val_loss": [2.33638596534729, 2.3443355560302734, 2.347505807876587, 2.348844051361084, 2.349425792694092, 2.3496809005737305], "val_accuracy": [0.09166666865348816, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 3, 3, 4, 9, 3, 7, 3, 4, 6, 3, 1, 5, 9, 7, 6, 1, 2, 2, 5, 6, 6, 9, 6, 3, 7, 1, 6, 5, 8, 5, 5, 4, 3, 5, 5, 4, 9, 8, 1, 7, 4, 6, 7, 8, 1, 8, 5, 6, 7, 9, 7, 3, 3, 9, 9, 1, 4, 2], [0, 0, 2, 2, 2, 3, 2, 2, 1, 1, 2, 0, 1, 2, 1, 0, 2, 1, 3, 0, 1, 3, 2, 3, 0, 1, 0, 1, 0, 3, 1, 3, 0, 2, 1, 3, 1, 3, 3], [0, 39, 39, 79, 59, 15, 58, 99, 89, 61, 97, 28, 55, 92, 89, 29], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [3, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 105, 66, 39, 16, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.multiply(grad, grad)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), alpha), tf.math.add(tf.math.multiply(tf.math.pow(alpha, grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, grad), tf.math.square(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.square(alpha)), tf.math.square(grad)), tf.math.pow(tf.math.multiply(grad, grad), tf.math.square(tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), alpha), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.multiply(grad, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.pow(tf.math.add(grad, alpha), grad))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309321641921997, 2.3098583221435547, 2.3092198371887207, 2.308929681777954, 2.3091981410980225, 2.3097078800201416], "accuracy": [0.09391097724437714, 0.09470347315073013, 0.0882314071059227, 0.09681680053472519, 0.09338264167308807, 0.09430722147226334], "val_loss": [2.3092777729034424, 2.3092777729034424, 2.3092777729034424, 2.3092777729034424, 2.3092777729034424, 2.3092777729034424], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]