[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4475610256195068, 0.7715792059898376, 0.6648781895637512, 0.5921549201011658, 0.546906590461731, 0.5257528424263, 0.521855354309082, 0.4871501922607422, 0.49738845229148865, 0.5154505968093872, 0.5154939889907837, 0.48304325342178345, 0.49590224027633667, 0.4749521315097809, 0.48207759857177734, 0.4718286395072937, 0.47358694672584534, 0.5091044902801514, 0.5192267894744873, 0.531153678894043, 0.5353533625602722, 0.5383360981941223, 0.5174857974052429, 0.5452070832252502, 0.5311559438705444, 0.5305836796760559], "accuracy": [0.5061418414115906, 0.7268524765968323, 0.7598732113838196, 0.7905164361000061, 0.7965922355651855, 0.8113855719566345, 0.8059701323509216, 0.8269713521003723, 0.8212917447090149, 0.8206313848495483, 0.8294808864593506, 0.8261788487434387, 0.8310658931732178, 0.8308017253875732, 0.8364813327789307, 0.8350284099578857, 0.8385946154594421, 0.837141752243042, 0.8359529972076416, 0.82683926820755, 0.8207634687423706, 0.8345000743865967, 0.830669641494751, 0.8313300609588623, 0.8224804997444153, 0.8226125836372375], "val_loss": [0.7526572346687317, 0.583063542842865, 0.5336501598358154, 0.5033314824104309, 0.4915701150894165, 0.4643380045890808, 0.47222253680229187, 0.48522794246673584, 0.49432462453842163, 0.5229728817939758, 0.45771166682243347, 0.4681317210197449, 0.55507892370224, 0.546602725982666, 0.5134896039962769, 0.5075594782829285, 0.5614116787910461, 0.5735870003700256, 0.5688107013702393, 0.50517737865448, 0.5033767819404602, 0.5534166693687439, 0.5550867915153503, 0.5631757378578186, 0.5555080771446228, 0.549972653388977], "val_accuracy": [0.7326666712760925, 0.7763333320617676, 0.8146666884422302, 0.8113333582878113, 0.8233333230018616, 0.8410000205039978, 0.8429999947547913, 0.8339999914169312, 0.8216666579246521, 0.8410000205039978, 0.8486666679382324, 0.8460000157356262, 0.8396666646003723, 0.8356666564941406, 0.8473333120346069, 0.8510000109672546, 0.8503333330154419, 0.8420000076293945, 0.847000002861023, 0.8519999980926514, 0.8583333492279053, 0.847000002861023, 0.847000002861023, 0.8503333330154419, 0.8546666502952576, 0.82833331823349]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 8, 1, 3, 2, 3, 8, 0], [2, 0, 2, 0, 2, 3, 0], [0, 25, 39, 79], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 0, 8, 2, 2, 3], [0, 3, 2, 0, 3, 1, 0, 5], [0, 76, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 2, 18, 10, 8, 3, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.sqrt(beta))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 6, 3, 1, 6, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 2, 0], [0, 46, 16, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093199729919434, 2.3113458156585693, 2.3095896244049072, 2.3100779056549072, 2.309316635131836, 2.3100109100341797], "accuracy": [0.09496764093637466, 0.09430722147226334, 0.08730682730674744, 0.09470347315073013, 0.08796724677085876, 0.09272222965955734], "val_loss": [2.308018207550049, 2.308018207550049, 2.308018207550049, 2.308018207550049, 2.308018207550049, 2.308018207550049], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 3, 4, 1, 3, 2, 1, 3, 2], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 4, 2, 8, 9], [0, 2, 2, 0, 3, 1, 1], [0, 76, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 1, 17, 10, 7, 3, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092563152313232, 2.3093974590301514, 2.3103456497192383, 2.3097455501556396, 2.310638427734375, 2.3106064796447754], "accuracy": [0.09206181764602661, 0.0940430611371994, 0.09166556596755981, 0.0956280529499054, 0.0886276587843895, 0.09179764986038208], "val_loss": [2.3084843158721924, 2.3084843158721924, 2.3084843158721924, 2.3084843158721924, 2.3084843158721924, 2.3084843158721924], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 9, 8, 0], [0, 0, 0, 0, 2, 0, 0], [0, 0, 39, 79, 53], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 8, 3, 1, 4, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 3], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 13, 8, 5, 5, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097875118255615, 2.3091535568237305, 2.309453248977661, 2.30942702293396, 2.310262680053711, 2.3094942569732666], "accuracy": [0.08928807079792023, 0.08994849026203156, 0.09430722147226334, 0.09457138925790787, 0.09074098616838455, 0.09100515395402908], "val_loss": [2.30787992477417, 2.30787992477417, 2.30787992477417, 2.30787992477417, 2.30787992477417, 2.30787992477417], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]