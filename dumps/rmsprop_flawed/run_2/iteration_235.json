[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.513340711593628, 0.8267436623573303, 0.6967549920082092, 0.6469811201095581, 0.6045340895652771, 0.5853894948959351, 0.5622467398643494, 0.5403408408164978, 0.5355455279350281, 0.5441781282424927, 0.49775487184524536, 0.4912331998348236, 0.5064847469329834, 0.48242074251174927, 0.5162418484687805, 0.46876847743988037, 0.5207850337028503, 0.517444372177124], "accuracy": [0.4904239773750305, 0.7141724824905396, 0.7537974119186401, 0.7647602558135986, 0.7810064554214478, 0.7940827012062073, 0.7977809906005859, 0.8142913579940796, 0.8121780753135681, 0.807158887386322, 0.8190463781356812, 0.8298771381378174, 0.8249900937080383, 0.8329150676727295, 0.8339717388153076, 0.833179235458374, 0.8186501264572144, 0.8182538747787476], "val_loss": [0.8313188552856445, 0.6535003185272217, 0.5538120865821838, 0.4875967502593994, 0.49848833680152893, 0.5010008215904236, 0.4838813841342926, 0.48852676153182983, 0.47936299443244934, 0.4277927279472351, 0.45440495014190674, 0.4801243543624878, 0.5013881921768188, 0.5099614858627319, 0.48168158531188965, 0.4947655498981476, 0.4995178282260895, 0.5150994658470154], "val_accuracy": [0.699999988079071, 0.7596666812896729, 0.793666660785675, 0.8169999718666077, 0.8243333101272583, 0.8259999752044678, 0.8383333086967468, 0.8199999928474426, 0.843666672706604, 0.8450000286102295, 0.8389999866485596, 0.8463333249092102, 0.8510000109672546, 0.8473333120346069, 0.8450000286102295, 0.8336666822433472, 0.840666651725769, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 2, 1, 5, 7, 7, 2, 1, 3, 8], [2, 0, 1, 0, 2, 2, 0, 3, 0, 1, 0, 1, 3], [53, 39, 39, 79, 64], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 15, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [8, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.42171427607536316, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.479820728302002, 2.889880657196045, 2.3070521354675293, 2.303431510925293, 2.302722692489624, 2.294485092163086, 2.055812120437622, 2.127399206161499, 2.3054819107055664, 2.303917407989502, 2.3044979572296143, 2.3011362552642822], "accuracy": [0.18518029153347015, 0.21093647181987762, 0.09496764093637466, 0.10421344637870789, 0.09879804402589798, 0.12362963706254959, 0.2584863305091858, 0.2250693440437317, 0.10157178342342377, 0.09536388516426086, 0.09655263274908066, 0.10606260597705841], "val_loss": [2.1948440074920654, 2.3099029064178467, 2.3040809631347656, 2.3027994632720947, 2.3008668422698975, 2.2521026134490967, 1.9245611429214478, 2.3045570850372314, 2.302527666091919, 2.3032355308532715, 2.302433729171753, 2.2664759159088135], "val_accuracy": [0.13199999928474426, 0.09700000286102295, 0.10466666519641876, 0.09833333641290665, 0.1523333340883255, 0.2849999964237213, 0.42933332920074463, 0.10400000214576721, 0.09833333641290665, 0.09600000083446503, 0.10466666519641876, 0.12666666507720947]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 1, 6, 1, 8, 2, 4, 2, 4, 5, 7, 0, 5, 9], [0, 0, 3, 3, 3, 1, 0, 4, 5, 4, 3, 2, 2], [46, 27, 16, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 2, 1, 8, 8, 8, 4, 5, 9], [3, 6, 1], [0], [1], [0], [4], [0]], "fitness": -0.3231428563594818, "mapping_values": [1, 11, 6, 5, 3, 26, 16, 10, 4, 12, 9, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.pow(grad, tf.math.square(alpha))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(grad)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.pow(grad, tf.math.square(alpha)))))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.307500123977661, 2.1667263507843018, 2.5977532863616943, 2.309406280517578, 2.3046391010284424, 2.3034846782684326, 2.303021192550659], "accuracy": [0.22863557934761047, 0.22639016807079315, 0.17633073031902313, 0.1002509593963623, 0.09576013684272766, 0.09325055778026581, 0.09985470771789551], "val_loss": [2.0218236446380615, 2.3713114261627197, 2.3155176639556885, 2.3051483631134033, 2.303117275238037, 2.303040027618408, 2.3027002811431885], "val_accuracy": [0.30433332920074463, 0.32733333110809326, 0.09700000286102295, 0.09700000286102295, 0.09833333641290665, 0.10300000011920929, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 6, 3, 1, 3, 2, 3, 8, 0, 8, 9, 0, 3], [0, 0, 1, 0, 2, 2, 1], [0, 39, 39, 36], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 2, 8, 2], [0, 0, 2, 0, 3, 3, 0], [0, 58, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 9, 5, 8, 8], [0, 6, 1], [0, 4], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 9, 4, 5, 3, 6, 3, 3, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310812473297119, 2.3102359771728516, 2.3116979598999023, 2.309941053390503, 2.3110008239746094, 2.310610771179199], "accuracy": [0.09179764986038208, 0.09126931428909302, 0.09074098616838455, 0.09245806187391281, 0.08968432247638702, 0.08902391046285629], "val_loss": [2.3087868690490723, 2.3087868690490723, 2.3087868690490723, 2.3087868690490723, 2.3087868690490723, 2.3087868690490723], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 0, 0, 2, 3, 0], [0, 39, 39, 79, 9], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 6, 1, 6, 4, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 7], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [0, 0, 1, 1], [0, 2], [2, 0], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 15, 8, 7, 5, 6, 3, 3, 2, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)))), grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309601306915283, 2.3092479705810547, 2.3094429969787598, 2.310546875, 2.310204029083252, 2.3093719482421875], "accuracy": [0.0936468094587326, 0.08757099509239197, 0.09417514503002167, 0.09391097724437714, 0.09245806187391281, 0.09391097724437714], "val_loss": [2.3083629608154297, 2.3083629608154297, 2.3083629608154297, 2.3083629608154297, 2.3083629608154297, 2.3083629608154297], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]