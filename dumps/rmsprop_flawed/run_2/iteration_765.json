[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5176053047180176, 0.8030723929405212, 0.659679651260376, 0.5767280459403992, 0.5362823009490967, 0.5111226439476013, 0.4965798854827881, 0.4642636477947235, 0.47691410779953003, 0.46024569869041443, 0.47086459398269653, 0.4879052937030792, 0.4754582643508911], "accuracy": [0.4859331548213959, 0.7162858247756958, 0.7663452625274658, 0.7820631265640259, 0.8024039268493652, 0.8158763647079468, 0.8265751004219055, 0.8323867321014404, 0.8413683772087097, 0.8459912538528442, 0.8403117060661316, 0.8355567455291748, 0.8408400416374207], "val_loss": [0.8358573317527771, 0.6021430492401123, 0.5335139036178589, 0.49615100026130676, 0.4793024957180023, 0.4575248062610626, 0.45731624960899353, 0.4525848925113678, 0.5162098407745361, 0.49914050102233887, 0.537973940372467, 0.5350235104560852, 0.49722427129745483], "val_accuracy": [0.7059999704360962, 0.7743333578109741, 0.7883333563804626, 0.8186666369438171, 0.8203333616256714, 0.8270000219345093, 0.8330000042915344, 0.8446666598320007, 0.8446666598320007, 0.8330000042915344, 0.8353333473205566, 0.840666651725769, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 1], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 6, 8, 2, 8], [0, 0, 3, 0, 3, 1, 0], [86, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.817714273929596, "mapping_values": [1, 15, 8, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3023970127105713, 2.2631046772003174, 2.183476448059082, 1.9769917726516724, 1.533889889717102, 1.3436555862426758, 1.2755029201507568, 0.9699211120605469, 0.9188514351844788, 0.8876733183860779, 0.8362851142883301, 0.8317193388938904, 0.7972723841667175, 0.7558324337005615, 0.7335572242736816, 0.7202580571174622, 0.689973771572113, 0.6841886639595032, 0.6742578744888306, 0.6523259878158569, 0.6282036304473877, 0.6407157778739929, 0.6223105788230896, 0.6156073212623596, 0.6062151193618774, 0.5932847261428833, 0.5715685486793518, 0.5699172019958496, 0.5595351457595825, 0.5553281903266907, 0.5541331171989441, 0.5546274185180664, 0.5309866666793823, 0.5289039015769958, 0.525081992149353, 0.5336039066314697, 0.5124250054359436, 0.50286465883255, 0.49913308024406433, 0.4853854775428772, 0.49551039934158325, 0.48124128580093384, 0.4696100950241089, 0.46533462405204773, 0.45998215675354004, 0.45108914375305176, 0.4412364065647125, 0.44884422421455383, 0.434478759765625, 0.432803213596344, 0.4201990067958832, 0.4103574752807617, 0.40885376930236816, 0.4119493067264557, 0.3889869153499603, 0.39602190256118774, 0.39465150237083435, 0.3785768151283264, 0.38472044467926025, 0.36738479137420654], "accuracy": [0.10791176557540894, 0.21093647181987762, 0.3399814963340759, 0.41566503047943115, 0.48170650005340576, 0.5418042540550232, 0.6001849174499512, 0.6518293619155884, 0.663848876953125, 0.6708492636680603, 0.6929071545600891, 0.7036058902740479, 0.7058512568473816, 0.7055870890617371, 0.7206445932388306, 0.7243428826332092, 0.7408532500267029, 0.7351737022399902, 0.7380794882774353, 0.7528728246688843, 0.7534011602401733, 0.7523444890975952, 0.7617223858833313, 0.7658169269561768, 0.7701756954193115, 0.7783648371696472, 0.7799497842788696, 0.7873464822769165, 0.7829877138137817, 0.7869502305984497, 0.7878747582435608, 0.7884030938148499, 0.7994980812072754, 0.7991018295288086, 0.8058380484580994, 0.7984414100646973, 0.8009510040283203, 0.8033285140991211, 0.805177628993988, 0.8112534880638123, 0.8107251524925232, 0.8152159452438354, 0.8235371708869934, 0.826310932636261, 0.8210275769233704, 0.8264430165290833, 0.8302733898162842, 0.8330471515655518, 0.832650899887085, 0.8325188159942627, 0.8417646288871765, 0.8409721255302429, 0.8491612672805786, 0.8473120927810669, 0.845859169960022, 0.846387505531311, 0.854708731174469, 0.8568220734596252, 0.8564258217811584, 0.8618412613868713], "val_loss": [2.2817375659942627, 2.219484806060791, 2.080655336380005, 1.6792908906936646, 1.0803134441375732, 0.9167633652687073, 0.819831132888794, 0.7642330527305603, 0.7903469800949097, 0.6821832060813904, 0.6664893627166748, 0.6608205437660217, 0.6404070854187012, 0.6267752051353455, 0.6246927976608276, 0.6009829640388489, 0.5731877684593201, 0.5665388703346252, 0.5572941303253174, 0.5458603501319885, 0.539042055606842, 0.5347563624382019, 0.5245564579963684, 0.5188332200050354, 0.5088109970092773, 0.5031998753547668, 0.5041354298591614, 0.5062284469604492, 0.5059080123901367, 0.5030354261398315, 0.49438703060150146, 0.4897586405277252, 0.4968823194503784, 0.49141576886177063, 0.4873664677143097, 0.4881306290626526, 0.4869590997695923, 0.4874556362628937, 0.47681429982185364, 0.4707382917404175, 0.46571338176727295, 0.46877405047416687, 0.46491071581840515, 0.4581031799316406, 0.4490043818950653, 0.4488672614097595, 0.44313257932662964, 0.44200971722602844, 0.4417867064476013, 0.44220665097236633, 0.43580007553100586, 0.43527165055274963, 0.4338107407093048, 0.42698702216148376, 0.41524285078048706, 0.41513198614120483, 0.42561841011047363, 0.4294365346431732, 0.4197268784046173, 0.41789594292640686], "val_accuracy": [0.18266665935516357, 0.4556666612625122, 0.4633333384990692, 0.5440000295639038, 0.6370000243186951, 0.6710000038146973, 0.6959999799728394, 0.7183333039283752, 0.7266666889190674, 0.7319999933242798, 0.7459999918937683, 0.7423333525657654, 0.7463333606719971, 0.762333333492279, 0.768666684627533, 0.7696666717529297, 0.7710000276565552, 0.7710000276565552, 0.7806666493415833, 0.7906666398048401, 0.7906666398048401, 0.7889999747276306, 0.7986666560173035, 0.8036666512489319, 0.8019999861717224, 0.8059999942779541, 0.8109999895095825, 0.8133333325386047, 0.812666654586792, 0.8080000281333923, 0.812666654586792, 0.8180000185966492, 0.8226666450500488, 0.8223333358764648, 0.8256666660308838, 0.8286666870117188, 0.8330000042915344, 0.8333333134651184, 0.8376666903495789, 0.8320000171661377, 0.8373333215713501, 0.8373333215713501, 0.8349999785423279, 0.8399999737739563, 0.843999981880188, 0.8426666855812073, 0.8539999723434448, 0.8529999852180481, 0.8506666421890259, 0.847000002861023, 0.8556666374206543, 0.8569999933242798, 0.8600000143051147, 0.8586666584014893, 0.862333357334137, 0.8600000143051147, 0.8586666584014893, 0.8573333621025085, 0.8586666584014893, 0.859000027179718]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 8], [0, 0, 2, 0, 2, 3, 0], [0, 0, 41, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 1, 6, 3, 8, 2, 8], [0, 3, 2, 0, 3, 1, 3], [0, 76, 37, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [244335.640625, 7.062623218366939e+29, 36364.5078125, 9184707.0, 2359636224.0, 614797279232.0], "accuracy": [0.20261524617671967, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [110980186112.0, 1368.2156982421875, 348538.5, 89222280.0, 22840897536.0, 5847269769216.0], "val_accuracy": [0.10100000351667404, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 9], [0, 0, 2, 0, 2, 3, 0], [0, 39, 91, 85], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 4, 3, 8, 2, 8], [1, 0, 2, 0, 3, 1, 0], [0, 48, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 8, 3, 9, 5], [0, 0, 0, 0, 3], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1], [6, 8, 9, 5, 8, 8], [0, 4, 1], [0, 72], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.313183307647705, 2.325162887573242, 2.342402696609497, 2.367705821990967, 2.3996422290802, 2.4382190704345703, 2.4898831844329834, 2.569732904434204, 2.6860544681549072, 2.8871946334838867, 3.278780937194824, 4.232337474822998], "accuracy": [0.08651433140039444, 0.07753269374370575, 0.0758156105875969, 0.06736230105161667, 0.07277770340442657, 0.07172103971242905, 0.07740060985088348, 0.07792893797159195, 0.07845727354288101, 0.08506141602993011, 0.08915598690509796, 0.09668471664190292], "val_loss": [2.316972017288208, 2.334796190261841, 2.358100175857544, 2.3860373497009277, 2.4205431938171387, 2.4658868312835693, 2.5290687084198, 2.6225407123565674, 2.7713418006896973, 3.0356929302215576, 3.6086957454681396, 5.41757869720459], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09433333575725555, 0.0949999988079071, 0.09533333033323288, 0.09700000286102295, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 5, 3, 2, 2, 15, 8, 7, 4, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 14}]