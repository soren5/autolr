[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5112003087997437, 0.8295319080352783, 0.6580331325531006, 0.5877153873443604, 0.5525145530700684, 0.536479115486145, 0.5313457250595093, 0.5263482928276062, 0.49842458963394165, 0.4824230968952179, 0.5348077416419983, 0.5490622520446777, 0.5382562875747681, 0.549544632434845, 0.515748143196106, 0.5401274561882019, 0.5463168025016785, 0.5488000512123108, 0.5617804527282715, 0.5672026872634888], "accuracy": [0.48144233226776123, 0.7078325152397156, 0.7576277852058411, 0.7770439982414246, 0.798309326171875, 0.805177628993988, 0.8121780753135681, 0.809140145778656, 0.8265751004219055, 0.8265751004219055, 0.8182538747787476, 0.8083476424217224, 0.8162726163864136, 0.8094043135643005, 0.8276317715644836, 0.8235371708869934, 0.819442629814148, 0.8185180425643921, 0.817461371421814, 0.8226125836372375], "val_loss": [0.8099017143249512, 0.6281379461288452, 0.5442712903022766, 0.49555665254592896, 0.4863804578781128, 0.4921475052833557, 0.5019831657409668, 0.5123876333236694, 0.4895083010196686, 0.4929566979408264, 0.5189092755317688, 0.5194193124771118, 0.507807195186615, 0.538544774055481, 0.6317036747932434, 0.5962384343147278, 0.5671712160110474, 0.5533681511878967, 0.5892806649208069, 0.5398216247558594], "val_accuracy": [0.7179999947547913, 0.7736666798591614, 0.7916666865348816, 0.8199999928474426, 0.8199999928474426, 0.8309999704360962, 0.8309999704360962, 0.8256666660308838, 0.824999988079071, 0.8339999914169312, 0.8346666693687439, 0.8296666741371155, 0.8403333425521851, 0.8303333520889282, 0.8446666598320007, 0.8393333554267883, 0.8366666436195374, 0.8360000252723694, 0.8330000042915344, 0.8076666593551636]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 26, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 4, 9, 1, 6, 5, 0, 7, 0], [0, 0, 2, 0, 3, 1, 2, 0, 2, 4, 0], [0, 27, 16, 0, 70, 96], [0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 1, 7, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.5582857131958008, "mapping_values": [1, 11, 6, 5, 2, 28, 17, 11, 6, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308634042739868, 2.3019962310791016, 2.290961265563965, 2.2823925018310547, 2.273120164871216, 2.2681663036346436, 2.2651734352111816, 2.261866569519043, 2.2601630687713623, 2.2582473754882812, 2.2562620639801025, 2.2539827823638916, 2.253047466278076, 2.250392198562622, 2.249868392944336, 2.2476284503936768, 2.2462613582611084, 2.243844747543335, 2.2432329654693604, 2.240664005279541, 2.2390716075897217, 2.237205982208252, 2.2349131107330322, 2.2329795360565186, 2.2303857803344727, 2.2283527851104736, 2.2261054515838623, 2.224087715148926, 2.2212913036346436], "accuracy": [0.09311848133802414, 0.09959053993225098, 0.1302337795495987, 0.16378284990787506, 0.22744683921337128, 0.27922335267066956, 0.31343284249305725, 0.3489631414413452, 0.3731343150138855, 0.3809272348880768, 0.39862632751464844, 0.41487252712249756, 0.41949543356895447, 0.43626996874809265, 0.43811914324760437, 0.44789329171180725, 0.4410249590873718, 0.4535728394985199, 0.4497424364089966, 0.45727115869522095, 0.44947826862335205, 0.46070531010627747, 0.45964866876602173, 0.46585655212402344, 0.4679698944091797, 0.45991283655166626, 0.47166821360588074, 0.46347907185554504, 0.4655923843383789], "val_loss": [2.303776979446411, 2.293715715408325, 2.2829430103302, 2.274197816848755, 2.268686532974243, 2.2655704021453857, 2.2636196613311768, 2.26198148727417, 2.260502338409424, 2.259117841720581, 2.2577810287475586, 2.256443500518799, 2.255066394805908, 2.25362491607666, 2.2520947456359863, 2.250507116317749, 2.2488651275634766, 2.2471654415130615, 2.2454302310943604, 2.243647813796997, 2.241800308227539, 2.2399115562438965, 2.2379493713378906, 2.2359211444854736, 2.2338101863861084, 2.2316126823425293, 2.229341745376587, 2.227003335952759, 2.2245595455169678], "val_accuracy": [0.09366666525602341, 0.12700000405311584, 0.18433333933353424, 0.3243333399295807, 0.43966665863990784, 0.49266666173934937, 0.512333333492279, 0.5183333158493042, 0.5199999809265137, 0.5239999890327454, 0.5293333530426025, 0.5373333096504211, 0.5423333048820496, 0.546999990940094, 0.5509999990463257, 0.5509999990463257, 0.5540000200271606, 0.5569999814033508, 0.5576666593551636, 0.5616666674613953, 0.5613333582878113, 0.5619999766349792, 0.5630000233650208, 0.5636666417121887, 0.5636666417121887, 0.5630000233650208, 0.562333345413208, 0.5616666674613953, 0.559333324432373]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 6, 8, 0, 9], [0, 2, 1, 0, 2, 2, 0], [0, 39, 69, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 9, 2, 8], [0, 3, 0, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 12, 7, 5, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(grad)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 1, 3, 0], [0, 76, 59, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [2, 2, 3, 1, 6, 3, 8, 2, 8, 3, 8, 3, 6, 0, 8, 9], [3, 0, 0, 0, 3, 1, 0, 4, 1, 1], [0, 76, 16, 0, 61], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 26, 16, 10, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha)), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), tf.math.multiply(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), alpha), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 1, 2, 3, 0], [0, 39, 2, 79], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8, 2, 5], [0, 0, 2, 0, 0, 1, 0, 2], [0, 76, 16, 64, 69], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 16, 9, 7, 3, 19, 11, 8, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(alpha), grad)), tf.math.negative(grad)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31070613861084, 2.3099894523620605, 2.310076951980591, 2.310210943222046, 2.3095004558563232, 2.310260534286499], "accuracy": [0.09113723784685135, 0.08532558381557465, 0.09576013684272766, 0.09047681838274002, 0.0940430611371994, 0.09153348207473755], "val_loss": [2.3084609508514404, 2.3084609508514404, 2.3084609508514404, 2.3084609508514404, 2.3084609508514404, 2.3084609508514404], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]