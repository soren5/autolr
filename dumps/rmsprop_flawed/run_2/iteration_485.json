[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4340178966522217, 0.737636923789978, 0.6424005031585693, 0.5850262641906738, 0.5674958229064941, 0.5601696968078613, 0.5692731142044067, 0.5399735569953918, 0.5444589853286743, 0.5807994604110718, 0.5647211074829102, 0.5311341881752014, 0.5369468927383423, 0.5550941824913025, 0.5675551891326904, 0.6142135262489319, 0.5927063822746277, 0.5833401679992676], "accuracy": [0.502971887588501, 0.7347774505615234, 0.7670056819915771, 0.789459764957428, 0.7987055778503418, 0.8058380484580994, 0.793950617313385, 0.8025360107421875, 0.8150838613510132, 0.8087438941001892, 0.8033285140991211, 0.8162726163864136, 0.8197067975997925, 0.8230088353157043, 0.805177628993988, 0.7940827012062073, 0.7985734939575195, 0.8212917447090149], "val_loss": [0.7770914435386658, 0.5966895222663879, 0.5336170792579651, 0.5800133943557739, 0.5305770039558411, 0.5218801498413086, 0.5434068441390991, 0.5848793387413025, 0.54488605260849, 0.59959477186203, 0.5320364832878113, 0.5933316349983215, 0.6131749153137207, 0.5749669075012207, 0.5308998227119446, 0.630934476852417, 0.6993982791900635, 0.6717204451560974], "val_accuracy": [0.7283333539962769, 0.7756666541099548, 0.8059999942779541, 0.8096666932106018, 0.8133333325386047, 0.8159999847412109, 0.8169999718666077, 0.8143333196640015, 0.828000009059906, 0.8149999976158142, 0.8183333277702332, 0.8180000185966492, 0.8293333053588867, 0.8203333616256714, 0.8180000185966492, 0.8143333196640015, 0.8143333196640015, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 2, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 2, 3], [0, 0, 39, 79], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 8, 3, 1, 6, 3, 8, 2, 9], [0, 0, 2, 0, 0, 1, 0], [0, 76, 16, 74, 35], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 5, 8, 8], [1, 0, 1], [0], [1], [0], [4], [0]], "fitness": -0.15228570997714996, "mapping_values": [1, 16, 9, 7, 3, 14, 9, 5, 5, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4884607791900635, 3.5293726921081543, 2.3105225563049316, 2.3045172691345215, 2.3031346797943115, 2.3030872344970703], "accuracy": [0.1690661758184433, 0.16417910158634186, 0.09959053993225098, 0.09998679161071777, 0.09708096832036972, 0.09668471664190292], "val_loss": [2.2905983924865723, 2.3199055194854736, 2.3064889907836914, 2.3035378456115723, 2.303030490875244, 2.3026766777038574], "val_accuracy": [0.15066666901111603, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 3, 2, 9], [0, 0, 1, 0, 2, 3], [0, 39, 82, 6], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 5], [1, 0, 1], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 2, 1, 1, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [1727.507568359375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19482234120368958, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4040760.75, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 3], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310718059539795, 2.310232400894165, 2.3100273609161377, 2.311115026473999, 2.3097522258758545, 2.3094048500061035], "accuracy": [0.09391097724437714, 0.08928807079792023, 0.0874389111995697, 0.0948355570435524, 0.0948355570435524, 0.0944393053650856], "val_loss": [2.308424711227417, 2.308424711227417, 2.308424711227417, 2.308424711227417, 2.308424711227417, 2.308424711227417], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 0, 0], [0, 0, 39, 79, 45], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 5, 2, 8], [2, 0, 2, 0, 3, 1, 0], [52, 82, 95, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 13, 6, 7, 5, 6, 3, 3, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101987838745117, 2.3102333545684814, 2.310879945755005, 2.309954881668091, 2.310838460922241, 2.3097705841064453], "accuracy": [0.09219389408826828, 0.09430722147226334, 0.09232597798109055, 0.09496764093637466, 0.09338264167308807, 0.09721305221319199], "val_loss": [2.308779716491699, 2.308779716491699, 2.308779716491699, 2.308779716491699, 2.308779716491699, 2.308779716491699], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]