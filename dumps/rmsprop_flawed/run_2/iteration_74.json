[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6074706315994263, 0.8697071075439453, 0.7024390697479248, 0.6341721415519714, 0.5951022505760193, 0.5850818157196045, 0.5358447432518005, 0.49531063437461853, 0.49503761529922485, 0.45201390981674194, 0.4316628575325012, 0.4269058108329773, 0.44819381833076477, 0.45424744486808777, 0.4883994162082672, 0.48708561062812805, 0.45706528425216675], "accuracy": [0.481838583946228, 0.7017567157745361, 0.7391361594200134, 0.7606657147407532, 0.7758552432060242, 0.7880068421363831, 0.7984414100646973, 0.8105930685997009, 0.8222163319587708, 0.8383304476737976, 0.8350284099578857, 0.8416325449943542, 0.8436138033866882, 0.8451988101005554, 0.8234050869941711, 0.8276317715644836, 0.8474441766738892], "val_loss": [0.9424641728401184, 0.681975245475769, 0.625582754611969, 0.5973179340362549, 0.6077381372451782, 0.5377662181854248, 0.5017831325531006, 0.5075076222419739, 0.5223231315612793, 0.5078192353248596, 0.5055434703826904, 0.6018073558807373, 0.5891576409339905, 0.5304862856864929, 0.5530037879943848, 0.5289977788925171, 0.6481245756149292], "val_accuracy": [0.6723333597183228, 0.7473333477973938, 0.7666666507720947, 0.7823333144187927, 0.7776666879653931, 0.8143333196640015, 0.8223333358764648, 0.8246666789054871, 0.8366666436195374, 0.8286666870117188, 0.8426666855812073, 0.8503333330154419, 0.8433333039283752, 0.8366666436195374, 0.824999988079071, 0.8426666855812073, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [2, 0, 1, 0, 2, 2, 0], [19, 39, 39, 16], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 3, 2, 0, 6, 3, 8, 2, 8, 8, 8], [0, 0, 2, 0, 3, 1, 0], [78, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.31228572130203247, "mapping_values": [1, 16, 9, 7, 3, 17, 11, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4830667972564697, 2.2644946575164795, 2.2992942333221436, 2.3028321266174316, 2.2807059288024902, 2.2956533432006836, 2.357600212097168, 2.303522825241089, 2.303528070449829, 2.302736759185791], "accuracy": [0.19310526549816132, 0.14463083446025848, 0.12415797263383865, 0.09972262382507324, 0.1476687341928482, 0.11874257028102875, 0.12534672021865845, 0.10236428678035736, 0.09959053993225098, 0.10091137140989304], "val_loss": [2.137223720550537, 2.2833659648895264, 2.3026113510131836, 2.301553726196289, 2.0023725032806396, 2.28216552734375, 2.3050589561462402, 2.3028976917266846, 2.3028268814086914, 2.3027596473693848], "val_accuracy": [0.14433333277702332, 0.1626666635274887, 0.10000000149011612, 0.10233332961797714, 0.30433332920074463, 0.1066666692495346, 0.09799999743700027, 0.10100000351667404, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [3, 6, 3, 1, 3, 2, 3, 8, 0, 9], [0, 2, 1, 2, 2, 3, 0], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2, 7, 5, 5, 1, 3, 6, 0], [0, 0, 2, 0, 3, 3, 0, 4, 5, 5, 5, 2], [10, 9, 57, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [6], [0]], "fitness": -0.2825714349746704, "mapping_values": [1, 17, 10, 7, 3, 28, 16, 12, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.math.add(tf.math.square(tf.math.square(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), grad))), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.342750072479248, 2.2111828327178955, 2.30562424659729, 2.3032102584838867, 2.2935094833374023, 2.3428733348846436, 2.299856662750244, 2.3065428733825684, 2.303915023803711, 2.3029086589813232], "accuracy": [0.21740853786468506, 0.18940694630146027, 0.10038304328918457, 0.10381719470024109, 0.13195087015628815, 0.14912164211273193, 0.14093250036239624, 0.1002509593963623, 0.09509972482919693, 0.09959053993225098], "val_loss": [2.1986753940582275, 2.307521104812622, 2.303534984588623, 2.3005332946777344, 2.208404064178467, 2.3056652545928955, 2.3095874786376953, 2.303267002105713, 2.302863597869873, 2.3007607460021973], "val_accuracy": [0.18033333122730255, 0.09833333641290665, 0.09833333641290665, 0.11699999868869781, 0.2866666615009308, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.17233332991600037]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 13, 79], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 3, 3, 0, 0, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad)), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308722734451294, 2.3025588989257812, 2.3020451068878174, 2.302480697631836, 2.30264949798584, 2.302678346633911, 2.302649974822998, 2.302694082260132, 2.3027191162109375, 2.3027477264404297, 2.3027756214141846, 2.302860975265503, 2.3029627799987793, 2.3032398223876953, 2.30356502532959], "accuracy": [0.09245806187391281, 0.09972262382507324, 0.09311848133802414, 0.08479725569486618, 0.09192973375320435, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10421344637870789, 0.1026284471154213, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.302966356277466, 2.3018956184387207, 2.3024182319641113, 2.3025898933410645, 2.3026304244995117, 2.3025968074798584, 2.3025894165039062, 2.3025894165039062, 2.30258846282959, 2.3026015758514404, 2.3026301860809326, 2.302675724029541, 2.3028080463409424, 2.303041458129883, 2.303377389907837], "val_accuracy": [0.09266666322946548, 0.08933333307504654, 0.08933333307504654, 0.0949999988079071, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 2, 0], [0, 39, 39, 79], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [0, 1], [0], [0], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 15, 8, 7, 4, 6, 3, 3, 2, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3091933727264404, 2.3105759620666504, 2.3094279766082764, 2.3095085620880127, 2.3111214637756348, 2.3105123043060303], "accuracy": [0.09721305221319199, 0.09087307006120682, 0.09259014576673508, 0.0940430611371994, 0.08638224750757217, 0.09219389408826828], "val_loss": [2.3085429668426514, 2.3085429668426514, 2.3085429668426514, 2.3085429668426514, 2.3085429668426514, 2.3085429668426514], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]