[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8605714440345764, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5848698616027832, 0.8634531497955322, 0.7267534136772156, 0.6388319134712219, 0.5949017405509949, 0.5652888417243958, 0.5312777757644653, 0.5059605240821838, 0.49188661575317383, 0.4750465154647827, 0.4633360207080841, 0.4521574079990387, 0.43985533714294434, 0.4290573298931122, 0.41240397095680237, 0.406855970621109, 0.4072006046772003, 0.3955540359020233, 0.38211870193481445, 0.3747725486755371, 0.3722988963127136, 0.3670109212398529, 0.36135682463645935, 0.3522881865501404, 0.35751911997795105, 0.34448763728141785, 0.3434971272945404, 0.3416890501976013, 0.33151769638061523, 0.3255850076675415, 0.3213435709476471, 0.32207241654396057, 0.3131572902202606], "accuracy": [0.44591203331947327, 0.6925109028816223, 0.7338528633117676, 0.7684586048126221, 0.7825914621353149, 0.7971205711364746, 0.8108572363853455, 0.8162726163864136, 0.8198388814926147, 0.8290846943855286, 0.8397833704948425, 0.8355567455291748, 0.8449346423149109, 0.8466516733169556, 0.8573504090309143, 0.8555012345314026, 0.8562937378883362, 0.8601241707801819, 0.8650112152099609, 0.8692378997802734, 0.8691058158874512, 0.8765024542808533, 0.8673887252807617, 0.8750495314598083, 0.8766345381736755, 0.8786157965660095, 0.8762382864952087, 0.8767666220664978, 0.8864086866378784, 0.8841632604598999, 0.8842953443527222, 0.8908994793891907, 0.8878615498542786], "val_loss": [0.8584741353988647, 0.6581432223320007, 0.6094487309455872, 0.5580034852027893, 0.5117682814598083, 0.5078674554824829, 0.4834854304790497, 0.47689273953437805, 0.45379379391670227, 0.4605327248573303, 0.4379768967628479, 0.45279598236083984, 0.4216359555721283, 0.4329746961593628, 0.4164107143878937, 0.4244106709957123, 0.41172388195991516, 0.40532657504081726, 0.40834710001945496, 0.4001820385456085, 0.3933616578578949, 0.39905664324760437, 0.38959020376205444, 0.4089116156101227, 0.38486355543136597, 0.38582512736320496, 0.38211479783058167, 0.38379165530204773, 0.3860560655593872, 0.3785111904144287, 0.382414847612381, 0.37823498249053955, 0.38005053997039795], "val_accuracy": [0.6946666836738586, 0.7543333172798157, 0.7713333368301392, 0.7986666560173035, 0.8103333115577698, 0.8196666836738586, 0.8256666660308838, 0.8293333053588867, 0.8410000205039978, 0.8336666822433472, 0.8399999737739563, 0.8410000205039978, 0.8510000109672546, 0.8403333425521851, 0.8550000190734863, 0.8500000238418579, 0.8519999980926514, 0.8573333621025085, 0.8543333411216736, 0.8616666793823242, 0.8646666407585144, 0.859000027179718, 0.862333357334137, 0.8479999899864197, 0.8663333058357239, 0.8633333444595337, 0.8663333058357239, 0.8713333606719971, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8686666488647461, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.507475733757019, 0.7901372313499451, 0.6687556505203247, 0.6319916248321533, 0.6232835054397583, 0.5838890671730042, 0.5678401589393616, 0.5703107118606567, 0.575874924659729, 0.5523228645324707, 0.566596508026123, 0.5407288670539856, 0.5422857403755188, 0.5781117677688599, 0.5394542813301086, 0.6353856921195984, 0.647111713886261, 0.6536654829978943, 0.6880351305007935, 0.6929246187210083, 0.6853572130203247, 0.7056000828742981], "accuracy": [0.48606523871421814, 0.724210798740387, 0.7543256878852844, 0.7662131786346436, 0.7778365015983582, 0.7901201844215393, 0.800290584564209, 0.7973847389221191, 0.7981772422790527, 0.7993659973144531, 0.8117818236351013, 0.8120459914207458, 0.8234050869941711, 0.8136309385299683, 0.8215559124946594, 0.7981772422790527, 0.7853652238845825, 0.7960638999938965, 0.7820631265640259, 0.7954035401344299, 0.7924976944923401, 0.7792893648147583], "val_loss": [0.8180302977561951, 0.6092555522918701, 0.57234787940979, 0.545534610748291, 0.563306450843811, 0.5842387080192566, 0.5465240478515625, 0.598274827003479, 0.5922225117683411, 0.6189489960670471, 0.6447945833206177, 0.6207758784294128, 0.6610090136528015, 0.7835158109664917, 0.72031170129776, 0.7503187656402588, 0.6987630724906921, 0.7444553971290588, 0.7019317746162415, 0.6335551142692566, 0.6880303025245667, 0.7069326043128967], "val_accuracy": [0.722000002861023, 0.7820000052452087, 0.7913333177566528, 0.8083333373069763, 0.7979999780654907, 0.8109999895095825, 0.8169999718666077, 0.8223333358764648, 0.8183333277702332, 0.8146666884422302, 0.8193333148956299, 0.8159999847412109, 0.8273333311080933, 0.8243333101272583, 0.7916666865348816, 0.8166666626930237, 0.8276666402816772, 0.8073333501815796, 0.8220000267028809, 0.8106666803359985, 0.8226666450500488, 0.8036666512489319]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 1, 6, 3, 2, 3, 8, 9], [0, 0, 1, 2, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [3, 2, 0, 2, 6, 3, 8, 2, 2, 8, 7, 1, 3, 9, 8, 9], [0, 0, 2, 2, 1, 1, 0, 5, 1], [41, 76, 16, 0, 26], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 25, 16, 9, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(tf.math.multiply(beta, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 1, 3, 2, 3, 8, 0], [1, 0, 1, 0, 2, 3, 0], [0, 39, 94, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [2, 0, 2, 0, 3, 3, 0], [0, 76, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 15, 8, 7, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 2, 8, 0, 2, 7, 1, 3, 9, 7, 1, 2, 6, 5, 2, 4, 7, 5, 3, 2, 4, 8], [0, 2, 1, 0, 2, 1, 3, 2, 0, 0, 1, 3, 2, 2, 3, 0, 3, 3, 1, 1], [18, 26, 39, 99, 81, 50], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 37, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 6, 1], [43], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 47, 27, 20, 6, 15, 8, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.add(grad, alpha))))), tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.square(tf.math.multiply(grad, grad)), grad))), grad)), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))), tf.math.pow(grad, tf.math.sqrt(alpha))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105082511901855, 2.311084270477295, 2.310100793838501, 2.3096091747283936, 2.3102593421936035, 2.3100509643554688], "accuracy": [0.09166556596755981, 0.0882314071059227, 0.09351472556591034, 0.09311848133802414, 0.0948355570435524, 0.09166556596755981], "val_loss": [2.3089139461517334, 2.3089139461517334, 2.3089139461517334, 2.3089139461517334, 2.3089139461517334, 2.3089139461517334], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [1, 1, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 8, 3, 1, 6, 4, 8, 9], [0, 2, 2, 0, 3, 1, 0], [0, 76, 62, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 16, 9, 7, 2, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309539794921875, 2.3103249073028564, 2.3104047775268555, 2.3092727661132812, 2.308858633041382, 2.309464454650879], "accuracy": [0.09047681838274002, 0.09206181764602661, 0.09113723784685135, 0.09496764093637466, 0.0948355570435524, 0.09179764986038208], "val_loss": [2.3090569972991943, 2.3090569972991943, 2.3090569972991943, 2.3090569972991943, 2.3090569972991943, 2.3090569972991943], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]