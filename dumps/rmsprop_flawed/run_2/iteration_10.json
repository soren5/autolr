[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4730595350265503, 0.7949087619781494, 0.6311822533607483, 0.5889476537704468, 0.5463925004005432, 0.5090727210044861, 0.4798522889614105, 0.4584733545780182, 0.4676409661769867, 0.4757080376148224, 0.4553981125354767, 0.4645135700702667, 0.44102174043655396, 0.49337413907051086, 0.5128549933433533, 0.5034480690956116, 0.5565250515937805, 0.5597690343856812, 0.5370953679084778], "accuracy": [0.4795931875705719, 0.7239466309547424, 0.763439416885376, 0.7857614755630493, 0.7955356240272522, 0.8058380484580994, 0.8286884427070618, 0.8285563588142395, 0.8276317715644836, 0.8337075710296631, 0.83119797706604, 0.8387266993522644, 0.847840428352356, 0.8358209133148193, 0.8433496356010437, 0.8330471515655518, 0.8206313848495483, 0.8202351331710815, 0.8417646288871765], "val_loss": [0.7741883397102356, 0.6407173871994019, 0.5597885847091675, 0.5162791609764099, 0.47749537229537964, 0.48503413796424866, 0.5125638842582703, 0.5096772909164429, 0.5098398923873901, 0.49484533071517944, 0.5148327350616455, 0.6381502151489258, 0.6128589510917664, 0.6237725019454956, 0.6423067450523376, 0.5589415431022644, 0.6806777119636536, 0.6599236726760864, 0.6548949480056763], "val_accuracy": [0.7233333587646484, 0.7716666460037231, 0.8086666464805603, 0.8130000233650208, 0.8286666870117188, 0.8306666612625122, 0.8330000042915344, 0.8256666660308838, 0.8370000123977661, 0.8403333425521851, 0.8259999752044678, 0.8286666870117188, 0.8399999737739563, 0.8416666388511658, 0.8230000138282776, 0.8223333358764648, 0.8266666531562805, 0.8309999704360962, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5430705547332764, 0.8310020565986633, 0.6723445057868958, 0.6128377318382263, 0.5794736742973328, 0.5607166290283203, 0.5613560080528259, 0.5579641461372375, 0.5180924534797668, 0.5023461580276489, 0.5268924832344055, 0.512334942817688, 0.5046910047531128, 0.4992285966873169, 0.5000845789909363, 0.5170912742614746, 0.5531171560287476, 0.5575864911079407], "accuracy": [0.478140264749527, 0.7000396251678467, 0.7567031979560852, 0.7680623531341553, 0.7862898111343384, 0.793422281742096, 0.8076872229576111, 0.8075551390647888, 0.8137630224227905, 0.8104609847068787, 0.8210275769233704, 0.819970965385437, 0.8249900937080383, 0.8271034359931946, 0.8285563588142395, 0.8239334225654602, 0.8219521641731262, 0.8067626357078552], "val_loss": [0.888806939125061, 0.6153427958488464, 0.5527622699737549, 0.540613055229187, 0.5211787223815918, 0.5392264723777771, 0.49758878350257874, 0.5399637818336487, 0.513680100440979, 0.513884425163269, 0.5303682684898376, 0.49332597851753235, 0.5251865386962891, 0.4877679944038391, 0.5022071599960327, 0.512729823589325, 0.610841691493988, 0.5525367259979248], "val_accuracy": [0.6996666789054871, 0.7726666927337646, 0.7953333258628845, 0.8090000152587891, 0.8146666884422302, 0.812333345413208, 0.8299999833106995, 0.8289999961853027, 0.8163333535194397, 0.8343333601951599, 0.8403333425521851, 0.8303333520889282, 0.8433333039283752, 0.8353333473205566, 0.831333339214325, 0.8303333520889282, 0.8420000076293945, 0.8259999752044678]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [0, 39, 13], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 7, 3, 7, 1, 8, 9], [0, 0, 2, 0, 3, 1, 0, 1, 5, 3], [0, 27, 16, 0, 24], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 5, 8, 8], [0, 1, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.sqrt(alpha), grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11953506618738174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 11, 6, 5, 2, 24, 14, 10, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 5, 3, 5, 9, 2, 8], [0, 0, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 4, 2, 0, 5, 0, 0], [87, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 1, 7, 5, 8], [7, 6, 1, 4], [0], [0, 0], [0, 9], [4], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 13, 9, 4, 3, 6, 3, 3, 1, 10, 6, 4, 0, 2, 2, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.add(grad, tf.math.square(tf.math.sqrt(alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3103744983673096, 2.3096675872802734, 2.310129165649414, 2.3089439868927, 2.309628963470459, 2.309891939163208], "accuracy": [0.09021265059709549, 0.09602430462837219, 0.08981640636920929, 0.09536388516426086, 0.08942015469074249, 0.09060890227556229], "val_loss": [2.308518648147583, 2.308518648147583, 2.308518648147583, 2.308518648147583, 2.308518648147583, 2.308518648147583], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 1, 1, 0, 3], [0, 66, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 9, 2, 5], [0, 4, 2, 2, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 5, 8, 8], [0, 6, 1], [0], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 9, 5, 4, 2, 15, 9, 6, 2, 8, 6, 2, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)), beta), tf.math.add(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3089802265167236, 2.3099863529205322, 2.310340404510498, 2.310129404067993, 2.310330629348755, 2.3112893104553223], "accuracy": [0.09206181764602661, 0.09113723784685135, 0.0940430611371994, 0.09325055778026581, 0.09153348207473755, 0.09074098616838455], "val_loss": [2.3084652423858643, 2.3084652423858643, 2.3084652423858643, 2.3084652423858643, 2.3084652423858643, 2.3084652423858643], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 2, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 4, 1, 1], [0, 27, 16, 47], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 2, 1, 5, 1, 8, 2, 9, 9], [0, 6, 1], [0, 99, 51], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 12, 9, 3, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089346885681152, 2.3089382648468018, 2.3095333576202393, 2.310215473175049, 2.3102834224700928, 2.310544013977051], "accuracy": [0.09140139818191528, 0.09113723784685135, 0.09272222965955734, 0.09325055778026581, 0.08994849026203156, 0.09259014576673508], "val_loss": [2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]