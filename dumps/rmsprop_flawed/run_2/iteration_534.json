[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 2, 0, 2, 3, 0], [0, 0, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8705714344978333, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512858629226685, 0.8510552644729614, 0.7016775608062744, 0.6237209439277649, 0.5821314454078674, 0.547208845615387, 0.5340997576713562, 0.4954749047756195, 0.4879302382469177, 0.4750159680843353, 0.464155375957489, 0.43654102087020874, 0.4345057010650635, 0.42416295409202576, 0.4218352735042572, 0.40638378262519836, 0.3975018262863159, 0.38346147537231445, 0.3821600079536438, 0.37754255533218384, 0.36753448843955994, 0.36219143867492676, 0.36691373586654663, 0.35669368505477905, 0.34435534477233887, 0.3470633029937744, 0.342456579208374, 0.3326220214366913, 0.3303578794002533, 0.3239966034889221, 0.32227692008018494, 0.3150063455104828, 0.31437423825263977, 0.31242167949676514, 0.30629801750183105, 0.29891934990882874, 0.2982904314994812, 0.28855302929878235, 0.2884645164012909, 0.2830703854560852, 0.28534382581710815, 0.2851825952529907, 0.2764415442943573, 0.27993178367614746, 0.274874746799469, 0.2680070102214813, 0.26923298835754395, 0.265153706073761, 0.26777806878089905], "accuracy": [0.44868576526641846, 0.6963412761688232, 0.7405890822410583, 0.7765156626701355, 0.7910447716712952, 0.8049134612083435, 0.8074230551719666, 0.8239334225654602, 0.8280280232429504, 0.8352925777435303, 0.8342359066009521, 0.8449346423149109, 0.8506141901016235, 0.8491612672805786, 0.852331280708313, 0.8603883385658264, 0.8593316674232483, 0.8684453964233398, 0.8652753829956055, 0.8661999702453613, 0.871879518032074, 0.8721436858177185, 0.8697662353515625, 0.8765024542808533, 0.8768987059593201, 0.8790120482444763, 0.8825782537460327, 0.883238673210144, 0.8845595121383667, 0.8870691061019897, 0.8844274282455444, 0.8864086866378784, 0.886672854423523, 0.8920882344245911, 0.8938053250312805, 0.8943336606025696, 0.8951261639595032, 0.8997490406036377, 0.9030511379241943, 0.9035794734954834, 0.898428201675415, 0.8980319499969482, 0.9013340473175049, 0.9021265506744385, 0.9027869701385498, 0.90423983335495, 0.904768168926239, 0.9054285883903503, 0.9052965044975281], "val_loss": [0.840986967086792, 0.6267140507698059, 0.574476957321167, 0.5294004678726196, 0.5022740960121155, 0.511115312576294, 0.46744999289512634, 0.45950981974601746, 0.44837090373039246, 0.45240384340286255, 0.4301520586013794, 0.4280205965042114, 0.4285690188407898, 0.4100751578807831, 0.41895177960395813, 0.4022582173347473, 0.397126704454422, 0.3990853726863861, 0.38733285665512085, 0.3857741355895996, 0.38053783774375916, 0.389681875705719, 0.37624555826187134, 0.37723469734191895, 0.37232035398483276, 0.3733031451702118, 0.36915725469589233, 0.36601492762565613, 0.363965779542923, 0.3647385239601135, 0.358620285987854, 0.37234917283058167, 0.3564335107803345, 0.3555355668067932, 0.3561009466648102, 0.35199642181396484, 0.36020857095718384, 0.3490610420703888, 0.35322603583335876, 0.3503186106681824, 0.3550361394882202, 0.3568679988384247, 0.349976122379303, 0.3426620364189148, 0.34771573543548584, 0.34373149275779724, 0.3420546054840088, 0.3522103726863861, 0.34236544370651245], "val_accuracy": [0.7036666870117188, 0.7680000066757202, 0.7770000100135803, 0.8026666641235352, 0.8109999895095825, 0.8100000023841858, 0.8303333520889282, 0.8303333520889282, 0.8339999914169312, 0.8379999995231628, 0.843666672706604, 0.8523333072662354, 0.8456666469573975, 0.8523333072662354, 0.8513333201408386, 0.8500000238418579, 0.862666666507721, 0.8529999852180481, 0.8610000014305115, 0.8629999756813049, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.862333357334137, 0.8673333525657654, 0.862333357334137, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8756666779518127, 0.8663333058357239, 0.8736666440963745, 0.8673333525657654, 0.8763333559036255, 0.8793333172798157, 0.8809999823570251, 0.8713333606719971, 0.8676666617393494, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8786666393280029, 0.878333330154419, 0.875333309173584, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.57790207862854, 0.8739559054374695, 0.7163236141204834, 0.6591829061508179, 0.599848210811615, 0.5774803161621094, 0.5567372441291809, 0.5474492907524109, 0.5330938100814819, 0.5294127464294434, 0.5917996764183044, 0.5517706274986267, 0.5641728639602661, 0.5459195375442505, 0.5264355540275574, 0.5482476949691772, 0.6254643797874451, 0.6858199238777161], "accuracy": [0.4525161683559418, 0.698718786239624, 0.7401928305625916, 0.7573636174201965, 0.7868181467056274, 0.7931581139564514, 0.8034605979919434, 0.8084797263145447, 0.8026680946350098, 0.8144234418869019, 0.7954035401344299, 0.8105930685997009, 0.8169330358505249, 0.8124422430992126, 0.8162726163864136, 0.8112534880638123, 0.7766477465629578, 0.7975168228149414], "val_loss": [0.8010991811752319, 0.6126480102539062, 0.5845636129379272, 0.532534658908844, 0.4992749094963074, 0.4673529863357544, 0.4908733665943146, 0.4845929741859436, 0.4840565621852875, 0.5860810279846191, 0.5226629376411438, 0.5413690805435181, 0.5915050506591797, 0.6047494411468506, 0.5646905303001404, 0.6783530116081238, 0.6853524446487427, 0.6132383346557617], "val_accuracy": [0.7326666712760925, 0.7710000276565552, 0.7873333096504211, 0.8009999990463257, 0.8169999718666077, 0.8299999833106995, 0.8266666531562805, 0.8299999833106995, 0.8263333439826965, 0.8153333067893982, 0.8320000171661377, 0.8103333115577698, 0.8349999785423279, 0.8253333568572998, 0.8253333568572998, 0.8169999718666077, 0.8116666674613953, 0.8199999928474426]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 6, 3, 2, 2, 2, 3, 8, 0, 3, 5], [0, 0, 2, 0, 2, 2, 0, 0], [0, 0, 39, 79, 64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 6, 3, 8, 2, 9], [0, 3, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 5, 15, 9, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [714878208.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1516312211751938, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.2168329842602414e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08233333379030228, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 3, 1, 3, 5, 0, 9], [0, 2, 1, 0, 2], [0, 54, 39, 79], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [13, 27, 16, 56], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.negative(grad)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303563356399536, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 4, 2, 3, 8, 4], [0, 0, 2, 0, 2, 3, 0, 2], [45, 0, 83, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 5, 8, 2, 5], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 1, 5, 8, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 4, 11, 6, 5, 3, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.pow(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, 2.3026394844055176, 2.330547332763672, 2.44677734375, 2.446706533432007, 2.44663405418396], "accuracy": [0.08506141602993011, 0.09800554811954498, 0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, 2.302583932876587, 2.4466421604156494, 2.4466817378997803, 2.4465813636779785, 2.4464550018310547], "val_accuracy": [0.10000000149011612, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0, 9], [0, 0, 2, 2, 2, 3, 0], [0, 32, 39, 79], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [1, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 16, 10, 6, 3, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), grad), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309217691421509, 2.3093020915985107, 2.309464454650879, 2.3105645179748535, 2.3090438842773438, 2.310150623321533], "accuracy": [0.08796724677085876, 0.09325055778026581, 0.08902391046285629, 0.09219389408826828, 0.09509972482919693, 0.0944393053650856], "val_loss": [2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]