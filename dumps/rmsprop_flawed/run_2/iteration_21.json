[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5255188941955566, 0.8276504278182983, 0.6647103428840637, 0.6120930314064026, 0.5878058075904846, 0.557913064956665, 0.5506148338317871, 0.5190218687057495, 0.4958867132663727, 0.5256662368774414, 0.5117318630218506, 0.4978500306606293, 0.4795672297477722, 0.5161235928535461], "accuracy": [0.4791969358921051, 0.7128516435623169, 0.7621186375617981, 0.7712323069572449, 0.7825914621353149, 0.7943468689918518, 0.7959318161010742, 0.8140271902084351, 0.8131026029586792, 0.8141592741012573, 0.8214238286018372, 0.8191784620285034, 0.8235371708869934, 0.8257825970649719], "val_loss": [0.8485904932022095, 0.61805659532547, 0.5682724714279175, 0.5532728433609009, 0.5528865456581116, 0.5512639880180359, 0.545615017414093, 0.5339288115501404, 0.6490306258201599, 0.5286498069763184, 0.572600245475769, 0.5743783116340637, 0.5954380035400391, 0.610831618309021], "val_accuracy": [0.6916666626930237, 0.7773333191871643, 0.7919999957084656, 0.7946666479110718, 0.809333324432373, 0.8130000233650208, 0.824999988079071, 0.812333345413208, 0.8299999833106995, 0.8203333616256714, 0.8286666870117188, 0.8216666579246521, 0.8176666498184204, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 0, 6, 3, 4, 2], [0, 2, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [4, 2, 1, 5, 8, 8, 2, 1, 9, 5, 3, 9, 7, 9, 1, 8], [0, 6, 1, 0, 1, 3], [0, 49, 10, 58, 18], [1], [0], [5], [0]], "fitness": -0.3100000023841858, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 1, 22, 16, 6, 5, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.443244218826294, 2.4548511505126953, 2.3082165718078613, 2.3050849437713623, 2.3042759895324707, 2.3031961917877197, 2.3029773235321045], "accuracy": [0.20512482523918152, 0.13010171055793762, 0.11847840249538422, 0.09985470771789551, 0.09179764986038208, 0.09998679161071777, 0.109232597053051], "val_loss": [2.1648223400115967, 2.1430559158325195, 2.3041129112243652, 2.302866220474243, 2.30314040184021, 2.3021140098571777, 2.2992682456970215], "val_accuracy": [0.2133333384990692, 0.3153333365917206, 0.09799999743700027, 0.09799999743700027, 0.10300000011920929, 0.10300000011920929, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 7], [2, 0, 1, 0, 2, 0], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 1, 3, 1, 0], [23, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 1, 4, 8, 8, 3], [0, 6, 1, 5, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 15, 8, 7, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), alpha), tf.math.add(grad, alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(alpha)))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304107427597046, 2.303183078765869, 2.303130626678467, 2.3035552501678467, 2.3031837940216064, 2.30344557762146, 2.3038058280944824, 2.3044075965881348], "accuracy": [0.09787346422672272, 0.1002509593963623, 0.09945846349000931, 0.09668471664190292, 0.09549596905708313, 0.09576013684272766, 0.09853387624025345, 0.09628847241401672], "val_loss": [2.3025922775268555, 2.3032586574554443, 2.302696704864502, 2.303025484085083, 2.302999973297119, 2.3030595779418945, 2.303879976272583, 2.3038487434387207], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10300000011920929, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 6, 3, 1, 3, 7], [0, 0, 1, 0, 3], [32, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 3, 1, 1, 3, 8, 2], [0, 0, 3, 2, 1, 1, 0], [0, 27, 98, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 1, 8, 8, 4, 0, 6, 9, 0, 3], [0, 6, 1, 3, 7], [0, 95], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 16, 11, 5, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(alpha, sigma))))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [46.683101654052734, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1982565075159073, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10.530693054199219, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09366666525602341, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 3, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 1, 2, 0, 2, 1, 0], [0, 47, 28, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 1, 5, 8, 8, 7, 5], [0, 6, 1, 6, 2], [0], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.09342857450246811, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.square(alpha)))), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.311227560043335, 2.3115851879119873, 2.311251640319824, 2.310657501220703, 2.3106842041015625, 2.3104138374328613], "accuracy": [0.09192973375320435, 0.08625016361474991, 0.09219389408826828, 0.09668471664190292, 0.09192973375320435, 0.09245806187391281], "val_loss": [2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128, 2.308140516281128], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 3, 13, 8, 5, 1, 3, 2, 1, 0], "tree_depth": 15}]