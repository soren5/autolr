[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8357142806053162, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5533431768417358, 0.8521777987480164, 0.6810904145240784, 0.6291989088058472, 0.575462818145752, 0.5423579812049866, 0.5266626477241516, 0.48949867486953735, 0.4899013340473175, 0.4686776399612427, 0.47638019919395447, 0.4964280128479004, 0.5014169216156006, 0.48701322078704834, 0.46055805683135986, 0.4889530837535858, 0.4596109688282013, 0.4797588288784027, 0.4458392262458801, 0.470091313123703, 0.4800531566143036], "accuracy": [0.48289525508880615, 0.7045304179191589, 0.7491744756698608, 0.7675340175628662, 0.7841764688491821, 0.7991018295288086, 0.8112534880638123, 0.8175934553146362, 0.8149517774581909, 0.82683926820755, 0.8252542614936829, 0.8277638554573059, 0.8317263126373291, 0.8337075710296631, 0.821820080280304, 0.833179235458374, 0.839519202709198, 0.8280280232429504, 0.8383304476737976, 0.8470479249954224, 0.8376700282096863], "val_loss": [0.8867598176002502, 0.6450327634811401, 0.5923288464546204, 0.5400822758674622, 0.5364029407501221, 0.5155670642852783, 0.48637303709983826, 0.49985888600349426, 0.48001185059547424, 0.5586416125297546, 0.546689510345459, 0.5806961059570312, 0.5414761304855347, 0.5045682191848755, 0.5880182981491089, 0.5679623484611511, 0.5916464924812317, 0.5076961517333984, 0.6792000532150269, 0.5383564829826355, 0.6163966655731201], "val_accuracy": [0.6759999990463257, 0.7616666555404663, 0.7833333611488342, 0.8036666512489319, 0.815666675567627, 0.8309999704360962, 0.8203333616256714, 0.831333339214325, 0.8293333053588867, 0.8320000171661377, 0.8240000009536743, 0.8363333344459534, 0.843666672706604, 0.8416666388511658, 0.8366666436195374, 0.846666693687439, 0.8353333473205566, 0.8396666646003723, 0.8420000076293945, 0.8343333601951599, 0.8426666855812073]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 5, 3, 1, 3, 2, 2, 0, 0], [1, 0, 1, 0, 2, 1, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 9, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 3], [29, 84, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.4262857139110565, "mapping_values": [1, 14, 8, 6, 2, 6, 4, 2, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0448107719421387, 2.3074231147766113, 2.304141044616699, 2.3033359050750732, 2.3034801483154297, 2.3021202087402344, 2.298967123031616, 2.212458610534668, 2.2717370986938477, 2.316431999206543, 2.1638011932373047, 2.236523151397705, 2.3082401752471924], "accuracy": [0.1978602558374405, 0.10394927859306335, 0.10196803510189056, 0.09708096832036972, 0.1010434553027153, 0.10777968913316727, 0.11953506618738174, 0.1904636174440384, 0.17712323367595673, 0.11557257920503616, 0.2526746690273285, 0.24699510633945465, 0.1014397069811821], "val_loss": [2.311716079711914, 2.304097890853882, 2.3028900623321533, 2.302584409713745, 2.3018593788146973, 2.300069570541382, 2.2888433933258057, 1.7274495363235474, 2.3521673679351807, 2.2648210525512695, 2.2174582481384277, 2.310100555419922, 2.3033957481384277], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.10000000149011612, 0.1420000046491623, 0.4350000023841858, 0.1003333330154419, 0.20000000298023224, 0.1979999989271164, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 3, 3, 1, 0], [76, 27, 16, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10999999940395355, "mapping_values": [1, 6, 3, 3, 2, 15, 8, 7, 2, 9, 6, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(beta), grad), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.305372953414917, 2.3021674156188965, 2.301804304122925, 2.3014543056488037, 2.3017759323120117, 2.3021328449249268], "accuracy": [0.08968432247638702, 0.09311848133802414, 0.0866464152932167, 0.0956280529499054, 0.08809932321310043, 0.08149518072605133], "val_loss": [2.301748514175415, 2.301626682281494, 2.301696538925171, 2.3019309043884277, 2.3022079467773438, 2.3022632598876953], "val_accuracy": [0.10866666585206985, 0.07500000298023224, 0.0729999989271164, 0.06199999898672104, 0.046666666865348816, 0.08500000089406967]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 2, 6, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 41, 79], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [70, 76, 16, 5], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [44958498816.0, 6895325675520.0, 113749876801536.0, 813877243674624.0, 3538101985083392.0, 1.1935580971597824e+16], "accuracy": [0.10157178342342377, 0.09932637959718704, 0.09747721254825592, 0.10130762308835983, 0.1026284471154213, 0.09800554811954498], "val_loss": [450145779712.0, 24268819660800.0, 260489883942912.0, 1420249853329408.0, 5319885005520896.0, 1.5694614732210176e+16], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 6, 3, 2, 0, 8, 9], [0, 0, 1, 0, 2, 2, 0], [0, 28, 39, 17], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 3, 2, 0, 3, 2, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 16, 9, 7, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11094967275857925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]