[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8605714440345764, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5848698616027832, 0.8634531497955322, 0.7267534136772156, 0.6388319134712219, 0.5949017405509949, 0.5652888417243958, 0.5312777757644653, 0.5059605240821838, 0.49188661575317383, 0.4750465154647827, 0.4633360207080841, 0.4521574079990387, 0.43985533714294434, 0.4290573298931122, 0.41240397095680237, 0.406855970621109, 0.4072006046772003, 0.3955540359020233, 0.38211870193481445, 0.3747725486755371, 0.3722988963127136, 0.3670109212398529, 0.36135682463645935, 0.3522881865501404, 0.35751911997795105, 0.34448763728141785, 0.3434971272945404, 0.3416890501976013, 0.33151769638061523, 0.3255850076675415, 0.3213435709476471, 0.32207241654396057, 0.3131572902202606], "accuracy": [0.44591203331947327, 0.6925109028816223, 0.7338528633117676, 0.7684586048126221, 0.7825914621353149, 0.7971205711364746, 0.8108572363853455, 0.8162726163864136, 0.8198388814926147, 0.8290846943855286, 0.8397833704948425, 0.8355567455291748, 0.8449346423149109, 0.8466516733169556, 0.8573504090309143, 0.8555012345314026, 0.8562937378883362, 0.8601241707801819, 0.8650112152099609, 0.8692378997802734, 0.8691058158874512, 0.8765024542808533, 0.8673887252807617, 0.8750495314598083, 0.8766345381736755, 0.8786157965660095, 0.8762382864952087, 0.8767666220664978, 0.8864086866378784, 0.8841632604598999, 0.8842953443527222, 0.8908994793891907, 0.8878615498542786], "val_loss": [0.8584741353988647, 0.6581432223320007, 0.6094487309455872, 0.5580034852027893, 0.5117682814598083, 0.5078674554824829, 0.4834854304790497, 0.47689273953437805, 0.45379379391670227, 0.4605327248573303, 0.4379768967628479, 0.45279598236083984, 0.4216359555721283, 0.4329746961593628, 0.4164107143878937, 0.4244106709957123, 0.41172388195991516, 0.40532657504081726, 0.40834710001945496, 0.4001820385456085, 0.3933616578578949, 0.39905664324760437, 0.38959020376205444, 0.4089116156101227, 0.38486355543136597, 0.38582512736320496, 0.38211479783058167, 0.38379165530204773, 0.3860560655593872, 0.3785111904144287, 0.382414847612381, 0.37823498249053955, 0.38005053997039795], "val_accuracy": [0.6946666836738586, 0.7543333172798157, 0.7713333368301392, 0.7986666560173035, 0.8103333115577698, 0.8196666836738586, 0.8256666660308838, 0.8293333053588867, 0.8410000205039978, 0.8336666822433472, 0.8399999737739563, 0.8410000205039978, 0.8510000109672546, 0.8403333425521851, 0.8550000190734863, 0.8500000238418579, 0.8519999980926514, 0.8573333621025085, 0.8543333411216736, 0.8616666793823242, 0.8646666407585144, 0.859000027179718, 0.862333357334137, 0.8479999899864197, 0.8663333058357239, 0.8633333444595337, 0.8663333058357239, 0.8713333606719971, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8686666488647461, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5339595079421997, 0.8316454291343689, 0.7006999850273132, 0.6236486434936523, 0.585627019405365, 0.5643211007118225, 0.5283501148223877, 0.501919150352478, 0.48419463634490967, 0.4852602481842041, 0.4690699875354767, 0.45216605067253113, 0.4522666931152344, 0.4499206244945526, 0.5166233777999878, 0.5426667928695679, 0.542746901512146, 0.5068730115890503], "accuracy": [0.47404569387435913, 0.7078325152397156, 0.7485140562057495, 0.7695152759552002, 0.7791573405265808, 0.7861577272415161, 0.8103289008140564, 0.81548011302948, 0.8235371708869934, 0.8198388814926147, 0.8289526104927063, 0.8341038227081299, 0.8370096683502197, 0.8370096683502197, 0.8372738361358643, 0.8313300609588623, 0.8108572363853455, 0.8220842480659485], "val_loss": [0.8947293162345886, 0.5942354202270508, 0.54962158203125, 0.4966011643409729, 0.49051734805107117, 0.4687035381793976, 0.45541658997535706, 0.4625183045864105, 0.4614946246147156, 0.4531489610671997, 0.4246624708175659, 0.4363739490509033, 0.44834786653518677, 0.5043045282363892, 0.5168234705924988, 0.5123276114463806, 0.5306536555290222, 0.5098159909248352], "val_accuracy": [0.721666693687439, 0.7739999890327454, 0.8119999766349792, 0.8326666951179504, 0.8299999833106995, 0.8399999737739563, 0.8473333120346069, 0.8486666679382324, 0.8410000205039978, 0.8429999947547913, 0.8533333539962769, 0.8533333539962769, 0.8536666631698608, 0.8446666598320007, 0.8510000109672546, 0.8379999995231628, 0.8410000205039978, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 2, 0], [0, 99, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.35114285349845886, "mapping_values": [1, 16, 9, 7, 4, 15, 8, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.278083562850952, 2.3147261142730713, 2.2938055992126465, 2.705519676208496, 2.3065896034240723, 2.3031580448150635, 2.3041744232177734], "accuracy": [0.2176727056503296, 0.11913882195949554, 0.2359001487493515, 0.11649715900421143, 0.09338264167308807, 0.09932637959718704, 0.08942015469074249], "val_loss": [2.401728868484497, 2.2624619007110596, 2.412165403366089, 2.308835029602051, 2.303586959838867, 2.302842378616333, 2.3028366565704346], "val_accuracy": [0.09866666793823242, 0.3646666705608368, 0.26499998569488525, 0.09566666930913925, 0.09966666996479034, 0.09966666996479034, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 3, 8, 2], [2, 0, 4, 0, 3, 1, 0], [7, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 2, 1, 5, 8, 8, 1, 4, 2, 1, 2, 7, 0, 4, 7, 0, 0, 5, 6, 2, 2, 1, 0, 4, 7, 2, 8, 9, 2, 3, 0, 1, 5], [0, 6, 0, 2, 5, 3, 7, 3, 7, 4, 5, 1, 0, 7, 6, 3, 2, 1, 1, 5, 2], [43, 72, 83, 4], [1], [0], [2], [0]], "fitness": -0.23000000417232513, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 1, 54, 33, 21, 4, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(tf.math.negative(beta), grad), tf.math.pow(sigma, grad)), tf.math.add(sigma, tf.math.negative(grad))), grad), tf.math.negative(grad)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), sigma), beta), tf.math.add(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.negative(tf.math.subtract(tf.math.square(grad), beta)))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.7191812992095947, 2.4708099365234375, 2.4937336444854736, 2.3669729232788086, 2.3509929180145264, 2.3393003940582275, 2.3399100303649902], "accuracy": [0.2052568942308426, 0.10870426893234253, 0.11372341960668564, 0.10976093262434006, 0.10645885765552521, 0.09919429570436478, 0.09747721254825592], "val_loss": [2.542404890060425, 2.8002145290374756, 2.307955741882324, 2.334489583969116, 2.3603246212005615, 2.354212522506714, 2.324394464492798], "val_accuracy": [0.13733333349227905, 0.22866666316986084, 0.10166666656732559, 0.09933333098888397, 0.09966666996479034, 0.0963333323597908, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 3, 1, 3, 2, 3, 1, 1, 5, 3, 3, 5, 0, 7, 3, 7, 5, 7, 5, 3, 9, 4, 8, 7, 1, 9, 7, 6, 2], [0, 0, 1, 0, 2, 3, 0, 0, 2, 1, 0, 0, 3, 0, 0, 1, 0, 0, 3, 3], [0, 39, 39, 10, 98, 54, 87, 86, 30, 90, 34, 79, 19], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [59, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 30, 20, 13, 8, 4, 4, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303347587585449, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 6, 3, 8, 1, 2, 3, 8, 0], [0, 2, 1, 0, 2, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 6, 3, 8, 2, 0, 3, 7, 6], [0, 0, 1, 0, 3, 1, 0, 0, 4, 2], [49, 76, 16, 0, 7], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [4, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 22, 12, 10, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.multiply(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.067255497144781e+28, 1236.7994384765625, 2199.254150390625, 3160.40625, 4122.79345703125, 5087.75341796875], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [838.58935546875, 1797.6529541015625, 2757.50927734375, 3718.284423828125, 4680.04248046875, 5642.556640625], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]