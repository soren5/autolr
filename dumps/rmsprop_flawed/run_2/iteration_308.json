[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [27, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8628571629524231, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6143633127212524, 0.845570981502533, 0.7298855185508728, 0.6375519633293152, 0.5913700461387634, 0.5866173505783081, 0.5402423739433289, 0.5186910033226013, 0.5078948140144348, 0.48228469491004944, 0.4749751091003418, 0.46464717388153076, 0.4453752934932709, 0.4305974841117859, 0.43076857924461365, 0.414122611284256, 0.41355639696121216, 0.4125294089317322, 0.3996421992778778, 0.38644644618034363, 0.38918548822402954, 0.37847959995269775, 0.37093302607536316, 0.36569657921791077, 0.3665282726287842, 0.3616611063480377, 0.35744279623031616], "accuracy": [0.4379870593547821, 0.6971337795257568, 0.7386078238487244, 0.7666094303131104, 0.7791573405265808, 0.7884030938148499, 0.805177628993988, 0.8138951063156128, 0.8203672170639038, 0.8289526104927063, 0.830669641494751, 0.8290846943855286, 0.8417646288871765, 0.847840428352356, 0.8487650156021118, 0.8525954484939575, 0.8502179384231567, 0.8532558679580688, 0.8607845902442932, 0.8593316674232483, 0.8632941246032715, 0.8632941246032715, 0.8725399374961853, 0.872407853603363, 0.8704266548156738, 0.8712190985679626, 0.8721436858177185], "val_loss": [0.8426827192306519, 0.7193222045898438, 0.5739498734474182, 0.5684348940849304, 0.5292323231697083, 0.4869915246963501, 0.47463151812553406, 0.4594734013080597, 0.4467908442020416, 0.4493533968925476, 0.42778560519218445, 0.42239904403686523, 0.4187858998775482, 0.40872830152511597, 0.40491336584091187, 0.40363770723342896, 0.4099305272102356, 0.39443081617355347, 0.3857411742210388, 0.3841599225997925, 0.38035091757774353, 0.37839794158935547, 0.3741976022720337, 0.3743104636669159, 0.375977098941803, 0.3726481795310974, 0.37710440158843994], "val_accuracy": [0.7136666774749756, 0.7443333268165588, 0.7983333468437195, 0.7990000247955322, 0.8209999799728394, 0.8376666903495789, 0.8386666774749756, 0.8506666421890259, 0.8483333587646484, 0.843666672706604, 0.8569999933242798, 0.8579999804496765, 0.8619999885559082, 0.859000027179718, 0.862666666507721, 0.8666666746139526, 0.8576666712760925, 0.8700000047683716, 0.8706666827201843, 0.871999979019165, 0.8733333349227905, 0.8766666650772095, 0.8740000128746033, 0.875333309173584, 0.8733333349227905, 0.8743333220481873, 0.8756666779518127]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5009398460388184, 0.7763049006462097, 0.6496753096580505, 0.609160840511322, 0.5597071647644043, 0.5575694441795349, 0.5312231779098511, 0.5273880362510681, 0.49932587146759033, 0.4851694405078888, 0.48004570603370667, 0.48707249760627747, 0.470129132270813, 0.4821948707103729, 0.5137510895729065, 0.5234883427619934, 0.5572380423545837, 0.5561308860778809, 0.6200600862503052, 0.6229287385940552, 0.5648843050003052, 0.6241698861122131], "accuracy": [0.48712190985679626, 0.7209087014198303, 0.7618544697761536, 0.7697794437408447, 0.7951393723487854, 0.7947431206703186, 0.8112534880638123, 0.8150838613510132, 0.8241975903511047, 0.8210275769233704, 0.8284242749214172, 0.8274996876716614, 0.8345000743865967, 0.8350284099578857, 0.8384625315666199, 0.8220842480659485, 0.8247259259223938, 0.8269713521003723, 0.8228767514228821, 0.7956677079200745, 0.8129705190658569, 0.8043851256370544], "val_loss": [0.7893263101577759, 0.6039803624153137, 0.5538053512573242, 0.5080456733703613, 0.48581111431121826, 0.509137749671936, 0.5126262903213501, 0.4896005392074585, 0.49578857421875, 0.5172994136810303, 0.5356846451759338, 0.5188224911689758, 0.5753895044326782, 0.5439815521240234, 0.5638251900672913, 0.5601489543914795, 0.5753470659255981, 0.6656123995780945, 0.578492283821106, 0.587573230266571, 0.6728641986846924, 0.6501452922821045], "val_accuracy": [0.7133333086967468, 0.7789999842643738, 0.7946666479110718, 0.8056666851043701, 0.8209999799728394, 0.8186666369438171, 0.8186666369438171, 0.8370000123977661, 0.8326666951179504, 0.8383333086967468, 0.8410000205039978, 0.8330000042915344, 0.8399999737739563, 0.843999981880188, 0.8356666564941406, 0.8299999833106995, 0.8446666598320007, 0.8286666870117188, 0.8236666917800903, 0.8183333277702332, 0.8326666951179504, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 6, 3, 1, 3, 4, 3, 8, 0, 6, 7, 3, 0], [0, 0, 0, 0, 2, 1, 0, 1, 0, 0], [0, 26, 39, 79, 60, 83, 71], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 1, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 7, 10, 5, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [97, 27, 16, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 3, 1, 5, 8, 8], [0, 6, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.27816668152809143, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 0, 3, 0], [43, 39, 39, 89], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 3, 9, 6, 3, 8, 9, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 3, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3101351261138916, 2.310502290725708, 2.3110268115997314, 2.310321807861328, 2.3101673126220703, 2.3104636669158936], "accuracy": [0.08928807079792023, 0.08915598690509796, 0.08836349099874496, 0.09430722147226334, 0.09351472556591034, 0.09206181764602661], "val_loss": [2.309283971786499, 2.309283971786499, 2.309283971786499, 2.309283971786499, 2.309283971786499, 2.309283971786499], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]