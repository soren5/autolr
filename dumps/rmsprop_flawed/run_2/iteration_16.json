[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5696529150009155, 0.8211415410041809, 0.6686772108078003, 0.609909176826477, 0.565360963344574, 0.5523049831390381, 0.5354519486427307, 0.47691017389297485, 0.46158015727996826, 0.46640366315841675, 0.480093389749527, 0.4638593792915344, 0.42982053756713867, 0.46288880705833435], "accuracy": [0.4815744161605835, 0.719852089881897, 0.7563069462776184, 0.7724210619926453, 0.7890635132789612, 0.8016114234924316, 0.8090080618858337, 0.8269713521003723, 0.8231409192085266, 0.83119797706604, 0.8298771381378174, 0.8296129703521729, 0.8333113193511963, 0.8424250483512878], "val_loss": [0.8764074444770813, 0.7025641202926636, 0.5831348299980164, 0.5446938276290894, 0.5365399122238159, 0.5590195059776306, 0.5089986324310303, 0.5029768347740173, 0.49488314986228943, 0.5592074990272522, 0.5149226784706116, 0.5052160620689392, 0.5285778641700745, 0.6066886186599731], "val_accuracy": [0.6993333101272583, 0.7486666440963745, 0.7870000004768372, 0.8026666641235352, 0.8026666641235352, 0.8083333373069763, 0.8236666917800903, 0.8296666741371155, 0.840666651725769, 0.8360000252723694, 0.8326666951179504, 0.8306666612625122, 0.8376666903495789, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 0, 0, 1], [0, 39, 39, 54], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 6, 7, 8, 8, 9], [0, 0, 2, 0, 3, 1, 5], [0, 27, 16, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 7], [0, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.175428569316864, "mapping_values": [1, 12, 6, 6, 4, 14, 9, 5, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [151196706799616.0, 3.263039659282088e+24, 4.398197746706465e+28, 2.577569357457973e+31, 9.946393272693593e+33, 205656784.0, 342518528.0, 467334016.0, 580769728.0], "accuracy": [0.09708096832036972, 0.10289261490106583, 0.11279883980751038, 0.13181878626346588, 0.13538502156734467, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.259622237621453e+16, 4.0908837046803646e+25, 2.757540527285719e+29, 1.43857638578747e+33, 146416288.0, 289326624.0, 419433888.0, 537864000.0, 645687744.0], "val_accuracy": [0.10733333230018616, 0.09966666996479034, 0.1496666669845581, 0.1743333339691162, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 2, 3, 1, 3, 5], [3, 3, 1, 0, 2], [13, 39, 40], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 6, 8, 2], [5, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 1, 5, 2, 8], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.13685713708400726, "mapping_values": [1, 9, 4, 5, 1, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(tf.math.multiply(grad, alpha), tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [98108384.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1900673657655716, 0.10619468986988068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12768945111040.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.14166666567325592, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 3, 1, 5, 3], [0, 0, 3, 0, 2, 2, 0, 1], [0, 39, 39, 61], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 1, 7, 7, 8, 6, 2, 6, 7, 5, 2, 7, 5, 9, 6, 5, 1, 6, 1, 0], [0, 0, 2, 0, 3, 1, 0, 5, 3, 3, 4, 4, 1, 4, 4, 2, 4, 5, 4], [0, 27, 16, 0, 89], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 4, 46, 27, 19, 5, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.square(grad), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), grad), tf.math.add(grad, tf.math.add(tf.math.square(grad), grad))), alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.subtract(beta, tf.math.negative(grad)))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 1, 7, 5], [1, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 6, 1, 1, 3, 0, 2], [0, 0, 2, 0, 3, 5, 0], [89, 27, 5, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 2, 8, 5, 8, 8], [6, 3, 1], [58], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 7, 4, 3, 1, 5, 3, 2, 2, 9, 6, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.sqrt(grad), tf.math.square(sigma)), tf.math.sqrt(tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.990323118211072e+16, 6.044509648361357e+18, 1.0269452677176676e+20, 7.305571837909276e+20, 3.279775420555165e+21, 1.090351418723919e+22, 3.000653405764824e+22, 7.604157734749168e+22, 1.624061256168569e+23, 3.3301698109245144e+23, 6.680349295137421e+23, 1.1998141368485332e+24, 2.0970575716406785e+24, 3.6944213811318043e+24], "accuracy": [0.09959053993225098, 0.09774138033390045, 0.10342095047235489, 0.09906221181154251, 0.09906221181154251, 0.10210011899471283, 0.10711926966905594, 0.09377889335155487, 0.09985470771789551, 0.09932637959718704, 0.09655263274908066, 0.10394927859306335, 0.09959053993225098, 0.1018359512090683], "val_loss": [4.089553784919818e+17, 2.2014122744168317e+19, 2.3546270207241617e+20, 1.2819872108404026e+21, 4.996460622740994e+21, 1.503207993334013e+22, 3.9938628560663056e+22, 9.206883457899047e+22, 2.0499792830079536e+23, 4.2522706657015475e+23, 7.713198348495107e+23, 1.4286984550113598e+24, 2.4043016410159902e+24, 3.960340132095988e+24], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.08866667002439499, 0.09966666996479034, 0.09866666793823242, 0.09566666930913925, 0.10300000011920929, 0.09366666525602341, 0.10166666656732559, 0.09533333033323288, 0.09566666930913925, 0.09533333033323288]}}]