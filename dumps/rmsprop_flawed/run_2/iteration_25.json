[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5212568044662476, 0.7697073221206665, 0.6394610404968262, 0.5581537485122681, 0.5142794251441956, 0.47919347882270813, 0.47547662258148193, 0.46400392055511475, 0.4583856165409088, 0.4671299159526825, 0.4949561059474945, 0.4802628755569458, 0.4636974334716797, 0.4650690257549286, 0.49244391918182373, 0.4873141348361969, 0.46250322461128235, 0.48681458830833435, 0.4818266034126282, 0.45123347640037537, 0.5017872452735901, 0.4805167615413666, 0.5503572821617126, 0.5490623712539673, 0.5705423355102539, 0.5514932870864868], "accuracy": [0.47272488474845886, 0.726192057132721, 0.7637035846710205, 0.7874785661697388, 0.813498854637146, 0.8156121969223022, 0.8206313848495483, 0.8230088353157043, 0.8294808864593506, 0.8363492488861084, 0.8302733898162842, 0.8298771381378174, 0.837537944316864, 0.8308017253875732, 0.8339717388153076, 0.8437458872795105, 0.8424250483512878, 0.8360850811004639, 0.8302733898162842, 0.8429533839225769, 0.8479725122451782, 0.8441421389579773, 0.8235371708869934, 0.82683926820755, 0.83119797706604, 0.8164047002792358], "val_loss": [0.7794061899185181, 0.6022629141807556, 0.5156416296958923, 0.4942207932472229, 0.5147163271903992, 0.4904227554798126, 0.504408597946167, 0.507395327091217, 0.5295661091804504, 0.6301262974739075, 0.6071657538414001, 0.5717131495475769, 0.5555604100227356, 0.5884859561920166, 0.583419919013977, 0.595446765422821, 0.6014732718467712, 0.5841993093490601, 0.569177508354187, 0.6286450028419495, 0.6728794574737549, 0.5692630410194397, 0.6997101902961731, 0.6395737528800964, 0.7242208123207092, 0.6408247947692871], "val_accuracy": [0.7223333120346069, 0.784333348274231, 0.8106666803359985, 0.8206666707992554, 0.8159999847412109, 0.82833331823349, 0.8353333473205566, 0.8396666646003723, 0.8316666483879089, 0.8289999961853027, 0.8276666402816772, 0.82833331823349, 0.8399999737739563, 0.8370000123977661, 0.843666672706604, 0.8410000205039978, 0.8346666693687439, 0.8356666564941406, 0.8393333554267883, 0.8446666598320007, 0.8479999899864197, 0.8326666951179504, 0.8266666531562805, 0.8293333053588867, 0.831333339214325, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 4, 3, 3, 0], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 6, 3, 8, 2], [0, 0, 5, 5, 3, 1, 0], [16, 27, 16, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.83053588867188, 10807.4287109375, 181470.1875, 1301141.375, 5665533.5, 18497158.0], "accuracy": [0.09721305221319199, 0.10513802617788315, 0.09576013684272766, 0.10196803510189056, 0.09787346422672272, 0.10170386731624603], "val_loss": [809.4761962890625, 39787.1640625, 422862.75, 2298538.25, 8598725.0, 25346644.0], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 3], [2, 0, 1, 0, 2], [0, 39, 37], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [5, 2, 3, 1, 6, 3, 8, 2, 5, 8, 3, 5], [0, 0, 2, 0, 3, 1, 0, 1], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 5, 1, 5, 3, 8], [0, 6, 5], [61], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 20, 12, 8, 4, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(grad), alpha)), tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [9489.6494140625, 1.380525586154008e+30, 2.3158767223358154, 2.3055338859558105, 2.303431272506714, 2.303102731704712, 2.3029582500457764], "accuracy": [0.20578522980213165, 0.1002509593963623, 0.09998679161071777, 0.09906221181154251, 0.09985470771789551, 0.09391097724437714, 0.09549596905708313], "val_loss": [36438164.0, 2.325195074081421, 2.30727219581604, 2.303527593612671, 2.3027565479278564, 2.302628517150879, 2.3026540279388428], "val_accuracy": [0.09733333438634872, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 5, 5, 1, 2, 6, 5, 1, 6, 3, 4, 8, 5, 5], [2, 0, 2, 1, 0, 1, 2, 2, 2, 0, 3], [0, 39, 39], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 1], [0, 2, 3, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 3, 1, 5, 8, 8], [0, 6, 1], [93], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.sqrt(grad), grad)), tf.math.square(grad)))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30904483795166, 2.3106188774108887, 2.3096115589141846, 2.3105528354644775, 2.3102777004241943, 2.310753345489502], "accuracy": [0.09338264167308807, 0.08915598690509796, 0.09470347315073013, 0.09087307006120682, 0.09259014576673508, 0.0936468094587326], "val_loss": [2.3084094524383545, 2.3084094524383545, 2.3084094524383545, 2.3084094524383545, 2.3084094524383545, 2.3084094524383545], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}, "mapping_values": [1, 28, 17, 11, 3, 2, 1, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 1, 5, 6, 8, 1, 7, 7, 7, 4, 2, 8, 3, 0], [0, 0, 1, 3, 2, 0, 0, 0, 1, 3, 3, 2, 1], [14, 39, 39, 44, 60], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 3, 1, 6, 2, 8, 4], [0, 0, 2, 5, 2, 1, 0], [0, 27, 16, 18], [0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 30, 17, 13, 5, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, grad)), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(alpha), tf.math.multiply(tf.math.negative(grad), grad)), grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310267210006714, 2.309492826461792, 2.3105156421661377, 2.3092973232269287, 2.3101861476898193, 2.309248447418213], "accuracy": [0.09179764986038208, 0.09536388516426086, 0.09285431355237961, 0.09192973375320435, 0.09377889335155487, 0.09470347315073013], "val_loss": [2.3086462020874023, 2.3086462020874023, 2.3086462020874023, 2.3086462020874023, 2.3086462020874023, 2.3086462020874023], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]