[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5741775035858154, 0.8289226293563843, 0.6942148804664612, 0.6258808374404907, 0.599233090877533, 0.5982137322425842, 0.5745803117752075, 0.5726911425590515, 0.5827676653862, 0.5874008536338806, 0.5535655617713928, 0.5573047399520874, 0.5666715502738953, 0.5649065375328064, 0.5935739874839783, 0.5820433497428894, 0.5676438808441162, 0.5217735767364502, 0.5388067364692688, 0.5316184163093567, 0.5784111618995667, 0.5642843842506409, 0.5715726613998413, 0.6444576978683472], "accuracy": [0.48170650005340576, 0.7059833407402039, 0.750231146812439, 0.7773081660270691, 0.7790252566337585, 0.7930260300636292, 0.8005547523498535, 0.7979130744934082, 0.7848368883132935, 0.7951393723487854, 0.8072909712791443, 0.8041210174560547, 0.8133667707443237, 0.8173292875289917, 0.8033285140991211, 0.8137630224227905, 0.8092722296714783, 0.8219521641731262, 0.8230088353157043, 0.8235371708869934, 0.8083476424217224, 0.8177255392074585, 0.8171972036361694, 0.8070268034934998], "val_loss": [0.8430002331733704, 0.6646775603294373, 0.5855902433395386, 0.5098124146461487, 0.5187469720840454, 0.5709152221679688, 0.5329518914222717, 0.5519766211509705, 0.5526476502418518, 0.5438948273658752, 0.5536009073257446, 0.6049768924713135, 0.574753999710083, 0.5800854563713074, 0.5648959279060364, 0.5600517988204956, 0.5724214911460876, 0.5525153279304504, 0.5758650898933411, 0.5286139249801636, 0.6431874632835388, 0.5961647629737854, 0.6543962359428406, 0.6550531387329102], "val_accuracy": [0.7013333439826965, 0.7526666522026062, 0.7979999780654907, 0.812666654586792, 0.8209999799728394, 0.8223333358764648, 0.815666675567627, 0.8053333163261414, 0.8023333549499512, 0.8276666402816772, 0.8216666579246521, 0.8220000267028809, 0.8233333230018616, 0.8190000057220459, 0.8286666870117188, 0.8323333263397217, 0.831333339214325, 0.8253333568572998, 0.8383333086967468, 0.8356666564941406, 0.8293333053588867, 0.8246666789054871, 0.824999988079071, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5512245893478394, 0.9901536107063293, 0.7325430512428284, 0.6580010652542114, 0.5976548194885254, 0.5649182796478271, 0.5514019727706909, 0.5206606388092041, 0.5090914368629456, 0.4979967176914215, 0.4883597791194916, 0.503341019153595, 0.48054152727127075, 0.457262247800827, 0.4508875012397766, 0.49189889430999756, 0.45815351605415344, 0.4626842141151428, 0.497602254152298, 0.5412224531173706, 0.5988163352012634, 0.6409125924110413], "accuracy": [0.47246071696281433, 0.6649055480957031, 0.7359662055969238, 0.7619865536689758, 0.7730814814567566, 0.7924976944923401, 0.8075551390647888, 0.8100647330284119, 0.8166688680648804, 0.8142913579940796, 0.8256505131721497, 0.8251221776008606, 0.8315942287445068, 0.8426892161369324, 0.8466516733169556, 0.8337075710296631, 0.8404437899589539, 0.8494254350662231, 0.8384625315666199, 0.824329674243927, 0.8224804997444153, 0.8068947196006775], "val_loss": [1.033837080001831, 0.6135560870170593, 0.5732724070549011, 0.5195712447166443, 0.506058931350708, 0.5036057829856873, 0.5262186527252197, 0.5107549428939819, 0.532204806804657, 0.501286506652832, 0.5080220103263855, 0.5739725828170776, 0.5489196181297302, 0.5810304284095764, 0.5750240683555603, 0.574174165725708, 0.6101540923118591, 0.6002615690231323, 0.5510587096214294, 0.5640863180160522, 0.663481593132019, 0.7432153224945068], "val_accuracy": [0.6363333463668823, 0.7820000052452087, 0.7996666431427002, 0.8109999895095825, 0.8066666722297668, 0.8309999704360962, 0.8296666741371155, 0.8316666483879089, 0.8196666836738586, 0.840666651725769, 0.8289999961853027, 0.8326666951179504, 0.8413333296775818, 0.8276666402816772, 0.8500000238418579, 0.8529999852180481, 0.8543333411216736, 0.8500000238418579, 0.8453333377838135, 0.8523333072662354, 0.8273333311080933, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 1, 3, 1, 0], [0, 81, 16, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 1, 5, 9, 8], [5, 6, 1], [59], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 2, 1, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [15.571922302246094, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18491612374782562, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.604673385620117, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 8, 1, 8, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110599517822266, 2.3090991973876953, 2.3108770847320557, 2.310516834259033, 2.309999942779541, 2.3091139793395996], "accuracy": [0.08770307898521423, 0.0952318087220192, 0.08677849918603897, 0.08492933213710785, 0.09245806187391281, 0.09589222073554993], "val_loss": [2.3094775676727295, 2.3094775676727295, 2.3094775676727295, 2.3094775676727295, 2.3094775676727295, 2.3094775676727295], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 7, 4, 3, 5], [1, 0, 0, 0, 2], [16, 39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 3, 1, 6, 3, 8, 2], [0, 4, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 1, 5, 8, 3], [7, 0, 1, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 0, 7, 3, 4, 2, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(alpha, grad))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100216388702393, 2.310818672180176, 2.3087100982666016, 2.3097946643829346, 2.308415412902832, 2.3095998764038086], "accuracy": [0.08875974267721176, 0.08994849026203156, 0.09219389408826828, 0.0936468094587326, 0.08730682730674744, 0.08796724677085876], "val_loss": [2.308950901031494, 2.308950901031494, 2.308950901031494, 2.308950901031494, 2.308950901031494, 2.308950901031494], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 3, 2, 8, 3, 2, 0], [0, 0, 2, 0, 0, 1, 1], [0, 27, 16, 64], [0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 5, 1, 5, 8, 8], [1, 6, 1], [0], [0, 0, 1, 1], [0, 1], [2, 2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 6, 4, 2, 3, 2, 1, 1, 1, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, beta))", "other_info": {"loss": [2.3090059757232666, 2.309966802597046, 2.3105926513671875, 2.3101091384887695, 2.3100616931915283, 2.310978889465332], "accuracy": [0.09602430462837219, 0.09285431355237961, 0.0878351628780365, 0.0936468094587326, 0.09285431355237961, 0.09166556596755981], "val_loss": [2.3091418743133545, 2.3091418743133545, 2.3091418743133545, 2.3091418743133545, 2.3091418743133545, 2.3091418743133545], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]