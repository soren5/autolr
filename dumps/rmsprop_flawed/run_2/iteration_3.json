[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4730595350265503, 0.7949087619781494, 0.6311822533607483, 0.5889476537704468, 0.5463925004005432, 0.5090727210044861, 0.4798522889614105, 0.4584733545780182, 0.4676409661769867, 0.4757080376148224, 0.4553981125354767, 0.4645135700702667, 0.44102174043655396, 0.49337413907051086, 0.5128549933433533, 0.5034480690956116, 0.5565250515937805, 0.5597690343856812, 0.5370953679084778], "accuracy": [0.4795931875705719, 0.7239466309547424, 0.763439416885376, 0.7857614755630493, 0.7955356240272522, 0.8058380484580994, 0.8286884427070618, 0.8285563588142395, 0.8276317715644836, 0.8337075710296631, 0.83119797706604, 0.8387266993522644, 0.847840428352356, 0.8358209133148193, 0.8433496356010437, 0.8330471515655518, 0.8206313848495483, 0.8202351331710815, 0.8417646288871765], "val_loss": [0.7741883397102356, 0.6407173871994019, 0.5597885847091675, 0.5162791609764099, 0.47749537229537964, 0.48503413796424866, 0.5125638842582703, 0.5096772909164429, 0.5098398923873901, 0.49484533071517944, 0.5148327350616455, 0.6381502151489258, 0.6128589510917664, 0.6237725019454956, 0.6423067450523376, 0.5589415431022644, 0.6806777119636536, 0.6599236726760864, 0.6548949480056763], "val_accuracy": [0.7233333587646484, 0.7716666460037231, 0.8086666464805603, 0.8130000233650208, 0.8286666870117188, 0.8306666612625122, 0.8330000042915344, 0.8256666660308838, 0.8370000123977661, 0.8403333425521851, 0.8259999752044678, 0.8286666870117188, 0.8399999737739563, 0.8416666388511658, 0.8230000138282776, 0.8223333358764648, 0.8266666531562805, 0.8309999704360962, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4853720664978027, 0.7815147638320923, 0.6443718075752258, 0.6044244170188904, 0.5703898072242737, 0.5503413677215576, 0.5020018815994263, 0.4728754758834839, 0.48756662011146545, 0.4694804847240448, 0.4647703766822815, 0.4706471264362335, 0.46016937494277954, 0.46036455035209656, 0.48457369208335876, 0.4590055048465729, 0.44485533237457275], "accuracy": [0.4913485646247864, 0.7260599732398987, 0.7650244235992432, 0.776251494884491, 0.7928939461708069, 0.7975168228149414, 0.8129705190658569, 0.8245938420295715, 0.8227446675300598, 0.8298771381378174, 0.8407079577445984, 0.8400475382804871, 0.8448025584220886, 0.8430854678153992, 0.8437458872795105, 0.8477083444595337, 0.8512746095657349], "val_loss": [0.8369213938713074, 0.6162539124488831, 0.535988450050354, 0.5133535265922546, 0.5073904991149902, 0.4724688231945038, 0.46793773770332336, 0.4898287057876587, 0.49268245697021484, 0.501376748085022, 0.5185569524765015, 0.48748281598091125, 0.5278355479240417, 0.520003080368042, 0.5735015273094177, 0.6323059797286987, 0.6159030199050903], "val_accuracy": [0.7273333072662354, 0.7770000100135803, 0.7993333339691162, 0.8083333373069763, 0.8113333582878113, 0.8386666774749756, 0.8356666564941406, 0.8376666903495789, 0.843999981880188, 0.8346666693687439, 0.8363333344459534, 0.8493333458900452, 0.8416666388511658, 0.8456666469573975, 0.8323333263397217, 0.8479999899864197, 0.8333333134651184]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 2, 4, 4, 5, 2, 4, 9, 6, 1, 2, 7, 3, 2, 9], [1, 0, 1, 0, 2, 3, 1, 2, 2, 0, 0, 3, 0, 3], [0, 39, 60, 91, 69, 52, 5], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2], [0, 0, 0, 0, 4, 1, 0, 2], [0, 27, 36, 26, 15], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [3, 2, 1, 5, 8, 8, 7, 8, 8], [0, 6, 1, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 19, 14, 7, 17, 9, 8, 5, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.pow(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(grad, tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(alpha, grad), tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad))))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.sqrt(grad)))), alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 2, 8, 2], [5, 0, 2, 0, 3, 1, 4], [0, 27, 16, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 6, 5], [0, 0, 1, 2, 1], [0, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310546636581421, 2.309343099594116, 2.3106071949005127, 2.3087711334228516, 2.31015944480896, 2.310004949569702], "accuracy": [0.09457138925790787, 0.09457138925790787, 0.09285431355237961, 0.09457138925790787, 0.09655263274908066, 0.08889182657003403], "val_loss": [2.3086767196655273, 2.3086767196655273, 2.3086767196655273, 2.3086767196655273, 2.3086767196655273, 2.3086767196655273], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [5, 7, 3, 1, 6, 8], [2, 0, 1, 0, 2], [0, 39, 59], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 4, 2, 0, 3, 2, 0], [0, 27, 16, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 6, 1, 1, 8, 8], [0, 6, 1], [0], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3089523315429688, 2.309528112411499, 2.309161901473999, 2.3092856407165527, 2.30940318107605, 2.3098182678222656], "accuracy": [0.09219389408826828, 0.09272222965955734, 0.09351472556591034, 0.09457138925790787, 0.09589222073554993, 0.09589222073554993], "val_loss": [2.3095035552978516, 2.3095035552978516, 2.3095035552978516, 2.3095035552978516, 2.3095035552978516, 2.3095035552978516], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]