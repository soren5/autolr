[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5614436864852905, 0.8100813031196594, 0.6623802185058594, 0.6078211069107056, 0.6061213612556458, 0.5880751013755798, 0.556034505367279, 0.5639345049858093, 0.5339444279670715, 0.5503402948379517, 0.5599190592765808, 0.5006645917892456, 0.4966348707675934, 0.5176094770431519, 0.47679659724235535, 0.49672746658325195, 0.5140453577041626], "accuracy": [0.4815744161605835, 0.7172104120254517, 0.7582882046699524, 0.7689869403839111, 0.7754589915275574, 0.7839123010635376, 0.802271842956543, 0.8014793395996094, 0.8075551390647888, 0.8099326491355896, 0.8038568496704102, 0.8129705190658569, 0.8300092220306396, 0.8152159452438354, 0.837141752243042, 0.8362171649932861, 0.8187822103500366], "val_loss": [0.866614580154419, 0.6334933638572693, 0.5825128555297852, 0.588663637638092, 0.5586463809013367, 0.5780027508735657, 0.6007251739501953, 0.5573194026947021, 0.5591340661048889, 0.547844409942627, 0.5562950968742371, 0.5638951659202576, 0.5612747669219971, 0.605250358581543, 0.6371974945068359, 0.6325862407684326, 0.5898327827453613], "val_accuracy": [0.6933333277702332, 0.7696666717529297, 0.7836666703224182, 0.777999997138977, 0.7963333129882812, 0.8159999847412109, 0.8103333115577698, 0.8153333067893982, 0.8149999976158142, 0.8183333277702332, 0.828000009059906, 0.8339999914169312, 0.82833331823349, 0.8286666870117188, 0.8320000171661377, 0.8196666836738586, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3, 2, 5, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.7882857322692871, "mapping_values": [1, 13, 7, 6, 3, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3019587993621826, 2.284257411956787, 2.2679598331451416, 2.244786262512207, 2.2209479808807373, 2.1875977516174316, 2.1393544673919678, 2.0800282955169678, 1.9955791234970093, 1.8883354663848877, 1.754786729812622, 1.6175426244735718, 1.495008945465088, 1.3859621286392212, 1.29338538646698, 1.2324517965316772, 1.1777125597000122, 1.132839560508728, 1.092934489250183, 1.0479122400283813, 1.0106114149093628, 0.996066689491272, 0.9643677473068237, 0.9508383870124817, 0.9316238164901733, 0.920985996723175, 0.9026848673820496, 0.8863595128059387, 0.8746830821037292, 0.8687902688980103, 0.8517815470695496, 0.8442939519882202, 0.8306570649147034, 0.8334787487983704, 0.8180657625198364, 0.8097063899040222, 0.7958266735076904, 0.8004603981971741, 0.7890428304672241, 0.77281254529953, 0.7800765037536621, 0.7709967494010925, 0.757617175579071, 0.7627116441726685, 0.756011962890625, 0.747079610824585, 0.7596214413642883, 0.7451188564300537, 0.7394083142280579, 0.7345816493034363, 0.7322501540184021, 0.726600170135498, 0.7185620069503784, 0.7054125666618347, 0.7020213007926941, 0.7097548246383667, 0.7013778686523438, 0.7072857022285461, 0.6887198686599731, 0.7009002566337585, 0.6879996061325073, 0.6963298916816711, 0.6868423223495483, 0.6790016889572144, 0.6834774017333984, 0.6835601329803467, 0.6757648587226868, 0.6704770922660828, 0.666427731513977, 0.6698610782623291, 0.6637589931488037, 0.6581591367721558, 0.6619892716407776, 0.6696196794509888, 0.6596018671989441, 0.6504309773445129, 0.6568357944488525, 0.6551337242126465, 0.6428425312042236], "accuracy": [0.10527011007070541, 0.14568749070167542, 0.18359529972076416, 0.24884428083896637, 0.2826575040817261, 0.33166027069091797, 0.35820895433425903, 0.3913617730140686, 0.41764628887176514, 0.43970412015914917, 0.472989022731781, 0.4950468838214874, 0.5128780603408813, 0.5437855124473572, 0.5635979175567627, 0.5801082849502563, 0.5869766473770142, 0.6073173880577087, 0.6199973821640015, 0.629111111164093, 0.6406022906303406, 0.641791045665741, 0.6497160196304321, 0.6623960137367249, 0.6655659675598145, 0.6656980514526367, 0.6775855422019958, 0.6806234121322632, 0.6798309087753296, 0.6886804699897766, 0.6926429867744446, 0.6956809163093567, 0.6985867023468018, 0.6954167485237122, 0.6992471218109131, 0.7087571024894714, 0.7063795924186707, 0.7094175219535828, 0.7096816897392273, 0.7181349992752075, 0.7143045663833618, 0.7210407853126526, 0.7201162576675415, 0.7223616242408752, 0.7253995537757874, 0.7255316376686096, 0.724739134311676, 0.7256637215614319, 0.722757875919342, 0.7343811988830566, 0.7326641082763672, 0.7323999404907227, 0.7333245277404785, 0.7338528633117676, 0.7380794882774353, 0.7304186820983887, 0.7388719916343689, 0.7368907928466797, 0.7483819723129272, 0.737022876739502, 0.7446836829185486, 0.7397965788841248, 0.7445515990257263, 0.7493065595626831, 0.748249888420105, 0.7495707273483276, 0.7453441023826599, 0.7497028112411499, 0.7540615797042847, 0.7511557340621948, 0.7536653280258179, 0.7495707273483276, 0.7520803213119507, 0.7498348951339722, 0.7557786107063293, 0.7604015469551086, 0.7561748623847961, 0.7540615797042847, 0.7573636174201965], "val_loss": [2.2876570224761963, 2.2686898708343506, 2.248152732849121, 2.222883701324463, 2.1905746459960938, 2.1468617916107178, 2.087057590484619, 2.0052647590637207, 1.8956726789474487, 1.755279779434204, 1.5937103033065796, 1.432079792022705, 1.2903566360473633, 1.1761524677276611, 1.0887839794158936, 1.020216464996338, 0.9689241647720337, 0.9251168370246887, 0.890224277973175, 0.8598912954330444, 0.8346927165985107, 0.813367486000061, 0.7938694953918457, 0.778066098690033, 0.7613376379013062, 0.7496100068092346, 0.738004207611084, 0.7256684303283691, 0.7152901887893677, 0.7067124247550964, 0.6972620487213135, 0.6933812499046326, 0.6838578581809998, 0.6762909889221191, 0.6723035573959351, 0.6646259427070618, 0.6580776572227478, 0.6521109342575073, 0.6476725935935974, 0.6426861882209778, 0.6383740305900574, 0.6344441175460815, 0.6293476819992065, 0.6253407597541809, 0.6218908429145813, 0.618813157081604, 0.6151742339134216, 0.6103108525276184, 0.6105193495750427, 0.606894850730896, 0.6017970442771912, 0.5994458198547363, 0.5963118672370911, 0.5930085778236389, 0.589567244052887, 0.5857592821121216, 0.5839455723762512, 0.582372784614563, 0.5814011096954346, 0.5810088515281677, 0.5766801834106445, 0.5788224935531616, 0.5706689357757568, 0.5713455677032471, 0.5687053203582764, 0.5648895502090454, 0.5637615323066711, 0.5610830187797546, 0.5586539506912231, 0.5581021308898926, 0.5564534664154053, 0.5544449090957642, 0.5509380102157593, 0.5511506795883179, 0.5493899583816528, 0.546008288860321, 0.5453599095344543, 0.5432786345481873, 0.5419396162033081], "val_accuracy": [0.15333333611488342, 0.2626666724681854, 0.3930000066757202, 0.437333345413208, 0.46166667342185974, 0.468666672706604, 0.5236666798591614, 0.5463333129882812, 0.578000009059906, 0.6060000061988831, 0.6343333125114441, 0.6473333239555359, 0.6620000004768372, 0.6713333129882812, 0.671999990940094, 0.6800000071525574, 0.6880000233650208, 0.6953333616256714, 0.6959999799728394, 0.7046666741371155, 0.7093333601951599, 0.7133333086967468, 0.7139999866485596, 0.7226666808128357, 0.7243333458900452, 0.7303333282470703, 0.7319999933242798, 0.7369999885559082, 0.7390000224113464, 0.7393333315849304, 0.7419999837875366, 0.7433333396911621, 0.7446666955947876, 0.749666690826416, 0.7526666522026062, 0.7480000257492065, 0.7563333511352539, 0.7576666474342346, 0.7583333253860474, 0.7563333511352539, 0.7573333382606506, 0.7593333125114441, 0.762333333492279, 0.7616666555404663, 0.762666642665863, 0.7649999856948853, 0.7663333415985107, 0.7696666717529297, 0.765666663646698, 0.768666684627533, 0.7706666588783264, 0.768666684627533, 0.7733333110809326, 0.7749999761581421, 0.7706666588783264, 0.7716666460037231, 0.7763333320617676, 0.7753333449363708, 0.7749999761581421, 0.7773333191871643, 0.7796666622161865, 0.7803333401679993, 0.7829999923706055, 0.7793333530426025, 0.7799999713897705, 0.7863333225250244, 0.7823333144187927, 0.7876666784286499, 0.7836666703224182, 0.7846666574478149, 0.7850000262260437, 0.7873333096504211, 0.7903333306312561, 0.7913333177566528, 0.7893333435058594, 0.7879999876022339, 0.7910000085830688, 0.7896666526794434, 0.7900000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 3, 1, 3, 2, 2, 4, 0, 2, 0, 4], [0, 0, 1, 1, 1, 3, 0, 2, 3, 3, 1], [0, 39, 89, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 84], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 3, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, alpha)), alpha), tf.math.negative(grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.pow(grad, grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 1, 1, 0, 2, 3, 0], [0, 39, 41, 79], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [2, 2, 3, 1, 6, 3, 8, 2, 8, 3, 3, 0, 2, 8, 1, 5, 5, 1, 0, 5, 8], [0, 0, 3, 0, 1, 1, 0, 3, 2, 2, 2, 2, 2], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 34, 21, 13, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(alpha), tf.math.multiply(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), beta)))), tf.math.square(tf.math.subtract(tf.math.negative(tf.math.square(beta)), beta))), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 3, 0], [0, 78, 90, 79], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 2, 3, 8, 2, 0], [0, 1, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103246688842773, 2.3105759620666504, 2.310358762741089, 2.310631513595581, 2.3093459606170654, 2.3097901344299316], "accuracy": [0.09140139818191528, 0.09311848133802414, 0.09259014576673508, 0.09549596905708313, 0.0956280529499054, 0.09219389408826828], "val_loss": [2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]