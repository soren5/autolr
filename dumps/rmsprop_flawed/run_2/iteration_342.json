[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.8645714521408081, "mapping_values": [1, 16, 9, 7, 4, 16, 9, 7, 4, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5996499061584473, 0.8963034152984619, 0.7220701575279236, 0.6599181890487671, 0.6117212772369385, 0.5813512802124023, 0.5569454431533813, 0.5365417003631592, 0.5087707042694092, 0.4917945861816406, 0.47812631726264954, 0.4605651795864105, 0.44874972105026245, 0.4400193393230438, 0.43779417872428894, 0.4308006167411804, 0.410349041223526, 0.41637176275253296, 0.4079860746860504, 0.3887026607990265, 0.3867568373680115, 0.38235998153686523, 0.37016916275024414, 0.3759779632091522, 0.36263343691825867, 0.36390671133995056, 0.35775408148765564, 0.3582010567188263, 0.34751665592193604, 0.3454747498035431, 0.33561578392982483, 0.3293773829936981, 0.3330575227737427, 0.33356955647468567, 0.3197841942310333, 0.317922979593277, 0.3141796290874481], "accuracy": [0.4344208240509033, 0.693831741809845, 0.7408532500267029, 0.7621186375617981, 0.7812706232070923, 0.789988100528717, 0.798309326171875, 0.8080834746360779, 0.8190463781356812, 0.8239334225654602, 0.8284242749214172, 0.8381983637809753, 0.8393871188163757, 0.8438779711723328, 0.8424250483512878, 0.8471800088882446, 0.8518029451370239, 0.8551049828529358, 0.8562937378883362, 0.8614450097084045, 0.86118084192276, 0.8648791313171387, 0.8652753829956055, 0.8638224601745605, 0.871879518032074, 0.8706908226013184, 0.8742570281028748, 0.8741249442100525, 0.8770307898521423, 0.8800686597824097, 0.8831065893173218, 0.8820499181747437, 0.8844274282455444, 0.8837670087814331, 0.8854840993881226, 0.8878615498542786, 0.8849557638168335], "val_loss": [0.9074334502220154, 0.6312552690505981, 0.5734075307846069, 0.5567192435264587, 0.5288919806480408, 0.4919843375682831, 0.4923982620239258, 0.45666512846946716, 0.44777172803878784, 0.4637279808521271, 0.4387747347354889, 0.42249178886413574, 0.40985700488090515, 0.4169467091560364, 0.40243181586265564, 0.40890640020370483, 0.4021371603012085, 0.39806509017944336, 0.38484784960746765, 0.3780273497104645, 0.3902437388896942, 0.383583128452301, 0.3724820017814636, 0.37258344888687134, 0.3665012717247009, 0.3681011199951172, 0.3710932731628418, 0.3715391755104065, 0.36342278122901917, 0.36375880241394043, 0.36184266209602356, 0.3562510907649994, 0.3617759048938751, 0.3614536225795746, 0.3587040901184082, 0.35285934805870056, 0.361244261264801], "val_accuracy": [0.6930000185966492, 0.7760000228881836, 0.7873333096504211, 0.793666660785675, 0.8016666769981384, 0.8213333487510681, 0.8230000138282776, 0.8389999866485596, 0.8393333554267883, 0.8336666822433472, 0.8429999947547913, 0.8473333120346069, 0.8560000061988831, 0.8496666550636292, 0.859333336353302, 0.8553333282470703, 0.8576666712760925, 0.8576666712760925, 0.8643333315849304, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.878000020980835, 0.8740000128746033, 0.8763333559036255, 0.874666690826416, 0.8759999871253967, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 6, 3, 1, 8, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 23, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 3, 2, 0, 3, 1, 0], [0, 22, 67, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 3], [2, 0, 1], [4], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "mapping_values": [1, 8, 4, 4, 3, 15, 8, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30318546295166, 2.2648613452911377, 2.1865739822387695, 1.974885106086731, 1.535044550895691, 1.3792080879211426, 1.150923490524292, 0.9501003623008728, 0.9284090995788574, 0.8744761347770691, 0.8468246459960938, 0.8045616149902344, 0.7684357166290283, 0.756692111492157, 0.7454731464385986, 0.7158570885658264, 0.7048490047454834, 0.67031329870224, 0.6562713384628296, 0.6351326107978821, 0.6193671226501465, 0.6076029539108276, 0.6002152562141418, 0.6104183793067932, 0.5901328921318054, 0.5837572813034058, 0.5707246661186218, 0.5644938349723816, 0.551313579082489, 0.5355281233787537, 0.5373833179473877, 0.5406759977340698, 0.5195348858833313, 0.5213757157325745, 0.505695641040802, 0.49605995416641235, 0.5022929310798645, 0.49921688437461853, 0.48573005199432373, 0.48935696482658386, 0.4842623174190521, 0.4746370315551758, 0.47845256328582764, 0.4634988605976105, 0.45310649275779724], "accuracy": [0.10342095047235489, 0.2036719024181366, 0.3349623680114746, 0.39902257919311523, 0.4711398780345917, 0.5295205116271973, 0.6155065298080444, 0.6513010263442993, 0.6643772125244141, 0.6765288710594177, 0.7025492191314697, 0.7041342258453369, 0.7096816897392273, 0.7057191729545593, 0.7172104120254517, 0.7314753532409668, 0.7293620109558105, 0.7400607466697693, 0.748778223991394, 0.7621186375617981, 0.7625148296356201, 0.763967752456665, 0.7732135653495789, 0.763439416885376, 0.7708360552787781, 0.7746664881706238, 0.7804781198501587, 0.78113853931427, 0.7902522683143616, 0.7950072884559631, 0.7922335267066956, 0.7897239327430725, 0.7987055778503418, 0.7926297783851624, 0.8053097128868103, 0.8104609847068787, 0.8104609847068787, 0.8078193068504333, 0.809140145778656, 0.8109893202781677, 0.8187822103500366, 0.8157442808151245, 0.8183859586715698, 0.8164047002792358, 0.8244617581367493], "val_loss": [2.2819244861602783, 2.221118688583374, 2.085564374923706, 1.6607760190963745, 1.0281027555465698, 0.8831128478050232, 0.7939078211784363, 0.8222634196281433, 0.7407910823822021, 0.7198896408081055, 0.7118445634841919, 0.6805482506752014, 0.644696056842804, 0.6349277496337891, 0.6297224164009094, 0.6118630170822144, 0.5966128706932068, 0.5859397053718567, 0.5825608968734741, 0.5739598870277405, 0.5642537474632263, 0.5559670329093933, 0.5549939274787903, 0.5528034567832947, 0.5520894527435303, 0.5435407161712646, 0.5363784432411194, 0.5384039282798767, 0.5360539555549622, 0.5280744433403015, 0.525301992893219, 0.5126590132713318, 0.4982526898384094, 0.49610140919685364, 0.48662060499191284, 0.48600924015045166, 0.4763624966144562, 0.4827985167503357, 0.4810149073600769, 0.47925302386283875, 0.4805690050125122, 0.4619746804237366, 0.4761984348297119, 0.46718695759773254, 0.48042187094688416], "val_accuracy": [0.17366667091846466, 0.4483333230018616, 0.45533332228660583, 0.5536666512489319, 0.6433333158493042, 0.6733333468437195, 0.7149999737739563, 0.7083333134651184, 0.7276666760444641, 0.7246666550636292, 0.7436666488647461, 0.7476666569709778, 0.7549999952316284, 0.7599999904632568, 0.7680000066757202, 0.7620000243186951, 0.7643333077430725, 0.7850000262260437, 0.7853333353996277, 0.7826666831970215, 0.7866666913032532, 0.7870000004768372, 0.7856666445732117, 0.7870000004768372, 0.7833333611488342, 0.7919999957084656, 0.7983333468437195, 0.7973333597183228, 0.8029999732971191, 0.8026666641235352, 0.8029999732971191, 0.8113333582878113, 0.8166666626930237, 0.8213333487510681, 0.8183333277702332, 0.8176666498184204, 0.8270000219345093, 0.8240000009536743, 0.8286666870117188, 0.8303333520889282, 0.8286666870117188, 0.8303333520889282, 0.82833331823349, 0.828000009059906, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5973998308181763, 0.8727370500564575, 0.711376428604126, 0.6377321481704712, 0.5882195830345154, 0.586309552192688, 0.5400793552398682, 0.5085110664367676, 0.49885255098342896, 0.47983384132385254, 0.45026329159736633, 0.4452494978904724, 0.46199455857276917, 0.47452664375305176, 0.4862072169780731], "accuracy": [0.45727115869522095, 0.7013604640960693, 0.7449478507041931, 0.7605336308479309, 0.7792893648147583, 0.7932901978492737, 0.7980451583862305, 0.8104609847068787, 0.8190463781356812, 0.8257825970649719, 0.8313300609588623, 0.8450667262077332, 0.8374059200286865, 0.835160493850708, 0.8310658931732178], "val_loss": [0.8606109023094177, 0.6561042666435242, 0.5851866602897644, 0.5339236855506897, 0.5563138127326965, 0.5348453521728516, 0.4801270365715027, 0.502729594707489, 0.5179363489151001, 0.4992429316043854, 0.4787965416908264, 0.5416585803031921, 0.5426419973373413, 0.5345621109008789, 0.5539922714233398], "val_accuracy": [0.7026666402816772, 0.7609999775886536, 0.7860000133514404, 0.8100000023841858, 0.8043333292007446, 0.8059999942779541, 0.8253333568572998, 0.8180000185966492, 0.8376666903495789, 0.8453333377838135, 0.8379999995231628, 0.8453333377838135, 0.8446666598320007, 0.8446666598320007, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 3, 1, 8, 2, 2, 8, 3], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 2], [0, 0, 2, 0, 2, 1, 0], [18, 76, 16, 14], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [4], [0]], "fitness": -0.2662857174873352, "mapping_values": [1, 13, 7, 6, 3, 12, 6, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2914257049560547, 2.7301604747772217, 2.351644515991211, 2.30470609664917, 2.2985782623291016, 2.1873199939727783, 2.4216701984405518, 2.304213285446167, 2.3038783073425293, 2.3034677505493164, 2.3036673069000244], "accuracy": [0.18650111556053162, 0.14859332144260406, 0.10328886657953262, 0.10038304328918457, 0.12653546035289764, 0.21661603450775146, 0.15942411124706268, 0.09998679161071777, 0.09853387624025345, 0.09760929644107819, 0.09615638852119446], "val_loss": [2.2990341186523438, 2.5476040840148926, 2.3058531284332275, 2.301713228225708, 2.2348320484161377, 2.2422142028808594, 2.3055715560913086, 2.3030741214752197, 2.3027665615081787, 2.302894353866577, 2.3030104637145996], "val_accuracy": [0.15600000321865082, 0.10133333504199982, 0.10300000011920929, 0.10300000011920929, 0.2460000067949295, 0.25999999046325684, 0.09833333641290665, 0.10300000011920929, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 9, 3, 1, 3, 2, 3, 8, 0], [0, 0, 1, 0, 2, 2, 0], [0, 39, 39, 79], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 3, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 18, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 2, 2, 0, 1, 14, 8, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093128204345703, 2.309652805328369, 2.310041904449463, 2.3114376068115234, 2.3092408180236816, 2.309870481491089], "accuracy": [0.0948355570435524, 0.09140139818191528, 0.08902391046285629, 0.09166556596755981, 0.09008057415485382, 0.09166556596755981], "val_loss": [2.3090288639068604, 2.3090288639068604, 2.3090288639068604, 2.3090288639068604, 2.3090288639068604, 2.3090288639068604], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 1, 9, 2, 3, 8, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 79], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 8, 8, 1, 6, 3, 8, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 76, 16, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [2, 0, 1], [43], [0, 1], [0], [2], [0]], "fitness": -0.0868571400642395, "mapping_values": [1, 2, 1, 1, 1, 11, 7, 4, 3, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310007095336914, 2.309281587600708, 2.3098504543304443, 2.3104584217071533, 2.309842109680176, 2.310823678970337], "accuracy": [0.09800554811954498, 0.09734513610601425, 0.09311848133802414, 0.09232597798109055, 0.09126931428909302, 0.08796724677085876], "val_loss": [2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]