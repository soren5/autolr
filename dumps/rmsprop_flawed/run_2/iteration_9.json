[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4730595350265503, 0.7949087619781494, 0.6311822533607483, 0.5889476537704468, 0.5463925004005432, 0.5090727210044861, 0.4798522889614105, 0.4584733545780182, 0.4676409661769867, 0.4757080376148224, 0.4553981125354767, 0.4645135700702667, 0.44102174043655396, 0.49337413907051086, 0.5128549933433533, 0.5034480690956116, 0.5565250515937805, 0.5597690343856812, 0.5370953679084778], "accuracy": [0.4795931875705719, 0.7239466309547424, 0.763439416885376, 0.7857614755630493, 0.7955356240272522, 0.8058380484580994, 0.8286884427070618, 0.8285563588142395, 0.8276317715644836, 0.8337075710296631, 0.83119797706604, 0.8387266993522644, 0.847840428352356, 0.8358209133148193, 0.8433496356010437, 0.8330471515655518, 0.8206313848495483, 0.8202351331710815, 0.8417646288871765], "val_loss": [0.7741883397102356, 0.6407173871994019, 0.5597885847091675, 0.5162791609764099, 0.47749537229537964, 0.48503413796424866, 0.5125638842582703, 0.5096772909164429, 0.5098398923873901, 0.49484533071517944, 0.5148327350616455, 0.6381502151489258, 0.6128589510917664, 0.6237725019454956, 0.6423067450523376, 0.5589415431022644, 0.6806777119636536, 0.6599236726760864, 0.6548949480056763], "val_accuracy": [0.7233333587646484, 0.7716666460037231, 0.8086666464805603, 0.8130000233650208, 0.8286666870117188, 0.8306666612625122, 0.8330000042915344, 0.8256666660308838, 0.8370000123977661, 0.8403333425521851, 0.8259999752044678, 0.8286666870117188, 0.8399999737739563, 0.8416666388511658, 0.8230000138282776, 0.8223333358764648, 0.8266666531562805, 0.8309999704360962, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5836398601531982, 0.8232380747795105, 0.6941337585449219, 0.6184460520744324, 0.5720046758651733, 0.5344797968864441, 0.5695444941520691, 0.5678601861000061, 0.5817707180976868, 0.5645570755004883, 0.5450791120529175, 0.5542927384376526, 0.5348437428474426, 0.5303069949150085, 0.5591526031494141, 0.5292616486549377, 0.5200909972190857, 0.519458532333374, 0.5201159119606018, 0.5103902816772461, 0.49422067403793335, 0.4631997048854828, 0.46972888708114624, 0.4495304226875305, 0.49719324707984924], "accuracy": [0.46968695521354675, 0.7161537408828735, 0.7489103078842163, 0.7705719470977783, 0.8001585006713867, 0.8088759779930115, 0.8082155585289001, 0.7948752045631409, 0.7877426743507385, 0.8171972036361694, 0.8109893202781677, 0.8193105459213257, 0.8092722296714783, 0.8177255392074585, 0.8140271902084351, 0.8289526104927063, 0.8337075710296631, 0.8253863453865051, 0.8280280232429504, 0.8318583965301514, 0.8379341959953308, 0.8428213000297546, 0.8385946154594421, 0.8379341959953308, 0.846387505531311], "val_loss": [0.8117887377738953, 0.6070798635482788, 0.5488907098770142, 0.5434341430664062, 0.5015383362770081, 0.48277750611305237, 0.5379001498222351, 0.5513196587562561, 0.5293871164321899, 0.5194362998008728, 0.5665982961654663, 0.5399136543273926, 0.5520222783088684, 0.6195220351219177, 0.5709844827651978, 0.6145294308662415, 0.5843191146850586, 0.5513307452201843, 0.5480340123176575, 0.5857658982276917, 0.5551155209541321, 0.5416684150695801, 0.5082257986068726, 0.6074800491333008, 0.6182709336280823], "val_accuracy": [0.7133333086967468, 0.7723333239555359, 0.7946666479110718, 0.8053333163261414, 0.8183333277702332, 0.8263333439826965, 0.812666654586792, 0.8140000104904175, 0.8163333535194397, 0.8276666402816772, 0.8246666789054871, 0.8196666836738586, 0.8230000138282776, 0.8240000009536743, 0.8330000042915344, 0.8386666774749756, 0.831333339214325, 0.8293333053588867, 0.8339999914169312, 0.8483333587646484, 0.8446666598320007, 0.8433333039283752, 0.8443333506584167, 0.8410000205039978, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 3], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 1, 0, 2, 8, 1], [0, 4, 7, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 13, 7, 6, 3, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.add(tf.math.sqrt(tf.math.subtract(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 1, 1, 6, 7, 2, 1, 8, 3, 7, 2, 7, 1, 6, 3, 1, 9, 9], [0, 0, 2, 0, 3, 1, 0, 0, 4, 1, 4, 5, 1, 2, 1, 1, 5, 1, 1], [0, 27, 16, 0, 52, 88, 86], [0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 1, 5, 8, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 44, 25, 19, 7, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(alpha), tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, grad), grad), alpha))), tf.math.multiply(tf.math.subtract(beta, alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), alpha)), grad)), alpha), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [54, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [2, 2, 3, 1, 6, 3, 8, 2], [1, 4, 2, 0, 3, 0, 0], [59, 27, 8, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 6, 5, 8, 8], [0, 4, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [861435712.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [41337368576.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 3, 3, 1, 3, 5], [3, 0, 1, 0, 1], [3, 39, 75], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 3, 1, 2, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 63], [0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 3, 5, 8, 8], [0, 6, 1, 7], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 2, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(alpha)), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105666637420654, 2.3096585273742676, 2.3088600635528564, 2.3088388442993164, 2.30887508392334, 2.3091115951538086], "accuracy": [0.09272222965955734, 0.0956280529499054, 0.09325055778026581, 0.09509972482919693, 0.09008057415485382, 0.09615638852119446], "val_loss": [2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]