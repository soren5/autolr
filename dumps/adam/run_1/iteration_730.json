[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240660190582275, 1.8729536533355713, 1.3989499807357788, 1.0851961374282837, 0.9373654723167419, 0.8212133646011353, 0.7646906971931458, 0.7232221364974976, 0.6822917461395264, 0.6491504907608032, 0.6235159635543823, 0.6003793478012085, 0.5746371746063232, 0.5713072419166565, 0.5378093123435974, 0.5346162915229797, 0.5252399444580078, 0.5148546099662781, 0.501358151435852, 0.49127891659736633, 0.47627049684524536, 0.4754115343093872, 0.4617033004760742, 0.4506964683532715, 0.44129782915115356, 0.43308380246162415, 0.4218275845050812, 0.4119107127189636, 0.40744903683662415, 0.4041506350040436, 0.4009556472301483, 0.39387211203575134, 0.3760088086128235, 0.3755049705505371, 0.3706510365009308, 0.3622613251209259, 0.36225903034210205, 0.35531726479530334, 0.3508579134941101, 0.34454643726348877, 0.3437284827232361, 0.33894237875938416, 0.3347165584564209, 0.33074572682380676, 0.3241404592990875, 0.3156353533267975, 0.3165760040283203, 0.3057967722415924, 0.30243435502052307, 0.30095720291137695, 0.2944478988647461, 0.28618013858795166, 0.29156383872032166, 0.28068968653678894, 0.27894240617752075, 0.27347880601882935, 0.27281367778778076, 0.27048587799072266, 0.2615235149860382, 0.2601516544818878, 0.24906042218208313, 0.25048792362213135, 0.2456357181072235, 0.2464371919631958, 0.2431570589542389, 0.23821954429149628, 0.23317697644233704, 0.2272929698228836, 0.22719289362430573, 0.2218225598335266, 0.21861568093299866, 0.2155512422323227, 0.21809181571006775, 0.21418118476867676, 0.2092365324497223, 0.20903533697128296, 0.20301851630210876, 0.20052382349967957, 0.19927912950515747, 0.19251170754432678, 0.18708425760269165, 0.18636241555213928, 0.19158397614955902, 0.18334807455539703, 0.17500874400138855], "accuracy": [0.2674679756164551, 0.48685774207115173, 0.5713908076286316, 0.6196011304855347, 0.6646413803100586, 0.7036058902740479, 0.7259278893470764, 0.7323999404907227, 0.7493065595626831, 0.7584202885627747, 0.7700436115264893, 0.7800818681716919, 0.7890635132789612, 0.7913089394569397, 0.805177628993988, 0.8057059645652771, 0.8125742673873901, 0.8107251524925232, 0.817461371421814, 0.8190463781356812, 0.8251221776008606, 0.8308017253875732, 0.8372738361358643, 0.8389908671379089, 0.8416325449943542, 0.8482366800308228, 0.8494254350662231, 0.8514066934585571, 0.8561616539955139, 0.8558974862098694, 0.8561616539955139, 0.857218325138092, 0.8643507957458496, 0.867520809173584, 0.8671245574951172, 0.8685774803161621, 0.8685774803161621, 0.8714832663536072, 0.8725399374961853, 0.8774270415306091, 0.8761062026023865, 0.8733324408531189, 0.8795403242111206, 0.8786157965660095, 0.8844274282455444, 0.8903711438179016, 0.8809932470321655, 0.8898428082466125, 0.8886540532112122, 0.8926165699958801, 0.8938053250312805, 0.8948619961738586, 0.8905032277107239, 0.9000132083892822, 0.9000132083892822, 0.8990886211395264, 0.9005415439605713, 0.9000132083892822, 0.9038436412811279, 0.9052965044975281, 0.9055606722831726, 0.9091269373893738, 0.9095231890678406, 0.9088627696037292, 0.9089948534965515, 0.9119006991386414, 0.9148064851760864, 0.917580246925354, 0.9170519113540649, 0.9190331697463989, 0.919561505317688, 0.9191652536392212, 0.9210143685340881, 0.9224672913551331, 0.9248448014259338, 0.9228635430335999, 0.9265618920326233, 0.9266939759254456, 0.9286752343177795, 0.9297318458557129, 0.9310526847839355, 0.9318451881408691, 0.9266939759254456, 0.9317131042480469, 0.9351472854614258], "val_loss": [2.041073799133301, 1.508432149887085, 1.0305495262145996, 0.82029128074646, 0.7331951260566711, 0.6799197793006897, 0.6322064399719238, 0.6047568917274475, 0.581655740737915, 0.5615538954734802, 0.538649320602417, 0.5255550742149353, 0.511741042137146, 0.5001835823059082, 0.4863555431365967, 0.48115673661231995, 0.48149895668029785, 0.46483927965164185, 0.4623287618160248, 0.45215320587158203, 0.4434765577316284, 0.44144734740257263, 0.4366849660873413, 0.42749300599098206, 0.42665231227874756, 0.41708463430404663, 0.41429802775382996, 0.41090115904808044, 0.40794071555137634, 0.403062105178833, 0.3961549401283264, 0.3975573778152466, 0.39602208137512207, 0.38931429386138916, 0.39468637108802795, 0.3840487003326416, 0.38121485710144043, 0.3870760202407837, 0.3786088824272156, 0.3731326460838318, 0.3711588680744171, 0.3695259094238281, 0.36941951513290405, 0.36679601669311523, 0.37276774644851685, 0.3696105182170868, 0.3624187111854553, 0.3621327579021454, 0.363630086183548, 0.3617017865180969, 0.3594338297843933, 0.35918474197387695, 0.3560679256916046, 0.3565843999385834, 0.3490058183670044, 0.3538734018802643, 0.35664743185043335, 0.3473908007144928, 0.35559290647506714, 0.34590137004852295, 0.35233405232429504, 0.35473954677581787, 0.3508068025112152, 0.3466701805591583, 0.34913694858551025, 0.3519839346408844, 0.34557414054870605, 0.34224796295166016, 0.3468772768974304, 0.348262220621109, 0.34684979915618896, 0.3527877926826477, 0.34319445490837097, 0.3521344065666199, 0.3482746481895447, 0.3398466408252716, 0.3432796895503998, 0.3457445502281189, 0.3408666253089905, 0.34293586015701294, 0.3485540449619293, 0.35442760586738586, 0.3429996073246002, 0.3435037434101105, 0.3490371108055115], "val_accuracy": [0.5833333134651184, 0.6666666865348816, 0.6970000267028809, 0.7139999866485596, 0.7419999837875366, 0.7563333511352539, 0.7723333239555359, 0.7789999842643738, 0.7803333401679993, 0.7956666946411133, 0.7953333258628845, 0.8073333501815796, 0.8100000023841858, 0.8136666417121887, 0.8230000138282776, 0.8199999928474426, 0.8193333148956299, 0.8286666870117188, 0.8306666612625122, 0.8320000171661377, 0.8343333601951599, 0.840666651725769, 0.8403333425521851, 0.8433333039283752, 0.847000002861023, 0.8473333120346069, 0.8506666421890259, 0.8496666550636292, 0.856333315372467, 0.8556666374206543, 0.8579999804496765, 0.8600000143051147, 0.859333336353302, 0.8633333444595337, 0.8586666584014893, 0.8619999885559082, 0.8629999756813049, 0.8643333315849304, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8700000047683716, 0.8666666746139526, 0.8696666955947876, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8676666617393494, 0.8703333139419556, 0.8683333396911621, 0.8733333349227905, 0.8759999871253967, 0.8730000257492065, 0.8763333559036255, 0.875333309173584, 0.8743333220481873, 0.875333309173584, 0.8730000257492065, 0.8776666522026062, 0.878000020980835, 0.8776666522026062, 0.878000020980835, 0.8766666650772095, 0.8813333511352539, 0.8756666779518127, 0.8820000290870667, 0.8809999823570251, 0.8820000290870667, 0.8776666522026062, 0.8830000162124634, 0.8799999952316284, 0.8826666474342346, 0.8843333125114441, 0.8830000162124634, 0.8790000081062317, 0.8793333172798157, 0.8830000162124634, 0.8859999775886536, 0.8870000243186951, 0.8836666941642761, 0.8823333382606506, 0.8813333511352539, 0.8859999775886536, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 1, 0, 2], [77, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 8, 5, 3], [0, 0, 0, 3], [16, 16, 40], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 11, 7, 4, 3, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303938150405884, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3], [1, 1, 0, 2, 2], [85, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 8, 2, 6, 9, 8, 6, 0, 2, 4, 3, 8], [1, 2, 2, 4, 4, 4], [99], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [58, 21, 96, 99, 61, 40]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 10, 6, 4, 1, 18, 12, 6, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.add(tf.math.pow(beta, tf.math.multiply(grad, grad)), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [8, 2, 8, 0, 3, 5], [0, 3, 0, 3], [92, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8, 1], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(alpha, beta))))))", "other_info": {"loss": [2.3084592819213867, 2.303056240081787, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.08770307898521423, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3046445846557617, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.06133333221077919, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [2, 2, 3, 0, 3, 5, 6], [0, 1, 0, 2, 1, 0], [27, 39, 11], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [53, 16], [0, 1], [0], [0], [66], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 8, 4, 2, 4, 2, 0], [4, 0, 2, 3, 0, 0, 0, 1, 2, 4], [94, 99, 96, 96, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, sigma)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(tf.math.negative(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}]