[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223620653152466, 1.873500943183899, 1.3999601602554321, 1.1211110353469849, 0.9490190744400024, 0.8647238612174988, 0.7881119847297668, 0.7565659284591675, 0.7050904035568237, 0.6811105608940125, 0.6564769148826599, 0.6355602145195007, 0.6157998442649841, 0.5966760516166687, 0.5739821195602417, 0.5682291984558105, 0.5483264923095703, 0.528965413570404, 0.523600161075592, 0.5193031430244446, 0.5001741051673889, 0.49469420313835144, 0.4813165068626404, 0.46966326236724854, 0.4654715955257416, 0.4491744935512543, 0.44311845302581787, 0.4452270567417145, 0.43394970893859863, 0.4298020601272583, 0.4198589026927948, 0.4148350954055786, 0.40716245770454407, 0.4026091992855072, 0.39983606338500977, 0.3883320689201355, 0.3797675669193268, 0.38071274757385254, 0.37253427505493164, 0.36894112825393677, 0.3643682301044464, 0.35829102993011475, 0.3542707860469818, 0.34661367535591125, 0.339043527841568, 0.33806487917900085, 0.33392533659935, 0.333028644323349, 0.32473498582839966, 0.31762945652008057, 0.3178699016571045, 0.3065785765647888, 0.30561763048171997, 0.305544912815094, 0.2990827262401581, 0.2975485622882843, 0.2888345718383789, 0.2864255905151367, 0.28130805492401123, 0.2779105007648468, 0.2732136845588684, 0.26615405082702637, 0.2666229009628296, 0.26090508699417114, 0.2582610547542572, 0.24974073469638824, 0.2515285909175873, 0.2582629323005676, 0.2461823970079422, 0.24053193628787994, 0.24189375340938568, 0.23582343757152557, 0.22967953979969025, 0.2240179479122162, 0.22706881165504456, 0.21727947890758514, 0.21025855839252472, 0.2124386578798294, 0.20753096044063568, 0.20658163726329803, 0.20434997975826263, 0.19820673763751984, 0.20311219990253448, 0.19280599057674408, 0.19502228498458862, 0.18696901202201843, 0.19316017627716064, 0.183603435754776, 0.1854301393032074, 0.17819960415363312, 0.17884452641010284, 0.17528605461120605, 0.16867105662822723, 0.17274422943592072, 0.1666712611913681, 0.16325564682483673, 0.1602892130613327, 0.15319786965847015, 0.15763457119464874, 0.1551181972026825], "accuracy": [0.28239333629608154, 0.47166821360588074, 0.5674283504486084, 0.6065248847007751, 0.6633205413818359, 0.6921146512031555, 0.7170783281326294, 0.7255316376686096, 0.7429665923118591, 0.7535332441329956, 0.7619865536689758, 0.7676661014556885, 0.7815347909927368, 0.7872143983840942, 0.7930260300636292, 0.7898560166358948, 0.8082155585289001, 0.8138951063156128, 0.8164047002792358, 0.817461371421814, 0.819442629814148, 0.8261788487434387, 0.8337075710296631, 0.8318583965301514, 0.8345000743865967, 0.8436138033866882, 0.8425571322441101, 0.8444063067436218, 0.8425571322441101, 0.8441421389579773, 0.8465195894241333, 0.8527275323867798, 0.8562937378883362, 0.8541803956031799, 0.8595958352088928, 0.8632941246032715, 0.8595958352088928, 0.8634262084960938, 0.8667283058166504, 0.8698983192443848, 0.8697662353515625, 0.8722757697105408, 0.8706908226013184, 0.8771628737449646, 0.876370370388031, 0.8794082403182983, 0.8803328275680542, 0.8829745054244995, 0.883238673210144, 0.886672854423523, 0.8849557638168335, 0.8882578015327454, 0.8899748921394348, 0.8924844861030579, 0.8972394466400146, 0.8923524022102356, 0.896446943283081, 0.8971073627471924, 0.8975036144256592, 0.8973715305328369, 0.9034473896026611, 0.9019944667816162, 0.9027869701385498, 0.91124027967453, 0.9056927561759949, 0.9113723635673523, 0.9108440279960632, 0.9078060984611511, 0.9148064851760864, 0.9113723635673523, 0.913617730140686, 0.9120327830314636, 0.9142781496047974, 0.9185048341751099, 0.9182406663894653, 0.9215427041053772, 0.9232597947120667, 0.9236560463905334, 0.9237881302833557, 0.9256373047828674, 0.9260335564613342, 0.9310526847839355, 0.9273543953895569, 0.9315810203552246, 0.9277506470680237, 0.9309206008911133, 0.9285431504249573, 0.9340906143188477, 0.9315810203552246, 0.9354114532470703, 0.9346189498901367, 0.9371285438537598, 0.9429401755332947, 0.937656819820404, 0.939638078212738, 0.9404305815696716, 0.9426760077476501, 0.9467705488204956, 0.9430722594261169, 0.9458459615707397], "val_loss": [2.0369369983673096, 1.504742980003357, 1.0298115015029907, 0.8213402628898621, 0.7336570620536804, 0.6751967668533325, 0.6340945363044739, 0.5987119674682617, 0.5707155466079712, 0.5518378615379333, 0.5329239368438721, 0.516954779624939, 0.5068480968475342, 0.49169978499412537, 0.47969743609428406, 0.47212305665016174, 0.45930445194244385, 0.45718637108802795, 0.44501790404319763, 0.44368284940719604, 0.43337899446487427, 0.4227541387081146, 0.4196998178958893, 0.41413021087646484, 0.4077208936214447, 0.40395796298980713, 0.40370553731918335, 0.39480453729629517, 0.3932643234729767, 0.387743204832077, 0.3876657783985138, 0.38211169838905334, 0.37984806299209595, 0.3734597861766815, 0.37956225872039795, 0.37102025747299194, 0.36484989523887634, 0.3666551411151886, 0.36401936411857605, 0.3605647087097168, 0.35838598012924194, 0.3583974540233612, 0.3530725836753845, 0.3547334372997284, 0.3556480407714844, 0.3538118600845337, 0.3569186329841614, 0.3493947684764862, 0.3473924696445465, 0.34643468260765076, 0.34298208355903625, 0.3491765856742859, 0.35562843084335327, 0.3430001139640808, 0.3389556109905243, 0.3481726348400116, 0.3391755223274231, 0.3415679931640625, 0.34492227435112, 0.3373895585536957, 0.33889222145080566, 0.33778896927833557, 0.34007787704467773, 0.3360533118247986, 0.33495572209358215, 0.33472737669944763, 0.3328845500946045, 0.3329639136791229, 0.33922383189201355, 0.3385958969593048, 0.33203125, 0.3330816924571991, 0.33344709873199463, 0.3297540545463562, 0.33050984144210815, 0.3328060209751129, 0.3334923982620239, 0.33444783091545105, 0.3311419188976288, 0.33164677023887634, 0.3334157168865204, 0.3316917419433594, 0.3305984437465668, 0.33767029643058777, 0.3336542546749115, 0.32961922883987427, 0.3332706391811371, 0.3336176872253418, 0.32812637090682983, 0.3449001610279083, 0.3408523201942444, 0.3326399624347687, 0.33811917901039124, 0.34164443612098694, 0.33739203214645386, 0.3362652659416199, 0.3380807340145111, 0.34241193532943726, 0.3437631130218506, 0.34498995542526245], "val_accuracy": [0.5506666898727417, 0.6726666688919067, 0.6943333148956299, 0.7243333458900452, 0.7426666617393494, 0.7609999775886536, 0.7746666669845581, 0.7866666913032532, 0.7943333387374878, 0.7963333129882812, 0.8050000071525574, 0.8100000023841858, 0.8149999976158142, 0.8213333487510681, 0.828000009059906, 0.8289999961853027, 0.8360000252723694, 0.8293333053588867, 0.8403333425521851, 0.8443333506584167, 0.8433333039283752, 0.8500000238418579, 0.8473333120346069, 0.856333315372467, 0.8539999723434448, 0.8533333539962769, 0.8583333492279053, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.862333357334137, 0.8613333106040955, 0.8616666793823242, 0.8640000224113464, 0.8650000095367432, 0.8653333187103271, 0.8683333396911621, 0.8666666746139526, 0.8696666955947876, 0.8693333268165588, 0.8703333139419556, 0.8709999918937683, 0.8756666779518127, 0.874666690826416, 0.8696666955947876, 0.8759999871253967, 0.8706666827201843, 0.8740000128746033, 0.8736666440963745, 0.8740000128746033, 0.8776666522026062, 0.8756666779518127, 0.875333309173584, 0.8773333430290222, 0.8806666731834412, 0.8730000257492065, 0.8790000081062317, 0.8803333044052124, 0.8809999823570251, 0.8809999823570251, 0.8836666941642761, 0.8830000162124634, 0.8793333172798157, 0.8816666603088379, 0.8846666812896729, 0.8823333382606506, 0.8843333125114441, 0.8863333463668823, 0.8846666812896729, 0.8849999904632568, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8870000243186951, 0.887333333492279, 0.8886666893959045, 0.8896666765213013, 0.887666642665863, 0.8889999985694885, 0.8880000114440918, 0.890999972820282, 0.8893333077430725, 0.8913333415985107, 0.887666642665863, 0.890999972820282, 0.8920000195503235, 0.8896666765213013, 0.8899999856948853, 0.8923333287239075, 0.8889999985694885, 0.8913333415985107, 0.890333354473114, 0.8926666378974915, 0.8889999985694885, 0.8946666717529297, 0.890333354473114, 0.8930000066757202, 0.8926666378974915, 0.8926666378974915, 0.8899999856948853]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 1, 1, 3, 2, 8, 3, 3, 5, 6, 5, 3, 9, 6, 1], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 6, 6, 1, 0], [16, 99, 96, 99, 61, 1, 87, 73, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 34, 20, 14, 9], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(grad, alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 1, 9], [0, 0, 0, 3, 2], [16, 16, 18, 43], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [4, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 14, 9, 5, 4, 2, 1, 1, 0, 20, 11, 9, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 2, 2], [39, 55], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [4], [35], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 5, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 9, 5, 4, 1, 2, 1, 1, 0, 8, 4, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))", "other_info": {"loss": [2.3033196926116943, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09760929644107819, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033], "val_accuracy": [0.10166666656732559, 0.09666666388511658, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 0, 3], [39, 39, 65], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 2, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]