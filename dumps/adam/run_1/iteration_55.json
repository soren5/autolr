[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2215120792388916, 1.862992525100708, 1.3973826169967651, 1.0928642749786377, 0.9313559532165527, 0.8315261602401733, 0.7797667384147644, 0.7291663885116577, 0.6961065530776978, 0.6633037328720093, 0.6475586295127869, 0.6125136017799377, 0.6018008589744568, 0.5865208506584167, 0.560708224773407, 0.5512473583221436, 0.5420276522636414, 0.5256077647209167, 0.5148316621780396, 0.5009538531303406, 0.49385666847229004, 0.48412683606147766, 0.4722726047039032, 0.4632100760936737, 0.4541342258453369, 0.44601109623908997, 0.44600361585617065, 0.4308496415615082, 0.41694679856300354, 0.41532647609710693, 0.40602612495422363, 0.40996721386909485, 0.4013671875, 0.3945508301258087, 0.39051151275634766, 0.37565794587135315, 0.37607187032699585, 0.37441304326057434, 0.3755054771900177, 0.36008861660957336, 0.3556848466396332, 0.34879669547080994, 0.3448422849178314, 0.33921000361442566, 0.339123398065567, 0.33537575602531433], "accuracy": [0.2805441915988922, 0.48566898703575134, 0.5538238286972046, 0.6213181614875793, 0.6696605682373047, 0.7034738063812256, 0.7226257920265198, 0.7331924438476562, 0.7486461400985718, 0.7530049085617065, 0.7613261342048645, 0.7784969210624695, 0.7860256433486938, 0.7930260300636292, 0.7988376617431641, 0.8006868362426758, 0.8021397590637207, 0.8164047002792358, 0.8150838613510132, 0.8238013386726379, 0.8245938420295715, 0.8249900937080383, 0.8342359066009521, 0.8333113193511963, 0.8342359066009521, 0.8412362933158875, 0.8401796221733093, 0.846387505531311, 0.8545766472816467, 0.8527275323867798, 0.8552370667457581, 0.8541803956031799, 0.8565579056739807, 0.8599920868873596, 0.8625016212463379, 0.8618412613868713, 0.8643507957458496, 0.8647470474243164, 0.8617091774940491, 0.8726720213890076, 0.8717474341392517, 0.8755778670310974, 0.8758420348167419, 0.8796724081039429, 0.8790120482444763, 0.8754457831382751], "val_loss": [2.0334866046905518, 1.5038089752197266, 1.0365875959396362, 0.8348301649093628, 0.7386505603790283, 0.679747998714447, 0.6350335478782654, 0.6036192178726196, 0.5808818936347961, 0.5555176734924316, 0.5379435420036316, 0.5206660032272339, 0.5089568495750427, 0.492839515209198, 0.4837069511413574, 0.4749382436275482, 0.4687904417514801, 0.4586884379386902, 0.4544939696788788, 0.4467319846153259, 0.4401297867298126, 0.43280744552612305, 0.4251541197299957, 0.4193841218948364, 0.4175836145877838, 0.41154149174690247, 0.40842562913894653, 0.4021567404270172, 0.3989417254924774, 0.3955830931663513, 0.3927232623100281, 0.39127469062805176, 0.3863045275211334, 0.3840785026550293, 0.3787737190723419, 0.3799063265323639, 0.3770337998867035, 0.3716582953929901, 0.37282103300094604, 0.3760368525981903, 0.3680104911327362, 0.3634173572063446, 0.36450284719467163, 0.3594256043434143, 0.3611260652542114, 0.36016547679901123], "val_accuracy": [0.5236666798591614, 0.6626666784286499, 0.6883333325386047, 0.6996666789054871, 0.7383333444595337, 0.753333330154419, 0.7723333239555359, 0.7820000052452087, 0.7906666398048401, 0.7979999780654907, 0.8059999942779541, 0.812333345413208, 0.8136666417121887, 0.8263333439826965, 0.8263333439826965, 0.828000009059906, 0.8323333263397217, 0.8353333473205566, 0.8379999995231628, 0.840666651725769, 0.8450000286102295, 0.8486666679382324, 0.8510000109672546, 0.8506666421890259, 0.8523333072662354, 0.8560000061988831, 0.856333315372467, 0.8586666584014893, 0.8606666922569275, 0.859333336353302, 0.859666645526886, 0.8583333492279053, 0.8636666536331177, 0.8663333058357239, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.8666666746139526, 0.8616666793823242, 0.8679999709129333, 0.8730000257492065, 0.8726666569709778, 0.8696666955947876, 0.8686666488647461, 0.8686666488647461, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [3, 2, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 73, 99, 61, 1]], "fitness": -0.45828571915626526, "mapping_values": [1, 6, 4, 2, 0, 2, 1, 1, 0, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3090479373931885, 2.306865692138672, 2.3057472705841064, 2.3020212650299072, 2.2963428497314453, 2.29227352142334, 2.2841742038726807, 2.2778704166412354, 2.2704882621765137, 2.26137375831604, 2.2517240047454834, 2.2407824993133545, 2.2293620109558105, 2.2153677940368652, 2.2001469135284424, 2.1850574016571045, 2.1667611598968506, 2.1429691314697266, 2.1170856952667236, 2.086320161819458], "accuracy": [0.09285431355237961, 0.09774138033390045, 0.09853387624025345, 0.10619468986988068, 0.12019548565149307, 0.12455421686172485, 0.1504424810409546, 0.1666886806488037, 0.18742570281028748, 0.21754062175750732, 0.24884428083896637, 0.27658170461654663, 0.3003566265106201, 0.3259807229042053, 0.34420815110206604, 0.349359393119812, 0.36203935742378235, 0.37287017703056335, 0.3829084634780884, 0.38185179233551025], "val_loss": [2.3075761795043945, 2.305509567260742, 2.302163600921631, 2.297597885131836, 2.29195499420166, 2.2853548526763916, 2.27799916267395, 2.2699718475341797, 2.261258363723755, 2.251777410507202, 2.2413971424102783, 2.22997784614563, 2.2172114849090576, 2.2028512954711914, 2.1864850521087646, 2.167569637298584, 2.145455837249756, 2.119419813156128, 2.0885751247406006, 2.0520381927490234], "val_accuracy": [0.0949999988079071, 0.09466666728258133, 0.10000000149011612, 0.10866666585206985, 0.13233333826065063, 0.15600000321865082, 0.19766665995121002, 0.26866665482521057, 0.34333333373069763, 0.3959999978542328, 0.42933332920074463, 0.4339999854564667, 0.43700000643730164, 0.4403333365917206, 0.4426666796207428, 0.4410000145435333, 0.43666666746139526, 0.4336666762828827, 0.4333333373069763, 0.43666666746139526]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 2, 3, 0, 3], [2, 1, 0, 2], [82, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3], [16, 11], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8, 5, 2, 9], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 42, 61, 1]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 6, 3, 3, 2, 2, 1, 1, 1, 24, 14, 10, 6], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.square(tf.math.add(sigma, alpha)))))), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.3226053787668203e+25, 8.423295241203827e+25, 1.774091814989161e+26, 2.7344621466709315e+26, 3.629376974018755e+26, 4.763477634582077e+26, 5.7843979279462734e+26], "accuracy": [0.09826971590518951, 0.09615638852119446, 0.09668471664190292, 0.10038304328918457, 0.10011887550354004, 0.1002509593963623, 0.09945846349000931], "val_loss": [3.8050537111012443e+25, 9.069200606247137e+25, 1.433431364961389e+26, 2.0634913457802645e+26, 2.7350738407044157e+26, 3.3522386250785645e+26, 3.7690114479591065e+26], "val_accuracy": [0.0949999988079071, 0.10199999809265137, 0.09866666793823242, 0.10000000149011612, 0.10166666656732559, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 3], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [6, 3, 4, 6, 8, 1, 4, 6, 4, 2, 8, 2, 2, 9, 4, 8], [0, 0, 4, 3, 0, 4, 4, 1, 2, 0, 5, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 28, 16, 12, 5], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), grad), alpha), beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 2, 6, 8, 1, 4], [0, 1, 2, 2, 1, 1, 1, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 4, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(alpha, alpha)))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]