[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236440181732178, 1.8679250478744507, 1.3946771621704102, 1.0925182104110718, 0.9415861368179321, 0.8532344698905945, 0.7779837846755981, 0.7416800856590271, 0.6996486783027649, 0.6670410633087158, 0.6558939218521118, 0.6276976466178894, 0.6078794002532959, 0.5911770462989807, 0.5826139450073242, 0.5696129202842712, 0.5536263585090637, 0.5332956910133362, 0.5227961540222168, 0.5124940872192383, 0.5099264979362488, 0.48931023478507996, 0.4897040128707886, 0.4821999669075012, 0.4620879590511322, 0.46897226572036743, 0.45187485218048096, 0.44711899757385254, 0.4401107728481293, 0.43437302112579346, 0.4265388548374176, 0.4237557649612427, 0.40471187233924866, 0.4087052047252655, 0.398402601480484, 0.3879992663860321, 0.39239999651908875, 0.37547436356544495, 0.37456923723220825, 0.36721405386924744, 0.3693675994873047, 0.362485408782959, 0.3554579019546509, 0.3499011695384979, 0.34642067551612854, 0.3351312577724457, 0.33330100774765015, 0.33271756768226624, 0.33012932538986206, 0.32424691319465637, 0.31752708554267883, 0.3198479413986206, 0.3092179000377655, 0.3044370412826538, 0.3038517236709595, 0.30125606060028076, 0.2913486659526825, 0.28322553634643555, 0.280769020318985, 0.2759036719799042, 0.267754465341568, 0.2693270444869995, 0.26224035024642944], "accuracy": [0.27816668152809143, 0.4885748326778412, 0.5661075115203857, 0.617751955986023, 0.6675472259521484, 0.6968696117401123, 0.7194558382034302, 0.7316074371337891, 0.7477215528488159, 0.7555144429206848, 0.7663452625274658, 0.7736098170280457, 0.7779685854911804, 0.7849689722061157, 0.7898560166358948, 0.7957997918128967, 0.8009510040283203, 0.8100647330284119, 0.8120459914207458, 0.8119139075279236, 0.8235371708869934, 0.8240655064582825, 0.8286884427070618, 0.8310658931732178, 0.8389908671379089, 0.83119797706604, 0.8404437899589539, 0.842028796672821, 0.8451988101005554, 0.8491612672805786, 0.8494254350662231, 0.8518029451370239, 0.8580108284950256, 0.8553691506385803, 0.8582749962806702, 0.8627657890319824, 0.8593316674232483, 0.8683133125305176, 0.8668603897094727, 0.871879518032074, 0.8673887252807617, 0.8749174475669861, 0.8766345381736755, 0.8762382864952087, 0.8750495314598083, 0.8798044919967651, 0.8848236799240112, 0.8821820020675659, 0.8848236799240112, 0.8840311765670776, 0.8835028409957886, 0.8870691061019897, 0.889050304889679, 0.8927486538887024, 0.893541157245636, 0.893541157245636, 0.8936732411384583, 0.89988112449646, 0.9010698795318604, 0.9006736278533936, 0.9049002528190613, 0.9035794734954834, 0.9088627696037292], "val_loss": [2.0405056476593018, 1.5151082277297974, 1.052739143371582, 0.8573957681655884, 0.7666826844215393, 0.709916889667511, 0.6618427038192749, 0.6261984705924988, 0.6038131713867188, 0.5767837762832642, 0.5624330043792725, 0.5425344705581665, 0.5247909426689148, 0.5201043486595154, 0.5059642195701599, 0.493647962808609, 0.4859347343444824, 0.4752463698387146, 0.46897345781326294, 0.4593513309955597, 0.45327335596084595, 0.4457870423793793, 0.44312232732772827, 0.4378954768180847, 0.43648067116737366, 0.4292369484901428, 0.4267755448818207, 0.41769006848335266, 0.417601078748703, 0.40868309140205383, 0.40752536058425903, 0.4054061770439148, 0.3976820409297943, 0.39684170484542847, 0.39386433362960815, 0.38973143696784973, 0.3880261182785034, 0.386024534702301, 0.38237464427948, 0.3802192509174347, 0.3825749456882477, 0.37695470452308655, 0.3796798884868622, 0.3725138306617737, 0.3689618408679962, 0.3770114779472351, 0.3677962124347687, 0.3659197688102722, 0.3649621307849884, 0.3652576804161072, 0.37052151560783386, 0.36331480741500854, 0.3632868230342865, 0.36480534076690674, 0.35963764786720276, 0.3580448031425476, 0.36161044239997864, 0.35479459166526794, 0.3564576506614685, 0.356660932302475, 0.3535754382610321, 0.3548608720302582, 0.3547500669956207], "val_accuracy": [0.5116666555404663, 0.6493333578109741, 0.6723333597183228, 0.6936666369438171, 0.718999981880188, 0.7333333492279053, 0.7556666731834412, 0.765666663646698, 0.7776666879653931, 0.7793333530426025, 0.7900000214576721, 0.7990000247955322, 0.8109999895095825, 0.8096666932106018, 0.8090000152587891, 0.8209999799728394, 0.8190000057220459, 0.8270000219345093, 0.8296666741371155, 0.8376666903495789, 0.8323333263397217, 0.8333333134651184, 0.8373333215713501, 0.8393333554267883, 0.8396666646003723, 0.8413333296775818, 0.8443333506584167, 0.8493333458900452, 0.8476666808128357, 0.8483333587646484, 0.8479999899864197, 0.8500000238418579, 0.8533333539962769, 0.8519999980926514, 0.8566666841506958, 0.8566666841506958, 0.8553333282470703, 0.8586666584014893, 0.8583333492279053, 0.8600000143051147, 0.8579999804496765, 0.859333336353302, 0.8600000143051147, 0.8603333234786987, 0.8600000143051147, 0.8603333234786987, 0.8646666407585144, 0.8653333187103271, 0.8633333444595337, 0.8650000095367432, 0.862666666507721, 0.8666666746139526, 0.8666666746139526, 0.8640000224113464, 0.8663333058357239, 0.8676666617393494, 0.8676666617393494, 0.8736666440963745, 0.8683333396911621, 0.8703333139419556, 0.8686666488647461, 0.871666669845581, 0.8723333477973938]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 65], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 3, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11428571492433548, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), sigma), grad)", "other_info": {"loss": [10874912768000.0, 12569835208704.0, 12307389218816.0, 11821922648064.0, 12596804583424.0, 12345879298048.0, 12757673967616.0, 12413399203840.0, 14397973987328.0, 14916062806016.0, 14683950022656.0], "accuracy": [0.10421344637870789, 0.10751552134752274, 0.10117553919553757, 0.11028926074504852, 0.11134592443704605, 0.10130762308835983, 0.10619468986988068, 0.11134592443704605, 0.10791176557540894, 0.11213842034339905, 0.11768590658903122], "val_loss": [8401197203456.0, 8401196679168.0, 8401196679168.0, 8400832823296.0, 8400833871872.0, 8504341430272.0, 8504341430272.0, 9982203396096.0, 9982213881856.0, 9982213881856.0, 9982207590400.0], "val_accuracy": [0.11666666716337204, 0.11666666716337204, 0.11666666716337204, 0.11699999868869781, 0.11699999868869781, 0.11866666376590729, 0.11866666376590729, 0.10733333230018616, 0.10733333230018616, 0.10733333230018616, 0.10733333230018616]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8, 9, 0, 4, 8, 2, 2, 2, 1, 8, 5, 1, 5, 9, 3, 2, 8, 6, 0, 3, 6, 4, 8, 8, 5, 1, 2, 7, 9], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 4, 7, 3, 3, 4, 3, 6, 6, 0, 2, 6, 7], [16, 99, 96, 99, 61, 1, 90, 96, 83, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 61, 39, 22, 10], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(grad, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(sigma, alpha))))), tf.math.add(tf.math.add(tf.math.subtract(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.square(tf.math.subtract(tf.math.square(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(sigma, grad))), sigma)), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(beta, tf.math.add(grad, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 2, 3, 0, 3, 4], [0, 3, 0, 1, 4], [16, 16], [0, 1, 0, 0, 0, 1], [2, 3, 8, 9], [4, 0], [76, 7], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 2, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 54, 96, 99, 43, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 6, 4, 2, 2, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3047327995300293, 2.3063366413116455, 2.311305284500122, 2.310877561569214, 2.311774492263794, 2.320495128631592, 2.32490611076355], "accuracy": [0.0944393053650856, 0.09760929644107819, 0.09589222073554993, 0.09628847241401672, 0.09800554811954498, 0.09932637959718704, 0.09681680053472519], "val_loss": [2.3033809661865234, 2.3046977519989014, 2.3048248291015625, 2.3058762550354004, 2.3106884956359863, 2.318253517150879, 2.3228654861450195], "val_accuracy": [0.0949999988079071, 0.10266666859388351, 0.10266666859388351, 0.0989999994635582, 0.10100000351667404, 0.0949999988079071, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [54, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 1], [0, 2, 0, 3], [72, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 2, 4, 2, 8, 1, 9, 3, 1, 1, 0], [4, 0, 0, 1, 2, 0, 3, 1, 2, 0, 7, 3, 5], [16, 36, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 0, 30, 17, 13, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), beta), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(grad, tf.math.negative(sigma)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]