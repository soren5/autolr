[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219510078430176, 1.8624944686889648, 1.404651165008545, 1.1084402799606323, 0.961843729019165, 0.8533362746238708, 0.7940061092376709, 0.7334879636764526, 0.7020298838615417, 0.6722556352615356, 0.6403332948684692, 0.6291893720626831, 0.6012066602706909, 0.5932685136795044, 0.5744034051895142, 0.5636714696884155, 0.5474516153335571, 0.5291901230812073, 0.521493136882782, 0.512157678604126, 0.5088011026382446, 0.49360623955726624, 0.4814333915710449, 0.4806537926197052, 0.4677828550338745, 0.4645812213420868, 0.4554154872894287, 0.4476175606250763, 0.4430927336215973, 0.434847354888916, 0.4319817125797272, 0.42314639687538147, 0.42109736800193787, 0.40908437967300415, 0.40358203649520874, 0.40659019351005554, 0.3925309479236603, 0.3827097713947296, 0.38398078083992004, 0.37925446033477783, 0.36825430393218994, 0.37278062105178833, 0.35897648334503174, 0.3627232611179352, 0.36042940616607666, 0.3510350286960602, 0.34165775775909424, 0.3366656005382538, 0.33655425906181335, 0.33435195684432983, 0.3244263827800751, 0.3116196393966675, 0.31486251950263977, 0.3137017488479614, 0.30529987812042236, 0.299569696187973, 0.30139994621276855, 0.2919458746910095, 0.2899702191352844, 0.2859000861644745, 0.2791433334350586, 0.2828075885772705, 0.27643436193466187, 0.2760333716869354, 0.2678931951522827, 0.26213422417640686, 0.2620644271373749, 0.2579895555973053, 0.2523791193962097, 0.2509833872318268], "accuracy": [0.2694492042064667, 0.486989825963974, 0.5526350736618042, 0.6115440726280212, 0.6580372452735901, 0.693831741809845, 0.7087571024894714, 0.7310791015625, 0.7465327978134155, 0.7577598690986633, 0.7630431652069092, 0.7701756954193115, 0.7839123010635376, 0.7854973077774048, 0.7893276810646057, 0.7960638999938965, 0.7980451583862305, 0.8074230551719666, 0.8075551390647888, 0.8129705190658569, 0.8150838613510132, 0.8249900937080383, 0.8253863453865051, 0.8272355198860168, 0.8325188159942627, 0.8310658931732178, 0.8364813327789307, 0.8409721255302429, 0.8387266993522644, 0.8442742228507996, 0.8488970994949341, 0.8473120927810669, 0.8454629778862, 0.852859616279602, 0.8561616539955139, 0.8557654023170471, 0.8623695969581604, 0.8622375130653381, 0.8640866279602051, 0.8654074668884277, 0.8669924736022949, 0.8638224601745605, 0.8706908226013184, 0.8706908226013184, 0.8713511824607849, 0.8726720213890076, 0.8787478804588318, 0.8770307898521423, 0.8790120482444763, 0.8824461698532104, 0.8836349248886108, 0.8894465565681458, 0.8879936337471008, 0.8861445188522339, 0.8894465565681458, 0.8928807377815247, 0.8944657444953918, 0.8973715305328369, 0.8961827754974365, 0.8965790271759033, 0.8981640338897705, 0.8990886211395264, 0.902390718460083, 0.8988244533538818, 0.9074098467826843, 0.9049002528190613, 0.9088627696037292, 0.9050323367118835, 0.9101836085319519, 0.9080702662467957], "val_loss": [2.037874698638916, 1.5146418809890747, 1.0445808172225952, 0.8308386206626892, 0.7387226819992065, 0.684538722038269, 0.6352006793022156, 0.6004845499992371, 0.5789551734924316, 0.550789475440979, 0.5359301567077637, 0.5189716219902039, 0.506378173828125, 0.5068293213844299, 0.48755037784576416, 0.4767765700817108, 0.46929556131362915, 0.4665112793445587, 0.45818936824798584, 0.4526195824146271, 0.44456470012664795, 0.44110187888145447, 0.435719758272171, 0.42660343647003174, 0.4228070378303528, 0.42504867911338806, 0.41746076941490173, 0.41487565636634827, 0.4080866277217865, 0.4015142321586609, 0.4036073684692383, 0.4052760899066925, 0.398114949464798, 0.39134669303894043, 0.39452800154685974, 0.3871304392814636, 0.3841935992240906, 0.3860331177711487, 0.38259077072143555, 0.3779222369194031, 0.37704965472221375, 0.3764217793941498, 0.3783915340900421, 0.36996597051620483, 0.37097716331481934, 0.36737996339797974, 0.3656063675880432, 0.3636457920074463, 0.36261776089668274, 0.36138206720352173, 0.36073726415634155, 0.36391112208366394, 0.35536882281303406, 0.35295936465263367, 0.3525724411010742, 0.3528536260128021, 0.3492894768714905, 0.3524472713470459, 0.3495844602584839, 0.34864938259124756, 0.35225653648376465, 0.3446412682533264, 0.3478773534297943, 0.3448857367038727, 0.3473762571811676, 0.3424045443534851, 0.34595364332199097, 0.3442082405090332, 0.3438172936439514, 0.3424105644226074], "val_accuracy": [0.528333306312561, 0.6643333435058594, 0.7006666660308838, 0.7146666646003723, 0.7406666874885559, 0.7553333044052124, 0.7633333206176758, 0.7749999761581421, 0.7903333306312561, 0.7946666479110718, 0.8080000281333923, 0.8080000281333923, 0.8199999928474426, 0.8223333358764648, 0.8316666483879089, 0.8263333439826965, 0.8343333601951599, 0.8333333134651184, 0.8423333168029785, 0.8476666808128357, 0.8453333377838135, 0.8473333120346069, 0.8496666550636292, 0.8539999723434448, 0.8519999980926514, 0.8516666889190674, 0.8556666374206543, 0.8539999723434448, 0.8560000061988831, 0.859000027179718, 0.8576666712760925, 0.859333336353302, 0.8616666793823242, 0.859666645526886, 0.8606666922569275, 0.8643333315849304, 0.8643333315849304, 0.8603333234786987, 0.8629999756813049, 0.8653333187103271, 0.8673333525657654, 0.8636666536331177, 0.8696666955947876, 0.8686666488647461, 0.8706666827201843, 0.8709999918937683, 0.8673333525657654, 0.8713333606719971, 0.875333309173584, 0.8726666569709778, 0.871999979019165, 0.8730000257492065, 0.8759999871253967, 0.8766666650772095, 0.8796666860580444, 0.8813333511352539, 0.8806666731834412, 0.8793333172798157, 0.8830000162124634, 0.8840000033378601, 0.8786666393280029, 0.8816666603088379, 0.8826666474342346, 0.8809999823570251, 0.8849999904632568, 0.8846666812896729, 0.8836666941642761, 0.8820000290870667, 0.8840000033378601, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [9, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 8, 4, 0], [0, 2, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 4, 0, 2, 3, 2, 4, 0], [16, 99, 96, 65, 90, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 8, 5, 3, 2, 8, 5, 3, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta), sigma))), beta), tf.math.add(tf.math.sqrt(grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 2, 2], [76, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 9, 7, 1, 6], [0, 0, 4, 3, 2, 4, 3, 1, 2, 0, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.sqrt(sigma), beta), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha))), tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 1, 0, 1, 1, 27, 15, 12, 4], "tree_depth": 25}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1, 9, 0, 6, 6, 0, 5, 1, 7, 6, 3, 5, 3, 2, 6, 2, 5, 9], [2, 1, 0, 2, 2, 3, 3, 1, 2, 0, 0, 2, 2], [39, 39, 39, 46, 63], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 23, 13, 5, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.square(grad)), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, grad), grad), tf.math.square(alpha)), tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037312030792236, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3, 2, 1, 7], [0, 2, 0, 3, 3, 5, 5, 1], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 0, 0], [8, 99, 31, 99, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 6, 3, 3, 2, 16, 8, 8, 2, 2, 1, 1, 0, 4, 2, 2, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, tf.math.add(grad, grad))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310279607772827, 2.308886766433716, 2.30977201461792, 2.3092498779296875, 2.309236764907837, 2.309561252593994], "accuracy": [0.08942015469074249, 0.09060890227556229, 0.09391097724437714, 0.09008057415485382, 0.09192973375320435, 0.09351472556591034], "val_loss": [2.309220790863037, 2.309216260910034, 2.3092119693756104, 2.3092074394226074, 2.3092031478881836, 2.3091988563537598], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]