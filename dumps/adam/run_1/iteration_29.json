[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221942663192749, 1.860550045967102, 1.3776572942733765, 1.088535189628601, 0.9319159388542175, 0.8367640376091003, 0.7701084613800049, 0.7196971774101257, 0.6885986328125, 0.6554675102233887, 0.6299495697021484, 0.612760066986084, 0.5850688815116882, 0.5728169679641724, 0.5512137413024902, 0.5400689840316772, 0.5210713148117065, 0.5217112898826599, 0.5034007430076599, 0.49215471744537354, 0.4812735915184021, 0.47454285621643066, 0.4643632471561432, 0.44657889008522034, 0.45122820138931274, 0.4417569041252136, 0.43404877185821533, 0.4198548197746277, 0.42458784580230713, 0.41244253516197205, 0.4069104492664337, 0.40209081768989563, 0.38922005891799927, 0.38517752289772034, 0.37835538387298584, 0.37040776014328003, 0.36731255054473877, 0.35630330443382263, 0.3521935045719147, 0.3521000146865845, 0.3457423448562622, 0.3428640365600586, 0.33339977264404297, 0.33209431171417236, 0.33306822180747986, 0.32542797923088074, 0.32662132382392883, 0.3140207529067993, 0.3100234866142273, 0.3055137097835541, 0.30160975456237793, 0.29816874861717224, 0.29158198833465576, 0.28770574927330017, 0.28723952174186707, 0.28558123111724854, 0.2779078185558319, 0.2744077742099762, 0.2759210467338562, 0.26908746361732483, 0.25748151540756226, 0.2573719322681427, 0.25142502784729004, 0.24972915649414062, 0.24645380675792694, 0.24578489363193512, 0.2411215454339981, 0.23773495852947235, 0.2366258203983307, 0.2292182892560959, 0.22949080169200897, 0.2287672907114029, 0.22596175968647003, 0.22146247327327728, 0.22071418166160583, 0.21393945813179016, 0.20996885001659393, 0.21431748569011688, 0.2057362198829651, 0.19697442650794983], "accuracy": [0.27658170461654663, 0.4983489513397217, 0.5699379444122314, 0.6188086271286011, 0.6699247360229492, 0.7003037929534912, 0.72672039270401, 0.7434949278831482, 0.7515519857406616, 0.7592127919197083, 0.7681944370269775, 0.7784969210624695, 0.7839123010635376, 0.7927618622779846, 0.8031964302062988, 0.8035926818847656, 0.8090080618858337, 0.8082155585289001, 0.8156121969223022, 0.824329674243927, 0.8280280232429504, 0.8318583965301514, 0.8338396549224854, 0.8356888294219971, 0.8350284099578857, 0.8430854678153992, 0.8473120927810669, 0.8470479249954224, 0.8488970994949341, 0.8508783578872681, 0.8535200357437134, 0.854708731174469, 0.8619733452796936, 0.8595958352088928, 0.8621054291725159, 0.8669924736022949, 0.8710870146751404, 0.8710870146751404, 0.8766345381736755, 0.8774270415306091, 0.874389111995697, 0.8759741187095642, 0.8749174475669861, 0.880729079246521, 0.8803328275680542, 0.8798044919967651, 0.8829745054244995, 0.8877294659614563, 0.8869370222091675, 0.8883898854255676, 0.8914278149604797, 0.89552241563797, 0.8961827754974365, 0.8977677822113037, 0.8948619961738586, 0.8969752788543701, 0.9014661312103271, 0.8990886211395264, 0.9035794734954834, 0.8990886211395264, 0.9049002528190613, 0.906749427318573, 0.9078060984611511, 0.9079381823539734, 0.9134856462478638, 0.913089394569397, 0.9163914918899536, 0.915070652961731, 0.9149385690689087, 0.9177123308181763, 0.9161273241043091, 0.9166556596755981, 0.9154669046401978, 0.9211464524269104, 0.9222031235694885, 0.9215427041053772, 0.9220710396766663, 0.9224672913551331, 0.9273543953895569, 0.9294676780700684], "val_loss": [2.0332908630371094, 1.4994730949401855, 1.0283921957015991, 0.8290948867797852, 0.7486002445220947, 0.6989752650260925, 0.6558040380477905, 0.6278409957885742, 0.6000871062278748, 0.5802859663963318, 0.5634084343910217, 0.5472881197929382, 0.5263110399246216, 0.5165024995803833, 0.5034468770027161, 0.49377453327178955, 0.49295514822006226, 0.4763175845146179, 0.4750528037548065, 0.4649374186992645, 0.4563659727573395, 0.45548221468925476, 0.4431833028793335, 0.44611334800720215, 0.4426839053630829, 0.4333255887031555, 0.4259605407714844, 0.4253368377685547, 0.4172421991825104, 0.42082539200782776, 0.4121590852737427, 0.4092433750629425, 0.405362993478775, 0.40045011043548584, 0.3945069909095764, 0.39836379885673523, 0.38858166337013245, 0.386620432138443, 0.3901802599430084, 0.3871593475341797, 0.38179850578308105, 0.38476574420928955, 0.37745484709739685, 0.3809433579444885, 0.3843338191509247, 0.38171786069869995, 0.3726382255554199, 0.37726089358329773, 0.37095674872398376, 0.3676537573337555, 0.3666618764400482, 0.3665347397327423, 0.3635078966617584, 0.36729952692985535, 0.3654195964336395, 0.3620697557926178, 0.36515650153160095, 0.36219853162765503, 0.3583238124847412, 0.36002790927886963, 0.35779914259910583, 0.35762450098991394, 0.36508792638778687, 0.35746556520462036, 0.35511714220046997, 0.35509005188941956, 0.357831746339798, 0.35216134786605835, 0.351891428232193, 0.3594377934932709, 0.3613308370113373, 0.3553336560726166, 0.3577920198440552, 0.3621683418750763, 0.35308837890625, 0.35560473799705505, 0.35481202602386475, 0.35362377762794495, 0.35579073429107666, 0.35729336738586426], "val_accuracy": [0.5746666789054871, 0.6576666831970215, 0.6893333196640015, 0.7110000252723694, 0.7350000143051147, 0.7476666569709778, 0.7509999871253967, 0.7646666765213013, 0.7723333239555359, 0.7836666703224182, 0.7889999747276306, 0.8053333163261414, 0.8069999814033508, 0.8116666674613953, 0.8163333535194397, 0.8226666450500488, 0.8213333487510681, 0.831333339214325, 0.8230000138282776, 0.8289999961853027, 0.8386666774749756, 0.8379999995231628, 0.8393333554267883, 0.8383333086967468, 0.8399999737739563, 0.8446666598320007, 0.8476666808128357, 0.8463333249092102, 0.8489999771118164, 0.8479999899864197, 0.8506666421890259, 0.8513333201408386, 0.8519999980926514, 0.8560000061988831, 0.8576666712760925, 0.8493333458900452, 0.8553333282470703, 0.8573333621025085, 0.8579999804496765, 0.8600000143051147, 0.862666666507721, 0.8606666922569275, 0.8646666407585144, 0.859333336353302, 0.8603333234786987, 0.8569999933242798, 0.8669999837875366, 0.862666666507721, 0.8663333058357239, 0.8686666488647461, 0.8663333058357239, 0.8666666746139526, 0.8696666955947876, 0.8659999966621399, 0.8679999709129333, 0.8659999966621399, 0.8656666874885559, 0.8709999918937683, 0.8686666488647461, 0.8703333139419556, 0.8743333220481873, 0.8696666955947876, 0.8703333139419556, 0.875, 0.874666690826416, 0.875, 0.8733333349227905, 0.875333309173584, 0.8773333430290222, 0.871666669845581, 0.875333309173584, 0.8793333172798157, 0.878333330154419, 0.8756666779518127, 0.8803333044052124, 0.878000020980835, 0.8743333220481873, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 47, 65], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 3, 5], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 62, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.311821699142456, 2.3184826374053955, 2.333937644958496, 2.3621559143066406, 2.401675224304199, 2.4573733806610107], "accuracy": [0.09113723784685135, 0.09628847241401672, 0.10157178342342377, 0.09906221181154251, 0.10249637067317963, 0.09826971590518951], "val_loss": [2.3105874061584473, 2.3142523765563965, 2.3246893882751465, 2.340214252471924, 2.3644752502441406, 2.397326946258545], "val_accuracy": [0.10266666859388351, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6], [0, 2, 0, 3, 4], [16, 94], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [6, 5, 8, 6, 8, 1, 4, 1, 4, 2, 8, 8, 9, 0, 6, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 11, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 12, 7, 5, 2, 2, 1, 1, 1, 24, 16, 8, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), sigma)), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 9, 2, 5], [0, 2, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 8, 3, 5], [3, 2, 0, 3], [16, 53], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 8, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 4], [50, 7, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 16, 9, 7, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(alpha)), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 3], [0, 1, 0, 2, 0, 1], [39, 39, 2], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5, 0, 2], [0, 2, 0, 3, 4, 2], [16, 16], [0, 1], [0], [0], [73], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 2, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 14, 8, 6, 2, 2, 1, 1, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]