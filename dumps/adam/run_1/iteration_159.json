[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234950065612793, 1.8693476915359497, 1.3844945430755615, 1.0903385877609253, 0.9322787523269653, 0.8249569535255432, 0.7635606527328491, 0.7294332981109619, 0.6821557879447937, 0.6424946188926697, 0.6253277659416199, 0.6087568402290344, 0.5794679522514343, 0.554907500743866, 0.5397506952285767, 0.5325027704238892, 0.5154568552970886, 0.5150690674781799, 0.48820313811302185, 0.4822094738483429, 0.46511030197143555, 0.46280622482299805, 0.4589049816131592, 0.44376513361930847, 0.43961212038993835, 0.4289743900299072, 0.4187374711036682, 0.41003483533859253, 0.40884989500045776, 0.4007236063480377, 0.3908122777938843, 0.38939645886421204, 0.3849586844444275, 0.36893782019615173, 0.3681783676147461, 0.36326444149017334, 0.35313430428504944, 0.3515723645687103, 0.34498581290245056, 0.34307825565338135, 0.33842578530311584, 0.3334924578666687, 0.33255648612976074, 0.32392457127571106, 0.31705373525619507, 0.31719326972961426, 0.31122103333473206, 0.3045072853565216, 0.2998904287815094, 0.3058493435382843, 0.29438161849975586, 0.29513102769851685, 0.2841152548789978, 0.2830333113670349, 0.2704010009765625, 0.27593857049942017, 0.2720603942871094, 0.2723482549190521, 0.2589689791202545, 0.2589494287967682, 0.2502049505710602, 0.2488677203655243, 0.24866294860839844, 0.24757328629493713, 0.24118836224079132, 0.24043095111846924, 0.2381252497434616, 0.23091362416744232, 0.22999630868434906, 0.22264231741428375, 0.21741759777069092], "accuracy": [0.2763175368309021, 0.48474442958831787, 0.570730447769165, 0.6201294660568237, 0.6667547225952148, 0.7083608508110046, 0.724739134311676, 0.7358341217041016, 0.7536653280258179, 0.76542067527771, 0.776251494884491, 0.780610203742981, 0.789988100528717, 0.8000264167785645, 0.8087438941001892, 0.8095363974571228, 0.8202351331710815, 0.817989706993103, 0.8284242749214172, 0.829216718673706, 0.8387266993522644, 0.8376700282096863, 0.8403117060661316, 0.8453308939933777, 0.8433496356010437, 0.8527275323867798, 0.8529917001724243, 0.8564258217811584, 0.8561616539955139, 0.8556333184242249, 0.8638224601745605, 0.8610487580299377, 0.8676528930664062, 0.8679170608520508, 0.8691058158874512, 0.8720116019248962, 0.8766345381736755, 0.8766345381736755, 0.8768987059593201, 0.8767666220664978, 0.8821820020675659, 0.8805969953536987, 0.8795403242111206, 0.8848236799240112, 0.8833707571029663, 0.8873332738876343, 0.8874653577804565, 0.889050304889679, 0.8906353116035461, 0.8939374089241028, 0.896446943283081, 0.8923524022102356, 0.8993527889251709, 0.9001452922821045, 0.9088627696037292, 0.9009377956390381, 0.9039757251739502, 0.9027869701385498, 0.9083344340324402, 0.9071456789970398, 0.9074098467826843, 0.91124027967453, 0.9119006991386414, 0.9122969508171082, 0.9153348207473755, 0.9159952402114868, 0.9159952402114868, 0.9179764986038208, 0.9181085824966431, 0.9202219247817993, 0.9212785363197327], "val_loss": [2.0398669242858887, 1.519423007965088, 1.0503097772598267, 0.8501634001731873, 0.7687288522720337, 0.7125696539878845, 0.6632529497146606, 0.6273894309997559, 0.6042928695678711, 0.5739909410476685, 0.5588755011558533, 0.5480994582176208, 0.5293956398963928, 0.5176997184753418, 0.506051242351532, 0.4966246783733368, 0.4883299469947815, 0.4787484407424927, 0.46997302770614624, 0.4625733196735382, 0.4563430845737457, 0.4523450434207916, 0.44415727257728577, 0.4383796751499176, 0.4333330988883972, 0.4321352541446686, 0.42690813541412354, 0.41783422231674194, 0.4204825758934021, 0.41354188323020935, 0.4113938808441162, 0.4090442657470703, 0.4135172665119171, 0.40432047843933105, 0.3997718095779419, 0.3959725797176361, 0.3958686590194702, 0.3946112394332886, 0.38909146189689636, 0.38692447543144226, 0.3874956965446472, 0.3897666335105896, 0.3922536075115204, 0.37984636425971985, 0.3823397755622864, 0.3812914192676544, 0.37921273708343506, 0.3783901631832123, 0.38274821639060974, 0.3741222023963928, 0.37569937109947205, 0.3765668272972107, 0.36980050802230835, 0.36731183528900146, 0.3689042925834656, 0.3671007454395294, 0.37433481216430664, 0.37036824226379395, 0.3706605136394501, 0.36624884605407715, 0.36936548352241516, 0.36300650238990784, 0.36746302247047424, 0.36583468317985535, 0.3649565875530243, 0.3591529428958893, 0.36165326833724976, 0.3628554344177246, 0.3654213547706604, 0.3673447370529175, 0.3575732409954071], "val_accuracy": [0.5509999990463257, 0.6480000019073486, 0.6819999814033508, 0.6986666917800903, 0.734666645526886, 0.7400000095367432, 0.7523333430290222, 0.7663333415985107, 0.7766666412353516, 0.7829999923706055, 0.7996666431427002, 0.8023333549499512, 0.8076666593551636, 0.8149999976158142, 0.8183333277702332, 0.8256666660308838, 0.8236666917800903, 0.8343333601951599, 0.8356666564941406, 0.8420000076293945, 0.8349999785423279, 0.8410000205039978, 0.8456666469573975, 0.8450000286102295, 0.847000002861023, 0.8503333330154419, 0.8486666679382324, 0.8529999852180481, 0.8516666889190674, 0.8539999723434448, 0.8553333282470703, 0.8543333411216736, 0.8553333282470703, 0.8573333621025085, 0.8566666841506958, 0.859000027179718, 0.8600000143051147, 0.862333357334137, 0.8643333315849304, 0.862666666507721, 0.8640000224113464, 0.8656666874885559, 0.8643333315849304, 0.8683333396911621, 0.8650000095367432, 0.8666666746139526, 0.8706666827201843, 0.8693333268165588, 0.8666666746139526, 0.871999979019165, 0.8700000047683716, 0.8693333268165588, 0.8723333477973938, 0.8756666779518127, 0.871666669845581, 0.875333309173584, 0.8700000047683716, 0.8763333559036255, 0.8730000257492065, 0.8743333220481873, 0.874666690826416, 0.8776666522026062, 0.878333330154419, 0.8773333430290222, 0.875, 0.8830000162124634, 0.8786666393280029, 0.8756666779518127, 0.8813333511352539, 0.878333330154419, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 0, 3, 9, 4], [0, 1, 0, 2], [39, 39, 15], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [2, 6, 5, 8, 7, 2, 5], [0, 1, 4, 2, 2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 0, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 6, 3, 3, 1, 12, 7, 5, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(alpha)), tf.math.add(tf.math.add(grad, beta), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30379319190979, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8, 8], [0, 0, 0, 0, 0, 1, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), sigma), tf.math.sqrt(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), beta), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 14], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 6, 5, 6, 8, 1, 4, 1, 2, 2, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [7, 99, 96, 35, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(alpha)))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035786151885986, 2.302673816680908, 2.302835702896118, 2.30462384223938, 2.313257932662964, 2.446115732192993, 3.565035343170166], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025894165039062, 2.3026504516601562, 2.3033721446990967, 2.3069286346435547, 2.3316330909729004, 2.880296230316162, 4.497170448303223], "val_accuracy": [0.09933333098888397, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 6, 1, 0, 0], [0, 1, 0, 3, 4, 5, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 2, 2, 1], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [86, 12, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 17, 10, 7, 2, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(grad), grad), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [5.492842954789063e+31, 866.8875122070312, 939.7989501953125, 961.703125, 772.485595703125, 836.0127563476562, 870.3484497070312], "accuracy": [0.09893012791872025, 0.0936468094587326, 0.1022322028875351, 0.10302469879388809, 0.09998679161071777, 0.10632677376270294, 0.10038304328918457], "val_loss": [1224.796875, 948.2266845703125, 606.6395263671875, 481.64520263671875, 855.9156494140625, 1082.862060546875, 857.6798095703125], "val_accuracy": [0.09799999743700027, 0.10166666656732559, 0.1003333330154419, 0.09866666793823242, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027]}}]