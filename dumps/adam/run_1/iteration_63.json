[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220497131347656, 1.8649901151657104, 1.379164218902588, 1.088706374168396, 0.9471137523651123, 0.8303691148757935, 0.7635416388511658, 0.714880108833313, 0.6849601864814758, 0.6549361348152161, 0.6302303075790405, 0.613872766494751, 0.5881154537200928, 0.5595918893814087, 0.5612902641296387, 0.5404006838798523, 0.5299091339111328, 0.5169135332107544, 0.5030635595321655, 0.49610111117362976, 0.485400527715683, 0.4832242727279663, 0.4675983488559723, 0.46212950348854065, 0.45299646258354187, 0.4474066197872162, 0.43626824021339417, 0.4277871251106262, 0.42658260464668274, 0.4175190031528473, 0.41436758637428284, 0.40634632110595703, 0.3934728801250458, 0.38312071561813354, 0.3835086524486542, 0.381427526473999, 0.377728670835495, 0.3689911663532257, 0.3619920313358307, 0.35793840885162354, 0.3478386104106903, 0.3550119996070862, 0.3449995815753937, 0.33602964878082275, 0.3285166621208191, 0.3298777639865875, 0.3234575092792511, 0.31401199102401733, 0.31159690022468567, 0.30823901295661926, 0.3071381151676178, 0.2990667521953583, 0.29395592212677, 0.28917086124420166, 0.2884902060031891, 0.285978227853775, 0.2803301215171814, 0.27263888716697693, 0.27369675040245056, 0.2694593369960785, 0.2628616988658905, 0.25995561480522156], "accuracy": [0.2646942138671875, 0.4905560612678528, 0.5661075115203857, 0.6205257177352905, 0.6572447419166565, 0.7029454708099365, 0.7232862114906311, 0.7408532500267029, 0.7457403540611267, 0.7540615797042847, 0.7681944370269775, 0.7777044177055359, 0.7884030938148499, 0.7942147850990295, 0.7960638999938965, 0.8053097128868103, 0.8100647330284119, 0.811649739742279, 0.8216879963874817, 0.8227446675300598, 0.8264430165290833, 0.8227446675300598, 0.8309338092803955, 0.8362171649932861, 0.8338396549224854, 0.8391229510307312, 0.8408400416374207, 0.8453308939933777, 0.8477083444595337, 0.8499537706375122, 0.8500858545303345, 0.8532558679580688, 0.8598600029945374, 0.8676528930664062, 0.8658037185668945, 0.8614450097084045, 0.8597279191017151, 0.8697662353515625, 0.8665962219238281, 0.8702945709228516, 0.8775591254234314, 0.8714832663536072, 0.8749174475669861, 0.8762382864952087, 0.8850878477096558, 0.8820499181747437, 0.8836349248886108, 0.885219931602478, 0.8868049383163452, 0.8907673954963684, 0.887597382068634, 0.8923524022102356, 0.8932769894599915, 0.8968431949615479, 0.8924844861030579, 0.8963148593902588, 0.8972394466400146, 0.9001452922821045, 0.9008057117462158, 0.9046360850334167, 0.90423983335495, 0.9049002528190613], "val_loss": [2.0356247425079346, 1.5133779048919678, 1.0496532917022705, 0.846088707447052, 0.762389063835144, 0.6996707916259766, 0.6500573754310608, 0.6108660697937012, 0.5845510363578796, 0.5638113021850586, 0.5449761748313904, 0.5271432995796204, 0.5138434767723083, 0.5040307641029358, 0.4956626892089844, 0.48273593187332153, 0.4671487510204315, 0.4610873758792877, 0.45049014687538147, 0.4449731111526489, 0.44367411732673645, 0.4395240545272827, 0.4252070188522339, 0.42205944657325745, 0.41298168897628784, 0.4119320213794708, 0.40155497193336487, 0.4020159840583801, 0.3997696042060852, 0.38981783390045166, 0.39142054319381714, 0.38266533613204956, 0.3765093684196472, 0.3756926953792572, 0.37125280499458313, 0.37184542417526245, 0.3633557856082916, 0.3634605407714844, 0.364406943321228, 0.3552379608154297, 0.35645413398742676, 0.358130544424057, 0.35287097096443176, 0.34937915205955505, 0.3468552231788635, 0.345414400100708, 0.3465808033943176, 0.34034544229507446, 0.3417770266532898, 0.3375815749168396, 0.33767712116241455, 0.3324171006679535, 0.3360000550746918, 0.33086904883384705, 0.3343714773654938, 0.32793179154396057, 0.3300984799861908, 0.32619574666023254, 0.3274419605731964, 0.33140745759010315, 0.32650265097618103, 0.3258177638053894], "val_accuracy": [0.528333306312561, 0.6453333497047424, 0.6729999780654907, 0.6990000009536743, 0.7233333587646484, 0.7433333396911621, 0.7549999952316284, 0.7699999809265137, 0.777999997138977, 0.781333327293396, 0.7963333129882812, 0.8059999942779541, 0.809333324432373, 0.8136666417121887, 0.8143333196640015, 0.8243333101272583, 0.8259999752044678, 0.8343333601951599, 0.840666651725769, 0.8383333086967468, 0.8353333473205566, 0.8346666693687439, 0.8426666855812073, 0.8446666598320007, 0.8539999723434448, 0.8486666679382324, 0.8519999980926514, 0.8533333539962769, 0.8536666631698608, 0.8560000061988831, 0.8566666841506958, 0.8603333234786987, 0.8619999885559082, 0.8646666407585144, 0.8646666407585144, 0.8646666407585144, 0.8666666746139526, 0.8706666827201843, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.8656666874885559, 0.8683333396911621, 0.8743333220481873, 0.8740000128746033, 0.8736666440963745, 0.875333309173584, 0.8763333559036255, 0.874666690826416, 0.8756666779518127, 0.8730000257492065, 0.878333330154419, 0.8756666779518127, 0.878000020980835, 0.8813333511352539, 0.8833333253860474, 0.8863333463668823, 0.8813333511352539, 0.8843333125114441, 0.8820000290870667, 0.878333330154419, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1], [2, 0], [0, 7], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [47, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 4, 2, 2, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [50981396.0, 1050757888.0, 5184814080.0, 14505811968.0, 31602012160.0, 59980705792.0, 98557157376.0], "accuracy": [0.10896842926740646, 0.10315678268671036, 0.10117553919553757, 0.1014397069811821, 0.10408136248588562, 0.10210011899471283, 0.10011887550354004], "val_loss": [205571184.0, 2008486144.0, 7182568960.0, 17507332096.0, 34756108288.0, 60700942336.0, 97099874304.0], "val_accuracy": [0.09533333033323288, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 33], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 2], [0, 2, 3, 3, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 19, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 2, 2, 1, 1, 1, 20, 12, 8, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.negative(grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 2, 3, 1, 3, 3, 9, 5, 5, 9], [0, 1, 0, 1], [39, 39, 59, 54], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 6], [0, 7, 7, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 3, 6, 6, 4, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 10, 4, 4, 10, 6, 4, 2, 8, 4, 4, 1, 22, 11, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(alpha))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.divide_no_nan(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 2, 6, 3, 1], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0, 3, 1, 0, 5, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09000000357627869, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 30, 15, 15, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.multiply(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), grad))", "other_info": {"loss": [2.3088834285736084, 2.3102900981903076, 2.310476779937744, 2.3081603050231934, 2.3101789951324463, 2.309319019317627], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.08717474341392517, 0.09681680053472519, 0.08981640636920929, 0.09470347315073013], "val_loss": [2.309464454650879, 2.309464454650879, 2.309464454650879, 2.309464454650879, 2.309464454650879, 2.309464454650879], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]