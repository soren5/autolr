[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220831871032715, 1.8660796880722046, 1.3870882987976074, 1.092122197151184, 0.9510562419891357, 0.8336052298545837, 0.780329167842865, 0.7330524921417236, 0.6862404942512512, 0.6690791249275208, 0.6469213962554932, 0.6164043545722961, 0.5964377522468567, 0.5749751329421997, 0.5706604719161987, 0.5490316152572632, 0.5400282144546509, 0.5191068053245544, 0.5176331996917725, 0.4985203742980957, 0.4864025115966797, 0.47784721851348877, 0.4742421507835388, 0.45900648832321167, 0.4588514566421509, 0.44248175621032715, 0.4363008439540863, 0.4386584460735321, 0.43131023645401, 0.41066768765449524, 0.4054621458053589, 0.40463894605636597, 0.39755403995513916, 0.3969250023365021, 0.3878190815448761, 0.3836520314216614, 0.37529587745666504, 0.372088760137558, 0.3698357045650482, 0.36532163619995117, 0.35314297676086426, 0.3466860055923462, 0.34799155592918396, 0.3380534052848816, 0.3342927098274231, 0.33485323190689087, 0.3196399211883545, 0.3186386823654175, 0.31120264530181885, 0.30969923734664917, 0.31085342168807983, 0.3032236695289612, 0.30866125226020813, 0.28954437375068665, 0.2955785393714905, 0.2871001958847046, 0.2846154570579529, 0.28282028436660767, 0.280706524848938, 0.2730048894882202, 0.27256765961647034, 0.2654051184654236, 0.26019471883773804, 0.2553837299346924, 0.2510707974433899, 0.25235942006111145, 0.2549372911453247, 0.23815518617630005], "accuracy": [0.27658170461654663, 0.4815744161605835, 0.5719191431999207, 0.6194690465927124, 0.657508909702301, 0.7054550051689148, 0.7248712182044983, 0.735569953918457, 0.7543256878852844, 0.7589486241340637, 0.763967752456665, 0.7754589915275574, 0.7829877138137817, 0.793422281742096, 0.7928939461708069, 0.7950072884559631, 0.8057059645652771, 0.8170651197433472, 0.8128384351730347, 0.824329674243927, 0.8277638554573059, 0.8323867321014404, 0.830669641494751, 0.837141752243042, 0.8330471515655518, 0.842028796672821, 0.8485008478164673, 0.8487650156021118, 0.8454629778862, 0.8520671129226685, 0.8580108284950256, 0.8598600029945374, 0.8615770936012268, 0.8570862412452698, 0.8622375130653381, 0.8636903762817383, 0.8660678863525391, 0.8656716346740723, 0.8668603897094727, 0.8693699836730957, 0.8698983192443848, 0.8739928603172302, 0.8776912093162537, 0.8800686597824097, 0.8831065893173218, 0.8812574148178101, 0.8823140859603882, 0.8837670087814331, 0.8868049383163452, 0.885219931602478, 0.886672854423523, 0.8905032277107239, 0.8938053250312805, 0.8986923694610596, 0.8934090733528137, 0.8965790271759033, 0.8936732411384583, 0.8981640338897705, 0.898428201675415, 0.9002773761749268, 0.901862382888794, 0.90423983335495, 0.9064852595329285, 0.904768168926239, 0.9078060984611511, 0.9034473896026611, 0.9083344340324402, 0.9138818979263306], "val_loss": [2.0344700813293457, 1.508591651916504, 1.0423955917358398, 0.8386181592941284, 0.7520857453346252, 0.6947925686836243, 0.6502992510795593, 0.6140328645706177, 0.5920125842094421, 0.5749203562736511, 0.5546958446502686, 0.5376585125923157, 0.5203485488891602, 0.511881411075592, 0.5009676814079285, 0.48902180790901184, 0.47659316658973694, 0.47095587849617004, 0.4696298837661743, 0.45339033007621765, 0.4449089765548706, 0.44179627299308777, 0.43463805317878723, 0.429656445980072, 0.42781689763069153, 0.42009618878364563, 0.41794058680534363, 0.41240522265434265, 0.4056723713874817, 0.40561774373054504, 0.4005604684352875, 0.3969241678714752, 0.3989989161491394, 0.3975314199924469, 0.3880021870136261, 0.38633474707603455, 0.382711797952652, 0.3797750771045685, 0.3746938407421112, 0.3754022717475891, 0.3703327775001526, 0.3716888725757599, 0.36921483278274536, 0.36895230412483215, 0.36836978793144226, 0.364737868309021, 0.3606073260307312, 0.36040523648262024, 0.36143001914024353, 0.35817834734916687, 0.3551972508430481, 0.3554757833480835, 0.35935285687446594, 0.3520687520503998, 0.35188862681388855, 0.3573251962661743, 0.35292550921440125, 0.35330843925476074, 0.3516002595424652, 0.34808239340782166, 0.34726911783218384, 0.35267558693885803, 0.34576550126075745, 0.3470991253852844, 0.3461180031299591, 0.3412710428237915, 0.3424217402935028, 0.3456123173236847], "val_accuracy": [0.5299999713897705, 0.6546666622161865, 0.6786666512489319, 0.7083333134651184, 0.7269999980926514, 0.7476666569709778, 0.7603333592414856, 0.7703333497047424, 0.7820000052452087, 0.7839999794960022, 0.8009999990463257, 0.8083333373069763, 0.8116666674613953, 0.8190000057220459, 0.8169999718666077, 0.8223333358764648, 0.8256666660308838, 0.8270000219345093, 0.8289999961853027, 0.8343333601951599, 0.8413333296775818, 0.8363333344459534, 0.8423333168029785, 0.843999981880188, 0.843999981880188, 0.8483333587646484, 0.8463333249092102, 0.8523333072662354, 0.8526666760444641, 0.8519999980926514, 0.8516666889190674, 0.8566666841506958, 0.8523333072662354, 0.8510000109672546, 0.8576666712760925, 0.8526666760444641, 0.8606666922569275, 0.862666666507721, 0.8640000224113464, 0.8659999966621399, 0.8643333315849304, 0.8636666536331177, 0.8640000224113464, 0.8663333058357239, 0.8696666955947876, 0.8676666617393494, 0.8683333396911621, 0.8673333525657654, 0.8696666955947876, 0.8709999918937683, 0.871999979019165, 0.8730000257492065, 0.871666669845581, 0.8736666440963745, 0.8743333220481873, 0.8740000128746033, 0.871999979019165, 0.8743333220481873, 0.8723333477973938, 0.8773333430290222, 0.878333330154419, 0.874666690826416, 0.8793333172798157, 0.8790000081062317, 0.878000020980835, 0.878333330154419, 0.8786666393280029, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 3, 0, 3, 5, 4], [0, 2, 0, 0], [16, 16, 33], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 9], [4, 0, 3, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 11, 7, 4, 3, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.636118173599243, 2.3075640201568604, 2.3343265056610107, 2.5343449115753174, 3.3391010761260986, 5.827011585235596, 8.444021224975586, 13.326136589050293, 18.268056869506836], "accuracy": [0.16219785809516907, 0.09985470771789551, 0.09681680053472519, 0.09906221181154251, 0.10157178342342377, 0.10606260597705841, 0.10276053100824356, 0.09787346422672272, 0.10619468986988068], "val_loss": [2.3071177005767822, 2.3251535892486572, 2.3917882442474365, 3.084044933319092, 5.0659685134887695, 5.863296985626221, 11.785445213317871, 15.507200241088867, 26.061359405517578], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09799999743700027, 0.10199999809265137, 0.09866666793823242, 0.0989999994635582, 0.09799999743700027, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [2, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 0], [21, 12], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 4, 2, 0], [16, 99, 96, 25, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 8, 5, 3, 1, 3, 1, 2, 2, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.pow(beta, tf.math.subtract(sigma, grad))))", "other_info": {"loss": [2.311115264892578, 2.3272242546081543, 2.396773099899292, 2.694404363632202, 3.410508871078491, 4.752570629119873], "accuracy": [0.0940430611371994, 0.09694888442754745, 0.10249637067317963, 0.09959053993225098, 0.09747721254825592, 0.10434553027153015], "val_loss": [2.3099629878997803, 2.3229291439056396, 2.401074171066284, 2.6687545776367188, 3.3204023838043213, 4.410180568695068], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 1, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 8, 8, 1, 4, 0, 1, 4, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [2, 1, 1, 2], [39, 81], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 1], [16, 16, 18], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 1, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.08828571438789368, "mapping_values": [1, 6, 3, 3, 0, 6, 3, 3, 3, 2, 1, 1, 1, 15, 8, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(grad, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32))), beta), tf.math.square(sigma))", "other_info": {"loss": [2.3103270530700684, 2.310375690460205, 2.310757637023926, 2.3093862533569336, 2.308817148208618, 2.309887647628784], "accuracy": [0.08928807079792023, 0.08968432247638702, 0.09153348207473755, 0.09628847241401672, 0.08942015469074249, 0.09100515395402908], "val_loss": [2.3079519271850586, 2.307924747467041, 2.3079051971435547, 2.307889223098755, 2.3078742027282715, 2.3078601360321045], "val_accuracy": [0.09133332967758179, 0.09033333510160446, 0.09033333510160446, 0.09099999815225601, 0.09099999815225601, 0.09066666662693024]}}]