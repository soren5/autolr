[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210700511932373, 1.8602805137634277, 1.3783761262893677, 1.0771197080612183, 0.9231430292129517, 0.8327988386154175, 0.77101731300354, 0.7142078280448914, 0.6680602431297302, 0.6429223418235779, 0.6205304861068726, 0.5883920192718506, 0.5712541937828064, 0.5567272901535034, 0.5336217284202576, 0.5251960754394531, 0.5028983354568481, 0.5010637640953064, 0.4912404417991638, 0.48012855648994446, 0.4708922803401947, 0.4569816589355469, 0.452113538980484, 0.43568286299705505, 0.43193721771240234, 0.4362684190273285, 0.42315375804901123, 0.41612935066223145, 0.4038631319999695, 0.3968127369880676, 0.3992682993412018, 0.38905563950538635, 0.38137081265449524, 0.3785182237625122, 0.37073302268981934, 0.3661412000656128, 0.3587941825389862, 0.3587648868560791, 0.3428257405757904, 0.3471873104572296, 0.34888899326324463, 0.33111095428466797, 0.33811700344085693, 0.3325161635875702, 0.32751598954200745, 0.31635090708732605, 0.3122899532318115, 0.3080160915851593, 0.3058406710624695, 0.3047175109386444, 0.3018174171447754, 0.2878017723560333, 0.28582465648651123, 0.2806933522224426, 0.27605578303337097, 0.2712346017360687, 0.2796078324317932, 0.270070880651474, 0.26115772128105164, 0.2676717936992645, 0.26280176639556885, 0.25363317131996155, 0.24986548721790314, 0.24929429590702057, 0.24336276948451996, 0.24454952776432037, 0.23641125857830048, 0.23695187270641327, 0.22701849043369293, 0.2266983836889267, 0.22497861087322235, 0.22548377513885498, 0.2151321917772293, 0.2147125005722046, 0.20466318726539612, 0.2078208029270172, 0.20960883796215057, 0.20508992671966553, 0.19721628725528717], "accuracy": [0.2794875204563141, 0.4905560612678528, 0.5654470920562744, 0.6239598393440247, 0.6700568199157715, 0.7041342258453369, 0.7206445932388306, 0.7382115721702576, 0.7600052952766418, 0.7664773464202881, 0.7741381525993347, 0.7901201844215393, 0.7954035401344299, 0.7979130744934082, 0.8095363974571228, 0.8129705190658569, 0.8190463781356812, 0.8261788487434387, 0.8206313848495483, 0.828820526599884, 0.8329150676727295, 0.8334434032440186, 0.8417646288871765, 0.845859169960022, 0.8469158411026001, 0.8467837572097778, 0.8486329317092896, 0.8520671129226685, 0.8545766472816467, 0.8597279191017151, 0.8573504090309143, 0.8613129258155823, 0.8647470474243164, 0.8702945709228516, 0.8710870146751404, 0.8732003569602966, 0.868049144744873, 0.8728041052818298, 0.8780874609947205, 0.8767666220664978, 0.8765024542808533, 0.8817857503890991, 0.8809932470321655, 0.8828424215316772, 0.8821820020675659, 0.8874653577804565, 0.891559898853302, 0.8928807377815247, 0.8898428082466125, 0.8902390599250793, 0.893541157245636, 0.8960506916046143, 0.897899866104126, 0.8973715305328369, 0.9026548862457275, 0.902390718460083, 0.9006736278533936, 0.9078060984611511, 0.9075419306755066, 0.9021265506744385, 0.9060890078544617, 0.9062210917472839, 0.910711944103241, 0.9100515246391296, 0.9129573106765747, 0.9095231890678406, 0.9146744012832642, 0.913089394569397, 0.9163914918899536, 0.9163914918899536, 0.9202219247817993, 0.9181085824966431, 0.9232597947120667, 0.9241843819618225, 0.9285431504249573, 0.9260335564613342, 0.9232597947120667, 0.9255052208900452, 0.925901472568512], "val_loss": [2.0350518226623535, 1.501170039176941, 1.0326902866363525, 0.8321704268455505, 0.7499523162841797, 0.6996800303459167, 0.656265139579773, 0.6244497895240784, 0.6004614233970642, 0.5742709040641785, 0.5564271807670593, 0.5513784289360046, 0.5321239233016968, 0.5196132063865662, 0.5014811754226685, 0.49896976351737976, 0.49841752648353577, 0.4836089015007019, 0.47498974204063416, 0.47434374690055847, 0.4645339846611023, 0.46420034766197205, 0.449454665184021, 0.44992366433143616, 0.44239094853401184, 0.4437480568885803, 0.43715038895606995, 0.43308326601982117, 0.4295552968978882, 0.4245481789112091, 0.41999173164367676, 0.41755497455596924, 0.416343092918396, 0.41639244556427, 0.417570561170578, 0.4083468019962311, 0.40677449107170105, 0.4064213037490845, 0.40097305178642273, 0.4062139093875885, 0.3958761692047119, 0.40417566895484924, 0.398069828748703, 0.3934062123298645, 0.3917003870010376, 0.3921110928058624, 0.39285799860954285, 0.3904555141925812, 0.3985135555267334, 0.3824273645877838, 0.3871852159500122, 0.3842715919017792, 0.3892956078052521, 0.3860727846622467, 0.3800209164619446, 0.3808245062828064, 0.3758431375026703, 0.38120728731155396, 0.379063218832016, 0.37950393557548523, 0.3784659802913666, 0.3732587397098541, 0.37814655900001526, 0.37685084342956543, 0.3802163898944855, 0.3773473799228668, 0.37723681330680847, 0.37121260166168213, 0.3852003216743469, 0.37429410219192505, 0.3712119460105896, 0.37406957149505615, 0.3746696710586548, 0.37342318892478943, 0.3805491030216217, 0.37096431851387024, 0.3768046498298645, 0.3730812072753906, 0.37635889649391174], "val_accuracy": [0.5413333177566528, 0.6553333401679993, 0.6859999895095825, 0.7123333215713501, 0.731333315372467, 0.7463333606719971, 0.762333333492279, 0.7580000162124634, 0.7739999890327454, 0.784333348274231, 0.7906666398048401, 0.7879999876022339, 0.8013333082199097, 0.8103333115577698, 0.8196666836738586, 0.8186666369438171, 0.809333324432373, 0.8193333148956299, 0.824999988079071, 0.8259999752044678, 0.8270000219345093, 0.8306666612625122, 0.8363333344459534, 0.8353333473205566, 0.8389999866485596, 0.8363333344459534, 0.8420000076293945, 0.8429999947547913, 0.8429999947547913, 0.8453333377838135, 0.8456666469573975, 0.847000002861023, 0.8483333587646484, 0.8486666679382324, 0.8473333120346069, 0.8543333411216736, 0.8566666841506958, 0.8576666712760925, 0.8573333621025085, 0.8550000190734863, 0.8610000014305115, 0.8566666841506958, 0.8576666712760925, 0.862333357334137, 0.859666645526886, 0.862333357334137, 0.862666666507721, 0.8636666536331177, 0.859333336353302, 0.8650000095367432, 0.8633333444595337, 0.8653333187103271, 0.8640000224113464, 0.8679999709129333, 0.8669999837875366, 0.8673333525657654, 0.8709999918937683, 0.871666669845581, 0.8713333606719971, 0.8673333525657654, 0.8686666488647461, 0.8706666827201843, 0.875333309173584, 0.8743333220481873, 0.8700000047683716, 0.8730000257492065, 0.8756666779518127, 0.8726666569709778, 0.875333309173584, 0.8736666440963745, 0.8763333559036255, 0.8776666522026062, 0.8723333477973938, 0.8806666731834412, 0.8790000081062317, 0.8756666779518127, 0.878333330154419, 0.8799999952316284, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [6, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 73], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 51, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 35, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [19, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3], [69, 16], [0, 1, 1], [6], [0, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 2, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), alpha)))), tf.math.sqrt(beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 50], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0, 6], [0, 2, 0, 3, 0], [16, 16, 18], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 27]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 3, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)))", "other_info": {"loss": [2.311445474624634, 2.3085484504699707, 2.3090333938598633, 2.3107144832611084, 2.3098397254943848, 2.308816432952881], "accuracy": [0.09008057415485382, 0.09259014576673508, 0.09311848133802414, 0.09179764986038208, 0.0882314071059227, 0.09047681838274002], "val_loss": [2.3078701496124268, 2.3078701496124268, 2.3078701496124268, 2.3078701496124268, 2.3078701496124268, 2.3078701496124268], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]