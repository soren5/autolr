[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222940921783447, 1.871828556060791, 1.4043127298355103, 1.1082061529159546, 0.954205334186554, 0.8416569828987122, 0.7742792963981628, 0.7346032857894897, 0.6916344165802002, 0.6687458157539368, 0.6377894878387451, 0.6136122345924377, 0.6004122495651245, 0.5746781229972839, 0.5639814734458923, 0.5447896122932434, 0.5347860455513, 0.5182151794433594, 0.5066147446632385, 0.5019263625144958, 0.4971795976161957, 0.4766722023487091, 0.4755754768848419, 0.46255019307136536, 0.4530166685581207, 0.4484916627407074, 0.44479984045028687, 0.43716633319854736, 0.4244868755340576, 0.42458397150039673, 0.4127245843410492, 0.4006583094596863, 0.40842580795288086, 0.39776837825775146, 0.395988404750824, 0.3909795880317688, 0.3728601932525635, 0.3785508871078491, 0.3652454614639282, 0.37155574560165405, 0.36400696635246277, 0.3526971936225891, 0.34169459342956543, 0.34624043107032776, 0.3427968919277191, 0.33393025398254395, 0.33119043707847595, 0.33076608180999756, 0.32187801599502563, 0.31328654289245605, 0.3089994490146637, 0.3143097162246704, 0.3048734664916992], "accuracy": [0.27578920125961304, 0.4858010709285736, 0.564258337020874, 0.6120724081993103, 0.6552634835243225, 0.6947563290596008, 0.7244749665260315, 0.7342491149902344, 0.7490423917770386, 0.7470611333847046, 0.7633073329925537, 0.7754589915275574, 0.77677983045578, 0.7943468689918518, 0.7927618622779846, 0.8038568496704102, 0.807158887386322, 0.809140145778656, 0.8137630224227905, 0.8171972036361694, 0.817461371421814, 0.8278959393501282, 0.8300092220306396, 0.8271034359931946, 0.8315942287445068, 0.8389908671379089, 0.8412362933158875, 0.8408400416374207, 0.8465195894241333, 0.848368763923645, 0.8518029451370239, 0.8570862412452698, 0.8532558679580688, 0.8581429123878479, 0.8585391640663147, 0.8631620407104492, 0.8679170608520508, 0.8643507957458496, 0.8696341514587402, 0.8684453964233398, 0.867520809173584, 0.8714832663536072, 0.8780874609947205, 0.8772949576377869, 0.8753136992454529, 0.8812574148178101, 0.8804649114608765, 0.8805969953536987, 0.8853520154953003, 0.8860124349594116, 0.8887861371040344, 0.8907673954963684, 0.8891823887825012], "val_loss": [2.0377652645111084, 1.5199819803237915, 1.052704930305481, 0.841472327709198, 0.751268208026886, 0.6904552578926086, 0.6414151191711426, 0.6116719841957092, 0.5898959040641785, 0.5638870596885681, 0.5411528944969177, 0.5265145897865295, 0.5110569000244141, 0.5004784464836121, 0.48873576521873474, 0.47416386008262634, 0.4698109030723572, 0.4642808735370636, 0.4527584910392761, 0.44998183846473694, 0.44537556171417236, 0.4360503852367401, 0.4302385747432709, 0.42433544993400574, 0.4177784025669098, 0.421334832906723, 0.41481074690818787, 0.4101143479347229, 0.40214958786964417, 0.40152686834335327, 0.39788883924484253, 0.3995068371295929, 0.3924223780632019, 0.3936578035354614, 0.3850329518318176, 0.38722559809684753, 0.3822554647922516, 0.37971410155296326, 0.3766401708126068, 0.3758145868778229, 0.3733443319797516, 0.3642421066761017, 0.3644384443759918, 0.36303797364234924, 0.36547282338142395, 0.36330196261405945, 0.36053234338760376, 0.35639306902885437, 0.3568638563156128, 0.3534705340862274, 0.3544130027294159, 0.35579442977905273, 0.34830859303474426], "val_accuracy": [0.5556666851043701, 0.6539999842643738, 0.6803333163261414, 0.7099999785423279, 0.7319999933242798, 0.7540000081062317, 0.7673333287239075, 0.7743333578109741, 0.7799999713897705, 0.7889999747276306, 0.8063333630561829, 0.8033333420753479, 0.809333324432373, 0.8116666674613953, 0.815666675567627, 0.8209999799728394, 0.8243333101272583, 0.8263333439826965, 0.8386666774749756, 0.8306666612625122, 0.8336666822433472, 0.8366666436195374, 0.8396666646003723, 0.8426666855812073, 0.847000002861023, 0.8396666646003723, 0.8420000076293945, 0.8410000205039978, 0.8479999899864197, 0.8510000109672546, 0.8513333201408386, 0.8450000286102295, 0.8533333539962769, 0.8526666760444641, 0.8573333621025085, 0.8550000190734863, 0.8560000061988831, 0.8600000143051147, 0.8610000014305115, 0.859666645526886, 0.8640000224113464, 0.8640000224113464, 0.8606666922569275, 0.8640000224113464, 0.8643333315849304, 0.8646666407585144, 0.8673333525657654, 0.8726666569709778, 0.8686666488647461, 0.8656666874885559, 0.8686666488647461, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 6, 8, 1, 4, 1, 4, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [2.0232748985290527, 1.1377313137054443, 0.7915961742401123, 0.669547438621521, 0.6031097173690796, 0.5629002451896667, 0.5359553694725037, 0.504506528377533, 0.47886884212493896, 0.46775904297828674, 0.45821765065193176, 0.44421958923339844, 0.4314998388290405, 0.41047486662864685, 0.4117877185344696, 0.39206454157829285, 0.3965286314487457, 0.38818275928497314, 0.3809647560119629, 0.3818950355052948, 0.36954131722450256, 0.37413713335990906, 0.36398550868034363, 0.3698873221874237, 0.3690328001976013, 0.3804464638233185, 0.38937291502952576, 0.3624292016029358, 0.35136592388153076, 0.36552563309669495, 0.3524499833583832, 0.35608556866645813, 0.3686215281486511, 0.3531249463558197], "accuracy": [0.29705455899238586, 0.6116761565208435, 0.700700044631958, 0.7450799345970154, 0.7683265209197998, 0.7807422876358032, 0.7924976944923401, 0.8088759779930115, 0.8202351331710815, 0.8315942287445068, 0.8302733898162842, 0.8354246616363525, 0.8400475382804871, 0.8470479249954224, 0.8514066934585571, 0.8574824929237366, 0.8545766472816467, 0.8580108284950256, 0.8613129258155823, 0.858671247959137, 0.8673887252807617, 0.8643507957458496, 0.8659358024597168, 0.8619733452796936, 0.863558292388916, 0.8603883385658264, 0.8561616539955139, 0.8647470474243164, 0.874389111995697, 0.8654074668884277, 0.8698983192443848, 0.872407853603363, 0.8602562546730042, 0.8668603897094727], "val_loss": [0.9675070643424988, 0.7347806096076965, 0.6394268274307251, 0.5599182844161987, 0.5227500200271606, 0.5084176659584045, 0.48672810196876526, 0.4562593698501587, 0.4649716913700104, 0.4407457709312439, 0.44618725776672363, 0.429219126701355, 0.4233601987361908, 0.4185135066509247, 0.39993220567703247, 0.40643030405044556, 0.39503178000450134, 0.40560126304626465, 0.3943904936313629, 0.3933197557926178, 0.3910757601261139, 0.40169116854667664, 0.40646061301231384, 0.392973393201828, 0.39263150095939636, 0.4106241762638092, 0.3915466368198395, 0.382955402135849, 0.3932790160179138, 0.4040590822696686, 0.3940218985080719, 0.4121735095977783, 0.3876211643218994, 0.4077773094177246], "val_accuracy": [0.6483333110809326, 0.7056666612625122, 0.7576666474342346, 0.7973333597183228, 0.7943333387374878, 0.8073333501815796, 0.8180000185966492, 0.8410000205039978, 0.8316666483879089, 0.8423333168029785, 0.8416666388511658, 0.8533333539962769, 0.8503333330154419, 0.8533333539962769, 0.8619999885559082, 0.8613333106040955, 0.862666666507721, 0.8583333492279053, 0.8633333444595337, 0.8686666488647461, 0.862666666507721, 0.862333357334137, 0.8629999756813049, 0.8690000176429749, 0.8646666407585144, 0.8560000061988831, 0.8663333058357239, 0.8713333606719971, 0.8730000257492065, 0.8683333396911621, 0.8683333396911621, 0.8550000190734863, 0.8700000047683716, 0.8723333477973938]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 0, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 3, 0, 3, 5, 7], [0, 0, 0, 3, 0, 5], [16, 16, 6, 91], [0, 0, 1], [0, 5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 4, 1, 4, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 80, 91, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 13, 7, 6, 4, 3, 2, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.negative(tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 48, 96, 99, 29, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3049886226654053, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [85, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 0, 9, 1, 4, 1, 4, 2, 8, 9], [0, 2, 0, 3, 0, 0, 4, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 19, 12, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [89.61607360839844, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1326.76171875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}]