[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236812114715576, 1.8671404123306274, 1.3947219848632812, 1.1041651964187622, 0.937580406665802, 0.8341078758239746, 0.7640519142150879, 0.7294188141822815, 0.6908931136131287, 0.6627532839775085, 0.6352455615997314, 0.609435498714447, 0.5870189666748047, 0.5784708261489868, 0.5515148043632507, 0.5560659170150757, 0.5385040044784546, 0.5222666263580322, 0.49938154220581055, 0.4980670213699341, 0.49027058482170105, 0.4742213189601898, 0.4704975187778473, 0.4698208272457123, 0.45739975571632385, 0.4486093819141388, 0.44276508688926697, 0.4327779710292816, 0.4294719696044922, 0.4166185259819031, 0.41804778575897217, 0.4028262794017792, 0.40789198875427246, 0.39451277256011963, 0.39922210574150085, 0.3868662118911743, 0.37350520491600037, 0.37871453166007996, 0.3695136606693268, 0.36464667320251465, 0.3563089370727539, 0.35652074217796326, 0.3476172983646393, 0.35158947110176086, 0.33881911635398865, 0.3337723910808563, 0.3384905159473419, 0.3286433219909668, 0.32583820819854736, 0.32338380813598633, 0.3166697025299072, 0.3085438311100006, 0.31002146005630493, 0.30277639627456665, 0.3058650493621826, 0.29860982298851013, 0.29092228412628174, 0.28888002038002014, 0.2868345081806183, 0.27949753403663635, 0.27444520592689514, 0.27903324365615845, 0.2696516215801239, 0.26645463705062866, 0.26707693934440613, 0.2595262825489044, 0.2590276300907135, 0.25775572657585144, 0.24919594824314117, 0.24772265553474426, 0.24103283882141113, 0.24282653629779816, 0.23700502514839172], "accuracy": [0.2694492042064667, 0.4974243938922882, 0.5646545886993408, 0.6169594526290894, 0.6682076454162598, 0.7065116763114929, 0.72672039270401, 0.7321357727050781, 0.748249888420105, 0.7539294958114624, 0.7717606425285339, 0.7844406366348267, 0.7889314293861389, 0.789988100528717, 0.8029322624206543, 0.8030643463134766, 0.8099326491355896, 0.8137630224227905, 0.8234050869941711, 0.8170651197433472, 0.8277638554573059, 0.8350284099578857, 0.8313300609588623, 0.8341038227081299, 0.8378021121025085, 0.8396512866020203, 0.8422929644584656, 0.8521991968154907, 0.8416325449943542, 0.8514066934585571, 0.8521991968154907, 0.8585391640663147, 0.8555012345314026, 0.8618412613868713, 0.8573504090309143, 0.8598600029945374, 0.8677849769592285, 0.8677849769592285, 0.870030403137207, 0.8672566413879395, 0.8706908226013184, 0.8717474341392517, 0.8812574148178101, 0.874389111995697, 0.8816536664962769, 0.8796724081039429, 0.8768987059593201, 0.8792761564254761, 0.8816536664962769, 0.8831065893173218, 0.8874653577804565, 0.8837670087814331, 0.8874653577804565, 0.8897107243537903, 0.8886540532112122, 0.8931449055671692, 0.8936732411384583, 0.8931449055671692, 0.8973715305328369, 0.8957865834236145, 0.9001452922821045, 0.8949940800666809, 0.902390718460083, 0.9049002528190613, 0.9043719172477722, 0.904768168926239, 0.9038436412811279, 0.9037115573883057, 0.9116365313529968, 0.9071456789970398, 0.9137498140335083, 0.9095231890678406, 0.9132214784622192], "val_loss": [2.040280818939209, 1.521284818649292, 1.0539567470550537, 0.8458407521247864, 0.7596278190612793, 0.7034464478492737, 0.6635256409645081, 0.6305397152900696, 0.609454333782196, 0.5866012573242188, 0.5723843574523926, 0.5571313500404358, 0.541847288608551, 0.5334610342979431, 0.5224707722663879, 0.5165677666664124, 0.5032722353935242, 0.4943982660770416, 0.4880084693431854, 0.4799250066280365, 0.470976322889328, 0.46826663613319397, 0.4600695073604584, 0.4527280628681183, 0.45046964287757874, 0.45034781098365784, 0.44370776414871216, 0.4443877637386322, 0.4337308704853058, 0.4267582297325134, 0.43156808614730835, 0.42214468121528625, 0.4196259081363678, 0.4161829352378845, 0.41099849343299866, 0.40814706683158875, 0.4061862826347351, 0.4059500992298126, 0.4063202440738678, 0.4000902771949768, 0.3973519802093506, 0.39838117361068726, 0.39616572856903076, 0.39053359627723694, 0.393008828163147, 0.39200231432914734, 0.3895995616912842, 0.38499799370765686, 0.3859894871711731, 0.3847939372062683, 0.38034310936927795, 0.37841182947158813, 0.3769344389438629, 0.38927122950553894, 0.3831081986427307, 0.3777628242969513, 0.3785916268825531, 0.37772664427757263, 0.37191829085350037, 0.3751208484172821, 0.37919479608535767, 0.3779629170894623, 0.3706146776676178, 0.37025120854377747, 0.36458995938301086, 0.36711788177490234, 0.3689144253730774, 0.36446917057037354, 0.3741106688976288, 0.3647642135620117, 0.3666140139102936, 0.363582968711853, 0.3677411675453186], "val_accuracy": [0.531000018119812, 0.6466666460037231, 0.6759999990463257, 0.6970000267028809, 0.7223333120346069, 0.7366666793823242, 0.7490000128746033, 0.7620000243186951, 0.7676666378974915, 0.7829999923706055, 0.7856666445732117, 0.7919999957084656, 0.8023333549499512, 0.8029999732971191, 0.8033333420753479, 0.8056666851043701, 0.8159999847412109, 0.8199999928474426, 0.8216666579246521, 0.8293333053588867, 0.8330000042915344, 0.8349999785423279, 0.8363333344459534, 0.8423333168029785, 0.8379999995231628, 0.8356666564941406, 0.840666651725769, 0.8349999785423279, 0.8456666469573975, 0.8529999852180481, 0.846666693687439, 0.8519999980926514, 0.8503333330154419, 0.8543333411216736, 0.856333315372467, 0.8579999804496765, 0.8569999933242798, 0.8553333282470703, 0.856333315372467, 0.8610000014305115, 0.859333336353302, 0.862666666507721, 0.8610000014305115, 0.8613333106040955, 0.8643333315849304, 0.862666666507721, 0.8610000014305115, 0.8643333315849304, 0.8640000224113464, 0.8646666407585144, 0.8663333058357239, 0.8669999837875366, 0.8659999966621399, 0.862666666507721, 0.8690000176429749, 0.8663333058357239, 0.8636666536331177, 0.8696666955947876, 0.8696666955947876, 0.8653333187103271, 0.8696666955947876, 0.8646666407585144, 0.8713333606719971, 0.8686666488647461, 0.8743333220481873, 0.8723333477973938, 0.875, 0.8776666522026062, 0.8693333268165588, 0.8769999742507935, 0.8759999871253967, 0.8743333220481873, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 22], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 0, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 4, 0], [16, 99, 96, 99, 33, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 17, 10, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 3, 1, 6, 8, 1, 4, 2, 4, 2, 8, 1, 5, 2, 3, 6, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 5, 7, 2], [16, 99, 96, 99, 61, 1, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 32, 18, 14, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, beta)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 0, 8, 5, 5, 4, 5, 2, 2], [0, 2, 0, 0, 5, 4, 3, 1], [16, 16, 67], [0, 1, 0], [2, 9], [0], [99, 97], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 8, 1, 8, 4, 4, 2, 8], [0, 0, 0, 1, 0, 4, 3, 1, 2, 0], [16, 62, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 22, 14, 8, 3, 3, 2, 1, 2, 11, 7, 4, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.square(tf.math.add(grad, tf.math.add(grad, grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.617652177810669, 3.597024917602539, 4.791606426239014, 6.155210971832275, 7.749002456665039, 9.576247215270996], "accuracy": [0.10434553027153015, 0.10460969805717468, 0.1026284471154213, 0.1010434553027153, 0.09959053993225098, 0.1006472036242485], "val_loss": [2.742952585220337, 3.447777271270752, 4.374446392059326, 5.5191802978515625, 6.877753257751465, 8.449305534362793], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]