[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.21975040435791, 1.864120602607727, 1.3822071552276611, 1.0878249406814575, 0.935062825679779, 0.8277917504310608, 0.7658303380012512, 0.7160202860832214, 0.6816803812980652, 0.651117205619812, 0.6348382830619812, 0.6110237240791321, 0.5880402326583862, 0.5705441832542419, 0.5633711218833923, 0.5466291308403015, 0.5378562211990356, 0.5179745554924011, 0.5062913298606873, 0.49674347043037415, 0.4845166802406311, 0.47630318999290466, 0.46499940752983093, 0.45893147587776184, 0.44879621267318726, 0.44148996472358704, 0.4363928735256195, 0.4234696924686432, 0.4185523986816406, 0.41448837518692017, 0.41011327505111694, 0.4018329977989197, 0.3895866572856903, 0.3910665512084961, 0.3794604241847992, 0.36607030034065247, 0.36637014150619507, 0.35924670100212097, 0.36191022396087646, 0.3545405864715576, 0.3539646863937378, 0.34268155694007874, 0.3394091725349426, 0.3322480022907257, 0.32624730467796326, 0.3238653838634491, 0.31849920749664307, 0.3163641393184662, 0.31310728192329407, 0.31077948212623596, 0.30812084674835205, 0.3042179346084595, 0.3006766438484192, 0.28752759099006653, 0.28258684277534485, 0.28671449422836304, 0.2695830464363098], "accuracy": [0.27499669790267944, 0.48514068126678467, 0.5672962665557861, 0.6273940205574036, 0.6670188903808594, 0.7043983340263367, 0.7235503792762756, 0.7441553473472595, 0.7510236501693726, 0.7671377658843994, 0.7687227725982666, 0.7734777331352234, 0.7866860628128052, 0.7959318161010742, 0.7954035401344299, 0.8021397590637207, 0.8083476424217224, 0.8104609847068787, 0.8150838613510132, 0.8210275769233704, 0.8264430165290833, 0.8309338092803955, 0.833179235458374, 0.8354246616363525, 0.8383304476737976, 0.8412362933158875, 0.8407079577445984, 0.850350022315979, 0.8496896028518677, 0.8490291833877563, 0.8491612672805786, 0.8540483713150024, 0.8605204224586487, 0.8582749962806702, 0.8602562546730042, 0.8643507957458496, 0.8688416481018066, 0.8697662353515625, 0.8710870146751404, 0.8704266548156738, 0.868049144744873, 0.8786157965660095, 0.8739928603172302, 0.878879964351654, 0.8808611631393433, 0.8829745054244995, 0.8803328275680542, 0.8840311765670776, 0.8885219693183899, 0.8849557638168335, 0.887597382068634, 0.8894465565681458, 0.887201189994812, 0.8927486538887024, 0.8975036144256592, 0.8928807377815247, 0.9038436412811279], "val_loss": [2.0342953205108643, 1.5114514827728271, 1.0377458333969116, 0.834633469581604, 0.7445105910301208, 0.6879909634590149, 0.6492422819137573, 0.6080284714698792, 0.5849194526672363, 0.5649352073669434, 0.5483365654945374, 0.5308756232261658, 0.5171250700950623, 0.5036739110946655, 0.5015994310379028, 0.4844725430011749, 0.47834569215774536, 0.46454450488090515, 0.45638418197631836, 0.4521511197090149, 0.4440186619758606, 0.4388432204723358, 0.4354023337364197, 0.4249970614910126, 0.42184436321258545, 0.4192359149456024, 0.41198354959487915, 0.4072807729244232, 0.40615925192832947, 0.4005613625049591, 0.40124765038490295, 0.39615166187286377, 0.3917790651321411, 0.38931143283843994, 0.3826449513435364, 0.3812893033027649, 0.3778388798236847, 0.3791390359401703, 0.37421122193336487, 0.37287479639053345, 0.3738749325275421, 0.36705973744392395, 0.366122305393219, 0.36730721592903137, 0.36305224895477295, 0.3596745729446411, 0.3624610900878906, 0.36429816484451294, 0.35537806153297424, 0.3602551221847534, 0.360882967710495, 0.3560609519481659, 0.3497691750526428, 0.35234612226486206, 0.3488443195819855, 0.3461877405643463, 0.34744131565093994], "val_accuracy": [0.5353333353996277, 0.6449999809265137, 0.687666654586792, 0.7096666693687439, 0.7310000061988831, 0.7419999837875366, 0.7586666941642761, 0.7710000276565552, 0.7789999842643738, 0.7879999876022339, 0.8023333549499512, 0.8016666769981384, 0.8096666932106018, 0.8136666417121887, 0.8143333196640015, 0.8286666870117188, 0.8356666564941406, 0.8386666774749756, 0.8379999995231628, 0.8386666774749756, 0.8429999947547913, 0.843666672706604, 0.8446666598320007, 0.8543333411216736, 0.8550000190734863, 0.8553333282470703, 0.8546666502952576, 0.8569999933242798, 0.8586666584014893, 0.8579999804496765, 0.8579999804496765, 0.8550000190734863, 0.8576666712760925, 0.862333357334137, 0.8646666407585144, 0.8643333315849304, 0.8659999966621399, 0.8603333234786987, 0.8690000176429749, 0.8659999966621399, 0.8653333187103271, 0.8683333396911621, 0.8713333606719971, 0.8703333139419556, 0.8679999709129333, 0.8736666440963745, 0.8653333187103271, 0.862666666507721, 0.8730000257492065, 0.8700000047683716, 0.8740000128746033, 0.8763333559036255, 0.8763333559036255, 0.8730000257492065, 0.8759999871253967, 0.8743333220481873, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 5, 3], [0, 1, 2, 2], [99, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [40, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 0, 1, 2, 8], [4, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 48, 66, 1]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.297356605529785, 2.3607335090637207, 2.5861573219299316, 2.309349298477173, 2.304302453994751, 2.303375244140625, 2.3030295372009277], "accuracy": [0.21820102632045746, 0.15149913728237152, 0.15480121970176697, 0.0956280529499054, 0.09998679161071777, 0.09906221181154251, 0.09576013684272766], "val_loss": [2.228041887283325, 2.3047242164611816, 2.315192699432373, 2.30489444732666, 2.3030149936676025, 2.3026909828186035, 2.3026578426361084], "val_accuracy": [0.10100000351667404, 0.10499999672174454, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [51, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 2, 3, 0, 3, 5, 0, 9], [0, 2, 1, 3], [16, 92], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 4, 2, 0], [16, 8, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 8, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 3], [16, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 7, 6, 0, 2, 4, 4], [0, 4, 3, 3, 5, 0, 1], [99, 78], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 2, 4, 1, 4, 6, 8], [0, 0, 0, 3, 1, 0, 3, 1, 4, 0], [21, 53, 0, 99, 29, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 14, 7, 7, 2, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, sigma), tf.math.negative(tf.math.add(sigma, tf.math.pow(grad, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 4, 5, 0, 7, 6, 8, 8, 1, 4, 7, 3, 1, 6, 4, 3, 3, 3, 4, 1, 4, 7, 5, 5, 8, 6, 8, 9, 9, 1, 6, 0, 4, 7, 8, 7, 7], [0, 2, 0, 2, 2, 2, 1, 0, 3, 2, 0, 0, 0, 3, 1, 0, 3, 3, 0, 1, 0, 2, 3, 2, 1, 1], [39, 39, 55, 83, 46, 73, 29, 96, 75, 20, 71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 8, 9], [0, 2, 0, 1], [16, 16, 91], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(grad), grad), grad))))), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), alpha))), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.add(grad, grad))), alpha)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 67, 41, 26, 11, 11, 8, 3, 3, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 34}]