[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22357177734375, 1.8650116920471191, 1.4000746011734009, 1.1012269258499146, 0.932837963104248, 0.8271015286445618, 0.7658592462539673, 0.7224454283714294, 0.6691972613334656, 0.6477810740470886, 0.6266072988510132, 0.6080545783042908, 0.5767232775688171, 0.562099277973175, 0.5586234927177429, 0.5303782820701599, 0.5221758484840393, 0.5126169323921204, 0.49998360872268677, 0.48460790514945984, 0.4816616177558899, 0.4629242718219757, 0.4615990221500397, 0.4594314694404602, 0.44198164343833923, 0.44458356499671936, 0.431774765253067, 0.4264734089374542, 0.4216955900192261, 0.41110581159591675, 0.40278947353363037, 0.39966148138046265, 0.39822712540626526, 0.3853060305118561, 0.38804924488067627, 0.378132164478302, 0.3744158148765564, 0.36034396290779114, 0.3625268340110779, 0.35962772369384766, 0.35636699199676514, 0.344052791595459, 0.3358243703842163, 0.3402116596698761, 0.3333851397037506, 0.3253631293773651, 0.3205565810203552, 0.32256394624710083, 0.312643826007843, 0.3082501292228699, 0.30678245425224304, 0.3001348376274109, 0.2918543517589569, 0.29346218705177307, 0.29183539748191833, 0.2861114740371704, 0.2763180434703827, 0.27741166949272156, 0.26801252365112305, 0.2643834352493286, 0.2599389851093292, 0.2564506232738495, 0.2604484260082245, 0.2538740336894989, 0.24882888793945312, 0.23762503266334534, 0.23767681419849396, 0.2378545105457306, 0.23403452336788177, 0.23918020725250244, 0.229166641831398, 0.21815049648284912, 0.21863135695457458, 0.21249651908874512, 0.21310730278491974, 0.20887508988380432, 0.21084730327129364, 0.19965296983718872, 0.202938973903656, 0.2021050602197647, 0.18727682530879974, 0.1922154575586319, 0.1860853135585785, 0.18586251139640808, 0.18937556445598602, 0.18260887265205383, 0.1819838136434555], "accuracy": [0.26839256286621094, 0.49491479992866516, 0.5639941692352295, 0.617751955986023, 0.6653017997741699, 0.6975300312042236, 0.7255316376686096, 0.7298903465270996, 0.7528728246688843, 0.7569673657417297, 0.7744023203849792, 0.7778365015983582, 0.7887993454933167, 0.7952714562416077, 0.7930260300636292, 0.8047813773155212, 0.8067626357078552, 0.811649739742279, 0.8173292875289917, 0.8259146809577942, 0.8240655064582825, 0.835160493850708, 0.8317263126373291, 0.8362171649932861, 0.8429533839225769, 0.8409721255302429, 0.846387505531311, 0.8445383906364441, 0.8506141901016235, 0.8531237840652466, 0.8551049828529358, 0.8602562546730042, 0.8593316674232483, 0.8622375130653381, 0.8582749962806702, 0.8614450097084045, 0.8669924736022949, 0.8733324408531189, 0.8702945709228516, 0.8693699836730957, 0.8735966086387634, 0.8776912093162537, 0.8755778670310974, 0.8768987059593201, 0.880729079246521, 0.8794082403182983, 0.8817857503890991, 0.8836349248886108, 0.8857482671737671, 0.8902390599250793, 0.8902390599250793, 0.8919561505317688, 0.8938053250312805, 0.8938053250312805, 0.8947299122810364, 0.8957865834236145, 0.8990886211395264, 0.8972394466400146, 0.9012019634246826, 0.9022586345672607, 0.9078060984611511, 0.9054285883903503, 0.9050323367118835, 0.9111081957817078, 0.9093911051750183, 0.9145423173904419, 0.9142781496047974, 0.9137498140335083, 0.9149385690689087, 0.9141460657119751, 0.9174481630325317, 0.9204860925674438, 0.9215427041053772, 0.9223352074623108, 0.9210143685340881, 0.925901472568512, 0.9243164658546448, 0.9276185631752014, 0.9256373047828674, 0.9253731369972229, 0.9350152015686035, 0.9314489364624023, 0.9321093559265137, 0.9306564331054688, 0.9292035102844238, 0.9323735237121582, 0.9326376914978027], "val_loss": [2.0381672382354736, 1.519463062286377, 1.0475680828094482, 0.8413094878196716, 0.7461872696876526, 0.686599612236023, 0.6418731212615967, 0.6083579659461975, 0.5792122483253479, 0.5581867694854736, 0.5374646186828613, 0.5244463682174683, 0.5091201066970825, 0.4969700574874878, 0.482901006937027, 0.47105494141578674, 0.46221110224723816, 0.4573749899864197, 0.44807323813438416, 0.4420037865638733, 0.43416887521743774, 0.4273586571216583, 0.4219835102558136, 0.4154565930366516, 0.41150569915771484, 0.41130536794662476, 0.41125020384788513, 0.39817455410957336, 0.40031856298446655, 0.3970893621444702, 0.38736531138420105, 0.38387972116470337, 0.384052574634552, 0.38394322991371155, 0.3799268305301666, 0.372816801071167, 0.37038490176200867, 0.3694550395011902, 0.37027791142463684, 0.36933428049087524, 0.36798399686813354, 0.3602096438407898, 0.37134331464767456, 0.3591981530189514, 0.35703736543655396, 0.3566882610321045, 0.35688427090644836, 0.3526192605495453, 0.3508439064025879, 0.34881678223609924, 0.34875908493995667, 0.3592483401298523, 0.34728121757507324, 0.34314486384391785, 0.35217520594596863, 0.34410253167152405, 0.3454204201698303, 0.34316450357437134, 0.3450888991355896, 0.3398716151714325, 0.3431740701198578, 0.3450568914413452, 0.34092599153518677, 0.3388047218322754, 0.3367040157318115, 0.3404182195663452, 0.3489719331264496, 0.34002265334129333, 0.341896653175354, 0.336825430393219, 0.3358714282512665, 0.33771952986717224, 0.341564416885376, 0.3409377634525299, 0.337050199508667, 0.3418523073196411, 0.3370358645915985, 0.3431433141231537, 0.3356315493583679, 0.33747851848602295, 0.3406864404678345, 0.3377237617969513, 0.3427920341491699, 0.35010212659835815, 0.3381552994251251, 0.34171146154403687, 0.3418159484863281], "val_accuracy": [0.5586666464805603, 0.6520000100135803, 0.6783333420753479, 0.7020000219345093, 0.734000027179718, 0.749666690826416, 0.7636666893959045, 0.7736666798591614, 0.7896666526794434, 0.7943333387374878, 0.7996666431427002, 0.8116666674613953, 0.8169999718666077, 0.8243333101272583, 0.82833331823349, 0.8343333601951599, 0.8423333168029785, 0.8393333554267883, 0.8413333296775818, 0.8483333587646484, 0.8456666469573975, 0.8519999980926514, 0.8553333282470703, 0.8560000061988831, 0.8586666584014893, 0.8533333539962769, 0.8486666679382324, 0.8643333315849304, 0.8613333106040955, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8676666617393494, 0.8673333525657654, 0.8663333058357239, 0.8703333139419556, 0.8733333349227905, 0.8696666955947876, 0.8703333139419556, 0.8700000047683716, 0.8743333220481873, 0.8756666779518127, 0.8683333396911621, 0.8743333220481873, 0.8773333430290222, 0.8759999871253967, 0.8756666779518127, 0.8759999871253967, 0.8773333430290222, 0.8790000081062317, 0.8769999742507935, 0.8763333559036255, 0.8806666731834412, 0.8823333382606506, 0.8766666650772095, 0.8806666731834412, 0.8769999742507935, 0.8846666812896729, 0.8809999823570251, 0.8849999904632568, 0.8830000162124634, 0.8843333125114441, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8840000033378601, 0.8846666812896729, 0.8843333125114441, 0.8859999775886536, 0.8893333077430725, 0.8889999985694885, 0.8899999856948853, 0.887333333492279, 0.8896666765213013, 0.8899999856948853, 0.890333354473114, 0.890333354473114, 0.8880000114440918, 0.8893333077430725, 0.8923333287239075, 0.893666684627533, 0.8963333368301392, 0.8889999985694885, 0.890333354473114, 0.8946666717529297, 0.8953333497047424, 0.8949999809265137]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 0, 2, 0], [16, 99, 29, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [34], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 68, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3537237644195557, 5.3176679611206055, 30.43912124633789, 133.8128662109375, 481.9965515136719, 1453.533447265625], "accuracy": [0.09615638852119446, 0.10051512718200684, 0.09959053993225098, 0.09417514503002167, 0.0952318087220192, 0.10447761416435242], "val_loss": [2.5091207027435303, 10.50752067565918, 54.59306335449219, 214.6676483154297, 704.8821411132812, 1972.0389404296875], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 1, 1, 0, 1, 10, 5, 5, 4], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [45], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3033833503723145, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 1, 6, 7, 2, 3, 9], [0, 2, 0, 3, 4, 2, 2, 3, 2], [16, 16, 1], [0, 1, 1], [6], [0, 0], [62, 32], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8, 6, 6, 6, 8, 6, 1, 9, 3, 1, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 5, 4, 2, 3, 2], [16, 85, 96, 68, 61, 34, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 21, 12, 9, 3, 3, 1, 2, 2, 37, 21, 16, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.multiply(grad, beta), beta), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(beta, tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha))))))), tf.math.add(grad, grad)), beta), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]