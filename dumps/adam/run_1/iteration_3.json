[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.871999979019165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2253546714782715, 1.8775780200958252, 1.399466872215271, 1.0941996574401855, 0.941029965877533, 0.8427216410636902, 0.7828139662742615, 0.725483238697052, 0.6868197321891785, 0.652950644493103, 0.6492242813110352, 0.6180164813995361, 0.5960898995399475, 0.5726051926612854, 0.5597361326217651, 0.5505536794662476, 0.5392939448356628, 0.5221567153930664, 0.5091125965118408, 0.49475032091140747, 0.48841843008995056, 0.47775131464004517, 0.4648721218109131, 0.46578627824783325, 0.45384886860847473, 0.4439297616481781, 0.43315133452415466, 0.429641455411911, 0.4241660535335541, 0.4155416190624237, 0.4065856635570526, 0.39578136801719666, 0.39821192622184753, 0.3918413519859314, 0.38575083017349243, 0.3735491633415222, 0.380761981010437, 0.3721756339073181, 0.3658198118209839, 0.3520005941390991, 0.35398292541503906, 0.34400641918182373, 0.34135329723358154, 0.33522719144821167, 0.3308519423007965, 0.324473112821579, 0.3216729164123535, 0.3159618377685547, 0.3105134665966034, 0.30889779329299927, 0.3027656674385071], "accuracy": [0.27037379145622253, 0.48870691657066345, 0.5633337497711182, 0.6203936338424683, 0.6637167930603027, 0.6999075412750244, 0.7214370369911194, 0.7314753532409668, 0.7481178045272827, 0.7656848430633545, 0.7626469135284424, 0.7791573405265808, 0.7835160493850708, 0.7944789528846741, 0.7998943328857422, 0.8016114234924316, 0.809140145778656, 0.8117818236351013, 0.8186501264572144, 0.8224804997444153, 0.8232730031013489, 0.8308017253875732, 0.8317263126373291, 0.8355567455291748, 0.8397833704948425, 0.8454629778862, 0.8471800088882446, 0.8426892161369324, 0.8438779711723328, 0.8540483713150024, 0.8569541573524475, 0.8588033318519592, 0.8552370667457581, 0.8560295701026917, 0.8597279191017151, 0.8665962219238281, 0.8617091774940491, 0.8684453964233398, 0.8702945709228516, 0.8745211958885193, 0.8717474341392517, 0.8712190985679626, 0.8757099509239197, 0.8790120482444763, 0.8802007436752319, 0.8840311765670776, 0.8835028409957886, 0.8829745054244995, 0.8878615498542786, 0.886672854423523, 0.8901069760322571], "val_loss": [2.043733835220337, 1.5219917297363281, 1.0405628681182861, 0.8271674513816833, 0.7385728359222412, 0.6863242387771606, 0.6394210457801819, 0.6055542230606079, 0.579637348651886, 0.5593869090080261, 0.547102153301239, 0.5338431596755981, 0.5128932595252991, 0.5035747289657593, 0.4914575219154358, 0.48520979285240173, 0.4707808494567871, 0.46300965547561646, 0.4578178822994232, 0.44813793897628784, 0.44279488921165466, 0.4348852038383484, 0.43235597014427185, 0.42223528027534485, 0.4195095896720886, 0.4223223924636841, 0.4137158691883087, 0.40655502676963806, 0.40145930647850037, 0.4012601673603058, 0.3948502242565155, 0.393573522567749, 0.388724148273468, 0.3894922137260437, 0.3867871165275574, 0.38577529788017273, 0.38708215951919556, 0.3817291557788849, 0.3733513653278351, 0.3704090118408203, 0.3720945119857788, 0.36655640602111816, 0.36299189925193787, 0.3657146096229553, 0.3571730852127075, 0.3598894774913788, 0.3540472388267517, 0.3548164963722229, 0.3521439731121063, 0.3499751687049866, 0.34883660078048706], "val_accuracy": [0.5223333239555359, 0.6539999842643738, 0.6896666884422302, 0.7213333249092102, 0.7350000143051147, 0.75, 0.7620000243186951, 0.7723333239555359, 0.7773333191871643, 0.7993333339691162, 0.8033333420753479, 0.8090000152587891, 0.8186666369438171, 0.8223333358764648, 0.8266666531562805, 0.8306666612625122, 0.8366666436195374, 0.8343333601951599, 0.8399999737739563, 0.8389999866485596, 0.8443333506584167, 0.8513333201408386, 0.8506666421890259, 0.8510000109672546, 0.8543333411216736, 0.8496666550636292, 0.8529999852180481, 0.8543333411216736, 0.8556666374206543, 0.859666645526886, 0.8573333621025085, 0.859666645526886, 0.8583333492279053, 0.862333357334137, 0.8619999885559082, 0.8650000095367432, 0.8586666584014893, 0.8656666874885559, 0.862333357334137, 0.8640000224113464, 0.8646666407585144, 0.8659999966621399, 0.8713333606719971, 0.8690000176429749, 0.8690000176429749, 0.8723333477973938, 0.871999979019165, 0.8703333139419556, 0.8703333139419556, 0.8696666955947876, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225290060043335, 1.87587571144104, 1.406939148902893, 1.1034153699874878, 0.9364996552467346, 0.8502227067947388, 0.7870576977729797, 0.7375462055206299, 0.6952239274978638, 0.6707677245140076, 0.6472273468971252, 0.6362292170524597, 0.6056740880012512, 0.5910203456878662, 0.5703982710838318, 0.5594262480735779, 0.5389491319656372, 0.5383169651031494, 0.5234876871109009, 0.5182483792304993, 0.5045607089996338, 0.49271783232688904, 0.48245716094970703, 0.47712844610214233, 0.4654799699783325, 0.4568401873111725, 0.4421028792858124, 0.4378829896450043, 0.4297875761985779, 0.4283367693424225, 0.4136851727962494, 0.4101272225379944, 0.40888863801956177, 0.39788806438446045, 0.39247435331344604, 0.38223880529403687, 0.3798972964286804, 0.3816218078136444, 0.36781516671180725, 0.35992199182510376, 0.3521583676338196, 0.34970781207084656, 0.35160112380981445, 0.346280574798584, 0.33691030740737915, 0.3301299512386322, 0.3344143331050873, 0.3258132338523865, 0.31187909841537476, 0.311753511428833, 0.31051746010780334], "accuracy": [0.28080835938453674, 0.49332982301712036, 0.5671641826629639, 0.6172236204147339, 0.666358470916748, 0.6985867023468018, 0.717870831489563, 0.7325320243835449, 0.748778223991394, 0.7600052952766418, 0.7642319202423096, 0.7721568942070007, 0.7817989587783813, 0.7862898111343384, 0.7952714562416077, 0.8021397590637207, 0.8053097128868103, 0.8078193068504333, 0.8136309385299683, 0.8133667707443237, 0.8190463781356812, 0.8230088353157043, 0.8308017253875732, 0.8304054737091064, 0.834632158279419, 0.8383304476737976, 0.8407079577445984, 0.8421608805656433, 0.8474441766738892, 0.847840428352356, 0.8532558679580688, 0.8564258217811584, 0.8552370667457581, 0.8564258217811584, 0.8614450097084045, 0.8638224601745605, 0.8663320541381836, 0.8628978729248047, 0.870030403137207, 0.8745211958885193, 0.8728041052818298, 0.8745211958885193, 0.8729361891746521, 0.8741249442100525, 0.8761062026023865, 0.880729079246521, 0.8798044919967651, 0.8809932470321655, 0.886672854423523, 0.8901069760322571, 0.8905032277107239], "val_loss": [2.0410406589508057, 1.5159962177276611, 1.0343514680862427, 0.818366527557373, 0.7298635244369507, 0.6792207956314087, 0.6413783431053162, 0.6035386323928833, 0.5772879719734192, 0.5541664361953735, 0.5407692193984985, 0.5259008407592773, 0.5070452690124512, 0.4972658157348633, 0.48341649770736694, 0.47361060976982117, 0.46466130018234253, 0.45349934697151184, 0.4506053030490875, 0.4412882626056671, 0.4393457770347595, 0.42829975485801697, 0.4321250915527344, 0.41928210854530334, 0.41407886147499084, 0.40695059299468994, 0.4023847281932831, 0.40181228518486023, 0.3914965093135834, 0.38717448711395264, 0.3866230547428131, 0.38421010971069336, 0.37486281991004944, 0.37446627020835876, 0.3743094801902771, 0.3678441047668457, 0.38001909852027893, 0.36418765783309937, 0.36285334825515747, 0.3592497706413269, 0.36321061849594116, 0.35346969962120056, 0.3517414927482605, 0.3520362079143524, 0.34956493973731995, 0.3548556864261627, 0.3506647050380707, 0.34547480940818787, 0.3445698320865631, 0.3420434892177582, 0.3442150056362152], "val_accuracy": [0.5653333067893982, 0.6723333597183228, 0.6913333535194397, 0.7183333039283752, 0.7419999837875366, 0.7599999904632568, 0.7636666893959045, 0.7816666960716248, 0.7860000133514404, 0.7993333339691162, 0.793666660785675, 0.8116666674613953, 0.8173333406448364, 0.815666675567627, 0.8286666870117188, 0.8333333134651184, 0.8356666564941406, 0.843999981880188, 0.8399999737739563, 0.8373333215713501, 0.843999981880188, 0.8500000238418579, 0.843999981880188, 0.8483333587646484, 0.8529999852180481, 0.8560000061988831, 0.8606666922569275, 0.8556666374206543, 0.8640000224113464, 0.8653333187103271, 0.8643333315849304, 0.8643333315849304, 0.8659999966621399, 0.8676666617393494, 0.8666666746139526, 0.8703333139419556, 0.8579999804496765, 0.8686666488647461, 0.871666669845581, 0.8706666827201843, 0.8683333396911621, 0.8723333477973938, 0.874666690826416, 0.8730000257492065, 0.874666690826416, 0.8763333559036255, 0.8693333268165588, 0.8759999871253967, 0.871999979019165, 0.875333309173584, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 92], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 6, 5, 7, 0], [0, 2, 0, 1, 0], [16, 16, 74], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [21, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 13, 8, 5, 3, 2, 1, 1, 1, 8, 4, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))", "other_info": {"loss": [11.024229049682617, 28.37774658203125, 39.65135192871094, 48.433815002441406, 54.95234298706055, 62.885738372802734], "accuracy": [0.09813763201236725, 0.09787346422672272, 0.10447761416435242, 0.09813763201236725, 0.10408136248588562, 0.09747721254825592], "val_loss": [17.840423583984375, 28.075674057006836, 35.639617919921875, 41.77419662475586, 46.99567794799805, 51.57440185546875], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [10, 99], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 8, 3, 9, 3, 5], [2, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 0, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 5, 2, 1, 1, 0, 1, 1, 13, 7, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [208.46177673339844, 18457.861328125, 280952.03125, 1796728.625, 7638578.0, 24238648.0], "accuracy": [0.10210011899471283, 0.09906221181154251, 0.09536388516426086, 0.09826971590518951, 0.1018359512090683, 0.10011887550354004], "val_loss": [1623.3406982421875, 63009.703125, 605421.375, 3118064.0, 11280364.0, 32501834.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 3, 3, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 2, 1, 1, 1, 18, 10, 8, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))))", "other_info": {"loss": [2.3034613132476807, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 2, 3, 3, 3, 5, 2, 3, 9], [1, 0, 0, 2, 0, 0], [39, 39, 91, 86, 97], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 3], [70, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 5, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304131031036377, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]