[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8677142858505249, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216598987579346, 1.8671624660491943, 1.3975038528442383, 1.1001218557357788, 0.9393467307090759, 0.8382863998413086, 0.7737657427787781, 0.7290552854537964, 0.6906234622001648, 0.6608971953392029, 0.6280462145805359, 0.6155103445053101, 0.5915964245796204, 0.5746294260025024, 0.5649078488349915, 0.5433822870254517, 0.5265538692474365, 0.5166969299316406, 0.506211519241333, 0.4928537607192993, 0.486153244972229, 0.4732971787452698, 0.4696238040924072, 0.45692580938339233, 0.4527902901172638, 0.43785738945007324, 0.42233818769454956, 0.4232722520828247, 0.41847237944602966, 0.40747925639152527, 0.4099925756454468, 0.39875370264053345, 0.3940792381763458, 0.381292462348938, 0.3835408389568329, 0.3795869052410126, 0.36203545331954956, 0.362688809633255, 0.36287805438041687, 0.3531031608581543, 0.3444676995277405, 0.34154367446899414, 0.3305414617061615, 0.32994699478149414, 0.326190710067749, 0.3257213830947876, 0.3171958327293396, 0.3141854703426361, 0.3125372529029846, 0.3165726065635681, 0.30637603998184204, 0.3086027204990387, 0.2958803176879883, 0.2877923250198364, 0.2849782109260559, 0.2766491174697876, 0.2751486301422119, 0.2710512578487396, 0.2609427571296692, 0.26095831394195557, 0.2627994418144226, 0.24933919310569763, 0.2531530559062958, 0.2471868246793747, 0.2385696917772293, 0.2400951236486435, 0.23853029310703278, 0.23532773554325104, 0.2339823693037033, 0.2261197715997696, 0.22802206873893738, 0.22043338418006897, 0.2152845859527588, 0.2170434147119522, 0.21228815615177155, 0.21210873126983643, 0.20368395745754242, 0.19896754622459412, 0.19674348831176758, 0.19580648839473724, 0.20013684034347534], "accuracy": [0.2785629332065582, 0.4855369031429291, 0.559371292591095, 0.6140536069869995, 0.6696605682373047, 0.7051908373832703, 0.7182670831680298, 0.7391361594200134, 0.7489103078842163, 0.7604015469551086, 0.7711002230644226, 0.7761194109916687, 0.7876105904579163, 0.7885351777076721, 0.7938185334205627, 0.800818920135498, 0.81112140417099, 0.8170651197433472, 0.8198388814926147, 0.8236692547798157, 0.8271034359931946, 0.8302733898162842, 0.8329150676727295, 0.8372738361358643, 0.8380662798881531, 0.8424250483512878, 0.8485008478164673, 0.8521991968154907, 0.8532558679580688, 0.8552370667457581, 0.8580108284950256, 0.858671247959137, 0.8648791313171387, 0.8648791313171387, 0.8652753829956055, 0.8636903762817383, 0.8716153502464294, 0.8737286925315857, 0.8710870146751404, 0.8733324408531189, 0.8768987059593201, 0.8770307898521423, 0.8811253309249878, 0.8808611631393433, 0.8844274282455444, 0.8809932470321655, 0.8878615498542786, 0.8877294659614563, 0.886672854423523, 0.8853520154953003, 0.8916919827461243, 0.889578640460968, 0.893541157245636, 0.8977677822113037, 0.8963148593902588, 0.9010698795318604, 0.8990886211395264, 0.8975036144256592, 0.9062210917472839, 0.9052965044975281, 0.9034473896026611, 0.9099194407463074, 0.9104477763175964, 0.9134856462478638, 0.9115044474601746, 0.9120327830314636, 0.9126931428909302, 0.9170519113540649, 0.9170519113540649, 0.9194294214248657, 0.9177123308181763, 0.9207502603530884, 0.9241843819618225, 0.9227314591407776, 0.9248448014259338, 0.9252410531044006, 0.924448549747467, 0.9288073182106018, 0.9265618920326233, 0.9293355941772461, 0.9269581437110901], "val_loss": [2.034891366958618, 1.5042381286621094, 1.0352942943572998, 0.8234080672264099, 0.7368380427360535, 0.683384120464325, 0.6432777643203735, 0.6126152873039246, 0.5820310711860657, 0.5583670735359192, 0.5428371429443359, 0.528465986251831, 0.5154961943626404, 0.5018570423126221, 0.4908371865749359, 0.48798999190330505, 0.4704747200012207, 0.4621756672859192, 0.45430582761764526, 0.45064517855644226, 0.4385414123535156, 0.43350541591644287, 0.4322185516357422, 0.4266968071460724, 0.41543301939964294, 0.4139304459095001, 0.4083594083786011, 0.40438807010650635, 0.399528443813324, 0.3970722258090973, 0.3969501256942749, 0.38810116052627563, 0.39120984077453613, 0.386118620634079, 0.38102903962135315, 0.3822804093360901, 0.375901460647583, 0.37114566564559937, 0.37132132053375244, 0.3646571934223175, 0.3637978434562683, 0.35931989550590515, 0.3620116412639618, 0.3622451722621918, 0.3584139943122864, 0.35520556569099426, 0.3479323387145996, 0.35174185037612915, 0.36312276124954224, 0.3531632125377655, 0.3510708808898926, 0.3462172746658325, 0.34479406476020813, 0.34190505743026733, 0.33941519260406494, 0.33961933851242065, 0.34057119488716125, 0.3388519585132599, 0.3369217813014984, 0.3371613323688507, 0.3318825364112854, 0.33737337589263916, 0.3325706720352173, 0.32976233959198, 0.3323137164115906, 0.334624320268631, 0.3373018503189087, 0.33507829904556274, 0.32776638865470886, 0.33198803663253784, 0.3292059004306793, 0.3272014558315277, 0.330117404460907, 0.324442595243454, 0.33470237255096436, 0.3271298110485077, 0.32202306389808655, 0.32850196957588196, 0.32750800251960754, 0.3306022882461548, 0.3187820613384247], "val_accuracy": [0.5490000247955322, 0.6576666831970215, 0.6813333630561829, 0.7066666483879089, 0.7256666421890259, 0.7436666488647461, 0.7553333044052124, 0.7606666684150696, 0.7789999842643738, 0.7816666960716248, 0.7993333339691162, 0.8019999861717224, 0.8040000200271606, 0.8100000023841858, 0.8199999928474426, 0.8226666450500488, 0.8309999704360962, 0.8273333311080933, 0.8343333601951599, 0.8339999914169312, 0.840666651725769, 0.8426666855812073, 0.8443333506584167, 0.8446666598320007, 0.8489999771118164, 0.8446666598320007, 0.8519999980926514, 0.8513333201408386, 0.8543333411216736, 0.8519999980926514, 0.8566666841506958, 0.859333336353302, 0.8579999804496765, 0.859333336353302, 0.859000027179718, 0.8603333234786987, 0.8640000224113464, 0.8636666536331177, 0.8636666536331177, 0.8650000095367432, 0.8643333315849304, 0.8663333058357239, 0.8690000176429749, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8706666827201843, 0.8693333268165588, 0.8666666746139526, 0.8726666569709778, 0.8700000047683716, 0.8696666955947876, 0.8703333139419556, 0.8733333349227905, 0.875333309173584, 0.8763333559036255, 0.878000020980835, 0.875333309173584, 0.8769999742507935, 0.8766666650772095, 0.878333330154419, 0.8776666522026062, 0.8773333430290222, 0.8736666440963745, 0.8803333044052124, 0.8786666393280029, 0.878333330154419, 0.8806666731834412, 0.8793333172798157, 0.8816666603088379, 0.8799999952316284, 0.8816666603088379, 0.8813333511352539, 0.8840000033378601, 0.8833333253860474, 0.8853333592414856, 0.8843333125114441, 0.8849999904632568, 0.8843333125114441, 0.8836666941642761, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1, 7, 3, 7, 7, 7, 0], [0, 2, 0, 3, 2, 3, 2, 3, 5, 4], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 3, 0, 6, 8, 9, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 62, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 23, 13, 10, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(grad, beta), grad), beta), tf.math.negative(grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303715229034424, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 0, 3, 6], [0, 1, 0, 2, 1, 0], [42, 39, 61], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 5, 3, 4, 9, 7, 2], [3, 2, 0, 0, 5, 0, 0, 4], [16, 16, 48, 97, 9], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 3, 0, 7], [16, 78, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 21, 13, 8, 5, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), beta)), tf.math.add(tf.math.sqrt(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [179534432.0, 2.503371238708496, 2.59311842918396, 2.604259967803955, 2.5962541103363037, 2.5996668338775635], "accuracy": [0.10698718577623367, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09893012791872025], "val_loss": [2.4167520999908447, 2.582287549972534, 2.5993125438690186, 2.5965161323547363, 2.5844433307647705, 2.672924041748047], "val_accuracy": [0.10333333164453506, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 1, 1, 1, 4, 1, 4, 2, 8, 4, 4, 5], [0, 0, 4, 3, 0, 1, 3, 1, 2, 3, 6, 4, 6], [16, 99, 96, 99, 62, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), sigma)), tf.math.pow(tf.math.pow(grad, grad), tf.math.square(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 27, 14, 13, 3], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [9, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [36], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 5, 2, 8], [0, 0, 0, 1, 3, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(sigma, tf.math.square(grad))), sigma)), alpha), beta)", "other_info": {"loss": [2.391676664352417, 4.045695781707764, 37489.05078125, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.08519349992275238, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6004226207733154, 7.288703918457031, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0860000029206276, 0.09833333641290665, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 9, 5, 4, 1, 1, 1, 0, 1, 2, 1, 1, 1, 18, 9, 9, 3], "tree_depth": 18}]