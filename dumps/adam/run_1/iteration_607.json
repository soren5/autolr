[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2253236770629883, 1.880408525466919, 1.4030805826187134, 1.087349772453308, 0.9337131381034851, 0.844163715839386, 0.7709840536117554, 0.7395710945129395, 0.7036359310150146, 0.6570872664451599, 0.6413798928260803, 0.6156948208808899, 0.5982813835144043, 0.5861104726791382, 0.5626537799835205, 0.5501706004142761, 0.5315343737602234, 0.5224575400352478, 0.5141431093215942, 0.4972361624240875, 0.4881361424922943, 0.46830958127975464, 0.469596803188324, 0.4571361243724823, 0.448173463344574, 0.4404257833957672, 0.43781861662864685, 0.4250276982784271, 0.4230061173439026, 0.4127739369869232, 0.4072836935520172, 0.4016478955745697, 0.40181997418403625, 0.3904702067375183, 0.38301584124565125, 0.37817633152008057, 0.369139164686203, 0.3664216697216034, 0.352591872215271, 0.3467983305454254, 0.3520302474498749, 0.34733396768569946, 0.34339186549186707, 0.3334173560142517, 0.32619550824165344, 0.3239533007144928, 0.3186757564544678, 0.31820955872535706, 0.3170403242111206], "accuracy": [0.27380794286727905, 0.48989564180374146, 0.5649187564849854, 0.6262052655220032, 0.6664905548095703, 0.7005679607391357, 0.7205125093460083, 0.7331924438476562, 0.7437590956687927, 0.7655527591705322, 0.7644960880279541, 0.7726852297782898, 0.787082314491272, 0.7890635132789612, 0.7948752045631409, 0.8067626357078552, 0.8100647330284119, 0.8105930685997009, 0.8164047002792358, 0.8272355198860168, 0.828292191028595, 0.8330471515655518, 0.8278959393501282, 0.8378021121025085, 0.8413683772087097, 0.8446704745292664, 0.8408400416374207, 0.8481045961380005, 0.8471800088882446, 0.8577466607093811, 0.8578787446022034, 0.8553691506385803, 0.8580108284950256, 0.863558292388916, 0.8619733452796936, 0.8626337051391602, 0.8687095642089844, 0.8697662353515625, 0.8758420348167419, 0.8746532797813416, 0.8779553771018982, 0.8750495314598083, 0.8792761564254761, 0.8805969953536987, 0.8835028409957886, 0.883238673210144, 0.8874653577804565, 0.8854840993881226, 0.8881257176399231], "val_loss": [2.0464677810668945, 1.5266767740249634, 1.0481624603271484, 0.8295718431472778, 0.7389255166053772, 0.6860691905021667, 0.642730712890625, 0.6030257344245911, 0.5756877660751343, 0.5548679828643799, 0.5288845300674438, 0.5135003924369812, 0.4986562132835388, 0.48737695813179016, 0.47436055541038513, 0.46156612038612366, 0.45548802614212036, 0.441812664270401, 0.44214677810668945, 0.4306604862213135, 0.419826865196228, 0.41615942120552063, 0.40679293870925903, 0.4006313979625702, 0.3940522372722626, 0.3929891288280487, 0.3920523226261139, 0.38317546248435974, 0.379966139793396, 0.3791500926017761, 0.372296541929245, 0.37334978580474854, 0.36962980031967163, 0.3624742925167084, 0.3634132146835327, 0.359017550945282, 0.36034220457077026, 0.3543072044849396, 0.35171252489089966, 0.3484724164009094, 0.35054609179496765, 0.34818777441978455, 0.34534016251564026, 0.3430320620536804, 0.3405616879463196, 0.34332144260406494, 0.34234774112701416, 0.3409850597381592, 0.34130704402923584], "val_accuracy": [0.5740000009536743, 0.6570000052452087, 0.6826666593551636, 0.7066666483879089, 0.7393333315849304, 0.7570000290870667, 0.7670000195503235, 0.7850000262260437, 0.7940000295639038, 0.7913333177566528, 0.8069999814033508, 0.8169999718666077, 0.8186666369438171, 0.8226666450500488, 0.8336666822433472, 0.8383333086967468, 0.8383333086967468, 0.8433333039283752, 0.8416666388511658, 0.8433333039283752, 0.8533333539962769, 0.8576666712760925, 0.8573333621025085, 0.8616666793823242, 0.8663333058357239, 0.8656666874885559, 0.8603333234786987, 0.8673333525657654, 0.8726666569709778, 0.8696666955947876, 0.8740000128746033, 0.8679999709129333, 0.8740000128746033, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967, 0.878333330154419, 0.8809999823570251, 0.8776666522026062, 0.874666690826416, 0.8769999742507935, 0.8823333382606506, 0.8793333172798157, 0.8803333044052124, 0.8796666860580444, 0.8766666650772095, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 0, 0, 3, 2], [16, 16, 67], [1, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 1, 5], [16, 78, 96, 99, 69, 1]], "fitness": -0.19457143545150757, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 3, 1, 0, 1, 0, 21, 10, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), alpha)), beta), tf.math.add(alpha, grad))", "other_info": {"loss": [5.2832426518078554e+19, 1.0425549023558081e+20, 1.048029062887249e+20, 1.0956570918527382e+20, 2.6582373655252042e+20, 6.994048337829846e+22, 1.1419910881672337e+23, 8.625574130236796e+22, 1.611560020207726e+25, 4.705793005656621e+25, 8.965276146529726e+22, 4.525923430291416e+23, 1.405359252504054e+23, 1.4362153951350054e+23, 3.644049808249967e+23, 7.673768519506666e+25, 8.747550523264424e+22, 7.799496684842751e+23, 2.9428497045475237e+22, 1.3844906550582188e+29, 2.7842578756134704e+23, 7.732215788713597e+22, 1.9481354214665525e+23, NaN, NaN], "accuracy": [0.11451591551303864, 0.12217672914266586, 0.11913882195949554, 0.11821424216032028, 0.11253467202186584, 0.11821424216032028, 0.12178047746419907, 0.11900673806667328, 0.11927089840173721, 0.11728965491056442, 0.11821424216032028, 0.11834631860256195, 0.12376172095537186, 0.1258750557899475, 0.12257297337055206, 0.11913882195949554, 0.12217672914266586, 0.12217672914266586, 0.11649715900421143, 0.12059172987937927, 0.11966715008020401, 0.11517632752656937, 0.11372341960668564, 0.12310130894184113, 0.12389380484819412], "val_loss": [6.341663770835262e+19, 5.990147704412019e+19, 6.0050284947823395e+19, 5.93100189532139e+19, 9.15556911301169e+19, 3.979756047994758e+20, 4.5948133527921885e+20, 4.412255016084633e+20, 6.089690010511789e+20, 6.084283579896619e+20, 6.078434529880572e+20, 6.071946531667391e+20, 6.065685120810463e+20, 6.060106286772058e+20, 6.053584511561672e+20, 6.047284397895445e+20, 6.040471999771606e+20, 6.034184552479331e+20, 6.028407982269787e+20, 6.023381542873176e+20, 6.018007481880328e+20, 6.012223874796366e+20, 6.006934959983973e+20, 6.00314349204768e+20, 5.998492118057537e+20], "val_accuracy": [0.1496666669845581, 0.1469999998807907, 0.15199999511241913, 0.15166667103767395, 0.1523333340883255, 0.15266667306423187, 0.15399999916553497, 0.156333327293396, 0.15666666626930237, 0.15933333337306976, 0.1599999964237213, 0.16966666281223297, 0.1706666648387909, 0.17166666686534882, 0.17466667294502258, 0.17666666209697723, 0.17733334004878998, 0.1756666600704193, 0.1770000010728836, 0.17800000309944153, 0.17800000309944153, 0.1770000010728836, 0.1770000010728836, 0.1770000010728836, 0.17499999701976776]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 6, 5], [0, 2, 0, 3], [95, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 3, 8, 2, 7], [0, 0, 0, 3, 0, 0, 1, 1, 1, 0, 1, 7], [16, 99, 18, 1, 26, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 28, 16, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.multiply(alpha, alpha)))), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 0, 4, 4, 2, 4], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038196563720703, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 3, 0, 3, 7, 9], [0, 1, 0, 2, 1], [18, 39, 86], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [50, 99, 96, 99, 18, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 12, 7, 5, 3, 10, 6, 4, 2, 2, 1, 1, 0, 9, 5, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma))", "other_info": {"loss": [2.310574531555176, 2.311495304107666, 2.309696912765503, 2.3088560104370117, 2.3103299140930176, 2.309760808944702], "accuracy": [0.09126931428909302, 0.09430722147226334, 0.09100515395402908, 0.09496764093637466, 0.09153348207473755, 0.08994849026203156], "val_loss": [2.309149742126465, 2.309149742126465, 2.309149742126465, 2.309149742126465, 2.309149742126465, 2.309149742126465], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]