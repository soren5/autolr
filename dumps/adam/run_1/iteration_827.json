[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220065593719482, 1.8587594032287598, 1.3913859128952026, 1.0845715999603271, 0.9350544810295105, 0.847050130367279, 0.7745757699012756, 0.7333759069442749, 0.6912933588027954, 0.665043294429779, 0.6481636166572571, 0.6156534552574158, 0.5974307060241699, 0.5802688598632812, 0.5714302659034729, 0.5473257303237915, 0.5418479442596436, 0.5259754657745361, 0.5083579421043396, 0.5014559030532837, 0.4976843595504761, 0.4812595248222351, 0.4857812225818634, 0.468636155128479, 0.4643665850162506, 0.45563748478889465, 0.4405030608177185, 0.43042516708374023, 0.42430171370506287, 0.41834476590156555, 0.4151095747947693, 0.4121250808238983, 0.40038588643074036, 0.40098854899406433, 0.39424848556518555, 0.3839053213596344, 0.3788895606994629, 0.3749646842479706, 0.3755907416343689, 0.3662288784980774, 0.3578973412513733, 0.36354443430900574, 0.35100898146629333, 0.34302854537963867, 0.33886080980300903, 0.33824941515922546, 0.33332201838493347, 0.328849196434021], "accuracy": [0.2814687490463257, 0.49332982301712036, 0.5597675442695618, 0.6222427487373352, 0.6659622192382812, 0.6936996579170227, 0.7226257920265198, 0.7284374833106995, 0.7520803213119507, 0.7567031979560852, 0.7568352818489075, 0.7720248103141785, 0.78113853931427, 0.7865539789199829, 0.7915731072425842, 0.7971205711364746, 0.802800178527832, 0.8075551390647888, 0.8127063512802124, 0.819442629814148, 0.8204993009567261, 0.8280280232429504, 0.8220842480659485, 0.828820526599884, 0.8327829837799072, 0.8355567455291748, 0.8413683772087097, 0.8430854678153992, 0.8473120927810669, 0.8498216867446899, 0.8521991968154907, 0.8511425256729126, 0.858671247959137, 0.8562937378883362, 0.8573504090309143, 0.8617091774940491, 0.8640866279602051, 0.8663320541381836, 0.8656716346740723, 0.869502067565918, 0.869502067565918, 0.8701624870300293, 0.8705587387084961, 0.8775591254234314, 0.8792761564254761, 0.8775591254234314, 0.8813894987106323, 0.8815215826034546], "val_loss": [2.03979229927063, 1.5165783166885376, 1.0552135705947876, 0.8468161821365356, 0.7553520798683167, 0.6986476182937622, 0.648697018623352, 0.6152174472808838, 0.5895658135414124, 0.5754947066307068, 0.5610857605934143, 0.5382086634635925, 0.5233003497123718, 0.5090757608413696, 0.5037099719047546, 0.4912920594215393, 0.48501431941986084, 0.47647207975387573, 0.46515345573425293, 0.45935696363449097, 0.45283010601997375, 0.44882726669311523, 0.44498148560523987, 0.43406999111175537, 0.4339953660964966, 0.42479848861694336, 0.4201085567474365, 0.41583406925201416, 0.4131128787994385, 0.40783047676086426, 0.4052354693412781, 0.40030452609062195, 0.3982306718826294, 0.3933182656764984, 0.4026537537574768, 0.3914073407649994, 0.3916137218475342, 0.38302376866340637, 0.3829667270183563, 0.3845588266849518, 0.3813662528991699, 0.3799675405025482, 0.3735044002532959, 0.3732541501522064, 0.38017532229423523, 0.37609773874282837, 0.377388596534729, 0.37346822023391724], "val_accuracy": [0.5373333096504211, 0.6470000147819519, 0.6869999766349792, 0.7126666903495789, 0.7360000014305115, 0.7543333172798157, 0.7620000243186951, 0.7689999938011169, 0.7826666831970215, 0.7829999923706055, 0.7806666493415833, 0.7950000166893005, 0.8069999814033508, 0.812666654586792, 0.8023333549499512, 0.8240000009536743, 0.8233333230018616, 0.8166666626930237, 0.8270000219345093, 0.8320000171661377, 0.8309999704360962, 0.8370000123977661, 0.8393333554267883, 0.8453333377838135, 0.8376666903495789, 0.840666651725769, 0.8463333249092102, 0.8519999980926514, 0.8496666550636292, 0.8510000109672546, 0.856333315372467, 0.8523333072662354, 0.8523333072662354, 0.8600000143051147, 0.8523333072662354, 0.8579999804496765, 0.8539999723434448, 0.8633333444595337, 0.859000027179718, 0.8573333621025085, 0.8640000224113464, 0.8633333444595337, 0.8650000095367432, 0.8646666407585144, 0.8600000143051147, 0.8606666922569275, 0.8643333315849304, 0.8640000224113464]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [8, 48], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 4, 6, 8, 6, 4, 1, 4, 2, 8, 6, 3, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 5, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.4408571422100067, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))), tf.math.multiply(grad, grad)))", "other_info": {"loss": [2.3094563484191895, 2.3089241981506348, 2.30896258354187, 2.3104965686798096, 2.3089115619659424, 2.3075530529022217, 2.3081531524658203, 2.3078062534332275, 2.3068759441375732, 2.3076910972595215, 2.3052330017089844, 2.303487777709961, 2.3030030727386475, 2.3022005558013916, 2.3008062839508057, 2.299359083175659, 2.297410011291504, 2.295870304107666, 2.2962563037872314, 2.293341875076294, 2.2914581298828125, 2.288259267807007, 2.2882444858551025, 2.2854695320129395, 2.282994508743286, 2.2820143699645996, 2.2804300785064697, 2.2763469219207764, 2.2747840881347656, 2.272845983505249, 2.2707512378692627, 2.2680728435516357, 2.2653024196624756, 2.2634220123291016, 2.260958194732666, 2.2588536739349365, 2.255189895629883, 2.2534964084625244, 2.250455141067505, 2.2483601570129395, 2.2445356845855713, 2.241053819656372, 2.2386205196380615, 2.2368242740631104, 2.232861280441284, 2.229545831680298, 2.226487398147583, 2.2221219539642334, 2.219431161880493], "accuracy": [0.08981640636920929, 0.09470347315073013, 0.0936468094587326, 0.0952318087220192, 0.09760929644107819, 0.09470347315073013, 0.09153348207473755, 0.09668471664190292, 0.09826971590518951, 0.09721305221319199, 0.09760929644107819, 0.10381719470024109, 0.10117553919553757, 0.09959053993225098, 0.10500594228506088, 0.108440101146698, 0.11359133571386337, 0.11372341960668564, 0.11689341068267822, 0.12495046854019165, 0.12495046854019165, 0.1372341811656952, 0.1328754425048828, 0.14449875056743622, 0.1438383311033249, 0.15176330506801605, 0.16180160641670227, 0.17474573850631714, 0.1768590658903122, 0.17870822548866272, 0.18544445931911469, 0.19138818979263306, 0.2036719024181366, 0.21476687490940094, 0.21701228618621826, 0.2281072586774826, 0.2359001487493515, 0.240919291973114, 0.25439175963401794, 0.25795799493789673, 0.2674679756164551, 0.27222296595573425, 0.280940443277359, 0.28001585602760315, 0.2847708463668823, 0.29877161979675293, 0.2969224750995636, 0.31660282611846924, 0.31382909417152405], "val_loss": [2.3087806701660156, 2.308769464492798, 2.3086793422698975, 2.308445692062378, 2.308054208755493, 2.3075168132781982, 2.3068485260009766, 2.306062698364258, 2.3051681518554688, 2.304168939590454, 2.303069591522217, 2.3018722534179688, 2.300579309463501, 2.2991952896118164, 2.297720432281494, 2.2961599826812744, 2.2945241928100586, 2.292818784713745, 2.2910451889038086, 2.289198637008667, 2.287288188934326, 2.2853245735168457, 2.2833080291748047, 2.2812390327453613, 2.2791171073913574, 2.276948928833008, 2.2747316360473633, 2.2724688053131104, 2.270153760910034, 2.2677860260009766, 2.265369176864624, 2.26289963722229, 2.260373592376709, 2.257798433303833, 2.2551655769348145, 2.2524683475494385, 2.2497103214263916, 2.246884822845459, 2.243988037109375, 2.2410199642181396, 2.237971305847168, 2.234837532043457, 2.2316184043884277, 2.228299379348755, 2.2248735427856445, 2.221336841583252, 2.2176942825317383, 2.213932514190674, 2.2100539207458496], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.08633333444595337, 0.08666666597127914, 0.08699999749660492, 0.08766666799783707, 0.08766666799783707, 0.08966666460037231, 0.09066666662693024, 0.09166666865348816, 0.09300000220537186, 0.09366666525602341, 0.09866666793823242, 0.10466666519641876, 0.11033333092927933, 0.11533333361148834, 0.1236666664481163, 0.1289999932050705, 0.13733333349227905, 0.1496666669845581, 0.1586666703224182, 0.16833333671092987, 0.18299999833106995, 0.1926666647195816, 0.20333333313465118, 0.2226666659116745, 0.23933333158493042, 0.2590000033378601, 0.2786666750907898, 0.30033332109451294, 0.33133333921432495, 0.35366666316986084, 0.38066667318344116, 0.3970000147819519, 0.4086666703224182, 0.41466665267944336, 0.4246666729450226, 0.43033334612846375, 0.43666666746139526, 0.4449999928474426, 0.44466665387153625, 0.44333332777023315, 0.44699999690055847, 0.4466666579246521, 0.44566667079925537, 0.4463333189487457, 0.4440000057220459, 0.44566667079925537]}, "mapping_values": [1, 2, 1, 1, 0, 6, 3, 3, 2, 2, 1, 1, 1, 27, 14, 13, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 4, 4, 9, 6, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 14, 8, 6, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039345741271973, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 9, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [1], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 1, 3, 9, 4, 7], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 6, 1, 4, 2], [16, 99, 96, 99, 45, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1, 31, 17, 14, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 2, 3, 0, 3, 7, 7, 8], [0, 1, 0, 2, 0, 1, 3], [53, 39, 45], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 3, 0, 3, 5, 0], [0, 2, 0, 1, 0], [16, 94, 97], [0, 1], [0], [0], [63], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [64, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 12, 7, 5, 3, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]