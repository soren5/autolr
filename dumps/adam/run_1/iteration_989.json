[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210447788238525, 1.8649812936782837, 1.3907357454299927, 1.0836284160614014, 0.9479441046714783, 0.8445180654525757, 0.7719951272010803, 0.7221397161483765, 0.676597535610199, 0.6573424935340881, 0.6339676380157471, 0.6028559803962708, 0.5865738391876221, 0.5742139220237732, 0.562584638595581, 0.5404171943664551, 0.531096875667572, 0.5225589275360107, 0.5107022523880005, 0.495796263217926, 0.4874061942100525, 0.47166112065315247, 0.47189489006996155, 0.45310842990875244, 0.4471556842327118, 0.4384092688560486, 0.42565542459487915, 0.4250577390193939, 0.41799217462539673, 0.41623470187187195, 0.3991711437702179, 0.39651867747306824, 0.3955349624156952, 0.38211339712142944, 0.3752656877040863, 0.3729327321052551, 0.36929237842559814, 0.36126455664634705, 0.3608074486255646, 0.3436877131462097, 0.35065752267837524, 0.34137991070747375, 0.34170693159103394, 0.33325788378715515, 0.3317224979400635, 0.3205038011074066, 0.3180554509162903, 0.31905049085617065, 0.3048824369907379, 0.31152352690696716, 0.30303364992141724, 0.29434072971343994, 0.2892783582210541, 0.28560513257980347, 0.28177040815353394, 0.2788736820220947, 0.2763071656227112, 0.2675822973251343, 0.26766565442085266, 0.2639429271221161, 0.2573537528514862, 0.25495845079421997, 0.2497830092906952, 0.24416503310203552, 0.2528589963912964, 0.24295899271965027, 0.23512530326843262, 0.23344579339027405, 0.23041333258152008, 0.22559015452861786, 0.22033192217350006, 0.21984273195266724, 0.21470387279987335, 0.21009092032909393], "accuracy": [0.270109623670578, 0.495839387178421, 0.5643904209136963, 0.6225069165229797, 0.6616035103797913, 0.6951525807380676, 0.7195879220962524, 0.7409853339195251, 0.7560427784919739, 0.76106196641922, 0.7718927264213562, 0.7824593782424927, 0.7877426743507385, 0.7902522683143616, 0.7967243194580078, 0.8095363974571228, 0.8086118102073669, 0.8131026029586792, 0.8181217908859253, 0.8255184292793274, 0.8232730031013489, 0.8333113193511963, 0.8380662798881531, 0.8381983637809753, 0.8363492488861084, 0.846387505531311, 0.8540483713150024, 0.8490291833877563, 0.8508783578872681, 0.8502179384231567, 0.8588033318519592, 0.8602562546730042, 0.858671247959137, 0.8636903762817383, 0.8652753829956055, 0.8669924736022949, 0.8702945709228516, 0.8708229064941406, 0.874389111995697, 0.8816536664962769, 0.8710870146751404, 0.8780874609947205, 0.8825782537460327, 0.8799365758895874, 0.8837670087814331, 0.8885219693183899, 0.8868049383163452, 0.889050304889679, 0.8919561505317688, 0.8899748921394348, 0.8944657444953918, 0.8985602855682373, 0.8912957310676575, 0.89988112449646, 0.9015982151031494, 0.9026548862457275, 0.89988112449646, 0.9026548862457275, 0.9058248400688171, 0.9074098467826843, 0.9079381823539734, 0.9070135951042175, 0.9108440279960632, 0.9124290347099304, 0.9080702662467957, 0.9145423173904419, 0.9158631563186646, 0.9165235757827759, 0.9153348207473755, 0.921938955783844, 0.9225993752479553, 0.9215427041053772, 0.9232597947120667, 0.9240522980690002], "val_loss": [2.0383400917053223, 1.5170127153396606, 1.0417771339416504, 0.8294304013252258, 0.7415035963058472, 0.6870473623275757, 0.6370400190353394, 0.5978227257728577, 0.5763663053512573, 0.5553334355354309, 0.5369168519973755, 0.5229910612106323, 0.5106767416000366, 0.5018691420555115, 0.4896225035190582, 0.48250195384025574, 0.47138044238090515, 0.4689975082874298, 0.4649280309677124, 0.44716429710388184, 0.4404654800891876, 0.43476325273513794, 0.4337490200996399, 0.423635333776474, 0.4229241609573364, 0.41573917865753174, 0.41425570845603943, 0.4054945409297943, 0.40257227420806885, 0.39812931418418884, 0.3965286910533905, 0.3994297981262207, 0.39420032501220703, 0.38578784465789795, 0.3843158483505249, 0.38095617294311523, 0.3780088722705841, 0.37696561217308044, 0.37398144602775574, 0.37091532349586487, 0.3711705207824707, 0.3703469932079315, 0.3668856918811798, 0.3635845482349396, 0.35838553309440613, 0.3660244941711426, 0.36206623911857605, 0.3595794141292572, 0.3568805456161499, 0.35687166452407837, 0.35395359992980957, 0.3500687777996063, 0.3531666696071625, 0.35203105211257935, 0.3491409420967102, 0.34986329078674316, 0.34890666604042053, 0.3457629680633545, 0.34762808680534363, 0.3477337658405304, 0.3498571813106537, 0.35331985354423523, 0.3478947877883911, 0.3540966510772705, 0.34464913606643677, 0.3431214690208435, 0.3444467782974243, 0.34260672330856323, 0.3447815775871277, 0.34005773067474365, 0.3424251973628998, 0.34035801887512207, 0.3438287377357483, 0.34605634212493896], "val_accuracy": [0.5286666750907898, 0.6606666445732117, 0.687666654586792, 0.7113333344459534, 0.7383333444595337, 0.750333309173584, 0.7666666507720947, 0.7793333530426025, 0.7850000262260437, 0.7953333258628845, 0.8036666512489319, 0.8066666722297668, 0.8100000023841858, 0.8173333406448364, 0.8233333230018616, 0.8240000009536743, 0.831333339214325, 0.8296666741371155, 0.8216666579246521, 0.8399999737739563, 0.8413333296775818, 0.8433333039283752, 0.8463333249092102, 0.8510000109672546, 0.8500000238418579, 0.8503333330154419, 0.8516666889190674, 0.8556666374206543, 0.8550000190734863, 0.8600000143051147, 0.8553333282470703, 0.8536666631698608, 0.8583333492279053, 0.8610000014305115, 0.862666666507721, 0.862666666507721, 0.8610000014305115, 0.8616666793823242, 0.8669999837875366, 0.8666666746139526, 0.8629999756813049, 0.8683333396911621, 0.8676666617393494, 0.8640000224113464, 0.8693333268165588, 0.8690000176429749, 0.8686666488647461, 0.8696666955947876, 0.8703333139419556, 0.871666669845581, 0.871666669845581, 0.8726666569709778, 0.8706666827201843, 0.8696666955947876, 0.8733333349227905, 0.8723333477973938, 0.8703333139419556, 0.8736666440963745, 0.8743333220481873, 0.8743333220481873, 0.8696666955947876, 0.871666669845581, 0.8730000257492065, 0.8756666779518127, 0.8736666440963745, 0.8730000257492065, 0.874666690826416, 0.8790000081062317, 0.8796666860580444, 0.875333309173584, 0.871999979019165, 0.8793333172798157, 0.8776666522026062, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 4], [0, 1, 0, 2], [45, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 6, 1, 4, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 49, 1]], "fitness": -0.32742857933044434, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.sqrt(beta)))", "other_info": {"loss": [121.28143310546875, 2005.890380859375, 8242.935546875, 21142.572265625, 41714.609375, 71220.2578125, 108932.015625, 161965.71875, 224906.4375, 299046.03125, 397957.0, 514496.40625, 633749.125, 785238.4375, 946592.8125, 1134201.0, 1335839.5, 1560334.5, 1827053.375, 2131659.0, 2411405.75, 2758606.5, 3095763.5, 3473222.5, 3901655.75, 4322698.5, 4722639.0, 5249748.0, 5868762.5, 6316400.5, 6943325.0, 7526884.5, 8366190.0, 8960746.0, 9679459.0], "accuracy": [0.10038304328918457, 0.09906221181154251, 0.10091137140989304, 0.10870426893234253, 0.10289261490106583, 0.10738343745470047, 0.11068551242351532, 0.11147800832986832, 0.11596883088350296, 0.12178047746419907, 0.11953506618738174, 0.12389380484819412, 0.12495046854019165, 0.1258750557899475, 0.12930920720100403, 0.1270637959241867, 0.1290450394153595, 0.1310262829065323, 0.12878087162971497, 0.1364416927099228, 0.13578127324581146, 0.13115836679935455, 0.13789460062980652, 0.13419628143310547, 0.1340641975402832, 0.13353586196899414, 0.1286487877368927, 0.13710209727287292, 0.13551710546016693, 0.14080041646957397, 0.14674416184425354, 0.136045441031456, 0.13895125687122345, 0.1418570876121521, 0.14014001190662384], "val_loss": [337.5736389160156, 1913.135009765625, 5422.7314453125, 11975.4931640625, 21796.23828125, 35686.50390625, 54513.28125, 79052.3984375, 108763.8828125, 144926.40625, 189177.15625, 241206.171875, 302172.03125, 375112.875, 459045.84375, 552915.0, 656195.5625, 769451.0, 893219.8125, 1028115.875, 1178673.5, 1342513.125, 1523890.0, 1726903.75, 1948672.5, 2187518.75, 2438467.25, 2707345.0, 2994061.25, 3300724.5, 3628959.75, 3978228.5, 4348394.0, 4743519.0, 5162107.0], "val_accuracy": [0.10066666454076767, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.11033333092927933, 0.12200000137090683, 0.1743333339691162, 0.18199999630451202, 0.1926666647195816, 0.210999995470047, 0.24066667258739471, 0.26600000262260437, 0.2750000059604645, 0.27799999713897705, 0.2800000011920929, 0.2809999883174896, 0.28033334016799927, 0.28066667914390564, 0.2836666703224182, 0.2906666696071625, 0.2943333387374878, 0.3023333251476288, 0.3089999854564667, 0.3083333373069763, 0.3073333203792572, 0.304666668176651, 0.3076666593551636, 0.31333333253860474, 0.31966665387153625, 0.3253333270549774, 0.3253333270549774, 0.32499998807907104, 0.320333331823349, 0.3163333237171173, 0.30666667222976685]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 5], [0, 1, 2, 2], [36, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 4, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 3, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 2, 61, 1]], "fitness": -0.10085714608430862, "mapping_values": [1, 8, 5, 3, 1, 11, 6, 5, 2, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))))", "other_info": {"loss": [37.43227005004883, 1.5000310978618705e+21, NaN, 2.4124862192479792e+26, 1.1838192844214764e+27, 1.1838192844214764e+27, 1.1838192844214764e+27], "accuracy": [0.09945846349000931, 0.10038304328918457, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6440.8837890625, 1.4745671430771595e+26, 51918571307008.0, 1.1842733694735948e+27, 1.1842733694735948e+27, 1.1842733694735948e+27, 1.1842733694735948e+27], "val_accuracy": [0.09733333438634872, 0.10333333164453506, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 98], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 84]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 6, 4, 2, 1, 6, 4, 2, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 2], [90, 30], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1, 1], [6], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 5, 4, 4, 1, 4, 2, 8, 6, 2, 1, 6, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 2, 0, 3, 1, 5], [16, 91, 96, 99, 19, 1, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 3, 1, 2, 1, 34, 18, 16, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(sigma, alpha), tf.math.sqrt(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]