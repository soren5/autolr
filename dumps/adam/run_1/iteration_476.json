[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2205278873443604, 1.8651868104934692, 1.3890615701675415, 1.0922420024871826, 0.9228328466415405, 0.8185706734657288, 0.7538803219795227, 0.7017226219177246, 0.6746970415115356, 0.648929238319397, 0.6276671290397644, 0.5957589149475098, 0.5821985602378845, 0.571361243724823, 0.5391892790794373, 0.5349291563034058, 0.5150418281555176, 0.5045589804649353, 0.49521729350090027, 0.48084214329719543, 0.4734035134315491, 0.45904648303985596, 0.453450471162796, 0.450395792722702, 0.43012553453445435, 0.428923636674881, 0.42293956875801086, 0.41781723499298096, 0.41307348012924194, 0.402321994304657, 0.3965769410133362, 0.3874974846839905, 0.3820481300354004, 0.37570157647132874, 0.36771249771118164, 0.37006136775016785, 0.36034151911735535, 0.3611946105957031, 0.3509741425514221, 0.3412591814994812, 0.33639028668403625, 0.3304499387741089, 0.32701000571250916, 0.32889407873153687, 0.3145996928215027, 0.31252050399780273, 0.31111496686935425, 0.313077837228775, 0.3059609830379486, 0.2951405346393585, 0.2917605936527252, 0.2904800772666931, 0.283905953168869, 0.2900581955909729, 0.2768523693084717, 0.2791275084018707, 0.2690221071243286, 0.2686476409435272, 0.2553413212299347, 0.2560134530067444, 0.24998906254768372, 0.24377870559692383, 0.24896539747714996, 0.2385387420654297, 0.23832131922245026, 0.24035513401031494, 0.23013541102409363, 0.228179931640625, 0.2243257462978363, 0.22841958701610565, 0.22382164001464844, 0.21960283815860748, 0.2097957730293274, 0.20730318129062653, 0.20293518900871277, 0.20163758099079132, 0.20170395076274872, 0.19852738082408905, 0.1917857825756073, 0.19150151312351227, 0.18436789512634277, 0.18542109429836273, 0.18315602838993073, 0.17883220314979553, 0.1867695450782776, 0.1763698160648346, 0.1721552312374115], "accuracy": [0.27222296595573425, 0.4888390004634857, 0.5684850215911865, 0.6159027814865112, 0.6720380187034607, 0.7049266695976257, 0.7297582626342773, 0.7413815855979919, 0.7510236501693726, 0.7586844563484192, 0.7667415142059326, 0.7853652238845825, 0.783119797706604, 0.7947431206703186, 0.7988376617431641, 0.8043851256370544, 0.8144234418869019, 0.8149517774581909, 0.8232730031013489, 0.8245938420295715, 0.828820526599884, 0.8342359066009521, 0.8412362933158875, 0.8337075710296631, 0.8404437899589539, 0.8441421389579773, 0.8471800088882446, 0.8490291833877563, 0.8508783578872681, 0.8521991968154907, 0.8582749962806702, 0.8615770936012268, 0.8598600029945374, 0.863558292388916, 0.8665962219238281, 0.8668603897094727, 0.8728041052818298, 0.869502067565918, 0.8742570281028748, 0.8750495314598083, 0.8758420348167419, 0.8811253309249878, 0.883238673210144, 0.8819178342819214, 0.887201189994812, 0.884691596031189, 0.8868049383163452, 0.8911636471748352, 0.8898428082466125, 0.8907673954963684, 0.8947299122810364, 0.8977677822113037, 0.898428201675415, 0.8947299122810364, 0.8980319499969482, 0.8980319499969482, 0.9012019634246826, 0.9013340473175049, 0.9074098467826843, 0.9060890078544617, 0.9113723635673523, 0.9091269373893738, 0.9101836085319519, 0.9169198274612427, 0.9119006991386414, 0.9124290347099304, 0.9169198274612427, 0.9183727502822876, 0.9183727502822876, 0.9196935892105103, 0.9173160791397095, 0.9194294214248657, 0.9243164658546448, 0.9256373047828674, 0.9277506470680237, 0.928411066532135, 0.9295997619628906, 0.9293355941772461, 0.9303922653198242, 0.9294676780700684, 0.9332981109619141, 0.9330339431762695, 0.9342226982116699, 0.9354114532470703, 0.9321093559265137, 0.9354114532470703, 0.9387134909629822], "val_loss": [2.037191867828369, 1.512930154800415, 1.045827031135559, 0.8428667187690735, 0.7552068829536438, 0.6994531154632568, 0.6595993638038635, 0.6200454235076904, 0.5997599959373474, 0.5817784667015076, 0.5586375594139099, 0.5480228066444397, 0.5294532179832458, 0.5188527703285217, 0.5051460266113281, 0.4905546009540558, 0.48278990387916565, 0.4744122326374054, 0.4712846279144287, 0.45684316754341125, 0.4528786540031433, 0.45123788714408875, 0.44198641180992126, 0.4369611144065857, 0.42646679282188416, 0.42760905623435974, 0.4275354743003845, 0.41964736580848694, 0.4201924502849579, 0.4158562421798706, 0.41253259778022766, 0.40176260471343994, 0.40117016434669495, 0.3967757225036621, 0.39298808574676514, 0.3918406665325165, 0.3901943266391754, 0.38244351744651794, 0.38472801446914673, 0.3824397921562195, 0.37906429171562195, 0.3780539631843567, 0.3770729899406433, 0.3800217807292938, 0.37619829177856445, 0.370454341173172, 0.36820468306541443, 0.37269076704978943, 0.36563101410865784, 0.36697134375572205, 0.36256444454193115, 0.35909566283226013, 0.36542898416519165, 0.3571154773235321, 0.35606127977371216, 0.3578517735004425, 0.35502180457115173, 0.3542008101940155, 0.35474899411201477, 0.3497716188430786, 0.34876298904418945, 0.34976017475128174, 0.3494219481945038, 0.35453519225120544, 0.3480313718318939, 0.3460465371608734, 0.348509281873703, 0.3492991626262665, 0.34780368208885193, 0.3449589014053345, 0.34786638617515564, 0.3448290228843689, 0.3467872440814972, 0.34106817841529846, 0.3429955244064331, 0.35390231013298035, 0.3421681225299835, 0.34631234407424927, 0.34768152236938477, 0.34493350982666016, 0.34411919116973877, 0.34584900736808777, 0.3470511734485626, 0.35152265429496765, 0.3439832329750061, 0.35165607929229736, 0.3527252674102783], "val_accuracy": [0.5333333611488342, 0.6503333449363708, 0.6800000071525574, 0.7020000219345093, 0.7286666631698608, 0.7453333139419556, 0.7596666812896729, 0.7649999856948853, 0.7716666460037231, 0.7826666831970215, 0.7910000085830688, 0.7943333387374878, 0.8083333373069763, 0.8083333373069763, 0.8146666884422302, 0.8153333067893982, 0.8193333148956299, 0.8209999799728394, 0.828000009059906, 0.828000009059906, 0.8360000252723694, 0.8336666822433472, 0.8353333473205566, 0.8366666436195374, 0.8389999866485596, 0.8389999866485596, 0.8383333086967468, 0.8443333506584167, 0.846666693687439, 0.8443333506584167, 0.8483333587646484, 0.8453333377838135, 0.8496666550636292, 0.8550000190734863, 0.8550000190734863, 0.8486666679382324, 0.8553333282470703, 0.8600000143051147, 0.8576666712760925, 0.8586666584014893, 0.856333315372467, 0.8619999885559082, 0.8606666922569275, 0.862666666507721, 0.8603333234786987, 0.8616666793823242, 0.8646666407585144, 0.8629999756813049, 0.8640000224113464, 0.8656666874885559, 0.8666666746139526, 0.8640000224113464, 0.8663333058357239, 0.8679999709129333, 0.8696666955947876, 0.871999979019165, 0.8730000257492065, 0.8736666440963745, 0.8700000047683716, 0.8740000128746033, 0.8740000128746033, 0.874666690826416, 0.8743333220481873, 0.8723333477973938, 0.874666690826416, 0.875333309173584, 0.8726666569709778, 0.878333330154419, 0.8763333559036255, 0.878000020980835, 0.8796666860580444, 0.8766666650772095, 0.8799999952316284, 0.8813333511352539, 0.8826666474342346, 0.8793333172798157, 0.8833333253860474, 0.8809999823570251, 0.8830000162124634, 0.8816666603088379, 0.8840000033378601, 0.8866666555404663, 0.8843333125114441, 0.8820000290870667, 0.8823333382606506, 0.8840000033378601, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [3], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [51, 99, 24, 99, 61, 1]], "fitness": -0.1348571479320526, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 2, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), sigma)))), tf.math.negative(alpha))), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5585734354337792.0, 5.69076535290495e+17, 1.5374671233973998e+23, 1.5373941524012999e+27, 2.0001298007258817e+29, NaN, NaN, NaN, 4.320260021680708e+19, 2.7867373774243155e+21], "accuracy": [0.0940430611371994, 0.09496764093637466, 0.10091137140989304, 0.1002509593963623, 0.10672302544116974, 0.10751552134752274, 0.09351472556591034, 0.09774138033390045, 0.09866596013307571, 0.09893012791872025], "val_loss": [5676276559904768.0, 1.2549747434207366e+20, 3.8448187143733903e+18, 2.2454587102255383e+20, 3.111644168221407e+22, NaN, NaN, 4.453822811835728e+18, 2.03667499809413e+20, 2.287772540888851e+22], "val_accuracy": [0.07766667008399963, 0.07733333110809326, 0.08133333176374435, 0.12066666781902313, 0.13833333551883698, 0.10499999672174454, 0.10100000351667404, 0.10300000011920929, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [4, 4], [4, 6, 5], [65], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 8, 0, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 3, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 5, 2, 3, 0, 20, 11, 9, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))))), tf.math.sqrt(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 3, 5], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 3, 4, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, grad), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [49], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 4, 0], [74, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]