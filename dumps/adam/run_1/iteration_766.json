[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2245635986328125, 1.8711607456207275, 1.3941670656204224, 1.0939245223999023, 0.9396412968635559, 0.8359546065330505, 0.7848203182220459, 0.7379463911056519, 0.6987058520317078, 0.6584240198135376, 0.6404269933700562, 0.6113895773887634, 0.5932443737983704, 0.5789499878883362, 0.5598005056381226, 0.5406556129455566, 0.5303499102592468, 0.5200555324554443, 0.5134232640266418, 0.4866929352283478, 0.48361897468566895, 0.4748377501964569, 0.4695394039154053, 0.4544120728969574, 0.4445871114730835, 0.44230419397354126, 0.4386524260044098, 0.43275976181030273, 0.4248015582561493, 0.4101814329624176, 0.40736910700798035, 0.39333266019821167, 0.40272849798202515, 0.38320183753967285, 0.380386084318161, 0.37974464893341064, 0.37615108489990234, 0.3688056766986847, 0.35172972083091736, 0.35260266065597534, 0.35142725706100464, 0.34430843591690063, 0.3408624231815338, 0.3361330032348633, 0.3276747763156891, 0.3284628093242645, 0.31929314136505127, 0.3187982141971588, 0.31415024399757385, 0.3092804253101349, 0.2996627986431122, 0.2965175211429596, 0.29623857140541077, 0.2923804521560669, 0.28909194469451904, 0.2782527506351471, 0.277109295129776, 0.27648216485977173, 0.26660025119781494, 0.27289918065071106, 0.26733607053756714, 0.26042091846466064, 0.25003981590270996, 0.24903875589370728, 0.24859507381916046], "accuracy": [0.2569013237953186, 0.5021793842315674, 0.5654470920562744, 0.6189407110214233, 0.6711134314537048, 0.7055870890617371, 0.7140403985977173, 0.7342491149902344, 0.7494386434555054, 0.767401933670044, 0.767401933670044, 0.7825914621353149, 0.7847048044204712, 0.7903843522071838, 0.7989697456359863, 0.8083476424217224, 0.8145555257797241, 0.8112534880638123, 0.819442629814148, 0.8305375576019287, 0.8294808864593506, 0.8257825970649719, 0.8337075710296631, 0.8397833704948425, 0.8417646288871765, 0.8428213000297546, 0.8482366800308228, 0.8461233377456665, 0.8490291833877563, 0.8533879518508911, 0.8544445633888245, 0.8598600029945374, 0.8603883385658264, 0.8627657890319824, 0.8658037185668945, 0.8667283058166504, 0.8644828796386719, 0.8692378997802734, 0.8770307898521423, 0.8722757697105408, 0.8750495314598083, 0.878351628780365, 0.878879964351654, 0.8799365758895874, 0.8813894987106323, 0.8849557638168335, 0.8858803510665894, 0.889578640460968, 0.8897107243537903, 0.8916919827461243, 0.8905032277107239, 0.894069492816925, 0.8926165699958801, 0.8938053250312805, 0.89552241563797, 0.9012019634246826, 0.9008057117462158, 0.9033153057098389, 0.9071456789970398, 0.9015982151031494, 0.9022586345672607, 0.9070135951042175, 0.9082023501396179, 0.9099194407463074, 0.9140139818191528], "val_loss": [2.0402848720550537, 1.5203906297683716, 1.04990816116333, 0.8455706238746643, 0.7565192580223083, 0.7021932601928711, 0.6573348641395569, 0.6320726871490479, 0.5978960990905762, 0.5753768086433411, 0.5556808710098267, 0.5413831472396851, 0.53013676404953, 0.5166928768157959, 0.5085457563400269, 0.49787768721580505, 0.48996973037719727, 0.4827330410480499, 0.47274133563041687, 0.4717724323272705, 0.4606005549430847, 0.45172834396362305, 0.4543035924434662, 0.44760146737098694, 0.4428328573703766, 0.4334724247455597, 0.4392726719379425, 0.4261111319065094, 0.4260474741458893, 0.417530357837677, 0.4186209440231323, 0.4109894633293152, 0.41016504168510437, 0.4038659632205963, 0.4029392600059509, 0.4038374722003937, 0.4055546820163727, 0.39515164494514465, 0.39383015036582947, 0.3941907584667206, 0.38844576478004456, 0.3907748758792877, 0.38497743010520935, 0.38338175415992737, 0.3811606764793396, 0.37932804226875305, 0.3762921988964081, 0.3823221027851105, 0.3739883601665497, 0.37281274795532227, 0.3722987771034241, 0.3689066469669342, 0.3684682548046112, 0.37287968397140503, 0.3641757071018219, 0.36522847414016724, 0.366351842880249, 0.3695019483566284, 0.378154456615448, 0.3606210947036743, 0.36029914021492004, 0.36164090037345886, 0.3600395917892456, 0.36168769001960754, 0.35839787125587463], "val_accuracy": [0.5356666445732117, 0.6613333225250244, 0.687666654586792, 0.7106666564941406, 0.7396666407585144, 0.749666690826416, 0.7616666555404663, 0.7616666555404663, 0.7850000262260437, 0.7879999876022339, 0.8040000200271606, 0.8066666722297668, 0.8076666593551636, 0.8109999895095825, 0.815666675567627, 0.8226666450500488, 0.8246666789054871, 0.828000009059906, 0.8309999704360962, 0.8333333134651184, 0.8356666564941406, 0.8379999995231628, 0.8356666564941406, 0.8433333039283752, 0.8420000076293945, 0.8486666679382324, 0.8389999866485596, 0.8506666421890259, 0.8479999899864197, 0.8533333539962769, 0.8503333330154419, 0.8543333411216736, 0.8539999723434448, 0.8573333621025085, 0.8569999933242798, 0.8543333411216736, 0.8556666374206543, 0.8600000143051147, 0.8603333234786987, 0.8556666374206543, 0.8616666793823242, 0.859666645526886, 0.859000027179718, 0.8606666922569275, 0.8636666536331177, 0.862333357334137, 0.8636666536331177, 0.8643333315849304, 0.8643333315849304, 0.8640000224113464, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8646666407585144, 0.8673333525657654, 0.8713333606719971, 0.8673333525657654, 0.8673333525657654, 0.8663333058357239, 0.874666690826416, 0.8733333349227905, 0.8723333477973938, 0.8743333220481873, 0.8740000128746033, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8, 4, 9], [0, 0, 0, 3, 0, 4, 3, 1, 3, 0], [16, 99, 1, 59, 61, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(sigma, tf.math.sqrt(tf.math.pow(alpha, sigma))))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3038737773895264, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 3, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 0, 3, 6, 8, 1, 4, 4, 9, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 93, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 1, 17, 10, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1, 1], [2], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 89, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 1, 3, 1, 2, 1, 15, 8, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), sigma))", "other_info": {"loss": [2.3040072917938232, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [5, 2, 3, 0, 0, 1, 5], [0, 1, 0, 2], [39, 56], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [54, 16], [0, 1, 0, 0, 1], [4, 0, 0], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 82]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 7, 4, 2, 6, 4, 2, 1, 5, 3, 2, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3100366592407227, 2.3095321655273438, 2.310018301010132, 2.3101625442504883, 2.3100571632385254, 2.3108348846435547], "accuracy": [0.09113723784685135, 0.09113723784685135, 0.08651433140039444, 0.0882314071059227, 0.08770307898521423, 0.08638224750757217], "val_loss": [2.3090572357177734, 2.309056282043457, 2.3090567588806152, 2.309056282043457, 2.309056282043457, 2.309056282043457], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]