[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2262706756591797, 1.8776981830596924, 1.4187350273132324, 1.1160259246826172, 0.9549493789672852, 0.8526759743690491, 0.7942895293235779, 0.7389659881591797, 0.7058853507041931, 0.6769378781318665, 0.6537603735923767, 0.6296203136444092, 0.6046167016029358, 0.5919440388679504, 0.575019896030426, 0.5675976872444153, 0.5472021102905273, 0.5384091734886169, 0.5229480862617493, 0.510306715965271, 0.49401402473449707, 0.4852592945098877, 0.485919326543808, 0.470747709274292, 0.4605500400066376, 0.46611669659614563, 0.45003488659858704, 0.44949617981910706, 0.4343128502368927, 0.4292137324810028, 0.42469891905784607, 0.4216877818107605, 0.40709221363067627, 0.39727145433425903, 0.402357816696167, 0.39068880677223206, 0.3774385452270508, 0.38057076930999756, 0.37153494358062744, 0.3621336817741394, 0.36525246500968933, 0.3573569655418396, 0.3572174310684204, 0.3474564850330353, 0.3458547592163086, 0.3361796736717224, 0.3340473175048828, 0.33282217383384705, 0.32267382740974426, 0.32249072194099426, 0.3156363070011139, 0.31084972620010376, 0.3078380525112152, 0.30081677436828613, 0.29924261569976807, 0.29420769214630127, 0.29028162360191345, 0.2860933542251587, 0.2824062407016754, 0.2785433828830719, 0.2767735421657562, 0.27747395634651184, 0.2645813226699829, 0.2718890309333801, 0.2601229250431061, 0.2539747655391693, 0.2483387291431427, 0.25187355279922485, 0.2422640174627304, 0.24307285249233246, 0.24105121195316315, 0.23237821459770203, 0.2315317839384079], "accuracy": [0.27565711736679077, 0.4865935742855072, 0.5592392086982727, 0.6061286330223083, 0.659490168094635, 0.6921146512031555, 0.7124554514884949, 0.7292299270629883, 0.7440232634544373, 0.7526086568832397, 0.7598732113838196, 0.7692511081695557, 0.7790252566337585, 0.7868181467056274, 0.789988100528717, 0.7930260300636292, 0.8021397590637207, 0.8072909712791443, 0.8117818236351013, 0.8161405324935913, 0.8231409192085266, 0.8241975903511047, 0.8297450542449951, 0.833179235458374, 0.8387266993522644, 0.8389908671379089, 0.8413683772087097, 0.8413683772087097, 0.8455950617790222, 0.850350022315979, 0.8504821062088013, 0.848368763923645, 0.8565579056739807, 0.8614450097084045, 0.8582749962806702, 0.8585391640663147, 0.8659358024597168, 0.8640866279602051, 0.8701624870300293, 0.872407853603363, 0.868049144744873, 0.8761062026023865, 0.8683133125305176, 0.8720116019248962, 0.8782195448875427, 0.8767666220664978, 0.8798044919967651, 0.8828424215316772, 0.8798044919967651, 0.8840311765670776, 0.8870691061019897, 0.8894465565681458, 0.8869370222091675, 0.8944657444953918, 0.8898428082466125, 0.8938053250312805, 0.895918607711792, 0.89552241563797, 0.8957865834236145, 0.8961827754974365, 0.8986923694610596, 0.8994848728179932, 0.9030511379241943, 0.8985602855682373, 0.9075419306755066, 0.9099194407463074, 0.9096552729606628, 0.9089948534965515, 0.913089394569397, 0.9124290347099304, 0.9093911051750183, 0.9167877435684204, 0.9165235757827759], "val_loss": [2.044281482696533, 1.5271331071853638, 1.0591822862625122, 0.8472135663032532, 0.7665875554084778, 0.7034651041030884, 0.6531785726547241, 0.6253712773323059, 0.5949525833129883, 0.5725217461585999, 0.5548070073127747, 0.5417471528053284, 0.5228210687637329, 0.5171705484390259, 0.4998362362384796, 0.488119512796402, 0.4797164797782898, 0.4691956341266632, 0.4644918739795685, 0.4571700990200043, 0.44794023036956787, 0.4463593065738678, 0.4357178807258606, 0.43095633387565613, 0.427814781665802, 0.422328382730484, 0.41360458731651306, 0.41634950041770935, 0.41181281208992004, 0.4069969058036804, 0.4036703407764435, 0.39894407987594604, 0.3960009217262268, 0.3909558951854706, 0.3937022387981415, 0.39000430703163147, 0.3882947564125061, 0.3824022114276886, 0.37783393263816833, 0.3776504695415497, 0.3711303770542145, 0.3745003938674927, 0.3696388006210327, 0.37191537022590637, 0.3643113076686859, 0.3685767948627472, 0.3625200688838959, 0.3583635985851288, 0.3632025122642517, 0.3598109483718872, 0.3583056330680847, 0.3575086295604706, 0.3511682450771332, 0.354546457529068, 0.3557223677635193, 0.35164880752563477, 0.3501014709472656, 0.3515412509441376, 0.3510984778404236, 0.34582534432411194, 0.34470224380493164, 0.3519022762775421, 0.34431079030036926, 0.34378188848495483, 0.3468720614910126, 0.34615468978881836, 0.3431685268878937, 0.33935922384262085, 0.3402705788612366, 0.33729276061058044, 0.3391170799732208, 0.34034422039985657, 0.3367491364479065], "val_accuracy": [0.5336666703224182, 0.6546666622161865, 0.6726666688919067, 0.7009999752044678, 0.7170000076293945, 0.7450000047683716, 0.7593333125114441, 0.7663333415985107, 0.7806666493415833, 0.7870000004768372, 0.79666668176651, 0.8043333292007446, 0.809333324432373, 0.812333345413208, 0.8236666917800903, 0.8293333053588867, 0.831333339214325, 0.8333333134651184, 0.8353333473205566, 0.8420000076293945, 0.8429999947547913, 0.840666651725769, 0.8476666808128357, 0.8443333506584167, 0.8486666679382324, 0.8493333458900452, 0.8526666760444641, 0.8529999852180481, 0.8496666550636292, 0.8503333330154419, 0.8576666712760925, 0.8606666922569275, 0.8583333492279053, 0.8616666793823242, 0.8586666584014893, 0.859000027179718, 0.8643333315849304, 0.8619999885559082, 0.8666666746139526, 0.8616666793823242, 0.8709999918937683, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8733333349227905, 0.8683333396911621, 0.8743333220481873, 0.874666690826416, 0.8740000128746033, 0.8740000128746033, 0.8726666569709778, 0.8766666650772095, 0.878000020980835, 0.878333330154419, 0.8776666522026062, 0.8790000081062317, 0.8793333172798157, 0.8786666393280029, 0.8793333172798157, 0.8776666522026062, 0.8790000081062317, 0.8803333044052124, 0.8813333511352539, 0.8790000081062317, 0.8793333172798157, 0.8813333511352539, 0.8816666603088379, 0.8846666812896729, 0.8806666731834412, 0.8833333253860474, 0.8833333253860474, 0.8836666941642761, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 2, 0, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 21, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3047759532928467, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 0], [16, 16, 36], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.3039395809173584, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025858402252197], "accuracy": [0.09576013684272766, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.302584648132324, 2.302584171295166, 2.3025834560394287], "val_accuracy": [0.09700000286102295, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 1, 0, 1, 3], [39, 5], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 4, 5, 8], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 12, 96, 68, 61, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 11, 7, 4, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303684711456299, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8, 5, 5], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 23, 13, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.square(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]