[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2261438369750977, 1.86838960647583, 1.405639410018921, 1.0985764265060425, 0.9457833766937256, 0.841883659362793, 0.7730015516281128, 0.7259373664855957, 0.6868309378623962, 0.6495471000671387, 0.6263906955718994, 0.6107193827629089, 0.587853193283081, 0.565956711769104, 0.5581465363502502, 0.5345737338066101, 0.5206314325332642, 0.5155190229415894, 0.5099061727523804, 0.48641934990882874, 0.48229482769966125, 0.4729621410369873, 0.45411720871925354, 0.4504246115684509, 0.4430062770843506, 0.43484562635421753, 0.42349663376808167, 0.41893187165260315, 0.41037553548812866, 0.40261396765708923, 0.39771905541419983, 0.39356040954589844, 0.38562333583831787, 0.3859651982784271, 0.3779192268848419, 0.368600994348526, 0.3548056483268738, 0.3623650074005127, 0.35493797063827515, 0.3533475399017334, 0.34467560052871704, 0.3440128564834595, 0.3370055556297302, 0.3308413326740265, 0.3254435062408447, 0.3154371380805969, 0.31721532344818115, 0.31253939867019653, 0.3102972209453583, 0.29917365312576294, 0.301891028881073, 0.3012349605560303, 0.2807077467441559, 0.28478720784187317, 0.280133455991745, 0.27505189180374146, 0.273341566324234, 0.2755705714225769, 0.2663715183734894, 0.26648321747779846, 0.2565779387950897, 0.25991544127464294, 0.2509857714176178, 0.2558426856994629, 0.23916319012641907, 0.23491322994232178], "accuracy": [0.2619204819202423, 0.4934619069099426, 0.5517104864120483, 0.6111478209495544, 0.6649055480957031, 0.6930392384529114, 0.7157574892044067, 0.728701651096344, 0.7481178045272827, 0.7593448758125305, 0.7714964747428894, 0.7783648371696472, 0.7878747582435608, 0.7923656105995178, 0.7960638999938965, 0.8053097128868103, 0.8149517774581909, 0.8112534880638123, 0.8107251524925232, 0.8228767514228821, 0.8300092220306396, 0.8309338092803955, 0.8355567455291748, 0.839519202709198, 0.8430854678153992, 0.8459912538528442, 0.8485008478164673, 0.8512746095657349, 0.8551049828529358, 0.8541803956031799, 0.8595958352088928, 0.8565579056739807, 0.8623695969581604, 0.8601241707801819, 0.863029956817627, 0.8673887252807617, 0.8702945709228516, 0.8713511824607849, 0.8741249442100525, 0.8717474341392517, 0.8767666220664978, 0.8761062026023865, 0.8780874609947205, 0.8808611631393433, 0.8836349248886108, 0.8837670087814331, 0.887201189994812, 0.8883898854255676, 0.8878615498542786, 0.8914278149604797, 0.8903711438179016, 0.891559898853302, 0.8936732411384583, 0.9009377956390381, 0.8994848728179932, 0.8981640338897705, 0.89988112449646, 0.8977677822113037, 0.901862382888794, 0.9046360850334167, 0.910711944103241, 0.9060890078544617, 0.9075419306755066, 0.9071456789970398, 0.9109761118888855, 0.9161273241043091], "val_loss": [2.041412830352783, 1.512837529182434, 1.0420308113098145, 0.8239928483963013, 0.7364664673805237, 0.6846937537193298, 0.6347494125366211, 0.6008244156837463, 0.5813269019126892, 0.5633321404457092, 0.5401541590690613, 0.5341609716415405, 0.5162082314491272, 0.5058780908584595, 0.4948171377182007, 0.48523905873298645, 0.48287081718444824, 0.47403255105018616, 0.47164949774742126, 0.4576283395290375, 0.4582672417163849, 0.4479754567146301, 0.43985989689826965, 0.4363281726837158, 0.4311313033103943, 0.42930835485458374, 0.42383629083633423, 0.4242793321609497, 0.42021939158439636, 0.4156394898891449, 0.4136137366294861, 0.41599661111831665, 0.4094759225845337, 0.41083991527557373, 0.40396949648857117, 0.3977031111717224, 0.40029802918434143, 0.3952735960483551, 0.39995914697647095, 0.39061954617500305, 0.391165167093277, 0.38359126448631287, 0.3873225152492523, 0.37938952445983887, 0.3850034177303314, 0.38616353273391724, 0.38202616572380066, 0.38075658679008484, 0.3774731755256653, 0.38326188921928406, 0.37563955783843994, 0.3811260163784027, 0.3750917911529541, 0.3714042901992798, 0.3760802447795868, 0.3708260953426361, 0.37004947662353516, 0.3743995726108551, 0.3733404576778412, 0.37255311012268066, 0.36791813373565674, 0.367105633020401, 0.3741123080253601, 0.3702118992805481, 0.36518383026123047, 0.36928775906562805], "val_accuracy": [0.5360000133514404, 0.6536666750907898, 0.6823333501815796, 0.70333331823349, 0.7286666631698608, 0.7480000257492065, 0.762666642665863, 0.7723333239555359, 0.7806666493415833, 0.7903333306312561, 0.8006666898727417, 0.8063333630561829, 0.8113333582878113, 0.8163333535194397, 0.8183333277702332, 0.8220000267028809, 0.8223333358764648, 0.8263333439826965, 0.8316666483879089, 0.8343333601951599, 0.8386666774749756, 0.8423333168029785, 0.8456666469573975, 0.8479999899864197, 0.8483333587646484, 0.8513333201408386, 0.8479999899864197, 0.8506666421890259, 0.8503333330154419, 0.8513333201408386, 0.859333336353302, 0.8550000190734863, 0.859666645526886, 0.8550000190734863, 0.8600000143051147, 0.8583333492279053, 0.8613333106040955, 0.8640000224113464, 0.8569999933242798, 0.8643333315849304, 0.8606666922569275, 0.8629999756813049, 0.8619999885559082, 0.8650000095367432, 0.8676666617393494, 0.8693333268165588, 0.8646666407585144, 0.8683333396911621, 0.8703333139419556, 0.8653333187103271, 0.8713333606719971, 0.8713333606719971, 0.8743333220481873, 0.8736666440963745, 0.8690000176429749, 0.8756666779518127, 0.8740000128746033, 0.8713333606719971, 0.8709999918937683, 0.8700000047683716, 0.8796666860580444, 0.8776666522026062, 0.8723333477973938, 0.875, 0.8759999871253967, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 4, 1, 4, 5, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 27, 61, 1]], "fitness": -0.1340000033378601, "mapping_values": [1, 2, 2, 0, 1, 8, 5, 3, 2, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [43231.96484375, 52354.51953125, 89661.5859375, 93017.46875, 90841.546875, 91946.5078125, 89875.9375], "accuracy": [0.0952318087220192, 0.10236428678035736, 0.10632677376270294, 0.09893012791872025, 0.10685510188341141, 0.10408136248588562, 0.10091137140989304], "val_loss": [36995.4765625, 59503.5, 59478.44140625, 59727.89453125, 59951.7109375, 59728.33203125, 59435.08984375], "val_accuracy": [0.0989999994635582, 0.1326666623353958, 0.1303333342075348, 0.12333333492279053, 0.11833333224058151, 0.11699999868869781, 0.11733333021402359]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11628571152687073, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1418.1544189453125, 9879.3837890625, 12338.7822265625, 12481.5439453125, 12967.2548828125, 13316.111328125, 13328.4462890625, 13287.5712890625, 13500.087890625, 12945.666015625, 12346.80859375], "accuracy": [0.10447761416435242, 0.09972262382507324, 0.09668471664190292, 0.10460969805717468, 0.1088363528251648, 0.1006472036242485, 0.10672302544116974, 0.09509972482919693, 0.10157178342342377, 0.10566636174917221, 0.1018359512090683], "val_loss": [7107.7333984375, 10716.1787109375, 11067.96484375, 11259.412109375, 10591.8896484375, 10640.4931640625, 10650.0029296875, 10664.1083984375, 10508.5048828125, 10107.8974609375, 8237.7412109375], "val_accuracy": [0.09966666996479034, 0.10166666656732559, 0.10599999874830246, 0.11100000143051147, 0.11633333563804626, 0.11666666716337204, 0.11500000208616257, 0.11599999666213989, 0.1146666631102562, 0.11100000143051147, 0.11033333092927933]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 6, 2, 3], [0, 1, 0, 2], [39, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1, 1], [4], [0, 3], [89], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 4, 1, 2, 0], [7, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 11, 6, 5, 2, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [2.3053061962127686, 2.302586078643799, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [5, 2, 3, 0, 3, 2, 6, 3, 5, 5, 9, 7, 1], [0, 1, 0, 2, 0, 2, 3, 3], [94, 39, 34, 18], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 4, 6], [0, 2, 0, 3, 2, 2], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 4, 14, 8, 6, 2, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.subtract(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]