[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219319343566895, 1.8635131120681763, 1.3850772380828857, 1.0903277397155762, 0.9290496706962585, 0.8294613361358643, 0.7690690755844116, 0.7274561524391174, 0.6898813247680664, 0.6592050194740295, 0.631087601184845, 0.604209840297699, 0.5990685224533081, 0.5678185820579529, 0.5555472373962402, 0.539215087890625, 0.5313926935195923, 0.5224512219429016, 0.5048321485519409, 0.49576276540756226, 0.4849192500114441, 0.47128036618232727, 0.4652293920516968, 0.4576842784881592, 0.4505622684955597, 0.43325936794281006, 0.4359874427318573, 0.42312249541282654, 0.4148109555244446, 0.4148871600627899, 0.4073324203491211, 0.39779677987098694, 0.3892441987991333, 0.38168027997016907, 0.3788466155529022, 0.36953678727149963, 0.3665708899497986, 0.36454567313194275, 0.3569013178348541, 0.3554908037185669, 0.35012274980545044, 0.3437005877494812, 0.3365282118320465, 0.3356422185897827, 0.3310273289680481, 0.3245747685432434, 0.31932345032691956, 0.3190852403640747, 0.30800244212150574, 0.30987313389778137, 0.3061601519584656, 0.29690760374069214, 0.2955000102519989, 0.29044657945632935, 0.2858242690563202, 0.2735555171966553, 0.2731679379940033, 0.2764603793621063, 0.2680108845233917, 0.2735278904438019, 0.26390954852104187, 0.26422619819641113, 0.25586676597595215, 0.24735793471336365, 0.24958480894565582, 0.2401036024093628, 0.24092057347297668, 0.24164500832557678, 0.23722916841506958, 0.2374800741672516, 0.2263060063123703, 0.2227422595024109, 0.21948502957820892, 0.21985401213169098, 0.2141570746898651, 0.21320199966430664], "accuracy": [0.26760005950927734, 0.4975564777851105, 0.5665037631988525, 0.6206578016281128, 0.659490168094635, 0.6997754573822021, 0.7202483415603638, 0.7341170310974121, 0.7510236501693726, 0.7568352818489075, 0.7732135653495789, 0.7778365015983582, 0.7837802171707153, 0.7918372750282288, 0.8024039268493652, 0.807158887386322, 0.8100647330284119, 0.8125742673873901, 0.8158763647079468, 0.8244617581367493, 0.8230088353157043, 0.8301413059234619, 0.8355567455291748, 0.8345000743865967, 0.8412362933158875, 0.8437458872795105, 0.8459912538528442, 0.8481045961380005, 0.8492933511734009, 0.8496896028518677, 0.8541803956031799, 0.8632941246032715, 0.860652506351471, 0.8632941246032715, 0.8647470474243164, 0.8668603897094727, 0.8720116019248962, 0.8701624870300293, 0.8747853636741638, 0.8733324408531189, 0.8742570281028748, 0.8792761564254761, 0.8836349248886108, 0.8815215826034546, 0.8825782537460327, 0.8838990926742554, 0.8842953443527222, 0.8856161832809448, 0.8897107243537903, 0.8877294659614563, 0.8931449055671692, 0.8971073627471924, 0.8968431949615479, 0.8952582478523254, 0.8990886211395264, 0.9010698795318604, 0.9030511379241943, 0.9027869701385498, 0.9050323367118835, 0.8976356983184814, 0.9071456789970398, 0.9056927561759949, 0.9080702662467957, 0.9121648669242859, 0.9104477763175964, 0.9117686152458191, 0.9117686152458191, 0.9158631563186646, 0.9177123308181763, 0.913617730140686, 0.9210143685340881, 0.9190331697463989, 0.9208822846412659, 0.9196935892105103, 0.924448549747467, 0.9274864792823792], "val_loss": [2.0340445041656494, 1.508931040763855, 1.041794776916504, 0.8357591032981873, 0.7471429109573364, 0.6873462200164795, 0.6452404856681824, 0.6107943654060364, 0.5885682106018066, 0.5605994462966919, 0.5406607985496521, 0.5277416110038757, 0.5147192478179932, 0.49930158257484436, 0.4904578924179077, 0.4810992479324341, 0.4682878851890564, 0.46024560928344727, 0.4515093266963959, 0.4477793276309967, 0.43843168020248413, 0.43233582377433777, 0.4249836504459381, 0.4246857762336731, 0.41817978024482727, 0.4183492362499237, 0.41372978687286377, 0.4077678322792053, 0.40746599435806274, 0.4008791148662567, 0.3946433365345001, 0.3905302882194519, 0.38829538226127625, 0.3892941176891327, 0.38363033533096313, 0.3813672661781311, 0.3817867934703827, 0.3804745376110077, 0.37214136123657227, 0.37529027462005615, 0.3720175325870514, 0.36724162101745605, 0.36903467774391174, 0.364533394575119, 0.363370805978775, 0.3656843304634094, 0.3621402978897095, 0.35921964049339294, 0.3621005713939667, 0.3596011698246002, 0.35786381363868713, 0.3540251553058624, 0.35573405027389526, 0.35427603125572205, 0.35642048716545105, 0.35295742750167847, 0.34918978810310364, 0.3540140688419342, 0.3534567952156067, 0.3512614071369171, 0.35232073068618774, 0.3463369905948639, 0.3485596179962158, 0.3563630282878876, 0.34708574414253235, 0.34632575511932373, 0.34414541721343994, 0.3434751033782959, 0.34622734785079956, 0.34017080068588257, 0.3431761860847473, 0.34778067469596863, 0.3450975716114044, 0.34810131788253784, 0.3439023494720459, 0.34502163529396057], "val_accuracy": [0.5456666946411133, 0.6613333225250244, 0.6833333373069763, 0.7046666741371155, 0.7350000143051147, 0.7513333559036255, 0.7639999985694885, 0.781000018119812, 0.7796666622161865, 0.8006666898727417, 0.8046666383743286, 0.8083333373069763, 0.8130000233650208, 0.8203333616256714, 0.8330000042915344, 0.8296666741371155, 0.8360000252723694, 0.8383333086967468, 0.8426666855812073, 0.8423333168029785, 0.8446666598320007, 0.8486666679382324, 0.8500000238418579, 0.8506666421890259, 0.8496666550636292, 0.8496666550636292, 0.8553333282470703, 0.8513333201408386, 0.8523333072662354, 0.8553333282470703, 0.862333357334137, 0.8606666922569275, 0.8613333106040955, 0.859000027179718, 0.8636666536331177, 0.862333357334137, 0.8653333187103271, 0.8629999756813049, 0.8679999709129333, 0.8669999837875366, 0.8656666874885559, 0.8663333058357239, 0.8653333187103271, 0.871999979019165, 0.8743333220481873, 0.8686666488647461, 0.8726666569709778, 0.8726666569709778, 0.871999979019165, 0.875333309173584, 0.8730000257492065, 0.8756666779518127, 0.875, 0.8740000128746033, 0.8740000128746033, 0.8740000128746033, 0.8759999871253967, 0.8790000081062317, 0.875, 0.878333330154419, 0.8793333172798157, 0.8799999952316284, 0.8816666603088379, 0.8793333172798157, 0.8803333044052124, 0.8790000081062317, 0.8826666474342346, 0.8849999904632568, 0.8836666941642761, 0.8870000243186951, 0.8880000114440918, 0.8826666474342346, 0.8846666812896729, 0.8859999775886536, 0.8863333463668823, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 2], [0, 1, 2, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 17], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [32, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [NaN, 2.4605629444122314, 2.466806411743164, 2.528738260269165, 2.526320457458496, 2.5952181816101074], "accuracy": [0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.09813763201236725, 0.09774138033390045], "val_loss": [2.4651737213134766, 2.4537062644958496, 2.4941153526306152, 2.5017974376678467, 2.5204577445983887, 2.582502603530884], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.09700000286102295, 0.09866666793823242]}, "mapping_values": [1, 10, 5, 5, 1, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [39, 30], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 3, 3], [35, 16], [1, 0], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 4, 5, 6, 8, 6, 1, 7, 0, 4, 6, 1, 4, 4, 7, 2, 5, 0, 0, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 3, 7, 3, 6, 7, 0, 0, 3, 1, 0, 5], [16, 27, 22, 77, 61, 57, 46, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 6, 4, 2, 1, 1, 0, 1, 1, 47, 27, 20, 8], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(beta, alpha), tf.math.add(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(beta, sigma), grad), tf.math.pow(sigma, tf.math.pow(grad, tf.math.add(grad, tf.math.add(tf.math.square(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma)))))))), alpha)))))))), tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 2, 7], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4, 4, 7, 6, 7, 0, 6, 7, 1, 7, 9, 9], [2, 2, 0, 3, 1, 3, 2, 5, 4, 4, 3], [16, 16, 32], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 4], [16, 99, 96, 99, 61, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 28, 17, 11, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.pow(beta, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), grad)))), grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad))), alpha)), tf.math.sqrt(beta)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 3, 3], [50, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 0, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303337335586548, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]