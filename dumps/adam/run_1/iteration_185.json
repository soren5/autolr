[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2212343215942383, 1.8547627925872803, 1.3729321956634521, 1.0851991176605225, 0.930594265460968, 0.8251554369926453, 0.7642788887023926, 0.7169280648231506, 0.6865319013595581, 0.6596622467041016, 0.631591260433197, 0.6111624836921692, 0.5994656085968018, 0.5661845207214355, 0.5622297525405884, 0.5312040448188782, 0.5253286361694336, 0.5182375907897949, 0.508400022983551, 0.4891512989997864, 0.49091649055480957, 0.4755634367465973, 0.46872374415397644, 0.4623230993747711, 0.44921398162841797, 0.44030725955963135, 0.42894360423088074, 0.42190009355545044, 0.41657406091690063, 0.4083033800125122, 0.4110201299190521, 0.39317548274993896, 0.39678871631622314, 0.38881778717041016, 0.37856584787368774, 0.38740482926368713, 0.37784239649772644, 0.37084367871284485, 0.36552438139915466, 0.35724788904190063, 0.35430455207824707, 0.3518040180206299, 0.3493419587612152, 0.3414846956729889, 0.3370983600616455, 0.33029234409332275, 0.32276099920272827, 0.32016828656196594, 0.3158177137374878, 0.31041646003723145, 0.30627280473709106, 0.30257055163383484, 0.30848217010498047, 0.2959115207195282, 0.3029426336288452, 0.28730666637420654, 0.29426810145378113, 0.279012531042099, 0.2719847559928894, 0.2692544460296631, 0.27143341302871704, 0.2631723880767822, 0.2668904662132263, 0.25465553998947144], "accuracy": [0.2837141752243042, 0.5070664286613464, 0.5742966532707214, 0.627129852771759, 0.6719059348106384, 0.7067758440971375, 0.7251353859901428, 0.739400327205658, 0.7461365461349487, 0.7582882046699524, 0.7681944370269775, 0.7728173136711121, 0.7817989587783813, 0.7955356240272522, 0.7940827012062073, 0.8095363974571228, 0.8104609847068787, 0.8170651197433472, 0.8178576231002808, 0.8193105459213257, 0.8228767514228821, 0.8300092220306396, 0.8327829837799072, 0.8355567455291748, 0.8383304476737976, 0.8379341959953308, 0.8467837572097778, 0.8479725122451782, 0.8507462739944458, 0.8564258217811584, 0.8499537706375122, 0.8590674996376038, 0.854708731174469, 0.8574824929237366, 0.8640866279602051, 0.8585391640663147, 0.8642187118530273, 0.8659358024597168, 0.868049144744873, 0.8712190985679626, 0.8712190985679626, 0.8742570281028748, 0.8725399374961853, 0.8784837126731873, 0.8784837126731873, 0.8819178342819214, 0.8873332738876343, 0.8831065893173218, 0.8841632604598999, 0.8865407705307007, 0.8870691061019897, 0.8885219693183899, 0.8856161832809448, 0.8887861371040344, 0.8919561505317688, 0.893541157245636, 0.8934090733528137, 0.8976356983184814, 0.8989565372467041, 0.9021265506744385, 0.9006736278533936, 0.9002773761749268, 0.9029190540313721, 0.9030511379241943], "val_loss": [2.0299746990203857, 1.4865022897720337, 1.0144444704055786, 0.8163847923278809, 0.73507159948349, 0.6789094805717468, 0.6319654583930969, 0.5966196060180664, 0.5699920058250427, 0.5544928908348083, 0.5360390543937683, 0.5137285590171814, 0.5052619576454163, 0.4930281639099121, 0.4833946228027344, 0.4701590836048126, 0.4595065116882324, 0.4510372579097748, 0.4492056369781494, 0.4438112676143646, 0.43347981572151184, 0.4276644289493561, 0.4229660630226135, 0.4129199683666229, 0.41080647706985474, 0.40619611740112305, 0.4011583626270294, 0.3992716372013092, 0.39272844791412354, 0.3974483907222748, 0.38614797592163086, 0.384307324886322, 0.38226741552352905, 0.3770144581794739, 0.3751066029071808, 0.3735460638999939, 0.36902114748954773, 0.36668553948402405, 0.3631989657878876, 0.3650471866130829, 0.36329206824302673, 0.3611275255680084, 0.35468798875808716, 0.3554602861404419, 0.35306885838508606, 0.3500983417034149, 0.35269007086753845, 0.34918156266212463, 0.3448258340358734, 0.3447025418281555, 0.3441852927207947, 0.3482116162776947, 0.3458833694458008, 0.34468135237693787, 0.3434218466281891, 0.34006714820861816, 0.3376944065093994, 0.3399054706096649, 0.337083101272583, 0.3384968638420105, 0.33201953768730164, 0.33740198612213135, 0.3365767300128937, 0.3369467258453369], "val_accuracy": [0.5573333501815796, 0.67166668176651, 0.6899999976158142, 0.7086666822433472, 0.7416666746139526, 0.7576666474342346, 0.7670000195503235, 0.7839999794960022, 0.796999990940094, 0.8029999732971191, 0.8146666884422302, 0.8196666836738586, 0.8213333487510681, 0.8253333568572998, 0.82833331823349, 0.8303333520889282, 0.8376666903495789, 0.8429999947547913, 0.8370000123977661, 0.8363333344459534, 0.8429999947547913, 0.843999981880188, 0.8500000238418579, 0.8550000190734863, 0.8569999933242798, 0.856333315372467, 0.859666645526886, 0.8553333282470703, 0.8579999804496765, 0.8579999804496765, 0.859000027179718, 0.8636666536331177, 0.8676666617393494, 0.8663333058357239, 0.8629999756813049, 0.8663333058357239, 0.8683333396911621, 0.8656666874885559, 0.871999979019165, 0.8706666827201843, 0.8659999966621399, 0.8690000176429749, 0.8693333268165588, 0.8740000128746033, 0.8700000047683716, 0.8723333477973938, 0.8733333349227905, 0.8730000257492065, 0.875333309173584, 0.875, 0.8756666779518127, 0.875, 0.875333309173584, 0.874666690826416, 0.875, 0.8790000081062317, 0.878333330154419, 0.8763333559036255, 0.8806666731834412, 0.8759999871253967, 0.8793333172798157, 0.8773333430290222, 0.8766666650772095, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 0, 3, 9], [0, 1, 0, 2], [36, 39, 72], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 3, 0], [16, 16], [0, 1, 1], [3], [0, 5], [17], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 0, 5, 4, 7, 3, 8, 0], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 1], [16, 59, 96, 99, 61, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 10, 6, 4, 1, 3, 1, 2, 1, 28, 16, 12, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(grad, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(alpha)))), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [1, 1, 0, 0], [67, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 3, 3, 7], [0, 2, 0, 3, 1, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 6, 4, 2, 8], [4, 0, 3, 4, 0, 0, 1, 1, 2, 0], [23, 99, 96, 99, 27, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, alpha), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(sigma, grad))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 9, 2, 8, 4, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 7, 4, 3, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039863109588623, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [5, 3, 8, 0, 3], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 2, 3, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 49, 33]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 23, 13, 10, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.add(tf.math.multiply(alpha, beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3090641498565674, 2.3109543323516846, 2.3101966381073, 2.308225393295288, 2.3082847595214844, 2.3078501224517822], "accuracy": [0.09008057415485382, 0.09259014576673508, 0.09311848133802414, 0.09470347315073013, 0.09430722147226334, 0.08558975160121918], "val_loss": [2.3088438510894775, 2.3087551593780518, 2.3085179328918457, 2.308063268661499, 2.3074967861175537, 2.306859016418457], "val_accuracy": [0.09266666322946548, 0.09099999815225601, 0.08733333647251129, 0.08666666597127914, 0.08033332973718643, 0.07533333450555801]}}]