[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223175525665283, 1.8728556632995605, 1.38950777053833, 1.0843968391418457, 0.9258378148078918, 0.8296816945075989, 0.7636322379112244, 0.7101379632949829, 0.6813384890556335, 0.6544522047042847, 0.6255353689193726, 0.6059390902519226, 0.5831751823425293, 0.5634568333625793, 0.5471712350845337, 0.5426734089851379, 0.5246418714523315, 0.5169568657875061, 0.5005151629447937, 0.4944857656955719, 0.4848659932613373, 0.4723525047302246, 0.4560817778110504, 0.4568798243999481, 0.44042646884918213, 0.43717488646507263, 0.4260143041610718, 0.4203115701675415, 0.41179922223091125, 0.4151545464992523, 0.4074387848377228, 0.40305352210998535, 0.3855711817741394, 0.3807811141014099, 0.38414329290390015, 0.3710511326789856, 0.3672315180301666, 0.36979538202285767, 0.35983186960220337, 0.3468067944049835, 0.34548133611679077, 0.3362742066383362, 0.33127278089523315, 0.33516815304756165, 0.33116310834884644, 0.3231981098651886, 0.31457987427711487, 0.3207511305809021, 0.30570146441459656, 0.3030063807964325, 0.30344337224960327, 0.2988262176513672, 0.2980092167854309, 0.29420435428619385, 0.29146507382392883, 0.2787463068962097, 0.2752498984336853, 0.2771330177783966, 0.2677133083343506, 0.26410388946533203, 0.2606388032436371, 0.25798648595809937, 0.2532024383544922, 0.24302974343299866, 0.24124860763549805, 0.24278442561626434, 0.2413131445646286, 0.23868398368358612, 0.23607535660266876, 0.23033174872398376, 0.22430983185768127], "accuracy": [0.27843084931373596, 0.490159809589386, 0.5691454410552979, 0.6173557043075562, 0.6667547225952148, 0.698190450668335, 0.7231541275978088, 0.7376832365989685, 0.7493065595626831, 0.7561748623847961, 0.7726852297782898, 0.7792893648147583, 0.7848368883132935, 0.7985734939575195, 0.7971205711364746, 0.8016114234924316, 0.8064984679222107, 0.8104609847068787, 0.8193105459213257, 0.8203672170639038, 0.8238013386726379, 0.8330471515655518, 0.8383304476737976, 0.8325188159942627, 0.8422929644584656, 0.8448025584220886, 0.8488970994949341, 0.8487650156021118, 0.8537842035293579, 0.8521991968154907, 0.8602562546730042, 0.8577466607093811, 0.8607845902442932, 0.8660678863525391, 0.8685774803161621, 0.8687095642089844, 0.8713511824607849, 0.8693699836730957, 0.8717474341392517, 0.8754457831382751, 0.8774270415306091, 0.880729079246521, 0.8815215826034546, 0.8809932470321655, 0.8809932470321655, 0.8817857503890991, 0.8848236799240112, 0.8887861371040344, 0.8902390599250793, 0.8931449055671692, 0.8932769894599915, 0.8932769894599915, 0.8910315632820129, 0.89552241563797, 0.8936732411384583, 0.9009377956390381, 0.9021265506744385, 0.9022586345672607, 0.9019944667816162, 0.9058248400688171, 0.9034473896026611, 0.9070135951042175, 0.9056927561759949, 0.9091269373893738, 0.9120327830314636, 0.9120327830314636, 0.913617730140686, 0.913617730140686, 0.9138818979263306, 0.91559898853302, 0.9199577569961548], "val_loss": [2.0395243167877197, 1.5209355354309082, 1.0390139818191528, 0.8275787234306335, 0.7361136078834534, 0.6815919876098633, 0.6370286345481873, 0.6109195351600647, 0.5809851884841919, 0.5600223541259766, 0.5513868927955627, 0.5257860422134399, 0.5203183889389038, 0.5086144804954529, 0.4921596348285675, 0.49361783266067505, 0.48324599862098694, 0.47393879294395447, 0.4763495624065399, 0.46352100372314453, 0.4514501690864563, 0.44897887110710144, 0.44378793239593506, 0.439403235912323, 0.436102956533432, 0.430602490901947, 0.42178699374198914, 0.4191252589225769, 0.41973429918289185, 0.41818392276763916, 0.4107823967933655, 0.41113704442977905, 0.40530726313591003, 0.40132319927215576, 0.40056413412094116, 0.39288410544395447, 0.3974226415157318, 0.3931027054786682, 0.3911985754966736, 0.39355137944221497, 0.3878478705883026, 0.3885194957256317, 0.38300082087516785, 0.38496366143226624, 0.3794398605823517, 0.37679731845855713, 0.37448278069496155, 0.37296900153160095, 0.37169042229652405, 0.37678638100624084, 0.37006598711013794, 0.3673725724220276, 0.37073615193367004, 0.36761921644210815, 0.3622698187828064, 0.36474162340164185, 0.3720373511314392, 0.36201268434524536, 0.3694184422492981, 0.3671262562274933, 0.35739871859550476, 0.3650849461555481, 0.36219319701194763, 0.3591853380203247, 0.36024779081344604, 0.3547639846801758, 0.36017927527427673, 0.360531210899353, 0.3578384518623352, 0.3656199276447296, 0.36321941018104553], "val_accuracy": [0.5493333339691162, 0.6389999985694885, 0.6866666674613953, 0.7046666741371155, 0.7316666841506958, 0.7549999952316284, 0.7680000066757202, 0.7703333497047424, 0.7796666622161865, 0.793666660785675, 0.7953333258628845, 0.8053333163261414, 0.8133333325386047, 0.8143333196640015, 0.8226666450500488, 0.8176666498184204, 0.8209999799728394, 0.8289999961853027, 0.8296666741371155, 0.8346666693687439, 0.8356666564941406, 0.8386666774749756, 0.840666651725769, 0.8426666855812073, 0.8403333425521851, 0.843999981880188, 0.8496666550636292, 0.846666693687439, 0.8450000286102295, 0.8483333587646484, 0.8536666631698608, 0.8506666421890259, 0.8550000190734863, 0.8576666712760925, 0.8556666374206543, 0.8583333492279053, 0.8619999885559082, 0.8583333492279053, 0.8569999933242798, 0.862666666507721, 0.8640000224113464, 0.8643333315849304, 0.8669999837875366, 0.8636666536331177, 0.8613333106040955, 0.8693333268165588, 0.8696666955947876, 0.8686666488647461, 0.8646666407585144, 0.8669999837875366, 0.8709999918937683, 0.8703333139419556, 0.8703333139419556, 0.8709999918937683, 0.8743333220481873, 0.8730000257492065, 0.8659999966621399, 0.8769999742507935, 0.8690000176429749, 0.8709999918937683, 0.8740000128746033, 0.874666690826416, 0.878333330154419, 0.8763333559036255, 0.8759999871253967, 0.8806666731834412, 0.8766666650772095, 0.8769999742507935, 0.8796666860580444, 0.878000020980835, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [15, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 5, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 4], [16, 99, 31, 99, 54, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.3037075996398926, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303704261779785, 2.302584648132324, 2.3025832176208496, 2.3025825023651123, 2.302574872970581, 2.302546501159668], "accuracy": [0.10130762308835983, 0.10130762308835983, 0.10342095047235489, 0.10236428678035736, 0.10210011899471283, 0.10276053100824356], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.302584648132324, 2.302584648132324, 2.302577495574951, 2.3025476932525635], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.09866666793823242, 0.09866666793823242, 0.10233332961797714]}, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 97], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 3, 1, 0, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0, 7], [16, 99, 96, 99, 14, 1]], "fitness": -0.09914285689592361, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta)), alpha), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))))", "other_info": {"loss": [1.1385368817434624e+16, 1.3126501314592768e+16, 1.306742726066176e+16, 1.2992017298620416e+16, 1.2802278528385024e+16, 1.2788830985781248e+16], "accuracy": [0.10421344637870789, 0.10434553027153015, 0.10619468986988068, 0.10566636174917221, 0.10619468986988068, 0.10236428678035736], "val_loss": [1.030562370289664e+16, 1.030562370289664e+16, 1.030562370289664e+16, 1.030562370289664e+16, 1.030562370289664e+16, 1.030562370289664e+16], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]