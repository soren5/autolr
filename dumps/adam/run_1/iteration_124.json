[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225233554840088, 1.873773217201233, 1.3913432359695435, 1.1052402257919312, 0.9511452317237854, 0.8351070880889893, 0.7724637985229492, 0.7369914054870605, 0.6942310929298401, 0.6631706357002258, 0.6428402066230774, 0.6112684607505798, 0.5967341065406799, 0.5805366039276123, 0.5661908388137817, 0.5468254685401917, 0.5331441164016724, 0.5244830250740051, 0.5063397288322449, 0.49870237708091736, 0.4878748655319214, 0.4781455099582672, 0.4694076478481293, 0.4539532959461212, 0.45249974727630615, 0.44807660579681396, 0.43831565976142883, 0.4373694956302643, 0.4314626455307007, 0.4260411262512207, 0.4111250638961792, 0.40605074167251587, 0.40231937170028687, 0.3917897343635559, 0.3879965543746948, 0.3815810978412628, 0.37778282165527344, 0.3724985420703888, 0.37272414565086365, 0.3639781177043915, 0.35509124398231506, 0.35746657848358154, 0.3458777666091919, 0.341697096824646, 0.3418715000152588, 0.332148015499115, 0.3297477066516876, 0.32719534635543823, 0.3167531490325928, 0.31609514355659485, 0.3134261965751648, 0.30422696471214294, 0.30580374598503113, 0.301012247800827, 0.29702624678611755, 0.2921447455883026, 0.28543657064437866, 0.28719621896743774, 0.2823695242404938, 0.2826023995876312, 0.2753402292728424, 0.2739398777484894, 0.26858240365982056, 0.26235437393188477, 0.256151020526886, 0.2518961727619171, 0.2477651685476303, 0.25284165143966675, 0.24515314400196075, 0.24664868414402008, 0.245282843708992, 0.23822233080863953, 0.23407354950904846, 0.22441445291042328, 0.2201564610004425, 0.22164981067180634, 0.21915215253829956, 0.21602647006511688, 0.21462228894233704, 0.20765866339206696, 0.20879189670085907, 0.20509479939937592, 0.2005210965871811, 0.19946329295635223, 0.19697409868240356], "accuracy": [0.27143046259880066, 0.4951789677143097, 0.5692775249481201, 0.6045436263084412, 0.6559239029884338, 0.7028133869171143, 0.7191916704177856, 0.7285695672035217, 0.748249888420105, 0.7553823590278625, 0.7648923397064209, 0.774270236492157, 0.7792893648147583, 0.7907806038856506, 0.791441023349762, 0.806630551815033, 0.8068947196006775, 0.8119139075279236, 0.8132346868515015, 0.8231409192085266, 0.8208954930305481, 0.8253863453865051, 0.8334434032440186, 0.8367455005645752, 0.8413683772087097, 0.8392550349235535, 0.8429533839225769, 0.8457271456718445, 0.846387505531311, 0.8475762605667114, 0.8515387773513794, 0.8535200357437134, 0.8568220734596252, 0.8590674996376038, 0.8615770936012268, 0.8625016212463379, 0.8642187118530273, 0.8659358024597168, 0.870030403137207, 0.8685774803161621, 0.8733324408531189, 0.8661999702453613, 0.8751816153526306, 0.8728041052818298, 0.8758420348167419, 0.8787478804588318, 0.8821820020675659, 0.8817857503890991, 0.885219931602478, 0.8877294659614563, 0.8850878477096558, 0.8842953443527222, 0.8881257176399231, 0.8902390599250793, 0.8943336606025696, 0.8971073627471924, 0.8922203183174133, 0.8969752788543701, 0.897899866104126, 0.898428201675415, 0.9015982151031494, 0.8993527889251709, 0.9012019634246826, 0.9054285883903503, 0.9038436412811279, 0.9070135951042175, 0.9099194407463074, 0.9049002528190613, 0.9085986018180847, 0.9103156924247742, 0.9091269373893738, 0.9133535623550415, 0.9137498140335083, 0.9171839952468872, 0.9204860925674438, 0.9161273241043091, 0.9170519113540649, 0.9229956269264221, 0.920089840888977, 0.9223352074623108, 0.9218068718910217, 0.9249768853187561, 0.9233918786048889, 0.9255052208900452, 0.9270902276039124], "val_loss": [2.0448765754699707, 1.5221352577209473, 1.0405117273330688, 0.8238418698310852, 0.7378219366073608, 0.6862534880638123, 0.6420438885688782, 0.6106502413749695, 0.5851303935050964, 0.565898597240448, 0.5454102754592896, 0.5330410599708557, 0.5152155160903931, 0.5064234733581543, 0.4917590022087097, 0.4845338463783264, 0.47675183415412903, 0.4650765359401703, 0.45609208941459656, 0.45416274666786194, 0.4460037350654602, 0.44169163703918457, 0.4348911941051483, 0.42892318964004517, 0.42301061749458313, 0.4225783348083496, 0.41853073239326477, 0.4109507203102112, 0.42137566208839417, 0.406767338514328, 0.40524378418922424, 0.3996906876564026, 0.3968212902545929, 0.3975434899330139, 0.3849053680896759, 0.3864876329898834, 0.386922150850296, 0.3801144063472748, 0.38224947452545166, 0.37553873658180237, 0.37555718421936035, 0.370899498462677, 0.37499764561653137, 0.36956092715263367, 0.3685416579246521, 0.36828747391700745, 0.36056599020957947, 0.3589911162853241, 0.36193516850471497, 0.35667750239372253, 0.3600432872772217, 0.3564225137233734, 0.3527585566043854, 0.35193273425102234, 0.3529081344604492, 0.35041627287864685, 0.3510152995586395, 0.34558552503585815, 0.3515625298023224, 0.3438452184200287, 0.3454550802707672, 0.3412552773952484, 0.34266284108161926, 0.33931994438171387, 0.3383502662181854, 0.3413609266281128, 0.34140002727508545, 0.33773306012153625, 0.3393777012825012, 0.33784064650535583, 0.32940027117729187, 0.3369244933128357, 0.3344712257385254, 0.3385147154331207, 0.33111828565597534, 0.33135685324668884, 0.3307982385158539, 0.32916882634162903, 0.32974758744239807, 0.3276606500148773, 0.32919806241989136, 0.33149072527885437, 0.33171606063842773, 0.3254441022872925, 0.33254268765449524], "val_accuracy": [0.5406666398048401, 0.6589999794960022, 0.6803333163261414, 0.7116666436195374, 0.7329999804496765, 0.7450000047683716, 0.7603333592414856, 0.7680000066757202, 0.7749999761581421, 0.7870000004768372, 0.7929999828338623, 0.7963333129882812, 0.8076666593551636, 0.809333324432373, 0.8183333277702332, 0.8230000138282776, 0.8243333101272583, 0.828000009059906, 0.8323333263397217, 0.8316666483879089, 0.8353333473205566, 0.8393333554267883, 0.8410000205039978, 0.8420000076293945, 0.8456666469573975, 0.8433333039283752, 0.8479999899864197, 0.8463333249092102, 0.8450000286102295, 0.8506666421890259, 0.8503333330154419, 0.8526666760444641, 0.8550000190734863, 0.8536666631698608, 0.8560000061988831, 0.8579999804496765, 0.8566666841506958, 0.8573333621025085, 0.859666645526886, 0.8629999756813049, 0.8636666536331177, 0.862666666507721, 0.8606666922569275, 0.862666666507721, 0.8650000095367432, 0.862333357334137, 0.8673333525657654, 0.8659999966621399, 0.8673333525657654, 0.8653333187103271, 0.8676666617393494, 0.8629999756813049, 0.8666666746139526, 0.8693333268165588, 0.8659999966621399, 0.8730000257492065, 0.8666666746139526, 0.8683333396911621, 0.8713333606719971, 0.8723333477973938, 0.8740000128746033, 0.8740000128746033, 0.8736666440963745, 0.8759999871253967, 0.875, 0.8736666440963745, 0.8766666650772095, 0.8756666779518127, 0.875333309173584, 0.8743333220481873, 0.878000020980835, 0.874666690826416, 0.8766666650772095, 0.8736666440963745, 0.8759999871253967, 0.8786666393280029, 0.874666690826416, 0.8806666731834412, 0.8759999871253967, 0.8840000033378601, 0.8796666860580444, 0.8790000081062317, 0.878333330154419, 0.8809999823570251, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3], [0, 0, 0, 2, 1], [54, 39, 57], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6], [0, 3, 0, 3, 4], [16, 16], [0, 1, 0, 1], [6, 0], [4, 2], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0, 5], [16, 99, 96, 99, 88, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 2, 4, 2, 2, 0, 23, 12, 11, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.subtract(alpha, beta)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 3], [36, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 0, 4, 0], [16, 99, 96, 82, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 2, 3, 0, 3, 8], [0, 2, 0, 2, 3], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad))))", "other_info": {"loss": [2.3039891719818115, 2.302584409713745, 2.3025805950164795, 2.3025734424591064, 2.3025474548339844, 2.3025193214416504, 2.3022971153259277, 2.301954746246338, 2.323345184326172, 24.568851470947266, 131.69639587402344], "accuracy": [0.10460969805717468, 0.10051512718200684, 0.10593052208423615, 0.10236428678035736, 0.1022322028875351, 0.10777968913316727, 0.10698718577623367, 0.10553427785634995, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302584648132324, 2.3025856018066406, 2.3025858402252197, 2.3025965690612793, 2.3026022911071777, 2.3026347160339355, 2.303414821624756, 2.823852777481079, 72.3457260131836, 244.478515625], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.0976666659116745, 0.1003333330154419, 0.09566666930913925, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [2, 2, 0, 3], [57, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 0], [4, 0, 0, 3, 0, 1, 3, 1, 2, 0, 1], [72, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 2, 1, 1, 0, 24, 13, 11, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]