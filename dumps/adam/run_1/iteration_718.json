[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22438645362854, 1.8804981708526611, 1.411026954650879, 1.1107449531555176, 0.9591169953346252, 0.8498669862747192, 0.7881173491477966, 0.7371369004249573, 0.7045168280601501, 0.6770883798599243, 0.6469692587852478, 0.616765022277832, 0.6002058386802673, 0.57766193151474, 0.562615692615509, 0.5580857396125793, 0.5387435555458069, 0.5225541591644287, 0.5107864141464233, 0.5040934681892395, 0.49972841143608093, 0.48242995142936707, 0.47744300961494446, 0.4662502408027649, 0.4626127779483795, 0.4502951502799988, 0.43922895193099976, 0.4311034679412842, 0.4209263026714325, 0.4237339496612549, 0.4114559292793274, 0.4009304344654083, 0.4013708829879761, 0.39087343215942383, 0.3894069194793701, 0.38367587327957153, 0.378327876329422, 0.37208428978919983, 0.35893839597702026, 0.3572014272212982, 0.35569143295288086, 0.3571682572364807, 0.34498903155326843, 0.33954983949661255, 0.33392423391342163, 0.33384498953819275, 0.3257009983062744, 0.3218066692352295, 0.3170745372772217, 0.3112347424030304, 0.3084108233451843, 0.3007371723651886, 0.305569589138031, 0.2996249496936798, 0.30012041330337524, 0.2842770218849182, 0.28795480728149414, 0.2785678207874298, 0.2788144052028656, 0.2735324203968048, 0.2729308605194092], "accuracy": [0.2731475234031677, 0.48170650005340576, 0.5583146214485168, 0.6126006841659546, 0.6613393425941467, 0.6980583667755127, 0.7195879220962524, 0.7347774505615234, 0.7448157668113708, 0.7565711140632629, 0.7664773464202881, 0.7766477465629578, 0.7858935594558716, 0.793950617313385, 0.7985734939575195, 0.7994980812072754, 0.8124422430992126, 0.8157442808151245, 0.8181217908859253, 0.8231409192085266, 0.8211596608161926, 0.8296129703521729, 0.8339717388153076, 0.8372738361358643, 0.8381983637809753, 0.8428213000297546, 0.8448025584220886, 0.846387505531311, 0.8536521196365356, 0.8512746095657349, 0.8556333184242249, 0.8627657890319824, 0.8597279191017151, 0.8626337051391602, 0.8643507957458496, 0.8610487580299377, 0.8669924736022949, 0.8697662353515625, 0.8746532797813416, 0.876370370388031, 0.8739928603172302, 0.8713511824607849, 0.8758420348167419, 0.8770307898521423, 0.8803328275680542, 0.878879964351654, 0.8860124349594116, 0.8861445188522339, 0.8853520154953003, 0.8870691061019897, 0.8897107243537903, 0.8897107243537903, 0.8891823887825012, 0.889578640460968, 0.8949940800666809, 0.9006736278533936, 0.8939374089241028, 0.900409460067749, 0.8973715305328369, 0.9013340473175049, 0.898428201675415], "val_loss": [2.044954299926758, 1.5282399654388428, 1.0488450527191162, 0.8322414755821228, 0.7453386783599854, 0.6908840537071228, 0.645124614238739, 0.6092821955680847, 0.5886180400848389, 0.5646756291389465, 0.5460870862007141, 0.530086100101471, 0.5159268975257874, 0.505052924156189, 0.493274450302124, 0.48731178045272827, 0.479264497756958, 0.4682680368423462, 0.4629295766353607, 0.45854175090789795, 0.44717270135879517, 0.4440144896507263, 0.44127345085144043, 0.43703898787498474, 0.4280151426792145, 0.4317997992038727, 0.42678022384643555, 0.4240954518318176, 0.41478633880615234, 0.41161829233169556, 0.40766870975494385, 0.4088522493839264, 0.40456530451774597, 0.4037759602069855, 0.4032443165779114, 0.3981306254863739, 0.40052884817123413, 0.39183056354522705, 0.39016711711883545, 0.39149534702301025, 0.3860384225845337, 0.3875373601913452, 0.38514891266822815, 0.38108399510383606, 0.3823699951171875, 0.3789832293987274, 0.3773916959762573, 0.37576359510421753, 0.37469807267189026, 0.37290698289871216, 0.3675423264503479, 0.36977070569992065, 0.3680783808231354, 0.3692011833190918, 0.3805260956287384, 0.36824724078178406, 0.36425602436065674, 0.3683916926383972, 0.36422961950302124, 0.3649323582649231, 0.37751492857933044], "val_accuracy": [0.546999990940094, 0.6446666717529297, 0.6893333196640015, 0.7143333554267883, 0.7409999966621399, 0.7519999742507935, 0.7643333077430725, 0.7793333530426025, 0.7820000052452087, 0.7896666526794434, 0.8023333549499512, 0.8059999942779541, 0.809333324432373, 0.812666654586792, 0.8216666579246521, 0.8246666789054871, 0.8270000219345093, 0.8343333601951599, 0.8379999995231628, 0.8356666564941406, 0.8370000123977661, 0.8379999995231628, 0.8443333506584167, 0.8473333120346069, 0.8483333587646484, 0.8396666646003723, 0.8443333506584167, 0.846666693687439, 0.8519999980926514, 0.8539999723434448, 0.8583333492279053, 0.8546666502952576, 0.8546666502952576, 0.8610000014305115, 0.8569999933242798, 0.8569999933242798, 0.8556666374206543, 0.8603333234786987, 0.862666666507721, 0.862333357334137, 0.8600000143051147, 0.8643333315849304, 0.8629999756813049, 0.8629999756813049, 0.862666666507721, 0.8696666955947876, 0.8686666488647461, 0.8656666874885559, 0.8679999709129333, 0.8663333058357239, 0.8723333477973938, 0.8676666617393494, 0.8700000047683716, 0.8703333139419556, 0.8636666536331177, 0.874666690826416, 0.8733333349227905, 0.8700000047683716, 0.874666690826416, 0.8736666440963745, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 37], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 1, 3], [23, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 1, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.36657142639160156, "mapping_values": [1, 10, 6, 4, 2, 8, 5, 3, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad)))", "other_info": {"loss": [5.908703804016113, 6.057814598083496, 5.876004695892334, 5.821030616760254, 5.683355808258057, 5.675776958465576, 5.638774394989014, 5.606942653656006, 5.664491653442383, 5.562493801116943, 5.5309553146362305, 5.51085090637207, 5.475518703460693, 5.578577518463135, 5.480495929718018, 5.548797607421875, 5.4723219871521, 5.437302589416504, 5.368276119232178, 5.464144229888916, 5.451803207397461, 5.434847831726074, 5.400928974151611, 5.417626857757568, 5.4063191413879395, 5.385137557983398, 5.4147210121154785, 5.397615432739258, 5.3856940269470215, 5.2855224609375, 5.433651924133301, 5.351116180419922, 5.377821445465088, 5.291756629943848, 5.34761905670166, 5.346261501312256, 5.319185256958008, 5.252358436584473, 5.256654739379883, 5.300351619720459, 5.31697416305542, 5.321915626525879, 5.373332500457764, 5.259403705596924, 5.272244930267334, 5.287465572357178, 5.2934889793396, 5.301184177398682], "accuracy": [0.1620657742023468, 0.17672698199748993, 0.18002906441688538, 0.18214239180088043, 0.1884823739528656, 0.18597279489040375, 0.18042530119419098, 0.1810857206583023, 0.1802932173013687, 0.1842557191848755, 0.18518029153347015, 0.18623696267604828, 0.18280279636383057, 0.17831197381019592, 0.18821820616722107, 0.1830669641494751, 0.186104878783226, 0.18174614012241364, 0.18861444294452667, 0.18319904804229736, 0.1884823739528656, 0.189274862408638, 0.18372738361358643, 0.18597279489040375, 0.17936864495277405, 0.19270901381969452, 0.18795403838157654, 0.18874652683734894, 0.18280279636383057, 0.19310526549816132, 0.18240654468536377, 0.1888786107301712, 0.18584071099758148, 0.19244486093521118, 0.18544445931911469, 0.18742570281028748, 0.190859854221344, 0.187689870595932, 0.1880861222743988, 0.18214239180088043, 0.18914277851581573, 0.18293488025665283, 0.18570862710475922, 0.18518029153347015, 0.18412363529205322, 0.18544445931911469, 0.18623696267604828, 0.18201030790805817], "val_loss": [3.9293384552001953, 3.7985196113586426, 3.72904372215271, 3.6815567016601562, 3.6458301544189453, 3.617419481277466, 3.593928337097168, 3.5738861560821533, 3.5564463138580322, 3.5408835411071777, 3.526961326599121, 3.514554738998413, 3.503218173980713, 3.492640972137451, 3.482954978942871, 3.4739017486572266, 3.4655539989471436, 3.4575986862182617, 3.4503040313720703, 3.4432718753814697, 3.436716079711914, 3.430479049682617, 3.4245028495788574, 3.4187815189361572, 3.413393259048462, 3.408130645751953, 3.403139114379883, 3.398256301879883, 3.393636465072632, 3.389220952987671, 3.3848066329956055, 3.380667209625244, 3.376718521118164, 3.372835397720337, 3.369065046310425, 3.3654305934906006, 3.361849546432495, 3.3584811687469482, 3.3552310466766357, 3.3520429134368896, 3.3488547801971436, 3.345766067504883, 3.3427624702453613, 3.3398799896240234, 3.3370485305786133, 3.334278106689453, 3.3315911293029785, 3.328967332839966], "val_accuracy": [0.31933334469795227, 0.3256666660308838, 0.33033332228660583, 0.33399999141693115, 0.33633333444595337, 0.3386666774749756, 0.34066668152809143, 0.34166666865348816, 0.3440000116825104, 0.3449999988079071, 0.34599998593330383, 0.3476666808128357, 0.3490000069141388, 0.3499999940395355, 0.351666659116745, 0.35233333706855774, 0.3529999852180481, 0.35333332419395447, 0.35366666316986084, 0.35466668009757996, 0.3566666543483734, 0.35733333230018616, 0.35866665840148926, 0.3583333194255829, 0.35866665840148926, 0.35866665840148926, 0.35899999737739563, 0.359333336353302, 0.36000001430511475, 0.3606666624546051, 0.3616666793823242, 0.3623333275318146, 0.3623333275318146, 0.3623333275318146, 0.3619999885559082, 0.36266666650772095, 0.3633333444595337, 0.3633333444595337, 0.36399999260902405, 0.3636666536331177, 0.3636666536331177, 0.3636666536331177, 0.3643333315849304, 0.36399999260902405, 0.3643333315849304, 0.3643333315849304, 0.3643333315849304, 0.3643333315849304]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 6, 5, 9], [0, 2, 0, 3], [16, 16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 9, 2, 8, 5], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [49, 99, 96, 99, 61, 1]], "fitness": -0.12142857164144516, "mapping_values": [1, 8, 4, 4, 2, 11, 7, 4, 3, 2, 1, 1, 1, 20, 12, 8, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad), tf.math.sqrt(tf.math.square(alpha)))", "other_info": {"loss": [4017700.5, 648.8330078125, 162.23446655273438, 139.52801513671875, 119.19906616210938, 79.7027816772461], "accuracy": [0.09826971590518951, 0.1026284471154213, 0.09628847241401672, 0.09945846349000931, 0.09536388516426086, 0.09470347315073013], "val_loss": [5317.16015625, 146.5692138671875, 65.61153411865234, 38.09579849243164, 34.32796859741211, 34.06178283691406], "val_accuracy": [0.12300000339746475, 0.10966666787862778, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 9, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 4, 1, 0, 3, 1, 2, 0], [56, 78, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 9, 5, 4, 1, 2, 1, 1, 1, 14, 8, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6170080768.0, 53722120192.0, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [256424247296.0, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 4, 3, 6, 8, 1, 4, 1, 4, 9, 8, 6], [0, 0, 0, 3, 3, 0, 3, 1, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 4, 2, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3096067905426025, 2.310724973678589, 2.3089523315429688, 2.3099212646484375, 2.3101823329925537, 2.310163974761963], "accuracy": [0.09113723784685135, 0.09087307006120682, 0.0886276587843895, 0.09377889335155487, 0.09034473448991776, 0.09391097724437714], "val_loss": [2.308352470397949, 2.308352470397949, 2.308352470397949, 2.308352470397949, 2.308352470397949, 2.308352470397949], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]