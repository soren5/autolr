[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222015857696533, 1.8630222082138062, 1.3827191591262817, 1.0932589769363403, 0.9317224025726318, 0.8263285160064697, 0.774412989616394, 0.7209852933883667, 0.6870664954185486, 0.6627743244171143, 0.6436736583709717, 0.6065499782562256, 0.6013220548629761, 0.583739697933197, 0.5670715570449829, 0.5498947501182556, 0.5361681580543518, 0.5186526775360107, 0.5117779970169067, 0.4964537024497986, 0.4931144416332245, 0.4786408245563507, 0.46960511803627014, 0.45674142241477966, 0.4507094621658325, 0.4475885033607483, 0.43183764815330505, 0.43286076188087463, 0.4230029582977295, 0.4277144968509674, 0.413106769323349, 0.40145689249038696, 0.39438825845718384, 0.3897930979728699, 0.38405609130859375, 0.3778921961784363, 0.37423503398895264, 0.37190699577331543, 0.3639836609363556, 0.36338457465171814, 0.35836535692214966, 0.34729713201522827, 0.34370625019073486, 0.33590424060821533, 0.34316158294677734, 0.33068811893463135, 0.3259292542934418, 0.3250802457332611, 0.31510353088378906, 0.311638742685318, 0.3090982139110565, 0.3033711910247803, 0.29391518235206604, 0.2887667417526245, 0.2889177203178406, 0.28912094235420227, 0.2889196276664734, 0.2787622809410095, 0.2792704105377197, 0.2718583643436432, 0.26469746232032776, 0.2688460648059845, 0.2671526372432709, 0.25557300448417664, 0.2539161443710327, 0.2515476942062378, 0.24948130548000336, 0.24480485916137695, 0.24307146668434143, 0.23688971996307373, 0.23746779561042786, 0.22641034424304962, 0.22512203454971313, 0.22601041197776794, 0.22377625107765198, 0.21958717703819275, 0.21832947432994843, 0.21681199967861176, 0.20816293358802795, 0.20805273950099945], "accuracy": [0.26522254943847656, 0.48131024837493896, 0.5638620853424072, 0.6165632009506226, 0.6676793098449707, 0.7045304179191589, 0.7240787148475647, 0.7363624572753906, 0.7490423917770386, 0.7576277852058411, 0.765949010848999, 0.778232753276825, 0.7781006693840027, 0.7872143983840942, 0.7943468689918518, 0.8029322624206543, 0.807158887386322, 0.8185180425643921, 0.8182538747787476, 0.8261788487434387, 0.8256505131721497, 0.8323867321014404, 0.830669641494751, 0.8399154543876648, 0.8412362933158875, 0.841500461101532, 0.844010055065155, 0.8486329317092896, 0.8521991968154907, 0.848368763923645, 0.8511425256729126, 0.8565579056739807, 0.8615770936012268, 0.8632941246032715, 0.8667283058166504, 0.8697662353515625, 0.8681812286376953, 0.868049144744873, 0.8720116019248962, 0.874389111995697, 0.8717474341392517, 0.8747853636741638, 0.8757099509239197, 0.8815215826034546, 0.8768987059593201, 0.8845595121383667, 0.882710337638855, 0.8828424215316772, 0.8881257176399231, 0.8833707571029663, 0.8905032277107239, 0.8910315632820129, 0.8931449055671692, 0.8931449055671692, 0.8956544995307922, 0.8938053250312805, 0.8968431949615479, 0.8992207050323486, 0.9006736278533936, 0.9045040011405945, 0.9025228023529053, 0.9027869701385498, 0.9066173434257507, 0.9078060984611511, 0.9084665179252625, 0.9115044474601746, 0.9070135951042175, 0.9093911051750183, 0.9125610589981079, 0.9138818979263306, 0.9128252267837524, 0.9189010858535767, 0.9179764986038208, 0.917580246925354, 0.9202219247817993, 0.9182406663894653, 0.9190331697463989, 0.9181085824966431, 0.9249768853187561, 0.9227314591407776], "val_loss": [2.0362720489501953, 1.506708025932312, 1.0273514986038208, 0.8205831050872803, 0.7278715968132019, 0.6658778190612793, 0.6250506639480591, 0.5903087854385376, 0.5601957440376282, 0.5456546545028687, 0.5251631140708923, 0.5041916370391846, 0.4914991855621338, 0.4808914363384247, 0.4679403603076935, 0.4581851065158844, 0.4443836212158203, 0.44125601649284363, 0.4315161108970642, 0.42967480421066284, 0.4149903953075409, 0.40569356083869934, 0.40327557921409607, 0.39696183800697327, 0.38977715373039246, 0.3888770341873169, 0.3786005973815918, 0.3923479914665222, 0.3769785165786743, 0.3784167468547821, 0.3677438199520111, 0.36527591943740845, 0.3621639907360077, 0.3612598776817322, 0.35496217012405396, 0.35415494441986084, 0.3509564697742462, 0.35047999024391174, 0.3477226197719574, 0.35008135437965393, 0.3464997112751007, 0.34458476305007935, 0.34100282192230225, 0.3401951193809509, 0.3407697379589081, 0.33969002962112427, 0.33508047461509705, 0.3333165645599365, 0.33286499977111816, 0.33187049627304077, 0.32997941970825195, 0.3292931318283081, 0.3303599953651428, 0.3284163773059845, 0.32329094409942627, 0.32367902994155884, 0.321786493062973, 0.3203009366989136, 0.31767284870147705, 0.3212658762931824, 0.31922075152397156, 0.317189484834671, 0.32160669565200806, 0.31336408853530884, 0.3144981563091278, 0.31898289918899536, 0.3147469758987427, 0.31434231996536255, 0.3147394061088562, 0.3218763768672943, 0.31919851899147034, 0.3150515556335449, 0.31544229388237, 0.31581375002861023, 0.3125767111778259, 0.31486743688583374, 0.31907418370246887, 0.3119790852069855, 0.31334662437438965, 0.31367892026901245], "val_accuracy": [0.5206666588783264, 0.6589999794960022, 0.6866666674613953, 0.718666672706604, 0.7390000224113464, 0.7540000081062317, 0.7680000066757202, 0.7773333191871643, 0.7886666655540466, 0.7963333129882812, 0.7996666431427002, 0.8190000057220459, 0.8199999928474426, 0.8293333053588867, 0.8306666612625122, 0.843666672706604, 0.8433333039283752, 0.8503333330154419, 0.847000002861023, 0.8456666469573975, 0.8556666374206543, 0.8583333492279053, 0.8569999933242798, 0.8613333106040955, 0.8669999837875366, 0.862666666507721, 0.8656666874885559, 0.859333336353302, 0.8646666407585144, 0.8676666617393494, 0.871666669845581, 0.8690000176429749, 0.8766666650772095, 0.8709999918937683, 0.871999979019165, 0.8759999871253967, 0.8769999742507935, 0.8759999871253967, 0.875, 0.8766666650772095, 0.8790000081062317, 0.874666690826416, 0.8806666731834412, 0.8799999952316284, 0.8756666779518127, 0.8826666474342346, 0.8846666812896729, 0.8796666860580444, 0.8830000162124634, 0.8846666812896729, 0.8849999904632568, 0.8836666941642761, 0.8870000243186951, 0.8823333382606506, 0.8870000243186951, 0.887333333492279, 0.8870000243186951, 0.8893333077430725, 0.8896666765213013, 0.8859999775886536, 0.8896666765213013, 0.8886666893959045, 0.8870000243186951, 0.890333354473114, 0.8920000195503235, 0.8896666765213013, 0.8926666378974915, 0.8899999856948853, 0.8893333077430725, 0.8899999856948853, 0.893666684627533, 0.8923333287239075, 0.8920000195503235, 0.8923333287239075, 0.8949999809265137, 0.8939999938011169, 0.8923333287239075, 0.8916666507720947, 0.8933333158493042, 0.893666684627533]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [40, 16, 58], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 1, 18, 9, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2, 4, 3, 6, 3, 9, 6, 5], [1, 1, 0, 2, 0, 1, 2, 1, 0], [39, 39, 19, 70], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [3], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 4, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), alpha)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303701877593994, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 2, 0, 3, 8, 7, 6, 4, 0, 9], [0, 1, 0, 2, 3, 2], [39, 39, 64], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 1, 3], [16, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 6, 1, 4, 0, 4, 2, 8, 2, 0, 6, 1, 3, 3, 7, 1, 7, 3, 8, 5, 7, 2, 6, 4, 5], [0, 0, 0, 3, 2, 0, 3, 2, 2, 0, 5, 1, 2, 4, 2, 6, 2, 2, 7, 7, 7, 3, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 3, 10, 6, 4, 1, 2, 1, 1, 1, 51, 28, 23, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(beta)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(beta, tf.math.sqrt(grad))), tf.math.square(beta))), tf.math.add(grad, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(grad), grad)))), sigma)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 9], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 9, 1, 6, 1, 5, 3, 8], [0, 4, 0, 2, 4, 3, 3, 1, 2, 0], [16, 99, 93, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad)))", "other_info": {"loss": [7.4913649559021, 74.92499542236328, 235.65785217285156, 440.7031555175781, 66.14904022216797, 24.084077835083008], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10051512718200684, 0.10210011899471283, 0.1002509593963623, 0.09430722147226334], "val_loss": [20.470611572265625, 101.71944427490234, 206.94937133789062, 190.91098022460938, 12.757786750793457, 15.162830352783203], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09666666388511658, 0.09666666388511658, 0.10233332961797714]}}]