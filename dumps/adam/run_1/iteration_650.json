[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2208478450775146, 1.8596047163009644, 1.3821170330047607, 1.0814725160598755, 0.9200059771537781, 0.829985499382019, 0.7679725885391235, 0.7221255302429199, 0.6811712980270386, 0.6565796136856079, 0.6201448440551758, 0.6075565814971924, 0.5843732953071594, 0.5614923238754272, 0.5547937154769897, 0.5397962331771851, 0.5294755101203918, 0.5158374309539795, 0.5014955997467041, 0.4896828830242157, 0.4818483591079712, 0.473639577627182, 0.459681898355484, 0.45128047466278076, 0.4352285861968994, 0.44590842723846436, 0.43223029375076294, 0.42921969294548035, 0.4184719920158386, 0.40969666838645935, 0.4044080078601837, 0.39848560094833374, 0.39048606157302856, 0.3864862620830536, 0.38617458939552307, 0.3713718056678772, 0.3682163655757904, 0.3620980679988861, 0.35579586029052734, 0.35407495498657227, 0.351026326417923, 0.3460240364074707, 0.34499242901802063, 0.33261239528656006, 0.32729819416999817, 0.3284274935722351, 0.3230852782726288, 0.32657280564308167, 0.3117906451225281, 0.306456595659256, 0.3024945557117462, 0.30345419049263, 0.2956937253475189, 0.2892398238182068, 0.28724485635757446, 0.28520792722702026, 0.2807216942310333, 0.27497848868370056, 0.27304306626319885, 0.2667233645915985, 0.2651960551738739, 0.26241493225097656, 0.2594923675060272, 0.2520730793476105, 0.256292462348938, 0.24659737944602966, 0.24382396042346954, 0.24192628264427185, 0.23861068487167358, 0.23783674836158752], "accuracy": [0.2751287817955017, 0.4904239773750305, 0.5713908076286316, 0.6230352520942688, 0.6740192770957947, 0.7037379741668701, 0.7231541275978088, 0.7371549606323242, 0.7519482374191284, 0.7633073329925537, 0.774270236492157, 0.7832518815994263, 0.793422281742096, 0.7972526550292969, 0.7972526550292969, 0.8013472557067871, 0.8096684813499451, 0.8186501264572144, 0.8214238286018372, 0.826310932636261, 0.8253863453865051, 0.8284242749214172, 0.8355567455291748, 0.8379341959953308, 0.8446704745292664, 0.844010055065155, 0.8441421389579773, 0.8485008478164673, 0.8502179384231567, 0.8537842035293579, 0.858671247959137, 0.8580108284950256, 0.8603883385658264, 0.8610487580299377, 0.863029956817627, 0.8689737319946289, 0.869502067565918, 0.8720116019248962, 0.8741249442100525, 0.8717474341392517, 0.8754457831382751, 0.8761062026023865, 0.8739928603172302, 0.8815215826034546, 0.886672854423523, 0.8772949576377869, 0.8854840993881226, 0.8868049383163452, 0.8865407705307007, 0.887597382068634, 0.8891823887825012, 0.8922203183174133, 0.8963148593902588, 0.8947299122810364, 0.8967111110687256, 0.8972394466400146, 0.8989565372467041, 0.902390718460083, 0.9045040011405945, 0.9046360850334167, 0.9058248400688171, 0.904768168926239, 0.9068815112113953, 0.9109761118888855, 0.9072777628898621, 0.9126931428909302, 0.9099194407463074, 0.913617730140686, 0.9128252267837524, 0.9141460657119751], "val_loss": [2.035764694213867, 1.507899522781372, 1.033882975578308, 0.8280035853385925, 0.7465379238128662, 0.6893740892410278, 0.6415128707885742, 0.6140680909156799, 0.5858915448188782, 0.5586657524108887, 0.5399670600891113, 0.5265389084815979, 0.5110620856285095, 0.4951804280281067, 0.49388056993484497, 0.4807272255420685, 0.46537548303604126, 0.4606366753578186, 0.4535246193408966, 0.4421883523464203, 0.4406784772872925, 0.4310148060321808, 0.42309343814849854, 0.42261555790901184, 0.42007356882095337, 0.411762535572052, 0.4040758013725281, 0.400669664144516, 0.39627376198768616, 0.3947579860687256, 0.3964656889438629, 0.3865847885608673, 0.38430386781692505, 0.38159605860710144, 0.3771494925022125, 0.3739483952522278, 0.37512487173080444, 0.3704673647880554, 0.3700793385505676, 0.36463943123817444, 0.36203059554100037, 0.36206090450286865, 0.36028677225112915, 0.3545610010623932, 0.34972891211509705, 0.3546195924282074, 0.34805020689964294, 0.3474835157394409, 0.34446650743484497, 0.34387630224227905, 0.3475920557975769, 0.3407302796840668, 0.34115949273109436, 0.33633995056152344, 0.33759045600891113, 0.3359951674938202, 0.33123770356178284, 0.33423906564712524, 0.3318639397621155, 0.32922104001045227, 0.3283631205558777, 0.3367255628108978, 0.3260609209537506, 0.32991427183151245, 0.3294919729232788, 0.3264002203941345, 0.320464551448822, 0.3243478238582611, 0.3194069564342499, 0.31919240951538086], "val_accuracy": [0.546999990940094, 0.6543333530426025, 0.6833333373069763, 0.7080000042915344, 0.7283333539962769, 0.7429999709129333, 0.7570000290870667, 0.7616666555404663, 0.7816666960716248, 0.7950000166893005, 0.7986666560173035, 0.7996666431427002, 0.8100000023841858, 0.8169999718666077, 0.8136666417121887, 0.8209999799728394, 0.8343333601951599, 0.8309999704360962, 0.8336666822433472, 0.8389999866485596, 0.8399999737739563, 0.843666672706604, 0.8456666469573975, 0.8476666808128357, 0.843666672706604, 0.8483333587646484, 0.8543333411216736, 0.8519999980926514, 0.8560000061988831, 0.8556666374206543, 0.8556666374206543, 0.8573333621025085, 0.8583333492279053, 0.8566666841506958, 0.859000027179718, 0.8619999885559082, 0.859333336353302, 0.8633333444595337, 0.8586666584014893, 0.8653333187103271, 0.8656666874885559, 0.8656666874885559, 0.8666666746139526, 0.8679999709129333, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8733333349227905, 0.871999979019165, 0.8726666569709778, 0.8763333559036255, 0.8759999871253967, 0.875, 0.878333330154419, 0.875, 0.8769999742507935, 0.8790000081062317, 0.8786666393280029, 0.8790000081062317, 0.8823333382606506, 0.8793333172798157, 0.8796666860580444, 0.8796666860580444, 0.8820000290870667, 0.8853333592414856, 0.8823333382606506, 0.8840000033378601, 0.8823333382606506, 0.8843333125114441, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 19], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 8, 5], [0, 3, 0, 3], [36, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [16, 99, 96, 51, 61, 90]], "fitness": -0.28285714983940125, "mapping_values": [1, 9, 5, 4, 2, 9, 6, 3, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), alpha), beta)", "other_info": {"loss": [2.297199249267578, 65.27532196044922, 324.212646484375, 4170.96826171875, 6576.1201171875, 6707.54248046875], "accuracy": [0.11332716792821884, 0.1752740740776062, 0.10619468986988068, 0.09721305221319199, 0.11702549457550049, 0.10606260597705841], "val_loss": [2.1883978843688965, 175.26744079589844, 272.9430847167969, 6152.8818359375, 6221.71044921875, 6295.93408203125], "val_accuracy": [0.2879999876022339, 0.12700000405311584, 0.09266666322946548, 0.10466666519641876, 0.09233333170413971, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [19, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 3, 0], [16, 99, 31, 99, 61, 1]], "fitness": -0.15771429240703583, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), alpha))), tf.math.sqrt(sigma)))", "other_info": {"loss": [27.54248809814453, 957.3990478515625, 5249.25341796875, 14907.294921875, 26489.46484375, 39747.140625, 72144.1484375], "accuracy": [0.09840179979801178, 0.10460969805717468, 0.09496764093637466, 0.09311848133802414, 0.09259014576673508, 0.09298639744520187, 0.1026284471154213], "val_loss": [209.61485290527344, 1188.8004150390625, 4846.83984375, 14918.8203125, 14195.26953125, 35117.53515625, 93834.453125], "val_accuracy": [0.09866666793823242, 0.1599999964237213, 0.06933332979679108, 0.0860000029206276, 0.08533333241939545, 0.09799999743700027, 0.1303333342075348]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [4, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 2, 3, 4, 3, 5, 7], [0, 2, 0, 3, 1, 0, 2], [16, 16, 91], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 8, 3, 9], [4, 0, 0, 3, 0, 2, 3, 4, 2, 0, 1], [16, 0, 54, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 14, 7, 7, 3, 2, 1, 1, 1, 26, 15, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, alpha)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), beta), sigma), tf.math.sqrt(tf.math.add(grad, beta))))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3113696575164795, 2.3108813762664795, 2.312549591064453, 2.3137009143829346, 2.317122459411621, 2.3169307708740234, 2.31917667388916, 2.3199002742767334, 2.322559118270874, 2.325110912322998, 2.3274505138397217], "accuracy": [0.09100515395402908, 0.08730682730674744, 0.08981640636920929, 0.08492933213710785, 0.08492933213710785, 0.0874389111995697, 0.08466517180204391, 0.08255184441804886, 0.08030643314123154, 0.07568352669477463, 0.07858935743570328], "val_loss": [2.308762311935425, 2.310122489929199, 2.311760187149048, 2.313523769378662, 2.3153576850891113, 2.3172342777252197, 2.3191282749176025, 2.3210437297821045, 2.3229880332946777, 2.324943780899048, 2.326917886734009], "val_accuracy": [0.09133332967758179, 0.09099999815225601, 0.09066666662693024, 0.09133332967758179, 0.09200000017881393, 0.09233333170413971, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971]}}]