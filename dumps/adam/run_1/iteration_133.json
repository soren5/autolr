[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225935935974121, 1.8736870288848877, 1.397047996520996, 1.0985957384109497, 0.9289994239807129, 0.8431185483932495, 0.7653174996376038, 0.7202645540237427, 0.6834744215011597, 0.6695096492767334, 0.6259047985076904, 0.610705554485321, 0.5953078269958496, 0.5760983228683472, 0.5677838921546936, 0.5485287308692932, 0.5365014672279358, 0.5292028188705444, 0.5150943398475647, 0.4948081076145172, 0.48276305198669434, 0.48087799549102783, 0.46680429577827454, 0.46947091817855835, 0.4593621790409088, 0.45043855905532837, 0.44061291217803955, 0.43111464381217957, 0.4201187491416931, 0.41704896092414856, 0.4083661735057831, 0.39770540595054626, 0.4013199806213379, 0.3880431652069092, 0.3879201412200928, 0.3835203945636749, 0.38127201795578003, 0.3743337392807007, 0.36875730752944946, 0.3547206223011017, 0.35423269867897034, 0.3439139723777771, 0.3456326425075531, 0.34026455879211426, 0.33764898777008057, 0.3339952826499939, 0.3254448175430298, 0.3124946355819702, 0.3186374604701996, 0.315581738948822, 0.30328506231307983, 0.3059215545654297, 0.29513096809387207, 0.2888343632221222, 0.29500386118888855, 0.2778618335723877, 0.27670028805732727, 0.28000837564468384, 0.2689124643802643, 0.26709964871406555, 0.2643858790397644, 0.2628052234649658, 0.257648766040802, 0.24940554797649384, 0.25741544365882874, 0.2524564564228058, 0.24557049572467804, 0.24574972689151764], "accuracy": [0.2724871337413788, 0.490159809589386, 0.5667679309844971, 0.6260731816291809, 0.6610751748085022, 0.6960771083831787, 0.7226257920265198, 0.741909921169281, 0.7515519857406616, 0.750231146812439, 0.772288978099823, 0.774798572063446, 0.7833839654922485, 0.7913089394569397, 0.7951393723487854, 0.8010830879211426, 0.802800178527832, 0.8105930685997009, 0.819442629814148, 0.8222163319587708, 0.828820526599884, 0.8271034359931946, 0.8338396549224854, 0.8300092220306396, 0.8352925777435303, 0.8418967127799988, 0.8442742228507996, 0.8422929644584656, 0.8506141901016235, 0.8519350290298462, 0.8535200357437134, 0.8595958352088928, 0.856689989566803, 0.8595958352088928, 0.8598600029945374, 0.8669924736022949, 0.86553955078125, 0.8691058158874512, 0.867520809173584, 0.8734645247459412, 0.8726720213890076, 0.8770307898521423, 0.8792761564254761, 0.8796724081039429, 0.8803328275680542, 0.8809932470321655, 0.8821820020675659, 0.8865407705307007, 0.8883898854255676, 0.8849557638168335, 0.8912957310676575, 0.8902390599250793, 0.8939374089241028, 0.8953903317451477, 0.8914278149604797, 0.8986923694610596, 0.9015982151031494, 0.8986923694610596, 0.901862382888794, 0.9055606722831726, 0.9068815112113953, 0.9054285883903503, 0.9045040011405945, 0.9113723635673523, 0.9064852595329285, 0.9080702662467957, 0.9119006991386414, 0.9099194407463074], "val_loss": [2.0457935333251953, 1.5266345739364624, 1.0476970672607422, 0.8309215307235718, 0.7444778084754944, 0.6814569234848022, 0.6389179229736328, 0.6059643030166626, 0.5783230066299438, 0.5562970042228699, 0.535369873046875, 0.5202078223228455, 0.510134220123291, 0.49941015243530273, 0.48293358087539673, 0.47637948393821716, 0.4655114710330963, 0.460622638463974, 0.450701504945755, 0.4431344270706177, 0.4329763948917389, 0.430090993642807, 0.42703378200531006, 0.42286714911460876, 0.4145585000514984, 0.4092739522457123, 0.40570735931396484, 0.4005524814128876, 0.3974861800670624, 0.3963252007961273, 0.38918620347976685, 0.3906792104244232, 0.38512423634529114, 0.38136860728263855, 0.3771907687187195, 0.3773806691169739, 0.37353694438934326, 0.37205028533935547, 0.3729475438594818, 0.36848002672195435, 0.36468929052352905, 0.3637234568595886, 0.35966023802757263, 0.35807958245277405, 0.36322903633117676, 0.3571312725543976, 0.3529992699623108, 0.35098177194595337, 0.3484838008880615, 0.35432925820350647, 0.34745925664901733, 0.34250226616859436, 0.3442481756210327, 0.3444698750972748, 0.3417525291442871, 0.3408070504665375, 0.33516812324523926, 0.34043827652931213, 0.33836573362350464, 0.3339828550815582, 0.33781370520591736, 0.33412736654281616, 0.33124467730522156, 0.33595284819602966, 0.33962196111679077, 0.3325967490673065, 0.3352179229259491, 0.3314550518989563], "val_accuracy": [0.5619999766349792, 0.6666666865348816, 0.6909999847412109, 0.7163333296775818, 0.7369999885559082, 0.7519999742507935, 0.762333333492279, 0.7733333110809326, 0.784333348274231, 0.7963333129882812, 0.8080000281333923, 0.8143333196640015, 0.8133333325386047, 0.8223333358764648, 0.8306666612625122, 0.831333339214325, 0.8373333215713501, 0.8389999866485596, 0.8410000205039978, 0.8463333249092102, 0.8493333458900452, 0.8500000238418579, 0.8473333120346069, 0.8503333330154419, 0.8519999980926514, 0.8573333621025085, 0.8640000224113464, 0.8636666536331177, 0.8629999756813049, 0.8640000224113464, 0.8643333315849304, 0.8653333187103271, 0.8656666874885559, 0.8650000095367432, 0.8723333477973938, 0.8693333268165588, 0.8740000128746033, 0.8730000257492065, 0.8730000257492065, 0.8730000257492065, 0.8706666827201843, 0.875333309173584, 0.874666690826416, 0.8763333559036255, 0.875333309173584, 0.8743333220481873, 0.8733333349227905, 0.8809999823570251, 0.8766666650772095, 0.8776666522026062, 0.8796666860580444, 0.8796666860580444, 0.8846666812896729, 0.8823333382606506, 0.8833333253860474, 0.8790000081062317, 0.8820000290870667, 0.8866666555404663, 0.8830000162124634, 0.8830000162124634, 0.8836666941642761, 0.8870000243186951, 0.890333354473114, 0.8853333592414856, 0.8856666684150696, 0.8840000033378601, 0.8883333206176758, 0.890333354473114]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 2, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 35, 99, 61, 1]], "fitness": -0.7368571162223816, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.272643566131592, 1.8570501804351807, 1.5940557718276978, 1.62644362449646, 1.7566207647323608, 1.6463154554367065, 1.5752187967300415, 1.1811050176620483, 1.1746551990509033, 2.217700481414795, 4.136312484741211, 2.3227992057800293, 2.311791181564331], "accuracy": [0.1678774207830429, 0.3967771828174591, 0.4633469879627228, 0.4772156774997711, 0.41249504685401917, 0.4441949427127838, 0.47272488474845886, 0.6169594526290894, 0.6069211363792419, 0.3796063959598541, 0.15572579205036163, 0.09470347315073013, 0.09866596013307571], "val_loss": [2.1023664474487305, 1.1627718210220337, 1.9152512550354004, 1.7847483158111572, 1.750882863998413, 1.270807147026062, 1.1289253234863281, 0.7998506426811218, 1.467137098312378, 4.720582485198975, 2.314849853515625, 2.305455446243286, 2.304022789001465], "val_accuracy": [0.44999998807907104, 0.5793333053588867, 0.3656666576862335, 0.4556666612625122, 0.36266666650772095, 0.5863333344459534, 0.6223333477973938, 0.734000027179718, 0.527999997138977, 0.4933333396911621, 0.09866666793823242, 0.0989999994635582, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [51, 16], [0, 1], [0], [0], [72], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 75, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 8, 5, 3, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3032031059265137, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5, 0], [0, 2, 2, 1, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9, 4, 6, 0, 4], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0, 2, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 2, 1, 1, 1, 28, 16, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(beta)), alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, alpha))), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 3, 1, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [2, 3], [0, 5, 0], [99, 70], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 5, 1, 0, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 97, 72, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 10, 6, 4, 2, 5, 2, 3, 2, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha)))))", "other_info": {"loss": [2.373776912689209, 2.5049562454223633, 2.555121898651123, 2.6044554710388184, 2.6050076484680176, 2.605595111846924], "accuracy": [0.09998679161071777, 0.09377889335155487, 0.10077928751707077, 0.09721305221319199, 0.09576013684272766, 0.09338264167308807], "val_loss": [2.3759374618530273, 2.4147279262542725, 2.428374767303467, 2.4332709312438965, 2.435100793838501, 2.435809850692749], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]