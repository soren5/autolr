[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224773406982422, 1.8718347549438477, 1.395682692527771, 1.1046524047851562, 0.946851909160614, 0.8474088311195374, 0.7753190994262695, 0.7266607880592346, 0.6882626414299011, 0.6627368330955505, 0.6476996541023254, 0.6218626499176025, 0.6021419167518616, 0.571671724319458, 0.5730805397033691, 0.5597196817398071, 0.5442934036254883, 0.5326337218284607, 0.5093529224395752, 0.5056161880493164, 0.49070268869400024, 0.48986491560935974, 0.4757501482963562, 0.46988505125045776, 0.46382617950439453, 0.4557706117630005, 0.4428637623786926, 0.4321494698524475, 0.4257064163684845, 0.42203474044799805, 0.4243251085281372, 0.4126543402671814, 0.39747118949890137, 0.4084683954715729, 0.4011000692844391, 0.3856957256793976, 0.3803290128707886, 0.3677288591861725, 0.37131762504577637, 0.3640485107898712, 0.35461121797561646, 0.3570118248462677, 0.34894847869873047, 0.3455304205417633, 0.3373385965824127, 0.3389486074447632, 0.32914772629737854, 0.3252847194671631, 0.33141157031059265, 0.3184165358543396, 0.31425604224205017, 0.3072524070739746, 0.3068808317184448, 0.30100563168525696, 0.2994672954082489, 0.29807794094085693, 0.2897806167602539, 0.2853286862373352, 0.2856437563896179, 0.2718840539455414, 0.272796630859375, 0.2652779221534729, 0.26225608587265015, 0.2565418481826782, 0.2510102093219757, 0.24836553633213043, 0.2448318898677826, 0.24687092006206512, 0.24007892608642578, 0.23660866916179657, 0.23603074252605438, 0.22848720848560333, 0.22889119386672974, 0.21834276616573334, 0.22481071949005127, 0.21593450009822845], "accuracy": [0.2782987654209137, 0.48487651348114014, 0.5605600476264954, 0.6122044920921326, 0.655527651309967, 0.7091533541679382, 0.7234182953834534, 0.7349095344543457, 0.7474573850631714, 0.7573636174201965, 0.7705719470977783, 0.7740060687065125, 0.7825914621353149, 0.7985734939575195, 0.7915731072425842, 0.8000264167785645, 0.8080834746360779, 0.8095363974571228, 0.8186501264572144, 0.8187822103500366, 0.8264430165290833, 0.8260467648506165, 0.8339717388153076, 0.8368775844573975, 0.8348963260650635, 0.8379341959953308, 0.8454629778862, 0.8474441766738892, 0.8475762605667114, 0.8506141901016235, 0.847840428352356, 0.8524633646011353, 0.8594637513160706, 0.8573504090309143, 0.8577466607093811, 0.8638224601745605, 0.8643507957458496, 0.8701624870300293, 0.8688416481018066, 0.8671245574951172, 0.8737286925315857, 0.8746532797813416, 0.8768987059593201, 0.8780874609947205, 0.8802007436752319, 0.8838990926742554, 0.8819178342819214, 0.8815215826034546, 0.8833707571029663, 0.8864086866378784, 0.8828424215316772, 0.8894465565681458, 0.8869370222091675, 0.8938053250312805, 0.8956544995307922, 0.8898428082466125, 0.8981640338897705, 0.8963148593902588, 0.9017302989959717, 0.9063531756401062, 0.9005415439605713, 0.9071456789970398, 0.9064852595329285, 0.9079381823539734, 0.9062210917472839, 0.9093911051750183, 0.9128252267837524, 0.9133535623550415, 0.9146744012832642, 0.9157310724258423, 0.913617730140686, 0.9186369180679321, 0.9174481630325317, 0.9206181764602661, 0.9189010858535767, 0.9216747879981995], "val_loss": [2.041455030441284, 1.5152894258499146, 1.0381271839141846, 0.8323285579681396, 0.7438873648643494, 0.6938209533691406, 0.6506779193878174, 0.6116845607757568, 0.5931300520896912, 0.5689103007316589, 0.5512814521789551, 0.5416478514671326, 0.5215480923652649, 0.5149930119514465, 0.5008172392845154, 0.4955288767814636, 0.48384109139442444, 0.47649523615837097, 0.4688378572463989, 0.46095484495162964, 0.45806798338890076, 0.44642168283462524, 0.4440290629863739, 0.4355173408985138, 0.43012720346450806, 0.425840824842453, 0.4187440574169159, 0.41776907444000244, 0.41172346472740173, 0.4052610993385315, 0.40473493933677673, 0.4000638723373413, 0.403011679649353, 0.400168776512146, 0.392001748085022, 0.38868123292922974, 0.3836376965045929, 0.3849790096282959, 0.3814426362514496, 0.380985826253891, 0.37398916482925415, 0.37287670373916626, 0.37321606278419495, 0.3676259219646454, 0.36735799908638, 0.3648163974285126, 0.3686559200286865, 0.36165744066238403, 0.3629207909107208, 0.3556970953941345, 0.35753902792930603, 0.35424336791038513, 0.36019977927207947, 0.3521433174610138, 0.3522525131702423, 0.3535357713699341, 0.3484434485435486, 0.35113081336021423, 0.35020166635513306, 0.3480031192302704, 0.3453805446624756, 0.3445136845111847, 0.34549564123153687, 0.3452008366584778, 0.3493800163269043, 0.3433827757835388, 0.3470000922679901, 0.3428002595901489, 0.3385261595249176, 0.3435540497303009, 0.337939977645874, 0.3419742286205292, 0.34842318296432495, 0.33825212717056274, 0.33996912837028503, 0.338338166475296], "val_accuracy": [0.5396666526794434, 0.6570000052452087, 0.684333324432373, 0.7123333215713501, 0.7329999804496765, 0.7426666617393494, 0.7580000162124634, 0.7720000147819519, 0.7753333449363708, 0.7946666479110718, 0.8023333549499512, 0.8009999990463257, 0.8133333325386047, 0.8166666626930237, 0.8223333358764648, 0.8289999961853027, 0.8336666822433472, 0.8326666951179504, 0.8376666903495789, 0.8360000252723694, 0.8349999785423279, 0.8493333458900452, 0.8416666388511658, 0.8493333458900452, 0.8500000238418579, 0.8460000157356262, 0.8533333539962769, 0.8503333330154419, 0.8560000061988831, 0.859000027179718, 0.8576666712760925, 0.8586666584014893, 0.8600000143051147, 0.8576666712760925, 0.8646666407585144, 0.862666666507721, 0.8659999966621399, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.8686666488647461, 0.8676666617393494, 0.8709999918937683, 0.8700000047683716, 0.8690000176429749, 0.8733333349227905, 0.8696666955947876, 0.874666690826416, 0.8766666650772095, 0.8766666650772095, 0.871999979019165, 0.8763333559036255, 0.878000020980835, 0.878000020980835, 0.878000020980835, 0.8763333559036255, 0.8809999823570251, 0.8763333559036255, 0.8759999871253967, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8803333044052124, 0.8836666941642761, 0.8816666603088379, 0.8843333125114441, 0.8843333125114441, 0.8866666555404663, 0.8856666684150696, 0.8849999904632568, 0.8896666765213013, 0.8816666603088379, 0.8840000033378601, 0.8853333592414856, 0.8856666684150696, 0.8893333077430725]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 0, 0, 2], [39, 39, 75], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 1, 2, 1, 1, 1, 16, 9, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 8, 3, 6], [3, 2, 0, 1], [16, 16], [0, 1], [0], [0], [87], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 8, 4, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.531780958175659, 2.626150131225586, 2.616863489151001, 2.614715337753296, 2.610030174255371, 2.613259792327881], "accuracy": [0.0944393053650856, 0.09800554811954498, 0.10196803510189056, 0.09721305221319199, 0.10368511080741882, 0.10368511080741882], "val_loss": [2.4532997608184814, 2.4538216590881348, 2.4538235664367676, 2.4538235664367676, 2.4538235664367676, 2.4538235664367676], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 2, 7, 2, 8], [0, 1, 0, 2, 2, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [82, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 3, 1, 6, 6, 1, 2, 1, 4, 2, 2, 0, 4, 7, 1, 4, 0, 7, 1], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0, 1, 6, 5, 6, 4, 2, 0, 0], [16, 99, 96, 99, 61, 1, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 2, 1, 1, 1, 2, 1, 1, 0, 37, 19, 18, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(tf.math.sqrt(grad), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(beta, sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.pow(tf.math.negative(tf.math.add(grad, tf.math.subtract(grad, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 2, 7, 0, 3, 5, 2, 7, 2], [0, 1, 0, 2, 3, 0, 2, 3, 0], [4, 39, 47, 16, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 4, 5, 5], [0, 2, 0, 3, 0], [16, 16, 58], [0, 1], [8], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 5, 13, 8, 5, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036611080169678, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]