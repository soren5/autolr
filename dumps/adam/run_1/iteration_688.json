[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222402334213257, 1.8653666973114014, 1.3982303142547607, 1.101468563079834, 0.9497290849685669, 0.8445380926132202, 0.7866731286048889, 0.7384682297706604, 0.6996945142745972, 0.6718523502349854, 0.6499659419059753, 0.6244469881057739, 0.6107199788093567, 0.5910723805427551, 0.5707886815071106, 0.5651927590370178, 0.5455195307731628, 0.5393010377883911, 0.524219274520874, 0.5091158151626587, 0.4989748001098633, 0.48646506667137146, 0.48814937472343445, 0.47841745615005493, 0.46865537762641907, 0.45875516533851624, 0.46026724576950073, 0.44510573148727417, 0.427569717168808, 0.42974159121513367, 0.42650046944618225, 0.41322410106658936, 0.40612050890922546, 0.40205422043800354, 0.39664000272750854, 0.392483115196228, 0.38281556963920593, 0.37870797514915466, 0.3726304769515991, 0.3732718229293823, 0.363243967294693, 0.35962945222854614, 0.3495390713214874, 0.3400935232639313, 0.34500521421432495, 0.33546218276023865, 0.331188827753067, 0.32356390357017517, 0.32020699977874756, 0.32037851214408875, 0.3140760064125061, 0.3078221380710602, 0.3091956675052643, 0.2913324236869812, 0.2989494800567627, 0.28596359491348267, 0.2897822856903076, 0.29076850414276123, 0.27941253781318665, 0.270991712808609], "accuracy": [0.2779025137424469, 0.48448026180267334, 0.5589750409126282, 0.6180161237716675, 0.6580372452735901, 0.6995112895965576, 0.7148329019546509, 0.7378153204917908, 0.7453441023826599, 0.7518161535263062, 0.7637035846710205, 0.7730814814567566, 0.7807422876358032, 0.7903843522071838, 0.7915731072425842, 0.7969884872436523, 0.8049134612083435, 0.8064984679222107, 0.81548011302948, 0.8178576231002808, 0.8280280232429504, 0.8305375576019287, 0.8296129703521729, 0.8302733898162842, 0.8333113193511963, 0.8334434032440186, 0.8393871188163757, 0.8396512866020203, 0.8506141901016235, 0.8473120927810669, 0.8481045961380005, 0.852331280708313, 0.8576145768165588, 0.8578787446022034, 0.8557654023170471, 0.8613129258155823, 0.8631620407104492, 0.8619733452796936, 0.8668603897094727, 0.8651432991027832, 0.8710870146751404, 0.8652753829956055, 0.8732003569602966, 0.876370370388031, 0.8741249442100525, 0.8786157965660095, 0.8800686597824097, 0.8821820020675659, 0.8844274282455444, 0.8848236799240112, 0.8857482671737671, 0.8891823887825012, 0.8842953443527222, 0.8969752788543701, 0.8894465565681458, 0.8951261639595032, 0.8960506916046143, 0.894069492816925, 0.8990886211395264, 0.9005415439605713], "val_loss": [2.043323040008545, 1.5253326892852783, 1.065381646156311, 0.8617192506790161, 0.7709742784500122, 0.7143442630767822, 0.6645559668540955, 0.6380507349967957, 0.6096213459968567, 0.5854288935661316, 0.5638283491134644, 0.5443257093429565, 0.5321500897407532, 0.5198754072189331, 0.5077638626098633, 0.4981105923652649, 0.4865356981754303, 0.4786645770072937, 0.4658695459365845, 0.4602166712284088, 0.451803982257843, 0.4435993731021881, 0.4411769211292267, 0.433554470539093, 0.43366238474845886, 0.4197845757007599, 0.4193829894065857, 0.41808027029037476, 0.40784594416618347, 0.4071888327598572, 0.40321147441864014, 0.39487507939338684, 0.391573965549469, 0.38776934146881104, 0.3884108364582062, 0.3812580704689026, 0.37710294127464294, 0.3777443468570709, 0.3720642030239105, 0.3703400492668152, 0.3686346411705017, 0.3653973937034607, 0.36194294691085815, 0.35769373178482056, 0.3596005439758301, 0.35625627636909485, 0.3524022102355957, 0.35268521308898926, 0.34774431586265564, 0.3475399911403656, 0.3467395007610321, 0.3434678614139557, 0.34316012263298035, 0.3405667543411255, 0.33713439106941223, 0.3364986479282379, 0.33918002247810364, 0.3436190187931061, 0.3352433145046234, 0.3352248966693878], "val_accuracy": [0.5339999794960022, 0.6359999775886536, 0.6690000295639038, 0.6976666450500488, 0.7163333296775818, 0.7363333106040955, 0.7513333559036255, 0.7620000243186951, 0.7699999809265137, 0.7866666913032532, 0.7953333258628845, 0.8019999861717224, 0.8053333163261414, 0.8059999942779541, 0.8130000233650208, 0.8190000057220459, 0.8306666612625122, 0.8299999833106995, 0.8326666951179504, 0.8343333601951599, 0.8393333554267883, 0.8403333425521851, 0.8386666774749756, 0.8453333377838135, 0.840666651725769, 0.8489999771118164, 0.8460000157356262, 0.8446666598320007, 0.8523333072662354, 0.8489999771118164, 0.8503333330154419, 0.8533333539962769, 0.8560000061988831, 0.8536666631698608, 0.8573333621025085, 0.862666666507721, 0.862666666507721, 0.8656666874885559, 0.859333336353302, 0.8603333234786987, 0.8576666712760925, 0.8669999837875366, 0.8653333187103271, 0.8669999837875366, 0.8690000176429749, 0.8656666874885559, 0.8723333477973938, 0.8723333477973938, 0.8650000095367432, 0.8656666874885559, 0.8726666569709778, 0.8693333268165588, 0.8676666617393494, 0.874666690826416, 0.875, 0.8733333349227905, 0.8730000257492065, 0.8700000047683716, 0.874666690826416, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [89, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6, 4, 5, 4, 7, 8, 8, 6, 6, 9, 2, 3, 1, 7, 3, 8, 7, 2, 6, 0, 4, 0, 4, 7, 4, 5, 6, 7, 1, 0, 4, 1, 6, 8, 1, 8, 4, 4, 5, 0], [0, 0, 3, 3, 2, 1, 0, 5, 2, 0, 2, 5, 4, 3, 3, 0, 0, 5, 4, 5, 3, 2, 1, 1, 3, 0, 2, 2, 1, 3], [16, 92, 78, 57, 19, 44, 47, 29], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 5, 8, 1, 1, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.15485714375972748, "mapping_values": [1, 6, 3, 3, 1, 75, 45, 30, 8, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.square(tf.math.pow(beta, alpha)), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), grad))), tf.math.pow(tf.math.negative(grad), tf.math.pow(tf.math.add(tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(grad, tf.math.subtract(tf.math.negative(grad), tf.math.pow(grad, tf.math.subtract(beta, alpha))))), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(beta))), beta))))))), alpha)), grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [5986398208.0, 6855967744.0, 6866217984.0, 7093636608.0, 7094069760.0, 6976136192.0], "accuracy": [0.1278562992811203, 0.12917712330818176, 0.13617752492427826, 0.1302337795495987, 0.12495046854019165, 0.13313961029052734], "val_loss": [4950499840.0, 4950499840.0, 4950499840.0, 4950499840.0, 4950499840.0, 4950499840.0], "val_accuracy": [0.1550000011920929, 0.1550000011920929, 0.1550000011920929, 0.1550000011920929, 0.1550000011920929, 0.1550000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 29], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 3, 3], [16, 16], [0, 0, 0, 1, 0, 1], [0, 1, 0, 5], [0, 5], [60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [2, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 6, 4, 2, 1, 17, 8, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, alpha)), beta)", "other_info": {"loss": [2.3100016117095947, 2.3089442253112793, 2.3052828311920166, 2.303126573562622, 2.302596092224121, 2.302586078643799, 2.3025851249694824, 2.3025877475738525, 2.3025851249694824], "accuracy": [0.09232597798109055, 0.09047681838274002, 0.09074098616838455, 0.09338264167308807, 0.09972262382507324, 0.10011887550354004, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3080568313598633, 2.3060126304626465, 2.303985357284546, 2.30259108543396, 2.302590847015381, 2.3025925159454346, 2.3025944232940674, 2.3025965690612793, 2.302598714828491], "val_accuracy": [0.08866667002439499, 0.08533333241939545, 0.0663333311676979, 0.0989999994635582, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [44, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [2, 3, 3, 6, 8, 1, 8, 1, 4, 0, 8], [0, 3, 0, 3, 4, 3, 1, 1, 2, 0], [16, 99, 50, 10, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 1, 0, 1, 1, 18, 10, 8, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(grad, tf.math.pow(tf.math.negative(sigma), alpha))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [37, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 1, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [87, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 1, 0, 1, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3032054901123047, 2.3025856018066406, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]