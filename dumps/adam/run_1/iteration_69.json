[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223374128341675, 1.868422508239746, 1.3886544704437256, 1.0887258052825928, 0.9404330849647522, 0.8403299450874329, 0.776190459728241, 0.723294198513031, 0.6852375864982605, 0.6549010872840881, 0.6278349757194519, 0.6161108016967773, 0.6016008257865906, 0.5852901339530945, 0.5621941089630127, 0.5554667711257935, 0.5354413986206055, 0.5252333879470825, 0.5141612887382507, 0.5031219720840454, 0.49885305762290955, 0.48388877511024475, 0.4810338318347931, 0.4612100124359131, 0.4590994417667389, 0.4489559531211853, 0.4421840012073517, 0.43725287914276123, 0.4243021607398987, 0.4214808940887451, 0.4161931872367859, 0.40543389320373535, 0.3961451053619385, 0.3992372155189514, 0.3898349404335022, 0.39080896973609924, 0.3782857358455658, 0.3687754273414612, 0.3695457875728607, 0.35490211844444275, 0.35578837990760803, 0.34488698840141296, 0.34736722707748413, 0.3468458354473114, 0.33996352553367615, 0.33015555143356323, 0.3317718505859375, 0.3227078318595886, 0.31355926394462585, 0.31071656942367554, 0.31438612937927246, 0.3086312413215637, 0.3059503436088562, 0.3014092743396759, 0.288832426071167, 0.2903004586696625, 0.2846773564815521, 0.2773134112358093, 0.26960650086402893, 0.266907274723053, 0.27078190445899963, 0.26517704129219055, 0.26088547706604004, 0.2610071897506714, 0.2522517740726471, 0.2435435801744461, 0.24059951305389404, 0.24444667994976044, 0.23868030309677124, 0.23269130289554596, 0.22881101071834564, 0.2253922075033188, 0.22496946156024933, 0.222658172249794, 0.21201927959918976], "accuracy": [0.2748646140098572, 0.49385812878608704, 0.5651829242706299, 0.6203936338424683, 0.6676793098449707, 0.6989829540252686, 0.7195879220962524, 0.7415136694908142, 0.755118191242218, 0.7638356685638428, 0.774798572063446, 0.7732135653495789, 0.7836481332778931, 0.7885351777076721, 0.7987055778503418, 0.8031964302062988, 0.8061022162437439, 0.8144234418869019, 0.8145555257797241, 0.8165367841720581, 0.8208954930305481, 0.8284242749214172, 0.828292191028595, 0.8364813327789307, 0.8397833704948425, 0.8407079577445984, 0.8430854678153992, 0.8432175517082214, 0.8492933511734009, 0.8481045961380005, 0.8529917001724243, 0.8527275323867798, 0.8602562546730042, 0.8565579056739807, 0.8602562546730042, 0.8646149635314941, 0.8685774803161621, 0.8684453964233398, 0.8688416481018066, 0.8753136992454529, 0.8730682730674744, 0.878879964351654, 0.8767666220664978, 0.8757099509239197, 0.8762382864952087, 0.8828424215316772, 0.8792761564254761, 0.8816536664962769, 0.8885219693183899, 0.8873332738876343, 0.8860124349594116, 0.8908994793891907, 0.8879936337471008, 0.8908994793891907, 0.8972394466400146, 0.8953903317451477, 0.8981640338897705, 0.9015982151031494, 0.9019944667816162, 0.9055606722831726, 0.9021265506744385, 0.9017302989959717, 0.9074098467826843, 0.9049002528190613, 0.9091269373893738, 0.9124290347099304, 0.9108440279960632, 0.9134856462478638, 0.9158631563186646, 0.9158631563186646, 0.9196935892105103, 0.920089840888977, 0.917580246925354, 0.9204860925674438, 0.9237881302833557], "val_loss": [2.0414977073669434, 1.518775224685669, 1.0447845458984375, 0.8349599838256836, 0.7451928853988647, 0.6941201090812683, 0.6464412212371826, 0.6133313775062561, 0.5887103080749512, 0.5635635256767273, 0.5525553226470947, 0.530535876750946, 0.5225908756256104, 0.5063242316246033, 0.5058543086051941, 0.4914076626300812, 0.4788040220737457, 0.47390714287757874, 0.46434611082077026, 0.4574423134326935, 0.4534623920917511, 0.44510790705680847, 0.4397975206375122, 0.4333866834640503, 0.4263966381549835, 0.42376163601875305, 0.41795963048934937, 0.4149929881095886, 0.41443541646003723, 0.40651988983154297, 0.4016253352165222, 0.40239217877388, 0.3964817225933075, 0.39286378026008606, 0.39042696356773376, 0.39145588874816895, 0.385018527507782, 0.3851519227027893, 0.38745132088661194, 0.37953174114227295, 0.3769197463989258, 0.3722652196884155, 0.3740702271461487, 0.3762843906879425, 0.37101656198501587, 0.3645060360431671, 0.36561888456344604, 0.36475619673728943, 0.3634559214115143, 0.36032217741012573, 0.36217284202575684, 0.3527062237262726, 0.354188472032547, 0.35175585746765137, 0.3490142524242401, 0.3452686071395874, 0.35022085905075073, 0.3475354015827179, 0.3452850878238678, 0.3507063388824463, 0.34313833713531494, 0.3425522446632385, 0.3489481210708618, 0.3452862501144409, 0.3434303104877472, 0.34593966603279114, 0.3431151807308197, 0.33703628182411194, 0.3396517038345337, 0.34631580114364624, 0.34209829568862915, 0.3373247981071472, 0.3418225049972534, 0.3454922139644623, 0.34035471081733704], "val_accuracy": [0.5336666703224182, 0.6483333110809326, 0.6806666851043701, 0.7016666531562805, 0.7289999723434448, 0.7379999756813049, 0.7526666522026062, 0.7676666378974915, 0.7683333158493042, 0.781000018119812, 0.7876666784286499, 0.7973333597183228, 0.8066666722297668, 0.8076666593551636, 0.8036666512489319, 0.8133333325386047, 0.8233333230018616, 0.8159999847412109, 0.8276666402816772, 0.8266666531562805, 0.8320000171661377, 0.8336666822433472, 0.8349999785423279, 0.8349999785423279, 0.8366666436195374, 0.8403333425521851, 0.843666672706604, 0.8453333377838135, 0.8429999947547913, 0.8473333120346069, 0.8489999771118164, 0.8460000157356262, 0.8496666550636292, 0.8496666550636292, 0.8516666889190674, 0.8560000061988831, 0.8550000190734863, 0.8536666631698608, 0.8560000061988831, 0.8560000061988831, 0.8579999804496765, 0.8600000143051147, 0.862333357334137, 0.859333336353302, 0.8616666793823242, 0.862666666507721, 0.8619999885559082, 0.8663333058357239, 0.8646666407585144, 0.8653333187103271, 0.8619999885559082, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749, 0.8709999918937683, 0.8693333268165588, 0.8690000176429749, 0.8679999709129333, 0.8723333477973938, 0.871666669845581, 0.8713333606719971, 0.8713333606719971, 0.8733333349227905, 0.8740000128746033, 0.8759999871253967, 0.8709999918937683, 0.8730000257492065, 0.8743333220481873, 0.875, 0.8776666522026062, 0.8730000257492065, 0.874666690826416, 0.8726666569709778, 0.8759999871253967, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 0], [0, 0, 0, 1, 0, 0, 1, 1, 2, 0, 0], [3, 99, 96, 99, 61, 1, 91]], "fitness": -0.6568571329116821, "mapping_values": [1, 7, 5, 2, 2, 10, 6, 4, 1, 2, 1, 1, 0, 24, 13, 11, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [6.264016628265381, 7.2266716957092285, 7.389693737030029, 7.738068103790283, 8.477179527282715, 9.538095474243164, 10.60633373260498, 12.056787490844727, 13.510355949401855, 15.274958610534668, 17.389066696166992, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1138555034995079, 0.10368511080741882, 0.10896842926740646, 0.12917712330818176, 0.1402720957994461, 0.15651829540729523, 0.1846519559621811, 0.20182274281978607, 0.22335226833820343, 0.24554219841957092, 0.2518821954727173, 0.12138422578573227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.714417457580566, 4.449352741241455, 4.030529499053955, 3.4998397827148438, 2.844200849533081, 2.371704339981079, 2.049853563308716, 1.9276796579360962, 1.989721655845642, 2.0447838306427, 2.0783650875091553, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10533333569765091, 0.11400000005960464, 0.1523333340883255, 0.30266666412353516, 0.40833333134651184, 0.48899999260902405, 0.5453333258628845, 0.5736666917800903, 0.6110000014305115, 0.6430000066757202, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5, 8], [0, 2, 0, 3, 0], [16, 16, 18], [0, 1], [8], [0], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 2, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 55, 96, 33, 35, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30373477935791, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [89, 39], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [74, 25], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [41, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 26], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 5, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 14, 7, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), sigma)", "other_info": {"loss": [2.3042027950286865, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]