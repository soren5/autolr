[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230818271636963, 1.8708769083023071, 1.4033405780792236, 1.1155089139938354, 0.9585355520248413, 0.8546142578125, 0.7920102477073669, 0.7358203530311584, 0.7050317525863647, 0.6771314740180969, 0.6507891416549683, 0.6342102885246277, 0.6120970249176025, 0.5965011715888977, 0.5789275765419006, 0.5691888928413391, 0.5502919554710388, 0.5328856110572815, 0.5200632214546204, 0.5209742784500122, 0.5062340497970581, 0.49113398790359497, 0.4814818799495697, 0.4803571403026581, 0.4633096754550934, 0.4598812460899353, 0.4567442238330841, 0.44714221358299255, 0.4357123076915741, 0.431908518075943, 0.420232892036438, 0.425959974527359, 0.41119125485420227, 0.40875330567359924, 0.4055934250354767, 0.38655534386634827, 0.3933928310871124, 0.38209664821624756, 0.37586596608161926, 0.37350994348526, 0.3675588369369507, 0.35981854796409607, 0.358035683631897, 0.35125160217285156, 0.34268784523010254, 0.3402145802974701, 0.3333413004875183, 0.32281073927879333, 0.32012462615966797, 0.3261752724647522, 0.3151657283306122, 0.30476319789886475, 0.3041071593761444, 0.3040250241756439, 0.29673582315444946, 0.2939571738243103, 0.28465735912323, 0.2821165919303894, 0.28212305903434753, 0.27520087361335754, 0.2731817364692688, 0.2691131830215454, 0.2662632465362549, 0.25671130418777466, 0.25543013215065, 0.25596702098846436, 0.24671334028244019, 0.24517571926116943, 0.2517988681793213, 0.23702628910541534, 0.23819111287593842, 0.237666055560112, 0.23099017143249512, 0.222641259431839, 0.21897076070308685], "accuracy": [0.2747325301170349, 0.49253731966018677, 0.563730001449585, 0.6161669492721558, 0.6655659675598145, 0.7018887996673584, 0.7207766771316528, 0.7363624572753906, 0.7466648817062378, 0.7614582180976868, 0.7709681391716003, 0.7753269076347351, 0.77677983045578, 0.7882710099220276, 0.7952714562416077, 0.7977809906005859, 0.8078193068504333, 0.8099326491355896, 0.8137630224227905, 0.819442629814148, 0.824329674243927, 0.8285563588142395, 0.8330471515655518, 0.828292191028595, 0.8374059200286865, 0.8376700282096863, 0.837141752243042, 0.8428213000297546, 0.8424250483512878, 0.8475762605667114, 0.8490291833877563, 0.8506141901016235, 0.8515387773513794, 0.856689989566803, 0.8553691506385803, 0.8585391640663147, 0.8644828796386719, 0.8669924736022949, 0.870030403137207, 0.8651432991027832, 0.8728041052818298, 0.8698983192443848, 0.8705587387084961, 0.8734645247459412, 0.8742570281028748, 0.8779553771018982, 0.8820499181747437, 0.8817857503890991, 0.8842953443527222, 0.8823140859603882, 0.8877294659614563, 0.894069492816925, 0.8881257176399231, 0.8894465565681458, 0.8927486538887024, 0.8899748921394348, 0.8977677822113037, 0.902390718460083, 0.8948619961738586, 0.9026548862457275, 0.9002773761749268, 0.904768168926239, 0.9035794734954834, 0.906749427318573, 0.9097873568534851, 0.9084665179252625, 0.9093911051750183, 0.9101836085319519, 0.9066173434257507, 0.9140139818191528, 0.9145423173904419, 0.9144102334976196, 0.9163914918899536, 0.919561505317688, 0.9218068718910217], "val_loss": [2.038832902908325, 1.515727162361145, 1.0419684648513794, 0.8329343795776367, 0.7425382733345032, 0.6853652596473694, 0.6428083777427673, 0.6072027683258057, 0.5809900164604187, 0.5594668984413147, 0.5478712320327759, 0.5381423234939575, 0.5187342166900635, 0.5069018602371216, 0.49696776270866394, 0.4870035946369171, 0.47870540618896484, 0.4662410020828247, 0.4595881402492523, 0.4581049680709839, 0.4449526071548462, 0.4400906562805176, 0.44051745533943176, 0.43241336941719055, 0.4236783981323242, 0.4212469160556793, 0.4142557680606842, 0.41020825505256653, 0.4069240391254425, 0.4046490788459778, 0.3996421992778778, 0.39590194821357727, 0.39141425490379333, 0.38753095269203186, 0.38251879811286926, 0.38220158219337463, 0.3804241418838501, 0.37529778480529785, 0.3725462257862091, 0.37267276644706726, 0.3712974488735199, 0.3657609820365906, 0.36221104860305786, 0.3610861003398895, 0.35828426480293274, 0.3579927682876587, 0.3548916280269623, 0.3541841506958008, 0.35434749722480774, 0.3508836627006531, 0.3488699495792389, 0.3469996452331543, 0.34829002618789673, 0.34532779455184937, 0.3445989191532135, 0.34150028228759766, 0.34303683042526245, 0.33907535672187805, 0.34220293164253235, 0.339064359664917, 0.3421802520751953, 0.3383420705795288, 0.3337380886077881, 0.3338989317417145, 0.3376527428627014, 0.3354733884334564, 0.33506715297698975, 0.34445032477378845, 0.34103667736053467, 0.33256447315216064, 0.3336741626262665, 0.33175021409988403, 0.3310190737247467, 0.33475959300994873, 0.3334396779537201], "val_accuracy": [0.5640000104904175, 0.6633333563804626, 0.6850000023841858, 0.7110000252723694, 0.7390000224113464, 0.7506666779518127, 0.762666642665863, 0.7693333625793457, 0.7829999923706055, 0.7900000214576721, 0.7986666560173035, 0.8013333082199097, 0.8090000152587891, 0.8140000104904175, 0.8223333358764648, 0.8233333230018616, 0.828000009059906, 0.8276666402816772, 0.8370000123977661, 0.8356666564941406, 0.8399999737739563, 0.8456666469573975, 0.8396666646003723, 0.846666693687439, 0.8533333539962769, 0.8500000238418579, 0.8533333539962769, 0.8513333201408386, 0.8543333411216736, 0.8533333539962769, 0.8600000143051147, 0.8653333187103271, 0.8633333444595337, 0.8636666536331177, 0.862333357334137, 0.862333357334137, 0.8679999709129333, 0.8690000176429749, 0.8703333139419556, 0.8659999966621399, 0.8653333187103271, 0.8713333606719971, 0.8733333349227905, 0.8709999918937683, 0.8743333220481873, 0.874666690826416, 0.875333309173584, 0.871666669845581, 0.871666669845581, 0.8786666393280029, 0.875, 0.8769999742507935, 0.8743333220481873, 0.8763333559036255, 0.8790000081062317, 0.8786666393280029, 0.8776666522026062, 0.8809999823570251, 0.8786666393280029, 0.878000020980835, 0.8786666393280029, 0.8759999871253967, 0.8836666941642761, 0.8833333253860474, 0.8820000290870667, 0.8853333592414856, 0.8806666731834412, 0.8813333511352539, 0.8799999952316284, 0.8889999985694885, 0.8846666812896729, 0.8843333125114441, 0.887666642665863, 0.8863333463668823, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2, 0], [39, 39, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 2, 4, 2, 4, 2, 8, 3, 2, 7], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0, 1, 4, 2], [16, 7, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 1, 2, 1, 1, 1, 27, 14, 13, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.multiply(tf.math.add(sigma, tf.math.add(alpha, beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 0, 0, 2], [39, 39, 77], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 9, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 56, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 2, 2, 0, 1, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [7.610325813293457, 58.75791549682617, 203.57974243164062, 491.5204162597656, 1003.6810913085938, 1801.1851806640625], "accuracy": [0.09972262382507324, 0.10077928751707077, 0.0956280529499054, 0.10170386731624603, 0.09774138033390045, 0.09945846349000931], "val_loss": [20.342960357666016, 94.72160339355469, 261.6946716308594, 569.0405883789062, 1064.4161376953125, 1795.9754638671875], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 2, 1, 2], [39, 39], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 9, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 31], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [46], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 3, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 4, 3, 0], [16, 99, 96, 99, 61, 75]], "fitness": -0.08799999952316284, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(sigma), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.308833360671997, 2.3091189861297607, 2.3088908195495605, 2.308290481567383, 2.307797431945801, 2.308105945587158, 2.307741403579712, 2.307058095932007, 2.30688738822937, 2.3065714836120605, 2.306213617324829, 2.3055882453918457], "accuracy": [0.09879804402589798, 0.0878351628780365, 0.08796724677085876, 0.0944393053650856, 0.09166556596755981, 0.09087307006120682, 0.09417514503002167, 0.0940430611371994, 0.09179764986038208, 0.09325055778026581, 0.0936468094587326, 0.1014397069811821], "val_loss": [2.3080060482025146, 2.307560920715332, 2.307178020477295, 2.3069193363189697, 2.3066725730895996, 2.306415557861328, 2.306173086166382, 2.305957078933716, 2.3058135509490967, 2.3056671619415283, 2.3055436611175537, 2.3054282665252686], "val_accuracy": [0.08966666460037231, 0.09000000357627869, 0.08866667002439499, 0.08900000154972076, 0.08933333307504654, 0.08966666460037231, 0.09033333510160446, 0.09033333510160446, 0.09000000357627869, 0.08900000154972076, 0.08933333307504654, 0.08900000154972076]}}]