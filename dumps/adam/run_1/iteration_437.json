[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234411239624023, 1.867950201034546, 1.4028658866882324, 1.1013110876083374, 0.9481047987937927, 0.8485115766525269, 0.7771642208099365, 0.7402663230895996, 0.6881820559501648, 0.6643245816230774, 0.6335939168930054, 0.6071421504020691, 0.5831179618835449, 0.5729957818984985, 0.5680457949638367, 0.5467833280563354, 0.5282299518585205, 0.515360414981842, 0.49819132685661316, 0.4915347397327423, 0.4775886833667755, 0.4711248576641083, 0.45300060510635376, 0.45492827892303467, 0.44661301374435425, 0.4307253956794739, 0.42836132645606995, 0.4195578098297119, 0.4100130796432495, 0.40906113386154175, 0.40728721022605896, 0.39312857389450073, 0.39659297466278076, 0.3845614194869995, 0.37551164627075195, 0.37488827109336853, 0.36792606115341187, 0.3620191812515259, 0.3657177686691284, 0.3490014672279358, 0.3503890037536621, 0.33811208605766296, 0.34177738428115845, 0.3336419463157654, 0.3325929045677185, 0.32285597920417786, 0.3189035654067993, 0.3204483091831207, 0.31064561009407043, 0.3094606101512909, 0.30518805980682373, 0.29869234561920166, 0.28822484612464905, 0.28858673572540283, 0.29407334327697754, 0.28485146164894104, 0.2813153862953186, 0.2727804183959961, 0.27227142453193665, 0.2693949043750763, 0.25380849838256836, 0.2616688013076782, 0.25958582758903503, 0.25100618600845337, 0.24645723402500153, 0.23837774991989136, 0.2371041625738144, 0.2403247207403183, 0.2368675023317337, 0.23531347513198853, 0.22147007286548615, 0.22562676668167114, 0.21664372086524963, 0.22245901823043823, 0.2148941606283188, 0.21244436502456665, 0.21307940781116486, 0.20302972197532654, 0.21018867194652557, 0.19919365644454956, 0.20463131368160248, 0.198067769408226, 0.19293294847011566, 0.18659821152687073, 0.19030793011188507, 0.18338122963905334, 0.1805572658777237, 0.18137086927890778, 0.17658062279224396, 0.1731635481119156, 0.16604165732860565, 0.17342522740364075, 0.16850723326206207], "accuracy": [0.26997753977775574, 0.4830273389816284, 0.5587108731269836, 0.6188086271286011, 0.6631884574890137, 0.6934354901313782, 0.7160216569900513, 0.7293620109558105, 0.7535332441329956, 0.7582882046699524, 0.7683265209197998, 0.7751948237419128, 0.7938185334205627, 0.7926297783851624, 0.7950072884559631, 0.8010830879211426, 0.8099326491355896, 0.8145555257797241, 0.822348415851593, 0.8255184292793274, 0.83119797706604, 0.8293488025665283, 0.8381983637809753, 0.833179235458374, 0.8408400416374207, 0.8462554216384888, 0.8479725122451782, 0.8491612672805786, 0.8581429123878479, 0.8529917001724243, 0.8565579056739807, 0.8628978729248047, 0.8622375130653381, 0.8602562546730042, 0.8665962219238281, 0.8673887252807617, 0.8710870146751404, 0.8735966086387634, 0.8692378997802734, 0.8751816153526306, 0.8779553771018982, 0.8820499181747437, 0.878351628780365, 0.8841632604598999, 0.883238673210144, 0.8877294659614563, 0.8849557638168335, 0.8874653577804565, 0.8928807377815247, 0.8928807377815247, 0.8922203183174133, 0.893541157245636, 0.8931449055671692, 0.8975036144256592, 0.894069492816925, 0.900409460067749, 0.9006736278533936, 0.9054285883903503, 0.9039757251739502, 0.9079381823539734, 0.9089948534965515, 0.9076740145683289, 0.9079381823539734, 0.9129573106765747, 0.9133535623550415, 0.9154669046401978, 0.9179764986038208, 0.9144102334976196, 0.917580246925354, 0.91559898853302, 0.9198256731033325, 0.9196935892105103, 0.9245806336402893, 0.9212785363197327, 0.9233918786048889, 0.9256373047828674, 0.9229956269264221, 0.9255052208900452, 0.9276185631752014, 0.9309206008911133, 0.9235239624977112, 0.9295997619628906, 0.9280148148536682, 0.9342226982116699, 0.9344868659973145, 0.9363360404968262, 0.9366002082824707, 0.9340906143188477, 0.937260627746582, 0.9397701621055603, 0.941091001033783, 0.9383172392845154, 0.9389776587486267], "val_loss": [2.0385594367980957, 1.5075486898422241, 1.0363332033157349, 0.8226307034492493, 0.7379680871963501, 0.6802281737327576, 0.6374838352203369, 0.606743574142456, 0.5826148390769958, 0.5558497309684753, 0.5427589416503906, 0.5282961130142212, 0.5118498802185059, 0.5015907883644104, 0.49453476071357727, 0.4770067632198334, 0.47211548686027527, 0.4622229039669037, 0.45263949036598206, 0.45004069805145264, 0.4394095838069916, 0.43472933769226074, 0.42831867933273315, 0.42902514338493347, 0.4184303879737854, 0.415142297744751, 0.4126938581466675, 0.40895259380340576, 0.406294584274292, 0.40377694368362427, 0.394846111536026, 0.3933199346065521, 0.3916783332824707, 0.3916560113430023, 0.38880306482315063, 0.3837311863899231, 0.3822494447231293, 0.3900957405567169, 0.3844637870788574, 0.3760926127433777, 0.37852030992507935, 0.3724154531955719, 0.3742430508136749, 0.3715897500514984, 0.368520587682724, 0.36743950843811035, 0.365092933177948, 0.36382707953453064, 0.37230610847473145, 0.3663192689418793, 0.35916903614997864, 0.3603440821170807, 0.36169788241386414, 0.35416874289512634, 0.35912731289863586, 0.36171630024909973, 0.3577154278755188, 0.359516441822052, 0.35157454013824463, 0.3539332151412964, 0.358030766248703, 0.351436972618103, 0.348757803440094, 0.3553045690059662, 0.35121646523475647, 0.35232576727867126, 0.35302409529685974, 0.35362446308135986, 0.3478277921676636, 0.3509752154350281, 0.34834766387939453, 0.3506799340248108, 0.34689873456954956, 0.3511984348297119, 0.3471333682537079, 0.34849536418914795, 0.34551358222961426, 0.3561842739582062, 0.34298959374427795, 0.3533377945423126, 0.34766682982444763, 0.3438933193683624, 0.35282593965530396, 0.34920206665992737, 0.34742915630340576, 0.3467646837234497, 0.35318875312805176, 0.34774449467658997, 0.35297340154647827, 0.358304888010025, 0.3520943224430084, 0.35327428579330444, 0.3509635925292969], "val_accuracy": [0.5580000281333923, 0.6596666574478149, 0.6856666803359985, 0.7226666808128357, 0.7450000047683716, 0.7596666812896729, 0.7673333287239075, 0.784333348274231, 0.784333348274231, 0.8090000152587891, 0.8153333067893982, 0.8100000023841858, 0.8223333358764648, 0.8236666917800903, 0.8230000138282776, 0.8383333086967468, 0.8403333425521851, 0.8389999866485596, 0.8450000286102295, 0.843999981880188, 0.846666693687439, 0.8443333506584167, 0.8519999980926514, 0.8479999899864197, 0.8539999723434448, 0.8556666374206543, 0.856333315372467, 0.8576666712760925, 0.8576666712760925, 0.859000027179718, 0.8583333492279053, 0.859333336353302, 0.8613333106040955, 0.8613333106040955, 0.8610000014305115, 0.8640000224113464, 0.8643333315849304, 0.8610000014305115, 0.8700000047683716, 0.8666666746139526, 0.8683333396911621, 0.8706666827201843, 0.8666666746139526, 0.8706666827201843, 0.8693333268165588, 0.871666669845581, 0.8723333477973938, 0.871999979019165, 0.8690000176429749, 0.8723333477973938, 0.8736666440963745, 0.8723333477973938, 0.8740000128746033, 0.8743333220481873, 0.8763333559036255, 0.871666669845581, 0.8766666650772095, 0.8756666779518127, 0.8766666650772095, 0.874666690826416, 0.8776666522026062, 0.8786666393280029, 0.8766666650772095, 0.8743333220481873, 0.8790000081062317, 0.8763333559036255, 0.8790000081062317, 0.8786666393280029, 0.8816666603088379, 0.8823333382606506, 0.8823333382606506, 0.8823333382606506, 0.8826666474342346, 0.8776666522026062, 0.8793333172798157, 0.8833333253860474, 0.8806666731834412, 0.8793333172798157, 0.8830000162124634, 0.8840000033378601, 0.8830000162124634, 0.8796666860580444, 0.8833333253860474, 0.8830000162124634, 0.8859999775886536, 0.8849999904632568, 0.8836666941642761, 0.8883333206176758, 0.8846666812896729, 0.8846666812896729, 0.8880000114440918, 0.8840000033378601, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 6, 8, 3, 2, 8, 3, 3, 6, 3, 2, 5, 7, 2, 9], [0, 2, 0, 3, 2, 3, 4, 2, 1, 0, 3, 2, 4], [16, 16, 70, 16], [0, 1, 0, 1], [2, 5], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [4, 0, 2, 0, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 32, 19, 13, 4, 4, 2, 2, 1, 21, 11, 10, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 42], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 2, 3, 0, 3, 5, 1, 7, 5, 8, 8, 6, 9], [1, 2, 0, 3, 1, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8, 4], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 19, 13, 6, 2, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad))), alpha)), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))))), sigma), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 44], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0965714305639267, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [763339904.0, 863447616.0, 849562496.0, 867528320.0, 874313984.0, 867006592.0], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10249637067317963, 0.09853387624025345, 0.10157178342342377, 0.09826971590518951], "val_loss": [606951104.0, 606951104.0, 606950976.0, 606927168.0, 606927232.0, 606926720.0], "val_accuracy": [0.1120000034570694, 0.1120000034570694, 0.1120000034570694, 0.1120000034570694, 0.1120000034570694, 0.1120000034570694]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 3, 3, 3, 1, 9, 2], [0, 1, 0, 2, 0, 2, 2], [39, 39, 20, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 2, 8, 1, 4, 1, 4, 2, 6], [0, 0, 3, 4, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.07371428608894348, "mapping_values": [1, 16, 9, 7, 4, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2224647969964032.0, 2558146946007040.0, 2410721119830016.0, 2466634077831168.0, 2433071861202944.0, 2399650036318208.0], "accuracy": [0.0874389111995697, 0.09166556596755981, 0.09008057415485382, 0.08334434032440186, 0.08426892012357712, 0.09034473448991776], "val_loss": [2129679397945344.0, 2129679397945344.0, 2129679397945344.0, 2129679397945344.0, 2129679397945344.0, 2129679397945344.0], "val_accuracy": [0.07100000232458115, 0.07100000232458115, 0.07100000232458115, 0.07100000232458115, 0.07100000232458115, 0.07100000232458115]}}]