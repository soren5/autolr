[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220979928970337, 1.863762617111206, 1.3858742713928223, 1.0822486877441406, 0.942219078540802, 0.8313252329826355, 0.7683122754096985, 0.7295215129852295, 0.6804291605949402, 0.6526741981506348, 0.6257867813110352, 0.6074427962303162, 0.5898977518081665, 0.576998233795166, 0.5477952361106873, 0.5468209385871887, 0.5300727486610413, 0.5235927700996399, 0.504375159740448, 0.4932120144367218, 0.482607901096344, 0.4776840806007385, 0.47238385677337646, 0.45665255188941956, 0.45490068197250366, 0.4438759684562683, 0.43515121936798096, 0.42546963691711426, 0.4201786518096924, 0.41251906752586365, 0.41109660267829895, 0.40582606196403503, 0.40011924505233765, 0.38719382882118225, 0.3791390359401703, 0.3761173486709595, 0.3745664358139038, 0.36896929144859314, 0.37434014678001404, 0.3555499017238617, 0.3520147204399109, 0.34366992115974426, 0.34581875801086426, 0.3425632119178772, 0.33743229508399963, 0.3271115720272064, 0.3241930305957794, 0.3287862241268158, 0.32154029607772827, 0.3055049777030945, 0.30853453278541565, 0.3066704571247101, 0.3037213981151581, 0.2942723035812378, 0.2927325963973999, 0.2862936556339264, 0.28460803627967834, 0.2761346697807312, 0.2774929702281952, 0.26896005868911743, 0.264201283454895, 0.2700239419937134, 0.2647968828678131, 0.26152855157852173, 0.2522306442260742, 0.24897165596485138, 0.24926646053791046, 0.237945094704628, 0.24077722430229187, 0.23624879121780396], "accuracy": [0.27578920125961304, 0.4954431354999542, 0.5670320987701416, 0.622639000415802, 0.6674151420593262, 0.6976621150970459, 0.7264562249183655, 0.7345132827758789, 0.7582882046699524, 0.7613261342048645, 0.767930269241333, 0.7849689722061157, 0.7877426743507385, 0.7930260300636292, 0.8062343001365662, 0.8026680946350098, 0.8092722296714783, 0.8101968169212341, 0.8222163319587708, 0.8224804997444153, 0.8269713521003723, 0.8298771381378174, 0.8341038227081299, 0.8352925777435303, 0.8412362933158875, 0.8450667262077332, 0.8500858545303345, 0.8508783578872681, 0.8552370667457581, 0.8558974862098694, 0.8519350290298462, 0.856689989566803, 0.8598600029945374, 0.8665962219238281, 0.8661999702453613, 0.8688416481018066, 0.8681812286376953, 0.8722757697105408, 0.8658037185668945, 0.8753136992454529, 0.8749174475669861, 0.880729079246521, 0.8787478804588318, 0.8840311765670776, 0.8792761564254761, 0.8849557638168335, 0.8857482671737671, 0.8825782537460327, 0.8856161832809448, 0.8910315632820129, 0.8879936337471008, 0.8919561505317688, 0.8944657444953918, 0.8943336606025696, 0.898428201675415, 0.9017302989959717, 0.9000132083892822, 0.9002773761749268, 0.900409460067749, 0.9054285883903503, 0.9075419306755066, 0.9030511379241943, 0.9060890078544617, 0.9100515246391296, 0.9134856462478638, 0.9113723635673523, 0.9129573106765747, 0.9167877435684204, 0.9117686152458191, 0.9178444147109985], "val_loss": [2.040987253189087, 1.5148873329162598, 1.0506258010864258, 0.8474245667457581, 0.7640090584754944, 0.7058552503585815, 0.663926362991333, 0.6297336220741272, 0.5989212989807129, 0.5790359973907471, 0.5627752542495728, 0.542953610420227, 0.5309246182441711, 0.5149867534637451, 0.5017593502998352, 0.49497371912002563, 0.48295149207115173, 0.4828037917613983, 0.46580448746681213, 0.46291568875312805, 0.4494875371456146, 0.4475170075893402, 0.4430321753025055, 0.43767642974853516, 0.4316774606704712, 0.42390862107276917, 0.42013129591941833, 0.4175562858581543, 0.41303402185440063, 0.406646728515625, 0.4068872332572937, 0.40503576397895813, 0.3995282053947449, 0.39731985330581665, 0.39508578181266785, 0.3931511640548706, 0.3893505036830902, 0.3988766372203827, 0.3846621513366699, 0.38558515906333923, 0.3796936571598053, 0.3831438422203064, 0.3722572922706604, 0.3769683539867401, 0.37666985392570496, 0.36956316232681274, 0.37360721826553345, 0.367732435464859, 0.3703421652317047, 0.3659810721874237, 0.364299476146698, 0.3639202415943146, 0.3632102906703949, 0.361971914768219, 0.3582099676132202, 0.35662737488746643, 0.3570726811885834, 0.35395148396492004, 0.35402214527130127, 0.35990819334983826, 0.35661083459854126, 0.3555333614349365, 0.360158771276474, 0.3518213629722595, 0.35321134328842163, 0.35247403383255005, 0.3509572744369507, 0.353413462638855, 0.3533055782318115, 0.35314494371414185], "val_accuracy": [0.5536666512489319, 0.653333306312561, 0.6746666431427002, 0.7020000219345093, 0.7260000109672546, 0.7419999837875366, 0.7559999823570251, 0.7663333415985107, 0.781333327293396, 0.7883333563804626, 0.7923333048820496, 0.8040000200271606, 0.8119999766349792, 0.8136666417121887, 0.8169999718666077, 0.8223333358764648, 0.824999988079071, 0.82833331823349, 0.8316666483879089, 0.8356666564941406, 0.8420000076293945, 0.8433333039283752, 0.8429999947547913, 0.8429999947547913, 0.8460000157356262, 0.8503333330154419, 0.8550000190734863, 0.8506666421890259, 0.8489999771118164, 0.8560000061988831, 0.8573333621025085, 0.8546666502952576, 0.8573333621025085, 0.8586666584014893, 0.8600000143051147, 0.862333357334137, 0.8663333058357239, 0.8569999933242798, 0.8610000014305115, 0.8653333187103271, 0.8686666488647461, 0.8686666488647461, 0.8686666488647461, 0.8659999966621399, 0.8686666488647461, 0.8706666827201843, 0.8706666827201843, 0.8723333477973938, 0.8709999918937683, 0.871666669845581, 0.871999979019165, 0.8736666440963745, 0.8713333606719971, 0.8769999742507935, 0.874666690826416, 0.8773333430290222, 0.8740000128746033, 0.8759999871253967, 0.8776666522026062, 0.8756666779518127, 0.8773333430290222, 0.8773333430290222, 0.875, 0.8790000081062317, 0.8823333382606506, 0.8786666393280029, 0.8809999823570251, 0.878333330154419, 0.8790000081062317, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 5]], "fitness": -0.8557142615318298, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2521541118621826, 1.9618048667907715, 1.4221198558807373, 1.1932934522628784, 1.0820673704147339, 0.8490372896194458, 0.8141048550605774, 0.747101902961731, 0.7022727727890015, 0.6756014227867126, 0.6514936089515686, 0.6142415404319763, 0.5969662070274353, 0.5746087431907654, 0.5740579962730408, 0.5568972826004028, 0.5434991717338562, 0.5354709029197693, 0.5291575789451599, 0.5384331941604614, 0.5228286981582642, 0.5236272215843201, 0.5050899386405945, 0.4922833740711212, 0.48116767406463623, 0.4732906222343445, 0.4665292203426361, 0.46344345808029175, 0.4385087490081787, 0.4590449631214142, 0.43055227398872375, 0.4346914291381836, 0.42383602261543274, 0.4177640974521637, 0.4068475663661957, 0.3979211449623108, 0.386656790971756, 0.3831758499145508, 0.3798981308937073, 0.38303399085998535, 0.37439820170402527, 0.3741038739681244], "accuracy": [0.2312772423028946, 0.45330867171287537, 0.5278034806251526, 0.5933166146278381, 0.6483951807022095, 0.6897371411323547, 0.7141724824905396, 0.7228899598121643, 0.7415136694908142, 0.750759482383728, 0.7568352818489075, 0.7650244235992432, 0.7761194109916687, 0.7814027070999146, 0.7755910754203796, 0.7841764688491821, 0.7849689722061157, 0.7901201844215393, 0.7907806038856506, 0.7898560166358948, 0.7976489067077637, 0.7926297783851624, 0.8034605979919434, 0.8055738806724548, 0.8127063512802124, 0.8216879963874817, 0.8195747137069702, 0.8226125836372375, 0.8321225643157959, 0.824329674243927, 0.8363492488861084, 0.8354246616363525, 0.8342359066009521, 0.8368775844573975, 0.8408400416374207, 0.8418967127799988, 0.8502179384231567, 0.8457271456718445, 0.8545766472816467, 0.850350022315979, 0.8531237840652466, 0.8494254350662231], "val_loss": [2.118931293487549, 1.56120765209198, 0.9067642688751221, 0.8283390402793884, 0.6963851451873779, 0.688856303691864, 0.650483250617981, 0.583999752998352, 0.5763341784477234, 0.5503362417221069, 0.547970712184906, 0.5425219535827637, 0.5303025245666504, 0.5233185291290283, 0.5214803218841553, 0.5147736072540283, 0.5026316046714783, 0.5005959272384644, 0.49208325147628784, 0.4883657991886139, 0.483609139919281, 0.47120946645736694, 0.46099209785461426, 0.45854824781417847, 0.4618377983570099, 0.4631708860397339, 0.4506617784500122, 0.4365141689777374, 0.4498361051082611, 0.4350268542766571, 0.433601975440979, 0.4436782896518707, 0.4379218816757202, 0.42841625213623047, 0.42321211099624634, 0.40824609994888306, 0.4086780548095703, 0.4336860775947571, 0.4323365092277527, 0.42848899960517883, 0.4303947687149048, 0.4356335997581482], "val_accuracy": [0.4880000054836273, 0.6516666412353516, 0.6946666836738586, 0.7233333587646484, 0.7433333396911621, 0.7616666555404663, 0.7703333497047424, 0.7766666412353516, 0.7873333096504211, 0.7993333339691162, 0.7973333597183228, 0.7950000166893005, 0.8050000071525574, 0.8096666932106018, 0.8083333373069763, 0.8043333292007446, 0.815666675567627, 0.8190000057220459, 0.824999988079071, 0.8230000138282776, 0.824999988079071, 0.831333339214325, 0.8360000252723694, 0.8356666564941406, 0.8349999785423279, 0.8326666951179504, 0.8330000042915344, 0.8450000286102295, 0.8479999899864197, 0.8550000190734863, 0.8523333072662354, 0.8493333458900452, 0.8550000190734863, 0.8586666584014893, 0.8579999804496765, 0.859666645526886, 0.8633333444595337, 0.862666666507721, 0.8579999804496765, 0.8573333621025085, 0.8536666631698608, 0.8500000238418579]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 2, 3, 0, 3, 3, 1, 2, 0], [27, 31, 96, 99, 39, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, beta)), sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 6, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 2, 3], [16, 16], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 6, 4, 3, 9, 7, 1, 8], [0, 7, 3, 6, 1, 1], [99, 75], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8, 3, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 7, 4, 3, 0, 14, 8, 6, 2, 24, 13, 11, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), sigma), tf.math.add(tf.math.subtract(grad, tf.math.sqrt(alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.math.subtract(grad, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 5, 5], [0, 2, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 4, 0, 3, 4, 2, 4], [16, 99, 96, 12, 61, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 8, 5, 3, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(sigma, grad)))), tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [6.73959616042972e+18, 1.8693020321494482e+32, 1.04198950860293e+32, 1.0419894118888645e+32, 1.0419894118888645e+32, 1.0419894118888645e+32, 1.0419894118888645e+32], "accuracy": [0.1018359512090683, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.655085833425584e+23, 1.0422850667873095e+32, 1.0422850667873095e+32, 1.0422850667873095e+32, 1.0422850667873095e+32, 1.0422850667873095e+32, 1.0422850667873095e+32], "val_accuracy": [0.09833333641290665, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]