[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224578380584717, 1.867815375328064, 1.393280029296875, 1.100278615951538, 0.9276893734931946, 0.8287890553474426, 0.7713647484779358, 0.7234224081039429, 0.6744949817657471, 0.644015908241272, 0.6329346895217896, 0.6101498007774353, 0.5858632326126099, 0.5806070566177368, 0.5591747164726257, 0.5409292578697205, 0.5236100554466248, 0.518589198589325, 0.5031375288963318, 0.4946286082267761, 0.4794751703739166, 0.4657460153102875, 0.4635384976863861, 0.44882649183273315, 0.44658949971199036, 0.4389997124671936, 0.4218677580356598, 0.42231911420822144, 0.41038286685943604, 0.41051816940307617, 0.4064684510231018, 0.3931254744529724, 0.3928796947002411, 0.3793332576751709], "accuracy": [0.25822216272354126, 0.4884427487850189, 0.5621450543403625, 0.6196011304855347, 0.6684718132019043, 0.7020208835601807, 0.7220974564552307, 0.7388719916343689, 0.7503632307052612, 0.761590301990509, 0.7707040309906006, 0.77677983045578, 0.7840443849563599, 0.7942147850990295, 0.7993659973144531, 0.7989697456359863, 0.8123101592063904, 0.8125742673873901, 0.8141592741012573, 0.8156121969223022, 0.8314621448516846, 0.8296129703521729, 0.8294808864593506, 0.8389908671379089, 0.8388587832450867, 0.8416325449943542, 0.8510104417800903, 0.8466516733169556, 0.8511425256729126, 0.8519350290298462, 0.8549728989601135, 0.8610487580299377, 0.857218325138092, 0.8667283058166504], "val_loss": [2.0376272201538086, 1.5146665573120117, 1.0443419218063354, 0.8404027223587036, 0.751556396484375, 0.6960424780845642, 0.648374080657959, 0.6118174195289612, 0.583708643913269, 0.5638217926025391, 0.5415984988212585, 0.5244870781898499, 0.5124321579933167, 0.5045192241668701, 0.4981132447719574, 0.4790942668914795, 0.47573336958885193, 0.46279439330101013, 0.4539388120174408, 0.4481889605522156, 0.44190868735313416, 0.43212541937828064, 0.4281870424747467, 0.4228156805038452, 0.4186425507068634, 0.41708365082740784, 0.40492501854896545, 0.4043731987476349, 0.40109944343566895, 0.4015829563140869, 0.39541199803352356, 0.3894849717617035, 0.38693302869796753, 0.38783764839172363], "val_accuracy": [0.5653333067893982, 0.6526666879653931, 0.687333345413208, 0.7039999961853027, 0.731333315372467, 0.7556666731834412, 0.7663333415985107, 0.7716666460037231, 0.7886666655540466, 0.7929999828338623, 0.809333324432373, 0.8176666498184204, 0.8169999718666077, 0.8199999928474426, 0.8209999799728394, 0.8366666436195374, 0.8333333134651184, 0.8363333344459534, 0.8399999737739563, 0.8410000205039978, 0.8416666388511658, 0.846666693687439, 0.8486666679382324, 0.8463333249092102, 0.8536666631698608, 0.8479999899864197, 0.8539999723434448, 0.8533333539962769, 0.859000027179718, 0.8529999852180481, 0.8560000061988831, 0.856333315372467, 0.8586666584014893, 0.8573333621025085]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 2], [0, 1, 0, 2], [40, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [8, 2, 3, 0, 3, 4], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [55], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 1], [0, 0, 0, 3, 0, 0, 2, 4, 2, 0], [16, 99, 96, 82, 67, 1]], "fitness": -0.798285722732544, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307596206665039, 2.2944488525390625, 2.2711868286132812, 2.239062547683716, 2.1950390338897705, 2.120046377182007, 1.987339735031128, 1.7662301063537598, 1.503631591796875, 1.3305894136428833, 1.333008050918579, 1.3510936498641968, 1.1842741966247559, 1.0407551527023315, 0.9035749435424805, 0.8862403631210327, 0.899196445941925, 0.8698443174362183, 0.8262530565261841, 0.8048157095909119, 0.8109747171401978, 0.7867406010627747, 0.7973942756652832, 0.7682442665100098, 0.7562716603279114, 0.7442729473114014, 0.7238652110099792, 0.7141491770744324, 0.7115594148635864, 0.7029130458831787, 0.6885568499565125, 0.6696850657463074, 0.6587902903556824, 0.6597317457199097, 0.6556018590927124, 0.6408283114433289, 0.6451996564865112, 0.6336920261383057, 0.6359575390815735, 0.621804416179657, 0.6219741702079773, 0.6008656024932861, 0.5967831611633301, 0.5947656631469727, 0.5851578116416931, 0.5882386565208435], "accuracy": [0.0948355570435524, 0.1200634017586708, 0.186104878783226, 0.27460044622421265, 0.33218860626220703, 0.3778893053531647, 0.4095892310142517, 0.4439307749271393, 0.4859331548213959, 0.5246334671974182, 0.5559371113777161, 0.5789195895195007, 0.6256769299507141, 0.6433760523796082, 0.6760005354881287, 0.672170102596283, 0.6708492636680603, 0.666358470916748, 0.6951525807380676, 0.7082287669181824, 0.7038700580596924, 0.7080966830253601, 0.7099458575248718, 0.7112666964530945, 0.7119271159172058, 0.7025492191314697, 0.7045304179191589, 0.7194558382034302, 0.7231541275978088, 0.7281733155250549, 0.7383436560630798, 0.7429665923118591, 0.7405890822410583, 0.7477215528488159, 0.7471932172775269, 0.7512878179550171, 0.7503632307052612, 0.7584202885627747, 0.7560427784919739, 0.7567031979560852, 0.7621186375617981, 0.7666094303131104, 0.7675340175628662, 0.7701756954193115, 0.7761194109916687, 0.7717606425285339], "val_loss": [2.301159381866455, 2.280337333679199, 2.250798225402832, 2.210169553756714, 2.147327184677124, 2.0367393493652344, 1.8357508182525635, 1.5147897005081177, 1.1658579111099243, 0.9720779061317444, 0.9166876673698425, 0.8617128729820251, 0.8045622706413269, 0.7428648471832275, 0.7318645119667053, 0.7756107449531555, 0.764530599117279, 0.690998375415802, 0.6536604762077332, 0.641218900680542, 0.6455833911895752, 0.6532765030860901, 0.6461032032966614, 0.6376708149909973, 0.6330405473709106, 0.6305322051048279, 0.6240423321723938, 0.6195235252380371, 0.6104884147644043, 0.5933579802513123, 0.5756550431251526, 0.5620465278625488, 0.5524245500564575, 0.5485886931419373, 0.5487210154533386, 0.5482755899429321, 0.5440488457679749, 0.5361307263374329, 0.529504656791687, 0.5269905924797058, 0.5260845422744751, 0.5230602025985718, 0.5228415727615356, 0.5257285833358765, 0.5261062979698181, 0.5229254364967346], "val_accuracy": [0.09566666930913925, 0.1743333339691162, 0.3946666717529297, 0.43966665863990784, 0.43933331966400146, 0.45100000500679016, 0.48899999260902405, 0.5889999866485596, 0.653333306312561, 0.6596666574478149, 0.6790000200271606, 0.6933333277702332, 0.7096666693687439, 0.7250000238418579, 0.7256666421890259, 0.7196666598320007, 0.7289999723434448, 0.7446666955947876, 0.7556666731834412, 0.7546666860580444, 0.7476666569709778, 0.7483333349227905, 0.7576666474342346, 0.7559999823570251, 0.7463333606719971, 0.7366666793823242, 0.7576666474342346, 0.7663333415985107, 0.7680000066757202, 0.7760000228881836, 0.7730000019073486, 0.7726666927337646, 0.7756666541099548, 0.7799999713897705, 0.7860000133514404, 0.7919999957084656, 0.7923333048820496, 0.793666660785675, 0.7960000038146973, 0.8036666512489319, 0.8050000071525574, 0.8036666512489319, 0.8013333082199097, 0.796999990940094, 0.8003333210945129, 0.8029999732971191]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [67, 16], [0, 1], [0], [4], [6], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [6, 3, 3, 1, 9, 1, 4, 6, 5, 2, 8, 7, 2, 5, 4, 6, 4, 9], [0, 0, 4, 3, 0, 0, 3, 3, 2, 0, 5, 7], [16, 99, 96, 99, 61, 1, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0, 30, 18, 12, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(sigma, sigma), beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 1, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 21, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3033485412597656, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [88, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 4, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), alpha))", "other_info": {"loss": [2.3086624145507812, 2.3083906173706055, 2.307537078857422, 2.3087263107299805, 2.3080310821533203, 2.308117628097534, 2.3072023391723633], "accuracy": [0.09549596905708313, 0.09549596905708313, 0.09259014576673508, 0.09457138925790787, 0.09325055778026581, 0.09694888442754745, 0.09628847241401672], "val_loss": [2.3069801330566406, 2.3068947792053223, 2.3068912029266357, 2.3068912029266357, 2.3068912029266357, 2.3068912029266357, 2.3068912029266357], "val_accuracy": [0.08900000154972076, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]