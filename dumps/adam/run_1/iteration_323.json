[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2265095710754395, 1.8851054906845093, 1.4111473560333252, 1.1166608333587646, 0.954471230506897, 0.8350282311439514, 0.7813153266906738, 0.7355087399482727, 0.6927201747894287, 0.6639646887779236, 0.6385763883590698, 0.6181545257568359, 0.5986578464508057, 0.5774292945861816, 0.5577176213264465, 0.5456400513648987, 0.5280991792678833, 0.5171152949333191, 0.501133918762207, 0.48839887976646423, 0.48718246817588806, 0.47229713201522827, 0.46989932656288147, 0.46181339025497437, 0.4466496706008911, 0.4424963593482971, 0.43287020921707153, 0.4185945391654968, 0.42009174823760986, 0.4038964807987213, 0.406955361366272, 0.3948189318180084, 0.3840005397796631, 0.3816974461078644, 0.37755054235458374, 0.37166428565979004, 0.37169232964515686, 0.3571082651615143, 0.35349777340888977, 0.3516789674758911, 0.3529403507709503, 0.34004703164100647, 0.34264886379241943, 0.33763962984085083, 0.32795706391334534, 0.31953251361846924, 0.31489884853363037, 0.30745401978492737, 0.3078809678554535, 0.3043001890182495, 0.2990301847457886, 0.2972310185432434, 0.2953670620918274, 0.2938838601112366, 0.2765219807624817, 0.27971723675727844, 0.2766735851764679, 0.2700055241584778, 0.2711581289768219, 0.26635661721229553, 0.26246973872184753, 0.2597891688346863, 0.25157997012138367, 0.24724946916103363, 0.24496956169605255, 0.23784951865673065], "accuracy": [0.2810725271701813, 0.48791441321372986, 0.5588429570198059, 0.6159027814865112, 0.6593580842018127, 0.7005679607391357, 0.7164179086685181, 0.7300224304199219, 0.7461365461349487, 0.7643640041351318, 0.7716285586357117, 0.7732135653495789, 0.7844406366348267, 0.7903843522071838, 0.7964601516723633, 0.8059701323509216, 0.8144234418869019, 0.8173292875289917, 0.8232730031013489, 0.8297450542449951, 0.8276317715644836, 0.830669641494751, 0.833179235458374, 0.8329150676727295, 0.8425571322441101, 0.8421608805656433, 0.8515387773513794, 0.852859616279602, 0.8516708612442017, 0.8576145768165588, 0.8573504090309143, 0.8654074668884277, 0.8625016212463379, 0.8673887252807617, 0.8658037185668945, 0.8735966086387634, 0.869502067565918, 0.8761062026023865, 0.8735966086387634, 0.8761062026023865, 0.8790120482444763, 0.8794082403182983, 0.8791441321372986, 0.8831065893173218, 0.880729079246521, 0.8874653577804565, 0.8899748921394348, 0.8891823887825012, 0.8916919827461243, 0.8939374089241028, 0.89552241563797, 0.8944657444953918, 0.895918607711792, 0.894069492816925, 0.9022586345672607, 0.9002773761749268, 0.9025228023529053, 0.9049002528190613, 0.9041078090667725, 0.9035794734954834, 0.9076740145683289, 0.9068815112113953, 0.91124027967453, 0.9133535623550415, 0.9129573106765747, 0.9149385690689087], "val_loss": [2.046247720718384, 1.5293500423431396, 1.0539034605026245, 0.835623025894165, 0.7485660910606384, 0.6857874989509583, 0.6445035934448242, 0.6023669242858887, 0.5705989003181458, 0.5555849671363831, 0.5290214419364929, 0.5210163593292236, 0.5011589527130127, 0.48884958028793335, 0.47245919704437256, 0.46535924077033997, 0.4528074562549591, 0.45333048701286316, 0.4401562213897705, 0.43438273668289185, 0.4278477430343628, 0.4270172119140625, 0.4186613857746124, 0.4158264696598053, 0.4085041880607605, 0.4026109278202057, 0.39880046248435974, 0.39821943640708923, 0.39224642515182495, 0.38726937770843506, 0.3822384178638458, 0.3771595060825348, 0.37826070189476013, 0.37863582372665405, 0.37518295645713806, 0.3681515157222748, 0.3649475574493408, 0.36242416501045227, 0.3637847602367401, 0.35973218083381653, 0.35587549209594727, 0.3580445945262909, 0.35431867837905884, 0.36074361205101013, 0.3508079946041107, 0.3466499447822571, 0.3453828990459442, 0.34512272477149963, 0.3414704203605652, 0.3385850787162781, 0.3387911915779114, 0.34150680899620056, 0.3412642478942871, 0.33254316449165344, 0.33715736865997314, 0.3359907567501068, 0.3309285342693329, 0.3303036391735077, 0.33046433329582214, 0.3284962475299835, 0.32896119356155396, 0.32845258712768555, 0.32702580094337463, 0.3314518928527832, 0.3250974416732788, 0.32572537660598755], "val_accuracy": [0.5590000152587891, 0.659333348274231, 0.6796666383743286, 0.706333339214325, 0.7326666712760925, 0.7480000257492065, 0.7586666941642761, 0.7803333401679993, 0.7933333516120911, 0.7956666946411133, 0.812333345413208, 0.8149999976158142, 0.8203333616256714, 0.8339999914169312, 0.8403333425521851, 0.8410000205039978, 0.8446666598320007, 0.8429999947547913, 0.8513333201408386, 0.8500000238418579, 0.856333315372467, 0.8526666760444641, 0.8553333282470703, 0.8569999933242798, 0.8619999885559082, 0.8659999966621399, 0.8633333444595337, 0.8636666536331177, 0.862666666507721, 0.8656666874885559, 0.8676666617393494, 0.8686666488647461, 0.8679999709129333, 0.8663333058357239, 0.8723333477973938, 0.8759999871253967, 0.8766666650772095, 0.8759999871253967, 0.874666690826416, 0.875, 0.875, 0.8790000081062317, 0.8759999871253967, 0.875333309173584, 0.878333330154419, 0.8799999952316284, 0.8759999871253967, 0.8786666393280029, 0.8830000162124634, 0.8806666731834412, 0.8830000162124634, 0.8826666474342346, 0.8809999823570251, 0.8833333253860474, 0.8833333253860474, 0.8826666474342346, 0.8853333592414856, 0.8833333253860474, 0.8863333463668823, 0.8846666812896729, 0.8870000243186951, 0.8870000243186951, 0.8853333592414856, 0.8843333125114441, 0.8863333463668823, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 3, 7, 7, 5, 0, 0, 2], [0, 1, 0, 2, 1, 0, 0, 1], [39, 39, 2, 84], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [54], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 3, 6, 8, 6, 4, 1, 4, 3, 8], [0, 1, 0, 3, 0, 0, 4, 1, 4, 0], [16, 14, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 4, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.multiply(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 8, 0, 3, 1], [2, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 2], [2, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 1, 99, 61, 1]], "fitness": -0.09399999678134918, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 0, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.sqrt(beta), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3089044094085693, 2.3092799186706543, 2.309272289276123, 2.3104610443115234, 2.3087503910064697, 2.310397148132324], "accuracy": [0.09166556596755981, 0.08981640636920929, 0.09285431355237961, 0.09140139818191528, 0.09628847241401672, 0.0940430611371994], "val_loss": [2.307884693145752, 2.307884693145752, 2.307884693145752, 2.307884693145752, 2.307884693145752, 2.307884693145752], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 2, 2, 0, 3], [0, 1, 0, 2], [0, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 1, 3, 1, 2, 0], [16, 99, 19, 99, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.309962272644043, 2.3092234134674072, 2.3091726303100586, 2.3090784549713135, 2.3102855682373047, 2.3093628883361816], "accuracy": [0.0948355570435524, 0.09166556596755981, 0.09192973375320435, 0.0940430611371994, 0.09430722147226334, 0.09377889335155487], "val_loss": [2.3086867332458496, 2.3086867332458496, 2.3086867332458496, 2.3086867332458496, 2.3086867332458496, 2.3086867332458496], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 6, 5, 2, 7, 7, 5, 6, 6], [0, 3, 0, 3, 5, 3, 5, 0, 5], [16, 16, 68], [0, 1], [0], [0], [30], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 5, 1, 2, 1, 4, 5, 0, 6, 8, 2, 8, 7, 7, 6, 6, 4, 3, 0, 3, 9, 8, 5, 1, 9, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 3, 5, 5, 2, 7, 6, 0], [16, 35, 33, 45, 30, 1, 66, 0]], "fitness": -0.09228571504354477, "mapping_values": [1, 9, 5, 4, 2, 21, 12, 9, 3, 2, 1, 1, 1, 46, 29, 17, 8], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(sigma))), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.sqrt(sigma), alpha))), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.multiply(grad, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)), tf.math.square(grad))), tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309636116027832, 2.3100340366363525, 2.3114113807678223, 2.310399055480957, 2.3098552227020264, 2.3112800121307373], "accuracy": [0.09179764986038208, 0.09245806187391281, 0.08836349099874496, 0.0878351628780365, 0.08889182657003403, 0.09259014576673508], "val_loss": [2.3085408210754395, 2.3085408210754395, 2.3085408210754395, 2.3085408210754395, 2.3085408210754395, 2.3085408210754395], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]