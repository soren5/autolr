[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231481075286865, 1.8660215139389038, 1.3945897817611694, 1.0902756452560425, 0.9331091046333313, 0.8401214480400085, 0.770794689655304, 0.7189297676086426, 0.6877131462097168, 0.6572281718254089, 0.634029746055603, 0.6112463474273682, 0.5884600877761841, 0.5709143280982971, 0.5595071315765381, 0.5318443775177002, 0.5305106043815613, 0.5187329053878784, 0.5117957592010498, 0.49620938301086426, 0.48533302545547485, 0.4761959910392761, 0.45963054895401, 0.44902101159095764, 0.4394829571247101, 0.4412851929664612, 0.43266233801841736, 0.42976656556129456, 0.4307762086391449, 0.4199496805667877, 0.40949660539627075, 0.4026237428188324, 0.39389222860336304, 0.38983047008514404, 0.37882888317108154, 0.3763827681541443, 0.37305858731269836, 0.37091976404190063, 0.3619363009929657, 0.3541739881038666, 0.34893789887428284, 0.3434177339076996, 0.3434133231639862, 0.3339254856109619, 0.3331562578678131, 0.32713714241981506, 0.3153035640716553, 0.3201042711734772, 0.31672731041908264, 0.30966514348983765, 0.30475419759750366, 0.30920669436454773, 0.302582323551178, 0.3007090091705322, 0.2911761701107025, 0.28758397698402405, 0.27923113107681274, 0.2813933491706848, 0.2757755219936371, 0.27402323484420776, 0.2618059515953064], "accuracy": [0.28345000743865967, 0.497820645570755, 0.5588429570198059, 0.6205257177352905, 0.6680755615234375, 0.6948884129524231, 0.7219653725624084, 0.7392682433128357, 0.7491744756698608, 0.767930269241333, 0.7695152759552002, 0.7737419009208679, 0.7862898111343384, 0.7918372750282288, 0.798309326171875, 0.8070268034934998, 0.8092722296714783, 0.8090080618858337, 0.8162726163864136, 0.8204993009567261, 0.8260467648506165, 0.828292191028595, 0.8329150676727295, 0.8329150676727295, 0.8438779711723328, 0.8400475382804871, 0.8421608805656433, 0.8433496356010437, 0.8421608805656433, 0.8445383906364441, 0.8570862412452698, 0.8562937378883362, 0.8597279191017151, 0.8553691506385803, 0.8577466607093811, 0.8658037185668945, 0.86553955078125, 0.8658037185668945, 0.869502067565918, 0.8709549307823181, 0.872407853603363, 0.8750495314598083, 0.8762382864952087, 0.8790120482444763, 0.8778232932090759, 0.8816536664962769, 0.886672854423523, 0.8836349248886108, 0.8842953443527222, 0.8877294659614563, 0.8878615498542786, 0.886672854423523, 0.889050304889679, 0.8897107243537903, 0.8953903317451477, 0.8992207050323486, 0.898428201675415, 0.8944657444953918, 0.9000132083892822, 0.9008057117462158, 0.9041078090667725], "val_loss": [2.040973663330078, 1.5055917501449585, 1.0360431671142578, 0.8321409225463867, 0.7418842911720276, 0.6818117499351501, 0.6391066908836365, 0.605514407157898, 0.575862467288971, 0.556531548500061, 0.5400047302246094, 0.5221138000488281, 0.507416307926178, 0.49359551072120667, 0.48421263694763184, 0.47556576132774353, 0.4661078155040741, 0.47034257650375366, 0.4541482627391815, 0.43998458981513977, 0.4448082745075226, 0.43168431520462036, 0.41967537999153137, 0.41863152384757996, 0.4206583797931671, 0.4111579656600952, 0.4059205651283264, 0.4106385111808777, 0.4066242277622223, 0.39812588691711426, 0.3988645076751709, 0.39594465494155884, 0.3884599506855011, 0.39030420780181885, 0.3839755058288574, 0.37766602635383606, 0.3829916715621948, 0.3706660270690918, 0.38225486874580383, 0.37016284465789795, 0.36448267102241516, 0.36629539728164673, 0.36501815915107727, 0.3617652952671051, 0.36044326424598694, 0.3576373755931854, 0.35719355940818787, 0.35678812861442566, 0.3523285686969757, 0.3499504327774048, 0.3508584797382355, 0.34831491112709045, 0.3509693145751953, 0.3480382561683655, 0.3453938066959381, 0.34142568707466125, 0.3437272906303406, 0.33907032012939453, 0.3382776379585266, 0.34120669960975647, 0.34140291810035706], "val_accuracy": [0.5619999766349792, 0.6703333258628845, 0.6880000233650208, 0.7106666564941406, 0.7306666374206543, 0.7506666779518127, 0.765666663646698, 0.7773333191871643, 0.7879999876022339, 0.7973333597183228, 0.8053333163261414, 0.8140000104904175, 0.8143333196640015, 0.8183333277702332, 0.8259999752044678, 0.8306666612625122, 0.8309999704360962, 0.8339999914169312, 0.840666651725769, 0.846666693687439, 0.8389999866485596, 0.8503333330154419, 0.8529999852180481, 0.8569999933242798, 0.8529999852180481, 0.8600000143051147, 0.8616666793823242, 0.8513333201408386, 0.8543333411216736, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8613333106040955, 0.8646666407585144, 0.8640000224113464, 0.8706666827201843, 0.8659999966621399, 0.8723333477973938, 0.8659999966621399, 0.8706666827201843, 0.8730000257492065, 0.871999979019165, 0.871666669845581, 0.8733333349227905, 0.8700000047683716, 0.8740000128746033, 0.8693333268165588, 0.874666690826416, 0.8733333349227905, 0.8726666569709778, 0.8766666650772095, 0.8736666440963745, 0.8759999871253967, 0.8763333559036255, 0.8759999871253967, 0.8823333382606506, 0.8763333559036255, 0.8776666522026062, 0.8793333172798157, 0.8776666522026062, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5, 6], [0, 2, 0, 2, 0, 2], [6, 16, 71], [0, 1], [0], [0], [99], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 13, 7, 6, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032820224761963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 4, 7, 6, 3, 9], [0, 1, 0, 3, 2, 5, 4], [16, 16, 66], [0, 1], [0], [0], [28], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 17, 10, 7, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta))))), tf.math.multiply(grad, grad)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036062717437744, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 4], [0, 2, 0, 0, 4, 1], [90, 16, 3], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 3, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.3500280380249023, 3.0355188846588135, 4.908405303955078, 7.203098297119141, 9.113138198852539, 10.26220417022705], "accuracy": [0.09496764093637466, 0.09959053993225098, 0.10527011007070541, 0.09787346422672272, 0.1022322028875351, 0.10117553919553757], "val_loss": [2.4150490760803223, 3.2846314907073975, 4.923262596130371, 6.520188808441162, 7.703190326690674, 8.467334747314453], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 3, 0, 3, 8], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 7, 1, 2, 6, 5, 3], [0, 2, 0, 1, 0, 0, 6, 1], [99, 81, 88, 84], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 4, 2, 1, 16, 8, 8, 4, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]