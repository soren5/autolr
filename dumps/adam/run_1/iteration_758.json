[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22241473197937, 1.8597533702850342, 1.3786628246307373, 1.0639362335205078, 0.9190588593482971, 0.8381885290145874, 0.7570688128471375, 0.7161513566970825, 0.6777998208999634, 0.6431196928024292, 0.6159300804138184, 0.5901697278022766, 0.5820369124412537, 0.553580105304718, 0.5492036938667297, 0.5328649878501892, 0.5235579013824463, 0.5073287487030029, 0.5003261566162109, 0.4838865399360657, 0.4794114828109741, 0.46552184224128723, 0.45478555560112, 0.4434267282485962, 0.4327118694782257, 0.4253016412258148, 0.4251309037208557, 0.41538214683532715, 0.410785436630249, 0.39885514974594116, 0.40095755457878113, 0.3822454512119293, 0.38552984595298767, 0.3687724769115448, 0.37136605381965637, 0.36417677998542786, 0.357736736536026, 0.35282739996910095, 0.34411269426345825, 0.34540504217147827, 0.345075398683548, 0.33443430066108704, 0.3317055106163025, 0.33244550228118896, 0.318971186876297, 0.3117051124572754, 0.32023894786834717], "accuracy": [0.27182671427726746, 0.5025756359100342, 0.5716549754142761, 0.6312243938446045, 0.6749438643455505, 0.69673752784729, 0.7255316376686096, 0.7403249144554138, 0.7567031979560852, 0.7664773464202881, 0.7807422876358032, 0.7852331399917603, 0.7905164361000061, 0.7998943328857422, 0.7973847389221191, 0.8090080618858337, 0.8092722296714783, 0.8158763647079468, 0.8169330358505249, 0.828292191028595, 0.830669641494751, 0.8367455005645752, 0.8347642421722412, 0.8438779711723328, 0.848368763923645, 0.8473120927810669, 0.8438779711723328, 0.8491612672805786, 0.8492933511734009, 0.8561616539955139, 0.857218325138092, 0.8613129258155823, 0.8540483713150024, 0.8650112152099609, 0.8664641380310059, 0.8701624870300293, 0.8712190985679626, 0.871879518032074, 0.8771628737449646, 0.8714832663536072, 0.8750495314598083, 0.8813894987106323, 0.8790120482444763, 0.8790120482444763, 0.883238673210144, 0.8873332738876343, 0.8857482671737671], "val_loss": [2.042654037475586, 1.515559196472168, 1.0442618131637573, 0.8343858122825623, 0.7498395442962646, 0.6990505456924438, 0.6564229130744934, 0.6210741400718689, 0.5952383875846863, 0.5711521506309509, 0.5569407343864441, 0.5361084938049316, 0.5215135216712952, 0.5097239017486572, 0.4944820702075958, 0.4902074337005615, 0.4768921732902527, 0.4747125506401062, 0.46240347623825073, 0.45952799916267395, 0.4489729106426239, 0.44174763560295105, 0.43350017070770264, 0.427834153175354, 0.4208618104457855, 0.4188351333141327, 0.4120655953884125, 0.40889689326286316, 0.4105895459651947, 0.4052751958370209, 0.3970271944999695, 0.3996258080005646, 0.3893469274044037, 0.39354753494262695, 0.3873993456363678, 0.3861149549484253, 0.38132762908935547, 0.3811090588569641, 0.3785730004310608, 0.3762117028236389, 0.3673548996448517, 0.37246689200401306, 0.37312552332878113, 0.3709156811237335, 0.36620691418647766, 0.367774099111557, 0.36817872524261475], "val_accuracy": [0.5546666383743286, 0.6480000019073486, 0.6800000071525574, 0.7036666870117188, 0.7239999771118164, 0.7386666536331177, 0.749666690826416, 0.7609999775886536, 0.7666666507720947, 0.7829999923706055, 0.7826666831970215, 0.7986666560173035, 0.8016666769981384, 0.7993333339691162, 0.8169999718666077, 0.8183333277702332, 0.8236666917800903, 0.8270000219345093, 0.8266666531562805, 0.8220000267028809, 0.8316666483879089, 0.8386666774749756, 0.8383333086967468, 0.8416666388511658, 0.8450000286102295, 0.8463333249092102, 0.8506666421890259, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8553333282470703, 0.8603333234786987, 0.8606666922569275, 0.856333315372467, 0.8603333234786987, 0.8619999885559082, 0.8640000224113464, 0.8659999966621399, 0.8663333058357239, 0.8646666407585144, 0.8683333396911621, 0.8713333606719971, 0.8646666407585144, 0.8709999918937683, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1], [0, 4], [0, 0], [99, 63], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [24, 77, 96, 99, 61, 1]], "fitness": -0.11028571426868439, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 4, 2, 2, 2, 11, 5, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3060078620910645, 2.3045976161956787, 2.302733898162842, 2.3012466430664062, 2.300901174545288, 2.3004519939422607, 2.3025779724121094, 2.301436424255371, 2.299726963043213, 2.298757553100586, 2.299081563949585, 2.3006484508514404, 2.298877000808716, 2.298910617828369, 2.2996814250946045, 2.297854423522949, 2.299100875854492, 2.2990503311157227, 2.2988641262054443, 2.2979671955108643, 2.299405813217163, 2.2978157997131348, 2.297515869140625, 2.2985081672668457, 2.298581600189209, 2.2990000247955322, 2.2988369464874268, 2.2973599433898926, 2.298248529434204, 2.2974276542663574, 2.297804594039917, 2.296816349029541, 2.295508623123169, 2.297250270843506, 2.297961950302124, 2.297574043273926, 2.2974674701690674, 2.2967309951782227, 2.298029661178589], "accuracy": [0.09457138925790787, 0.09615638852119446, 0.10117553919553757, 0.10236428678035736, 0.10777968913316727, 0.10751552134752274, 0.10962884873151779, 0.108440101146698, 0.10896842926740646, 0.10738343745470047, 0.1088363528251648, 0.10606260597705841, 0.11398758739233017, 0.11121384054422379, 0.10857218503952026, 0.107647605240345, 0.1072513535618782, 0.11174217611551285, 0.1142517477273941, 0.10698718577623367, 0.10619468986988068, 0.1158367469906807, 0.1162329912185669, 0.10276053100824356, 0.10936468094587326, 0.10870426893234253, 0.10936468094587326, 0.11411966383457184, 0.1088363528251648, 0.11596883088350296, 0.108440101146698, 0.11319508403539658, 0.11478008329868317, 0.11570466309785843, 0.11398758739233017, 0.11834631860256195, 0.10936468094587326, 0.11147800832986832, 0.10870426893234253], "val_loss": [2.3018546104431152, 2.3003814220428467, 2.2995247840881348, 2.298905372619629, 2.2984256744384766, 2.29803204536438, 2.2976973056793213, 2.297408103942871, 2.2971553802490234, 2.296923875808716, 2.296715259552002, 2.2965259552001953, 2.296351671218872, 2.296189546585083, 2.2960410118103027, 2.2959022521972656, 2.295771598815918, 2.295647144317627, 2.295530319213867, 2.2954180240631104, 2.29531192779541, 2.295210838317871, 2.2951152324676514, 2.2950234413146973, 2.2949349880218506, 2.294851541519165, 2.294771909713745, 2.2946934700012207, 2.2946178913116455, 2.2945456504821777, 2.2944753170013428, 2.2944071292877197, 2.2943410873413086, 2.294276475906372, 2.294215440750122, 2.294154644012451, 2.294095993041992, 2.294039726257324, 2.2939844131469727], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10233332961797714, 0.10466666519641876, 0.10566666722297668, 0.10733333230018616, 0.10899999737739563, 0.11033333092927933, 0.11100000143051147, 0.11133333295583725, 0.1120000034570694, 0.1120000034570694, 0.11233333498239517, 0.1133333370089531, 0.11433333158493042, 0.1146666631102562, 0.1146666631102562, 0.11500000208616257, 0.11566666513681412, 0.11666666716337204, 0.11733333021402359, 0.11733333021402359, 0.11800000071525574, 0.11866666376590729, 0.11866666376590729, 0.11833333224058151, 0.11933333426713943, 0.11966666579246521, 0.11966666579246521, 0.12033333629369736, 0.12099999934434891, 0.12133333086967468, 0.12166666984558105, 0.12200000137090683, 0.12166666984558105, 0.12166666984558105, 0.12133333086967468, 0.12166666984558105, 0.12166666984558105]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [19, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.1080000028014183, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [8.959029197692871, 147.70657348632812, 706.4637451171875, 1865.9295654296875, 3694.04248046875, 6369.3935546875, 9884.263671875, 14405.6923828125, 20029.619140625], "accuracy": [0.10249637067317963, 0.09787346422672272, 0.09972262382507324, 0.10236428678035736, 0.10394927859306335, 0.10527011007070541, 0.10342095047235489, 0.10091137140989304, 0.09813763201236725], "val_loss": [27.832244873046875, 194.354736328125, 576.8859252929688, 1177.04052734375, 2063.9970703125, 3235.576904296875, 4661.08642578125, 6285.33349609375, 8177.3017578125], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.1120000034570694, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 5, 3, 0, 3, 5], [0, 2, 0, 3], [9, 16], [0, 1], [0], [0], [94], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3037891387939453, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [2, 1, 0, 2, 3], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [78], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 9, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 1, 0, 1, 1, 1, 0, 1, 1, 16, 9, 7, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3107714653015137, 2.3171913623809814, 2.3239526748657227, 2.3273470401763916, 2.333822250366211, 2.3389580249786377], "accuracy": [0.09668471664190292, 0.09615638852119446, 0.1010434553027153, 0.09998679161071777, 0.09866596013307571, 0.09985470771789551], "val_loss": [2.3089375495910645, 2.309661388397217, 2.311232805252075, 2.3134429454803467, 2.3161637783050537, 2.31929087638855], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]