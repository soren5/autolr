[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222820520401001, 1.8670111894607544, 1.380597472190857, 1.0946712493896484, 0.9358687996864319, 0.839514434337616, 0.7735938429832458, 0.7288983464241028, 0.6880334615707397, 0.6558080315589905, 0.6316918134689331, 0.6059702634811401, 0.58467036485672, 0.5757881999015808, 0.5602328777313232, 0.5431652665138245, 0.5305455923080444, 0.5174319744110107, 0.5114209651947021, 0.49262338876724243, 0.481134831905365, 0.4790034592151642, 0.46987399458885193, 0.45863044261932373, 0.4483221471309662, 0.439165860414505, 0.437213271856308, 0.433701753616333, 0.4195931851863861, 0.4142470955848694, 0.40439194440841675, 0.4023979902267456, 0.4012009799480438, 0.3967653214931488, 0.38943037390708923, 0.38573506474494934, 0.3709063231945038, 0.36035656929016113, 0.35342878103256226, 0.35744670033454895, 0.3492368161678314, 0.35126200318336487, 0.33856233954429626, 0.3428257405757904, 0.3322280943393707, 0.32259348034858704, 0.3149375021457672, 0.32084083557128906, 0.3184949457645416, 0.3054652512073517, 0.30845609307289124, 0.2986920177936554, 0.29652050137519836, 0.29356640577316284, 0.2869374752044678, 0.2831721007823944, 0.2790580987930298, 0.28088444471359253, 0.27822941541671753, 0.26775768399238586, 0.2664877772331238, 0.265484094619751, 0.25665831565856934, 0.24987788498401642, 0.24960161745548248, 0.24467159807682037, 0.2457534521818161, 0.24244676530361176, 0.2355685830116272, 0.23484621942043304, 0.2233135998249054, 0.22977998852729797, 0.22261299192905426, 0.21990206837654114, 0.21925866603851318, 0.21002309024333954], "accuracy": [0.2685246467590332, 0.5027077198028564, 0.5756174921989441, 0.617751955986023, 0.6667547225952148, 0.700171709060669, 0.7277770638465881, 0.7421740889549255, 0.752212405204773, 0.7629110813140869, 0.7711002230644226, 0.7832518815994263, 0.7918372750282288, 0.7950072884559631, 0.796328067779541, 0.805177628993988, 0.8119139075279236, 0.8158763647079468, 0.8203672170639038, 0.8212917447090149, 0.8257825970649719, 0.8297450542449951, 0.8339717388153076, 0.8341038227081299, 0.8392550349235535, 0.8416325449943542, 0.8438779711723328, 0.8477083444595337, 0.8481045961380005, 0.8520671129226685, 0.8552370667457581, 0.8564258217811584, 0.8577466607093811, 0.8574824929237366, 0.859199583530426, 0.8603883385658264, 0.8642187118530273, 0.8660678863525391, 0.8721436858177185, 0.8708229064941406, 0.8741249442100525, 0.8708229064941406, 0.8799365758895874, 0.8782195448875427, 0.8817857503890991, 0.8800686597824097, 0.8853520154953003, 0.8838990926742554, 0.8828424215316772, 0.8881257176399231, 0.8899748921394348, 0.8912957310676575, 0.8887861371040344, 0.893541157245636, 0.8986923694610596, 0.8968431949615479, 0.9010698795318604, 0.8951261639595032, 0.8992207050323486, 0.9014661312103271, 0.9054285883903503, 0.904768168926239, 0.9089948534965515, 0.9076740145683289, 0.9079381823539734, 0.9119006991386414, 0.9078060984611511, 0.9113723635673523, 0.9142781496047974, 0.9152027368545532, 0.9189010858535767, 0.9182406663894653, 0.9194294214248657, 0.9185048341751099, 0.9214106202125549, 0.9231277108192444], "val_loss": [2.039619207382202, 1.5112649202346802, 1.0433311462402344, 0.8357160091400146, 0.7558342218399048, 0.7019327878952026, 0.6566693782806396, 0.621120035648346, 0.6004082560539246, 0.5759108662605286, 0.5571355819702148, 0.5385951399803162, 0.5268086194992065, 0.5132688283920288, 0.5038748383522034, 0.4927813410758972, 0.48156973719596863, 0.4736117720603943, 0.4629686772823334, 0.4604235291481018, 0.4539562165737152, 0.44702601432800293, 0.4445747137069702, 0.43161457777023315, 0.42472970485687256, 0.42848828434944153, 0.42134493589401245, 0.4174942076206207, 0.40743350982666016, 0.4031071364879608, 0.4037487804889679, 0.4015595316886902, 0.3966732919216156, 0.3988894820213318, 0.3914147615432739, 0.38926297426223755, 0.38257864117622375, 0.3826245963573456, 0.37858715653419495, 0.3747522830963135, 0.3770454525947571, 0.36988288164138794, 0.37268805503845215, 0.3755360245704651, 0.36690637469291687, 0.36716702580451965, 0.35858654975891113, 0.3709690272808075, 0.35404708981513977, 0.35679760575294495, 0.35897600650787354, 0.3529100716114044, 0.35219264030456543, 0.35153767466545105, 0.34792736172676086, 0.3471005856990814, 0.35805442929267883, 0.34950920939445496, 0.34575802087783813, 0.3479463756084442, 0.3455393612384796, 0.34306833148002625, 0.34186670184135437, 0.3459465801715851, 0.34127309918403625, 0.34217479825019836, 0.34334638714790344, 0.34504708647727966, 0.33905038237571716, 0.34011805057525635, 0.3400089740753174, 0.33701378107070923, 0.3382943570613861, 0.3419971168041229, 0.3393925428390503, 0.3409343361854553], "val_accuracy": [0.5640000104904175, 0.6639999747276306, 0.6863333582878113, 0.7126666903495789, 0.7266666889190674, 0.7450000047683716, 0.7559999823570251, 0.7699999809265137, 0.7786666750907898, 0.7796666622161865, 0.7976666688919067, 0.7916666865348816, 0.8050000071525574, 0.8086666464805603, 0.8186666369438171, 0.8230000138282776, 0.8266666531562805, 0.8306666612625122, 0.8363333344459534, 0.8336666822433472, 0.8420000076293945, 0.8416666388511658, 0.8379999995231628, 0.8453333377838135, 0.8460000157356262, 0.843666672706604, 0.846666693687439, 0.8493333458900452, 0.8536666631698608, 0.8553333282470703, 0.8523333072662354, 0.8533333539962769, 0.8556666374206543, 0.8560000061988831, 0.8566666841506958, 0.8550000190734863, 0.859666645526886, 0.859333336353302, 0.8606666922569275, 0.8659999966621399, 0.8603333234786987, 0.8616666793823242, 0.862666666507721, 0.8613333106040955, 0.8683333396911621, 0.8669999837875366, 0.8683333396911621, 0.8629999756813049, 0.8696666955947876, 0.8656666874885559, 0.8686666488647461, 0.8703333139419556, 0.8690000176429749, 0.8709999918937683, 0.8703333139419556, 0.8700000047683716, 0.8709999918937683, 0.8730000257492065, 0.8740000128746033, 0.8730000257492065, 0.874666690826416, 0.8766666650772095, 0.874666690826416, 0.8759999871253967, 0.8759999871253967, 0.8773333430290222, 0.874666690826416, 0.878000020980835, 0.8773333430290222, 0.8809999823570251, 0.8826666474342346, 0.8790000081062317, 0.8803333044052124, 0.8820000290870667, 0.8809999823570251, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 3, 9, 8, 2], [0, 1, 0, 2, 2, 1], [39, 39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 0, 1, 2, 4, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 21, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 8, 5, 3, 2, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [676.1166381835938, 217458112.0, 140.3843231201172, 33196.12890625, 8003127.5, 1905590656.0], "accuracy": [0.09377889335155487, 0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [181870.890625, 5.587986946105957, 1331.4141845703125, 317170.25, 75633832.0, 18051264512.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 1], [2, 1, 2, 2, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 9, 2, 8], [4, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 56, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 0, 10, 7, 3, 2, 2, 1, 1, 1, 15, 8, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, alpha), tf.math.subtract(grad, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 1, 8, 8], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 2, 0, 0, 3, 4, 2, 0], [83, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 2, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 6, 8, 8], [0, 2, 0, 3, 4], [16, 16], [0, 0], [0, 9], [1], [27], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 13, 8, 5, 2, 2, 2, 0, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303738832473755, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]