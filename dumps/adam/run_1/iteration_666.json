[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222885847091675, 1.8696043491363525, 1.3978039026260376, 1.0949335098266602, 0.9411315321922302, 0.8437790870666504, 0.7860119938850403, 0.7322149276733398, 0.6930188536643982, 0.6673358082771301, 0.6414812803268433, 0.6125335097312927, 0.597183883190155, 0.590911328792572, 0.5700641870498657, 0.549628734588623, 0.5372932553291321, 0.5315404534339905, 0.5202564597129822, 0.5075519680976868, 0.49472418427467346, 0.48988643288612366, 0.4767874479293823, 0.46720045804977417, 0.4629077613353729, 0.44912150502204895, 0.4405577480792999, 0.43728211522102356, 0.43195247650146484, 0.4228392243385315, 0.41885578632354736, 0.4131898880004883, 0.403647243976593, 0.3988904356956482, 0.38632890582084656, 0.38664838671684265, 0.3725493848323822, 0.3696213662624359, 0.3673476576805115, 0.3662112057209015, 0.35689547657966614, 0.3527642786502838, 0.3445627689361572, 0.34060969948768616, 0.3334157466888428, 0.3358769118785858, 0.3250107169151306, 0.32896149158477783, 0.32539212703704834, 0.31970924139022827, 0.31807225942611694, 0.30641067028045654, 0.30549106001853943, 0.29583540558815, 0.29580649733543396, 0.287798136472702, 0.28766149282455444, 0.279041588306427, 0.2739209234714508, 0.280337393283844, 0.2730981707572937, 0.2651645243167877, 0.26531773805618286, 0.26314017176628113, 0.24745586514472961, 0.2593802511692047, 0.24891482293605804, 0.24785968661308289, 0.24750836193561554, 0.2384694367647171], "accuracy": [0.2642979919910431, 0.4807819426059723, 0.5633337497711182, 0.6189407110214233, 0.6619997620582581, 0.7033417224884033, 0.7207766771316528, 0.7347774505615234, 0.7524765729904175, 0.7598732113838196, 0.7684586048126221, 0.7745344042778015, 0.7828556299209595, 0.7845727205276489, 0.7969884872436523, 0.8000264167785645, 0.8076872229576111, 0.8104609847068787, 0.81112140417099, 0.817989706993103, 0.8253863453865051, 0.830669641494751, 0.832650899887085, 0.8341038227081299, 0.8378021121025085, 0.8384625315666199, 0.8421608805656433, 0.8444063067436218, 0.8486329317092896, 0.8531237840652466, 0.8531237840652466, 0.8541803956031799, 0.8532558679580688, 0.8588033318519592, 0.8658037185668945, 0.8613129258155823, 0.8701624870300293, 0.869502067565918, 0.870030403137207, 0.869502067565918, 0.8742570281028748, 0.8753136992454529, 0.8774270415306091, 0.8786157965660095, 0.8829745054244995, 0.8824461698532104, 0.8811253309249878, 0.8833707571029663, 0.8831065893173218, 0.8907673954963684, 0.8841632604598999, 0.8877294659614563, 0.8939374089241028, 0.8965790271759033, 0.8951261639595032, 0.8965790271759033, 0.8986923694610596, 0.8985602855682373, 0.8997490406036377, 0.9021265506744385, 0.9005415439605713, 0.904768168926239, 0.9006736278533936, 0.9059569239616394, 0.9100515246391296, 0.9052965044975281, 0.9096552729606628, 0.9120327830314636, 0.9095231890678406, 0.9148064851760864], "val_loss": [2.043689012527466, 1.5235488414764404, 1.046384572982788, 0.833920419216156, 0.7497574687004089, 0.6921417713165283, 0.6478983163833618, 0.6146619915962219, 0.5859405994415283, 0.5648909211158752, 0.5492427349090576, 0.529757559299469, 0.5169832110404968, 0.5030970573425293, 0.4905664920806885, 0.4839479625225067, 0.47776028513908386, 0.47043660283088684, 0.45267361402511597, 0.4500855803489685, 0.43956103920936584, 0.4397587180137634, 0.4307902753353119, 0.42205411195755005, 0.4198436737060547, 0.4167404770851135, 0.4112548530101776, 0.40978172421455383, 0.40374118089675903, 0.40397942066192627, 0.39806339144706726, 0.396880567073822, 0.3991445302963257, 0.39276888966560364, 0.38704830408096313, 0.3865416347980499, 0.38238033652305603, 0.38033291697502136, 0.3792728781700134, 0.3762873113155365, 0.37246012687683105, 0.36856338381767273, 0.36554470658302307, 0.36534199118614197, 0.3662891983985901, 0.3643667697906494, 0.3626730144023895, 0.36484748125076294, 0.35907652974128723, 0.3686100244522095, 0.3574582636356354, 0.3561297655105591, 0.35589855909347534, 0.349985808134079, 0.35156363248825073, 0.35377147793769836, 0.352213978767395, 0.35287004709243774, 0.34924614429473877, 0.3434445858001709, 0.3451966643333435, 0.3434891402721405, 0.34430813789367676, 0.3450775444507599, 0.34835755825042725, 0.3445485532283783, 0.34229907393455505, 0.34541216492652893, 0.3449380695819855, 0.34575191140174866], "val_accuracy": [0.515666663646698, 0.6443333625793457, 0.6733333468437195, 0.7009999752044678, 0.7260000109672546, 0.7379999756813049, 0.7559999823570251, 0.7663333415985107, 0.7716666460037231, 0.7946666479110718, 0.7870000004768372, 0.8046666383743286, 0.8113333582878113, 0.8180000185966492, 0.8206666707992554, 0.8263333439826965, 0.8253333568572998, 0.8273333311080933, 0.8360000252723694, 0.8349999785423279, 0.8426666855812073, 0.8426666855812073, 0.8423333168029785, 0.846666693687439, 0.8506666421890259, 0.846666693687439, 0.8473333120346069, 0.8493333458900452, 0.8506666421890259, 0.8519999980926514, 0.8550000190734863, 0.8539999723434448, 0.8510000109672546, 0.8533333539962769, 0.8556666374206543, 0.8569999933242798, 0.8579999804496765, 0.8556666374206543, 0.8633333444595337, 0.8573333621025085, 0.8610000014305115, 0.862333357334137, 0.8636666536331177, 0.8613333106040955, 0.859333336353302, 0.8653333187103271, 0.8633333444595337, 0.8613333106040955, 0.862666666507721, 0.8656666874885559, 0.8643333315849304, 0.8653333187103271, 0.8653333187103271, 0.8676666617393494, 0.8696666955947876, 0.8696666955947876, 0.8663333058357239, 0.8723333477973938, 0.8723333477973938, 0.8756666779518127, 0.8733333349227905, 0.8730000257492065, 0.8709999918937683, 0.8730000257492065, 0.8766666650772095, 0.8743333220481873, 0.8740000128746033, 0.8743333220481873, 0.8740000128746033, 0.875]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038322925567627, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 2, 7], [0, 1, 0, 2], [39, 39, 37], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 2, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035030364990234, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 6, 0, 3, 7, 0, 6, 7, 1, 7, 9, 5, 0, 2], [0, 4, 2, 3, 1, 0, 1, 7, 0], [99, 17, 5, 89], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 6, 6, 8, 1, 4, 1, 6, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 27, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 24, 15, 9, 4, 21, 11, 10, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(sigma))), tf.math.negative(alpha)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(alpha, tf.math.sqrt(beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3, 6], [0, 1, 0, 1, 3, 3], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [2, 1, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 12, 6, 6, 2, 1, 0, 1, 0, 2, 1, 1, 0, 20, 11, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.sqrt(beta)))", "other_info": {"loss": [2.3097870349884033, 2.3097610473632812, 2.3099076747894287, 2.310302257537842, 2.3091766834259033, 2.311338424682617], "accuracy": [0.08809932321310043, 0.09708096832036972, 0.09325055778026581, 0.09351472556591034, 0.09166556596755981, 0.08770307898521423], "val_loss": [2.308936357498169, 2.308936357498169, 2.308936357498169, 2.308936357498169, 2.308936357498169, 2.308936357498169], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]