[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224179744720459, 1.8670459985733032, 1.3927730321884155, 1.0846378803253174, 0.916083812713623, 0.8275278806686401, 0.7590780854225159, 0.7210999131202698, 0.6782740354537964, 0.6506200432777405, 0.6245560050010681, 0.6033889651298523, 0.5886774063110352, 0.5723428726196289, 0.5501306653022766, 0.5416839122772217, 0.5257718563079834, 0.5096797347068787, 0.49481871724128723, 0.49245280027389526, 0.4758989214897156, 0.4751960337162018, 0.45843005180358887, 0.4502089321613312, 0.4491076171398163, 0.4444129765033722, 0.4317931532859802, 0.42806077003479004, 0.4186463952064514, 0.41103070974349976, 0.40505450963974, 0.398361474275589, 0.39274880290031433, 0.39112168550491333, 0.3811587691307068, 0.3800216615200043, 0.3711482584476471, 0.35897210240364075, 0.3560515344142914, 0.3554309606552124, 0.3487829864025116, 0.35403427481651306, 0.33657580614089966, 0.3384437561035156, 0.33430325984954834, 0.32622063159942627, 0.32283952832221985, 0.31244945526123047, 0.31507745385169983, 0.3122842609882355, 0.3031521737575531, 0.30207547545433044, 0.2936350703239441, 0.2900135815143585, 0.2900644540786743, 0.28957974910736084, 0.2790103256702423, 0.275394469499588, 0.2718600630760193, 0.27814212441444397, 0.2630634009838104, 0.2632359266281128, 0.2584390640258789, 0.2583868205547333, 0.2522718012332916, 0.2518351674079895, 0.24442768096923828, 0.2439856380224228, 0.23759467899799347, 0.23611782491207123, 0.2230215072631836, 0.22449465095996857, 0.22906820476055145, 0.2258663922548294, 0.2204102873802185, 0.21283967792987823, 0.20756573975086212, 0.20786486566066742, 0.2070169746875763, 0.2054653912782669, 0.19750246405601501, 0.19292275607585907], "accuracy": [0.26337340474128723, 0.4939902126789093, 0.5624092221260071, 0.6239598393440247, 0.6744155287742615, 0.705058753490448, 0.72672039270401, 0.7412495017051697, 0.7518161535263062, 0.7662131786346436, 0.7703077793121338, 0.7815347909927368, 0.7854973077774048, 0.7923656105995178, 0.8031964302062988, 0.8107251524925232, 0.8131026029586792, 0.8187822103500366, 0.8202351331710815, 0.8234050869941711, 0.8293488025665283, 0.8342359066009521, 0.8345000743865967, 0.8378021121025085, 0.8368775844573975, 0.8437458872795105, 0.8474441766738892, 0.8492933511734009, 0.8512746095657349, 0.8582749962806702, 0.8582749962806702, 0.8549728989601135, 0.8634262084960938, 0.8640866279602051, 0.8668603897094727, 0.8619733452796936, 0.8688416481018066, 0.8691058158874512, 0.8720116019248962, 0.8757099509239197, 0.8771628737449646, 0.8725399374961853, 0.8821820020675659, 0.8787478804588318, 0.8799365758895874, 0.8856161832809448, 0.8837670087814331, 0.8862766027450562, 0.884691596031189, 0.8889182209968567, 0.8899748921394348, 0.8905032277107239, 0.8924844861030579, 0.8957865834236145, 0.8980319499969482, 0.8952582478523254, 0.8994848728179932, 0.9006736278533936, 0.89552241563797, 0.9008057117462158, 0.9071456789970398, 0.9025228023529053, 0.9072777628898621, 0.9056927561759949, 0.9091269373893738, 0.909259021282196, 0.9132214784622192, 0.9096552729606628, 0.9104477763175964, 0.9133535623550415, 0.9187690019607544, 0.9194294214248657, 0.9179764986038208, 0.9186369180679321, 0.9177123308181763, 0.921938955783844, 0.9232597947120667, 0.9211464524269104, 0.9249768853187561, 0.9231277108192444, 0.9260335564613342, 0.9292035102844238], "val_loss": [2.043333053588867, 1.5214937925338745, 1.0568323135375977, 0.8471390604972839, 0.7561309933662415, 0.7047985196113586, 0.6543336510658264, 0.6257404685020447, 0.5980271697044373, 0.5731694102287292, 0.5497580766677856, 0.5332517623901367, 0.5254507660865784, 0.5088186264038086, 0.5007806420326233, 0.48537135124206543, 0.4774256944656372, 0.46770063042640686, 0.46226635575294495, 0.4596481919288635, 0.4435109496116638, 0.44059544801712036, 0.43450772762298584, 0.4341156482696533, 0.42617979645729065, 0.42153069376945496, 0.416441947221756, 0.41081178188323975, 0.40659984946250916, 0.4041980803012848, 0.4007963538169861, 0.4020352363586426, 0.401143342256546, 0.39141181111335754, 0.38954928517341614, 0.38808637857437134, 0.3850013315677643, 0.3869535028934479, 0.38203418254852295, 0.3779282569885254, 0.3771933615207672, 0.3792937099933624, 0.37232333421707153, 0.3747921884059906, 0.3728669285774231, 0.3703618049621582, 0.36643069982528687, 0.36986324191093445, 0.3608658015727997, 0.36239489912986755, 0.3579833209514618, 0.3617606461048126, 0.359109103679657, 0.3571300804615021, 0.3557896316051483, 0.3526712656021118, 0.3555217981338501, 0.3634616434574127, 0.3599841594696045, 0.3491189777851105, 0.3556175231933594, 0.35203588008880615, 0.34478268027305603, 0.3476760685443878, 0.35334378480911255, 0.3509875535964966, 0.34621497988700867, 0.3396979570388794, 0.34619140625, 0.3486930727958679, 0.34634748101234436, 0.3448024392127991, 0.3383108377456665, 0.3430430591106415, 0.3500969111919403, 0.34463274478912354, 0.3389960825443268, 0.34006020426750183, 0.33878111839294434, 0.33677247166633606, 0.3377213180065155, 0.34391653537750244], "val_accuracy": [0.5366666913032532, 0.6666666865348816, 0.6726666688919067, 0.7006666660308838, 0.7293333411216736, 0.7419999837875366, 0.7573333382606506, 0.7663333415985107, 0.7736666798591614, 0.7906666398048401, 0.7956666946411133, 0.8043333292007446, 0.8003333210945129, 0.815666675567627, 0.8176666498184204, 0.8240000009536743, 0.8273333311080933, 0.8296666741371155, 0.8363333344459534, 0.8339999914169312, 0.8393333554267883, 0.8426666855812073, 0.8453333377838135, 0.8420000076293945, 0.8510000109672546, 0.8489999771118164, 0.8473333120346069, 0.8503333330154419, 0.8516666889190674, 0.8536666631698608, 0.8536666631698608, 0.8526666760444641, 0.8556666374206543, 0.8566666841506958, 0.8539999723434448, 0.859333336353302, 0.8573333621025085, 0.8546666502952576, 0.8569999933242798, 0.862333357334137, 0.8633333444595337, 0.8650000095367432, 0.8646666407585144, 0.8640000224113464, 0.8629999756813049, 0.8646666407585144, 0.8706666827201843, 0.8656666874885559, 0.8706666827201843, 0.8669999837875366, 0.8723333477973938, 0.8690000176429749, 0.8706666827201843, 0.8683333396911621, 0.874666690826416, 0.8736666440963745, 0.8709999918937683, 0.8669999837875366, 0.8733333349227905, 0.875, 0.871666669845581, 0.8740000128746033, 0.878000020980835, 0.8763333559036255, 0.8723333477973938, 0.8740000128746033, 0.8766666650772095, 0.8799999952316284, 0.8809999823570251, 0.8769999742507935, 0.8796666860580444, 0.878333330154419, 0.8826666474342346, 0.8809999823570251, 0.8769999742507935, 0.8826666474342346, 0.8863333463668823, 0.8823333382606506, 0.8853333592414856, 0.8846666812896729, 0.8813333511352539, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [7, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 6, 9], [3, 2, 0, 3], [82, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [39, 99, 32, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 1, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [3, 2, 0, 3], [71, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 4, 0], [16, 18, 96, 99, 72, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 10, 6, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 1, 0, 5], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 4, 8, 6, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(grad), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303567409515381, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16, 8], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 3, 1, 3, 1, 2, 0, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.09000000357627869, "mapping_values": [1, 6, 3, 3, 2, 9, 6, 3, 3, 2, 1, 1, 1, 22, 11, 11, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(alpha, sigma)))), alpha), tf.math.add(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.310811996459961, 2.30987286567688, 2.3104302883148193, 2.3104870319366455, 2.309084415435791, 2.309386730194092, 2.310103178024292], "accuracy": [0.08796724677085876, 0.09245806187391281, 0.09140139818191528, 0.08770307898521423, 0.09853387624025345, 0.0882314071059227, 0.08796724677085876], "val_loss": [2.308148145675659, 2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716, 2.308154344558716], "val_accuracy": [0.09033333510160446, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]