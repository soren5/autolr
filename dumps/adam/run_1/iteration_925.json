[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224883556365967, 1.8715472221374512, 1.3953258991241455, 1.0935313701629639, 0.9515505433082581, 0.8424824476242065, 0.7823560833930969, 0.7306920289993286, 0.6842055916786194, 0.6642513871192932, 0.6356973648071289, 0.6093350052833557, 0.5888631343841553, 0.5668671131134033, 0.5602523684501648, 0.5358870625495911, 0.5273061394691467, 0.5123662948608398, 0.5056087970733643, 0.4847828447818756, 0.48010358214378357, 0.47247111797332764, 0.46952736377716064, 0.4559670388698578, 0.44935765862464905, 0.43981727957725525, 0.4284161627292633, 0.42036810517311096, 0.42124542593955994, 0.41179338097572327, 0.4037970304489136, 0.39925190806388855, 0.40037426352500916, 0.3835955858230591, 0.38643878698349, 0.3792578876018524, 0.37537381052970886, 0.36754098534584045, 0.3609095513820648, 0.35737359523773193, 0.3514801859855652, 0.34056979417800903, 0.3433935344219208, 0.33443713188171387, 0.33381229639053345, 0.3267599940299988, 0.32418182492256165, 0.31746846437454224, 0.31670254468917847, 0.3113449215888977, 0.30613887310028076, 0.30439215898513794, 0.29632389545440674, 0.29435455799102783, 0.28605496883392334, 0.2827087342739105, 0.2871950566768646, 0.2764117419719696, 0.27902159094810486, 0.26921388506889343, 0.26432597637176514, 0.2676258385181427, 0.2580152750015259, 0.25091880559921265, 0.2482435554265976, 0.24555163085460663, 0.24836263060569763, 0.2354697436094284, 0.23669210076332092, 0.23647336661815643, 0.2380136102437973, 0.22286811470985413, 0.22421486675739288, 0.22288073599338531, 0.21811260282993317, 0.21596455574035645, 0.21551960706710815], "accuracy": [0.2693171203136444, 0.48910316824913025, 0.5605600476264954, 0.6218464970588684, 0.669792652130127, 0.6936996579170227, 0.7169462442398071, 0.7383436560630798, 0.7510236501693726, 0.7637035846710205, 0.7672698497772217, 0.7788931727409363, 0.7885351777076721, 0.7954035401344299, 0.7977809906005859, 0.8078193068504333, 0.8120459914207458, 0.8207634687423706, 0.8207634687423706, 0.8271034359931946, 0.8302733898162842, 0.8379341959953308, 0.8335754871368408, 0.843481719493866, 0.8397833704948425, 0.8438779711723328, 0.8515387773513794, 0.8518029451370239, 0.8551049828529358, 0.8576145768165588, 0.8632941246032715, 0.8647470474243164, 0.8627657890319824, 0.8673887252807617, 0.8651432991027832, 0.8671245574951172, 0.8697662353515625, 0.8728041052818298, 0.8766345381736755, 0.8733324408531189, 0.8774270415306091, 0.8798044919967651, 0.8816536664962769, 0.8796724081039429, 0.8812574148178101, 0.8844274282455444, 0.8845595121383667, 0.889050304889679, 0.8899748921394348, 0.8911636471748352, 0.8903711438179016, 0.8920882344245911, 0.8961827754974365, 0.89988112449646, 0.9008057117462158, 0.9001452922821045, 0.8973715305328369, 0.9012019634246826, 0.9029190540313721, 0.9052965044975281, 0.9051644206047058, 0.9059569239616394, 0.9089948534965515, 0.908730685710907, 0.913089394569397, 0.9149385690689087, 0.9125610589981079, 0.9146744012832642, 0.9142781496047974, 0.9159952402114868, 0.9138818979263306, 0.9202219247817993, 0.9215427041053772, 0.9203540086746216, 0.9215427041053772, 0.9196935892105103, 0.9231277108192444], "val_loss": [2.0422797203063965, 1.5184837579727173, 1.0527399778366089, 0.8346108198165894, 0.7473823428153992, 0.6946033239364624, 0.6481721997261047, 0.6101444363594055, 0.5887603163719177, 0.5639081001281738, 0.5474706888198853, 0.5334488153457642, 0.5170962810516357, 0.5077552795410156, 0.4955436587333679, 0.4851883053779602, 0.47556591033935547, 0.4699154198169708, 0.4595438241958618, 0.45201820135116577, 0.44474413990974426, 0.44002023339271545, 0.4338194727897644, 0.4270687401294708, 0.42123648524284363, 0.42040300369262695, 0.4155592918395996, 0.40903955698013306, 0.4076305329799652, 0.40210777521133423, 0.39896976947784424, 0.3952305018901825, 0.3918529450893402, 0.39166396856307983, 0.3885427713394165, 0.3847423195838928, 0.38222888112068176, 0.37972524762153625, 0.3796093761920929, 0.3695499300956726, 0.3692880868911743, 0.3714750111103058, 0.36756014823913574, 0.36600953340530396, 0.3645036518573761, 0.36167627573013306, 0.36023446917533875, 0.36165866255760193, 0.36018192768096924, 0.35660499334335327, 0.35626065731048584, 0.35332268476486206, 0.3581758141517639, 0.35236722230911255, 0.35040178894996643, 0.36207783222198486, 0.3460100591182709, 0.34773486852645874, 0.3451958894729614, 0.3470470905303955, 0.34969666600227356, 0.3465745747089386, 0.3444654643535614, 0.3426167666912079, 0.3414882719516754, 0.3436702489852905, 0.34021198749542236, 0.34411630034446716, 0.34361058473587036, 0.3403574824333191, 0.3379954397678375, 0.33592134714126587, 0.3404485285282135, 0.34148910641670227, 0.33656448125839233, 0.33791911602020264, 0.34197476506233215], "val_accuracy": [0.5619999766349792, 0.6616666913032532, 0.6853333115577698, 0.7093333601951599, 0.7319999933242798, 0.750333309173584, 0.7599999904632568, 0.7760000228881836, 0.7836666703224182, 0.7919999957084656, 0.7979999780654907, 0.8046666383743286, 0.8086666464805603, 0.8100000023841858, 0.8206666707992554, 0.8183333277702332, 0.8223333358764648, 0.8273333311080933, 0.831333339214325, 0.8330000042915344, 0.8336666822433472, 0.8386666774749756, 0.8420000076293945, 0.8473333120346069, 0.8493333458900452, 0.8456666469573975, 0.8513333201408386, 0.8510000109672546, 0.8536666631698608, 0.8550000190734863, 0.8533333539962769, 0.8553333282470703, 0.8586666584014893, 0.8606666922569275, 0.8583333492279053, 0.862333357334137, 0.8629999756813049, 0.8613333106040955, 0.862666666507721, 0.8679999709129333, 0.8656666874885559, 0.862666666507721, 0.8669999837875366, 0.8659999966621399, 0.8683333396911621, 0.8690000176429749, 0.8669999837875366, 0.8663333058357239, 0.871999979019165, 0.871999979019165, 0.8713333606719971, 0.871666669845581, 0.8679999709129333, 0.8723333477973938, 0.8759999871253967, 0.8713333606719971, 0.8743333220481873, 0.8743333220481873, 0.8763333559036255, 0.8766666650772095, 0.8723333477973938, 0.8769999742507935, 0.8733333349227905, 0.8766666650772095, 0.8790000081062317, 0.8759999871253967, 0.8793333172798157, 0.8743333220481873, 0.8766666650772095, 0.8790000081062317, 0.8773333430290222, 0.8823333382606506, 0.8809999823570251, 0.8756666779518127, 0.8759999871253967, 0.8820000290870667, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 5, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 3, 1]], "fitness": -0.10028571635484695, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3104939460754395, 2.3101654052734375, 2.309899091720581, 2.3106536865234375, 2.310590982437134, 2.310995578765869, 2.3133504390716553, 2.3135640621185303, 2.3157331943511963, 2.315075397491455, 2.3192648887634277, 2.322765588760376, 2.324540615081787], "accuracy": [0.08942015469074249, 0.09113723784685135, 0.0956280529499054, 0.09417514503002167, 0.09655263274908066, 0.09285431355237961, 0.09959053993225098, 0.09694888442754745, 0.09509972482919693, 0.09655263274908066, 0.09959053993225098, 0.09774138033390045, 0.09787346422672272], "val_loss": [2.3084888458251953, 2.308591842651367, 2.3087570667266846, 2.308961868286133, 2.3091890811920166, 2.3094494342803955, 2.3097290992736816, 2.310012102127075, 2.3104209899902344, 2.311049222946167, 2.312185764312744, 2.3140504360198975, 2.3168017864227295], "val_accuracy": [0.09166666865348816, 0.09200000017881393, 0.09333333373069763, 0.09566666930913925, 0.09700000286102295, 0.09799999743700027, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [6, 2, 3, 0, 3, 5, 6, 5, 0, 3, 1, 7, 2, 0, 5, 3, 8], [0, 2, 0, 3, 4, 2, 2, 2, 1, 2, 0], [54, 16, 2], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [26, 99, 96, 10, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 28, 17, 11, 3, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(beta), alpha))), beta))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [785.5824584960938, 14012.6201171875, 64905.6796875, 177186.234375, 378993.1875, 698081.125], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.09417514503002167, 0.09985470771789551, 0.1022322028875351, 0.10196803510189056], "val_loss": [3559.93603515625, 27650.658203125, 92628.8828125, 218844.21875, 426646.15625, 736383.5], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 2, 3, 0, 3, 4, 9, 3, 4, 0, 1, 7, 0, 4, 9, 7, 5], [2, 1, 0, 2, 2, 1, 3, 1, 2, 2], [39, 39, 53], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5, 9], [0, 2, 0, 3], [16, 16, 18], [0, 1], [0], [0], [36], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 8, 9, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 4, 4], [16, 99, 35, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 17, 10, 3, 10, 7, 3, 3, 2, 1, 1, 1, 17, 10, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.pow(grad, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.pow(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [1112.422119140625, 2.9977071285247803, 4.826950550079346, 3.1029422283172607, 2.6000277996063232, 2.9430296421051025], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09985470771789551, 0.09985470771789551, 0.09985470771789551, 0.09985470771789551], "val_loss": [2.302603244781494, 7.8612961769104, 5.0736236572265625, 2.3538472652435303, 3.951089859008789, 2.322218894958496], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 75], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [0, 4, 0, 2, 1, 0, 4, 1, 2, 0], [16, 99, 96, 99, 58, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(alpha, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.sqrt(alpha), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18}]