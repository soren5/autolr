[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229883670806885, 1.864549994468689, 1.3965033292770386, 1.1076087951660156, 0.94352126121521, 0.8564410209655762, 0.7877072095870972, 0.7416443824768066, 0.7049855589866638, 0.672640323638916, 0.6534640789031982, 0.6273632645606995, 0.6110959053039551, 0.5902431011199951, 0.5762174725532532, 0.5540671944618225, 0.5453996658325195, 0.5414891839027405, 0.5215690732002258, 0.5058775544166565, 0.4892778694629669, 0.4919045865535736, 0.4841941297054291, 0.4649856984615326, 0.45924583077430725, 0.4509607255458832, 0.4381544291973114, 0.43315964937210083, 0.4302022159099579, 0.4244751036167145, 0.41562360525131226, 0.416850745677948, 0.4062991440296173, 0.38982120156288147, 0.39190179109573364, 0.38875874876976013, 0.3806490898132324, 0.3711187541484833, 0.36872270703315735, 0.3628216087818146, 0.3508199155330658, 0.35518574714660645, 0.3474321663379669, 0.33931055665016174, 0.33421218395233154], "accuracy": [0.2797516882419586, 0.495839387178421, 0.5575221180915833, 0.6135252714157104, 0.6629242897033691, 0.694360077381134, 0.7135120630264282, 0.7260599732398987, 0.7423061728477478, 0.7477215528488159, 0.7601373791694641, 0.7758552432060242, 0.7717606425285339, 0.7849689722061157, 0.7956677079200745, 0.7988376617431641, 0.7979130744934082, 0.8047813773155212, 0.8119139075279236, 0.8152159452438354, 0.8281601071357727, 0.8260467648506165, 0.8241975903511047, 0.8343679904937744, 0.8356888294219971, 0.8387266993522644, 0.8412362933158875, 0.8455950617790222, 0.8459912538528442, 0.8471800088882446, 0.8520671129226685, 0.8555012345314026, 0.8562937378883362, 0.863558292388916, 0.860652506351471, 0.8639545440673828, 0.863558292388916, 0.8651432991027832, 0.8632941246032715, 0.8692378997802734, 0.8755778670310974, 0.8704266548156738, 0.8772949576377869, 0.8821820020675659, 0.8805969953536987], "val_loss": [2.0367090702056885, 1.5108087062835693, 1.0400400161743164, 0.8353485465049744, 0.7411400675773621, 0.688591480255127, 0.6424782872200012, 0.6062798500061035, 0.5787169933319092, 0.5564007759094238, 0.5399417877197266, 0.5206554532051086, 0.5055863261222839, 0.4921199083328247, 0.48408272862434387, 0.4673596918582916, 0.4631519317626953, 0.4499194025993347, 0.4365694224834442, 0.4316365420818329, 0.42624178528785706, 0.4180850684642792, 0.41410964727401733, 0.4085901379585266, 0.3993307650089264, 0.3928160071372986, 0.38974693417549133, 0.38652491569519043, 0.38381266593933105, 0.37679147720336914, 0.38100382685661316, 0.3771854639053345, 0.36782193183898926, 0.36420369148254395, 0.36473631858825684, 0.35685983300209045, 0.3611089587211609, 0.3576703369617462, 0.35307809710502625, 0.3480885326862335, 0.34841886162757874, 0.34438255429267883, 0.34992867708206177, 0.3475181460380554, 0.33877646923065186], "val_accuracy": [0.5473333597183228, 0.6556666493415833, 0.6840000152587891, 0.7139999866485596, 0.7403333187103271, 0.7509999871253967, 0.7696666717529297, 0.7753333449363708, 0.784333348274231, 0.7946666479110718, 0.8016666769981384, 0.8040000200271606, 0.8193333148956299, 0.8209999799728394, 0.8230000138282776, 0.8299999833106995, 0.8303333520889282, 0.8326666951179504, 0.840666651725769, 0.8416666388511658, 0.8433333039283752, 0.847000002861023, 0.8536666631698608, 0.8533333539962769, 0.856333315372467, 0.8536666631698608, 0.8566666841506958, 0.8610000014305115, 0.862333357334137, 0.8613333106040955, 0.8586666584014893, 0.8633333444595337, 0.8673333525657654, 0.8700000047683716, 0.8640000224113464, 0.8703333139419556, 0.8696666955947876, 0.8633333444595337, 0.8679999709129333, 0.8733333349227905, 0.8686666488647461, 0.8696666955947876, 0.8653333187103271, 0.8690000176429749, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [81, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 88], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.772857129573822, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.308103561401367, 2.2960546016693115, 2.2717795372009277, 2.2425014972686768, 2.1964657306671143, 2.125413179397583, 1.996635913848877, 1.7813947200775146, 1.5258840322494507, 1.3585216999053955, 1.339056372642517, 1.3510135412216187, 1.2068172693252563, 1.057604193687439, 0.9310862421989441, 0.8917081952095032, 0.9184284806251526, 0.8888871669769287, 0.8489397764205933, 0.8302031755447388, 0.8182531595230103, 0.8213489055633545, 0.8071931004524231, 0.7790890336036682, 0.7672383785247803, 0.756354033946991, 0.7364009618759155, 0.7327191829681396, 0.7230149507522583, 0.7103065848350525, 0.6936014890670776, 0.6962043642997742, 0.6834544539451599, 0.6775943040847778, 0.6817581057548523, 0.66651850938797, 0.6622591018676758, 0.6431716680526733, 0.6372029185295105, 0.6220312714576721, 0.6250622868537903], "accuracy": [0.09826971590518951, 0.11676132678985596, 0.18201030790805817, 0.26680755615234375, 0.33522653579711914, 0.37564390897750854, 0.39889049530029297, 0.4377228915691376, 0.4694227874279022, 0.5107647776603699, 0.5527671575546265, 0.5713908076286316, 0.6155065298080444, 0.6445648074150085, 0.6571126580238342, 0.6671509742736816, 0.6612072587013245, 0.6732267737388611, 0.6864351034164429, 0.6975300312042236, 0.7042662501335144, 0.6901333928108215, 0.7037379741668701, 0.7111346125602722, 0.7100779414176941, 0.6997754573822021, 0.7100779414176941, 0.7165499925613403, 0.7219653725624084, 0.7310791015625, 0.7297582626342773, 0.7338528633117676, 0.7358341217041016, 0.7343811988830566, 0.735041618347168, 0.741909921169281, 0.7481178045272827, 0.7556465268135071, 0.7557786107063293, 0.7600052952766418, 0.7617223858833313], "val_loss": [2.3009374141693115, 2.2804434299468994, 2.250988245010376, 2.211026668548584, 2.15037202835083, 2.0432660579681396, 1.8493738174438477, 1.5386054515838623, 1.1957238912582397, 1.0017009973526, 0.95266193151474, 0.9169864058494568, 0.8621309995651245, 0.7904079556465149, 0.7638413310050964, 0.804613471031189, 0.7961235642433167, 0.7265785932540894, 0.7009195685386658, 0.6886427402496338, 0.6910213828086853, 0.6880123019218445, 0.6802975535392761, 0.6718919277191162, 0.6662401556968689, 0.6628855466842651, 0.6517572999000549, 0.6393570303916931, 0.6250621676445007, 0.6077918410301208, 0.5928273797035217, 0.5805321335792542, 0.5730800032615662, 0.5694724917411804, 0.5643206238746643, 0.5553836822509766, 0.548865556716919, 0.5442324280738831, 0.5401303172111511, 0.5392892360687256, 0.5405405163764954], "val_accuracy": [0.09433333575725555, 0.17766666412353516, 0.4009999930858612, 0.4416666626930237, 0.4440000057220459, 0.45366665720939636, 0.500333309173584, 0.5839999914169312, 0.637666642665863, 0.6556666493415833, 0.6673333048820496, 0.6819999814033508, 0.6923333406448364, 0.7103333473205566, 0.7116666436195374, 0.7196666598320007, 0.7149999737739563, 0.7253333330154419, 0.7306666374206543, 0.7350000143051147, 0.7283333539962769, 0.7323333621025085, 0.7459999918937683, 0.7516666650772095, 0.7480000257492065, 0.7459999918937683, 0.7513333559036255, 0.7549999952316284, 0.7606666684150696, 0.7620000243186951, 0.7649999856948853, 0.7699999809265137, 0.7749999761581421, 0.7756666541099548, 0.7773333191871643, 0.7853333353996277, 0.781333327293396, 0.7829999923706055, 0.7820000052452087, 0.7853333353996277, 0.7823333144187927]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 1, 1, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8, 0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 10, 6, 4, 2, 1, 0, 1, 1, 19, 13, 6, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [13, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [53, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 62, 96, 99, 61, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]