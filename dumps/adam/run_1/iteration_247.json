[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224135398864746, 1.8662819862365723, 1.398805022239685, 1.0877306461334229, 0.9248225092887878, 0.8336814641952515, 0.7668424248695374, 0.7125535607337952, 0.6775545477867126, 0.651617705821991, 0.6258813738822937, 0.60163813829422, 0.5832202434539795, 0.5667088031768799, 0.5442118048667908, 0.5348501205444336, 0.5251635909080505, 0.5127728581428528, 0.49952730536460876, 0.495339572429657, 0.4795214533805847, 0.4722428321838379, 0.4610338807106018, 0.45602837204933167, 0.44724875688552856, 0.4448206424713135, 0.4347747564315796, 0.4258473515510559, 0.41388311982154846, 0.4082084000110626, 0.41146668791770935, 0.39812490344047546, 0.3948088586330414, 0.3892638683319092, 0.3851710557937622, 0.3855539858341217, 0.3711214065551758, 0.36745697259902954, 0.36096614599227905, 0.3593473732471466, 0.35342928767204285, 0.34661272168159485, 0.3433176577091217, 0.3395131230354309, 0.3362913429737091, 0.32905685901641846, 0.3255611062049866, 0.323114812374115, 0.31768137216567993, 0.3112594783306122, 0.3036728501319885, 0.30564001202583313], "accuracy": [0.2805441915988922, 0.488971084356308, 0.5646545886993408, 0.6201294660568237, 0.665830135345459, 0.7084929347038269, 0.7260599732398987, 0.7354378700256348, 0.7493065595626831, 0.7629110813140869, 0.7713643908500671, 0.7837802171707153, 0.7872143983840942, 0.7984414100646973, 0.8014793395996094, 0.805177628993988, 0.8146876096725464, 0.81548011302948, 0.8255184292793274, 0.8252542614936829, 0.8253863453865051, 0.8267071843147278, 0.8333113193511963, 0.8368775844573975, 0.8437458872795105, 0.8445383906364441, 0.8482366800308228, 0.8441421389579773, 0.8529917001724243, 0.8565579056739807, 0.8518029451370239, 0.8581429123878479, 0.8628978729248047, 0.8648791313171387, 0.8625016212463379, 0.8663320541381836, 0.8679170608520508, 0.8705587387084961, 0.8737286925315857, 0.8709549307823181, 0.8728041052818298, 0.8751816153526306, 0.8787478804588318, 0.8787478804588318, 0.878879964351654, 0.8874653577804565, 0.883238673210144, 0.8824461698532104, 0.884691596031189, 0.889050304889679, 0.8927486538887024, 0.8886540532112122], "val_loss": [2.0382800102233887, 1.5146100521087646, 1.0458526611328125, 0.834343433380127, 0.7442387938499451, 0.6877731084823608, 0.6454746723175049, 0.6133478283882141, 0.5861622095108032, 0.5634032487869263, 0.5493268370628357, 0.5321875214576721, 0.5251263380050659, 0.5074881911277771, 0.4928557574748993, 0.4886167049407959, 0.47615742683410645, 0.4686794877052307, 0.4589554965496063, 0.4616549015045166, 0.4535573422908783, 0.44071316719055176, 0.4346311390399933, 0.4370960295200348, 0.42677173018455505, 0.4201892018318176, 0.4177289307117462, 0.41309839487075806, 0.4146946668624878, 0.4067579209804535, 0.40592747926712036, 0.40205463767051697, 0.39538708329200745, 0.39876219630241394, 0.3952094614505768, 0.38701844215393066, 0.39102619886398315, 0.38719308376312256, 0.3831370770931244, 0.3859856426715851, 0.3840338885784149, 0.3780212104320526, 0.3802240788936615, 0.3764057159423828, 0.37399202585220337, 0.37637150287628174, 0.36837077140808105, 0.3697996139526367, 0.37213245034217834, 0.3683978319168091, 0.3636856973171234, 0.3665911853313446], "val_accuracy": [0.5573333501815796, 0.659333348274231, 0.684333324432373, 0.7113333344459534, 0.7316666841506958, 0.746666669845581, 0.7583333253860474, 0.7680000066757202, 0.7720000147819519, 0.7876666784286499, 0.793666660785675, 0.7983333468437195, 0.8130000233650208, 0.8149999976158142, 0.8163333535194397, 0.8213333487510681, 0.831333339214325, 0.8326666951179504, 0.8376666903495789, 0.8376666903495789, 0.8353333473205566, 0.8429999947547913, 0.8456666469573975, 0.8510000109672546, 0.8513333201408386, 0.847000002861023, 0.8513333201408386, 0.8523333072662354, 0.8523333072662354, 0.8529999852180481, 0.859000027179718, 0.8556666374206543, 0.8586666584014893, 0.859000027179718, 0.8600000143051147, 0.8603333234786987, 0.8583333492279053, 0.859666645526886, 0.8616666793823242, 0.8640000224113464, 0.8653333187103271, 0.8619999885559082, 0.8663333058357239, 0.8693333268165588, 0.8686666488647461, 0.8666666746139526, 0.8713333606719971, 0.8696666955947876, 0.8679999709129333, 0.8713333606719971, 0.8696666955947876, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 4, 2, 4, 2, 9], [0, 1, 0, 2, 0, 3], [39, 39, 32, 63], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [85], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 1], [4, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 81, 96, 50, 61, 1]], "fitness": -0.2622857093811035, "mapping_values": [1, 14, 8, 6, 4, 6, 4, 2, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(sigma, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.20849609375, 2.1941237449645996, 2.1925716400146484, 2.1923789978027344, 2.193600654602051, 2.190659523010254, 2.189257860183716, 2.190727472305298, 2.190683603286743, 2.1882882118225098, 2.187110662460327, 2.1873817443847656, 2.1879003047943115, 2.1890087127685547, 2.1856260299682617, 2.187018632888794, 2.1878557205200195, 2.186772584915161, 2.185122489929199, 2.184685230255127, 2.185107469558716, 2.1848549842834473, 2.1844682693481445, 2.183340311050415, 2.1847431659698486, 2.183948278427124, 2.1836209297180176, 2.183939218521118, 2.18343448638916, 2.1825361251831055, 2.181410789489746, 2.1826016902923584, 2.1825015544891357, 2.1816093921661377, 2.181769847869873, 2.1820287704467773, 2.180816173553467, 2.1815292835235596, 2.1836347579956055, 2.1803476810455322, 2.1808359622955322, 2.1789393424987793, 2.1796183586120605, 2.1781599521636963, 2.1795706748962402, 2.1792004108428955, 2.178220748901367, 2.1794371604919434, 2.176922559738159, 2.1774003505706787, 2.179659366607666, 2.1775803565979004, 2.178701639175415, 2.1794214248657227, 2.177140474319458, 2.1754794120788574, 2.178212881088257, 2.1772408485412598, 2.1754910945892334, 2.177072525024414, 2.1747515201568604, 2.1772773265838623, 2.1788594722747803, 2.1763267517089844, 2.1762642860412598, 2.176196813583374, 2.176234483718872, 2.1761014461517334, 2.175780773162842, 2.1751561164855957, 2.1754612922668457, 2.175802707672119, 2.173332929611206, 2.173981189727783, 2.1739003658294678, 2.172908306121826, 2.1738059520721436, 2.1726737022399902, 2.173464298248291, 2.172807216644287, 2.175556182861328, 2.173555374145508, 2.1745805740356445, 2.172037124633789, 2.1731321811676025, 2.173112392425537, 2.172678232192993, 2.171632766723633, 2.1711390018463135, 2.172760486602783, 2.173356533050537, 2.170363187789917, 2.171208620071411, 2.171851634979248, 2.1740503311157227, 2.1691019535064697, 2.1707420349121094, 2.171015739440918, 2.1715118885040283, 2.1709766387939453, 2.1693108081817627, 2.1705915927886963, 2.1701269149780273, 2.1693036556243896, 2.170153856277466, 2.1695797443389893, 2.167299747467041, 2.1701369285583496, 2.1698572635650635, 2.1698172092437744, 2.1683502197265625, 2.1667089462280273, 2.169239044189453, 2.1690666675567627, 2.16902494430542, 2.1701457500457764, 2.170665979385376, 2.169865369796753, 2.1673238277435303, 2.1698544025421143, 2.1682510375976562, 2.167736768722534, 2.165576219558716, 2.1693689823150635, 2.1676950454711914, 2.1647393703460693, 2.167243480682373, 2.1660075187683105, 2.1655113697052, 2.1631956100463867], "accuracy": [0.22982433438301086, 0.2506934404373169, 0.25161802768707275, 0.24514594674110413, 0.2509576082229614, 0.24659886956214905, 0.2569013237953186, 0.2533350884914398, 0.25320300459861755, 0.26059964299201965, 0.2616563141345978, 0.26099589467048645, 0.2576938271522522, 0.2587504982948303, 0.25716549158096313, 0.2611279785633087, 0.25544843077659607, 0.26258090138435364, 0.25756174325942993, 0.2645621597766876, 0.2550521790981293, 0.25941091775894165, 0.2611279785633087, 0.2619204819202423, 0.2627129852771759, 0.2583542466163635, 0.26363757252693176, 0.25980716943740845, 0.26482629776000977, 0.261260062456131, 0.26324132084846497, 0.25980716943740845, 0.2620525658130646, 0.26363757252693176, 0.2569013237953186, 0.25478801131248474, 0.2661471366882324, 0.2661471366882324, 0.2646942138671875, 0.2642979919910431, 0.26720380783081055, 0.2674679756164551, 0.26839256286621094, 0.2654867172241211, 0.2657508850097656, 0.26284506916999817, 0.2751287817955017, 0.26760005950927734, 0.2657508850097656, 0.2724871337413788, 0.26363757252693176, 0.2681283950805664, 0.26641130447387695, 0.2607317268848419, 0.2661471366882324, 0.27182671427726746, 0.266939640045166, 0.26918503642082214, 0.2694492042064667, 0.2678642272949219, 0.27380794286727905, 0.26760005950927734, 0.26958128809928894, 0.2646942138671875, 0.2673358917236328, 0.27037379145622253, 0.26443007588386536, 0.2658829689025879, 0.27063795924186707, 0.2677321434020996, 0.26720380783081055, 0.27327960729599, 0.270109623670578, 0.2715625464916229, 0.2716946303844452, 0.26826047897338867, 0.27301543951034546, 0.27222296595573425, 0.26984545588493347, 0.2666754722595215, 0.26522254943847656, 0.27222296595573425, 0.26984545588493347, 0.27116629481315613, 0.27380794286727905, 0.2719587981700897, 0.27578920125961304, 0.27843084931373596, 0.2678642272949219, 0.2715625464916229, 0.27182671427726746, 0.28041210770606995, 0.27077004313468933, 0.2712983787059784, 0.27341169118881226, 0.27763834595680237, 0.26997753977775574, 0.2763175368309021, 0.2694492042064667, 0.2739400267601013, 0.2775062620639801, 0.27843084931373596, 0.2744683623313904, 0.27763834595680237, 0.2727513015270233, 0.27063795924186707, 0.2755250334739685, 0.2689208686351776, 0.27143046259880066, 0.278959184885025, 0.2793554365634918, 0.275260865688324, 0.27777042984962463, 0.27341169118881226, 0.27843084931373596, 0.27143046259880066, 0.2689208686351776, 0.2747325301170349, 0.27961960434913635, 0.2709021270275116, 0.2735437750816345, 0.2759212851524353, 0.2779025137424469, 0.27460044622421265, 0.2767137885093689, 0.2798837721347809, 0.2798837721347809, 0.2779025137424469, 0.27763834595680237, 0.2810725271701813], "val_loss": [2.187425374984741, 2.186272621154785, 2.1854028701782227, 2.184678554534912, 2.1840457916259766, 2.1834707260131836, 2.182940721511841, 2.182453155517578, 2.1819915771484375, 2.181549072265625, 2.1811273097991943, 2.180725574493408, 2.180342674255371, 2.1799733638763428, 2.179612874984741, 2.1792635917663574, 2.178927183151245, 2.178595781326294, 2.1782772541046143, 2.1779608726501465, 2.177656650543213, 2.1773557662963867, 2.1770617961883545, 2.17677640914917, 2.1764979362487793, 2.176222324371338, 2.175950765609741, 2.175685167312622, 2.1754229068756104, 2.1751644611358643, 2.1749095916748047, 2.1746609210968018, 2.174415349960327, 2.174171209335327, 2.1739304065704346, 2.173692464828491, 2.17345929145813, 2.173227071762085, 2.173001289367676, 2.172773838043213, 2.1725497245788574, 2.1723265647888184, 2.172105550765991, 2.1718876361846924, 2.1716737747192383, 2.1714608669281006, 2.1712486743927, 2.17103910446167, 2.1708292961120605, 2.170621871948242, 2.170419931411743, 2.170217514038086, 2.1700189113616943, 2.16982102394104, 2.169623613357544, 2.169426918029785, 2.1692333221435547, 2.1690409183502197, 2.1688485145568848, 2.168659210205078, 2.1684694290161133, 2.1682848930358887, 2.168100357055664, 2.1679155826568604, 2.1677329540252686, 2.167550802230835, 2.167370557785034, 2.1671910285949707, 2.1670122146606445, 2.1668338775634766, 2.1666579246520996, 2.1664841175079346, 2.1663098335266113, 2.166137933731079, 2.1659657955169678, 2.1657943725585938, 2.1656246185302734, 2.1654536724090576, 2.165285110473633, 2.1651182174682617, 2.1649532318115234, 2.1647884845733643, 2.164623975753784, 2.1644582748413086, 2.164294481277466, 2.164132595062256, 2.163970947265625, 2.1638102531433105, 2.1636502742767334, 2.1634912490844727, 2.163332939147949, 2.163174629211426, 2.163017511367798, 2.1628594398498535, 2.1627039909362793, 2.162548780441284, 2.162393808364868, 2.162241220474243, 2.1620893478393555, 2.1619372367858887, 2.161785364151001, 2.1616342067718506, 2.1614840030670166, 2.1613340377807617, 2.1611859798431396, 2.1610381603240967, 2.160888910293579, 2.1607418060302734, 2.1605947017669678, 2.160447835922241, 2.160301923751831, 2.1601555347442627, 2.1600122451782227, 2.1598684787750244, 2.1597251892089844, 2.159583568572998, 2.1594419479370117, 2.1593010425567627, 2.159158945083618, 2.1590192317962646, 2.158879280090332, 2.1587395668029785, 2.158597707748413, 2.1584584712982178, 2.1583199501037598, 2.1581802368164062, 2.158043384552002, 2.157904863357544, 2.1577670574188232, 2.1576290130615234], "val_accuracy": [0.22333332896232605, 0.2240000069141388, 0.2253333330154419, 0.22566667199134827, 0.2266666740179062, 0.22699999809265137, 0.22833333909511566, 0.2290000021457672, 0.2293333262205124, 0.2303333282470703, 0.23100000619888306, 0.23133333027362823, 0.2316666692495346, 0.2329999953508377, 0.23333333432674408, 0.23399999737739563, 0.23399999737739563, 0.234333336353302, 0.23499999940395355, 0.23499999940395355, 0.23533333837985992, 0.2370000034570694, 0.23733332753181458, 0.23766666650772095, 0.23766666650772095, 0.23766666650772095, 0.23766666650772095, 0.2383333295583725, 0.23899999260902405, 0.23899999260902405, 0.23933333158493042, 0.24066667258739471, 0.24066667258739471, 0.24133333563804626, 0.24133333563804626, 0.24199999868869781, 0.24199999868869781, 0.24266666173934937, 0.24266666173934937, 0.24266666173934937, 0.2433333396911621, 0.2433333396911621, 0.2436666637659073, 0.24433332681655884, 0.2446666657924652, 0.2446666657924652, 0.24533332884311676, 0.24566666781902313, 0.24566666781902313, 0.24666666984558105, 0.24666666984558105, 0.2473333328962326, 0.2473333328962326, 0.24766667187213898, 0.24799999594688416, 0.2486666738986969, 0.24933333694934845, 0.25, 0.25, 0.25066667795181274, 0.25066667795181274, 0.2513333261013031, 0.25200000405311584, 0.2526666522026062, 0.25333333015441895, 0.25333333015441895, 0.25333333015441895, 0.25333333015441895, 0.25333333015441895, 0.2536666691303253, 0.2536666691303253, 0.25433334708213806, 0.25433334708213806, 0.25433334708213806, 0.25466665625572205, 0.25466665625572205, 0.25466665625572205, 0.2549999952316284, 0.2549999952316284, 0.2549999952316284, 0.2549999952316284, 0.2549999952316284, 0.25566667318344116, 0.25600001215934753, 0.25600001215934753, 0.2563333213329315, 0.2563333213329315, 0.2563333213329315, 0.2563333213329315, 0.2566666603088379, 0.2566666603088379, 0.25699999928474426, 0.25699999928474426, 0.25699999928474426, 0.257666677236557, 0.257999986410141, 0.257999986410141, 0.25866666436195374, 0.2590000033378601, 0.2590000033378601, 0.2593333423137665, 0.25966668128967285, 0.25999999046325684, 0.2603333294391632, 0.2603333294391632, 0.2606666684150696, 0.26100000739097595, 0.2613333463668823, 0.26233333349227905, 0.26233333349227905, 0.2630000114440918, 0.2630000114440918, 0.2630000114440918, 0.2630000114440918, 0.2630000114440918, 0.26366665959358215, 0.2639999985694885, 0.2643333375453949, 0.2643333375453949, 0.26466667652130127, 0.26499998569488525, 0.26499998569488525, 0.2653333246707916, 0.2653333246707916, 0.265666663646698, 0.265666663646698, 0.265666663646698, 0.265666663646698, 0.265666663646698, 0.265666663646698]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 5, 0], [0, 3, 0, 3, 2], [16, 16], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 7, 3, 0, 2, 2, 6, 6, 0, 0, 1, 7, 0, 5, 4, 8], [0, 2, 0, 2, 0, 5, 0, 2, 0, 4, 4], [13, 4, 45, 5, 22], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 0, 1, 2, 0, 7], [16, 99, 96, 99, 5, 1, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 27, 16, 11, 5, 23, 12, 11, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.square(beta)), tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 2, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 4, 3, 0, 3, 5], [0, 2, 2, 3, 2], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 65, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 11, 6, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [5, 2, 3, 0, 3, 4, 1, 2, 9, 1], [0, 1, 0, 1, 1, 2, 0], [39, 39, 49, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 4, 6, 9], [0, 2, 0, 3], [16, 16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 8, 3, 6, 8, 1, 8, 9, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.08885714411735535, "mapping_values": [1, 17, 10, 7, 4, 11, 7, 4, 3, 2, 1, 1, 1, 11, 7, 4, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma))))", "other_info": {"loss": [2.3104653358459473, 2.3098220825195312, 2.3096132278442383, 2.309591293334961, 2.3100154399871826, 2.3096108436584473], "accuracy": [0.08915598690509796, 0.09325055778026581, 0.08836349099874496, 0.09192973375320435, 0.09008057415485382, 0.09047681838274002], "val_loss": [2.3083913326263428, 2.3083488941192627, 2.3083221912384033, 2.308302164077759, 2.3082871437072754, 2.308274745941162], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08900000154972076, 0.08833333104848862, 0.08866667002439499]}}]