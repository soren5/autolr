[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2261486053466797, 1.8750790357589722, 1.404520869255066, 1.0981308221817017, 0.9405760765075684, 0.8384547233581543, 0.7831286787986755, 0.7239714860916138, 0.6866893768310547, 0.6571005582809448, 0.6262609362602234, 0.6039125919342041, 0.5849277973175049, 0.5685775279998779, 0.553321123123169, 0.5421122908592224, 0.522226095199585, 0.5094291567802429, 0.49388301372528076, 0.4946938455104828, 0.4823593497276306, 0.4696592390537262, 0.4588516652584076, 0.45776066184043884, 0.44101065397262573, 0.43775010108947754, 0.4209378957748413, 0.42653363943099976, 0.41851773858070374, 0.4181714653968811, 0.3969644010066986, 0.4012027382850647, 0.39504870772361755, 0.37980711460113525, 0.3805401623249054, 0.3673769235610962, 0.36919161677360535, 0.3693563640117645, 0.3581918776035309, 0.35420942306518555, 0.34983453154563904, 0.34375980496406555, 0.3396024703979492, 0.3311333954334259, 0.3329836130142212, 0.3282356262207031, 0.3221067190170288, 0.3144962787628174, 0.30989351868629456, 0.3069566488265991, 0.2992919385433197, 0.2943282127380371, 0.28956249356269836, 0.28978729248046875, 0.2887355387210846, 0.27340182662010193, 0.27751848101615906, 0.2748544216156006, 0.26709693670272827, 0.264205664396286, 0.258353054523468, 0.2597171664237976, 0.247624009847641, 0.24867990612983704, 0.24758592247962952, 0.2474312037229538, 0.24253715574741364, 0.2355784922838211, 0.23255768418312073, 0.2278626561164856, 0.22004081308841705, 0.2264017015695572, 0.22343359887599945, 0.21562770009040833, 0.2175881266593933], "accuracy": [0.27658170461654663, 0.49187690019607544, 0.5596354603767395, 0.6173557043075562, 0.6712455153465271, 0.6997754573822021, 0.7123233675956726, 0.7346453666687012, 0.7432307600975037, 0.7605336308479309, 0.7740060687065125, 0.7759873270988464, 0.787082314491272, 0.7951393723487854, 0.8006868362426758, 0.802271842956543, 0.8138951063156128, 0.8164047002792358, 0.8251221776008606, 0.8238013386726379, 0.82683926820755, 0.8309338092803955, 0.8367455005645752, 0.837537944316864, 0.844010055065155, 0.8396512866020203, 0.8467837572097778, 0.8471800088882446, 0.8508783578872681, 0.8519350290298462, 0.863029956817627, 0.8594637513160706, 0.8601241707801819, 0.8685774803161621, 0.8646149635314941, 0.8679170608520508, 0.8671245574951172, 0.8684453964233398, 0.8705587387084961, 0.8765024542808533, 0.8780874609947205, 0.8755778670310974, 0.8749174475669861, 0.8803328275680542, 0.882710337638855, 0.8790120482444763, 0.885219931602478, 0.8835028409957886, 0.887201189994812, 0.8887861371040344, 0.8924844861030579, 0.8938053250312805, 0.8948619961738586, 0.8968431949615479, 0.8956544995307922, 0.8992207050323486, 0.8990886211395264, 0.9015982151031494, 0.9039757251739502, 0.9033153057098389, 0.9085986018180847, 0.9059569239616394, 0.9104477763175964, 0.9099194407463074, 0.9113723635673523, 0.9108440279960632, 0.913089394569397, 0.9137498140335083, 0.9179764986038208, 0.9206181764602661, 0.9159952402114868, 0.9177123308181763, 0.9183727502822876, 0.9232597947120667, 0.9236560463905334], "val_loss": [2.042371988296509, 1.5187733173370361, 1.042182207107544, 0.8267728686332703, 0.7346687912940979, 0.6796985864639282, 0.6361008286476135, 0.5949897170066833, 0.5710521936416626, 0.5524576902389526, 0.5300938487052917, 0.5154398083686829, 0.5013718008995056, 0.4947187900543213, 0.4763748347759247, 0.4706663489341736, 0.4605166018009186, 0.44871941208839417, 0.44207966327667236, 0.4396267533302307, 0.42870718240737915, 0.4231710135936737, 0.4184519946575165, 0.41346636414527893, 0.40950387716293335, 0.40172773599624634, 0.39924511313438416, 0.3949117958545685, 0.38905858993530273, 0.38818618655204773, 0.38167789578437805, 0.3822377026081085, 0.37754109501838684, 0.372578501701355, 0.37023404240608215, 0.3681119680404663, 0.36484551429748535, 0.3670414090156555, 0.360221266746521, 0.35822030901908875, 0.35404956340789795, 0.3543107211589813, 0.35426831245422363, 0.3509053587913513, 0.3501106798648834, 0.34671467542648315, 0.34743618965148926, 0.34476885199546814, 0.3429977297782898, 0.34122908115386963, 0.33705398440361023, 0.3399106562137604, 0.3350430130958557, 0.33555734157562256, 0.3333359360694885, 0.3301175832748413, 0.3302655518054962, 0.331413209438324, 0.3295508325099945, 0.3295115530490875, 0.32696011662483215, 0.3257269561290741, 0.3271908164024353, 0.3256168067455292, 0.323905885219574, 0.32274362444877625, 0.3277905583381653, 0.3235185444355011, 0.31972673535346985, 0.3192332684993744, 0.32543879747390747, 0.32036447525024414, 0.31937268376350403, 0.3260745108127594, 0.3211839497089386], "val_accuracy": [0.5566666722297668, 0.6736666560173035, 0.6913333535194397, 0.715666651725769, 0.7396666407585144, 0.753333330154419, 0.7703333497047424, 0.7896666526794434, 0.7836666703224182, 0.8003333210945129, 0.8096666932106018, 0.8096666932106018, 0.8223333358764648, 0.8263333439826965, 0.8336666822433472, 0.8410000205039978, 0.8360000252723694, 0.8403333425521851, 0.843666672706604, 0.8486666679382324, 0.8460000157356262, 0.8529999852180481, 0.8500000238418579, 0.8539999723434448, 0.8546666502952576, 0.859666645526886, 0.8576666712760925, 0.8576666712760925, 0.859000027179718, 0.8613333106040955, 0.8650000095367432, 0.8619999885559082, 0.8646666407585144, 0.8663333058357239, 0.8709999918937683, 0.8686666488647461, 0.8693333268165588, 0.8666666746139526, 0.8723333477973938, 0.8700000047683716, 0.8726666569709778, 0.871666669845581, 0.8703333139419556, 0.8759999871253967, 0.871999979019165, 0.874666690826416, 0.878000020980835, 0.8776666522026062, 0.8803333044052124, 0.8796666860580444, 0.8803333044052124, 0.8826666474342346, 0.8806666731834412, 0.8806666731834412, 0.8833333253860474, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8846666812896729, 0.8880000114440918, 0.8836666941642761, 0.887333333492279, 0.8866666555404663, 0.8859999775886536, 0.8883333206176758, 0.8856666684150696, 0.8866666555404663, 0.890999972820282, 0.890999972820282, 0.8923333287239075, 0.8916666507720947, 0.8923333287239075, 0.890333354473114, 0.8886666893959045, 0.8883333206176758]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [2, 2, 6, 0, 3, 7, 9, 9], [0, 1, 0, 2], [23, 39, 56, 37], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 66, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 4, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303847551345825, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [70, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [2], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 4, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 20, 10, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30958890914917, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308040142059326, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039045333862305, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 3, 4, 4, 8, 4, 9, 3, 7, 7, 9], [0, 1, 0, 2, 2, 2, 0, 2, 2, 0], [39, 39, 7, 41, 33, 59], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [2, 1, 0, 3, 0], [16, 29], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [9, 3, 2, 6, 8, 1, 4, 1, 3, 2, 8], [4, 4, 0, 3, 4, 0, 3, 1, 1, 0], [45, 99, 96, 99, 22, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 16, 10, 6, 11, 6, 5, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.sqrt(tf.math.pow(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(beta), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30353045463562, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]