[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87371426820755, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2196617126464844, 1.8631645441055298, 1.3872339725494385, 1.0929186344146729, 0.9346283674240112, 0.8483169078826904, 0.7842212915420532, 0.732451319694519, 0.6912418007850647, 0.6593394875526428, 0.646434485912323, 0.6200324296951294, 0.5968566536903381, 0.583042323589325, 0.5688686966896057, 0.5544577836990356, 0.5458873510360718, 0.539136528968811, 0.5219719409942627, 0.5113946199417114, 0.4953891634941101, 0.49241843819618225, 0.4799102246761322, 0.47000715136528015, 0.4508224427700043, 0.4499708116054535, 0.44587835669517517, 0.4436582028865814, 0.4360226094722748, 0.42721235752105713, 0.4180002808570862, 0.40592753887176514, 0.3991844952106476, 0.4035702049732208, 0.39482900500297546, 0.3851591646671295, 0.38462895154953003, 0.37643489241600037, 0.36473801732063293, 0.36717480421066284, 0.35728850960731506, 0.34902411699295044, 0.34781286120414734, 0.346310555934906, 0.33727461099624634, 0.3308144807815552, 0.33204489946365356, 0.32147765159606934, 0.326761931180954, 0.3196916878223419, 0.3090915083885193, 0.31450480222702026, 0.3097127079963684, 0.30154624581336975, 0.29457446932792664, 0.28700992465019226, 0.2835927903652191, 0.27996915578842163, 0.27248403429985046, 0.274149090051651, 0.274191290140152, 0.268298864364624, 0.2684549391269684, 0.25600549578666687, 0.2595502734184265, 0.2542975842952728, 0.24671676754951477, 0.2441685050725937, 0.23937904834747314, 0.23722133040428162, 0.2358066737651825, 0.23171159625053406], "accuracy": [0.26826047897338867, 0.4826310873031616, 0.5632016658782959, 0.6193369626998901, 0.6653017997741699, 0.6954167485237122, 0.7168141603469849, 0.7349095344543457, 0.7478536367416382, 0.7598732113838196, 0.7619865536689758, 0.7720248103141785, 0.7895918488502502, 0.7853652238845825, 0.7921014428138733, 0.7956677079200745, 0.8012151718139648, 0.8047813773155212, 0.8175934553146362, 0.8150838613510132, 0.8261788487434387, 0.8191784620285034, 0.8255184292793274, 0.835160493850708, 0.8399154543876648, 0.8360850811004639, 0.8405758738517761, 0.8432175517082214, 0.841500461101532, 0.8451988101005554, 0.8506141901016235, 0.854708731174469, 0.8560295701026917, 0.8531237840652466, 0.8545766472816467, 0.8632941246032715, 0.8603883385658264, 0.8671245574951172, 0.8665962219238281, 0.8640866279602051, 0.8663320541381836, 0.8729361891746521, 0.8737286925315857, 0.8772949576377869, 0.8803328275680542, 0.880729079246521, 0.883238673210144, 0.8853520154953003, 0.8808611631393433, 0.8817857503890991, 0.8918240666389465, 0.885219931602478, 0.8894465565681458, 0.8882578015327454, 0.8927486538887024, 0.8956544995307922, 0.8965790271759033, 0.8971073627471924, 0.9021265506744385, 0.89552241563797, 0.9002773761749268, 0.9062210917472839, 0.9039757251739502, 0.909259021282196, 0.904768168926239, 0.9070135951042175, 0.9128252267837524, 0.91124027967453, 0.9108440279960632, 0.9126931428909302, 0.9157310724258423, 0.9165235757827759], "val_loss": [2.036198139190674, 1.5099358558654785, 1.0499258041381836, 0.8497433066368103, 0.7618294954299927, 0.7058138251304626, 0.6653732657432556, 0.625405490398407, 0.5990419387817383, 0.5819966793060303, 0.5607835054397583, 0.5446399450302124, 0.5290355086326599, 0.5186046361923218, 0.5096724033355713, 0.49449634552001953, 0.49040430784225464, 0.47366610169410706, 0.4708682596683502, 0.45547541975975037, 0.45385488867759705, 0.4518190026283264, 0.4394168555736542, 0.43032461404800415, 0.42631110548973083, 0.4210244119167328, 0.42239832878112793, 0.4122052490711212, 0.41149646043777466, 0.4070865213871002, 0.4027690887451172, 0.3963092565536499, 0.39488720893859863, 0.3881063759326935, 0.3860248923301697, 0.38168516755104065, 0.3779679238796234, 0.383188933134079, 0.3766178786754608, 0.3725704848766327, 0.36862459778785706, 0.3733978569507599, 0.36877962946891785, 0.36387965083122253, 0.36535608768463135, 0.3635897934436798, 0.36016255617141724, 0.36068493127822876, 0.3579810857772827, 0.3530696630477905, 0.3544238805770874, 0.35173243284225464, 0.35164350271224976, 0.34903091192245483, 0.3451717793941498, 0.3461143672466278, 0.3458401560783386, 0.3527206480503082, 0.3424532115459442, 0.3412129580974579, 0.3380567133426666, 0.3413090705871582, 0.33691707253456116, 0.3369973301887512, 0.3310355544090271, 0.33422717452049255, 0.3314579725265503, 0.3307618498802185, 0.33233165740966797, 0.3310103416442871, 0.32810816168785095, 0.3304758369922638], "val_accuracy": [0.5230000019073486, 0.6510000228881836, 0.6803333163261414, 0.7056666612625122, 0.7269999980926514, 0.746666669845581, 0.753000020980835, 0.7689999938011169, 0.7793333530426025, 0.7893333435058594, 0.7956666946411133, 0.8003333210945129, 0.8066666722297668, 0.8083333373069763, 0.8166666626930237, 0.815666675567627, 0.8176666498184204, 0.8259999752044678, 0.82833331823349, 0.8360000252723694, 0.8306666612625122, 0.8366666436195374, 0.8423333168029785, 0.843999981880188, 0.8433333039283752, 0.8510000109672546, 0.8450000286102295, 0.8553333282470703, 0.8496666550636292, 0.8526666760444641, 0.8560000061988831, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8613333106040955, 0.8643333315849304, 0.8606666922569275, 0.8566666841506958, 0.862333357334137, 0.8653333187103271, 0.8633333444595337, 0.8619999885559082, 0.8663333058357239, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621, 0.8659999966621399, 0.8703333139419556, 0.8686666488647461, 0.871999979019165, 0.8723333477973938, 0.8740000128746033, 0.8733333349227905, 0.8706666827201843, 0.874666690826416, 0.8726666569709778, 0.8740000128746033, 0.871666669845581, 0.8756666779518127, 0.8776666522026062, 0.8740000128746033, 0.8740000128746033, 0.8823333382606506, 0.8796666860580444, 0.8803333044052124, 0.8803333044052124, 0.8846666812896729, 0.8830000162124634, 0.8833333253860474, 0.8843333125114441, 0.8836666941642761, 0.8836666941642761]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8, 6, 0, 7, 9, 3, 1, 7, 0, 2, 6, 7, 7, 1, 6, 9, 0, 9, 2, 4, 6, 5, 2, 5, 8, 3, 1, 3, 5, 1, 0, 5], [1, 3, 0, 3, 0, 0, 3, 1, 2, 0, 7, 1, 2, 2, 2, 7, 4, 4, 3, 1, 5, 4, 5, 1, 0, 4, 0], [16, 99, 96, 99, 61, 1, 11, 81, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 69, 42, 27, 9], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)))))), tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta), beta), tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.subtract(sigma, tf.math.multiply(tf.math.square(alpha), grad)), grad))), grad)))), alpha)))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.square(grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 4, 3, 1, 2, 0], [20, 99, 96, 99, 39, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 6, 1, 2, 2, 8, 7, 0, 8, 1, 0, 9], [0, 0, 3, 3, 0, 0, 3, 2, 1, 0], [16, 99, 96, 99, 61, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 27, 17, 10, 6], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.square(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)))))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 5, 3, 3, 8], [0, 1, 0, 2, 3], [39, 8], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 2, 6, 8, 7, 1, 4, 0, 4, 8, 3, 2, 7, 3, 4, 1, 6, 3, 6, 3, 0, 0, 9, 6, 9], [0, 2, 0, 3, 5, 0, 3, 1, 1, 2, 0, 0, 4, 3, 4, 2, 5, 5, 0], [16, 16, 18, 27, 96, 3, 53, 81], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 12, 7, 5, 2, 48, 29, 19, 8, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.pow(tf.math.negative(alpha), tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(alpha, beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.negative(grad), beta)), grad)), tf.math.negative(grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3100080490112305, 2.310882091522217, 2.314868450164795, 2.3153560161590576, 2.3164479732513428, 2.3195993900299072], "accuracy": [0.09351472556591034, 0.09470347315073013, 0.08809932321310043, 0.08611807972192764, 0.08638224750757217, 0.08506141602993011], "val_loss": [2.309995174407959, 2.3118245601654053, 2.3136937618255615, 2.3155603408813477, 2.317460298538208, 2.3193955421447754], "val_accuracy": [0.0949999988079071, 0.09466666728258133, 0.09433333575725555, 0.09433333575725555, 0.09399999678134918, 0.09433333575725555]}}]