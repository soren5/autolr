[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.219695568084717, 1.8546048402786255, 1.3731211423873901, 1.0827142000198364, 0.9259211421012878, 0.8291016817092896, 0.7697248458862305, 0.7135973572731018, 0.673190176486969, 0.6382802724838257, 0.6187254786491394, 0.6051070094108582, 0.5872082710266113, 0.5682792663574219, 0.5457865595817566, 0.5376741886138916, 0.5196570158004761, 0.5186477899551392, 0.4918631911277771, 0.4945262372493744, 0.48060110211372375, 0.47374987602233887, 0.4648035764694214, 0.45412400364875793, 0.43944278359413147, 0.436283141374588, 0.4331584572792053, 0.42540818452835083, 0.4207208752632141, 0.4105057418346405, 0.3948577046394348, 0.40010273456573486, 0.38359883427619934, 0.3837094008922577, 0.37514379620552063, 0.3720371425151825, 0.36993715167045593, 0.36675283312797546, 0.35625237226486206, 0.3538528382778168, 0.3434755206108093, 0.34298616647720337, 0.33695441484451294, 0.3308970630168915, 0.3299424350261688, 0.32836559414863586, 0.31746506690979004, 0.31435927748680115, 0.30903029441833496, 0.3047049343585968, 0.3000877797603607, 0.30259969830513, 0.29411253333091736, 0.29013490676879883, 0.28468775749206543, 0.2763112783432007, 0.27536633610725403, 0.2692068815231323, 0.2681486904621124, 0.2672477662563324, 0.2646085023880005, 0.25943997502326965, 0.2598492503166199, 0.25352615118026733, 0.24764272570610046, 0.2457118034362793, 0.2466030716896057, 0.24143922328948975, 0.2332969754934311, 0.23102259635925293, 0.22787444293498993, 0.23048974573612213, 0.22228890657424927], "accuracy": [0.29203540086746216, 0.49531105160713196, 0.5713908076286316, 0.6201294660568237, 0.6686038970947266, 0.7025492191314697, 0.7168141603469849, 0.7432307600975037, 0.7543256878852844, 0.7660810947418213, 0.7695152759552002, 0.7795535326004028, 0.7861577272415161, 0.789988100528717, 0.8014793395996094, 0.8030643463134766, 0.8090080618858337, 0.813498854637146, 0.8251221776008606, 0.8216879963874817, 0.8272355198860168, 0.8317263126373291, 0.8343679904937744, 0.8359529972076416, 0.8405758738517761, 0.846387505531311, 0.8425571322441101, 0.8529917001724243, 0.8512746095657349, 0.8506141901016235, 0.859199583530426, 0.8573504090309143, 0.8638224601745605, 0.8589354157447815, 0.863558292388916, 0.8676528930664062, 0.8650112152099609, 0.868049144744873, 0.8726720213890076, 0.8725399374961853, 0.8761062026023865, 0.876370370388031, 0.8795403242111206, 0.8804649114608765, 0.8792761564254761, 0.8841632604598999, 0.8882578015327454, 0.8877294659614563, 0.8856161832809448, 0.891559898853302, 0.8927486538887024, 0.8881257176399231, 0.8912957310676575, 0.895918607711792, 0.8957865834236145, 0.9008057117462158, 0.9025228023529053, 0.902390718460083, 0.9043719172477722, 0.9030511379241943, 0.9029190540313721, 0.9051644206047058, 0.9046360850334167, 0.9071456789970398, 0.9125610589981079, 0.9079381823539734, 0.9122969508171082, 0.9109761118888855, 0.9138818979263306, 0.9170519113540649, 0.9185048341751099, 0.9169198274612427, 0.9196935892105103], "val_loss": [2.0316901206970215, 1.494943380355835, 1.039844274520874, 0.8505046963691711, 0.7619017958641052, 0.702215313911438, 0.6732485294342041, 0.6248801946640015, 0.5976972579956055, 0.5874281525611877, 0.563254714012146, 0.5480252504348755, 0.5401386022567749, 0.5233926773071289, 0.5214998126029968, 0.5025085210800171, 0.48950642347335815, 0.48169827461242676, 0.47332143783569336, 0.4746270775794983, 0.4593975841999054, 0.4537855088710785, 0.45597130060195923, 0.4441549777984619, 0.4364525079727173, 0.43359634280204773, 0.4279003143310547, 0.4267983138561249, 0.4289151728153229, 0.42026737332344055, 0.4116131067276001, 0.4107922315597534, 0.405230313539505, 0.4059368968009949, 0.4009527266025543, 0.40121525526046753, 0.39296191930770874, 0.3925926387310028, 0.39188793301582336, 0.3852827250957489, 0.38375067710876465, 0.3823528587818146, 0.38099050521850586, 0.38165149092674255, 0.3816329836845398, 0.37265750765800476, 0.37643852829933167, 0.373435914516449, 0.36783307790756226, 0.3657444715499878, 0.372609943151474, 0.3630557358264923, 0.3715246319770813, 0.36280953884124756, 0.3711565434932709, 0.36164453625679016, 0.36117294430732727, 0.3609520196914673, 0.3617232143878937, 0.3564379811286926, 0.36340364813804626, 0.35597795248031616, 0.3583502471446991, 0.36015063524246216, 0.3577156662940979, 0.3565041124820709, 0.3561156392097473, 0.3544461131095886, 0.3582921624183655, 0.35896387696266174, 0.36207911372184753, 0.3559151887893677, 0.3547167181968689], "val_accuracy": [0.5370000004768372, 0.6636666655540466, 0.6796666383743286, 0.6990000009536743, 0.7303333282470703, 0.746999979019165, 0.7493333220481873, 0.7713333368301392, 0.784333348274231, 0.7856666445732117, 0.7943333387374878, 0.8050000071525574, 0.8033333420753479, 0.8100000023841858, 0.8053333163261414, 0.8176666498184204, 0.8220000267028809, 0.8263333439826965, 0.8320000171661377, 0.824999988079071, 0.8339999914169312, 0.8379999995231628, 0.8293333053588867, 0.8379999995231628, 0.8500000238418579, 0.8489999771118164, 0.8519999980926514, 0.8476666808128357, 0.8443333506584167, 0.8536666631698608, 0.8610000014305115, 0.8576666712760925, 0.8586666584014893, 0.8533333539962769, 0.8619999885559082, 0.8610000014305115, 0.859000027179718, 0.8659999966621399, 0.8640000224113464, 0.8703333139419556, 0.8690000176429749, 0.8640000224113464, 0.8700000047683716, 0.8696666955947876, 0.8736666440963745, 0.8696666955947876, 0.8690000176429749, 0.875, 0.875333309173584, 0.875333309173584, 0.8743333220481873, 0.8766666650772095, 0.871666669845581, 0.878000020980835, 0.874666690826416, 0.8756666779518127, 0.8793333172798157, 0.8763333559036255, 0.8796666860580444, 0.8790000081062317, 0.8766666650772095, 0.8776666522026062, 0.8820000290870667, 0.8786666393280029, 0.8823333382606506, 0.8790000081062317, 0.8820000290870667, 0.8833333253860474, 0.8813333511352539, 0.8799999952316284, 0.8786666393280029, 0.8816666603088379, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 2, 8, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 38, 76], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 4, 3, 6, 6, 1, 6, 6, 4, 2, 8, 7, 8, 7, 2, 7, 0, 8, 2, 6, 7, 0, 7, 2, 8, 1, 8, 9, 5, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 0, 7, 7, 1, 4, 3, 4, 1], [16, 99, 96, 99, 61, 1, 67, 88, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 49, 30, 19, 9], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, beta)), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.square(grad))), sigma), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [1, 2, 0, 3], [89, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [70, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 1, 1, 0, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), alpha), tf.math.sqrt(tf.math.subtract(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 0, 0, 1, 1, 1], [0, 6, 7], [0, 5, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 5, 3, 2, 1, 10, 6, 4, 1, 6, 3, 3, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2, 6], [0, 2, 0, 3, 1, 3], [95, 16], [0, 1, 0], [2, 9], [0], [99, 21], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 1, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 84, 99, 61, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 13, 7, 6, 2, 3, 2, 1, 2, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303588628768921, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]