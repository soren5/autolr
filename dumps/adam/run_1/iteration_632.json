[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.8621861934661865, 1.3980358839035034, 1.0865960121154785, 0.9499508738517761, 0.8388881683349609, 0.7839965224266052, 0.7288978099822998, 0.691909670829773, 0.6608394980430603, 0.6452893018722534, 0.612122118473053, 0.6012836694717407, 0.576052188873291, 0.5625565052032471, 0.5563569068908691, 0.5308915376663208, 0.5221741199493408, 0.5069451332092285, 0.4958002269268036, 0.48890164494514465, 0.48050636053085327, 0.46968674659729004, 0.4735471308231354, 0.4580506682395935, 0.44600537419319153, 0.44517478346824646, 0.4341253638267517, 0.4259519875049591, 0.4238801896572113, 0.41437971591949463, 0.41296225786209106, 0.4022741913795471, 0.39899197220802307, 0.39263370633125305, 0.3808753192424774, 0.3742927610874176, 0.369285523891449, 0.36521002650260925, 0.3601920008659363, 0.3556915521621704, 0.355968713760376, 0.3369557559490204, 0.34088972210884094, 0.33003491163253784, 0.33207181096076965, 0.32545965909957886, 0.3194013237953186, 0.3165552318096161, 0.30852460861206055, 0.3058224320411682, 0.30811846256256104, 0.3070646822452545, 0.2940799295902252, 0.2855871021747589, 0.2871396243572235, 0.27838149666786194, 0.27921062707901, 0.2761247158050537, 0.26990771293640137, 0.2592495381832123, 0.25826340913772583], "accuracy": [0.27539294958114624, 0.483819842338562, 0.5563333630561829, 0.6247523427009583, 0.6561880707740784, 0.6972658634185791, 0.7187954187393188, 0.7387399077415466, 0.7478536367416382, 0.759080708026886, 0.7606657147407532, 0.7788931727409363, 0.7779685854911804, 0.7917051911354065, 0.7948752045631409, 0.8009510040283203, 0.8103289008140564, 0.8137630224227905, 0.8166688680648804, 0.8249900937080383, 0.8206313848495483, 0.829216718673706, 0.8296129703521729, 0.8338396549224854, 0.8350284099578857, 0.8403117060661316, 0.839519202709198, 0.8454629778862, 0.8466516733169556, 0.8520671129226685, 0.8498216867446899, 0.854708731174469, 0.8623695969581604, 0.8597279191017151, 0.8639545440673828, 0.8691058158874512, 0.8654074668884277, 0.8689737319946289, 0.8673887252807617, 0.8704266548156738, 0.8762382864952087, 0.8691058158874512, 0.8762382864952087, 0.8813894987106323, 0.8775591254234314, 0.8809932470321655, 0.8817857503890991, 0.887201189994812, 0.8854840993881226, 0.8891823887825012, 0.8889182209968567, 0.8899748921394348, 0.8910315632820129, 0.8948619961738586, 0.894069492816925, 0.9006736278533936, 0.8989565372467041, 0.9001452922821045, 0.901862382888794, 0.9031832218170166, 0.9060890078544617, 0.9080702662467957], "val_loss": [2.036027431488037, 1.5089088678359985, 1.0477019548416138, 0.8403277397155762, 0.7517364621162415, 0.6983659863471985, 0.6488041281700134, 0.6133833527565002, 0.5896996855735779, 0.5663425326347351, 0.5507428646087646, 0.531370997428894, 0.5199344158172607, 0.5062215924263, 0.49903222918510437, 0.4881913363933563, 0.47271448373794556, 0.46174755692481995, 0.45747050642967224, 0.4459525942802429, 0.4426858723163605, 0.4342041313648224, 0.43015995621681213, 0.43430981040000916, 0.41523420810699463, 0.41589492559432983, 0.41015198826789856, 0.4076772928237915, 0.40770986676216125, 0.3977181017398834, 0.39479222893714905, 0.3863934278488159, 0.38731977343559265, 0.39197126030921936, 0.38244175910949707, 0.3775818645954132, 0.3763877749443054, 0.3756745159626007, 0.3694254159927368, 0.3710187077522278, 0.36335164308547974, 0.362240731716156, 0.36127424240112305, 0.3569009304046631, 0.3559422194957733, 0.355600506067276, 0.35185399651527405, 0.35263440012931824, 0.3570699989795685, 0.3498593270778656, 0.35031265020370483, 0.35097846388816833, 0.34529945254325867, 0.3446444869041443, 0.34574970602989197, 0.3355230987071991, 0.34113016724586487, 0.3369523286819458, 0.33515262603759766, 0.3379236161708832, 0.340027779340744, 0.34219250082969666], "val_accuracy": [0.5493333339691162, 0.6610000133514404, 0.6800000071525574, 0.7026666402816772, 0.7289999723434448, 0.7413333058357239, 0.7549999952316284, 0.7693333625793457, 0.7770000100135803, 0.7836666703224182, 0.7946666479110718, 0.8006666898727417, 0.8090000152587891, 0.8133333325386047, 0.8173333406448364, 0.8193333148956299, 0.8293333053588867, 0.8376666903495789, 0.8316666483879089, 0.840666651725769, 0.8413333296775818, 0.8450000286102295, 0.8453333377838135, 0.8443333506584167, 0.8533333539962769, 0.8486666679382324, 0.8539999723434448, 0.8533333539962769, 0.8556666374206543, 0.8606666922569275, 0.8636666536331177, 0.8640000224113464, 0.862666666507721, 0.8643333315849304, 0.8686666488647461, 0.8666666746139526, 0.8690000176429749, 0.8733333349227905, 0.8759999871253967, 0.8723333477973938, 0.8769999742507935, 0.8766666650772095, 0.8726666569709778, 0.8776666522026062, 0.878000020980835, 0.8799999952316284, 0.8776666522026062, 0.8803333044052124, 0.8763333559036255, 0.8816666603088379, 0.8826666474342346, 0.8809999823570251, 0.8826666474342346, 0.8849999904632568, 0.8836666941642761, 0.8856666684150696, 0.8870000243186951, 0.8866666555404663, 0.8863333463668823, 0.8866666555404663, 0.8863333463668823, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 0], [3, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 49, 61, 6]], "fitness": -0.16542857885360718, "mapping_values": [1, 9, 5, 4, 2, 8, 6, 2, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [NaN, 4.229709566332115e+29, 4.409590172504399e+29, 4.447971300541252e+29, 3.918691487455771e+29, 4.09841379990355e+29], "accuracy": [0.09813763201236725, 0.10989301651716232, 0.11042134463787079, 0.107647605240345, 0.09285431355237961, 0.09813763201236725], "val_loss": [3.972599756488299e+29, 3.972597111963069e+29, 3.9725914451232895e+29, 3.9725770891291815e+29, 3.972548377140966e+29, 3.972548377140966e+29], "val_accuracy": [0.10866666585206985, 0.09233333170413971, 0.10866666585206985, 0.09133332967758179, 0.09233333170413971, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [2, 3, 3, 6, 2, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0, 5, 2, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303659200668335, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [96], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 2], [16, 99, 96, 56, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3035218715667725, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 2, 0, 3, 1], [78, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 94, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.math.square(beta)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [93.84910583496094, 10732.8193359375, 185219.78125, 1280870.25, 5649089.5, 18671682.0], "accuracy": [0.10196803510189056, 0.09589222073554993, 0.09840179979801178, 0.09549596905708313, 0.0956280529499054, 0.09998679161071777], "val_loss": [807.205322265625, 39640.5625, 421254.90625, 2289723.0, 8565623.0, 25248902.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]