[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2243576049804688, 1.8769843578338623, 1.4029115438461304, 1.0970834493637085, 0.9379907846450806, 0.837897777557373, 0.7715470790863037, 0.7198381423950195, 0.6947948932647705, 0.6596255302429199, 0.6354275345802307, 0.614008903503418, 0.5886109471321106, 0.5749156475067139, 0.5594594478607178, 0.5420340895652771, 0.5367171168327332, 0.52093505859375, 0.5130472183227539, 0.5003754496574402, 0.4979759752750397, 0.4865429401397705, 0.4692281484603882, 0.4657353460788727, 0.4506160616874695, 0.4422856569290161, 0.4428030848503113, 0.4265478849411011, 0.4161844551563263, 0.4116264879703522, 0.4054766297340393, 0.4068380296230316, 0.3919038474559784, 0.3823312222957611, 0.3827320635318756, 0.37999454140663147, 0.3674067556858063, 0.3620465099811554, 0.35050931572914124, 0.3556724786758423, 0.3455667793750763, 0.34134358167648315, 0.3356490433216095, 0.34192270040512085, 0.33363452553749084, 0.32525110244750977, 0.3203117549419403, 0.31646057963371277, 0.3155691921710968, 0.30830714106559753, 0.3088866174221039, 0.30297014117240906, 0.2933277189731598, 0.2984362542629242, 0.2874760329723358, 0.28321412205696106, 0.27891552448272705, 0.2762123644351959, 0.2677067518234253, 0.26706787943840027, 0.2648559808731079], "accuracy": [0.2794875204563141, 0.4888390004634857, 0.5617488026618958, 0.6153744459152222, 0.6627922058105469, 0.7041342258453369, 0.7240787148475647, 0.7408532500267029, 0.7452120184898376, 0.7637035846710205, 0.7670056819915771, 0.7755910754203796, 0.783119797706604, 0.7897239327430725, 0.7985734939575195, 0.8033285140991211, 0.8083476424217224, 0.8164047002792358, 0.8146876096725464, 0.819970965385437, 0.8234050869941711, 0.8319904804229736, 0.8329150676727295, 0.8355567455291748, 0.8389908671379089, 0.8393871188163757, 0.8448025584220886, 0.8515387773513794, 0.8519350290298462, 0.852331280708313, 0.8590674996376038, 0.8512746095657349, 0.8605204224586487, 0.8654074668884277, 0.8639545440673828, 0.8659358024597168, 0.8684453964233398, 0.8705587387084961, 0.8754457831382751, 0.8739928603172302, 0.8754457831382751, 0.8802007436752319, 0.8778232932090759, 0.8815215826034546, 0.8796724081039429, 0.8821820020675659, 0.8829745054244995, 0.8856161832809448, 0.8864086866378784, 0.8854840993881226, 0.8889182209968567, 0.8912957310676575, 0.89552241563797, 0.8903711438179016, 0.8996169567108154, 0.8973715305328369, 0.902390718460083, 0.901862382888794, 0.9030511379241943, 0.9014661312103271, 0.9055606722831726], "val_loss": [2.0404181480407715, 1.5192387104034424, 1.0398552417755127, 0.8175108432769775, 0.7275883555412292, 0.6713594794273376, 0.628510594367981, 0.594059407711029, 0.5684634447097778, 0.5453525185585022, 0.5311522483825684, 0.5144734978675842, 0.49829381704330444, 0.49325069785118103, 0.47810667753219604, 0.4653638005256653, 0.46208176016807556, 0.4553638994693756, 0.4470519721508026, 0.4491861164569855, 0.43709713220596313, 0.42822763323783875, 0.41968968510627747, 0.42133161425590515, 0.4182710647583008, 0.4069443345069885, 0.4056425094604492, 0.399361252784729, 0.39893269538879395, 0.4000554084777832, 0.39037197828292847, 0.38624876737594604, 0.38295361399650574, 0.38231924176216125, 0.3791085183620453, 0.3823772072792053, 0.3728196620941162, 0.3719676434993744, 0.37269672751426697, 0.3713325262069702, 0.36452415585517883, 0.3692343831062317, 0.36910775303840637, 0.36114224791526794, 0.36357560753822327, 0.3588317930698395, 0.35622158646583557, 0.3560132682323456, 0.35292789340019226, 0.35538434982299805, 0.35346871614456177, 0.35119524598121643, 0.3532564342021942, 0.34454044699668884, 0.34838131070137024, 0.34531110525131226, 0.34938687086105347, 0.3409552276134491, 0.3399925231933594, 0.3395569622516632, 0.34306633472442627], "val_accuracy": [0.5460000038146973, 0.6470000147819519, 0.6859999895095825, 0.7163333296775818, 0.7379999756813049, 0.7599999904632568, 0.7749999761581421, 0.7770000100135803, 0.7876666784286499, 0.7956666946411133, 0.8033333420753479, 0.8130000233650208, 0.8146666884422302, 0.8159999847412109, 0.8226666450500488, 0.8299999833106995, 0.8309999704360962, 0.8296666741371155, 0.8379999995231628, 0.8326666951179504, 0.8446666598320007, 0.8429999947547913, 0.8443333506584167, 0.8460000157356262, 0.8446666598320007, 0.8496666550636292, 0.8553333282470703, 0.8556666374206543, 0.8496666550636292, 0.8496666550636292, 0.8553333282470703, 0.8613333106040955, 0.8606666922569275, 0.862666666507721, 0.862666666507721, 0.856333315372467, 0.8656666874885559, 0.8679999709129333, 0.8633333444595337, 0.8603333234786987, 0.8709999918937683, 0.8683333396911621, 0.8706666827201843, 0.8723333477973938, 0.8666666746139526, 0.8723333477973938, 0.8743333220481873, 0.8700000047683716, 0.8736666440963745, 0.8706666827201843, 0.8740000128746033, 0.875333309173584, 0.8743333220481873, 0.8769999742507935, 0.8723333477973938, 0.8786666393280029, 0.875, 0.8759999871253967, 0.8763333559036255, 0.8766666650772095, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 2, 9], [0, 2, 0, 2], [16, 16, 26], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 2, 1, 4, 6, 8], [4, 0, 1, 4, 0, 3, 3, 4, 2, 0], [16, 99, 18, 99, 61, 42]], "fitness": -0.2777142822742462, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.426510810852051, 2.3027217388153076, 2.208930730819702, 2.3079445362091064, 2.3034369945526123, 2.3032472133636475], "accuracy": [0.18650111556053162, 0.14938580989837646, 0.2370888888835907, 0.10117553919553757, 0.09945846349000931, 0.09338264167308807], "val_loss": [2.263791561126709, 2.286935329437256, 2.318849802017212, 2.3031089305877686, 2.302783966064453, 2.3026340007781982], "val_accuracy": [0.26733332872390747, 0.11933333426713943, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 0], [0, 2, 2, 2, 2], [75, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [60, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [4, 3, 3, 6, 8, 1, 4, 2, 4, 0, 8, 4, 9, 2, 1, 2, 9, 0, 5, 0], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 5], [16, 99, 96, 99, 61, 1, 2, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 10, 6, 4, 2, 2, 1, 1, 1, 31, 20, 11, 8], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(sigma, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma))))), tf.math.add(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), tf.math.negative(beta))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 93], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 39], [0, 1], [0], [4], [77], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 1, 0, 4], [16, 27, 74, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 6, 3, 3, 2, 2, 1, 1, 0, 21, 10, 11, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), alpha))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [98, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 4], [16, 99, 96, 28, 61, 26]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 6, 3, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3106164932250977, 2.313359022140503, 2.3156535625457764, 2.316695213317871, 2.316706418991089, 2.320185661315918], "accuracy": [0.09179764986038208, 0.08928807079792023, 0.08770307898521423, 0.08453308790922165, 0.08506141602993011, 0.0796460211277008], "val_loss": [2.310412883758545, 2.3122899532318115, 2.314199924468994, 2.316133499145508, 2.3180716037750244, 2.3200252056121826], "val_accuracy": [0.08766666799783707, 0.08733333647251129, 0.08666666597127914, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129]}}]