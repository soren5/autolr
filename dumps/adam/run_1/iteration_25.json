[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2212955951690674, 1.866431713104248, 1.3951305150985718, 1.0862871408462524, 0.9328632950782776, 0.8341107368469238, 0.7618007659912109, 0.7177868485450745, 0.6795998811721802, 0.6511416435241699, 0.6226759552955627, 0.6109140515327454, 0.5807844996452332, 0.5683917999267578, 0.5497413277626038, 0.5310395956039429, 0.5276548266410828, 0.5135615468025208, 0.49356532096862793, 0.49279847741127014, 0.4829050302505493, 0.46689116954803467, 0.4621877670288086, 0.45250120759010315, 0.44748663902282715, 0.4302164912223816, 0.42241573333740234, 0.42319127917289734, 0.41494837403297424, 0.41323885321617126, 0.4035641849040985, 0.4002029299736023, 0.3847368061542511, 0.37837356328964233, 0.38492196798324585, 0.37433069944381714, 0.36796239018440247, 0.3653322756290436, 0.34947794675827026, 0.34094205498695374, 0.3427742123603821, 0.3420581817626953, 0.3322373926639557, 0.32572486996650696, 0.32571324706077576, 0.32055792212486267, 0.31893327832221985, 0.3115508556365967, 0.30672144889831543, 0.3058861494064331, 0.30357626080513, 0.2932696044445038, 0.2900506258010864, 0.27951744198799133, 0.2857460379600525, 0.2824239730834961, 0.27454471588134766, 0.27382421493530273, 0.26417630910873413, 0.26401394605636597, 0.25778716802597046, 0.2607852816581726, 0.24926519393920898, 0.24952898919582367, 0.24443788826465607, 0.23831120133399963, 0.24145199358463287, 0.23238176107406616, 0.23240236937999725, 0.23525363206863403, 0.22002103924751282, 0.22294659912586212, 0.21717940270900726, 0.21446484327316284, 0.21208138763904572, 0.21124441921710968, 0.20598742365837097, 0.2053810954093933, 0.19959749281406403, 0.20150087773799896, 0.197382852435112, 0.19428761303424835, 0.19169969856739044, 0.1913081556558609], "accuracy": [0.2723550498485565, 0.48144233226776123, 0.5624092221260071, 0.6218464970588684, 0.6679434776306152, 0.7021529674530029, 0.7251353859901428, 0.7392682433128357, 0.7519482374191284, 0.7658169269561768, 0.7765156626701355, 0.7744023203849792, 0.7841764688491821, 0.7927618622779846, 0.8053097128868103, 0.8090080618858337, 0.8079513907432556, 0.8140271902084351, 0.8238013386726379, 0.8234050869941711, 0.8249900937080383, 0.8339717388153076, 0.8315942287445068, 0.8363492488861084, 0.8381983637809753, 0.8461233377456665, 0.846387505531311, 0.8462554216384888, 0.8536521196365356, 0.8529917001724243, 0.8610487580299377, 0.8558974862098694, 0.8628978729248047, 0.8665962219238281, 0.8625016212463379, 0.8627657890319824, 0.8687095642089844, 0.8673887252807617, 0.8747853636741638, 0.8784837126731873, 0.8746532797813416, 0.8766345381736755, 0.8786157965660095, 0.8848236799240112, 0.8803328275680542, 0.887201189994812, 0.8823140859603882, 0.887597382068634, 0.8844274282455444, 0.8918240666389465, 0.8878615498542786, 0.8947299122810364, 0.8963148593902588, 0.8985602855682373, 0.8982961177825928, 0.8988244533538818, 0.900409460067749, 0.8971073627471924, 0.9052965044975281, 0.9014661312103271, 0.9055606722831726, 0.9026548862457275, 0.9071456789970398, 0.9071456789970398, 0.9082023501396179, 0.9157310724258423, 0.9134856462478638, 0.9149385690689087, 0.9144102334976196, 0.9140139818191528, 0.9203540086746216, 0.9192973375320435, 0.9206181764602661, 0.9206181764602661, 0.9235239624977112, 0.921938955783844, 0.9241843819618225, 0.9269581437110901, 0.9265618920326233, 0.9236560463905334, 0.9282789826393127, 0.9309206008911133, 0.930260181427002, 0.9325056076049805], "val_loss": [2.0385475158691406, 1.5195046663284302, 1.049741268157959, 0.8398317694664001, 0.7447013258934021, 0.6908289194107056, 0.6371368169784546, 0.6023504137992859, 0.5746412873268127, 0.5527424812316895, 0.5340865850448608, 0.529979407787323, 0.5012053847312927, 0.4948175549507141, 0.48789429664611816, 0.4687568247318268, 0.4647671580314636, 0.4578062891960144, 0.45144394040107727, 0.43925249576568604, 0.4402976930141449, 0.43201565742492676, 0.42665156722068787, 0.41821998357772827, 0.42067497968673706, 0.4102480411529541, 0.4147249758243561, 0.4036840796470642, 0.4000091552734375, 0.39578884840011597, 0.3974454700946808, 0.3928360939025879, 0.3872162997722626, 0.3941364884376526, 0.38508501648902893, 0.3849467635154724, 0.3764481246471405, 0.37433406710624695, 0.37577638030052185, 0.3704504370689392, 0.3707771897315979, 0.3676501512527466, 0.3689732253551483, 0.36450910568237305, 0.36455878615379333, 0.3620181381702423, 0.36187833547592163, 0.362611323595047, 0.36027026176452637, 0.36285173892974854, 0.3524060845375061, 0.3522537350654602, 0.3508665859699249, 0.3496141731739044, 0.35051900148391724, 0.34885749220848083, 0.3489656448364258, 0.34315210580825806, 0.3495948016643524, 0.35038021206855774, 0.34188640117645264, 0.3435935080051422, 0.3426666557788849, 0.3452672064304352, 0.3386448919773102, 0.3472769260406494, 0.34021762013435364, 0.33800220489501953, 0.3400467038154602, 0.337131530046463, 0.34003573656082153, 0.338164359331131, 0.33586281538009644, 0.33757129311561584, 0.3427199721336365, 0.33963632583618164, 0.34108516573905945, 0.34359559416770935, 0.3384925127029419, 0.34060928225517273, 0.34354692697525024, 0.3473736047744751, 0.3535248339176178, 0.33763810992240906], "val_accuracy": [0.5296666622161865, 0.6473333239555359, 0.6833333373069763, 0.7083333134651184, 0.734666645526886, 0.7433333396911621, 0.7636666893959045, 0.7706666588783264, 0.784333348274231, 0.7953333258628845, 0.800000011920929, 0.8050000071525574, 0.8166666626930237, 0.8183333277702332, 0.8246666789054871, 0.8273333311080933, 0.8343333601951599, 0.8403333425521851, 0.8343333601951599, 0.8420000076293945, 0.8446666598320007, 0.8426666855812073, 0.8496666550636292, 0.8513333201408386, 0.8496666550636292, 0.8486666679382324, 0.8500000238418579, 0.8560000061988831, 0.8533333539962769, 0.8553333282470703, 0.8553333282470703, 0.8556666374206543, 0.8569999933242798, 0.8619999885559082, 0.8569999933242798, 0.8576666712760925, 0.8586666584014893, 0.8636666536331177, 0.8619999885559082, 0.8653333187103271, 0.8636666536331177, 0.8640000224113464, 0.862333357334137, 0.8650000095367432, 0.8683333396911621, 0.8676666617393494, 0.8683333396911621, 0.8690000176429749, 0.8676666617393494, 0.8696666955947876, 0.8693333268165588, 0.8700000047683716, 0.871999979019165, 0.8736666440963745, 0.871999979019165, 0.871999979019165, 0.8730000257492065, 0.8756666779518127, 0.8713333606719971, 0.8736666440963745, 0.8763333559036255, 0.8759999871253967, 0.8743333220481873, 0.874666690826416, 0.8786666393280029, 0.8763333559036255, 0.8756666779518127, 0.8803333044052124, 0.8796666860580444, 0.8793333172798157, 0.8806666731834412, 0.8813333511352539, 0.8793333172798157, 0.8826666474342346, 0.8776666522026062, 0.8816666603088379, 0.8803333044052124, 0.8826666474342346, 0.8843333125114441, 0.8790000081062317, 0.8833333253860474, 0.8773333430290222, 0.8776666522026062, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 15], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 2, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.1485714316368103, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 1, 2, 1, 1, 0, 10, 6, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [9.876884365009486e+18, 2.0421057938869715e+19, 2.6997052266644505e+19, 2.6252355240175075e+19, 2.4639376080274194e+19, 2.5469131326268375e+19, 2.23619708398013e+19, 2.648161001163614e+19, 2.7061573807985656e+19, 1.8222642713247875e+19, 2.5228703317645853e+19, 2.635391493020949e+19], "accuracy": [0.11781799048185349, 0.1216483935713768, 0.12389380484819412, 0.12521463632583618, 0.12508255243301392, 0.1282525360584259, 0.1286487877368927, 0.1274600476026535, 0.12217672914266586, 0.1282525360584259, 0.12429005652666092, 0.12653546035289764], "val_loss": [2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19, 2.7810429187431334e+19], "val_accuracy": [0.12933333218097687, 0.12933333218097687, 0.14033333957195282, 0.14000000059604645, 0.13966666162014008, 0.1483333259820938, 0.14900000393390656, 0.14900000393390656, 0.14900000393390656, 0.14900000393390656, 0.14900000393390656, 0.14900000393390656]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 3], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 4, 0, 3, 0, 0, 2, 1, 2, 0], [16, 77, 96, 6, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 19, 12, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 2, 0, 2], [39, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 0, 7, 0, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), alpha)), tf.math.sqrt(tf.math.negative(beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.square(beta))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 28, 16, 12, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 7, 6, 0], [4, 6, 0], [39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 0, 0], [16, 99, 96, 99, 61, 1, 55]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 8, 5, 3, 1, 21, 11, 10, 7], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310025930404663, 2.3094050884246826, 2.3096868991851807, 2.311213731765747, 2.3102784156799316, 2.310703992843628], "accuracy": [0.09549596905708313, 0.09047681838274002, 0.09126931428909302, 0.09179764986038208, 0.08717474341392517, 0.08994849026203156], "val_loss": [2.3085854053497314, 2.3085854053497314, 2.3085854053497314, 2.3085854053497314, 2.3085849285125732, 2.3085849285125732], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]