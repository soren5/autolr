[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224555015563965, 1.8674613237380981, 1.3848724365234375, 1.093099594116211, 0.9415722489356995, 0.8468493223190308, 0.7818722128868103, 0.7342494130134583, 0.6862578392028809, 0.663402795791626, 0.6325744390487671, 0.6158267259597778, 0.6020953059196472, 0.5750018954277039, 0.5680999159812927, 0.5506544709205627, 0.5389562845230103, 0.5250153541564941, 0.512816309928894, 0.5065848231315613, 0.48807084560394287, 0.478158175945282, 0.4739518165588379, 0.467654824256897, 0.4526920020580292, 0.44559112191200256, 0.4430648982524872, 0.4360875189304352, 0.4315986931324005, 0.41970688104629517, 0.40959203243255615, 0.3989636301994324, 0.4039466083049774, 0.393710732460022, 0.3871369957923889, 0.38390588760375977, 0.37302276492118835, 0.36682283878326416, 0.36435410380363464, 0.35620206594467163, 0.35854479670524597, 0.34933966398239136, 0.3438853919506073, 0.34583595395088196, 0.3392678499221802, 0.3382427990436554, 0.33196765184402466, 0.3242889940738678, 0.318355917930603, 0.30618882179260254, 0.3065929710865021, 0.30637967586517334, 0.2998110055923462, 0.2948702275753021], "accuracy": [0.2884691655635834, 0.48751816153526306, 0.5661075115203857, 0.6132611036300659, 0.6672830581665039, 0.6972658634185791, 0.7185312509536743, 0.7384757399559021, 0.7460044622421265, 0.7606657147407532, 0.7751948237419128, 0.7766477465629578, 0.7824593782424927, 0.7973847389221191, 0.7959318161010742, 0.8070268034934998, 0.804649293422699, 0.8153480291366577, 0.8183859586715698, 0.8183859586715698, 0.8286884427070618, 0.834632158279419, 0.8310658931732178, 0.8366134166717529, 0.8405758738517761, 0.8446704745292664, 0.8403117060661316, 0.8488970994949341, 0.8502179384231567, 0.8516708612442017, 0.8531237840652466, 0.8601241707801819, 0.857218325138092, 0.8593316674232483, 0.8607845902442932, 0.8668603897094727, 0.868049144744873, 0.8687095642089844, 0.8696341514587402, 0.872407853603363, 0.8712190985679626, 0.8765024542808533, 0.8786157965660095, 0.8767666220664978, 0.8790120482444763, 0.8747853636741638, 0.8825782537460327, 0.8821820020675659, 0.8831065893173218, 0.8898428082466125, 0.8908994793891907, 0.8905032277107239, 0.8930128216743469, 0.8926165699958801], "val_loss": [2.034804582595825, 1.5006054639816284, 1.029477596282959, 0.8163601160049438, 0.7297978401184082, 0.6756089925765991, 0.6325273513793945, 0.5990493297576904, 0.5685755014419556, 0.5527908802032471, 0.5288500785827637, 0.5197758078575134, 0.5093978047370911, 0.49404776096343994, 0.4838780164718628, 0.4722321331501007, 0.4666154682636261, 0.45673128962516785, 0.44683223962783813, 0.4411596357822418, 0.433678537607193, 0.4254443347454071, 0.42208459973335266, 0.412350594997406, 0.4062739312648773, 0.4026350975036621, 0.4009350538253784, 0.3948034644126892, 0.39018040895462036, 0.38800570368766785, 0.38175272941589355, 0.3798612952232361, 0.38392212986946106, 0.3726266622543335, 0.370669424533844, 0.3680068850517273, 0.3634472191333771, 0.3602276146411896, 0.36328938603401184, 0.3573644161224365, 0.3580807149410248, 0.35290825366973877, 0.3521783947944641, 0.34924593567848206, 0.3605688214302063, 0.35382670164108276, 0.343396931886673, 0.3463881015777588, 0.3413831293582916, 0.3422693610191345, 0.34050285816192627, 0.3426232635974884, 0.34056350588798523, 0.34012657403945923], "val_accuracy": [0.5450000166893005, 0.6616666913032532, 0.687333345413208, 0.7193333506584167, 0.7459999918937683, 0.7609999775886536, 0.7703333497047424, 0.7826666831970215, 0.7943333387374878, 0.7956666946411133, 0.8076666593551636, 0.8100000023841858, 0.8106666803359985, 0.8220000267028809, 0.8259999752044678, 0.8276666402816772, 0.8236666917800903, 0.8353333473205566, 0.8389999866485596, 0.8410000205039978, 0.8433333039283752, 0.8450000286102295, 0.8456666469573975, 0.8539999723434448, 0.8553333282470703, 0.8606666922569275, 0.8546666502952576, 0.8576666712760925, 0.8610000014305115, 0.8600000143051147, 0.862666666507721, 0.859000027179718, 0.859666645526886, 0.8673333525657654, 0.8636666536331177, 0.8693333268165588, 0.8650000095367432, 0.8700000047683716, 0.8659999966621399, 0.8706666827201843, 0.8709999918937683, 0.8733333349227905, 0.8736666440963745, 0.8730000257492065, 0.8650000095367432, 0.8703333139419556, 0.8740000128746033, 0.8759999871253967, 0.878333330154419, 0.8759999871253967, 0.874666690826416, 0.8713333606719971, 0.8773333430290222, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 8], [0, 0, 0, 3, 4], [16, 16, 0], [0, 1], [0], [0], [22], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 9, 4, 2, 4, 2, 8], [2, 0, 0, 3, 0, 4, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8328571319580078, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 12, 7, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2600181102752686, 1.677557349205017, 1.1200700998306274, 0.8797134160995483, 0.7943599224090576, 0.7475869059562683, 0.6851819753646851, 0.6327717900276184, 0.6072070002555847, 0.5713277459144592, 0.5523019433021545, 0.5386031270027161, 0.5361670851707458, 0.5114943981170654, 0.5036153793334961, 0.4825720489025116, 0.4856444001197815, 0.4773298501968384, 0.48055046796798706, 0.46450185775756836, 0.45223796367645264, 0.4327554702758789, 0.44592446088790894, 0.41619673371315], "accuracy": [0.2016906589269638, 0.45779949426651, 0.6252806782722473, 0.6783780455589294, 0.6907938122749329, 0.7116629481315613, 0.7341170310974121, 0.7563069462776184, 0.7578919529914856, 0.7771760821342468, 0.7820631265640259, 0.7909126877784729, 0.7902522683143616, 0.7956677079200745, 0.8068947196006775, 0.8103289008140564, 0.8103289008140564, 0.8178576231002808, 0.8087438941001892, 0.8244617581367493, 0.819970965385437, 0.829216718673706, 0.8297450542449951, 0.8392550349235535], "val_loss": [2.0885186195373535, 0.9541755318641663, 0.8421944379806519, 0.6896348595619202, 0.6831753849983215, 0.6284094452857971, 0.5835199356079102, 0.576539158821106, 0.5554624795913696, 0.556422770023346, 0.5275030136108398, 0.5280739665031433, 0.514492928981781, 0.49302974343299866, 0.49815046787261963, 0.4761817157268524, 0.48334449529647827, 0.5109377503395081, 0.46961092948913574, 0.4852617681026459, 0.45388150215148926, 0.4750123620033264, 0.4743010997772217, 0.4576941430568695], "val_accuracy": [0.45899999141693115, 0.6673333048820496, 0.7149999737739563, 0.7276666760444641, 0.7133333086967468, 0.7506666779518127, 0.7670000195503235, 0.7730000019073486, 0.7903333306312561, 0.7916666865348816, 0.7953333258628845, 0.7996666431427002, 0.7996666431427002, 0.8100000023841858, 0.8186666369438171, 0.8159999847412109, 0.8176666498184204, 0.8230000138282776, 0.8410000205039978, 0.8289999961853027, 0.8343333601951599, 0.8349999785423279, 0.8343333601951599, 0.840666651725769]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 6, 3, 6, 8, 8, 5, 5], [0, 1, 0, 2, 0, 3], [39, 39, 22], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 2, 8], [0, 2, 0, 3, 4, 5], [13, 16], [0, 1, 1], [2], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 0, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 4, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.29171428084373474, "mapping_values": [1, 16, 10, 6, 3, 13, 7, 6, 2, 3, 1, 2, 1, 17, 9, 8, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.square(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), grad)", "other_info": {"loss": [2.3033459186553955, 2.3007564544677734, 2.297759771347046, 2.294645071029663, 2.2798497676849365, 2.2452635765075684, 2.2033236026763916, 2.18037748336792, 2.197591543197632, 2.1636667251586914, 2.1479716300964355, 2.1434335708618164, 2.1461098194122314, 2.141726016998291, 2.138650417327881, 2.1536636352539062, 2.147655725479126, 2.120123863220215], "accuracy": [0.10011887550354004, 0.1002509593963623, 0.11874257028102875, 0.1228371411561966, 0.13472460210323334, 0.13168670237064362, 0.14568749070167542, 0.14832915365695953, 0.15070664882659912, 0.1468762308359146, 0.15797120332717896, 0.15453705191612244, 0.16219785809516907, 0.1526878923177719, 0.1578391194343567, 0.1538766324520111, 0.15440496802330017, 0.1628582775592804], "val_loss": [2.3009068965911865, 2.299499988555908, 2.3020570278167725, 2.296447992324829, 2.267335891723633, 2.2209808826446533, 2.136617422103882, 2.0816566944122314, 2.079042911529541, 2.0398685932159424, 2.0372543334960938, 2.006507396697998, 2.028433322906494, 2.023212194442749, 2.019335985183716, 2.0231244564056396, 1.9833970069885254, 1.9716132879257202], "val_accuracy": [0.10166666656732559, 0.18033333122730255, 0.10466666519641876, 0.13899999856948853, 0.15133333206176758, 0.1886666715145111, 0.23999999463558197, 0.24266666173934937, 0.21033333241939545, 0.24400000274181366, 0.2693333327770233, 0.2630000114440918, 0.2919999957084656, 0.22466666996479034, 0.20999999344348907, 0.257666677236557, 0.28333333134651184, 0.2523333430290222]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 26], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [9, 2, 3, 0, 3, 6], [0, 2, 0, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 2, 6, 8, 1, 4, 2, 4, 2, 8], [4, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 20, 10, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]