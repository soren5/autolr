[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234303951263428, 1.8692717552185059, 1.3984531164169312, 1.1207317113876343, 0.9596828818321228, 0.848235547542572, 0.7926403284072876, 0.7527526021003723, 0.7100591659545898, 0.6790016889572144, 0.6537668704986572, 0.6303268074989319, 0.5999340415000916, 0.5888311266899109, 0.5710654258728027, 0.5700929164886475, 0.5550556182861328, 0.5443633198738098, 0.5262525677680969, 0.5181770324707031, 0.5084567070007324, 0.4973224699497223, 0.4867921471595764, 0.47318801283836365, 0.4651748239994049, 0.458211213350296, 0.4496903419494629, 0.440314382314682, 0.4380362331867218, 0.43270769715309143, 0.4228939414024353, 0.41643670201301575, 0.4148375391960144, 0.4057532846927643, 0.3994497060775757, 0.3877902925014496, 0.38929399847984314, 0.3806524872779846, 0.37923312187194824, 0.377075731754303, 0.3676934540271759, 0.36809220910072327, 0.3633961081504822], "accuracy": [0.27327960729599, 0.486989825963974, 0.5575221180915833, 0.6077136397361755, 0.650640606880188, 0.6973979473114014, 0.717870831489563, 0.7228899598121643, 0.7430986762046814, 0.7499669790267944, 0.7623828053474426, 0.7749306559562683, 0.7799497842788696, 0.7825914621353149, 0.7890635132789612, 0.7909126877784729, 0.7975168228149414, 0.8033285140991211, 0.8076872229576111, 0.8144234418869019, 0.8175934553146362, 0.8226125836372375, 0.8244617581367493, 0.8323867321014404, 0.8385946154594421, 0.8354246616363525, 0.841500461101532, 0.839519202709198, 0.8455950617790222, 0.8475762605667114, 0.8477083444595337, 0.846387505531311, 0.8494254350662231, 0.8539162874221802, 0.8603883385658264, 0.8642187118530273, 0.8623695969581604, 0.8610487580299377, 0.8660678863525391, 0.8626337051391602, 0.8696341514587402, 0.8668603897094727, 0.8681812286376953], "val_loss": [2.0388684272766113, 1.5117676258087158, 1.0369030237197876, 0.8243078589439392, 0.742698073387146, 0.6810415983200073, 0.6338660717010498, 0.603852391242981, 0.5800116658210754, 0.5587294697761536, 0.541731595993042, 0.5227245092391968, 0.5105245113372803, 0.4989766478538513, 0.4929021894931793, 0.4819255769252777, 0.46747419238090515, 0.4610080420970917, 0.4558447003364563, 0.4543113112449646, 0.4433673620223999, 0.4315701127052307, 0.42959368228912354, 0.423361599445343, 0.42095282673835754, 0.4148261249065399, 0.41063955426216125, 0.40934717655181885, 0.40394115447998047, 0.40136197209358215, 0.3986765146255493, 0.39423733949661255, 0.3874748647212982, 0.3930211067199707, 0.3805292844772339, 0.37829214334487915, 0.37590348720550537, 0.37597402930259705, 0.37390023469924927, 0.370584636926651, 0.3667791485786438, 0.36401909589767456, 0.3610175848007202], "val_accuracy": [0.562666654586792, 0.6536666750907898, 0.687666654586792, 0.7149999737739563, 0.7306666374206543, 0.7549999952316284, 0.7639999985694885, 0.7693333625793457, 0.7870000004768372, 0.7893333435058594, 0.8023333549499512, 0.8013333082199097, 0.812666654586792, 0.8196666836738586, 0.8213333487510681, 0.8166666626930237, 0.8309999704360962, 0.8370000123977661, 0.8363333344459534, 0.8376666903495789, 0.8379999995231628, 0.8476666808128357, 0.8460000157356262, 0.8446666598320007, 0.8496666550636292, 0.8493333458900452, 0.8536666631698608, 0.8529999852180481, 0.8546666502952576, 0.8569999933242798, 0.8566666841506958, 0.8566666841506958, 0.8569999933242798, 0.8603333234786987, 0.862666666507721, 0.8610000014305115, 0.8669999837875366, 0.8673333525657654, 0.8669999837875366, 0.8650000095367432, 0.8640000224113464, 0.8673333525657654, 0.8673333525657654]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3], [0, 2, 2, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 1, 0, 0, 2, 1, 2, 0], [16, 99, 99, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035709857940674, 2.302541494369507, 2.3027231693267822, 2.3027257919311523, 2.302727222442627, 2.3027281761169434], "accuracy": [0.09985470771789551, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3027212619781494, 2.3027236461639404, 2.302724838256836, 2.3027262687683105, 2.3027265071868896], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 86], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [10, 99, 96, 99, 61, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3060662746429443, 2.7069313526153564, 7.33765983581543, 18.779184341430664, 37.31924057006836, 64.12832641601562, 103.37260437011719], "accuracy": [0.09708096832036972, 0.10210011899471283, 0.10355303436517715, 0.10077928751707077, 0.09642054885625839, 0.09998679161071777, 0.10342095047235489], "val_loss": [2.3074851036071777, 3.514824151992798, 10.011988639831543, 21.99289321899414, 40.24673843383789, 65.9881591796875, 100.58029174804688], "val_accuracy": [0.08100000023841858, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 4, 2, 2], [3, 2, 0, 3, 2, 1], [16, 16], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 3, 5, 1, 1, 1, 3], [0, 7, 7, 3, 0, 4, 0], [99, 99, 15], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 84, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 6, 6, 1, 14, 7, 7, 3, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.subtract(grad, tf.math.subtract(tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0, 3, 4, 6], [0, 1, 0, 2, 1, 0, 0], [39, 39, 17, 9], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 3, 3, 1, 4, 5, 9, 3, 2, 9], [0, 2, 0, 3, 1, 4, 5, 2], [38, 16, 81, 77], [1, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [64, 99, 96, 99, 61, 1]], "fitness": -0.04714285582304001, "mapping_values": [1, 16, 9, 7, 4, 22, 14, 8, 4, 1, 0, 1, 0, 16, 8, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.pow(alpha, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(grad, alpha)), tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [72327256.0, 79030976.0, NaN, NaN, Infinity, NaN, NaN, NaN, Infinity, 7.624653441204393e+33, NaN, NaN, NaN, NaN, 4.369160815853035e+34, Infinity, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, Infinity, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 3.815516396907419e+34, 1.5779796375683592e+34, NaN, Infinity, 4.406930366451632e+34, NaN, NaN, 4.4186665332000735e+34, 3352463872.0, 4070823936.0, NaN, NaN, 3.6809713789137033e+34, 9.615488186372493e+33, NaN, Infinity, 6318044672.0, 2959881216.0, NaN, 3.2128653980386046e+34, 1.4329502577939277e+34, NaN, NaN, NaN, 2976458496.0, NaN, Infinity, NaN, NaN, 4204754944.0, NaN, 1646332032.0, 4.386574670797655e+34, 4.142121869884073e+34, NaN, NaN, 3.465540844281128e+34, NaN, NaN, NaN, Infinity, NaN, NaN], "accuracy": [0.09708096832036972, 0.06670188903808594, 0.053229428827762604, 0.04966318979859352, 0.0478140264749527, 0.04900277405977249, 0.04504028707742691, 0.04332320764660835, 0.04570069909095764, 0.04517236724495888, 0.04477611929178238, 0.04134196415543556, 0.044644035398960114, 0.041606128215789795, 0.046625278890132904, 0.044644035398960114, 0.04253070801496506, 0.04596486687660217, 0.0408136323094368, 0.04596486687660217, 0.04530445113778114, 0.04675736278295517, 0.04583278298377991, 0.046229030936956406, 0.04543653503060341, 0.04847444221377373, 0.04437987133860588, 0.04794611036777496, 0.04332320764660835, 0.040945712476968765, 0.04517236724495888, 0.04583278298377991, 0.04253070801496506, 0.04345529153943062, 0.0470215305685997, 0.046889446675777435, 0.049266938120126724, 0.04715361073613167, 0.044908203184604645, 0.046625278890132904, 0.049266938120126724, 0.045568618923425674, 0.04504028707742691, 0.046229030936956406, 0.046229030936956406, 0.05071985349059105, 0.04583278298377991, 0.04332320764660835, 0.04649319872260094, 0.046229030936956406, 0.046889446675777435, 0.05005943775177002, 0.04319112375378609, 0.04517236724495888, 0.04834235832095146, 0.04979526996612549, 0.046229030936956406, 0.0470215305685997, 0.04807819426059723, 0.04675736278295517, 0.04636111482977867, 0.048870690166950226, 0.04794611036777496, 0.04530445113778114, 0.04411570355296135, 0.046625278890132904, 0.0474177785217762, 0.046625278890132904, 0.04807819426059723, 0.04675736278295517, 0.04675736278295517, 0.04570069909095764, 0.04609694704413414, 0.04530445113778114, 0.04279487580060959, 0.04913485795259476, 0.04675736278295517, 0.0474177785217762, 0.04873860627412796, 0.04715361073613167], "val_loss": [90314040.0, 73159872.0, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity], "val_accuracy": [0.015666667371988297, 0.017666665837168694, 0.017000000923871994, 0.017000000923871994, 0.01666666753590107, 0.017666665837168694, 0.018666666001081467, 0.01966666616499424, 0.019999999552965164, 0.019999999552965164, 0.020999999716877937, 0.021666666492819786, 0.023000000044703484, 0.023333333432674408, 0.024000000208616257, 0.02500000037252903, 0.025333333760499954, 0.027666667476296425, 0.02800000086426735, 0.02800000086426735, 0.028333334252238274, 0.028333334252238274, 0.02866666577756405, 0.029333332553505898, 0.029999999329447746, 0.03099999949336052, 0.03166666626930237, 0.03266666829586029, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.033666666597127914, 0.03433333337306976, 0.03433333337306976, 0.03433333337306976, 0.03433333337306976, 0.03500000014901161, 0.03566666692495346, 0.03566666692495346, 0.035999998450279236, 0.03633333370089531, 0.03700000047683716, 0.03733333200216293, 0.03700000047683716, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.03799999877810478, 0.03866666555404663, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03999999910593033, 0.03999999910593033, 0.0403333343565464, 0.04066666588187218, 0.04066666588187218, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.041999999433755875, 0.04233333468437195, 0.04233333468437195, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.04266666620969772, 0.0430000014603138, 0.0430000014603138, 0.04333333298563957, 0.04333333298563957, 0.04333333298563957, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04333333298563957, 0.04333333298563957]}}]