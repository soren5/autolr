[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237606048583984, 1.8770819902420044, 1.4030214548110962, 1.1096925735473633, 0.9444263577461243, 0.8478047251701355, 0.7853316068649292, 0.7404001951217651, 0.7014907598495483, 0.6737856268882751, 0.6508752703666687, 0.6342126131057739, 0.6139696836471558, 0.5912246108055115, 0.574457585811615, 0.5578705668449402, 0.5519633293151855, 0.5256187915802002, 0.5254369378089905, 0.5106287002563477, 0.49604979157447815, 0.4889821708202362, 0.4818316698074341, 0.4730546772480011, 0.4641149044036865, 0.4608776271343231, 0.4492466151714325, 0.44304654002189636, 0.4310392737388611, 0.43387293815612793, 0.42384424805641174, 0.4234616160392761, 0.4131564795970917, 0.4084554612636566, 0.40438172221183777, 0.392223060131073, 0.3905511498451233, 0.3852609395980835, 0.3799969553947449, 0.3700735867023468, 0.3640884459018707, 0.3651128113269806, 0.3552609086036682, 0.35680270195007324, 0.34657156467437744, 0.33771753311157227, 0.32863131165504456, 0.32960742712020874, 0.33377912640571594, 0.32911258935928345, 0.3250230848789215, 0.3148892819881439, 0.3132559657096863, 0.3004026412963867, 0.3082437813282013, 0.29960447549819946, 0.29486921429634094, 0.28886353969573975, 0.2871882915496826, 0.2905486822128296, 0.28447264432907104, 0.27097949385643005, 0.2738877534866333, 0.26863574981689453, 0.26246270537376404, 0.2572919726371765, 0.2555190324783325, 0.2445312887430191, 0.24934706091880798, 0.23740734159946442, 0.2384507656097412, 0.23882173001766205], "accuracy": [0.27843084931373596, 0.4861973226070404, 0.5624092221260071, 0.6144498586654663, 0.6707172393798828, 0.6970016956329346, 0.7166820764541626, 0.7357020378112793, 0.7405890822410583, 0.7530049085617065, 0.7626469135284424, 0.7671377658843994, 0.7825914621353149, 0.7874785661697388, 0.793422281742096, 0.7980451583862305, 0.7991018295288086, 0.8045172095298767, 0.8079513907432556, 0.8183859586715698, 0.8251221776008606, 0.8245938420295715, 0.8330471515655518, 0.8343679904937744, 0.8350284099578857, 0.8358209133148193, 0.8387266993522644, 0.8379341959953308, 0.8512746095657349, 0.8457271456718445, 0.8479725122451782, 0.8486329317092896, 0.8557654023170471, 0.8536521196365356, 0.8573504090309143, 0.8609166741371155, 0.8621054291725159, 0.8648791313171387, 0.8640866279602051, 0.8676528930664062, 0.8701624870300293, 0.870030403137207, 0.8716153502464294, 0.8741249442100525, 0.8759741187095642, 0.8833707571029663, 0.8825782537460327, 0.8844274282455444, 0.8796724081039429, 0.8824461698532104, 0.8819178342819214, 0.8844274282455444, 0.8857482671737671, 0.8930128216743469, 0.8911636471748352, 0.8916919827461243, 0.8931449055671692, 0.898428201675415, 0.8926165699958801, 0.8973715305328369, 0.8930128216743469, 0.8989565372467041, 0.902390718460083, 0.89988112449646, 0.9049002528190613, 0.9084665179252625, 0.9079381823539734, 0.9105798602104187, 0.9085986018180847, 0.9159952402114868, 0.9145423173904419, 0.9096552729606628], "val_loss": [2.040215492248535, 1.5082180500030518, 1.0246282815933228, 0.814379096031189, 0.7210677862167358, 0.6665745973587036, 0.6280789971351624, 0.5876399874687195, 0.5619222521781921, 0.5429075956344604, 0.5217992067337036, 0.5153123140335083, 0.49531087279319763, 0.4875810444355011, 0.47620388865470886, 0.4647422134876251, 0.4492068588733673, 0.44568341970443726, 0.4378238916397095, 0.43359553813934326, 0.42461320757865906, 0.42069870233535767, 0.413727343082428, 0.4095136821269989, 0.4100847542285919, 0.4002930819988251, 0.3941403329372406, 0.39108532667160034, 0.38839009404182434, 0.37878116965293884, 0.37630605697631836, 0.37302282452583313, 0.36908698081970215, 0.374848872423172, 0.36428964138031006, 0.36551761627197266, 0.36014917492866516, 0.359076589345932, 0.35583963990211487, 0.35060179233551025, 0.3540659248828888, 0.3486400544643402, 0.34585997462272644, 0.3422259986400604, 0.34502509236335754, 0.34060972929000854, 0.33690133690834045, 0.33618587255477905, 0.3379165232181549, 0.33878618478775024, 0.335886150598526, 0.33562788367271423, 0.3277330696582794, 0.33360710740089417, 0.3257719874382019, 0.32371729612350464, 0.3245258927345276, 0.3245396018028259, 0.32339659333229065, 0.3193751275539398, 0.3246482014656067, 0.317300945520401, 0.3259342312812805, 0.3209933340549469, 0.31382375955581665, 0.31726184487342834, 0.3180899918079376, 0.3164997696876526, 0.31586194038391113, 0.31026148796081543, 0.3188973665237427, 0.3120190501213074], "val_accuracy": [0.503000020980835, 0.6726666688919067, 0.6923333406448364, 0.7210000157356262, 0.7366666793823242, 0.7566666603088379, 0.768666684627533, 0.7816666960716248, 0.7860000133514404, 0.800000011920929, 0.8009999990463257, 0.809333324432373, 0.8143333196640015, 0.8143333196640015, 0.8213333487510681, 0.8296666741371155, 0.831333339214325, 0.8356666564941406, 0.8360000252723694, 0.8389999866485596, 0.8413333296775818, 0.8433333039283752, 0.8463333249092102, 0.8450000286102295, 0.8433333039283752, 0.8533333539962769, 0.8513333201408386, 0.8560000061988831, 0.8550000190734863, 0.8573333621025085, 0.862666666507721, 0.8606666922569275, 0.8640000224113464, 0.8610000014305115, 0.8619999885559082, 0.8606666922569275, 0.8659999966621399, 0.8646666407585144, 0.8656666874885559, 0.8683333396911621, 0.8676666617393494, 0.8700000047683716, 0.8686666488647461, 0.8706666827201843, 0.8733333349227905, 0.871999979019165, 0.871999979019165, 0.8733333349227905, 0.875, 0.8709999918937683, 0.8730000257492065, 0.8759999871253967, 0.8756666779518127, 0.8730000257492065, 0.8759999871253967, 0.8766666650772095, 0.8763333559036255, 0.8773333430290222, 0.875333309173584, 0.8766666650772095, 0.875333309173584, 0.8793333172798157, 0.8799999952316284, 0.8773333430290222, 0.8799999952316284, 0.878333330154419, 0.8826666474342346, 0.8796666860580444, 0.878000020980835, 0.8809999823570251, 0.8816666603088379, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [34], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 67, 96, 99, 61, 1]], "fitness": -0.7751428484916687, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [2.31077241897583, 2.3107998371124268, 2.3123221397399902, 2.3121495246887207, 2.312448501586914, 2.3101091384887695, 2.308729648590088, 2.306596517562866, 2.3041775226593018, 2.300912380218506, 2.2983381748199463, 2.2925379276275635, 2.2889719009399414, 2.281485080718994, 2.278139114379883, 2.2715160846710205, 2.2645370960235596, 2.25555419921875, 2.2476067543029785, 2.2360105514526367, 2.2240803241729736, 2.2059929370880127, 2.189220666885376, 2.163686513900757, 2.134666681289673, 2.093857526779175, 2.04461407661438, 1.985558271408081, 1.90102219581604, 1.804287075996399, 1.694970726966858, 1.590091586112976, 1.4925177097320557, 1.4013575315475464, 1.3280984163284302, 1.2483789920806885, 1.2039821147918701, 1.1428815126419067, 1.11585533618927, 1.079661250114441, 1.0381109714508057, 1.0002847909927368, 0.9887659549713135, 0.9630773067474365, 0.9446089863777161, 0.9194152355194092, 0.9054757356643677, 0.8907673954963684, 0.874956488609314, 0.8527008891105652, 0.8461390733718872, 0.8263788819313049, 0.8268967270851135, 0.8101415038108826, 0.7966928482055664, 0.7879867553710938, 0.7802649736404419, 0.7663537263870239, 0.7601085901260376, 0.7566855549812317, 0.7511069178581238, 0.7451080679893494, 0.7395709753036499, 0.7361752986907959, 0.7306395173072815, 0.7074368596076965, 0.7153070569038391, 0.7158190011978149], "accuracy": [0.09140139818191528, 0.09509972482919693, 0.09166556596755981, 0.08849557489156723, 0.09325055778026581, 0.08849557489156723, 0.09391097724437714, 0.09377889335155487, 0.1026284471154213, 0.10170386731624603, 0.10553427785634995, 0.12098798155784607, 0.13181878626346588, 0.1546691358089447, 0.15955619513988495, 0.18214239180088043, 0.19918107986450195, 0.2277110069990158, 0.23893804848194122, 0.2639017403125763, 0.2825254201889038, 0.31779158115386963, 0.32743361592292786, 0.3483027219772339, 0.3615110218524933, 0.3807951509952545, 0.39770177006721497, 0.4127592146396637, 0.4364020526409149, 0.4579315781593323, 0.48791441321372986, 0.49729230999946594, 0.5171047449111938, 0.5428609251976013, 0.5535596609115601, 0.5749570727348328, 0.5855237245559692, 0.5996565818786621, 0.6058644652366638, 0.6135252714157104, 0.6355831623077393, 0.6373002529144287, 0.6536785364151001, 0.6583014130592346, 0.6649055480957031, 0.6653017997741699, 0.6736230254173279, 0.6818121671676636, 0.681547999382019, 0.6927750706672668, 0.6897371411323547, 0.6911900639533997, 0.6985867023468018, 0.7040021419525146, 0.7084929347038269, 0.7174745798110962, 0.7172104120254517, 0.7235503792762756, 0.7211728692054749, 0.7215691208839417, 0.7273808121681213, 0.7268524765968323, 0.7290979027748108, 0.7257958054542542, 0.7289658188819885, 0.7382115721702576, 0.7376832365989685, 0.7357020378112793], "val_loss": [2.310256242752075, 2.311147689819336, 2.311415672302246, 2.3110604286193848, 2.3100547790527344, 2.3084287643432617, 2.306190013885498, 2.3033862113952637, 2.3000307083129883, 2.296133518218994, 2.2917580604553223, 2.2868926525115967, 2.2816131114959717, 2.2758617401123047, 2.269423484802246, 2.262183666229248, 2.253953456878662, 2.244419813156128, 2.233217716217041, 2.219977617263794, 2.203918218612671, 2.1841089725494385, 2.159581422805786, 2.1287331581115723, 2.0898003578186035, 2.03957200050354, 1.9752695560455322, 1.8941112756729126, 1.791878581047058, 1.6716156005859375, 1.539029836654663, 1.4092172384262085, 1.2922141551971436, 1.1919007301330566, 1.1087944507598877, 1.039005160331726, 0.9858351349830627, 0.9417718052864075, 0.9049176573753357, 0.8753976225852966, 0.8454168438911438, 0.8236573338508606, 0.8031308054924011, 0.783393383026123, 0.7678242921829224, 0.7509451508522034, 0.7385517358779907, 0.7293506860733032, 0.7155427932739258, 0.7062288522720337, 0.6949858665466309, 0.6853936910629272, 0.6794484257698059, 0.6696723103523254, 0.6613628268241882, 0.6526957154273987, 0.6530271172523499, 0.6445181369781494, 0.6350083947181702, 0.6337547898292542, 0.6248796582221985, 0.6211979389190674, 0.6102637052536011, 0.6095830798149109, 0.6025807857513428, 0.6023053526878357, 0.5987749695777893, 0.5930994749069214], "val_accuracy": [0.08966666460037231, 0.08933333307504654, 0.08966666460037231, 0.08933333307504654, 0.09000000357627869, 0.09133332967758179, 0.09200000017881393, 0.09433333575725555, 0.10166666656732559, 0.1133333370089531, 0.12966667115688324, 0.14800000190734863, 0.17633333802223206, 0.21133333444595337, 0.24666666984558105, 0.29466667771339417, 0.34700000286102295, 0.39633333683013916, 0.43533334136009216, 0.4463333189487457, 0.4676666557788849, 0.47433334589004517, 0.4833333194255829, 0.5049999952316284, 0.5276666879653931, 0.5426666736602783, 0.5676666498184204, 0.5896666646003723, 0.6156666874885559, 0.637333333492279, 0.6499999761581421, 0.6620000004768372, 0.6660000085830688, 0.6706666946411133, 0.6826666593551636, 0.6866666674613953, 0.6956666707992554, 0.7036666870117188, 0.7049999833106995, 0.7116666436195374, 0.7146666646003723, 0.7139999866485596, 0.7279999852180481, 0.7333333492279053, 0.734333336353302, 0.7379999756813049, 0.7386666536331177, 0.746666669845581, 0.7519999742507935, 0.7543333172798157, 0.7590000033378601, 0.7526666522026062, 0.7580000162124634, 0.7593333125114441, 0.7639999985694885, 0.765666663646698, 0.7663333415985107, 0.765333354473114, 0.7636666893959045, 0.7703333497047424, 0.7756666541099548, 0.7789999842643738, 0.7866666913032532, 0.7766666412353516, 0.7846666574478149, 0.781000018119812, 0.781000018119812, 0.7846666574478149]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 2, 9], [0, 1, 0, 2], [39, 39, 79], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 2, 4, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(beta, grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(tf.math.sqrt(alpha), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [60, 28, 58, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2, 1], [39, 80], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1], [0, 1], [4, 2], [89], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [2, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 79, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 4, 2, 2, 0, 21, 12, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.add(tf.math.sqrt(tf.math.sqrt(alpha)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]