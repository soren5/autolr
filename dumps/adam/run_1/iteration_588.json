[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220639944076538, 1.8653192520141602, 1.397036075592041, 1.102034568786621, 0.9463631510734558, 0.8535201549530029, 0.7873041033744812, 0.7421948909759521, 0.7033448219299316, 0.6737565994262695, 0.6416285037994385, 0.6170474290847778, 0.6096352934837341, 0.5847572684288025, 0.5681595802307129, 0.5511898398399353, 0.5401804447174072, 0.5305781960487366, 0.5167558789253235, 0.50972580909729, 0.49972063302993774, 0.48486411571502686, 0.47398197650909424, 0.4715060591697693, 0.4641978144645691, 0.46269887685775757, 0.4424925446510315, 0.4390166401863098, 0.4434528946876526, 0.4241248369216919, 0.4226391911506653, 0.41126906871795654, 0.4108630120754242, 0.39662206172943115, 0.39679408073425293, 0.3884679079055786, 0.38631001114845276, 0.3716174066066742, 0.3742820918560028, 0.3693040907382965, 0.3616352081298828, 0.3569088578224182, 0.3540272116661072, 0.3512421250343323, 0.34443220496177673, 0.3379170298576355, 0.32783690094947815, 0.32571420073509216, 0.3216942846775055, 0.3223324120044708, 0.31518998742103577, 0.30588001012802124, 0.30879101157188416, 0.3031933903694153, 0.2948943078517914, 0.2977496087551117, 0.2889832556247711, 0.2851174771785736, 0.28384891152381897, 0.280348002910614, 0.2792317569255829, 0.2716115117073059, 0.26926523447036743, 0.2673826217651367, 0.2560337781906128, 0.2534959316253662], "accuracy": [0.2813366651535034, 0.48210275173187256, 0.5654470920562744, 0.6189407110214233, 0.6618676781654358, 0.6973979473114014, 0.724739134311676, 0.7301545143127441, 0.7489103078842163, 0.7537974119186401, 0.7675340175628662, 0.7753269076347351, 0.7778365015983582, 0.7874785661697388, 0.7954035401344299, 0.7975168228149414, 0.8084797263145447, 0.8129705190658569, 0.8090080618858337, 0.8164047002792358, 0.8230088353157043, 0.8267071843147278, 0.8314621448516846, 0.832650899887085, 0.8314621448516846, 0.8322546482086182, 0.8412362933158875, 0.8411042094230652, 0.844010055065155, 0.8507462739944458, 0.8506141901016235, 0.852859616279602, 0.8507462739944458, 0.8580108284950256, 0.8609166741371155, 0.8619733452796936, 0.8610487580299377, 0.8632941246032715, 0.863558292388916, 0.8669924736022949, 0.8696341514587402, 0.8713511824607849, 0.8745211958885193, 0.8733324408531189, 0.8737286925315857, 0.8800686597824097, 0.878879964351654, 0.8824461698532104, 0.8849557638168335, 0.8865407705307007, 0.8844274282455444, 0.8894465565681458, 0.8849557638168335, 0.8881257176399231, 0.8930128216743469, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8952582478523254, 0.8972394466400146, 0.898428201675415, 0.8977677822113037, 0.8992207050323486, 0.9012019634246826, 0.9075419306755066, 0.909259021282196], "val_loss": [2.036797285079956, 1.504029631614685, 1.0263315439224243, 0.8160852789878845, 0.7262206077575684, 0.6769846081733704, 0.6337469220161438, 0.6054280400276184, 0.5751689672470093, 0.5583578944206238, 0.5387004613876343, 0.5185648202896118, 0.5070314407348633, 0.49563533067703247, 0.4831189513206482, 0.47343096137046814, 0.4647364616394043, 0.4599636495113373, 0.45210856199264526, 0.4428395628929138, 0.43656376004219055, 0.43043848872184753, 0.4293513894081116, 0.4220445156097412, 0.41565796732902527, 0.4129994213581085, 0.4091888964176178, 0.4050699770450592, 0.4094659388065338, 0.3954502046108246, 0.3931638300418854, 0.3916844427585602, 0.3848170042037964, 0.38640689849853516, 0.3819669485092163, 0.37928107380867004, 0.37771281599998474, 0.3763284981250763, 0.37372875213623047, 0.37137264013290405, 0.37423238158226013, 0.3694467842578888, 0.36407139897346497, 0.3660614490509033, 0.36196333169937134, 0.36285343766212463, 0.3616565763950348, 0.3554242253303528, 0.3583208918571472, 0.3627866506576538, 0.35673364996910095, 0.35385987162590027, 0.35293734073638916, 0.3521902561187744, 0.35372698307037354, 0.35065099596977234, 0.35510194301605225, 0.3528411388397217, 0.3483738601207733, 0.3467436134815216, 0.34920215606689453, 0.3526870012283325, 0.3439405858516693, 0.35005056858062744, 0.346986323595047, 0.34555989503860474], "val_accuracy": [0.5146666765213013, 0.6740000247955322, 0.6909999847412109, 0.7183333039283752, 0.734000027179718, 0.7440000176429749, 0.7599999904632568, 0.7749999761581421, 0.7829999923706055, 0.7860000133514404, 0.7950000166893005, 0.8016666769981384, 0.8066666722297668, 0.8176666498184204, 0.8209999799728394, 0.8289999961853027, 0.8316666483879089, 0.8323333263397217, 0.8396666646003723, 0.8420000076293945, 0.8456666469573975, 0.8443333506584167, 0.8433333039283752, 0.8489999771118164, 0.8496666550636292, 0.8550000190734863, 0.8500000238418579, 0.8569999933242798, 0.8539999723434448, 0.8533333539962769, 0.8603333234786987, 0.8573333621025085, 0.8579999804496765, 0.8610000014305115, 0.8566666841506958, 0.8616666793823242, 0.8676666617393494, 0.8663333058357239, 0.8683333396911621, 0.862666666507721, 0.8633333444595337, 0.8693333268165588, 0.8686666488647461, 0.8666666746139526, 0.8709999918937683, 0.8703333139419556, 0.8683333396911621, 0.8726666569709778, 0.8679999709129333, 0.8743333220481873, 0.8713333606719971, 0.8713333606719971, 0.875, 0.8759999871253967, 0.8743333220481873, 0.8766666650772095, 0.8693333268165588, 0.8723333477973938, 0.8733333349227905, 0.8769999742507935, 0.8806666731834412, 0.8799999952316284, 0.8766666650772095, 0.871999979019165, 0.8769999742507935, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 62], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 0, 1, 1], [0, 5, 3, 1], [0, 4, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 3, 4, 2, 6, 9], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 53, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 7, 4, 3, 1, 21, 12, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 4, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 6]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [67, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 2, 8], [3, 2, 0, 3, 1], [16, 16], [0, 1, 0, 0, 1, 1], [4, 2, 5], [0, 0, 6], [99, 29], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1, 3, 5, 4, 8, 5, 6, 3, 5, 3, 2, 4, 6, 9, 9, 0, 4, 8, 5, 7, 9, 0, 7, 4, 6, 2, 8, 6, 2, 4, 6, 9, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 5, 4, 5, 4, 3, 3, 6, 2, 5, 7, 6, 4, 4, 2, 7, 7], [16, 99, 96, 99, 2, 83, 72, 69, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 1, 6, 3, 3, 2, 69, 43, 26, 9], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.pow(tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.sqrt(alpha), beta)))), tf.math.square(grad))), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad)), grad)))), grad)), tf.math.negative(tf.math.add(grad, sigma))), tf.math.pow(sigma, grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, beta)))), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 0], [0, 1, 0, 1], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 0, 1, 0, 1, 1], [0, 1, 4], [0, 0, 7], [99, 92], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.08714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [2.3075170516967773, 2.31059193611145, 2.310809373855591, 2.308898687362671, 2.3095827102661133, 2.3111984729766846], "accuracy": [0.09034473448991776, 0.09377889335155487, 0.09034473448991776, 0.09113723784685135, 0.09060890227556229, 0.08875974267721176], "val_loss": [2.3090384006500244, 2.3090384006500244, 2.3090384006500244, 2.3090384006500244, 2.3090384006500244, 2.3090384006500244], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}, "mapping_values": [1, 6, 4, 2, 1, 6, 3, 3, 2, 6, 3, 3, 2, 22, 11, 11, 6], "tree_depth": 18}]