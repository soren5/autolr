[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222822427749634, 1.8693571090698242, 1.3876664638519287, 1.0809587240219116, 0.9322317838668823, 0.81907719373703, 0.7558428049087524, 0.7052059769630432, 0.6738573312759399, 0.6343753337860107, 0.6182074546813965, 0.5897501707077026, 0.5752557516098022, 0.5602513551712036, 0.5396862030029297, 0.5300606489181519, 0.5119432806968689, 0.5060612559318542, 0.4955665171146393, 0.4779980182647705, 0.4683951735496521, 0.4693457782268524, 0.4489656090736389, 0.4447975754737854, 0.43370234966278076, 0.42361748218536377, 0.41875067353248596, 0.412813663482666, 0.4112412631511688, 0.3975640535354614, 0.3905700445175171, 0.3871019184589386, 0.37769147753715515, 0.3604782819747925, 0.36809536814689636, 0.3577776253223419, 0.3487311601638794, 0.34720921516418457, 0.3470908999443054, 0.33440181612968445, 0.3332046866416931, 0.338529497385025, 0.3280060291290283, 0.3167566955089569, 0.3133852481842041, 0.3227230906486511, 0.3092319965362549, 0.30944833159446716, 0.303693562746048, 0.2975066602230072, 0.294064462184906, 0.28585097193717957, 0.28415408730506897, 0.28039228916168213, 0.27353549003601074, 0.2700076401233673, 0.2712004780769348, 0.26627305150032043, 0.2572583854198456, 0.2536052167415619, 0.25362005829811096], "accuracy": [0.2677321434020996, 0.4811781942844391, 0.570202112197876, 0.6176198720932007, 0.6596222519874573, 0.7051908373832703, 0.7292299270629883, 0.7473253011703491, 0.7534011602401733, 0.7662131786346436, 0.7770439982414246, 0.7803460359573364, 0.7923656105995178, 0.8017435073852539, 0.8087438941001892, 0.8078193068504333, 0.8193105459213257, 0.8185180425643921, 0.8206313848495483, 0.828292191028595, 0.8319904804229736, 0.8296129703521729, 0.8378021121025085, 0.8399154543876648, 0.846387505531311, 0.8442742228507996, 0.8482366800308228, 0.8496896028518677, 0.8482366800308228, 0.8577466607093811, 0.8585391640663147, 0.863029956817627, 0.8640866279602051, 0.8708229064941406, 0.8661999702453613, 0.8716153502464294, 0.8768987059593201, 0.8709549307823181, 0.8766345381736755, 0.8811253309249878, 0.8786157965660095, 0.8759741187095642, 0.8787478804588318, 0.878351628780365, 0.8878615498542786, 0.8809932470321655, 0.8842953443527222, 0.8868049383163452, 0.8898428082466125, 0.8930128216743469, 0.891559898853302, 0.8949940800666809, 0.8961827754974365, 0.8993527889251709, 0.9012019634246826, 0.9022586345672607, 0.9013340473175049, 0.9029190540313721, 0.9049002528190613, 0.9050323367118835, 0.9050323367118835], "val_loss": [2.037630796432495, 1.5149726867675781, 1.0303951501846313, 0.8227342963218689, 0.7306658625602722, 0.6744074821472168, 0.6299611330032349, 0.5931190252304077, 0.5709991455078125, 0.5506877303123474, 0.5394787788391113, 0.5203129053115845, 0.5102824568748474, 0.49478164315223694, 0.4871024191379547, 0.47553694248199463, 0.4653869569301605, 0.46410220861434937, 0.454240083694458, 0.445730596780777, 0.4448029100894928, 0.441213458776474, 0.43340522050857544, 0.427670419216156, 0.42410433292388916, 0.4211547374725342, 0.41576626896858215, 0.41317448019981384, 0.4068440794944763, 0.4124225974082947, 0.4049142599105835, 0.39830803871154785, 0.39502665400505066, 0.39403849840164185, 0.3896218240261078, 0.39231249690055847, 0.3903290331363678, 0.3889933228492737, 0.38592907786369324, 0.38057467341423035, 0.38633230328559875, 0.3807966709136963, 0.3795118033885956, 0.38400769233703613, 0.374114990234375, 0.37598225474357605, 0.3776001036167145, 0.37236467003822327, 0.3769364058971405, 0.37379664182662964, 0.3674938976764679, 0.3774873912334442, 0.3661171793937683, 0.36927351355552673, 0.3672289550304413, 0.36384057998657227, 0.3623194992542267, 0.367717444896698, 0.36404839158058167, 0.36194685101509094, 0.37392953038215637], "val_accuracy": [0.5133333206176758, 0.6613333225250244, 0.6919999718666077, 0.7163333296775818, 0.7459999918937683, 0.7580000162124634, 0.765666663646698, 0.7820000052452087, 0.7906666398048401, 0.7990000247955322, 0.7919999957084656, 0.8169999718666077, 0.8153333067893982, 0.8256666660308838, 0.8226666450500488, 0.828000009059906, 0.8383333086967468, 0.8363333344459534, 0.8370000123977661, 0.8403333425521851, 0.8370000123977661, 0.8479999899864197, 0.8463333249092102, 0.8453333377838135, 0.8533333539962769, 0.8516666889190674, 0.8543333411216736, 0.8543333411216736, 0.8576666712760925, 0.8536666631698608, 0.8573333621025085, 0.8606666922569275, 0.859000027179718, 0.8566666841506958, 0.8633333444595337, 0.862666666507721, 0.8666666746139526, 0.8633333444595337, 0.8640000224113464, 0.8673333525657654, 0.8643333315849304, 0.8663333058357239, 0.8690000176429749, 0.8656666874885559, 0.8693333268165588, 0.8713333606719971, 0.8676666617393494, 0.8726666569709778, 0.8743333220481873, 0.8726666569709778, 0.8740000128746033, 0.8703333139419556, 0.875, 0.8730000257492065, 0.8763333559036255, 0.8799999952316284, 0.8773333430290222, 0.8769999742507935, 0.8769999742507935, 0.878333330154419, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 95, 96, 99, 61, 1]], "fitness": -0.4108571410179138, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2999441623687744, 2.280834913253784, 2.260132312774658, 2.1963090896606445, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11042134463787079, 0.15229164063930511, 0.17778365314006805, 0.2339189052581787, 0.2230881005525589, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.286726236343384, 2.2664289474487305, 2.228422164916992, 1.9888710975646973, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.18966667354106903, 0.2173333317041397, 0.2773333191871643, 0.3973333239555359, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 6, 3, 0, 8], [0, 1, 0, 0], [39, 39, 51], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 5, 3, 8, 3, 1], [0, 2, 0, 3], [56, 66], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 4, 1, 2, 0], [84, 99, 96, 99, 61, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 5, 3, 2, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 8, 6, 8, 1, 4, 1, 3, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 12, 7, 5, 2, 2, 2, 0, 1, 2, 1, 1, 0, 11, 6, 5, 3], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3, 5], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 3, 8, 1, 2, 1, 4, 6, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 85, 99, 61, 17]], "fitness": -0.08942857384681702, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 1, 0, 1, 1, 11, 6, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3111164569854736, 2.311185598373413, 2.310784101486206, 2.31011700630188, 2.3104681968688965, 2.3097193241119385], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09470347315073013, 0.08968432247638702, 0.09140139818191528, 0.09259014576673508], "val_loss": [2.3084464073181152, 2.3084752559661865, 2.308521270751953, 2.3085837364196777, 2.3086631298065186, 2.308760166168213], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]