[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220740556716919, 1.865646481513977, 1.4010095596313477, 1.0985252857208252, 0.9473909735679626, 0.8450285792350769, 0.7904856204986572, 0.7343191504478455, 0.7045711278915405, 0.6783277988433838, 0.6492874622344971, 0.627712607383728, 0.5970448851585388, 0.5851417779922485, 0.5664558410644531, 0.5660218596458435, 0.5442495942115784, 0.5352501273155212, 0.5186820030212402, 0.5014981031417847, 0.5081298351287842, 0.4935881793498993, 0.47698184847831726, 0.4659716784954071, 0.4576716125011444, 0.4496813416481018, 0.4505566656589508, 0.43128693103790283, 0.4275241494178772, 0.4334811866283417, 0.4215843677520752, 0.40873393416404724, 0.40316975116729736, 0.4042019844055176, 0.39603590965270996, 0.38704660534858704, 0.37575677037239075, 0.37892597913742065, 0.3735029399394989, 0.3613061010837555, 0.3584289252758026, 0.3574525713920593, 0.34981995820999146, 0.3443031907081604, 0.3382278382778168, 0.3386646509170532, 0.33524641394615173, 0.32451894879341125, 0.31099870800971985, 0.32201942801475525, 0.31140780448913574, 0.3042156994342804, 0.30061447620391846, 0.3011147975921631, 0.2945038676261902, 0.285526305437088, 0.28416669368743896, 0.2849982976913452, 0.2757932245731354, 0.27900001406669617, 0.2748723030090332, 0.26108071208000183, 0.2604130804538727, 0.26061931252479553, 0.2526836097240448, 0.2562430500984192, 0.24622130393981934, 0.2486739307641983], "accuracy": [0.2719587981700897, 0.476951539516449, 0.5588429570198059, 0.6190727949142456, 0.6634526252746582, 0.6964733600616455, 0.7131158113479614, 0.733588695526123, 0.7404569983482361, 0.7534011602401733, 0.7672698497772217, 0.7750627398490906, 0.7832518815994263, 0.7901201844215393, 0.7913089394569397, 0.7907806038856506, 0.8016114234924316, 0.8057059645652771, 0.8123101592063904, 0.8228767514228821, 0.8125742673873901, 0.8234050869941711, 0.8251221776008606, 0.8280280232429504, 0.8367455005645752, 0.8372738361358643, 0.8376700282096863, 0.8496896028518677, 0.847840428352356, 0.8459912538528442, 0.8453308939933777, 0.8520671129226685, 0.8516708612442017, 0.8548408150672913, 0.8573504090309143, 0.8622375130653381, 0.8660678863525391, 0.8594637513160706, 0.863029956817627, 0.8684453964233398, 0.8687095642089844, 0.8742570281028748, 0.8772949576377869, 0.8749174475669861, 0.8778232932090759, 0.8768987059593201, 0.8759741187095642, 0.8835028409957886, 0.887597382068634, 0.8824461698532104, 0.8882578015327454, 0.8894465565681458, 0.8902390599250793, 0.8899748921394348, 0.8916919827461243, 0.8949940800666809, 0.896446943283081, 0.8948619961738586, 0.8972394466400146, 0.8957865834236145, 0.9005415439605713, 0.9043719172477722, 0.9062210917472839, 0.9046360850334167, 0.9068815112113953, 0.9079381823539734, 0.9128252267837524, 0.9115044474601746], "val_loss": [2.0355539321899414, 1.5204863548278809, 1.0542759895324707, 0.8511005640029907, 0.760825514793396, 0.7095439434051514, 0.667149543762207, 0.6312665343284607, 0.6059575080871582, 0.5795722603797913, 0.565695583820343, 0.5459256768226624, 0.5309947729110718, 0.5201268196105957, 0.5058607459068298, 0.5004690885543823, 0.4977952539920807, 0.4862876236438751, 0.4746476113796234, 0.4639224410057068, 0.470059335231781, 0.45714884996414185, 0.4458691477775574, 0.44254419207572937, 0.43385905027389526, 0.42678335309028625, 0.42592236399650574, 0.41925373673439026, 0.42223885655403137, 0.41169875860214233, 0.41098031401634216, 0.40245479345321655, 0.407513827085495, 0.39864933490753174, 0.3919270932674408, 0.3907560110092163, 0.39109471440315247, 0.38595303893089294, 0.3853878676891327, 0.38466259837150574, 0.38020604848861694, 0.37520816922187805, 0.3743619918823242, 0.37370195984840393, 0.3743510842323303, 0.38105297088623047, 0.3720763325691223, 0.3689460754394531, 0.36562076210975647, 0.3669703006744385, 0.36081159114837646, 0.36003178358078003, 0.36042872071266174, 0.3582378625869751, 0.3571445345878601, 0.35829466581344604, 0.35434070229530334, 0.3527543246746063, 0.35937124490737915, 0.35582423210144043, 0.35557201504707336, 0.3503127992153168, 0.3477849066257477, 0.3499516546726227, 0.35621801018714905, 0.3480969965457916, 0.3477579653263092, 0.3488728106021881], "val_accuracy": [0.5663333535194397, 0.6586666703224182, 0.684333324432373, 0.7086666822433472, 0.7369999885559082, 0.7476666569709778, 0.7549999952316284, 0.7649999856948853, 0.7749999761581421, 0.7870000004768372, 0.7943333387374878, 0.8006666898727417, 0.8080000281333923, 0.8133333325386047, 0.8159999847412109, 0.8206666707992554, 0.8186666369438171, 0.8240000009536743, 0.8296666741371155, 0.82833331823349, 0.8299999833106995, 0.8306666612625122, 0.8379999995231628, 0.8379999995231628, 0.8416666388511658, 0.847000002861023, 0.8433333039283752, 0.8463333249092102, 0.8529999852180481, 0.8503333330154419, 0.8476666808128357, 0.8539999723434448, 0.8523333072662354, 0.8523333072662354, 0.8566666841506958, 0.8640000224113464, 0.862333357334137, 0.859000027179718, 0.859333336353302, 0.8556666374206543, 0.8643333315849304, 0.8659999966621399, 0.8666666746139526, 0.8610000014305115, 0.8663333058357239, 0.8613333106040955, 0.8693333268165588, 0.8666666746139526, 0.8673333525657654, 0.8640000224113464, 0.8683333396911621, 0.8696666955947876, 0.8676666617393494, 0.8666666746139526, 0.8706666827201843, 0.8693333268165588, 0.8733333349227905, 0.8723333477973938, 0.8706666827201843, 0.8740000128746033, 0.8723333477973938, 0.8769999742507935, 0.8796666860580444, 0.871999979019165, 0.8666666746139526, 0.8756666779518127, 0.8769999742507935, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 5, 9, 1, 4, 2, 2], [1, 3, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 30, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 10, 7, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(sigma)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303436279296875, 2.3145058155059814, 6.066442489624023, 171.87257385253906, 549.58544921875, 1002.1143798828125], "accuracy": [0.09311848133802414, 0.09615638852119446, 0.09747721254825592, 0.09840179979801178, 0.09747721254825592, 0.10236428678035736], "val_loss": [2.303199291229248, 2.470705509185791, 16.90964126586914, 577.70947265625, 634.2947387695312, 1306.564208984375], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.09933333098888397, 0.09566666930913925, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [3, 2, 3, 0, 9, 3, 1, 6, 9, 7, 4, 9, 9], [0, 1, 0, 2, 3], [39, 39, 85, 96, 78, 38], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8, 8, 1, 6, 2, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 2, 5, 3], [16, 45, 96, 77, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 13, 5, 6, 7, 4, 3, 1, 2, 1, 1, 1, 31, 17, 14, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha)))), tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(beta, tf.math.square(grad)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16, 83], [0, 0, 1], [1, 9], [0], [99, 98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 5, 3, 1, 1, 1, 4, 1, 4, 2, 8, 7, 0, 0, 1], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 0], [16, 99, 9, 99, 61, 1, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 8, 5, 3, 3, 3, 2, 1, 2, 27, 15, 12, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.negative(beta))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 1, 2, 0], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 0, 3, 2, 5, 2], [0, 2, 0, 3, 0, 1], [16, 38, 13], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 2, 14, 8, 6, 3, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.negative(alpha)))))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30983829498291, 2.3100104331970215, 2.3114025592803955, 2.3101069927215576, 2.3088293075561523, 2.3101606369018555], "accuracy": [0.0936468094587326, 0.08875974267721176, 0.09087307006120682, 0.08836349099874496, 0.09509972482919693, 0.09219389408826828], "val_loss": [2.3093206882476807, 2.3093206882476807, 2.3093206882476807, 2.3093206882476807, 2.3093206882476807, 2.3093206882476807], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]