[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233455181121826, 1.8666274547576904, 1.3827141523361206, 1.0891716480255127, 0.937542200088501, 0.8294780850410461, 0.777477502822876, 0.7397711873054504, 0.7015796899795532, 0.6682403087615967, 0.6355506777763367, 0.6178340315818787, 0.5981314778327942, 0.584466278553009, 0.5652804374694824, 0.5460642576217651, 0.5427862405776978, 0.5302344560623169, 0.5177943706512451, 0.5051755309104919, 0.49528470635414124, 0.4840035140514374, 0.4755772054195404, 0.4769614040851593, 0.4691360592842102, 0.4578171670436859, 0.4428820312023163, 0.4423222541809082, 0.42924296855926514, 0.42395809292793274, 0.4241359233856201, 0.4090377986431122, 0.402300626039505, 0.4022500514984131, 0.3953242599964142, 0.38717833161354065, 0.39212021231651306, 0.38019412755966187, 0.38243740797042847, 0.36349916458129883, 0.3655725419521332, 0.36228376626968384, 0.35173168778419495, 0.34314700961112976, 0.3381291627883911, 0.33747559785842896, 0.33399587869644165, 0.3235684931278229, 0.3279578983783722, 0.3210256099700928, 0.31010758876800537], "accuracy": [0.26258090138435364, 0.4839519262313843, 0.568220853805542, 0.6164311170578003, 0.6642451286315918, 0.6993792057037354, 0.7161537408828735, 0.7277770638465881, 0.7429665923118591, 0.7582882046699524, 0.7671377658843994, 0.7725531458854675, 0.7814027070999146, 0.7902522683143616, 0.7931581139564514, 0.8005547523498535, 0.8042530417442322, 0.8082155585289001, 0.8142913579940796, 0.8178576231002808, 0.819970965385437, 0.8276317715644836, 0.8308017253875732, 0.8319904804229736, 0.8348963260650635, 0.8372738361358643, 0.8442742228507996, 0.8459912538528442, 0.8470479249954224, 0.8499537706375122, 0.8518029451370239, 0.8560295701026917, 0.8532558679580688, 0.8574824929237366, 0.860652506351471, 0.8623695969581604, 0.858671247959137, 0.8651432991027832, 0.8609166741371155, 0.8739928603172302, 0.869502067565918, 0.8747853636741638, 0.8737286925315857, 0.8791441321372986, 0.8802007436752319, 0.8812574148178101, 0.8836349248886108, 0.8819178342819214, 0.8812574148178101, 0.8856161832809448, 0.887597382068634], "val_loss": [2.0390541553497314, 1.5143251419067383, 1.0452555418014526, 0.8430444598197937, 0.7541400790214539, 0.693108320236206, 0.6505790948867798, 0.6202381253242493, 0.5908499360084534, 0.5706754326820374, 0.5512387752532959, 0.5315513610839844, 0.5215743184089661, 0.5096904039382935, 0.4983780086040497, 0.48527127504348755, 0.4784923493862152, 0.47183582186698914, 0.465576171875, 0.45353686809539795, 0.44828230142593384, 0.43882250785827637, 0.4361523389816284, 0.4352516233921051, 0.42737072706222534, 0.41909709572792053, 0.412578284740448, 0.41318514943122864, 0.40508490800857544, 0.4066517651081085, 0.40141505002975464, 0.39533883333206177, 0.39373067021369934, 0.38902726769447327, 0.3974398076534271, 0.38630566000938416, 0.3803601562976837, 0.3813885450363159, 0.3800603747367859, 0.38072729110717773, 0.37329161167144775, 0.3750084638595581, 0.36961543560028076, 0.3671453595161438, 0.3651849627494812, 0.36510249972343445, 0.36382797360420227, 0.3632591962814331, 0.3638934791088104, 0.35896533727645874, 0.361199289560318], "val_accuracy": [0.5016666650772095, 0.6586666703224182, 0.6816666722297668, 0.7020000219345093, 0.7276666760444641, 0.7446666955947876, 0.7576666474342346, 0.7713333368301392, 0.7806666493415833, 0.7929999828338623, 0.8019999861717224, 0.8106666803359985, 0.812333345413208, 0.8153333067893982, 0.8236666917800903, 0.8276666402816772, 0.8343333601951599, 0.8363333344459534, 0.8339999914169312, 0.8379999995231628, 0.8416666388511658, 0.8429999947547913, 0.8433333039283752, 0.8450000286102295, 0.846666693687439, 0.8510000109672546, 0.8539999723434448, 0.8536666631698608, 0.8533333539962769, 0.8546666502952576, 0.8550000190734863, 0.8603333234786987, 0.8576666712760925, 0.8600000143051147, 0.856333315372467, 0.8629999756813049, 0.8636666536331177, 0.8640000224113464, 0.8619999885559082, 0.8650000095367432, 0.8679999709129333, 0.8629999756813049, 0.8650000095367432, 0.8656666874885559, 0.8706666827201843, 0.871666669845581, 0.8696666955947876, 0.8696666955947876, 0.8666666746139526, 0.8713333606719971, 0.8706666827201843]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 3, 0, 3, 8, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 1, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 71, 99, 88, 1]], "fitness": -0.7902857065200806, "mapping_values": [1, 11, 7, 4, 2, 7, 4, 3, 0, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3076767921447754, 2.295445680618286, 2.2715020179748535, 2.239607095718384, 2.1943700313568115, 2.1208536624908447, 1.9932106733322144, 1.767317533493042, 1.5003069639205933, 1.3363615274429321, 1.3365007638931274, 1.316908597946167, 1.225683569908142, 1.057767629623413, 0.9016565680503845, 0.888329267501831, 0.9134529829025269, 0.8735458254814148, 0.8232922554016113, 0.8187081813812256, 0.8076011538505554, 0.7883148193359375, 0.790229082107544, 0.7588041424751282, 0.7452134490013123, 0.7412492036819458, 0.7276791334152222, 0.7117347121238708, 0.7145319581031799, 0.6975204944610596, 0.6870043873786926, 0.6752064824104309, 0.6647861003875732, 0.6582436561584473, 0.652733564376831, 0.6323357224464417, 0.6328662633895874, 0.6244149208068848, 0.612557053565979, 0.6065280437469482, 0.6057407855987549, 0.5907297134399414, 0.5868989825248718, 0.5813690423965454, 0.575556755065918], "accuracy": [0.09668471664190292, 0.11953506618738174, 0.18082155287265778, 0.27103421092033386, 0.3366794288158417, 0.3761722445487976, 0.3961167633533478, 0.4379870593547821, 0.4839519262313843, 0.5130101442337036, 0.5509179830551147, 0.585391640663147, 0.6141856908798218, 0.6415268778800964, 0.6715096831321716, 0.6725663542747498, 0.6590939164161682, 0.678642213344574, 0.6956809163093567, 0.6996433734893799, 0.7047945857048035, 0.7083608508110046, 0.7065116763114929, 0.7143045663833618, 0.713908314704895, 0.7074362635612488, 0.7111346125602722, 0.7248712182044983, 0.7325320243835449, 0.7322678565979004, 0.7427024245262146, 0.7442874312400818, 0.7436270117759705, 0.7511557340621948, 0.748249888420105, 0.7557786107063293, 0.7564390301704407, 0.7691190242767334, 0.763439416885376, 0.7621186375617981, 0.7693831920623779, 0.7761194109916687, 0.7689869403839111, 0.7777044177055359, 0.7810064554214478], "val_loss": [2.2998571395874023, 2.279024124145508, 2.249361991882324, 2.208665370941162, 2.146129608154297, 2.035900354385376, 1.8353677988052368, 1.5159475803375244, 1.1651502847671509, 0.9669929146766663, 0.8999108076095581, 0.8467203974723816, 0.7993658185005188, 0.7429526448249817, 0.7317108511924744, 0.7687081694602966, 0.7562405467033386, 0.6798632144927979, 0.6462899446487427, 0.6340347528457642, 0.6322869658470154, 0.6351197957992554, 0.6275027394294739, 0.6113156676292419, 0.606219470500946, 0.5979576706886292, 0.5884246230125427, 0.5918713212013245, 0.5862897038459778, 0.5706502199172974, 0.5612790584564209, 0.5588993430137634, 0.5527681708335876, 0.5401464700698853, 0.5314359664916992, 0.5295022130012512, 0.5258870720863342, 0.5149161219596863, 0.5065048336982727, 0.5067315101623535, 0.5068485736846924, 0.502769947052002, 0.4997469484806061, 0.4962501525878906, 0.49322986602783203], "val_accuracy": [0.10100000351667404, 0.18433333933353424, 0.40933331847190857, 0.4546666741371155, 0.44999998807907104, 0.4466666579246521, 0.49300000071525574, 0.5903333425521851, 0.6526666879653931, 0.6616666913032532, 0.6816666722297668, 0.699999988079071, 0.715666651725769, 0.7256666421890259, 0.7279999852180481, 0.7306666374206543, 0.734000027179718, 0.746666669845581, 0.7526666522026062, 0.7590000033378601, 0.7563333511352539, 0.762666642665863, 0.7689999938011169, 0.7726666927337646, 0.7673333287239075, 0.7713333368301392, 0.7799999713897705, 0.7743333578109741, 0.7726666927337646, 0.7776666879653931, 0.7816666960716248, 0.778333306312561, 0.7793333530426025, 0.7913333177566528, 0.7950000166893005, 0.7953333258628845, 0.7923333048820496, 0.7990000247955322, 0.8100000023841858, 0.8116666674613953, 0.8056666851043701, 0.8046666383743286, 0.8026666641235352, 0.8050000071525574, 0.809333324432373]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8, 1, 1, 2, 4, 6, 7, 4, 5, 7, 1, 1, 9, 5, 6, 2, 5, 9, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 1, 3, 7, 4, 7, 2, 1, 7, 0, 6], [16, 99, 96, 99, 61, 1, 84, 91, 45, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 50, 29, 21, 10], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.subtract(sigma, alpha), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, sigma)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), beta))))))), tf.math.multiply(alpha, grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 67], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 86, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 4], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 4, 0, 1, 1, 2, 1], [16, 99, 72, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.add(tf.math.sqrt(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]