[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22070050239563, 1.8626600503921509, 1.385068655014038, 1.094313144683838, 0.9269570708274841, 0.8396221399307251, 0.7711469531059265, 0.7232261300086975, 0.6802198886871338, 0.6575387716293335, 0.6329203844070435, 0.6093820929527283, 0.5886754393577576, 0.5729087591171265, 0.5578806400299072, 0.5540737509727478, 0.5377162098884583, 0.5268022418022156, 0.5065339207649231, 0.5004067420959473, 0.5027144551277161, 0.48643606901168823, 0.47462305426597595, 0.45963695645332336, 0.4513664245605469, 0.44463273882865906, 0.44407254457473755, 0.42565739154815674, 0.42165693640708923, 0.4247492253780365, 0.410788893699646, 0.4064531922340393, 0.39756157994270325, 0.39496591687202454, 0.3868643045425415, 0.38898393511772156, 0.3831508457660675, 0.3790588974952698, 0.374493807554245, 0.3671495318412781, 0.3599625825881958, 0.35628625750541687, 0.35365355014801025, 0.33885738253593445, 0.3414628803730011, 0.3371286690235138, 0.32993587851524353, 0.3210654854774475, 0.3229601979255676, 0.321479856967926, 0.3155193030834198, 0.3116326928138733, 0.30290815234184265, 0.3028445541858673, 0.30078935623168945, 0.28957006335258484, 0.2854388356208801, 0.28382277488708496, 0.28197506070137024, 0.27487730979919434], "accuracy": [0.27499669790267944, 0.4947827160358429, 0.5698058605194092, 0.6172236204147339, 0.6700568199157715, 0.6951525807380676, 0.7217012047767639, 0.7404569983482361, 0.7531369924545288, 0.7536653280258179, 0.7689869403839111, 0.774798572063446, 0.7817989587783813, 0.7909126877784729, 0.7898560166358948, 0.7952714562416077, 0.804649293422699, 0.811649739742279, 0.8140271902084351, 0.817461371421814, 0.8150838613510132, 0.8235371708869934, 0.8261788487434387, 0.8370096683502197, 0.8366134166717529, 0.8385946154594421, 0.8359529972076416, 0.8454629778862, 0.8486329317092896, 0.8425571322441101, 0.8496896028518677, 0.8527275323867798, 0.8581429123878479, 0.8601241707801819, 0.8584070801734924, 0.8568220734596252, 0.8561616539955139, 0.8623695969581604, 0.8656716346740723, 0.8672566413879395, 0.8668603897094727, 0.8732003569602966, 0.8705587387084961, 0.8750495314598083, 0.8742570281028748, 0.8799365758895874, 0.8784837126731873, 0.8856161832809448, 0.8805969953536987, 0.8812574148178101, 0.8865407705307007, 0.8858803510665894, 0.8911636471748352, 0.8889182209968567, 0.8874653577804565, 0.8952582478523254, 0.8948619961738586, 0.8956544995307922, 0.8928807377815247, 0.898428201675415], "val_loss": [2.0321831703186035, 1.498218059539795, 1.0353518724441528, 0.8346172571182251, 0.7486340999603271, 0.6909899711608887, 0.6451820731163025, 0.6065397262573242, 0.5815550684928894, 0.5540206432342529, 0.5387831330299377, 0.5209129452705383, 0.50923091173172, 0.49692007899284363, 0.4886174201965332, 0.47471851110458374, 0.46910205483436584, 0.4559965133666992, 0.4495556354522705, 0.4418571889400482, 0.4358856976032257, 0.42611849308013916, 0.4231443703174591, 0.4155713617801666, 0.4152561128139496, 0.4067597985267639, 0.4098879098892212, 0.4011511504650116, 0.3995536267757416, 0.3934287130832672, 0.3899119794368744, 0.3858572542667389, 0.38530105352401733, 0.38251879811286926, 0.3835258483886719, 0.37779027223587036, 0.3807017505168915, 0.37201276421546936, 0.37366804480552673, 0.36713171005249023, 0.3696460723876953, 0.36886823177337646, 0.36777356266975403, 0.3693119287490845, 0.36169108748435974, 0.362528920173645, 0.35819414258003235, 0.361920565366745, 0.35907742381095886, 0.36434677243232727, 0.35618939995765686, 0.35610371828079224, 0.35190317034721375, 0.35491743683815, 0.3498677611351013, 0.35242968797683716, 0.3526608347892761, 0.35208427906036377, 0.34904971718788147, 0.3484315276145935], "val_accuracy": [0.5350000262260437, 0.6633333563804626, 0.6816666722297668, 0.7160000205039978, 0.7393333315849304, 0.7570000290870667, 0.7666666507720947, 0.7839999794960022, 0.7883333563804626, 0.8016666769981384, 0.8066666722297668, 0.8130000233650208, 0.8199999928474426, 0.8236666917800903, 0.8193333148956299, 0.8289999961853027, 0.8296666741371155, 0.8349999785423279, 0.8356666564941406, 0.8376666903495789, 0.8399999737739563, 0.8453333377838135, 0.8433333039283752, 0.8489999771118164, 0.8550000190734863, 0.8519999980926514, 0.8496666550636292, 0.856333315372467, 0.8526666760444641, 0.8616666793823242, 0.8606666922569275, 0.8629999756813049, 0.8693333268165588, 0.8669999837875366, 0.862333357334137, 0.8653333187103271, 0.8713333606719971, 0.8683333396911621, 0.8696666955947876, 0.8733333349227905, 0.8693333268165588, 0.875333309173584, 0.8740000128746033, 0.8736666440963745, 0.8756666779518127, 0.8740000128746033, 0.878333330154419, 0.8786666393280029, 0.8809999823570251, 0.8763333559036255, 0.8773333430290222, 0.8790000081062317, 0.8823333382606506, 0.8793333172798157, 0.8849999904632568, 0.8826666474342346, 0.8766666650772095, 0.8816666603088379, 0.8830000162124634, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 8, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5, 4, 7, 3, 4], [0, 2, 0, 3, 5, 1, 2, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 43, 99, 61, 1]], "fitness": -0.8268571496009827, "mapping_values": [1, 10, 6, 4, 2, 18, 10, 8, 2, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.pow(grad, alpha)), beta))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301280975341797, 2.2487752437591553, 2.1230077743530273, 1.7521088123321533, 1.3499847650527954, 1.2910659313201904, 0.9634737372398376, 0.9014323353767395, 0.8604782223701477, 0.8187572360038757, 0.8072712421417236, 0.7594223022460938, 0.7417888045310974, 0.7136585116386414, 0.7018032670021057, 0.6708852052688599, 0.6608265042304993, 0.6494695544242859, 0.6404076814651489, 0.6119847297668457, 0.598680853843689, 0.5902321934700012, 0.5740077495574951, 0.5742654204368591, 0.5685220956802368, 0.5543025135993958, 0.5346024036407471, 0.5453712940216064, 0.5266372561454773, 0.528717577457428, 0.5255680084228516, 0.5136389136314392, 0.5022097229957581, 0.4942983388900757, 0.48269957304000854, 0.47596973180770874, 0.46713003516197205, 0.4672693610191345, 0.45730066299438477, 0.458936870098114, 0.45033523440361023, 0.4379555284976959], "accuracy": [0.11147800832986832, 0.24976885318756104, 0.3823801279067993, 0.4407607913017273, 0.5197464227676392, 0.5881653428077698, 0.6539427042007446, 0.668339729309082, 0.6799629926681519, 0.6948884129524231, 0.6952846646308899, 0.7092854380607605, 0.7123233675956726, 0.7248712182044983, 0.7351737022399902, 0.7481178045272827, 0.7429665923118591, 0.7440232634544373, 0.7537974119186401, 0.7625148296356201, 0.7668735980987549, 0.774270236492157, 0.7800818681716919, 0.774798572063446, 0.7814027070999146, 0.7880068421363831, 0.7913089394569397, 0.7911768555641174, 0.7981772422790527, 0.7985734939575195, 0.8030643463134766, 0.8039889335632324, 0.8035926818847656, 0.806630551815033, 0.8113855719566345, 0.8153480291366577, 0.8210275769233704, 0.8189142942428589, 0.822348415851593, 0.822348415851593, 0.83119797706604, 0.8321225643157959], "val_loss": [2.2739508152008057, 2.1889569759368896, 1.9412001371383667, 1.2587904930114746, 0.9360842108726501, 0.8079959154129028, 0.7535772919654846, 0.7628956437110901, 0.7031084895133972, 0.6807428002357483, 0.6570776104927063, 0.6391287446022034, 0.6290652751922607, 0.6188937425613403, 0.5889502763748169, 0.5687925815582275, 0.5577534437179565, 0.5484555959701538, 0.5396376848220825, 0.5347930788993835, 0.5220405459403992, 0.5124028921127319, 0.506727397441864, 0.5005606412887573, 0.49219855666160583, 0.4890062212944031, 0.48995256423950195, 0.48903125524520874, 0.48197221755981445, 0.47522494196891785, 0.4720079302787781, 0.47048646211624146, 0.46290168166160583, 0.46281155943870544, 0.45716235041618347, 0.4509075880050659, 0.44178304076194763, 0.4358459413051605, 0.44155970215797424, 0.4350077211856842, 0.4346857964992523, 0.424740731716156], "val_accuracy": [0.23199999332427979, 0.44066667556762695, 0.47733333706855774, 0.6313333511352539, 0.6679999828338623, 0.7053333520889282, 0.7233333587646484, 0.7206666469573975, 0.7260000109672546, 0.7400000095367432, 0.7453333139419556, 0.7453333139419556, 0.762666642665863, 0.7559999823570251, 0.7696666717529297, 0.7676666378974915, 0.7726666927337646, 0.7770000100135803, 0.7960000038146973, 0.7829999923706055, 0.7960000038146973, 0.8056666851043701, 0.812333345413208, 0.8153333067893982, 0.8143333196640015, 0.8153333067893982, 0.8236666917800903, 0.8230000138282776, 0.8243333101272583, 0.8256666660308838, 0.828000009059906, 0.8273333311080933, 0.8289999961853027, 0.8289999961853027, 0.8323333263397217, 0.8389999866485596, 0.8456666469573975, 0.8446666598320007, 0.8396666646003723, 0.8433333039283752, 0.8403333425521851, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 4, 3, 9, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 9, 0, 4, 2, 1, 7, 6, 9, 0, 4, 1, 7, 2, 7, 4, 6, 7, 0, 9, 2, 4, 5, 5, 1, 6], [0, 4, 0, 3, 0, 0, 3, 2, 2, 0, 6, 5, 0, 2, 1, 3, 6, 4, 7, 7, 4, 7, 1], [71, 99, 96, 99, 61, 1, 98, 88, 5, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 58, 35, 23, 10], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma), beta)), beta), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(tf.math.add(tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(beta, alpha), sigma)), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(grad, grad), grad))), grad), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), alpha)", "other_info": {"loss": [2.303709030151367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [90, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 2, 2, 4, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [7, 99, 75, 99, 61, 42]], "fitness": -0.06885714083909988, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, alpha))", "other_info": {"loss": [2.3058454990386963, 2.3055522441864014, 2.3053689002990723, 2.305119276046753, 2.3052446842193604, 2.305591583251953], "accuracy": [0.08558975160121918, 0.080042265355587, 0.08360850811004639, 0.0940430611371994, 0.0886276587843895, 0.08598599582910538], "val_loss": [2.3056933879852295, 2.3056933879852295, 2.3056933879852295, 2.3056933879852295, 2.3056933879852295, 2.3056933879852295], "val_accuracy": [0.06700000166893005, 0.06700000166893005, 0.06700000166893005, 0.06700000166893005, 0.06700000166893005, 0.06700000166893005]}, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}]