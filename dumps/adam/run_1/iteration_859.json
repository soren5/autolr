[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221454381942749, 1.8692817687988281, 1.3924859762191772, 1.0949221849441528, 0.94024258852005, 0.8392132520675659, 0.7723944187164307, 0.7231014966964722, 0.6910824179649353, 0.6489584445953369, 0.6307380199432373, 0.6052868366241455, 0.5853873491287231, 0.5657971501350403, 0.552244246006012, 0.5446858406066895, 0.5177726745605469, 0.512776792049408, 0.5017566084861755, 0.4948185086250305, 0.4814777076244354, 0.4803692102432251, 0.4658537805080414, 0.45343008637428284, 0.4468453526496887, 0.42910581827163696, 0.4403339922428131, 0.4208114445209503, 0.4206921458244324, 0.4074207842350006, 0.4009881615638733, 0.3924242854118347, 0.3909428119659424, 0.3799207806587219, 0.375306099653244, 0.3759227693080902, 0.3632604777812958, 0.35416969656944275, 0.3546649217605591, 0.34418985247612, 0.3431576192378998, 0.33991268277168274, 0.33824124932289124, 0.32723405957221985, 0.32873237133026123, 0.3120289742946625, 0.3126975893974304, 0.31274542212486267, 0.30450981855392456, 0.30088165402412415, 0.29157182574272156, 0.2986196279525757, 0.2908841669559479, 0.2852553129196167, 0.28041326999664307, 0.28034335374832153, 0.272847056388855, 0.2664056122303009, 0.2671392261981964, 0.2598150074481964, 0.2625355124473572, 0.24327689409255981, 0.254622220993042, 0.24852022528648376, 0.2449415922164917], "accuracy": [0.26799631118774414, 0.4858010709285736, 0.5666358470916748, 0.6280544400215149, 0.6642451286315918, 0.7017567157745361, 0.7275128960609436, 0.7368907928466797, 0.7470611333847046, 0.7611940503120422, 0.7733456492424011, 0.780610203742981, 0.7876105904579163, 0.7927618622779846, 0.7951393723487854, 0.8026680946350098, 0.8191784620285034, 0.8186501264572144, 0.8206313848495483, 0.8226125836372375, 0.8296129703521729, 0.8265751004219055, 0.8355567455291748, 0.8392550349235535, 0.8401796221733093, 0.8473120927810669, 0.8429533839225769, 0.8482366800308228, 0.8508783578872681, 0.8568220734596252, 0.8594637513160706, 0.858671247959137, 0.8621054291725159, 0.86553955078125, 0.8677849769592285, 0.8668603897094727, 0.8687095642089844, 0.8749174475669861, 0.8712190985679626, 0.8750495314598083, 0.8795403242111206, 0.8805969953536987, 0.8784837126731873, 0.8828424215316772, 0.8799365758895874, 0.8893144726753235, 0.8879936337471008, 0.8878615498542786, 0.8881257176399231, 0.8919561505317688, 0.898428201675415, 0.8914278149604797, 0.894069492816925, 0.897899866104126, 0.9010698795318604, 0.8965790271759033, 0.9058248400688171, 0.9033153057098389, 0.9058248400688171, 0.904768168926239, 0.9068815112113953, 0.9099194407463074, 0.9049002528190613, 0.9124290347099304, 0.9129573106765747], "val_loss": [2.038297176361084, 1.5133461952209473, 1.0492441654205322, 0.8516430854797363, 0.7628236413002014, 0.7061740159988403, 0.6605195999145508, 0.6208841800689697, 0.5959072709083557, 0.5703556537628174, 0.5476472973823547, 0.5342651605606079, 0.528168797492981, 0.5103155970573425, 0.49874991178512573, 0.48937463760375977, 0.47832340002059937, 0.4702930450439453, 0.46489012241363525, 0.4539034068584442, 0.4478722810745239, 0.4430514872074127, 0.4370698928833008, 0.441033273935318, 0.42735782265663147, 0.42257291078567505, 0.4174156188964844, 0.41785740852355957, 0.40723276138305664, 0.4036332666873932, 0.4055599868297577, 0.40827953815460205, 0.3984057307243347, 0.3955417573451996, 0.39021337032318115, 0.3872693181037903, 0.3872142434120178, 0.38341274857521057, 0.3884000778198242, 0.3829648494720459, 0.37840941548347473, 0.374798059463501, 0.3761885464191437, 0.3734405040740967, 0.37406623363494873, 0.3664211332798004, 0.36523595452308655, 0.3686729669570923, 0.37178677320480347, 0.3634536862373352, 0.3634895086288452, 0.36488857865333557, 0.36444076895713806, 0.36275458335876465, 0.37279579043388367, 0.369448721408844, 0.35758769512176514, 0.36439836025238037, 0.35641321539878845, 0.3559166193008423, 0.35690072178840637, 0.3572593927383423, 0.36050283908843994, 0.3559039235115051, 0.3514576554298401], "val_accuracy": [0.5490000247955322, 0.6683333516120911, 0.6800000071525574, 0.7049999833106995, 0.7276666760444641, 0.7429999709129333, 0.7543333172798157, 0.765666663646698, 0.7723333239555359, 0.7860000133514404, 0.7963333129882812, 0.7993333339691162, 0.8043333292007446, 0.809333324432373, 0.8159999847412109, 0.8196666836738586, 0.8230000138282776, 0.8276666402816772, 0.8266666531562805, 0.8370000123977661, 0.8360000252723694, 0.8376666903495789, 0.8443333506584167, 0.8370000123977661, 0.8489999771118164, 0.8456666469573975, 0.8523333072662354, 0.8503333330154419, 0.8539999723434448, 0.8569999933242798, 0.8579999804496765, 0.8546666502952576, 0.8610000014305115, 0.8640000224113464, 0.8633333444595337, 0.8643333315849304, 0.8636666536331177, 0.8673333525657654, 0.862333357334137, 0.8693333268165588, 0.8693333268165588, 0.8696666955947876, 0.8683333396911621, 0.8686666488647461, 0.8656666874885559, 0.8723333477973938, 0.875, 0.8726666569709778, 0.8679999709129333, 0.8763333559036255, 0.8766666650772095, 0.8769999742507935, 0.8769999742507935, 0.875333309173584, 0.8679999709129333, 0.8726666569709778, 0.8796666860580444, 0.8713333606719971, 0.8769999742507935, 0.8816666603088379, 0.8759999871253967, 0.878000020980835, 0.8769999742507935, 0.8790000081062317, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 0], [3, 3, 3, 3], [16, 16], [0, 1], [0], [0], [44], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 0, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.313462495803833, 2.8480703830718994, 9.06573141319802e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09166556596755981, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.343925952911377, 5490.861328125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09333333373069763, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [54, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 1, 6, 1, 4, 1, 4, 2, 8, 9, 5, 2, 5, 4, 9, 7], [0, 0, 0, 3, 0, 1, 3, 3, 2, 0, 2, 6], [16, 99, 96, 87, 61, 1, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 30, 18, 12, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, sigma), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), beta), tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))", "other_info": {"loss": [2.3088855743408203, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308779716491699, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09333333373069763, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 8, 7, 4, 6, 7], [0, 1, 0, 2, 3, 3, 0, 2, 3], [39, 39, 11], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 4], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 3, 0, 3, 0, 0, 3, 3, 2, 3], [16, 99, 96, 99, 80, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303382635116577, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 21, 12, 9, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 2, 9], [0, 3, 0, 3], [16, 3, 60], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 5], [0, 0, 2, 3, 0, 0, 3, 1, 4, 0], [16, 10, 96, 99, 94, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 3, 3, 2, 9, 6, 3, 3, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.309999942779541, 2.3098387718200684, 2.309499979019165, 2.310483932495117, 2.309523344039917, 2.311159372329712], "accuracy": [0.08968432247638702, 0.09893012791872025, 0.09417514503002167, 0.08281600475311279, 0.09206181764602661, 0.08994849026203156], "val_loss": [2.3083386421203613, 2.3083386421203613, 2.3083386421203613, 2.3083386421203613, 2.3083386421203613, 2.3083386421203613], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]