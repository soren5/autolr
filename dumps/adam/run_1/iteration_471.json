[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223717451095581, 1.8704346418380737, 1.3946317434310913, 1.1038590669631958, 0.9538944959640503, 0.8530938625335693, 0.7848504781723022, 0.7516801953315735, 0.7227191925048828, 0.6789925694465637, 0.6511962413787842, 0.6253657937049866, 0.6012454628944397, 0.6006035208702087, 0.5784655213356018, 0.5590199828147888, 0.5472569465637207, 0.5370056629180908, 0.5350390672683716, 0.5197784900665283, 0.5044257044792175, 0.4940004348754883, 0.49151164293289185, 0.47785523533821106, 0.4660344421863556, 0.46034881472587585, 0.44939935207366943, 0.44455721974372864, 0.4407314658164978, 0.427321195602417, 0.42569446563720703, 0.40688344836235046, 0.4058572053909302, 0.40118077397346497, 0.3940020799636841, 0.38601571321487427, 0.3861313462257385, 0.3826637268066406, 0.37085989117622375, 0.36359426379203796, 0.3660413920879364, 0.3600448966026306, 0.35077551007270813, 0.35284504294395447, 0.3450416028499603, 0.3398730754852295, 0.3292832374572754, 0.3239131569862366, 0.32310858368873596, 0.32713568210601807, 0.3131636083126068, 0.3066715896129608, 0.3054887652397156, 0.30140864849090576, 0.2911806106567383, 0.2911544442176819, 0.2867169678211212, 0.2784867286682129, 0.2804564833641052, 0.28573623299598694, 0.2719547152519226, 0.2659611403942108, 0.2622043192386627, 0.25533032417297363, 0.26272276043891907, 0.26438188552856445, 0.2542572617530823, 0.2539748251438141, 0.2503875494003296, 0.24651384353637695, 0.2382795661687851, 0.23460540175437927, 0.23450611531734467, 0.2292700707912445, 0.22454312443733215, 0.22089551389217377, 0.21545308828353882, 0.2201063632965088, 0.20454518496990204, 0.20782539248466492, 0.20624181628227234, 0.20452770590782166, 0.199562206864357, 0.19469408690929413, 0.1922702044248581, 0.18889907002449036], "accuracy": [0.2728833854198456, 0.47668737173080444, 0.5621450543403625, 0.6161669492721558, 0.6571126580238342, 0.694360077381134, 0.7164179086685181, 0.7252674698829651, 0.7423061728477478, 0.7474573850631714, 0.7648923397064209, 0.7736098170280457, 0.7774402499198914, 0.7847048044204712, 0.7956677079200745, 0.8010830879211426, 0.8045172095298767, 0.8096684813499451, 0.8109893202781677, 0.8123101592063904, 0.822348415851593, 0.8214238286018372, 0.8260467648506165, 0.828820526599884, 0.8330471515655518, 0.8401796221733093, 0.8397833704948425, 0.8432175517082214, 0.8421608805656433, 0.8467837572097778, 0.8506141901016235, 0.858671247959137, 0.8578787446022034, 0.856689989566803, 0.8578787446022034, 0.8639545440673828, 0.8627657890319824, 0.8672566413879395, 0.8667283058166504, 0.874389111995697, 0.8746532797813416, 0.873860776424408, 0.8775591254234314, 0.8742570281028748, 0.8772949576377869, 0.8768987059593201, 0.8864086866378784, 0.8835028409957886, 0.8882578015327454, 0.886672854423523, 0.8885219693183899, 0.8949940800666809, 0.8918240666389465, 0.893541157245636, 0.8922203183174133, 0.8971073627471924, 0.8965790271759033, 0.9013340473175049, 0.9037115573883057, 0.8957865834236145, 0.9030511379241943, 0.9071456789970398, 0.9058248400688171, 0.9058248400688171, 0.9068815112113953, 0.9049002528190613, 0.9091269373893738, 0.9097873568534851, 0.9105798602104187, 0.9099194407463074, 0.9124290347099304, 0.917580246925354, 0.9177123308181763, 0.9199577569961548, 0.9178444147109985, 0.9199577569961548, 0.9231277108192444, 0.9206181764602661, 0.9261656403541565, 0.9273543953895569, 0.9248448014259338, 0.930260181427002, 0.9303922653198242, 0.9277506470680237, 0.9331660270690918, 0.9339585304260254], "val_loss": [2.0383434295654297, 1.5078808069229126, 1.033665657043457, 0.8243586421012878, 0.7348832488059998, 0.6830092668533325, 0.6389444470405579, 0.6065914034843445, 0.5828466415405273, 0.5607229471206665, 0.5393248200416565, 0.5237464308738708, 0.5097159147262573, 0.49741649627685547, 0.4910445213317871, 0.47702252864837646, 0.47314655780792236, 0.4612768590450287, 0.45365339517593384, 0.4419291615486145, 0.43396979570388794, 0.4374544620513916, 0.4255795180797577, 0.42050015926361084, 0.4179273247718811, 0.41054806113243103, 0.40408480167388916, 0.4007491171360016, 0.40316668152809143, 0.3968554735183716, 0.39004194736480713, 0.38625723123550415, 0.3836806118488312, 0.38588738441467285, 0.38278573751449585, 0.3776240348815918, 0.3721773624420166, 0.3759562075138092, 0.37348735332489014, 0.36906734108924866, 0.3658126890659332, 0.36336591839790344, 0.3618807792663574, 0.3669411242008209, 0.3601786196231842, 0.35386067628860474, 0.3595418632030487, 0.35263147950172424, 0.35051241517066956, 0.35201001167297363, 0.34982624650001526, 0.3557707667350769, 0.3496656119823456, 0.34563031792640686, 0.34670963883399963, 0.3438250720500946, 0.34591731429100037, 0.34531933069229126, 0.3453689515590668, 0.3443601131439209, 0.3438488841056824, 0.3403729796409607, 0.33813372254371643, 0.3376559615135193, 0.33451104164123535, 0.3435012698173523, 0.3369787633419037, 0.3365553319454193, 0.33689045906066895, 0.33853113651275635, 0.3325972855091095, 0.3385174572467804, 0.33176305890083313, 0.3354499638080597, 0.34417834877967834, 0.3412764370441437, 0.33555522561073303, 0.3353424072265625, 0.33587580919265747, 0.3383999764919281, 0.32897692918777466, 0.3330898880958557, 0.33767735958099365, 0.34290552139282227, 0.3329324722290039, 0.3319167494773865], "val_accuracy": [0.5230000019073486, 0.6503333449363708, 0.6806666851043701, 0.7099999785423279, 0.7263333201408386, 0.746666669845581, 0.7663333415985107, 0.7670000195503235, 0.777999997138977, 0.7863333225250244, 0.7976666688919067, 0.8053333163261414, 0.8103333115577698, 0.8166666626930237, 0.8166666626930237, 0.824999988079071, 0.82833331823349, 0.8353333473205566, 0.8379999995231628, 0.8366666436195374, 0.8423333168029785, 0.8410000205039978, 0.8493333458900452, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.8543333411216736, 0.8526666760444641, 0.8536666631698608, 0.8536666631698608, 0.8579999804496765, 0.8576666712760925, 0.8600000143051147, 0.8556666374206543, 0.8579999804496765, 0.8616666793823242, 0.8619999885559082, 0.8610000014305115, 0.862666666507721, 0.8636666536331177, 0.8683333396911621, 0.8679999709129333, 0.8663333058357239, 0.8673333525657654, 0.8679999709129333, 0.8713333606719971, 0.8686666488647461, 0.8730000257492065, 0.8730000257492065, 0.8730000257492065, 0.8740000128746033, 0.871999979019165, 0.8726666569709778, 0.8766666650772095, 0.8756666779518127, 0.8743333220481873, 0.8766666650772095, 0.8776666522026062, 0.8743333220481873, 0.8733333349227905, 0.874666690826416, 0.8763333559036255, 0.878000020980835, 0.8763333559036255, 0.8776666522026062, 0.8793333172798157, 0.8773333430290222, 0.8796666860580444, 0.8786666393280029, 0.8763333559036255, 0.8799999952316284, 0.8796666860580444, 0.8809999823570251, 0.8820000290870667, 0.8776666522026062, 0.8793333172798157, 0.8823333382606506, 0.8833333253860474, 0.8820000290870667, 0.8803333044052124, 0.887666642665863, 0.8820000290870667, 0.8840000033378601, 0.8813333511352539, 0.8859999775886536, 0.8863333463668823]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 4, 0, 3], [0, 1, 0, 2], [39, 43], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 19, 96, 77, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [45, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [3, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 6, 5, 1, 4, 5, 8], [0, 1, 0, 3, 0, 0, 4, 1, 2, 0], [16, 89, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 0, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [6, 2, 6, 0, 3, 8, 6, 0, 0, 0, 7, 7, 6, 6, 9, 8], [0, 1, 0, 2, 2, 0, 1, 1, 0], [39, 39, 99, 23, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [61, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 16, 9, 5, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), grad), tf.math.negative(tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035781383514404, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [6, 3, 6, 6, 8, 2, 5, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 67, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 2, 2, 1, 1, 0, 13, 7, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3035409450531006, 2.302586317062378, 2.302586078643799, 2.302586555480957, 2.302586793899536, 2.302586317062378, 2.3025875091552734], "accuracy": [0.09008057415485382, 0.09906221181154251, 0.09998679161071777, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302584409713745, 2.302584409713745, 2.302584171295166, 2.3025848865509033, 2.3025848865509033, 2.302586555480957, 2.3025882244110107], "val_accuracy": [0.09933333098888397, 0.10199999809265137, 0.10199999809265137, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]