[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223931074142456, 1.8685033321380615, 1.3959335088729858, 1.0991311073303223, 0.9510712623596191, 0.8581234812736511, 0.7921599745750427, 0.7540234327316284, 0.7091922163963318, 0.6764346957206726, 0.6542680859565735, 0.6305912733078003, 0.6126105189323425, 0.5936393737792969, 0.5744690299034119, 0.5581355690956116, 0.5440446734428406, 0.5335982441902161, 0.5314438343048096, 0.5151190757751465, 0.5026627779006958, 0.4905310273170471, 0.48411110043525696, 0.47377797961235046, 0.45909252762794495, 0.44695067405700684, 0.4477255940437317, 0.43713709712028503, 0.43273496627807617, 0.4219316840171814, 0.416942298412323, 0.42349973320961, 0.40567898750305176, 0.39944347739219666, 0.39345782995224, 0.384726881980896, 0.3796573281288147, 0.3770005702972412, 0.375520259141922, 0.3595390319824219, 0.36279818415641785, 0.35928529500961304], "accuracy": [0.26878878474235535, 0.48527276515960693, 0.5577862858772278, 0.6106194853782654, 0.657508909702301, 0.6906617283821106, 0.7137762308120728, 0.7259278893470764, 0.7396644949913025, 0.7491744756698608, 0.7643640041351318, 0.7675340175628662, 0.7799497842788696, 0.7857614755630493, 0.793950617313385, 0.7976489067077637, 0.8030643463134766, 0.8099326491355896, 0.8084797263145447, 0.8161405324935913, 0.8240655064582825, 0.8257825970649719, 0.8253863453865051, 0.8308017253875732, 0.8418967127799988, 0.8389908671379089, 0.8418967127799988, 0.8437458872795105, 0.8473120927810669, 0.8541803956031799, 0.854708731174469, 0.8499537706375122, 0.8561616539955139, 0.8615770936012268, 0.8593316674232483, 0.8636903762817383, 0.8648791313171387, 0.8668603897094727, 0.8665962219238281, 0.8709549307823181, 0.8696341514587402, 0.8702945709228516], "val_loss": [2.0378317832946777, 1.5187145471572876, 1.0501757860183716, 0.8413419723510742, 0.7473987340927124, 0.6979761719703674, 0.6465646624565125, 0.6121892333030701, 0.5836027264595032, 0.5567867755889893, 0.5394218564033508, 0.5198153257369995, 0.5034491419792175, 0.4886595904827118, 0.47937002778053284, 0.47260981798171997, 0.4539128541946411, 0.4476393163204193, 0.4379948675632477, 0.4318788945674896, 0.42080146074295044, 0.41619616746902466, 0.41048792004585266, 0.40222710371017456, 0.3955675959587097, 0.3941326141357422, 0.3879576027393341, 0.38423749804496765, 0.3844340741634369, 0.37248098850250244, 0.3704739511013031, 0.3708339333534241, 0.3668406307697296, 0.3628120422363281, 0.35755300521850586, 0.35674723982810974, 0.3513372540473938, 0.3504199981689453, 0.34627702832221985, 0.35115471482276917, 0.3388025164604187, 0.338992714881897], "val_accuracy": [0.5543333292007446, 0.6526666879653931, 0.6830000281333923, 0.7070000171661377, 0.7319999933242798, 0.737333357334137, 0.7636666893959045, 0.7713333368301392, 0.7860000133514404, 0.7933333516120911, 0.7976666688919067, 0.8159999847412109, 0.8186666369438171, 0.8293333053588867, 0.828000009059906, 0.8306666612625122, 0.840666651725769, 0.843666672706604, 0.8456666469573975, 0.846666693687439, 0.8503333330154419, 0.8539999723434448, 0.8526666760444641, 0.859000027179718, 0.8603333234786987, 0.8583333492279053, 0.862666666507721, 0.8633333444595337, 0.862333357334137, 0.8663333058357239, 0.8653333187103271, 0.8669999837875366, 0.8669999837875366, 0.8679999709129333, 0.8673333525657654, 0.8686666488647461, 0.8736666440963745, 0.8693333268165588, 0.8703333139419556, 0.8706666827201843, 0.8726666569709778, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 41], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [19, 16], [0, 0, 0, 1], [0, 1, 9], [0], [99, 54], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 3, 5, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 14, 96, 99, 84, 46]], "fitness": -0.11028571426868439, "mapping_values": [1, 6, 4, 2, 2, 6, 3, 3, 2, 4, 3, 1, 2, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30800199508667, 2.305323839187622, 2.3050248622894287, 2.3049442768096924, 2.3043417930603027, 2.3041093349456787, 2.303988218307495, 2.3038671016693115, 2.303837776184082, 2.3036818504333496, 2.3037211894989014, 2.303527593612671, 2.3034818172454834, 2.303478956222534, 2.303558588027954, 2.303569793701172, 2.3033363819122314, 2.303395986557007, 2.3033785820007324, 2.3033580780029297, 2.303271532058716, 2.303252696990967, 2.3032944202423096, 2.3032398223876953, 2.3032047748565674, 2.303194284439087, 2.3031809329986572, 2.3031229972839355, 2.3031411170959473, 2.303112506866455, 2.3031435012817383, 2.3030078411102295, 2.3030974864959717, 2.303110361099243, 2.303065538406372, 2.303068161010742, 2.302985191345215, 2.303053140640259, 2.3030552864074707, 2.3030927181243896, 2.303114414215088, 2.303074598312378, 2.3030714988708496, 2.3030076026916504, 2.3029580116271973, 2.302940607070923, 2.3029627799987793, 2.302924871444702], "accuracy": [0.08928807079792023, 0.08558975160121918, 0.08757099509239197, 0.0878351628780365, 0.08849557489156723, 0.09391097724437714, 0.09153348207473755, 0.09087307006120682, 0.09721305221319199, 0.09206181764602661, 0.09021265059709549, 0.09179764986038208, 0.09245806187391281, 0.0936468094587326, 0.09430722147226334, 0.09972262382507324, 0.09866596013307571, 0.09087307006120682, 0.09298639744520187, 0.09615638852119446, 0.09774138033390045, 0.0948355570435524, 0.09800554811954498, 0.09536388516426086, 0.09721305221319199, 0.09866596013307571, 0.09549596905708313, 0.1014397069811821, 0.09959053993225098, 0.09536388516426086, 0.09734513610601425, 0.09945846349000931, 0.09787346422672272, 0.10051512718200684, 0.09694888442754745, 0.10011887550354004, 0.10579843819141388, 0.09800554811954498, 0.09734513610601425, 0.09576013684272766, 0.09655263274908066, 0.10421344637870789, 0.09972262382507324, 0.09972262382507324, 0.09787346422672272, 0.09826971590518951, 0.10130762308835983, 0.1022322028875351], "val_loss": [2.3059728145599365, 2.305025339126587, 2.304518461227417, 2.304187774658203, 2.3039472103118896, 2.3037664890289307, 2.3036255836486816, 2.3035104274749756, 2.303414821624756, 2.303335666656494, 2.303270101547241, 2.303215503692627, 2.3031694889068604, 2.3031294345855713, 2.3030943870544434, 2.303063154220581, 2.303035259246826, 2.3030099868774414, 2.302988052368164, 2.3029677867889404, 2.3029494285583496, 2.3029322624206543, 2.3029167652130127, 2.3029024600982666, 2.302889108657837, 2.3028762340545654, 2.3028643131256104, 2.3028528690338135, 2.302842855453491, 2.302833080291748, 2.3028242588043213, 2.302816152572632, 2.3028085231781006, 2.3028013706207275, 2.3027946949005127, 2.302788019180298, 2.302781820297241, 2.302776336669922, 2.3027710914611816, 2.3027658462524414, 2.3027610778808594, 2.3027565479278564, 2.3027522563934326, 2.3027477264404297, 2.302743434906006, 2.3027396202087402, 2.3027358055114746, 2.302731990814209], "val_accuracy": [0.06966666877269745, 0.06733333319425583, 0.0663333311676979, 0.0716666653752327, 0.07433333247900009, 0.07800000160932541, 0.08233333379030228, 0.0833333358168602, 0.08399999886751175, 0.08533333241939545, 0.08699999749660492, 0.08866667002439499, 0.09166666865348816, 0.09133332967758179, 0.08766666799783707, 0.08866667002439499, 0.09000000357627869, 0.09399999678134918, 0.09533333033323288, 0.0963333323597908, 0.09866666793823242, 0.09966666996479034, 0.10266666859388351, 0.10333333164453506, 0.10533333569765091, 0.1066666692495346, 0.10766666382551193, 0.11033333092927933, 0.11166666448116302, 0.11233333498239517, 0.11233333498239517, 0.11233333498239517, 0.11266666650772095, 0.11266666650772095, 0.1133333370089531, 0.11500000208616257, 0.11400000005960464, 0.11566666513681412, 0.11533333361148834, 0.11633333563804626, 0.11666666716337204, 0.11666666716337204, 0.11733333021402359, 0.11633333563804626, 0.11566666513681412, 0.11566666513681412, 0.11599999666213989, 0.11633333563804626]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 84], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 9, 2], [0, 2, 0, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 6, 7, 3, 1, 1, 4, 3, 0, 9, 2, 0, 1, 8, 7, 8, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 5, 6, 0, 3, 1, 0, 1, 0, 5, 1], [16, 99, 96, 99, 61, 1, 56, 76, 52, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 5, 2, 2, 2, 1, 1, 1, 47, 27, 20, 10], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)), tf.math.multiply(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.negative(sigma), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.subtract(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.sqrt(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [2, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [3], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 7, 4, 3, 2, 1, 0, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 4, 4, 8, 6, 1, 6, 8, 0, 1, 3, 4, 7], [0, 2, 0, 3, 4, 3, 1, 5, 4, 3, 1, 5, 3], [35, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 30, 17, 13, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(alpha)), grad)))), tf.math.subtract(tf.math.multiply(tf.math.pow(grad, tf.math.add(grad, alpha)), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]