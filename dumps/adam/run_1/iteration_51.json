[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2254931926727295, 1.8708747625350952, 1.4058219194412231, 1.102044939994812, 0.955382764339447, 0.8625746965408325, 0.7849346995353699, 0.7282306551933289, 0.7002512812614441, 0.6712788343429565, 0.643829882144928, 0.6218456029891968, 0.5965563058853149, 0.5812253355979919, 0.5596222281455994, 0.545295000076294, 0.531836211681366, 0.5320176482200623, 0.5116527676582336, 0.49265116453170776, 0.48104026913642883, 0.4795299470424652, 0.4646238088607788, 0.4641164243221283, 0.44843438267707825, 0.45364537835121155, 0.4406763017177582, 0.4311312139034271, 0.42547881603240967, 0.41393986344337463, 0.4077581763267517, 0.4064379334449768, 0.4002853035926819, 0.3899439871311188, 0.38653525710105896, 0.37936440110206604, 0.37558552622795105, 0.37058696150779724, 0.3675723671913147, 0.3610340356826782, 0.35246044397354126, 0.34568357467651367, 0.3377779424190521, 0.3415590524673462, 0.3374413847923279, 0.33037394285202026, 0.3223171830177307, 0.31689074635505676, 0.3159818947315216, 0.31816351413726807, 0.3101882338523865, 0.2986012399196625, 0.29645684361457825, 0.29688310623168945, 0.29100456833839417, 0.2815876007080078, 0.28448715806007385, 0.2781625986099243, 0.27009907364845276], "accuracy": [0.27063795924186707, 0.499009370803833, 0.5543521046638489, 0.6244881749153137, 0.6597543358802795, 0.6911900639533997, 0.7243428826332092, 0.7400607466697693, 0.748778223991394, 0.7584202885627747, 0.7671377658843994, 0.772288978099823, 0.7860256433486938, 0.7918372750282288, 0.7994980812072754, 0.8033285140991211, 0.8124422430992126, 0.8133667707443237, 0.8162726163864136, 0.8240655064582825, 0.8296129703521729, 0.8285563588142395, 0.8335754871368408, 0.8360850811004639, 0.8400475382804871, 0.8381983637809753, 0.8425571322441101, 0.8511425256729126, 0.844010055065155, 0.8511425256729126, 0.8577466607093811, 0.8558974862098694, 0.8601241707801819, 0.8659358024597168, 0.8622375130653381, 0.8654074668884277, 0.8665962219238281, 0.8746532797813416, 0.8722757697105408, 0.8737286925315857, 0.8739928603172302, 0.8741249442100525, 0.8803328275680542, 0.8811253309249878, 0.8784837126731873, 0.8821820020675659, 0.8841632604598999, 0.8854840993881226, 0.8858803510665894, 0.889050304889679, 0.889050304889679, 0.8967111110687256, 0.8953903317451477, 0.8972394466400146, 0.8986923694610596, 0.8986923694610596, 0.898428201675415, 0.9014661312103271, 0.9046360850334167], "val_loss": [2.045591354370117, 1.5315800905227661, 1.0724027156829834, 0.8610849380493164, 0.7721571326255798, 0.7191342711448669, 0.6677735447883606, 0.6327664852142334, 0.6047496199607849, 0.5836101174354553, 0.5636029839515686, 0.5472335815429688, 0.53037029504776, 0.516444742679596, 0.5088509321212769, 0.4955979287624359, 0.48346906900405884, 0.47625452280044556, 0.465043306350708, 0.4601901173591614, 0.45680132508277893, 0.447069376707077, 0.443448007106781, 0.441877156496048, 0.4386245012283325, 0.42860472202301025, 0.4238518178462982, 0.4194001853466034, 0.40938442945480347, 0.40237417817115784, 0.4048785865306854, 0.40655821561813354, 0.3953471779823303, 0.3933049440383911, 0.3911401629447937, 0.3878623843193054, 0.380785197019577, 0.3908190429210663, 0.38570183515548706, 0.373124361038208, 0.3747180998325348, 0.3708561062812805, 0.3694150447845459, 0.3658571243286133, 0.364289790391922, 0.36596235632896423, 0.3609752058982849, 0.36053556203842163, 0.3633649945259094, 0.3599109351634979, 0.3605385422706604, 0.3535064160823822, 0.35089465975761414, 0.35252538323402405, 0.34775155782699585, 0.3508424758911133, 0.34830182790756226, 0.3500939905643463, 0.358191579580307], "val_accuracy": [0.5366666913032532, 0.6299999952316284, 0.6629999876022339, 0.6909999847412109, 0.718666672706604, 0.7323333621025085, 0.7523333430290222, 0.7590000033378601, 0.7703333497047424, 0.7850000262260437, 0.7913333177566528, 0.7990000247955322, 0.8103333115577698, 0.8133333325386047, 0.8109999895095825, 0.8216666579246521, 0.8240000009536743, 0.8256666660308838, 0.8286666870117188, 0.8293333053588867, 0.8326666951179504, 0.8360000252723694, 0.8393333554267883, 0.8353333473205566, 0.8393333554267883, 0.8460000157356262, 0.8463333249092102, 0.8446666598320007, 0.8526666760444641, 0.8510000109672546, 0.8533333539962769, 0.8496666550636292, 0.8523333072662354, 0.8533333539962769, 0.8553333282470703, 0.8583333492279053, 0.8586666584014893, 0.8516666889190674, 0.8529999852180481, 0.862333357334137, 0.8633333444595337, 0.8643333315849304, 0.8619999885559082, 0.8629999756813049, 0.8650000095367432, 0.8633333444595337, 0.8640000224113464, 0.8663333058357239, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871999979019165, 0.8693333268165588, 0.8730000257492065, 0.8686666488647461, 0.8679999709129333, 0.8730000257492065, 0.8709999918937683, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 28], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 3, 0, 3, 5, 3, 7], [0, 3, 0, 3, 0, 2], [16, 16, 40], [0, 1], [0], [0], [50], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 4, 0, 3, 4, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.13199999928474426, "mapping_values": [1, 9, 5, 4, 3, 14, 8, 6, 3, 2, 1, 1, 1, 13, 7, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad)), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3728320717914112.0, 4755719576354816.0, 4958977293025280.0, 4790036901920768.0, 5114564630806528.0, 5728949501952000.0, 5945616643391488.0, 6053829418156032.0, 6275546904264704.0, 6742003974930432.0], "accuracy": [0.10593052208423615, 0.11279883980751038, 0.11306300014257431, 0.11530841141939163, 0.10910051316022873, 0.11293092370033264, 0.10659094154834747, 0.108440101146698, 0.11332716792821884, 0.11200633645057678], "val_loss": [4263866095632384.0, 4476973514489856.0, 4694746073137152.0, 4915946015686656.0, 5139705221873664.0, 5365290326032384.0, 5592284179464192.0, 5820903141146624.0, 6050462700666880.0, 6280974669185024.0], "val_accuracy": [0.13466666638851166, 0.13566666841506958, 0.13566666841506958, 0.1366666704416275, 0.13733333349227905, 0.13733333349227905, 0.13733333349227905, 0.13600000739097595, 0.13633333146572113, 0.13600000739097595]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 5, 0, 3, 4], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16, 57], [0, 1], [0], [0], [80], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 9, 6, 3, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(alpha, alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 66], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 3, 1, 5], [0, 2, 0, 3], [43, 16], [1, 1], [0], [0], [34], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [74, 99, 96, 99, 0, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 8, 4, 4, 2, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [63, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 2, 2, 5], [0, 3, 0, 3], [16, 14], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 2, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09028571099042892, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3101694583892822, 2.313084840774536, 2.3140530586242676, 2.3160476684570312, 2.3176403045654297, 2.3199007511138916], "accuracy": [0.09351472556591034, 0.08638224750757217, 0.08836349099874496, 0.08691058307886124, 0.08215559273958206, 0.08519349992275238], "val_loss": [2.3107962608337402, 2.312638759613037, 2.31449031829834, 2.316363573074341, 2.3182477951049805, 2.3201797008514404], "val_accuracy": [0.09099999815225601, 0.08966666460037231, 0.08933333307504654, 0.08966666460037231, 0.08966666460037231, 0.09000000357627869]}}]