[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8500000238418579, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239294052124023, 1.857043981552124, 1.3794218301773071, 1.074184536933899, 0.9118561148643494, 0.8205296993255615, 0.7546070218086243, 0.7147927284240723, 0.6768766641616821, 0.6456388831138611, 0.6260058879852295, 0.5918905138969421, 0.5805631875991821, 0.5607672333717346, 0.5438565611839294, 0.5316199660301208, 0.51990807056427, 0.49693992733955383, 0.48753923177719116, 0.4777430593967438, 0.46770378947257996, 0.4595320224761963, 0.4552307426929474, 0.44133996963500977, 0.4381372630596161, 0.4329194128513336, 0.4223015010356903, 0.41969507932662964, 0.4127812683582306, 0.40656474232673645, 0.39925146102905273, 0.38948583602905273, 0.38017287850379944, 0.37712952494621277, 0.37209373712539673, 0.3674682676792145, 0.3652353286743164, 0.3578035235404968, 0.3516596853733063, 0.3434213697910309, 0.33967655897140503, 0.3374912440776825, 0.3298509120941162, 0.32438182830810547, 0.319623202085495, 0.3066680431365967, 0.30991867184638977, 0.3037322163581848, 0.30358222126960754, 0.30428212881088257, 0.29744866490364075, 0.28531110286712646, 0.291604220867157, 0.29153186082839966, 0.2778407037258148, 0.276714563369751, 0.27059048414230347, 0.27025505900382996, 0.2579785883426666, 0.2584540843963623, 0.258500337600708, 0.2519172430038452, 0.24616174399852753, 0.2472172975540161], "accuracy": [0.266939640045166, 0.5007264614105225, 0.570202112197876, 0.6310923099517822, 0.6782459616661072, 0.7062475085258484, 0.7268524765968323, 0.7415136694908142, 0.7466648817062378, 0.7625148296356201, 0.7707040309906006, 0.7820631265640259, 0.789459764957428, 0.7965922355651855, 0.8047813773155212, 0.8037247657775879, 0.8148196935653687, 0.8206313848495483, 0.8227446675300598, 0.8301413059234619, 0.8304054737091064, 0.8319904804229736, 0.8366134166717529, 0.8391229510307312, 0.8393871188163757, 0.8385946154594421, 0.8506141901016235, 0.8496896028518677, 0.8510104417800903, 0.8576145768165588, 0.8514066934585571, 0.8646149635314941, 0.8696341514587402, 0.8651432991027832, 0.863558292388916, 0.8693699836730957, 0.8713511824607849, 0.8725399374961853, 0.8725399374961853, 0.8771628737449646, 0.8751816153526306, 0.8732003569602966, 0.8835028409957886, 0.8844274282455444, 0.8825782537460327, 0.8894465565681458, 0.889578640460968, 0.8889182209968567, 0.8907673954963684, 0.8899748921394348, 0.8893144726753235, 0.8982961177825928, 0.8931449055671692, 0.894069492816925, 0.8996169567108154, 0.8982961177825928, 0.9026548862457275, 0.9026548862457275, 0.90423983335495, 0.9068815112113953, 0.9052965044975281, 0.9068815112113953, 0.9066173434257507, 0.9096552729606628], "val_loss": [2.040017604827881, 1.5123844146728516, 1.0528122186660767, 0.8499350547790527, 0.7681408524513245, 0.7122321724891663, 0.6595664620399475, 0.625489354133606, 0.6054745316505432, 0.5793876051902771, 0.5585834980010986, 0.5449939966201782, 0.5331103205680847, 0.5204514265060425, 0.5084250569343567, 0.5011470317840576, 0.49437570571899414, 0.4874054491519928, 0.4754597544670105, 0.47091081738471985, 0.4654461741447449, 0.4575690031051636, 0.45271503925323486, 0.44595637917518616, 0.4412221610546112, 0.4392009377479553, 0.4297714829444885, 0.43735480308532715, 0.428203821182251, 0.42701464891433716, 0.41953548789024353, 0.4190937578678131, 0.4136207699775696, 0.41404613852500916, 0.4135989248752594, 0.4019089341163635, 0.4037010967731476, 0.403119832277298, 0.3987070322036743, 0.3974124491214752, 0.39373645186424255, 0.39676281809806824, 0.39179688692092896, 0.39187145233154297, 0.3845832943916321, 0.3894129991531372, 0.38709399104118347, 0.38452908396720886, 0.3811851441860199, 0.3818312883377075, 0.37909969687461853, 0.37875229120254517, 0.3768776059150696, 0.3714384436607361, 0.3737507462501526, 0.37707239389419556, 0.3701666295528412, 0.37129515409469604, 0.3718457520008087, 0.3726447820663452, 0.36622393131256104, 0.3678489625453949, 0.37532949447631836, 0.37258410453796387], "val_accuracy": [0.528333306312561, 0.6416666507720947, 0.6696666479110718, 0.703000009059906, 0.7196666598320007, 0.7453333139419556, 0.7596666812896729, 0.7723333239555359, 0.7763333320617676, 0.7933333516120911, 0.8040000200271606, 0.8113333582878113, 0.8100000023841858, 0.8176666498184204, 0.8206666707992554, 0.8233333230018616, 0.8273333311080933, 0.8243333101272583, 0.8323333263397217, 0.8320000171661377, 0.8393333554267883, 0.8403333425521851, 0.8410000205039978, 0.8433333039283752, 0.8446666598320007, 0.846666693687439, 0.8483333587646484, 0.8479999899864197, 0.8479999899864197, 0.846666693687439, 0.8546666502952576, 0.8529999852180481, 0.8553333282470703, 0.8539999723434448, 0.8500000238418579, 0.8579999804496765, 0.856333315372467, 0.8586666584014893, 0.8576666712760925, 0.8576666712760925, 0.8573333621025085, 0.859000027179718, 0.8576666712760925, 0.8573333621025085, 0.8619999885559082, 0.8616666793823242, 0.8583333492279053, 0.8600000143051147, 0.8656666874885559, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8646666407585144, 0.8669999837875366, 0.8683333396911621, 0.8646666407585144, 0.8669999837875366, 0.8659999966621399, 0.8706666827201843, 0.8663333058357239, 0.8663333058357239, 0.8679999709129333, 0.8700000047683716, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [29, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [4, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 72, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 13, 7, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3047378063201904, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 43], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 6, 3, 9], [0, 2, 0, 1, 4], [16, 16, 92], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 3, 9, 4, 2, 8], [0, 0, 4, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 71, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 14, 9, 5, 3, 2, 1, 1, 0, 16, 9, 7, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303370237350464, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10133333504199982, 0.10333333164453506, 0.10333333164453506, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 4], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 92, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3046624660491943, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 6, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), grad))), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310586929321289, 2.310058355331421, 2.3104443550109863, 2.3100502490997314, 2.309992551803589, 2.309035062789917], "accuracy": [0.08849557489156723, 0.09100515395402908, 0.08994849026203156, 0.09021265059709549, 0.09126931428909302, 0.09589222073554993], "val_loss": [2.30843186378479, 2.30843186378479, 2.30843186378479, 2.30843186378479, 2.30843186378479, 2.30843186378479], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]