[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220431327819824, 1.8569740056991577, 1.3755658864974976, 1.0874396562576294, 0.9262239336967468, 0.8379094004631042, 0.7675543427467346, 0.7217980623245239, 0.6871329545974731, 0.654635488986969, 0.6388610601425171, 0.6150592565536499, 0.5940167903900146, 0.5808444023132324, 0.56529301404953, 0.5501704216003418, 0.5388270020484924, 0.5208674073219299, 0.5151153206825256, 0.49882566928863525, 0.488606721162796, 0.48571860790252686, 0.4818565249443054, 0.4635099470615387, 0.45399028062820435, 0.447063684463501, 0.42773061990737915, 0.4359186291694641, 0.4229935109615326, 0.4215356111526489, 0.4066852331161499, 0.40534907579421997, 0.4016064405441284, 0.3922232687473297, 0.39207661151885986, 0.38746607303619385, 0.37294304370880127, 0.3714742660522461, 0.3697217106819153, 0.3609004616737366, 0.35770687460899353, 0.3554362654685974, 0.34485262632369995], "accuracy": [0.2779025137424469, 0.49689605832099915, 0.5691454410552979, 0.6178840398788452, 0.667811393737793, 0.6940959095954895, 0.7205125093460083, 0.7360982894897461, 0.7448157668113708, 0.76106196641922, 0.7633073329925537, 0.7720248103141785, 0.7791573405265808, 0.7895918488502502, 0.7980451583862305, 0.7991018295288086, 0.8054417967796326, 0.8095363974571228, 0.8148196935653687, 0.8203672170639038, 0.8252542614936829, 0.8261788487434387, 0.82683926820755, 0.8372738361358643, 0.8359529972076416, 0.841500461101532, 0.8479725122451782, 0.8457271456718445, 0.8479725122451782, 0.8469158411026001, 0.8595958352088928, 0.8555012345314026, 0.8533879518508911, 0.8585391640663147, 0.8614450097084045, 0.8661999702453613, 0.8669924736022949, 0.8651432991027832, 0.8691058158874512, 0.8722757697105408, 0.8722757697105408, 0.8710870146751404, 0.8775591254234314], "val_loss": [2.0389509201049805, 1.5124274492263794, 1.0496517419815063, 0.8497922420501709, 0.7626957893371582, 0.7097421884536743, 0.6660829186439514, 0.6305967569351196, 0.6106986999511719, 0.58641517162323, 0.5680446028709412, 0.5499541759490967, 0.5397006273269653, 0.5237101316452026, 0.5184644460678101, 0.5011928677558899, 0.4974513649940491, 0.4835914671421051, 0.4776989221572876, 0.4746166169643402, 0.4587276875972748, 0.4570014774799347, 0.453452467918396, 0.4375725984573364, 0.4370024800300598, 0.4279727637767792, 0.42560073733329773, 0.42118921875953674, 0.4194360375404358, 0.4133787155151367, 0.4061407148838043, 0.4093184471130371, 0.40150943398475647, 0.3984459638595581, 0.39168456196784973, 0.3900165259838104, 0.39059528708457947, 0.38579386472702026, 0.3800792098045349, 0.38237810134887695, 0.3783215880393982, 0.37695303559303284, 0.3709409236907959], "val_accuracy": [0.5609999895095825, 0.6486666798591614, 0.6710000038146973, 0.6990000009536743, 0.7229999899864197, 0.737666666507721, 0.7513333559036255, 0.7649999856948853, 0.7733333110809326, 0.7883333563804626, 0.7873333096504211, 0.7940000295639038, 0.8046666383743286, 0.812666654586792, 0.8119999766349792, 0.8166666626930237, 0.815666675567627, 0.8273333311080933, 0.8276666402816772, 0.8326666951179504, 0.8336666822433472, 0.8343333601951599, 0.843666672706604, 0.8453333377838135, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.846666693687439, 0.8486666679382324, 0.8513333201408386, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8560000061988831, 0.8606666922569275, 0.8586666584014893, 0.859000027179718, 0.8673333525657654, 0.8603333234786987, 0.8613333106040955, 0.8619999885559082, 0.8629999756813049, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226662635803223, 1.8739091157913208, 1.3981077671051025, 1.0964065790176392, 0.944381833076477, 0.8318166136741638, 0.764991044998169, 0.71898353099823, 0.6905970573425293, 0.6573909521102905, 0.6177572011947632, 0.6019572019577026, 0.5803160071372986, 0.5708762407302856, 0.5531426668167114, 0.527829647064209, 0.512290358543396, 0.5005390644073486, 0.48396262526512146, 0.4867667555809021, 0.4756568670272827, 0.46340689063072205, 0.4582642912864685, 0.44150087237358093, 0.4405350685119629, 0.43982118368148804, 0.4294149577617645, 0.41834747791290283, 0.403184175491333, 0.4012127220630646, 0.3957946300506592, 0.38345977663993835, 0.38751208782196045, 0.37933358550071716, 0.37697067856788635, 0.3731098175048828, 0.36671826243400574, 0.35580340027809143, 0.3490055501461029, 0.34483155608177185, 0.33935973048210144, 0.3374767601490021, 0.3311581611633301, 0.32629644870758057, 0.3210088312625885, 0.31878915429115295, 0.31745749711990356, 0.31214088201522827, 0.3007531762123108, 0.29869869351387024, 0.2950547933578491, 0.2941375970840454, 0.29015859961509705, 0.2856007516384125, 0.28432783484458923, 0.28686773777008057, 0.27774369716644287, 0.2701197564601898, 0.264446884393692, 0.26380085945129395, 0.2635023593902588, 0.259691447019577, 0.24734944105148315, 0.24625515937805176, 0.2415095716714859, 0.242096945643425, 0.24210231006145477], "accuracy": [0.2739400267601013, 0.48289525508880615, 0.5708624720573425, 0.6194690465927124, 0.6654338836669922, 0.7073041796684265, 0.724210798740387, 0.733588695526123, 0.7470611333847046, 0.759080708026886, 0.7712323069572449, 0.7796856164932251, 0.7890635132789612, 0.7852331399917603, 0.7987055778503418, 0.8142913579940796, 0.8187822103500366, 0.8165367841720581, 0.8214238286018372, 0.8271034359931946, 0.8240655064582825, 0.8310658931732178, 0.8339717388153076, 0.8407079577445984, 0.8397833704948425, 0.8466516733169556, 0.8469158411026001, 0.8514066934585571, 0.8545766472816467, 0.8568220734596252, 0.8548408150672913, 0.8595958352088928, 0.8599920868873596, 0.8599920868873596, 0.8628978729248047, 0.8654074668884277, 0.8663320541381836, 0.8759741187095642, 0.8730682730674744, 0.8729361891746521, 0.878879964351654, 0.8739928603172302, 0.8782195448875427, 0.8849557638168335, 0.8811253309249878, 0.8854840993881226, 0.8829745054244995, 0.8891823887825012, 0.8882578015327454, 0.8914278149604797, 0.8893144726753235, 0.8939374089241028, 0.8907673954963684, 0.8967111110687256, 0.8945978283882141, 0.8939374089241028, 0.9006736278533936, 0.9026548862457275, 0.9046360850334167, 0.8992207050323486, 0.9054285883903503, 0.9072777628898621, 0.9099194407463074, 0.9121648669242859, 0.9126931428909302, 0.9096552729606628, 0.9097873568534851], "val_loss": [2.042656421661377, 1.5203909873962402, 1.0502097606658936, 0.8447920680046082, 0.7523253560066223, 0.692788302898407, 0.6461610794067383, 0.6105987429618835, 0.5917214155197144, 0.56747967004776, 0.5445367693901062, 0.5366067290306091, 0.5258380770683289, 0.5155726671218872, 0.4999614655971527, 0.4861401319503784, 0.480927973985672, 0.4712774157524109, 0.46432486176490784, 0.4576994776725769, 0.4599899351596832, 0.4525807201862335, 0.4387916326522827, 0.44426485896110535, 0.4390811324119568, 0.4323534071445465, 0.42454996705055237, 0.42092660069465637, 0.4229905307292938, 0.41343623399734497, 0.4179763197898865, 0.41292086243629456, 0.40541377663612366, 0.41006726026535034, 0.40004080533981323, 0.4034750461578369, 0.3951835036277771, 0.3963378071784973, 0.39462581276893616, 0.39410725235939026, 0.39099740982055664, 0.38878199458122253, 0.38457435369491577, 0.38409286737442017, 0.3836004137992859, 0.3778672218322754, 0.3846302032470703, 0.3789299428462982, 0.3778820335865021, 0.37774911522865295, 0.37527042627334595, 0.3774232566356659, 0.3703569769859314, 0.3767327070236206, 0.3777865469455719, 0.3715968132019043, 0.3709966242313385, 0.37255194783210754, 0.36901262402534485, 0.3734543025493622, 0.3698122501373291, 0.367854505777359, 0.3744174838066101, 0.3715668022632599, 0.3734057545661926, 0.37107470631599426, 0.3650856614112854], "val_accuracy": [0.5540000200271606, 0.6703333258628845, 0.6796666383743286, 0.7066666483879089, 0.7323333621025085, 0.7476666569709778, 0.7586666941642761, 0.7730000019073486, 0.7870000004768372, 0.7926666736602783, 0.800000011920929, 0.8066666722297668, 0.812666654586792, 0.8130000233650208, 0.8193333148956299, 0.8299999833106995, 0.8253333568572998, 0.8323333263397217, 0.8316666483879089, 0.8356666564941406, 0.8336666822433472, 0.843666672706604, 0.8450000286102295, 0.8343333601951599, 0.8429999947547913, 0.8463333249092102, 0.8426666855812073, 0.8443333506584167, 0.8510000109672546, 0.8506666421890259, 0.8526666760444641, 0.8526666760444641, 0.8533333539962769, 0.847000002861023, 0.8576666712760925, 0.8573333621025085, 0.859666645526886, 0.8556666374206543, 0.859666645526886, 0.8603333234786987, 0.8633333444595337, 0.859666645526886, 0.8633333444595337, 0.8636666536331177, 0.8659999966621399, 0.8636666536331177, 0.8663333058357239, 0.8640000224113464, 0.8669999837875366, 0.8659999966621399, 0.8693333268165588, 0.8700000047683716, 0.8706666827201843, 0.8679999709129333, 0.8706666827201843, 0.8723333477973938, 0.8730000257492065, 0.8723333477973938, 0.8713333606719971, 0.8730000257492065, 0.8743333220481873, 0.878000020980835, 0.8690000176429749, 0.874666690826416, 0.8733333349227905, 0.8730000257492065, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [2, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 2, 3, 0, 3, 5, 4, 1, 9], [0, 2, 0, 3, 3, 1], [16, 16, 37], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [6, 99, 39, 99, 61, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 15, 9, 6, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(tf.math.subtract(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), sigma)), tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 71, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [68, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [5, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8, 1, 3, 8, 0, 7, 2, 5, 8, 8, 4, 3, 5], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 7, 6, 5, 6, 3], [65, 99, 96, 99, 18, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0, 38, 23, 15, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.multiply(sigma, alpha), tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.multiply(grad, grad), tf.math.square(grad))))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [94, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 90, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303419351577759, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]