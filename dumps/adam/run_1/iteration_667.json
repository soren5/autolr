[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216436862945557, 1.8589692115783691, 1.380374789237976, 1.0960476398468018, 0.9539801478385925, 0.8338157534599304, 0.7811713218688965, 0.7311038374900818, 0.6960033178329468, 0.6612832546234131, 0.6419533491134644, 0.6147032976150513, 0.6031161546707153, 0.5910382270812988, 0.5675739049911499, 0.5565035939216614, 0.5410244464874268, 0.5254837274551392, 0.5177696943283081, 0.5035859942436218, 0.4915758967399597, 0.47452104091644287, 0.47831055521965027, 0.46481263637542725, 0.4623919725418091, 0.45103156566619873, 0.4487692415714264, 0.43767863512039185, 0.4228283166885376, 0.421774685382843, 0.4226936399936676, 0.4096795916557312, 0.39661937952041626, 0.39657115936279297, 0.38399365544319153, 0.3883403241634369, 0.376536101102829, 0.3752388060092926, 0.3711203336715698, 0.3591638207435608, 0.3582633435726166, 0.34772223234176636, 0.3465126156806946, 0.33887022733688354, 0.33445703983306885, 0.33702659606933594, 0.3259085416793823, 0.3221419155597687, 0.3238893449306488, 0.31895434856414795, 0.3149745464324951, 0.30705884099006653, 0.305652379989624, 0.29539602994918823, 0.2945796847343445, 0.29510363936424255, 0.2830475866794586, 0.2839021384716034, 0.27430838346481323, 0.2769937813282013, 0.27569717168807983, 0.27072271704673767, 0.26561814546585083, 0.25753819942474365, 0.2585400640964508], "accuracy": [0.2747325301170349, 0.49029189348220825, 0.5740324854850769, 0.6172236204147339, 0.6609430909156799, 0.7046625018119812, 0.7149649858474731, 0.7375511527061462, 0.7432307600975037, 0.7600052952766418, 0.7667415142059326, 0.7741381525993347, 0.7773081660270691, 0.7820631265640259, 0.7926297783851624, 0.7977809906005859, 0.8014793395996094, 0.8087438941001892, 0.8113855719566345, 0.817461371421814, 0.8220842480659485, 0.8274996876716614, 0.8249900937080383, 0.8334434032440186, 0.8352925777435303, 0.8334434032440186, 0.8335754871368408, 0.8438779711723328, 0.8487650156021118, 0.8466516733169556, 0.8481045961380005, 0.8557654023170471, 0.8578787446022034, 0.8599920868873596, 0.8643507957458496, 0.863029956817627, 0.8651432991027832, 0.8615770936012268, 0.8668603897094727, 0.8710870146751404, 0.869502067565918, 0.8717474341392517, 0.8787478804588318, 0.8787478804588318, 0.8816536664962769, 0.8770307898521423, 0.8856161832809448, 0.8838990926742554, 0.8848236799240112, 0.8865407705307007, 0.8849557638168335, 0.889578640460968, 0.8942015767097473, 0.8923524022102356, 0.8934090733528137, 0.8945978283882141, 0.9014661312103271, 0.9013340473175049, 0.8993527889251709, 0.8988244533538818, 0.9031832218170166, 0.9014661312103271, 0.90423983335495, 0.9050323367118835, 0.9049002528190613], "val_loss": [2.036595106124878, 1.507120966911316, 1.0393085479736328, 0.8335813879966736, 0.749714195728302, 0.688569962978363, 0.6452030539512634, 0.6106142401695251, 0.5864529609680176, 0.563779354095459, 0.5472380518913269, 0.5369229912757874, 0.5354745984077454, 0.5075516700744629, 0.4997088611125946, 0.4832105338573456, 0.48453351855278015, 0.47257235646247864, 0.45924901962280273, 0.4510140120983124, 0.4456655979156494, 0.44277241826057434, 0.43741992115974426, 0.4367618262767792, 0.42759010195732117, 0.4311088025569916, 0.4189026653766632, 0.41505762934684753, 0.4072496294975281, 0.41149917244911194, 0.40176236629486084, 0.40043172240257263, 0.39783942699432373, 0.39048290252685547, 0.39047756791114807, 0.3899695575237274, 0.38520246744155884, 0.3804226517677307, 0.37834298610687256, 0.37629345059394836, 0.37388932704925537, 0.3753979802131653, 0.36818045377731323, 0.36936119198799133, 0.36481159925460815, 0.3657616078853607, 0.36345890164375305, 0.3575228750705719, 0.3591482639312744, 0.3591900169849396, 0.3583745062351227, 0.35726284980773926, 0.35190829634666443, 0.3542689085006714, 0.3495643734931946, 0.35391080379486084, 0.3467477262020111, 0.3496500551700592, 0.3441007435321808, 0.3416630029678345, 0.3521728217601776, 0.34678003191947937, 0.3400001525878906, 0.34901073575019836, 0.3381182551383972], "val_accuracy": [0.5329999923706055, 0.6596666574478149, 0.6990000009536743, 0.7223333120346069, 0.7379999756813049, 0.762666642665863, 0.7726666927337646, 0.781000018119812, 0.7879999876022339, 0.7986666560173035, 0.8056666851043701, 0.8033333420753479, 0.8013333082199097, 0.8213333487510681, 0.8196666836738586, 0.828000009059906, 0.8223333358764648, 0.8286666870117188, 0.8360000252723694, 0.8413333296775818, 0.8446666598320007, 0.8403333425521851, 0.8483333587646484, 0.8443333506584167, 0.8506666421890259, 0.8383333086967468, 0.8483333587646484, 0.8513333201408386, 0.8576666712760925, 0.8516666889190674, 0.8533333539962769, 0.8576666712760925, 0.8556666374206543, 0.8619999885559082, 0.862333357334137, 0.8613333106040955, 0.8613333106040955, 0.8629999756813049, 0.8659999966621399, 0.8646666407585144, 0.8686666488647461, 0.8659999966621399, 0.8676666617393494, 0.8686666488647461, 0.8686666488647461, 0.8703333139419556, 0.8730000257492065, 0.8773333430290222, 0.8743333220481873, 0.8776666522026062, 0.8743333220481873, 0.8733333349227905, 0.8763333559036255, 0.8740000128746033, 0.878000020980835, 0.878333330154419, 0.8769999742507935, 0.8793333172798157, 0.8816666603088379, 0.8843333125114441, 0.8756666779518127, 0.8809999823570251, 0.8826666474342346, 0.8813333511352539, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 42], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 1, 5], [3, 2, 3, 3], [16, 32], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11485714465379715, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [696801669677056.0, 795911529693184.0, 805592050434048.0, 799642245660672.0, 775545801408512.0, 778167342071808.0], "accuracy": [0.10698718577623367, 0.11174217611551285, 0.11042134463787079, 0.10011887550354004, 0.10579843819141388, 0.10910051316022873], "val_loss": [466045559111680.0, 466045592666112.0, 466045559111680.0, 466045492002816.0, 466045492002816.0, 466045492002816.0], "val_accuracy": [0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 3, 0, 5, 4, 7, 9], [0, 2, 0, 3, 0, 5], [16, 16, 18, 76], [1, 1], [0], [0], [99], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 17, 11, 6, 4, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.negative(tf.math.square(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035764694213867, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 6, 5], [0, 2, 0, 3, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 9, 4, 6, 8], [0, 0, 0, 3, 0, 3, 3, 2, 2, 0], [16, 99, 96, 68, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 8, 6, 2, 2, 1, 1, 1, 12, 8, 4, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303718090057373, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 6], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1, 9], [0, 2, 3, 3, 3], [29, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8, 3, 6, 2, 6, 2, 5, 9, 3, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 3, 1, 0], [16, 99, 20, 99, 17, 1, 45, 44, 39]], "fitness": -0.09542857110500336, "mapping_values": [1, 9, 5, 4, 3, 13, 8, 5, 2, 2, 1, 1, 1, 34, 20, 14, 9], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad))), sigma))), alpha), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3093135356903076, 2.3107471466064453, 2.3092095851898193, 2.3098340034484863, 2.3110742568969727, 2.309892177581787, 2.3101556301116943, 2.3107106685638428], "accuracy": [0.09774138033390045, 0.09074098616838455, 0.09496764093637466, 0.0944393053650856, 0.0878351628780365, 0.09430722147226334, 0.09311848133802414, 0.09377889335155487], "val_loss": [2.308114767074585, 2.3080978393554688, 2.3080947399139404, 2.308091878890991, 2.3080899715423584, 2.308089017868042, 2.3080883026123047, 2.3080878257751465], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]