[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8677142858505249, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2212469577789307, 1.861405849456787, 1.3791091442108154, 1.0874173641204834, 0.9358502626419067, 0.8294820189476013, 0.7711945176124573, 0.7226297855377197, 0.6901322603225708, 0.6625641584396362, 0.6331338882446289, 0.6100330948829651, 0.5896748900413513, 0.5745038390159607, 0.5611073970794678, 0.5445906519889832, 0.5303376317024231, 0.518204391002655, 0.5115517973899841, 0.4978378415107727, 0.4835374355316162, 0.47273293137550354, 0.4662123918533325, 0.46306678652763367, 0.4447577893733978, 0.4391303062438965, 0.42733460664749146, 0.423017680644989, 0.42242923378944397, 0.4152115285396576, 0.408481240272522, 0.40751609206199646, 0.39356276392936707, 0.3845926523208618, 0.3835890591144562, 0.3770599663257599, 0.37025803327560425, 0.36325693130493164, 0.3548058569431305, 0.34975847601890564, 0.34606748819351196, 0.3418528735637665, 0.3351394534111023, 0.3348567485809326, 0.33195069432258606, 0.32556581497192383, 0.3177672326564789, 0.3163047134876251, 0.31397464871406555, 0.31057730317115784, 0.3021748960018158, 0.3011619746685028, 0.3007568120956421, 0.2971491813659668, 0.2893836498260498, 0.2889197766780853, 0.28539779782295227, 0.27942517399787903, 0.27432093024253845, 0.2647828757762909, 0.26461437344551086, 0.2598317563533783, 0.261529803276062, 0.26011261343955994, 0.2517149746417999, 0.2520989179611206, 0.2512170970439911, 0.24115702509880066, 0.23766998946666718, 0.23550467193126678, 0.2347036600112915, 0.22966556251049042, 0.22428269684314728, 0.21789808571338654, 0.21794141829013824, 0.2131088227033615, 0.20984677970409393, 0.20576973259449005, 0.20497122406959534, 0.2024395763874054, 0.20036236941814423, 0.20285789668560028, 0.19206905364990234], "accuracy": [0.28926166892051697, 0.49887728691101074, 0.5695416927337646, 0.6152423620223999, 0.6627922058105469, 0.698718786239624, 0.717870831489563, 0.7372870445251465, 0.750231146812439, 0.750231146812439, 0.7671377658843994, 0.776251494884491, 0.7814027070999146, 0.7917051911354065, 0.7911768555641174, 0.7998943328857422, 0.8068947196006775, 0.8084797263145447, 0.8105930685997009, 0.817461371421814, 0.8257825970649719, 0.8267071843147278, 0.8337075710296631, 0.828820526599884, 0.8367455005645752, 0.8391229510307312, 0.8446704745292664, 0.8441421389579773, 0.8441421389579773, 0.8485008478164673, 0.8502179384231567, 0.8473120927810669, 0.8565579056739807, 0.8555012345314026, 0.8605204224586487, 0.8628978729248047, 0.8661999702453613, 0.8689737319946289, 0.8717474341392517, 0.8714832663536072, 0.8739928603172302, 0.8758420348167419, 0.8767666220664978, 0.8809932470321655, 0.8809932470321655, 0.8819178342819214, 0.8824461698532104, 0.8864086866378784, 0.8835028409957886, 0.8877294659614563, 0.8916919827461243, 0.8908994793891907, 0.8906353116035461, 0.8898428082466125, 0.8944657444953918, 0.8945978283882141, 0.8973715305328369, 0.8985602855682373, 0.8997490406036377, 0.9060890078544617, 0.9013340473175049, 0.904768168926239, 0.9017302989959717, 0.9039757251739502, 0.9091269373893738, 0.9043719172477722, 0.9043719172477722, 0.9120327830314636, 0.9111081957817078, 0.91559898853302, 0.9158631563186646, 0.9208822846412659, 0.9158631563186646, 0.9220710396766663, 0.9204860925674438, 0.9223352074623108, 0.9222031235694885, 0.9252410531044006, 0.9251089692115784, 0.9280148148536682, 0.9277506470680237, 0.928411066532135, 0.9288073182106018], "val_loss": [2.0322329998016357, 1.504381537437439, 1.0417128801345825, 0.840036928653717, 0.7528534531593323, 0.6952124238014221, 0.6540921330451965, 0.6225975155830383, 0.5931162238121033, 0.5737729668617249, 0.5596764087677002, 0.5440109968185425, 0.5241315364837646, 0.5143831372261047, 0.5039968490600586, 0.49628567695617676, 0.4849327504634857, 0.47808659076690674, 0.46705958247184753, 0.46008536219596863, 0.4586130380630493, 0.45042216777801514, 0.44274991750717163, 0.4369325637817383, 0.4299846887588501, 0.423229455947876, 0.4193362295627594, 0.41663703322410583, 0.4099976718425751, 0.4104399085044861, 0.4067099690437317, 0.4061218202114105, 0.40087035298347473, 0.40095528960227966, 0.3945901691913605, 0.3922516405582428, 0.3888605237007141, 0.3869875371456146, 0.38330209255218506, 0.38118675351142883, 0.3826555907726288, 0.37584754824638367, 0.3750920295715332, 0.3740695118904114, 0.3729468882083893, 0.3696326017379761, 0.36665576696395874, 0.36914053559303284, 0.3676680624485016, 0.3657014071941376, 0.36178508400917053, 0.3629457950592041, 0.36227115988731384, 0.35999828577041626, 0.3582339584827423, 0.36229801177978516, 0.3560636341571808, 0.3577604293823242, 0.3538808226585388, 0.35259753465652466, 0.3522515594959259, 0.3492334485054016, 0.3557920455932617, 0.35343965888023376, 0.3505514860153198, 0.35705286264419556, 0.35287851095199585, 0.35018086433410645, 0.350038081407547, 0.35106030106544495, 0.34968844056129456, 0.34582194685935974, 0.34791022539138794, 0.34834420680999756, 0.34598881006240845, 0.3516370356082916, 0.34687793254852295, 0.3487890660762787, 0.3526892066001892, 0.3507446348667145, 0.35696524381637573, 0.3531436324119568, 0.3557897210121155], "val_accuracy": [0.5476666688919067, 0.6549999713897705, 0.6866666674613953, 0.6973333358764648, 0.7273333072662354, 0.7456666827201843, 0.7593333125114441, 0.7703333497047424, 0.7786666750907898, 0.7863333225250244, 0.79666668176651, 0.8046666383743286, 0.8043333292007446, 0.8033333420753479, 0.8163333535194397, 0.8183333277702332, 0.8230000138282776, 0.8306666612625122, 0.8326666951179504, 0.8370000123977661, 0.8363333344459534, 0.8370000123977661, 0.8413333296775818, 0.8420000076293945, 0.8503333330154419, 0.8486666679382324, 0.8479999899864197, 0.8536666631698608, 0.8576666712760925, 0.8556666374206543, 0.859333336353302, 0.856333315372467, 0.8573333621025085, 0.8600000143051147, 0.862666666507721, 0.8619999885559082, 0.8613333106040955, 0.8663333058357239, 0.8643333315849304, 0.8679999709129333, 0.8669999837875366, 0.8726666569709778, 0.8653333187103271, 0.8679999709129333, 0.8669999837875366, 0.8740000128746033, 0.8733333349227905, 0.8713333606719971, 0.8756666779518127, 0.8736666440963745, 0.871999979019165, 0.8740000128746033, 0.8733333349227905, 0.8766666650772095, 0.8776666522026062, 0.8766666650772095, 0.8796666860580444, 0.8769999742507935, 0.8793333172798157, 0.8776666522026062, 0.8793333172798157, 0.8803333044052124, 0.8730000257492065, 0.8786666393280029, 0.8816666603088379, 0.8763333559036255, 0.8790000081062317, 0.8820000290870667, 0.8806666731834412, 0.8799999952316284, 0.8833333253860474, 0.8803333044052124, 0.8823333382606506, 0.8849999904632568, 0.8833333253860474, 0.8856666684150696, 0.8836666941642761, 0.8880000114440918, 0.8853333592414856, 0.8853333592414856, 0.8823333382606506, 0.8846666812896729, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 3, 9, 3], [0, 1, 0, 2], [39, 12, 57], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 0], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035597801208496, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 9], [0, 1, 0, 2], [39, 39, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 46], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 6, 4, 6], [0, 4, 0, 3, 0, 1, 3, 1, 2, 0, 7, 2, 5], [16, 99, 64, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 6, 4, 2, 1, 2, 1, 1, 1, 28, 15, 13, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(sigma)))), tf.math.divide_no_nan(alpha, beta))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 9, 6, 4, 6, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 11, 7, 4, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [2.309943437576294, 2.3766939640045166, 3.0453052520751953, 6.1595330238342285, 14.558892250061035, 32.36936950683594], "accuracy": [0.09826971590518951, 0.10157178342342377, 0.1010434553027153, 0.10117553919553757, 0.09826971590518951, 0.10051512718200684], "val_loss": [2.3107900619506836, 2.4187819957733154, 3.451720714569092, 7.724076747894287, 17.85904884338379, 38.265750885009766], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [1, 7], [0, 1, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 2, 5, 2, 3, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]