[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22562313079834, 1.876157522201538, 1.3963372707366943, 1.1111441850662231, 0.9576790928840637, 0.853577196598053, 0.7888612151145935, 0.7426257133483887, 0.6951513290405273, 0.6749981641769409, 0.6611661911010742, 0.6273132562637329, 0.6068060994148254, 0.5906648635864258, 0.5693689584732056, 0.5550481081008911, 0.5445879101753235, 0.5310322046279907, 0.5210474133491516, 0.5164005160331726, 0.49646130204200745, 0.4919174611568451, 0.4797682762145996, 0.4735848307609558, 0.4653313457965851, 0.4643957018852234, 0.4472334682941437, 0.43908900022506714, 0.43500036001205444, 0.4207039177417755, 0.4237775206565857, 0.4145660102367401, 0.4104018211364746, 0.4041537344455719, 0.3890213072299957, 0.38980475068092346, 0.3818109929561615, 0.38874489068984985, 0.3767663836479187, 0.37396374344825745, 0.3684181869029999, 0.35767489671707153, 0.35966721177101135, 0.35202911496162415, 0.3468276560306549, 0.34511032700538635, 0.33840274810791016, 0.33246365189552307, 0.3243575394153595, 0.31719690561294556, 0.3125794231891632, 0.31298235058784485, 0.3128596544265747, 0.3070214092731476, 0.3047092854976654, 0.29580962657928467, 0.2894304096698761, 0.29376140236854553, 0.2948422431945801, 0.28002211451530457, 0.27320998907089233, 0.274194598197937, 0.2661646604537964, 0.2661043703556061, 0.2636011242866516, 0.2627207636833191, 0.25846290588378906, 0.24726271629333496, 0.24840283393859863, 0.2395353615283966, 0.2371830940246582, 0.23790140450000763, 0.23980234563350677, 0.23052480816841125, 0.22878524661064148, 0.22289110720157623, 0.21671797335147858, 0.22154249250888824, 0.2165793478488922, 0.2151697874069214, 0.20717120170593262, 0.21072207391262054, 0.20179146528244019, 0.2071753293275833, 0.20314694941043854, 0.196754589676857, 0.19467656314373016, 0.18904949724674225, 0.19359543919563293, 0.1813226044178009, 0.1848313808441162], "accuracy": [0.2639017403125763, 0.4827631711959839, 0.5605600476264954, 0.6107515692710876, 0.6583014130592346, 0.7004358768463135, 0.7182670831680298, 0.7290979027748108, 0.741909921169281, 0.752212405204773, 0.7609298825263977, 0.7696473598480225, 0.7738739848136902, 0.7828556299209595, 0.796328067779541, 0.7987055778503418, 0.8025360107421875, 0.8109893202781677, 0.8145555257797241, 0.8128384351730347, 0.824329674243927, 0.821820080280304, 0.8315942287445068, 0.8310658931732178, 0.8364813327789307, 0.8363492488861084, 0.841500461101532, 0.8448025584220886, 0.8444063067436218, 0.8448025584220886, 0.8495575189590454, 0.8469158411026001, 0.8521991968154907, 0.8531237840652466, 0.8628978729248047, 0.8623695969581604, 0.8615770936012268, 0.8590674996376038, 0.8643507957458496, 0.8664641380310059, 0.8669924736022949, 0.8681812286376953, 0.8730682730674744, 0.8720116019248962, 0.8758420348167419, 0.8757099509239197, 0.878879964351654, 0.8796724081039429, 0.8825782537460327, 0.8869370222091675, 0.8883898854255676, 0.8883898854255676, 0.8862766027450562, 0.8883898854255676, 0.8916919827461243, 0.8944657444953918, 0.8965790271759033, 0.8961827754974365, 0.8908994793891907, 0.8993527889251709, 0.902390718460083, 0.8988244533538818, 0.9046360850334167, 0.9062210917472839, 0.901862382888794, 0.9056927561759949, 0.9058248400688171, 0.9080702662467957, 0.910711944103241, 0.91559898853302, 0.9159952402114868, 0.915070652961731, 0.9099194407463074, 0.9178444147109985, 0.9187690019607544, 0.917580246925354, 0.9236560463905334, 0.921938955783844, 0.9249768853187561, 0.9236560463905334, 0.9260335564613342, 0.9248448014259338, 0.9266939759254456, 0.9235239624977112, 0.9247127175331116, 0.9276185631752014, 0.9289394021034241, 0.9330339431762695, 0.9303922653198242, 0.9385814070701599, 0.9321093559265137], "val_loss": [2.04183030128479, 1.525821328163147, 1.047408103942871, 0.8370717763900757, 0.7541303634643555, 0.6949331164360046, 0.6461296081542969, 0.6142516136169434, 0.5851765871047974, 0.562046468257904, 0.5554736852645874, 0.5325107574462891, 0.5173629522323608, 0.5077739953994751, 0.4967007637023926, 0.4861617982387543, 0.4815399646759033, 0.4770524501800537, 0.4623780846595764, 0.45859652757644653, 0.45477327704429626, 0.44524121284484863, 0.4441715180873871, 0.4371584355831146, 0.43225184082984924, 0.4286381006240845, 0.4237467050552368, 0.417930006980896, 0.4179026782512665, 0.4139941334724426, 0.41695353388786316, 0.4144720137119293, 0.4015287756919861, 0.39682549238204956, 0.39655521512031555, 0.40123066306114197, 0.3981451690196991, 0.3891768753528595, 0.3934852182865143, 0.38703709840774536, 0.38053393363952637, 0.38407304883003235, 0.3848485052585602, 0.37676265835762024, 0.37271565198898315, 0.3751038908958435, 0.3700406849384308, 0.3711662292480469, 0.37088045477867126, 0.366143137216568, 0.3644128143787384, 0.3684753477573395, 0.36544832587242126, 0.36569684743881226, 0.36075660586357117, 0.36159050464630127, 0.35807469487190247, 0.3535964787006378, 0.35997945070266724, 0.352049320936203, 0.35238513350486755, 0.35647591948509216, 0.3549060523509979, 0.35266900062561035, 0.3472863733768463, 0.35390591621398926, 0.3458729684352875, 0.34846287965774536, 0.34830325841903687, 0.3446120619773865, 0.3440413475036621, 0.34920886158943176, 0.3465125262737274, 0.34467652440071106, 0.34311166405677795, 0.3481692373752594, 0.34864354133605957, 0.34321948885917664, 0.3420138657093048, 0.3447946310043335, 0.34020766615867615, 0.34419772028923035, 0.34528377652168274, 0.3438076972961426, 0.34766334295272827, 0.3421812355518341, 0.33998310565948486, 0.347432017326355, 0.3443884253501892, 0.34399548172950745, 0.34457096457481384], "val_accuracy": [0.5486666560173035, 0.6499999761581421, 0.6816666722297668, 0.7076666951179504, 0.7323333621025085, 0.7443333268165588, 0.7620000243186951, 0.7763333320617676, 0.7856666445732117, 0.7960000038146973, 0.800000011920929, 0.8053333163261414, 0.812333345413208, 0.8166666626930237, 0.8190000057220459, 0.824999988079071, 0.8276666402816772, 0.8306666612625122, 0.8336666822433472, 0.8349999785423279, 0.8376666903495789, 0.8410000205039978, 0.8379999995231628, 0.8456666469573975, 0.8463333249092102, 0.8510000109672546, 0.8486666679382324, 0.8560000061988831, 0.8529999852180481, 0.8516666889190674, 0.8456666469573975, 0.8510000109672546, 0.8579999804496765, 0.8586666584014893, 0.8616666793823242, 0.8543333411216736, 0.8586666584014893, 0.8633333444595337, 0.8560000061988831, 0.8640000224113464, 0.8643333315849304, 0.8646666407585144, 0.862666666507721, 0.8673333525657654, 0.8666666746139526, 0.8613333106040955, 0.8666666746139526, 0.8653333187103271, 0.8679999709129333, 0.8669999837875366, 0.8700000047683716, 0.8700000047683716, 0.8663333058357239, 0.8673333525657654, 0.8713333606719971, 0.8700000047683716, 0.8736666440963745, 0.8730000257492065, 0.8709999918937683, 0.8733333349227905, 0.8763333559036255, 0.8759999871253967, 0.8726666569709778, 0.8759999871253967, 0.8769999742507935, 0.875333309173584, 0.8786666393280029, 0.8776666522026062, 0.8763333559036255, 0.8823333382606506, 0.8809999823570251, 0.878000020980835, 0.8790000081062317, 0.8826666474342346, 0.8823333382606506, 0.8820000290870667, 0.8803333044052124, 0.8840000033378601, 0.8823333382606506, 0.8840000033378601, 0.8853333592414856, 0.8836666941642761, 0.8833333253860474, 0.8816666603088379, 0.8836666941642761, 0.8880000114440918, 0.8849999904632568, 0.8820000290870667, 0.8856666684150696, 0.8880000114440918, 0.8863333463668823]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 3, 3, 0, 3, 5, 4, 7, 1, 8, 5, 2, 9, 0, 7], [0, 2, 0, 3, 3, 0, 1, 3], [16, 16, 44, 5], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 2, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 90, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 23, 15, 8, 4, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.square(grad)), grad), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303265333175659, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 2, 21, 1, 61, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 1, 1, 0, 1, 22, 12, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.subtract(alpha, beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 96, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.negative(alpha)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 6, 1, 5, 7, 1, 8, 5], [0, 2, 3, 3, 0, 5, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 3, 0, 4, 1, 2, 1, 8], [0, 4, 0, 3, 4, 0, 3, 1, 2, 0], [38, 99, 96, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 17, 10, 7, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.subtract(grad, tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(tf.math.sqrt(beta), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]