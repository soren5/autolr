[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222667932510376, 1.8631197214126587, 1.393702507019043, 1.094687581062317, 0.9348174333572388, 0.8386731147766113, 0.7691013216972351, 0.7239571213722229, 0.6866989731788635, 0.6462340950965881, 0.6280477046966553, 0.6070332527160645, 0.588453471660614, 0.5647639632225037, 0.5593647956848145, 0.5467050075531006, 0.5297507643699646, 0.5189651846885681, 0.5018171668052673, 0.49368470907211304, 0.4818846881389618, 0.4685176610946655, 0.4561882019042969, 0.45758724212646484, 0.44657376408576965, 0.4403742253780365, 0.4236154556274414, 0.4184773862361908, 0.4136806130409241, 0.40458568930625916, 0.39995789527893066, 0.39202436804771423, 0.38623806834220886, 0.38352927565574646, 0.38013744354248047, 0.36286911368370056, 0.3695380687713623, 0.36488935351371765, 0.356396347284317, 0.3479313850402832, 0.33980876207351685, 0.34165772795677185, 0.33451756834983826, 0.3394148051738739, 0.3351275324821472, 0.321023166179657, 0.3168545067310333, 0.3134213984012604, 0.3094044625759125, 0.3049255311489105, 0.2973189651966095, 0.29968297481536865, 0.2880488336086273, 0.28432902693748474, 0.2848358452320099, 0.28047508001327515, 0.27410727739334106, 0.27510976791381836, 0.2666960656642914, 0.26653769612312317, 0.2683820426464081, 0.25640836358070374, 0.2524901032447815, 0.2468254566192627, 0.24891993403434753, 0.2407458871603012, 0.24251317977905273], "accuracy": [0.27882710099220276, 0.49610355496406555, 0.5630695819854736, 0.6173557043075562, 0.6642451286315918, 0.7014925479888916, 0.7238145470619202, 0.7386078238487244, 0.7518161535263062, 0.7693831920623779, 0.7718927264213562, 0.7796856164932251, 0.7839123010635376, 0.7968564033508301, 0.8021397590637207, 0.8043851256370544, 0.8157442808151245, 0.8170651197433472, 0.8228767514228821, 0.8274996876716614, 0.8317263126373291, 0.8356888294219971, 0.8389908671379089, 0.8392550349235535, 0.8430854678153992, 0.8494254350662231, 0.8527275323867798, 0.8535200357437134, 0.8561616539955139, 0.8582749962806702, 0.8562937378883362, 0.8602562546730042, 0.8681812286376953, 0.8677849769592285, 0.8693699836730957, 0.8726720213890076, 0.8691058158874512, 0.8708229064941406, 0.8749174475669861, 0.8791441321372986, 0.8780874609947205, 0.8792761564254761, 0.8809932470321655, 0.8808611631393433, 0.884691596031189, 0.889050304889679, 0.887597382068634, 0.889578640460968, 0.8865407705307007, 0.8901069760322571, 0.8975036144256592, 0.8919561505317688, 0.8957865834236145, 0.8994848728179932, 0.896446943283081, 0.9000132083892822, 0.9002773761749268, 0.8993527889251709, 0.90423983335495, 0.9035794734954834, 0.9062210917472839, 0.9095231890678406, 0.9083344340324402, 0.9145423173904419, 0.9111081957817078, 0.9099194407463074, 0.9129573106765747], "val_loss": [2.036468505859375, 1.5087473392486572, 1.0349658727645874, 0.8243247270584106, 0.7318592667579651, 0.6726160049438477, 0.6284343004226685, 0.599754810333252, 0.5658608675003052, 0.5504279136657715, 0.5364627242088318, 0.5202727317810059, 0.5058152675628662, 0.493319571018219, 0.48158755898475647, 0.474770724773407, 0.4671604037284851, 0.4635452926158905, 0.45101091265678406, 0.44062548875808716, 0.43468213081359863, 0.4283161759376526, 0.42683708667755127, 0.4223406910896301, 0.4138661324977875, 0.4089638590812683, 0.4082218408584595, 0.4001717269420624, 0.3956407606601715, 0.3926697075366974, 0.3936771750450134, 0.38846898078918457, 0.38445496559143066, 0.3841700851917267, 0.3779110908508301, 0.37728869915008545, 0.3761468231678009, 0.3696279227733612, 0.36831527948379517, 0.36935243010520935, 0.36504989862442017, 0.36475297808647156, 0.36078423261642456, 0.36358776688575745, 0.3580789864063263, 0.35825231671333313, 0.354702889919281, 0.354471892118454, 0.35063207149505615, 0.3505100607872009, 0.35184207558631897, 0.3476082682609558, 0.3471349775791168, 0.34753429889678955, 0.3505023717880249, 0.34439966082572937, 0.3402901589870453, 0.34785106778144836, 0.3441939353942871, 0.3437004089355469, 0.33911657333374023, 0.3390233516693115, 0.340842068195343, 0.33715930581092834, 0.34030231833457947, 0.33856382966041565, 0.3390428423881531], "val_accuracy": [0.515999972820282, 0.6503333449363708, 0.6793333292007446, 0.7116666436195374, 0.7400000095367432, 0.7583333253860474, 0.7683333158493042, 0.7739999890327454, 0.7886666655540466, 0.7993333339691162, 0.7986666560173035, 0.8053333163261414, 0.812666654586792, 0.812333345413208, 0.8193333148956299, 0.8230000138282776, 0.8330000042915344, 0.8316666483879089, 0.8383333086967468, 0.8450000286102295, 0.8489999771118164, 0.8479999899864197, 0.8460000157356262, 0.846666693687439, 0.8513333201408386, 0.8510000109672546, 0.8523333072662354, 0.8566666841506958, 0.856333315372467, 0.8546666502952576, 0.8583333492279053, 0.8566666841506958, 0.8569999933242798, 0.856333315372467, 0.8600000143051147, 0.8603333234786987, 0.8606666922569275, 0.8629999756813049, 0.8616666793823242, 0.8636666536331177, 0.8669999837875366, 0.8659999966621399, 0.8683333396911621, 0.8696666955947876, 0.8686666488647461, 0.8690000176429749, 0.8683333396911621, 0.8686666488647461, 0.871999979019165, 0.8700000047683716, 0.8679999709129333, 0.8730000257492065, 0.8736666440963745, 0.8690000176429749, 0.8696666955947876, 0.875333309173584, 0.875333309173584, 0.8726666569709778, 0.8730000257492065, 0.875, 0.878000020980835, 0.8796666860580444, 0.878333330154419, 0.8796666860580444, 0.8790000081062317, 0.8796666860580444, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 0, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [4, 3, 3, 0, 0, 1, 4, 3, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 13]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 6, 4, 2, 1, 6, 4, 2, 1, 2, 1, 1, 1, 5, 2, 3, 2], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 3, 2, 3, 5], [3, 2, 0, 3, 5, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 8, 2, 8], [0, 1, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 43, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 12, 6, 6, 1, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(grad, beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(beta, sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [0, 2, 2, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 8, 2, 8], [4, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 78]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 11, 6, 5, 1, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.064898147584564e+27, 381.1625061035156, 433.95159912109375, 460.17205810546875, 344.51458740234375, 349.5970153808594, 373.0640869140625], "accuracy": [0.09932637959718704, 0.10051512718200684, 0.09536388516426086, 0.09509972482919693, 0.1006472036242485, 0.09325055778026581, 0.10593052208423615], "val_loss": [522.4323120117188, 431.7188720703125, 265.13604736328125, 123.53096008300781, 658.2574462890625, 545.4252319335938, 401.197998046875], "val_accuracy": [0.1003333330154419, 0.10266666859388351, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 5, 8], [0, 1, 0, 2], [58, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 3, 2, 6, 2, 1, 4, 1, 4, 2, 8, 6, 7, 7, 6, 1, 3, 6, 7, 7, 2, 3, 4, 3, 0, 5, 5, 9, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 3, 7, 7, 7, 3, 6, 6, 3, 5, 1, 1, 0], [16, 99, 96, 99, 61, 1, 17, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 52, 29, 23, 8], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)))), tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, sigma)), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.divide_no_nan(grad, sigma))))), tf.math.add(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.pow(grad, sigma), tf.math.multiply(tf.math.negative(grad), alpha))), alpha), tf.math.square(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]