[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222689628601074, 1.8612892627716064, 1.3788694143295288, 1.0754168033599854, 0.9332498908042908, 0.8306748270988464, 0.7727766633033752, 0.7236334681510925, 0.6836447715759277, 0.664573073387146, 0.6427599787712097, 0.6098984479904175, 0.5901373028755188, 0.5790186524391174, 0.5618041753768921, 0.5477533936500549, 0.5367671251296997, 0.5129815936088562, 0.5090743899345398, 0.5036681294441223, 0.48810628056526184, 0.47571617364883423, 0.4699115753173828, 0.4631437659263611, 0.4559551775455475, 0.4408099949359894, 0.4349174201488495, 0.4318917393684387, 0.4218749701976776, 0.40334898233413696, 0.4064182639122009, 0.4096747040748596, 0.3924620747566223, 0.3896828889846802, 0.3869484066963196, 0.3814905881881714, 0.37452781200408936, 0.3703206777572632, 0.36239439249038696, 0.35432133078575134, 0.3525516092777252, 0.3399280309677124, 0.33569368720054626, 0.33049634099006653, 0.32892102003097534, 0.319805771112442, 0.3232371509075165, 0.3160027265548706, 0.30903878808021545, 0.3070383071899414, 0.2901475131511688, 0.2957350015640259, 0.29191353917121887, 0.2901546359062195, 0.28061938285827637, 0.2835924029350281, 0.2831246256828308, 0.2726549208164215, 0.27117812633514404, 0.26381778717041016, 0.2584460973739624, 0.2574091851711273, 0.255683034658432, 0.2504732012748718], "accuracy": [0.2759212851524353, 0.4904239773750305, 0.5649187564849854, 0.6258090138435364, 0.6670188903808594, 0.698718786239624, 0.7223616242408752, 0.7390040755271912, 0.7528728246688843, 0.7597411274909973, 0.7666094303131104, 0.7796856164932251, 0.7832518815994263, 0.7841764688491821, 0.7991018295288086, 0.8016114234924316, 0.8042530417442322, 0.8146876096725464, 0.8183859586715698, 0.8234050869941711, 0.8208954930305481, 0.8315942287445068, 0.8314621448516846, 0.8352925777435303, 0.8364813327789307, 0.8405758738517761, 0.8457271456718445, 0.8426892161369324, 0.850350022315979, 0.8551049828529358, 0.8485008478164673, 0.8512746095657349, 0.8577466607093811, 0.8585391640663147, 0.8613129258155823, 0.8634262084960938, 0.8654074668884277, 0.8650112152099609, 0.869502067565918, 0.8702945709228516, 0.8758420348167419, 0.8765024542808533, 0.8804649114608765, 0.8813894987106323, 0.8817857503890991, 0.8861445188522339, 0.8831065893173218, 0.8856161832809448, 0.8894465565681458, 0.8924844861030579, 0.895918607711792, 0.8943336606025696, 0.8969752788543701, 0.8957865834236145, 0.897899866104126, 0.897899866104126, 0.8992207050323486, 0.8992207050323486, 0.9025228023529053, 0.9060890078544617, 0.9085986018180847, 0.906749427318573, 0.9071456789970398, 0.9084665179252625], "val_loss": [2.0352141857147217, 1.5048439502716064, 1.0301909446716309, 0.8318283557891846, 0.7441462278366089, 0.6914347410202026, 0.6530473828315735, 0.6188459992408752, 0.5962262153625488, 0.5724994540214539, 0.5586954951286316, 0.540574848651886, 0.5264540314674377, 0.5155425071716309, 0.5087299942970276, 0.4946102797985077, 0.4855711758136749, 0.47628921270370483, 0.4712234437465668, 0.4660051763057709, 0.46030864119529724, 0.4441976249217987, 0.44678449630737305, 0.4327220320701599, 0.42845940589904785, 0.4203398823738098, 0.4200581908226013, 0.4120091199874878, 0.41113919019699097, 0.40780699253082275, 0.40268099308013916, 0.3991304039955139, 0.3924095928668976, 0.3925294578075409, 0.3918291926383972, 0.3899845480918884, 0.3852275311946869, 0.38030385971069336, 0.38239607214927673, 0.3829515874385834, 0.3787304162979126, 0.3691313564777374, 0.3713657259941101, 0.3717605471611023, 0.3669204115867615, 0.3620162904262543, 0.35917460918426514, 0.36118876934051514, 0.35781168937683105, 0.355500727891922, 0.35928604006767273, 0.3573130965232849, 0.35801059007644653, 0.35068026185035706, 0.3491586148738861, 0.3536841571331024, 0.3506132960319519, 0.3528004586696625, 0.34647342562675476, 0.34681788086891174, 0.34519001841545105, 0.3498864471912384, 0.3503754138946533, 0.3452243208885193], "val_accuracy": [0.5230000019073486, 0.6666666865348816, 0.6846666932106018, 0.7096666693687439, 0.7433333396911621, 0.7596666812896729, 0.7616666555404663, 0.7799999713897705, 0.7853333353996277, 0.7910000085830688, 0.8006666898727417, 0.8166666626930237, 0.8209999799728394, 0.8159999847412109, 0.8220000267028809, 0.8323333263397217, 0.8349999785423279, 0.8349999785423279, 0.8383333086967468, 0.8343333601951599, 0.8360000252723694, 0.843666672706604, 0.847000002861023, 0.8510000109672546, 0.8516666889190674, 0.8543333411216736, 0.8543333411216736, 0.8576666712760925, 0.8576666712760925, 0.8569999933242798, 0.8583333492279053, 0.862333357334137, 0.8603333234786987, 0.8640000224113464, 0.8646666407585144, 0.8666666746139526, 0.8656666874885559, 0.871666669845581, 0.8666666746139526, 0.8676666617393494, 0.8653333187103271, 0.875333309173584, 0.871999979019165, 0.8769999742507935, 0.8743333220481873, 0.8773333430290222, 0.8763333559036255, 0.8769999742507935, 0.8809999823570251, 0.8833333253860474, 0.878000020980835, 0.8809999823570251, 0.8790000081062317, 0.8846666812896729, 0.8836666941642761, 0.8799999952316284, 0.8816666603088379, 0.8769999742507935, 0.8880000114440918, 0.8846666812896729, 0.8856666684150696, 0.8813333511352539, 0.8823333382606506, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [55, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 8, 7, 8, 6, 0, 2, 9], [0, 6, 3], [28, 59], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 6, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 23, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 11, 8, 3, 2, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [9, 6, 3, 6, 4, 2, 4, 1, 3, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [79, 99, 96, 99, 14, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303607702255249, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3, 5, 4, 5], [0, 2, 0, 3, 5, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 6, 71, 29, 61, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 2, 2, 1, 1, 1, 17, 9, 8, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))), grad)", "other_info": {"loss": [4.064779901609099e+26, 4.639163550529823e+26, 4.703135752172803e+26, 4.643421796931798e+26, 4.6661961471651996e+26, 4.675722045804863e+26], "accuracy": [0.10579843819141388, 0.10566636174917221, 0.10210011899471283, 0.10685510188341141, 0.10540219396352768, 0.10434553027153015], "val_loss": [3.882867334926212e+26, 3.882867334926212e+26, 3.882867334926212e+26, 3.882867334926212e+26, 3.882867334926212e+26, 3.882867334926212e+26], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0, 6], [0, 1, 0, 2, 0], [39, 38, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 4, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 12, 7, 5, 3, 10, 6, 4, 2, 1, 0, 1, 1, 10, 5, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(sigma, grad), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3113648891448975, 2.3105785846710205, 2.3105180263519287, 2.310591697692871, 2.310553789138794, 2.31083345413208], "accuracy": [0.09166556596755981, 0.08902391046285629, 0.09100515395402908, 0.09034473448991776, 0.09311848133802414, 0.09259014576673508], "val_loss": [2.3098959922790527, 2.310049533843994, 2.3101398944854736, 2.3102047443389893, 2.310255527496338, 2.3102967739105225], "val_accuracy": [0.08866667002439499, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]