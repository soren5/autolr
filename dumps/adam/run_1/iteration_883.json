[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224627733230591, 1.866199016571045, 1.382800579071045, 1.0802702903747559, 0.9365476965904236, 0.8294316530227661, 0.7672215104103088, 0.7195862531661987, 0.6801202893257141, 0.6530799269676208, 0.6336270570755005, 0.5990574955940247, 0.5907230973243713, 0.5603663921356201, 0.5491899847984314, 0.5411624908447266, 0.5264423489570618, 0.5147390961647034, 0.5046712160110474, 0.49442461133003235, 0.48350217938423157, 0.47423461079597473, 0.4718347191810608, 0.46096569299697876, 0.44835299253463745, 0.43494972586631775, 0.43330061435699463, 0.4264903962612152, 0.42094847559928894, 0.41739901900291443, 0.4055630564689636, 0.3975425660610199, 0.39237451553344727, 0.3895552158355713, 0.3823215663433075, 0.3772400915622711, 0.37361031770706177, 0.37417176365852356, 0.3668319880962372, 0.359863817691803, 0.34757199883461, 0.34974566102027893, 0.3365590274333954, 0.3374808430671692, 0.3356311619281769, 0.3290466368198395, 0.32340550422668457, 0.3183117210865021, 0.31768640875816345, 0.31281158328056335, 0.3087707459926605, 0.3015742301940918, 0.303445041179657, 0.2975541949272156, 0.29514965415000916, 0.2974669337272644, 0.28656941652297974, 0.27982786297798157], "accuracy": [0.27644962072372437, 0.49531105160713196, 0.570730447769165, 0.6242240071296692, 0.6641130447387695, 0.7058512568473816, 0.7202483415603638, 0.7368907928466797, 0.7504953145980835, 0.7637035846710205, 0.7685906887054443, 0.7864218950271606, 0.7882710099220276, 0.7987055778503418, 0.8021397590637207, 0.8082155585289001, 0.816008448600769, 0.8138951063156128, 0.8210275769233704, 0.8197067975997925, 0.8304054737091064, 0.8261788487434387, 0.8337075710296631, 0.8347642421722412, 0.8422929644584656, 0.8433496356010437, 0.8445383906364441, 0.8496896028518677, 0.8477083444595337, 0.8485008478164673, 0.8529917001724243, 0.8564258217811584, 0.8617091774940491, 0.8622375130653381, 0.8639545440673828, 0.8656716346740723, 0.8656716346740723, 0.863558292388916, 0.8705587387084961, 0.8730682730674744, 0.8762382864952087, 0.874389111995697, 0.8772949576377869, 0.8796724081039429, 0.8815215826034546, 0.8802007436752319, 0.8858803510665894, 0.8838990926742554, 0.885219931602478, 0.8887861371040344, 0.8891823887825012, 0.8868049383163452, 0.8901069760322571, 0.8936732411384583, 0.8912957310676575, 0.8881257176399231, 0.8989565372467041, 0.8989565372467041], "val_loss": [2.037261724472046, 1.5084871053695679, 1.033848524093628, 0.8250444531440735, 0.7402330040931702, 0.6856878399848938, 0.6411340236663818, 0.605313241481781, 0.5836229920387268, 0.5618466138839722, 0.5465933680534363, 0.5287255644798279, 0.5213742852210999, 0.5125840902328491, 0.4948819875717163, 0.48395052552223206, 0.48385366797447205, 0.4687039256095886, 0.4555225968360901, 0.46011587977409363, 0.44408759474754333, 0.4410667419433594, 0.4366505444049835, 0.42990127205848694, 0.42109134793281555, 0.4158623516559601, 0.4123525321483612, 0.40710750222206116, 0.4067115783691406, 0.3985937535762787, 0.39568814635276794, 0.39979109168052673, 0.39108791947364807, 0.392234206199646, 0.3834611475467682, 0.38083088397979736, 0.3833242952823639, 0.3755764067173004, 0.3734896779060364, 0.367423415184021, 0.36949828267097473, 0.36863088607788086, 0.3690134286880493, 0.35801488161087036, 0.3644815981388092, 0.35797661542892456, 0.35809627175331116, 0.3524894714355469, 0.35785701870918274, 0.35165169835090637, 0.35157665610313416, 0.35204601287841797, 0.34327155351638794, 0.3495033085346222, 0.34763967990875244, 0.34281980991363525, 0.34591028094291687, 0.3430924415588379], "val_accuracy": [0.5396666526794434, 0.6679999828338623, 0.6913333535194397, 0.7089999914169312, 0.7319999933242798, 0.7559999823570251, 0.7633333206176758, 0.7749999761581421, 0.7893333435058594, 0.7906666398048401, 0.8013333082199097, 0.8083333373069763, 0.8149999976158142, 0.8149999976158142, 0.8230000138282776, 0.828000009059906, 0.8289999961853027, 0.831333339214325, 0.8349999785423279, 0.8320000171661377, 0.840666651725769, 0.8379999995231628, 0.8429999947547913, 0.8486666679382324, 0.8489999771118164, 0.8506666421890259, 0.8560000061988831, 0.8513333201408386, 0.8529999852180481, 0.8586666584014893, 0.859666645526886, 0.8536666631698608, 0.8573333621025085, 0.8566666841506958, 0.8606666922569275, 0.8663333058357239, 0.8636666536331177, 0.8666666746139526, 0.8663333058357239, 0.8673333525657654, 0.8679999709129333, 0.8683333396911621, 0.8690000176429749, 0.8730000257492065, 0.871999979019165, 0.871666669845581, 0.8726666569709778, 0.8756666779518127, 0.8736666440963745, 0.8736666440963745, 0.8723333477973938, 0.8740000128746033, 0.878000020980835, 0.8713333606719971, 0.8763333559036255, 0.8759999871253967, 0.8736666440963745, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5, 8], [0, 2, 0, 3, 0], [16, 16, 23], [0, 1], [0], [0], [82], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 5, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.1022857129573822, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3100688457489014, 2.309659481048584, 2.3108744621276855, 2.3108112812042236, 2.3095998764038086, 2.3080148696899414, 2.3092503547668457, 2.3064677715301514, 2.3039913177490234, 2.302621841430664, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09060890227556229, 0.09245806187391281, 0.08598599582910538, 0.0866464152932167, 0.0952318087220192, 0.08902391046285629, 0.08268392831087112, 0.08875974267721176, 0.09126931428909302, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3087379932403564, 2.3087282180786133, 2.308701515197754, 2.308635711669922, 2.3084776401519775, 2.308062791824341, 2.3069896697998047, 2.3046650886535645, 2.3026046752929688, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09000000357627869, 0.09133332967758179, 0.08933333307504654, 0.08133333176374435, 0.06466666609048843, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [2, 2, 3, 5, 3, 5, 8, 0], [0, 2, 0, 3, 2], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 6], [4, 2, 0, 1, 0, 0, 3, 1, 2, 0], [24, 99, 96, 9, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 8, 5, 2, 1, 0, 1, 1, 20, 10, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(alpha, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha))), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [74, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 0, 5], [0, 2, 0, 2], [16, 16], [0, 1, 0], [3, 9], [0], [99, 11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 4, 3, 6, 8, 8, 4, 1, 2, 0, 9], [2, 0, 2, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 3, 2, 1, 2, 18, 11, 7, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(beta, sigma))), tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [6001926.0, 9230449.0, 9238697.0, 9238707.0, 9238704.0, 9238701.0], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [9235289.0, 9268754.0, 9268818.0, 9268814.0, 9268810.0, 9268808.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [39, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 88, 61, 1]], "fitness": -0.09285714477300644, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 12, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [2.3103432655334473, 2.309807538986206, 2.3104071617126465, 2.3097901344299316, 2.310723066329956, 2.3096354007720947], "accuracy": [0.08651433140039444, 0.09430722147226334, 0.08506141602993011, 0.08955223858356476, 0.09087307006120682, 0.09232597798109055], "val_loss": [2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076, 2.308711528778076], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]