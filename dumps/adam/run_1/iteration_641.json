[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216012477874756, 1.8553577661514282, 1.3839247226715088, 1.072348713874817, 0.9192076921463013, 0.8171631693840027, 0.7555263042449951, 0.712088406085968, 0.669306755065918, 0.6466676592826843, 0.6230112314224243, 0.6057998538017273, 0.5856754183769226, 0.5700826644897461, 0.5611662864685059, 0.5416817665100098, 0.5225380659103394, 0.5189056396484375, 0.5192405581474304, 0.4939453899860382, 0.48440277576446533, 0.4842720925807953, 0.46845272183418274, 0.46201229095458984, 0.44988617300987244, 0.4406367540359497, 0.43285542726516724, 0.426682710647583, 0.4216991662979126, 0.41289839148521423, 0.395073801279068, 0.3980015814304352, 0.38770800828933716, 0.39089497923851013, 0.3788975477218628, 0.37246689200401306, 0.37393638491630554, 0.367363840341568, 0.35846570134162903, 0.3565755784511566, 0.3465113937854767, 0.34843963384628296, 0.3420346677303314, 0.3375255763530731, 0.33025649189949036, 0.3271244466304779, 0.3216277062892914, 0.3175952732563019, 0.309089332818985, 0.31043946743011475, 0.3089003264904022, 0.30930912494659424, 0.29872462153434753, 0.291465163230896, 0.28974515199661255, 0.28974539041519165, 0.2887171506881714, 0.2799851894378662, 0.2810617685317993, 0.2780872583389282, 0.2711152136325836, 0.26675504446029663, 0.2596226632595062, 0.25957557559013367, 0.2539597749710083, 0.26213884353637695, 0.24238625168800354, 0.24335379898548126, 0.23797719180583954, 0.24201655387878418, 0.23469586670398712, 0.22884991765022278, 0.22938455641269684, 0.2300323247909546, 0.21707764267921448], "accuracy": [0.2782987654209137, 0.5004622936248779, 0.5678246021270752, 0.6336019039154053, 0.6709813475608826, 0.7046625018119812, 0.728701651096344, 0.7428345084190369, 0.7553823590278625, 0.7576277852058411, 0.7717606425285339, 0.7784969210624695, 0.7869502305984497, 0.7918372750282288, 0.798309326171875, 0.8083476424217224, 0.8112534880638123, 0.8078193068504333, 0.8120459914207458, 0.822348415851593, 0.822348415851593, 0.826310932636261, 0.8356888294219971, 0.8327829837799072, 0.8405758738517761, 0.8401796221733093, 0.8455950617790222, 0.8485008478164673, 0.8471800088882446, 0.8507462739944458, 0.858671247959137, 0.8553691506385803, 0.8636903762817383, 0.8545766472816467, 0.8659358024597168, 0.8684453964233398, 0.8679170608520508, 0.8627657890319824, 0.8693699836730957, 0.8739928603172302, 0.8770307898521423, 0.8716153502464294, 0.8761062026023865, 0.8813894987106323, 0.8837670087814331, 0.883238673210144, 0.8820499181747437, 0.8885219693183899, 0.8889182209968567, 0.8887861371040344, 0.8877294659614563, 0.8860124349594116, 0.8943336606025696, 0.8938053250312805, 0.8951261639595032, 0.8961827754974365, 0.8951261639595032, 0.8969752788543701, 0.8976356983184814, 0.8981640338897705, 0.9026548862457275, 0.9009377956390381, 0.9054285883903503, 0.9043719172477722, 0.9058248400688171, 0.9046360850334167, 0.9120327830314636, 0.9128252267837524, 0.913089394569397, 0.9097873568534851, 0.9167877435684204, 0.9154669046401978, 0.9177123308181763, 0.9148064851760864, 0.9194294214248657], "val_loss": [2.0388717651367188, 1.5177854299545288, 1.0582060813903809, 0.8589330911636353, 0.7737645506858826, 0.711405336856842, 0.6719209551811218, 0.6360511779785156, 0.6089155673980713, 0.5874801278114319, 0.5663504004478455, 0.5540075302124023, 0.5357983112335205, 0.5257512927055359, 0.5098217129707336, 0.5041597485542297, 0.49599024653434753, 0.48212653398513794, 0.47285717725753784, 0.46910229325294495, 0.4625934362411499, 0.45934534072875977, 0.45066019892692566, 0.44844532012939453, 0.43942007422447205, 0.4320022463798523, 0.43065860867500305, 0.42104947566986084, 0.4242454469203949, 0.4131474494934082, 0.41181421279907227, 0.41093209385871887, 0.40928906202316284, 0.4007532000541687, 0.4095657467842102, 0.3981971740722656, 0.3944464921951294, 0.4002520442008972, 0.3936767876148224, 0.3873561918735504, 0.38813915848731995, 0.3847257196903229, 0.3844403028488159, 0.3881896138191223, 0.38096386194229126, 0.380215585231781, 0.37821224331855774, 0.37483781576156616, 0.37328997254371643, 0.3764284551143646, 0.37641921639442444, 0.3675636351108551, 0.37388432025909424, 0.3653029799461365, 0.36878451704978943, 0.3674856722354889, 0.36671513319015503, 0.3630882203578949, 0.3656057119369507, 0.36860230565071106, 0.36681094765663147, 0.35883334279060364, 0.3596445322036743, 0.35585883259773254, 0.35913944244384766, 0.35595637559890747, 0.3605886697769165, 0.35361775755882263, 0.3626987636089325, 0.3562626540660858, 0.3516480624675751, 0.3566155731678009, 0.3598327934741974, 0.3563859164714813, 0.3560791015625], "val_accuracy": [0.5383333563804626, 0.6476666927337646, 0.6733333468437195, 0.7043333053588867, 0.737666666507721, 0.7513333559036255, 0.7603333592414856, 0.7636666893959045, 0.7793333530426025, 0.7853333353996277, 0.7953333258628845, 0.8033333420753479, 0.8140000104904175, 0.812333345413208, 0.8199999928474426, 0.8203333616256714, 0.8259999752044678, 0.82833331823349, 0.8356666564941406, 0.8333333134651184, 0.8333333134651184, 0.8333333134651184, 0.8373333215713501, 0.8399999737739563, 0.8420000076293945, 0.8483333587646484, 0.8463333249092102, 0.8489999771118164, 0.8500000238418579, 0.8513333201408386, 0.8526666760444641, 0.8533333539962769, 0.8539999723434448, 0.8560000061988831, 0.8513333201408386, 0.8560000061988831, 0.8600000143051147, 0.8569999933242798, 0.8586666584014893, 0.8636666536331177, 0.8616666793823242, 0.8610000014305115, 0.8583333492279053, 0.8583333492279053, 0.8640000224113464, 0.8629999756813049, 0.8629999756813049, 0.862333357334137, 0.8663333058357239, 0.8686666488647461, 0.8646666407585144, 0.8683333396911621, 0.8659999966621399, 0.8703333139419556, 0.8659999966621399, 0.8679999709129333, 0.8629999756813049, 0.8709999918937683, 0.8690000176429749, 0.8673333525657654, 0.8690000176429749, 0.8709999918937683, 0.8733333349227905, 0.8713333606719971, 0.8713333606719971, 0.8740000128746033, 0.874666690826416, 0.8726666569709778, 0.8700000047683716, 0.878000020980835, 0.8730000257492065, 0.874666690826416, 0.8696666955947876, 0.874666690826416, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 82]], "fitness": -0.10457143187522888, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.306042432785034, 2.303298234939575, 2.302700996398926, 2.3026063442230225, 2.302586078643799, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.0874389111995697, 0.0952318087220192, 0.10077928751707077, 0.10051512718200684, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3036019802093506, 2.3026702404022217, 2.3025875091552734, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.08566666394472122, 0.1106666699051857, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 96], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.negative(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 6, 9, 0, 9, 3], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 3, 2, 2], [0, 0, 0, 3, 0, 0, 4, 1, 2, 4, 4], [16, 99, 96, 99, 61, 83]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, alpha), tf.math.add(tf.math.add(beta, grad), grad))))))", "other_info": {"loss": [2.303678035736084, 2.302572727203369, 2.302582025527954, 2.302584409713745, 2.3025853633880615, 2.3025856018066406], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025810718536377, 2.3025801181793213, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 2, 1, 1, 1, 22, 11, 11, 5], "tree_depth": 17}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 3, 3], [2, 1, 0, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [0, 3, 0, 3, 2], [96, 16], [0, 1, 1], [1], [0, 5], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 37, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 11, 6, 5, 2, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303070306777954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]