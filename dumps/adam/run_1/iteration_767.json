[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225043296813965, 1.8682950735092163, 1.3931217193603516, 1.0994541645050049, 0.9357972145080566, 0.8280549049377441, 0.7710235118865967, 0.7303367853164673, 0.6882670521736145, 0.6631069183349609, 0.6318331360816956, 0.6134957075119019, 0.5856584310531616, 0.579042911529541, 0.5603270530700684, 0.5462046265602112, 0.5369681715965271, 0.5231589078903198, 0.5025037527084351, 0.501239538192749, 0.49610766768455505, 0.4871499538421631, 0.47741183638572693, 0.45595672726631165, 0.4512731432914734, 0.45003384351730347, 0.4365721344947815, 0.4359341263771057, 0.41339078545570374, 0.41816622018814087, 0.4076240360736847, 0.40654340386390686, 0.40073201060295105, 0.39414137601852417, 0.38745397329330444, 0.382208913564682, 0.3778039515018463, 0.37032678723335266, 0.36766019463539124, 0.35943126678466797, 0.34966233372688293, 0.34854772686958313, 0.34693679213523865, 0.33795610070228577, 0.32928359508514404, 0.3270628750324249, 0.32664039731025696, 0.3208911716938019, 0.3125229477882385, 0.3087843954563141, 0.3062748312950134, 0.29799792170524597, 0.29970112442970276, 0.2977961301803589, 0.29163259267807007, 0.2874986231327057, 0.27240464091300964, 0.27894502878189087, 0.27143579721450806, 0.2676697075366974, 0.2641374170780182, 0.2599949240684509, 0.2544504404067993, 0.2541269361972809, 0.24874238669872284, 0.24464677274227142, 0.24326066672801971, 0.2404150366783142, 0.23783265054225922, 0.23181599378585815, 0.22570675611495972, 0.2187831699848175, 0.2248399257659912, 0.21600018441677094, 0.21447455883026123, 0.2064586728811264, 0.20779968798160553, 0.2063921093940735, 0.20052790641784668, 0.1979227364063263, 0.20030462741851807, 0.192657008767128, 0.1909783035516739, 0.18738721311092377, 0.18196889758110046, 0.17932242155075073, 0.1799309402704239, 0.17239141464233398, 0.17411722242832184, 0.16776002943515778], "accuracy": [0.2771100103855133, 0.4810461103916168, 0.5670320987701416, 0.6186765432357788, 0.6659622192382812, 0.7062475085258484, 0.7259278893470764, 0.7349095344543457, 0.7520803213119507, 0.7582882046699524, 0.7693831920623779, 0.7751948237419128, 0.7861577272415161, 0.7910447716712952, 0.7971205711364746, 0.8041210174560547, 0.8075551390647888, 0.8113855719566345, 0.8175934553146362, 0.8211596608161926, 0.8235371708869934, 0.8278959393501282, 0.8315942287445068, 0.8392550349235535, 0.8405758738517761, 0.8430854678153992, 0.8451988101005554, 0.8449346423149109, 0.8532558679580688, 0.8495575189590454, 0.8541803956031799, 0.8537842035293579, 0.8590674996376038, 0.8632941246032715, 0.8621054291725159, 0.8679170608520508, 0.863029956817627, 0.8683133125305176, 0.8710870146751404, 0.8750495314598083, 0.878351628780365, 0.8771628737449646, 0.8774270415306091, 0.8805969953536987, 0.8794082403182983, 0.8873332738876343, 0.8836349248886108, 0.8874653577804565, 0.8879936337471008, 0.8899748921394348, 0.8951261639595032, 0.8945978283882141, 0.8963148593902588, 0.8898428082466125, 0.8947299122810364, 0.8975036144256592, 0.9010698795318604, 0.8993527889251709, 0.9037115573883057, 0.901862382888794, 0.9071456789970398, 0.9046360850334167, 0.9060890078544617, 0.91124027967453, 0.913089394569397, 0.9128252267837524, 0.9137498140335083, 0.9178444147109985, 0.9148064851760864, 0.9177123308181763, 0.9186369180679321, 0.9225993752479553, 0.9192973375320435, 0.9227314591407776, 0.9237881302833557, 0.9272223114967346, 0.9266939759254456, 0.9272223114967346, 0.9301280975341797, 0.9282789826393127, 0.9265618920326233, 0.9282789826393127, 0.9318451881408691, 0.9325056076049805, 0.934751033782959, 0.9323735237121582, 0.9356756210327148, 0.939638078212738, 0.9364681243896484, 0.937260627746582], "val_loss": [2.043717384338379, 1.5239784717559814, 1.0530444383621216, 0.8440772891044617, 0.758965015411377, 0.7014715075492859, 0.653288722038269, 0.6288652420043945, 0.6051284074783325, 0.5758503675460815, 0.5601583123207092, 0.5451347827911377, 0.5330939888954163, 0.5192759037017822, 0.5128349661827087, 0.5007418394088745, 0.49088484048843384, 0.48516759276390076, 0.48322924971580505, 0.47188130021095276, 0.46774861216545105, 0.46394556760787964, 0.4490874707698822, 0.4491406977176666, 0.4428654909133911, 0.43386146426200867, 0.4353204667568207, 0.4276363253593445, 0.4233677089214325, 0.41947269439697266, 0.4204569458961487, 0.4186643362045288, 0.41282176971435547, 0.41282400488853455, 0.40010592341423035, 0.4074506461620331, 0.4029410481452942, 0.3958050012588501, 0.39077502489089966, 0.39564618468284607, 0.3883435130119324, 0.38782799243927, 0.3824799060821533, 0.3844650983810425, 0.3799677789211273, 0.3751870095729828, 0.37345337867736816, 0.3744235038757324, 0.3731025457382202, 0.3702011704444885, 0.3670557141304016, 0.36829471588134766, 0.3667772710323334, 0.37223705649375916, 0.3721020221710205, 0.35873767733573914, 0.36104297637939453, 0.3578675091266632, 0.3573443591594696, 0.3567245602607727, 0.3527481257915497, 0.35874634981155396, 0.35574331879615784, 0.3511101007461548, 0.35464006662368774, 0.35386717319488525, 0.3559143543243408, 0.3507024347782135, 0.35018855333328247, 0.35194864869117737, 0.3504595160484314, 0.35030803084373474, 0.35204777121543884, 0.3540059030056, 0.3545985817909241, 0.3553747534751892, 0.35644471645355225, 0.35131821036338806, 0.35026687383651733, 0.3658469617366791, 0.36268869042396545, 0.353567510843277, 0.35402238368988037, 0.3522418737411499, 0.35236987471580505, 0.35146450996398926, 0.3589601218700409, 0.3579307496547699, 0.3589545786380768, 0.3537965416908264], "val_accuracy": [0.5360000133514404, 0.637333333492279, 0.6759999990463257, 0.6949999928474426, 0.7170000076293945, 0.737333357334137, 0.7506666779518127, 0.7586666941642761, 0.7760000228881836, 0.7820000052452087, 0.7913333177566528, 0.796999990940094, 0.8026666641235352, 0.8006666898727417, 0.8059999942779541, 0.8163333535194397, 0.8153333067893982, 0.8246666789054871, 0.8180000185966492, 0.8259999752044678, 0.828000009059906, 0.8243333101272583, 0.8333333134651184, 0.8370000123977661, 0.8370000123977661, 0.8353333473205566, 0.8396666646003723, 0.8443333506584167, 0.8399999737739563, 0.8486666679382324, 0.8453333377838135, 0.8479999899864197, 0.847000002861023, 0.8503333330154419, 0.8526666760444641, 0.8479999899864197, 0.8553333282470703, 0.8573333621025085, 0.8569999933242798, 0.8550000190734863, 0.856333315372467, 0.8560000061988831, 0.8579999804496765, 0.8610000014305115, 0.859000027179718, 0.8636666536331177, 0.8619999885559082, 0.8653333187103271, 0.8650000095367432, 0.8650000095367432, 0.8696666955947876, 0.8676666617393494, 0.8679999709129333, 0.8700000047683716, 0.8693333268165588, 0.8740000128746033, 0.8726666569709778, 0.8723333477973938, 0.8733333349227905, 0.8740000128746033, 0.8743333220481873, 0.8713333606719971, 0.8723333477973938, 0.8756666779518127, 0.8756666779518127, 0.8740000128746033, 0.874666690826416, 0.8766666650772095, 0.8763333559036255, 0.8769999742507935, 0.8756666779518127, 0.8773333430290222, 0.8766666650772095, 0.8763333559036255, 0.8756666779518127, 0.875333309173584, 0.8790000081062317, 0.878000020980835, 0.8796666860580444, 0.8766666650772095, 0.8740000128746033, 0.8776666522026062, 0.8803333044052124, 0.8796666860580444, 0.8816666603088379, 0.8769999742507935, 0.878333330154419, 0.8796666860580444, 0.8803333044052124, 0.8803333044052124]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 4], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 8, 3, 6, 5, 1, 3, 1, 4, 4, 0], [0, 0, 0, 4, 0, 0, 2, 1, 2, 0], [16, 79, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta))))), alpha)", "other_info": {"loss": [81.90702819824219, 981.3578491210938, 1760.713623046875, 2322.171142578125, 2788.859619140625, 3197.96337890625], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [527.3409423828125, 1496.2193603515625, 2115.309814453125, 2613.236328125, 3042.790283203125, 3426.5146484375], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 6, 3, 3], [0, 1, 0, 2, 3, 0, 0], [39, 16, 63, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 5, 8, 8, 1, 4, 1, 1, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 97, 99, 61, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 6, 4, 2, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.multiply(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [56487305216.0, 7793766039552.0, 129189638307840.0, 865130095050752.0, 3938065982685184.0, 1.2924433840734208e+16], "accuracy": [0.10302469879388809, 0.09774138033390045, 0.09998679161071777, 0.10302469879388809, 0.09338264167308807, 0.09721305221319199], "val_loss": [536477302784.0, 27279203762176.0, 286181086461952.0, 1540891189706752.0, 5727389355081728.0, 1.6801645773979648e+16], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [6, 3, 3, 1, 8, 1, 4, 4, 4, 2, 8, 4, 8, 6, 6, 5], [2, 0, 0, 1, 4, 0, 3, 1, 2, 0, 0, 1, 5], [16, 77, 96, 16, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 29, 16, 13, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.pow(alpha, beta)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 88], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 1], [17, 16], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 5, 6, 2, 9, 4], [0, 3, 2], [99, 54], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [39, 99, 96, 99, 61, 1]], "fitness": -0.09285714477300644, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307772636413574, 2.310692071914673, 2.309091567993164, 2.309645175933838, 2.310232400894165, 2.309842824935913], "accuracy": [0.0944393053650856, 0.09166556596755981, 0.0940430611371994, 0.09034473448991776, 0.09206181764602661, 0.0940430611371994], "val_loss": [2.3078784942626953, 2.3078784942626953, 2.3078784942626953, 2.3078784942626953, 2.3078784942626953, 2.3078784942626953], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 1, 9, 6, 3, 2, 21, 11, 10, 5], "tree_depth": 17}]