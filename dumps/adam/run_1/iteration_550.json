[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8868571519851685, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222154140472412, 1.859197735786438, 1.3886425495147705, 1.0942152738571167, 0.9472610950469971, 0.8421790599822998, 0.785043478012085, 0.7365858554840088, 0.6991368532180786, 0.6711625456809998, 0.6421544551849365, 0.616988480091095, 0.5891450047492981, 0.5784561634063721, 0.5666466355323792, 0.5408433675765991, 0.5275765061378479, 0.5185150504112244, 0.5135302543640137, 0.4996265769004822, 0.4883091151714325, 0.4786703586578369, 0.46795788407325745, 0.4565187096595764, 0.4521287977695465, 0.44850486516952515, 0.43140366673469543, 0.4286278486251831, 0.4160599708557129, 0.40969768166542053, 0.4078174829483032, 0.4077450931072235, 0.3962053656578064, 0.3874478042125702, 0.3814776539802551, 0.37641963362693787, 0.36877620220184326, 0.36491847038269043, 0.36217331886291504, 0.3575732409954071, 0.35670387744903564, 0.34235450625419617, 0.3445626497268677, 0.3372246325016022, 0.3359149098396301, 0.32897427678108215, 0.3171994388103485, 0.31594499945640564, 0.3125719130039215, 0.3067867159843445, 0.3022006154060364, 0.29946571588516235, 0.2935422956943512, 0.29266270995140076, 0.2913725972175598, 0.28443366289138794, 0.28473037481307983, 0.2726939022541046], "accuracy": [0.2735437750816345, 0.4904239773750305, 0.5555408596992493, 0.6178840398788452, 0.6641130447387695, 0.7017567157745361, 0.713908314704895, 0.735041618347168, 0.7427024245262146, 0.7543256878852844, 0.7617223858833313, 0.7740060687065125, 0.7889314293861389, 0.7885351777076721, 0.7961959838867188, 0.8031964302062988, 0.8043851256370544, 0.8161405324935913, 0.8121780753135681, 0.817461371421814, 0.8253863453865051, 0.8276317715644836, 0.8360850811004639, 0.8370096683502197, 0.8387266993522644, 0.8408400416374207, 0.8465195894241333, 0.8474441766738892, 0.8514066934585571, 0.8540483713150024, 0.8512746095657349, 0.8552370667457581, 0.8580108284950256, 0.8595958352088928, 0.8659358024597168, 0.8656716346740723, 0.8706908226013184, 0.8732003569602966, 0.870030403137207, 0.8737286925315857, 0.8759741187095642, 0.8780874609947205, 0.8739928603172302, 0.8750495314598083, 0.8768987059593201, 0.8805969953536987, 0.8836349248886108, 0.8889182209968567, 0.8919561505317688, 0.887201189994812, 0.8942015767097473, 0.8926165699958801, 0.8927486538887024, 0.8947299122810364, 0.896446943283081, 0.9013340473175049, 0.8949940800666809, 0.901862382888794], "val_loss": [2.034653663635254, 1.5119132995605469, 1.0521267652511597, 0.8441394567489624, 0.7562442421913147, 0.6965953707695007, 0.650301456451416, 0.6196342706680298, 0.5882320404052734, 0.5681450963020325, 0.5468230247497559, 0.5336557030677795, 0.5143576264381409, 0.5023654103279114, 0.4943074882030487, 0.4793010354042053, 0.47493281960487366, 0.46272075176239014, 0.45892831683158875, 0.4573541581630707, 0.444460928440094, 0.4394555687904358, 0.43474116921424866, 0.4347025454044342, 0.4249707758426666, 0.420932412147522, 0.41770264506340027, 0.4096238911151886, 0.40386274456977844, 0.40828609466552734, 0.3989697992801666, 0.3986034393310547, 0.39560550451278687, 0.3956313133239746, 0.3914906084537506, 0.38913363218307495, 0.3851446807384491, 0.3827963173389435, 0.380838006734848, 0.37676432728767395, 0.3827856779098511, 0.37158650159835815, 0.37598717212677, 0.3692159354686737, 0.36991506814956665, 0.3662453889846802, 0.36762621998786926, 0.36403775215148926, 0.3626459240913391, 0.36377111077308655, 0.3616364598274231, 0.357797771692276, 0.35540148615837097, 0.3593367636203766, 0.35848695039749146, 0.35831132531166077, 0.355889230966568, 0.35637328028678894], "val_accuracy": [0.5426666736602783, 0.6463333368301392, 0.6673333048820496, 0.7006666660308838, 0.7263333201408386, 0.7476666569709778, 0.7593333125114441, 0.7636666893959045, 0.7820000052452087, 0.7836666703224182, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8153333067893982, 0.8216666579246521, 0.8259999752044678, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8309999704360962, 0.8399999737739563, 0.8443333506584167, 0.8393333554267883, 0.8453333377838135, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8550000190734863, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.859000027179718, 0.8586666584014893, 0.8573333621025085, 0.859666645526886, 0.859333336353302, 0.859666645526886, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.862333357334137, 0.8676666617393494, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8709999918937683, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8713333606719971, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8454285860061646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223002910614014, 1.8577598333358765, 1.382049322128296, 1.094395637512207, 0.9275115728378296, 0.8315102458000183, 0.7545088529586792, 0.7123669385910034, 0.6814115643501282, 0.6385726928710938, 0.6125200390815735, 0.5990985035896301, 0.576964795589447, 0.5684217810630798, 0.5475459694862366, 0.5283071398735046, 0.5199681520462036, 0.5110246539115906, 0.4947385787963867, 0.4862407147884369, 0.47468140721321106, 0.47132426500320435, 0.4617021381855011, 0.4558120667934418, 0.4338771104812622, 0.4388223886489868, 0.43031182885169983, 0.4196678102016449, 0.41665542125701904, 0.40239959955215454, 0.401633083820343, 0.4028894007205963, 0.38500624895095825, 0.3803223967552185, 0.3754982054233551, 0.38050493597984314, 0.37063539028167725, 0.366499125957489, 0.3537546396255493, 0.3573288023471832, 0.34868237376213074, 0.34215566515922546, 0.3398498594760895, 0.3303331434726715, 0.3203860819339752, 0.32064589858055115, 0.31982120871543884, 0.3157311677932739, 0.31032752990722656, 0.30354294180870056, 0.30081892013549805, 0.29268404841423035, 0.28686851263046265, 0.29082855582237244, 0.28326350450515747, 0.2791711390018463, 0.27940496802330017, 0.27516451478004456, 0.26868119835853577, 0.2631879448890686, 0.2709225118160248, 0.27382922172546387, 0.25822877883911133, 0.24364040791988373, 0.24189800024032593, 0.24217715859413147, 0.24460820853710175, 0.238992378115654, 0.23742198944091797, 0.22689613699913025, 0.22912409901618958, 0.22119247913360596, 0.2224641889333725, 0.22235415875911713, 0.2216242253780365, 0.20929306745529175, 0.20513015985488892, 0.20843389630317688, 0.2046634703874588], "accuracy": [0.27024170756340027, 0.4928014874458313, 0.5659754276275635, 0.6206578016281128, 0.6709813475608826, 0.6993792057037354, 0.7248712182044983, 0.7407211661338806, 0.7493065595626831, 0.7675340175628662, 0.7754589915275574, 0.7759873270988464, 0.7915731072425842, 0.7917051911354065, 0.802800178527832, 0.8070268034934998, 0.8125742673873901, 0.8173292875289917, 0.8232730031013489, 0.8236692547798157, 0.8249900937080383, 0.8304054737091064, 0.8323867321014404, 0.8345000743865967, 0.8405758738517761, 0.846387505531311, 0.8479725122451782, 0.8474441766738892, 0.8486329317092896, 0.8551049828529358, 0.8556333184242249, 0.8568220734596252, 0.860652506351471, 0.8643507957458496, 0.8647470474243164, 0.8647470474243164, 0.8701624870300293, 0.8688416481018066, 0.8741249442100525, 0.8691058158874512, 0.8741249442100525, 0.8746532797813416, 0.8786157965660095, 0.8798044919967651, 0.8844274282455444, 0.8805969953536987, 0.8840311765670776, 0.8860124349594116, 0.8840311765670776, 0.8883898854255676, 0.8886540532112122, 0.8963148593902588, 0.8945978283882141, 0.8924844861030579, 0.8986923694610596, 0.897899866104126, 0.8985602855682373, 0.8961827754974365, 0.9009377956390381, 0.9031832218170166, 0.9015982151031494, 0.9017302989959717, 0.9066173434257507, 0.9079381823539734, 0.9109761118888855, 0.9124290347099304, 0.9080702662467957, 0.9153348207473755, 0.9117686152458191, 0.9171839952468872, 0.9171839952468872, 0.9206181764602661, 0.9207502603530884, 0.921938955783844, 0.9170519113540649, 0.9257693886756897, 0.924448549747467, 0.9260335564613342, 0.926429808139801], "val_loss": [2.039905071258545, 1.5213069915771484, 1.060128927230835, 0.8548378348350525, 0.766533613204956, 0.7100634574890137, 0.6635428667068481, 0.6282060742378235, 0.6005504727363586, 0.5802750587463379, 0.5554724335670471, 0.5416009426116943, 0.5296842455863953, 0.5181111097335815, 0.5022968649864197, 0.49494469165802, 0.4861331880092621, 0.47783637046813965, 0.46667858958244324, 0.462485671043396, 0.4572784900665283, 0.44572144746780396, 0.44690847396850586, 0.4354841411113739, 0.4296627342700958, 0.43238934874534607, 0.4235546588897705, 0.41457781195640564, 0.42273950576782227, 0.4119128882884979, 0.4091968536376953, 0.4105367064476013, 0.40156903862953186, 0.39711031317710876, 0.40056928992271423, 0.39047032594680786, 0.39527469873428345, 0.3859235346317291, 0.38937556743621826, 0.38075923919677734, 0.3778187334537506, 0.3782661259174347, 0.3738456964492798, 0.37323787808418274, 0.3709428608417511, 0.3763044476509094, 0.3672279119491577, 0.3619973063468933, 0.3624318838119507, 0.36381322145462036, 0.35907697677612305, 0.3546968698501587, 0.3610267639160156, 0.3545880913734436, 0.35395827889442444, 0.3598555028438568, 0.35430341958999634, 0.3520950376987457, 0.34832054376602173, 0.35320788621902466, 0.3553009331226349, 0.3492580056190491, 0.34768742322921753, 0.35089823603630066, 0.3449716866016388, 0.3481234014034271, 0.3429202735424042, 0.3401104211807251, 0.34374308586120605, 0.343858003616333, 0.33770015835762024, 0.34076687693595886, 0.34068354964256287, 0.34229063987731934, 0.34607481956481934, 0.3424666225910187, 0.3423199951648712, 0.3381713926792145, 0.34200215339660645], "val_accuracy": [0.5416666865348816, 0.6413333415985107, 0.6703333258628845, 0.6956666707992554, 0.7183333039283752, 0.7360000014305115, 0.7519999742507935, 0.765666663646698, 0.777999997138977, 0.7826666831970215, 0.7953333258628845, 0.7990000247955322, 0.8053333163261414, 0.809333324432373, 0.8193333148956299, 0.8193333148956299, 0.8309999704360962, 0.8316666483879089, 0.8386666774749756, 0.8410000205039978, 0.8373333215713501, 0.8456666469573975, 0.8426666855812073, 0.8483333587646484, 0.8550000190734863, 0.8493333458900452, 0.8529999852180481, 0.8560000061988831, 0.856333315372467, 0.856333315372467, 0.8569999933242798, 0.859333336353302, 0.8640000224113464, 0.8653333187103271, 0.8636666536331177, 0.8666666746139526, 0.8633333444595337, 0.8713333606719971, 0.8669999837875366, 0.8696666955947876, 0.8733333349227905, 0.8743333220481873, 0.8743333220481873, 0.874666690826416, 0.8730000257492065, 0.8723333477973938, 0.8766666650772095, 0.8776666522026062, 0.874666690826416, 0.8759999871253967, 0.8809999823570251, 0.8816666603088379, 0.8733333349227905, 0.8803333044052124, 0.8799999952316284, 0.8816666603088379, 0.8823333382606506, 0.8826666474342346, 0.8830000162124634, 0.8809999823570251, 0.8843333125114441, 0.8806666731834412, 0.8843333125114441, 0.8799999952316284, 0.8866666555404663, 0.8893333077430725, 0.8846666812896729, 0.8859999775886536, 0.890333354473114, 0.8886666893959045, 0.8856666684150696, 0.8883333206176758, 0.8883333206176758, 0.890666663646698, 0.8846666812896729, 0.8840000033378601, 0.8886666893959045, 0.8886666893959045, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 1, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10485713928937912, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))))), alpha)", "other_info": {"loss": [1.2395674189221069e+20, 1.4469735749253071e+20, 1.3949874337110347e+20, 1.454640425525324e+20, 1.3018142906077151e+20, 1.4318363784433893e+20], "accuracy": [0.10540219396352768, 0.10870426893234253, 0.10328886657953262, 0.10936468094587326, 0.11055342853069305, 0.10487385839223862], "val_loss": [5.66033423830247e+19, 5.66033423830247e+19, 5.66033423830247e+19, 5.66033423830247e+19, 5.66033423830247e+19, 5.66033423830247e+19], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [1, 1], [0], [1], [98], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 2, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 78, 96, 99, 19, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303389072418213, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8, 1, 0, 5, 4, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 3, 7], [75, 99, 96, 99, 61, 1, 17]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(tf.math.subtract(beta, tf.math.negative(tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))))), grad)))", "other_info": {"loss": [38.8539924621582, 44.828304290771484, 44.08108139038086, 44.671730041503906, 44.41114807128906, 43.84539031982422], "accuracy": [0.09972262382507324, 0.1002509593963623, 0.10091137140989304, 0.10394927859306335, 0.09985470771789551, 0.10236428678035736], "val_loss": [34.66489028930664, 34.66489028930664, 34.66489028930664, 34.66489028930664, 34.66489028930664, 34.66489028930664], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 6, 4, 2, 2, 10, 6, 4, 2, 2, 1, 1, 1, 29, 16, 13, 7], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 3], [1, 3, 0, 3, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6, 3, 3], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 7, 0], [16, 99, 96, 99, 6, 1, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 11, 6, 5, 2, 2, 1, 1, 1, 26, 13, 13, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]