[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224590539932251, 1.8638859987258911, 1.3978285789489746, 1.1051115989685059, 0.9351550340652466, 0.8531766533851624, 0.7817806601524353, 0.7276771664619446, 0.6996701955795288, 0.6728870868682861, 0.6396504640579224, 0.6114020943641663, 0.5899173617362976, 0.5777763724327087, 0.5623325705528259, 0.5536971092224121, 0.5288746953010559, 0.5210357308387756, 0.5145369172096252, 0.5086684823036194, 0.49337905645370483, 0.48058366775512695, 0.4733416736125946, 0.4671367108821869, 0.4560546278953552, 0.4489839971065521, 0.43767276406288147, 0.43080347776412964, 0.42394670844078064, 0.4119667112827301, 0.4154728055000305, 0.4051834046840668, 0.4020461440086365, 0.3948018252849579, 0.39558297395706177, 0.38355568051338196, 0.38200199604034424, 0.3754238486289978, 0.3634035289287567, 0.3588741719722748, 0.35425013303756714, 0.35747748613357544, 0.34530067443847656, 0.34502410888671875, 0.3350977897644043, 0.33896344900131226, 0.33060407638549805, 0.3261704444885254, 0.32500237226486206, 0.31737399101257324, 0.309316486120224, 0.31210988759994507, 0.29956573247909546, 0.2987413704395294, 0.2934395670890808, 0.2916269898414612, 0.29190024733543396, 0.288055956363678, 0.27709802985191345, 0.27752116322517395, 0.2706053853034973, 0.26719552278518677, 0.2586905062198639, 0.25517407059669495, 0.25299152731895447, 0.24685099720954895, 0.2489650994539261, 0.2379595935344696, 0.2467358112335205, 0.24182036519050598, 0.23832111060619354, 0.23622792959213257, 0.22920526564121246, 0.22353021800518036, 0.21662341058254242, 0.2148113250732422, 0.21315842866897583, 0.20856662094593048, 0.20420268177986145, 0.20272819697856903, 0.20168952643871307, 0.19936147332191467, 0.2022467404603958, 0.19393852353096008, 0.1888069212436676, 0.1853010207414627, 0.18326862156391144, 0.18725469708442688, 0.1802607625722885], "accuracy": [0.27763834595680237, 0.49993395805358887, 0.5666358470916748, 0.6131290197372437, 0.6716417670249939, 0.689869225025177, 0.7165499925613403, 0.7357020378112793, 0.7436270117759705, 0.754589855670929, 0.7660810947418213, 0.7766477465629578, 0.7849689722061157, 0.7905164361000061, 0.7992339134216309, 0.8009510040283203, 0.809140145778656, 0.8127063512802124, 0.81548011302948, 0.8162726163864136, 0.8249900937080383, 0.8274996876716614, 0.8337075710296631, 0.8334434032440186, 0.8363492488861084, 0.8409721255302429, 0.8432175517082214, 0.8521991968154907, 0.8479725122451782, 0.8537842035293579, 0.8499537706375122, 0.8560295701026917, 0.8561616539955139, 0.8597279191017151, 0.8573504090309143, 0.8615770936012268, 0.8631620407104492, 0.868049144744873, 0.8689737319946289, 0.8671245574951172, 0.8722757697105408, 0.8726720213890076, 0.8758420348167419, 0.8751816153526306, 0.878879964351654, 0.8780874609947205, 0.8821820020675659, 0.8772949576377869, 0.8837670087814331, 0.8858803510665894, 0.887201189994812, 0.8848236799240112, 0.8893144726753235, 0.8919561505317688, 0.8956544995307922, 0.8951261639595032, 0.8894465565681458, 0.8980319499969482, 0.900409460067749, 0.8965790271759033, 0.9039757251739502, 0.9037115573883057, 0.9055606722831726, 0.9076740145683289, 0.908730685710907, 0.9085986018180847, 0.9097873568534851, 0.9159952402114868, 0.9075419306755066, 0.913089394569397, 0.9149385690689087, 0.913089394569397, 0.91559898853302, 0.9194294214248657, 0.9225993752479553, 0.9231277108192444, 0.9233918786048889, 0.9260335564613342, 0.9299960136413574, 0.9292035102844238, 0.9292035102844238, 0.9260335564613342, 0.9265618920326233, 0.9315810203552246, 0.9340906143188477, 0.9313168525695801, 0.935279369354248, 0.9315810203552246, 0.9331660270690918], "val_loss": [2.0364224910736084, 1.5119632482528687, 1.0428588390350342, 0.8328427672386169, 0.7376822829246521, 0.6838186979293823, 0.6384417414665222, 0.60288405418396, 0.5764493942260742, 0.5563174486160278, 0.53635573387146, 0.5184746384620667, 0.5070334672927856, 0.4945278465747833, 0.4811205267906189, 0.47261738777160645, 0.46519893407821655, 0.45602861046791077, 0.4515576660633087, 0.44376710057258606, 0.4394070506095886, 0.42795220017433167, 0.4247489273548126, 0.42230477929115295, 0.416422039270401, 0.41304606199264526, 0.405069500207901, 0.40248534083366394, 0.3957495093345642, 0.3932521939277649, 0.3917439877986908, 0.3855334520339966, 0.3846903443336487, 0.38456273078918457, 0.3777863085269928, 0.38091352581977844, 0.3777937889099121, 0.374453604221344, 0.3721783757209778, 0.36629825830459595, 0.3647341728210449, 0.36119210720062256, 0.36700910329818726, 0.36272087693214417, 0.3612198829650879, 0.3656446933746338, 0.3623223900794983, 0.35467955470085144, 0.35379013419151306, 0.3616761565208435, 0.35364094376564026, 0.3468440771102905, 0.35026565194129944, 0.3501940071582794, 0.3545147180557251, 0.3513091504573822, 0.34877344965934753, 0.3410007655620575, 0.3446265459060669, 0.3410213887691498, 0.34085819125175476, 0.33986103534698486, 0.33731886744499207, 0.343218594789505, 0.33527904748916626, 0.33798375725746155, 0.33526405692100525, 0.33732956647872925, 0.3345458209514618, 0.34458380937576294, 0.336759477853775, 0.3364392817020416, 0.3378850817680359, 0.3369640111923218, 0.33935683965682983, 0.3384944200515747, 0.33679357171058655, 0.3375064432621002, 0.3360874056816101, 0.3356230556964874, 0.34466853737831116, 0.33730509877204895, 0.3359909951686859, 0.33959439396858215, 0.3368707001209259, 0.3371012210845947, 0.3451395332813263, 0.33246737718582153, 0.33857905864715576], "val_accuracy": [0.531000018119812, 0.656000018119812, 0.6819999814033508, 0.7106666564941406, 0.7306666374206543, 0.7516666650772095, 0.7699999809265137, 0.7799999713897705, 0.7906666398048401, 0.8006666898727417, 0.8003333210945129, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8266666531562805, 0.8276666402816772, 0.8293333053588867, 0.8349999785423279, 0.8373333215713501, 0.8393333554267883, 0.8423333168029785, 0.8493333458900452, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8500000238418579, 0.8556666374206543, 0.8523333072662354, 0.8603333234786987, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8709999918937683, 0.8723333477973938, 0.8690000176429749, 0.8733333349227905, 0.8740000128746033, 0.8773333430290222, 0.8740000128746033, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8786666393280029, 0.875, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8803333044052124, 0.8833333253860474, 0.8809999823570251, 0.8836666941642761, 0.8809999823570251, 0.8840000033378601, 0.8796666860580444, 0.8773333430290222, 0.8830000162124634, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8790000081062317, 0.8849999904632568, 0.8866666555404663, 0.8846666812896729, 0.8826666474342346, 0.8843333125114441, 0.8856666684150696, 0.8870000243186951, 0.8883333206176758, 0.8853333592414856, 0.8853333592414856, 0.8866666555404663, 0.887666642665863, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87971431016922, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2264158725738525, 1.883138656616211, 1.4228179454803467, 1.1245834827423096, 0.9636178016662598, 0.8570544123649597, 0.7892341613769531, 0.7428163290023804, 0.7103912234306335, 0.6776049137115479, 0.6464032530784607, 0.6186978220939636, 0.6058709025382996, 0.583882212638855, 0.5697414875030518, 0.5519570708274841, 0.5444625020027161, 0.5314995646476746, 0.5091581344604492, 0.5085999369621277, 0.4993470013141632, 0.47943422198295593, 0.4748769998550415, 0.4657655656337738, 0.4618813097476959, 0.45459797978401184, 0.450758159160614, 0.43135109543800354, 0.4276069402694702, 0.41853609681129456, 0.41742268204689026, 0.40973231196403503, 0.4136907458305359, 0.40421152114868164, 0.39682677388191223, 0.38752782344818115, 0.3869898021221161, 0.3718068301677704, 0.36564821004867554, 0.37274402379989624, 0.3558189570903778, 0.35788071155548096, 0.3505411446094513, 0.3386285901069641, 0.3320959806442261, 0.33276042342185974, 0.3289143145084381, 0.321180522441864, 0.3082222044467926, 0.3142070770263672, 0.31262820959091187, 0.30145516991615295], "accuracy": [0.275260865688324, 0.4839519262313843, 0.5514463186264038, 0.6107515692710876, 0.6618676781654358, 0.6889446377754211, 0.7149649858474731, 0.7290979027748108, 0.7412495017051697, 0.7477215528488159, 0.7637035846710205, 0.7744023203849792, 0.7738739848136902, 0.7891955971717834, 0.7895918488502502, 0.7991018295288086, 0.8012151718139648, 0.8090080618858337, 0.8178576231002808, 0.821820080280304, 0.8157442808151245, 0.8284242749214172, 0.829216718673706, 0.8278959393501282, 0.8342359066009521, 0.8378021121025085, 0.8330471515655518, 0.8466516733169556, 0.8494254350662231, 0.8492933511734009, 0.8477083444595337, 0.8498216867446899, 0.8525954484939575, 0.857218325138092, 0.8574824929237366, 0.8607845902442932, 0.8610487580299377, 0.8679170608520508, 0.8714832663536072, 0.8638224601745605, 0.873860776424408, 0.8709549307823181, 0.8710870146751404, 0.8790120482444763, 0.8811253309249878, 0.8771628737449646, 0.8787478804588318, 0.8828424215316772, 0.8891823887825012, 0.8885219693183899, 0.889050304889679, 0.8914278149604797], "val_loss": [2.042558193206787, 1.5261443853378296, 1.0402663946151733, 0.8248271346092224, 0.736682116985321, 0.6856681108474731, 0.630856454372406, 0.598153829574585, 0.5744801759719849, 0.5526587963104248, 0.5285207629203796, 0.5181156992912292, 0.5017104148864746, 0.49153435230255127, 0.48076191544532776, 0.4649498164653778, 0.45893189311027527, 0.44923800230026245, 0.4420507550239563, 0.43643489480018616, 0.4289519190788269, 0.4197063744068146, 0.41264986991882324, 0.4259133040904999, 0.4058433771133423, 0.4043295085430145, 0.3929573595523834, 0.39203089475631714, 0.3935169577598572, 0.3845237195491791, 0.38564860820770264, 0.38002195954322815, 0.37472012639045715, 0.37609320878982544, 0.37455037236213684, 0.36657071113586426, 0.3637740910053253, 0.36373937129974365, 0.3667456805706024, 0.36090803146362305, 0.3588749170303345, 0.35685160756111145, 0.3568505048751831, 0.35314202308654785, 0.35260334610939026, 0.35083016753196716, 0.3491746783256531, 0.3468281924724579, 0.3464011251926422, 0.34657803177833557, 0.34585586190223694, 0.3444811999797821], "val_accuracy": [0.5366666913032532, 0.6583333611488342, 0.6933333277702332, 0.7196666598320007, 0.7456666827201843, 0.7536666393280029, 0.7736666798591614, 0.7760000228881836, 0.7900000214576721, 0.7976666688919067, 0.8050000071525574, 0.8133333325386047, 0.8163333535194397, 0.8220000267028809, 0.8289999961853027, 0.831333339214325, 0.8303333520889282, 0.840666651725769, 0.8376666903495789, 0.8410000205039978, 0.8389999866485596, 0.8460000157356262, 0.8479999899864197, 0.8456666469573975, 0.8476666808128357, 0.8479999899864197, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481, 0.859000027179718, 0.8566666841506958, 0.8583333492279053, 0.8616666793823242, 0.8586666584014893, 0.862666666507721, 0.8663333058357239, 0.8640000224113464, 0.8616666793823242, 0.8643333315849304, 0.8666666746139526, 0.8636666536331177, 0.8666666746139526, 0.8676666617393494, 0.8666666746139526, 0.8690000176429749, 0.871666669845581, 0.8733333349227905, 0.8683333396911621, 0.871666669845581, 0.871666669845581, 0.8730000257492065, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 5, 0, 3, 1], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 1, 0, 3, 1, 1, 0], [16, 56, 96, 99, 61, 1]], "fitness": -0.7705714106559753, "mapping_values": [1, 8, 5, 3, 2, 5, 4, 1, 1, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), alpha))", "other_info": {"loss": [2.2862391471862793, 2.2619030475616455, 2.2480006217956543, 2.229830503463745, 2.211087703704834, 2.190110206604004, 2.1625709533691406, 2.1314916610717773, 2.091750383377075, 2.044451951980591, 1.9892596006393433, 1.923619031906128, 1.844396948814392, 1.7656149864196777, 1.6691722869873047, 1.5877610445022583, 1.513586401939392, 1.4376381635665894, 1.3758060932159424, 1.3102831840515137, 1.2696207761764526, 1.2363570928573608, 1.1973023414611816, 1.1723896265029907, 1.1295652389526367, 1.106810212135315, 1.0745503902435303, 1.0666258335113525, 1.0450252294540405, 1.0181382894515991, 1.0124475955963135, 0.9932656288146973, 0.9797260761260986, 0.9678558111190796, 0.9529605507850647, 0.9520358443260193, 0.9338060021400452, 0.9267727732658386, 0.9094254374504089, 0.9028875231742859, 0.902488648891449, 0.893777072429657, 0.8786238431930542, 0.8683282732963562, 0.8659349083900452, 0.8550043106079102, 0.8461784720420837, 0.8483543992042542, 0.8463046550750732, 0.8443021178245544, 0.8293123245239258, 0.8284966945648193, 0.8155918121337891, 0.8040814399719238, 0.8147586584091187, 0.803925096988678, 0.8011249899864197, 0.8001079559326172, 0.7930179238319397, 0.790462851524353, 0.7860357761383057, 0.7838524580001831, 0.7788601517677307, 0.7680670619010925, 0.771197497844696, 0.7731950879096985, 0.759781539440155, 0.7679429054260254, 0.7538158297538757, 0.7570353746414185, 0.7402656078338623, 0.7466932535171509, 0.742978036403656, 0.7519934177398682, 0.742436408996582, 0.73567134141922, 0.7351840734481812, 0.7271021604537964, 0.7337886691093445, 0.7323476076126099, 0.7292324900627136], "accuracy": [0.14780081808567047, 0.21318188309669495, 0.23801347613334656, 0.2775062620639801, 0.3047153651714325, 0.32822611927986145, 0.3471139967441559, 0.37088891863822937, 0.37881389260292053, 0.3999471664428711, 0.41526877880096436, 0.42808082699775696, 0.44670453667640686, 0.4624224007129669, 0.4831594228744507, 0.5016510486602783, 0.5144630670547485, 0.528992235660553, 0.5455026030540466, 0.5540879964828491, 0.5712587237358093, 0.5736362338066101, 0.5849953889846802, 0.5868445634841919, 0.6081098914146423, 0.6085061430931091, 0.6217144131660461, 0.6194690465927124, 0.6299035549163818, 0.6395456194877625, 0.6366398334503174, 0.6497160196304321, 0.6503764390945435, 0.6608110070228577, 0.6604147553443909, 0.6654338836669922, 0.6656980514526367, 0.6598864197731018, 0.6785101294517517, 0.672698438167572, 0.6715096831321716, 0.6775855422019958, 0.6827367544174194, 0.685510516166687, 0.6880200505256653, 0.6902654767036438, 0.6966054439544678, 0.6840575933456421, 0.6942279934883118, 0.6896050572395325, 0.7009642124176025, 0.7025492191314697, 0.7041342258453369, 0.7129837274551392, 0.6996433734893799, 0.707568347454071, 0.7119271159172058, 0.7071720957756042, 0.7107383608818054, 0.7120591998100281, 0.7165499925613403, 0.7131158113479614, 0.7195879220962524, 0.7256637215614319, 0.7173424959182739, 0.7169462442398071, 0.7217012047767639, 0.7243428826332092, 0.72672039270401, 0.7244749665260315, 0.7296261787414551, 0.7248712182044983, 0.7296261787414551, 0.7228899598121643, 0.7283053994178772, 0.7290979027748108, 0.7317395210266113, 0.7347774505615234, 0.7290979027748108, 0.7337207794189453, 0.7323999404907227], "val_loss": [2.2653942108154297, 2.2478010654449463, 2.230771064758301, 2.211674690246582, 2.1892995834350586, 2.162750720977783, 2.130167245864868, 2.0906789302825928, 2.042567014694214, 1.9838162660598755, 1.913838267326355, 1.8317714929580688, 1.7377322912216187, 1.637136697769165, 1.5319143533706665, 1.4305771589279175, 1.3386600017547607, 1.2564598321914673, 1.1869810819625854, 1.1261223554611206, 1.0757111310958862, 1.0325322151184082, 0.9971818923950195, 0.9663099646568298, 0.93746018409729, 0.9143248796463013, 0.8901249766349792, 0.8706095218658447, 0.8531093597412109, 0.8363088369369507, 0.8217785358428955, 0.8098316192626953, 0.7989352941513062, 0.7883275747299194, 0.7785152792930603, 0.7675425410270691, 0.7601897120475769, 0.7527737021446228, 0.7436296343803406, 0.7362339496612549, 0.7306817173957825, 0.7234305739402771, 0.7190529108047485, 0.712013840675354, 0.7064363360404968, 0.70261549949646, 0.6955400109291077, 0.6927189230918884, 0.6878225803375244, 0.6843708753585815, 0.6787877678871155, 0.6762167811393738, 0.6722989082336426, 0.6686395406723022, 0.6641667485237122, 0.6616105437278748, 0.6574366688728333, 0.6558360457420349, 0.6516273021697998, 0.6486212015151978, 0.6484078168869019, 0.6430006623268127, 0.6409366726875305, 0.6366091966629028, 0.6341848969459534, 0.6321091055870056, 0.6299141645431519, 0.6279813051223755, 0.6258753538131714, 0.6231813430786133, 0.6205790042877197, 0.6171760559082031, 0.6164090633392334, 0.6148548722267151, 0.6124062538146973, 0.6106976866722107, 0.6089604496955872, 0.6054231524467468, 0.605189323425293, 0.6045259833335876, 0.6018149256706238], "val_accuracy": [0.28600001335144043, 0.3889999985694885, 0.43033334612846375, 0.4476666748523712, 0.4560000002384186, 0.47200000286102295, 0.4856666624546051, 0.5076666474342346, 0.5266666412353516, 0.54666668176651, 0.5663333535194397, 0.5956666469573975, 0.6156666874885559, 0.6269999742507935, 0.6413333415985107, 0.6510000228881836, 0.656333327293396, 0.6646666526794434, 0.6669999957084656, 0.6706666946411133, 0.6776666641235352, 0.6853333115577698, 0.6880000233650208, 0.6926666498184204, 0.6946666836738586, 0.7023333311080933, 0.7013333439826965, 0.7056666612625122, 0.7120000123977661, 0.7133333086967468, 0.715666651725769, 0.7176666855812073, 0.7223333120346069, 0.7166666388511658, 0.7236666679382324, 0.7279999852180481, 0.7250000238418579, 0.7296666502952576, 0.7336666584014893, 0.7316666841506958, 0.7333333492279053, 0.7383333444595337, 0.737666666507721, 0.7396666407585144, 0.7429999709129333, 0.7456666827201843, 0.7459999918937683, 0.7480000257492065, 0.746999979019165, 0.75, 0.7506666779518127, 0.7493333220481873, 0.7506666779518127, 0.7476666569709778, 0.7526666522026062, 0.7536666393280029, 0.753333330154419, 0.750333309173584, 0.753333330154419, 0.7549999952316284, 0.7576666474342346, 0.7606666684150696, 0.7616666555404663, 0.7606666684150696, 0.7606666684150696, 0.7630000114440918, 0.7630000114440918, 0.7683333158493042, 0.7663333415985107, 0.7693333625793457, 0.7663333415985107, 0.7670000195503235, 0.768666684627533, 0.7696666717529297, 0.7743333578109741, 0.7749999761581421, 0.7706666588783264, 0.7730000019073486, 0.7710000276565552, 0.7713333368301392, 0.7743333578109741]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 2, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 5, 7, 8, 6, 0], [1, 2, 0, 3, 1, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 2], [16, 94, 7, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 17, 11, 6, 1, 2, 1, 1, 0, 25, 13, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 54], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 2, 1, 2, 6, 0, 9], [0, 7, 4, 3, 7], [99, 15], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6], [16, 69, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 12, 7, 5, 2, 23, 12, 11, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.negative(sigma)), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 9], [0, 1, 0, 2], [39, 39, 22], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1, 1], [2], [4, 4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 9, 5, 4, 1, 3, 1, 2, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303589105606079, 2.3025875091552734, 2.302586555480957, 2.3025877475738525, 2.3025877475738525, 2.302586555480957, 2.3025870323181152, 2.3025877475738525], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302584648132324, 2.302583932876587, 2.302582263946533, 2.3025801181793213, 2.3025777339935303, 2.302574872970581, 2.3025712966918945, 2.3025670051574707], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]