[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221874237060547, 1.8570199012756348, 1.3790329694747925, 1.0835329294204712, 0.9208716154098511, 0.8219620585441589, 0.758540689945221, 0.7180431485176086, 0.6835224628448486, 0.6454153656959534, 0.620445728302002, 0.5984254479408264, 0.5742762088775635, 0.5610435009002686, 0.5435174703598022, 0.5221505165100098, 0.5189616084098816, 0.5023674964904785, 0.48829662799835205, 0.4766891300678253, 0.4707338213920593, 0.45879045128822327, 0.4511348307132721, 0.4468960165977478, 0.4295923113822937, 0.43145379424095154, 0.4188413619995117, 0.41450387239456177, 0.40635088086128235, 0.39548975229263306, 0.38693732023239136, 0.3858828544616699, 0.376970112323761, 0.3743208050727844, 0.37131938338279724, 0.3674390912055969, 0.36021506786346436, 0.3522711992263794, 0.3459986448287964, 0.3458324074745178, 0.3299439549446106, 0.33075961470603943, 0.32501447200775146, 0.31945040822029114, 0.3154052495956421, 0.3126199543476105, 0.3110099136829376, 0.3024633228778839, 0.3012266457080841, 0.29347968101501465, 0.28981253504753113, 0.2903427183628082, 0.28050580620765686, 0.27424582839012146, 0.2787885367870331, 0.27458634972572327, 0.26484107971191406, 0.26325997710227966, 0.2652952969074249, 0.2697809636592865, 0.25834524631500244, 0.25454169511795044, 0.2500530779361725, 0.2423551380634308, 0.2371651828289032, 0.23240342736244202, 0.23487956821918488, 0.22695891559123993], "accuracy": [0.2779025137424469, 0.4904239773750305, 0.568220853805542, 0.6170915365219116, 0.6730946898460388, 0.7077004313468933, 0.7285695672035217, 0.7384757399559021, 0.7536653280258179, 0.7630431652069092, 0.7721568942070007, 0.7815347909927368, 0.7926297783851624, 0.7915731072425842, 0.8075551390647888, 0.8112534880638123, 0.8131026029586792, 0.8234050869941711, 0.8231409192085266, 0.8289526104927063, 0.8319904804229736, 0.8348963260650635, 0.8360850811004639, 0.8409721255302429, 0.8455950617790222, 0.841500461101532, 0.8548408150672913, 0.8564258217811584, 0.8562937378883362, 0.8626337051391602, 0.8658037185668945, 0.8615770936012268, 0.8663320541381836, 0.8634262084960938, 0.8660678863525391, 0.8656716346740723, 0.8704266548156738, 0.873860776424408, 0.8753136992454529, 0.8750495314598083, 0.8787478804588318, 0.8802007436752319, 0.8817857503890991, 0.8854840993881226, 0.8844274282455444, 0.8864086866378784, 0.8873332738876343, 0.8891823887825012, 0.889578640460968, 0.8923524022102356, 0.8960506916046143, 0.8949940800666809, 0.897899866104126, 0.9021265506744385, 0.9005415439605713, 0.8968431949615479, 0.9043719172477722, 0.9010698795318604, 0.9037115573883057, 0.9021265506744385, 0.9045040011405945, 0.909259021282196, 0.9113723635673523, 0.9120327830314636, 0.9163914918899536, 0.9144102334976196, 0.9126931428909302, 0.9183727502822876], "val_loss": [2.032963752746582, 1.5046676397323608, 1.0319651365280151, 0.8251981735229492, 0.7383663058280945, 0.6854967474937439, 0.638572633266449, 0.6129385232925415, 0.5822194814682007, 0.5633693933486938, 0.5432256460189819, 0.5323689579963684, 0.5142200589179993, 0.5064135193824768, 0.488138884305954, 0.48685383796691895, 0.47324830293655396, 0.4649753272533417, 0.4583587944507599, 0.44754528999328613, 0.44775745272636414, 0.4374745786190033, 0.43659383058547974, 0.4288099706172943, 0.4213179051876068, 0.4151425063610077, 0.41777798533439636, 0.40988779067993164, 0.41567590832710266, 0.4034724235534668, 0.39967355132102966, 0.3990946114063263, 0.3883919417858124, 0.39440780878067017, 0.3933064043521881, 0.38587212562561035, 0.3831420838832855, 0.3856453597545624, 0.3792210817337036, 0.3776067793369293, 0.3761804699897766, 0.37440821528434753, 0.37094372510910034, 0.37161487340927124, 0.3712635040283203, 0.3628102242946625, 0.36873722076416016, 0.36453402042388916, 0.36424970626831055, 0.35997578501701355, 0.3612744212150574, 0.3601229786872864, 0.35275956988334656, 0.361316978931427, 0.35401496291160583, 0.3564809560775757, 0.3547753095626831, 0.3592691123485565, 0.36198869347572327, 0.35309329628944397, 0.35090160369873047, 0.34985750913619995, 0.3497951924800873, 0.34768757224082947, 0.35134732723236084, 0.34828171133995056, 0.3444049060344696, 0.3536902964115143], "val_accuracy": [0.5640000104904175, 0.6486666798591614, 0.6736666560173035, 0.706333339214325, 0.7276666760444641, 0.750333309173584, 0.7573333382606506, 0.7599999904632568, 0.7739999890327454, 0.7883333563804626, 0.793666660785675, 0.8036666512489319, 0.8073333501815796, 0.8113333582878113, 0.8176666498184204, 0.8190000057220459, 0.828000009059906, 0.8286666870117188, 0.8253333568572998, 0.8323333263397217, 0.8366666436195374, 0.8343333601951599, 0.8353333473205566, 0.8403333425521851, 0.8423333168029785, 0.8450000286102295, 0.8443333506584167, 0.8513333201408386, 0.8403333425521851, 0.8483333587646484, 0.8506666421890259, 0.8489999771118164, 0.8556666374206543, 0.8533333539962769, 0.8579999804496765, 0.859000027179718, 0.8569999933242798, 0.856333315372467, 0.859666645526886, 0.859000027179718, 0.8613333106040955, 0.8633333444595337, 0.8640000224113464, 0.8636666536331177, 0.8659999966621399, 0.8653333187103271, 0.8629999756813049, 0.8666666746139526, 0.8673333525657654, 0.8666666746139526, 0.8696666955947876, 0.871666669845581, 0.8726666569709778, 0.8700000047683716, 0.8706666827201843, 0.8683333396911621, 0.8730000257492065, 0.8706666827201843, 0.8686666488647461, 0.875, 0.871999979019165, 0.875333309173584, 0.8796666860580444, 0.875, 0.8743333220481873, 0.8773333430290222, 0.8759999871253967, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10028571635484695, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), grad)))", "other_info": {"loss": [166749068591104.0, 195951859859456.0, 194955461001216.0, 195194888650752.0, 193978909589504.0, 198348283838464.0], "accuracy": [0.09998679161071777, 0.09192973375320435, 0.09866596013307571, 0.09708096832036972, 0.09879804402589798, 0.09602430462837219], "val_loss": [140659147145216.0, 140659147145216.0, 140658643828736.0, 140658761269248.0, 140658828378112.0, 140658870321152.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [3, 2, 3, 3], [22, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 0, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [7, 99, 96, 69, 61, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3044888973236084, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 16], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 2, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, beta))))", "other_info": {"loss": [3.0882680416107178, 6.226898670196533, 9.746952056884766, 11.322465896606445, 12.757674217224121, 13.253249168395996], "accuracy": [0.09945846349000931, 0.10091137140989304, 0.1002509593963623, 0.0940430611371994, 0.09760929644107819, 0.09972262382507324], "val_loss": [3.4478020668029785, 7.145470142364502, 9.022876739501953, 10.516880989074707, 9.761098861694336, 9.828977584838867], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14}]