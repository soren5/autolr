[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224471092224121, 1.8719912767410278, 1.392892599105835, 1.082674503326416, 0.9196232557296753, 0.8184207677841187, 0.7657420635223389, 0.7192550897598267, 0.671069860458374, 0.6554583311080933, 0.6330852508544922, 0.6044749021530151, 0.5731306672096252, 0.566804051399231, 0.5561562776565552, 0.5366157293319702, 0.5231515765190125, 0.514232873916626, 0.50346440076828, 0.4964093863964081, 0.4810097813606262, 0.4708891808986664, 0.46522289514541626, 0.4473213255405426, 0.43746620416641235, 0.42941775918006897, 0.43376290798187256, 0.42223313450813293, 0.4068085253238678, 0.40793704986572266, 0.39004045724868774, 0.3958593010902405, 0.38634368777275085, 0.3832891583442688, 0.37367022037506104, 0.3652940094470978, 0.3644692897796631, 0.3549381196498871, 0.35343849658966064, 0.34953773021698, 0.343513160943985, 0.33519959449768066, 0.3369024395942688, 0.33751437067985535, 0.32096028327941895, 0.32452234625816345, 0.3145146071910858, 0.31396716833114624, 0.3078911304473877, 0.30894967913627625, 0.3001355528831482, 0.29106441140174866, 0.2979634702205658, 0.2847161591053009, 0.28807923197746277, 0.28494390845298767, 0.2751897871494293, 0.27448222041130066, 0.2660207152366638, 0.2591118812561035, 0.2609066367149353, 0.26497283577919006], "accuracy": [0.2719587981700897, 0.48474442958831787, 0.5704662799835205, 0.627129852771759, 0.6732267737388611, 0.7046625018119812, 0.7236824631690979, 0.7372870445251465, 0.7598732113838196, 0.76106196641922, 0.7713643908500671, 0.7790252566337585, 0.7924976944923401, 0.7964601516723633, 0.800290584564209, 0.8035926818847656, 0.8088759779930115, 0.8183859586715698, 0.8226125836372375, 0.8182538747787476, 0.8290846943855286, 0.8318583965301514, 0.8334434032440186, 0.8405758738517761, 0.842028796672821, 0.8477083444595337, 0.8485008478164673, 0.8495575189590454, 0.8544445633888245, 0.8502179384231567, 0.8636903762817383, 0.8551049828529358, 0.8634262084960938, 0.8626337051391602, 0.8676528930664062, 0.8658037185668945, 0.8714832663536072, 0.8747853636741638, 0.873860776424408, 0.8746532797813416, 0.8775591254234314, 0.8776912093162537, 0.8791441321372986, 0.8812574148178101, 0.8844274282455444, 0.8831065893173218, 0.8886540532112122, 0.8873332738876343, 0.8906353116035461, 0.8879936337471008, 0.8951261639595032, 0.8920882344245911, 0.89552241563797, 0.896446943283081, 0.8945978283882141, 0.9002773761749268, 0.898428201675415, 0.9049002528190613, 0.8994848728179932, 0.9074098467826843, 0.9045040011405945, 0.9019944667816162], "val_loss": [2.037929058074951, 1.5084259510040283, 1.0267930030822754, 0.8192124962806702, 0.7406920790672302, 0.6817162036895752, 0.6445317268371582, 0.6153426766395569, 0.5916168093681335, 0.5670245885848999, 0.5539756417274475, 0.534339427947998, 0.5242795348167419, 0.5173749923706055, 0.5069122910499573, 0.49601465463638306, 0.4813956618309021, 0.4746057987213135, 0.47366034984588623, 0.46990910172462463, 0.4575881361961365, 0.4473074972629547, 0.4439048767089844, 0.43652456998825073, 0.4342786371707916, 0.4301052689552307, 0.4298461079597473, 0.42341893911361694, 0.4204467833042145, 0.4157106876373291, 0.4130615293979645, 0.4137704372406006, 0.4066324830055237, 0.4046173393726349, 0.4004724621772766, 0.40239691734313965, 0.3915439546108246, 0.3991140127182007, 0.39500123262405396, 0.39171525835990906, 0.3949354588985443, 0.390479177236557, 0.3862020969390869, 0.38696086406707764, 0.38034749031066895, 0.37655001878738403, 0.37807589769363403, 0.37973475456237793, 0.3821481168270111, 0.3764892518520355, 0.3737926781177521, 0.3786062002182007, 0.3714762032032013, 0.37716975808143616, 0.383768767118454, 0.3652239143848419, 0.3704872131347656, 0.3649051785469055, 0.36743858456611633, 0.3639569580554962, 0.36869826912879944, 0.3674834668636322], "val_accuracy": [0.5366666913032532, 0.6663333177566528, 0.6936666369438171, 0.7166666388511658, 0.7409999966621399, 0.753333330154419, 0.7689999938011169, 0.7816666960716248, 0.7863333225250244, 0.7960000038146973, 0.8073333501815796, 0.8063333630561829, 0.8136666417121887, 0.812666654586792, 0.8190000057220459, 0.824999988079071, 0.8306666612625122, 0.8349999785423279, 0.8326666951179504, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.843999981880188, 0.8463333249092102, 0.8473333120346069, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.856333315372467, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.859000027179718, 0.8636666536331177, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8683333396911621, 0.8709999918937683, 0.8693333268165588, 0.8730000257492065, 0.8693333268165588, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2203657627105713, 1.8601270914077759, 1.38247549533844, 1.0822397470474243, 0.9333463311195374, 0.8390417695045471, 0.7701864242553711, 0.7202391624450684, 0.6888764500617981, 0.6571595072746277, 0.6257386803627014, 0.610223650932312, 0.591200053691864, 0.5753282308578491, 0.5601023435592651, 0.542348325252533, 0.5306553840637207, 0.5167051553726196, 0.5066729187965393, 0.4988439977169037, 0.48394590616226196, 0.47546932101249695, 0.4717874825000763, 0.46371224522590637, 0.45704421401023865, 0.4341471195220947, 0.43380293250083923, 0.4266117215156555, 0.41588762402534485, 0.4181067645549774, 0.4018935561180115, 0.4010578393936157, 0.39591163396835327, 0.38792988657951355, 0.39206215739250183, 0.37593528628349304, 0.36823272705078125, 0.3761557638645172, 0.3643263280391693, 0.35935479402542114, 0.35188329219818115, 0.34472769498825073, 0.3449396789073944, 0.34527525305747986, 0.3351866602897644, 0.33241647481918335, 0.32567155361175537, 0.32825931906700134, 0.32445019483566284, 0.3130931854248047, 0.3171350359916687, 0.3187148869037628, 0.30699101090431213, 0.30236849188804626, 0.29866039752960205, 0.28971418738365173, 0.29147079586982727, 0.2856358587741852, 0.28449785709381104, 0.281523197889328, 0.27647101879119873, 0.2708231210708618, 0.2668805420398712, 0.2656475007534027, 0.26549872756004333, 0.2630457282066345, 0.24938733875751495, 0.2499416172504425, 0.24724164605140686, 0.24031056463718414, 0.23735691606998444, 0.23499658703804016, 0.2308819591999054, 0.22911617159843445, 0.23019616305828094, 0.22158226370811462, 0.2275671809911728, 0.21349847316741943, 0.211920827627182, 0.2121073305606842], "accuracy": [0.27803459763526917, 0.4827631711959839, 0.5663716793060303, 0.6205257177352905, 0.6646413803100586, 0.6973979473114014, 0.7236824631690979, 0.7360982894897461, 0.750759482383728, 0.7581561207771301, 0.7740060687065125, 0.7791573405265808, 0.7890635132789612, 0.7910447716712952, 0.802800178527832, 0.8072909712791443, 0.81112140417099, 0.8149517774581909, 0.8185180425643921, 0.8215559124946594, 0.8267071843147278, 0.8300092220306396, 0.8300092220306396, 0.8325188159942627, 0.841500461101532, 0.8442742228507996, 0.8487650156021118, 0.8504821062088013, 0.8514066934585571, 0.8518029451370239, 0.858671247959137, 0.8578787446022034, 0.8614450097084045, 0.8644828796386719, 0.8582749962806702, 0.868049144744873, 0.8669924736022949, 0.8677849769592285, 0.8710870146751404, 0.8716153502464294, 0.8696341514587402, 0.8809932470321655, 0.8758420348167419, 0.8775591254234314, 0.8856161832809448, 0.8862766027450562, 0.8840311765670776, 0.882710337638855, 0.8840311765670776, 0.8889182209968567, 0.8893144726753235, 0.8853520154953003, 0.893541157245636, 0.8947299122810364, 0.8936732411384583, 0.8932769894599915, 0.8976356983184814, 0.8985602855682373, 0.8993527889251709, 0.9008057117462158, 0.9054285883903503, 0.9031832218170166, 0.9059569239616394, 0.9056927561759949, 0.904768168926239, 0.9080702662467957, 0.9116365313529968, 0.9121648669242859, 0.9100515246391296, 0.9159952402114868, 0.9145423173904419, 0.9158631563186646, 0.9191652536392212, 0.9208822846412659, 0.91559898853302, 0.9204860925674438, 0.9182406663894653, 0.9231277108192444, 0.9210143685340881, 0.9227314591407776], "val_loss": [2.038027763366699, 1.5153586864471436, 1.0535423755645752, 0.8449525833129883, 0.7542926669120789, 0.6981633305549622, 0.6519979238510132, 0.619451642036438, 0.5949288606643677, 0.5718522667884827, 0.5509262084960938, 0.5374483466148376, 0.5205456614494324, 0.5143247842788696, 0.4970812499523163, 0.4906204342842102, 0.48021599650382996, 0.4732925593852997, 0.46468091011047363, 0.45482921600341797, 0.4494249224662781, 0.4481953978538513, 0.4389958083629608, 0.43596217036247253, 0.427436888217926, 0.4284899830818176, 0.41923436522483826, 0.4130045473575592, 0.4112192392349243, 0.40318992733955383, 0.4034872353076935, 0.40279296040534973, 0.394796222448349, 0.3982917368412018, 0.39267587661743164, 0.3894781470298767, 0.38915032148361206, 0.3832574188709259, 0.38103187084198, 0.37996581196784973, 0.3778679072856903, 0.37467265129089355, 0.3724961280822754, 0.3705645203590393, 0.3731899559497833, 0.3680844008922577, 0.36768603324890137, 0.36350899934768677, 0.3585870862007141, 0.36508357524871826, 0.36084896326065063, 0.3591184914112091, 0.36193081736564636, 0.35507625341415405, 0.35779622197151184, 0.3537522256374359, 0.3599031865596771, 0.35308560729026794, 0.3515680432319641, 0.3512912690639496, 0.349803626537323, 0.3480287790298462, 0.3461962342262268, 0.34855887293815613, 0.34945815801620483, 0.34596166014671326, 0.34522518515586853, 0.3490978181362152, 0.34492501616477966, 0.34379875659942627, 0.3443697392940521, 0.34341317415237427, 0.3410637080669403, 0.34783923625946045, 0.3439364433288574, 0.3446122705936432, 0.3420836925506592, 0.34453409910202026, 0.3427584767341614, 0.34132736921310425], "val_accuracy": [0.5260000228881836, 0.6549999713897705, 0.6740000247955322, 0.699999988079071, 0.7283333539962769, 0.7446666955947876, 0.7596666812896729, 0.7696666717529297, 0.7823333144187927, 0.7910000085830688, 0.8003333210945129, 0.8116666674613953, 0.8193333148956299, 0.8180000185966492, 0.82833331823349, 0.8276666402816772, 0.8326666951179504, 0.8403333425521851, 0.8376666903495789, 0.8426666855812073, 0.8453333377838135, 0.843666672706604, 0.8460000157356262, 0.8486666679382324, 0.8483333587646484, 0.8526666760444641, 0.8510000109672546, 0.8550000190734863, 0.8560000061988831, 0.8579999804496765, 0.8569999933242798, 0.8576666712760925, 0.8613333106040955, 0.8583333492279053, 0.862333357334137, 0.8646666407585144, 0.862666666507721, 0.8656666874885559, 0.8676666617393494, 0.8653333187103271, 0.8663333058357239, 0.8673333525657654, 0.8700000047683716, 0.8673333525657654, 0.8696666955947876, 0.8703333139419556, 0.8650000095367432, 0.8726666569709778, 0.874666690826416, 0.8690000176429749, 0.8730000257492065, 0.8730000257492065, 0.8706666827201843, 0.8769999742507935, 0.8743333220481873, 0.8756666779518127, 0.871666669845581, 0.8793333172798157, 0.8796666860580444, 0.874666690826416, 0.878000020980835, 0.8790000081062317, 0.8796666860580444, 0.8816666603088379, 0.8790000081062317, 0.8769999742507935, 0.8793333172798157, 0.8793333172798157, 0.8823333382606506, 0.8853333592414856, 0.8846666812896729, 0.8833333253860474, 0.8830000162124634, 0.8833333253860474, 0.8856666684150696, 0.8796666860580444, 0.8830000162124634, 0.8823333382606506, 0.8856666684150696, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9], [1, 1, 0, 2], [3, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [62, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1, 77]], "fitness": -0.10342857241630554, "mapping_values": [1, 9, 6, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.add(tf.math.sqrt(beta), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.308995246887207, 2.3062446117401123, 2.30417537689209, 2.3027358055114746, 2.302586555480957, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09100515395402908, 0.08730682730674744, 0.09430722147226334, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3075976371765137, 2.3046300411224365, 2.302706718444824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.08633333444595337, 0.07433333247900009, 0.10633333027362823, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [0, 0, 0, 2], [39, 39, 90], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [8, 2, 4, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [95, 93, 96, 99, 5, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303196668624878, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 0, 9], [0, 1, 0, 2], [39, 63], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 0, 8, 3, 4, 4, 6, 0, 6, 6, 8, 0], [0, 2, 0, 3, 3, 5, 1, 5, 2, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 2, 1, 4, 0, 1], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 3, 6, 4, 2, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(grad, alpha)))), grad), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.negative(grad)))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.pow(sigma, alpha), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))), tf.math.subtract(grad, grad)))), beta), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}, "mapping_values": [1, 8, 4, 4, 2, 28, 17, 11, 2, 2, 1, 1, 1, 30, 15, 15, 5], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [49, 39, 65], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 0, 1, 0, 1], [0, 3, 0], [0, 6], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 1, 5, 3, 2, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034558296203613, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]