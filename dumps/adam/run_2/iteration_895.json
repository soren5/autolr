[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231223583221436, 1.8612256050109863, 1.3935627937316895, 1.1054919958114624, 0.9354302883148193, 0.846855640411377, 0.7812813520431519, 0.7398591041564941, 0.701762855052948, 0.6725459694862366, 0.6450192928314209, 0.6239194869995117, 0.5918692350387573, 0.5844913125038147, 0.5682255625724792, 0.5592465996742249, 0.5441704392433167, 0.5335544347763062, 0.5175583362579346, 0.5071784257888794, 0.5029208064079285, 0.4858435094356537, 0.48296794295310974, 0.46461716294288635, 0.4664401412010193, 0.4473630487918854, 0.44189324975013733, 0.43506214022636414, 0.43119916319847107, 0.4190638065338135, 0.41301870346069336, 0.40997764468193054, 0.3976117670536041, 0.3989045321941376, 0.38800284266471863, 0.3869284391403198, 0.3818763494491577, 0.378214031457901, 0.3676958680152893, 0.362114280462265, 0.3514295220375061, 0.35045310854911804, 0.3511001467704773, 0.3480389416217804, 0.3428369462490082, 0.3350914716720581, 0.3256170451641083, 0.32307541370391846, 0.31744563579559326, 0.317783385515213, 0.30638861656188965, 0.2994120717048645, 0.3061172366142273, 0.30009254813194275, 0.29531341791152954, 0.29232731461524963, 0.28348660469055176, 0.27650338411331177, 0.27462175488471985, 0.2712338864803314, 0.26598426699638367, 0.26442718505859375, 0.25543370842933655, 0.2579151391983032, 0.2546592652797699, 0.2461346834897995, 0.24607276916503906, 0.2408406287431717, 0.24615024030208588, 0.2375461310148239], "accuracy": [0.2690529525279999, 0.48408401012420654, 0.5547483563423157, 0.6083740592002869, 0.6642451286315918, 0.6922467350959778, 0.7224937081336975, 0.7310791015625, 0.7489103078842163, 0.7586844563484192, 0.7664773464202881, 0.778232753276825, 0.7895918488502502, 0.7906485199928284, 0.7911768555641174, 0.7948752045631409, 0.8041210174560547, 0.8117818236351013, 0.8149517774581909, 0.8178576231002808, 0.8207634687423706, 0.8248580098152161, 0.8269713521003723, 0.8337075710296631, 0.8343679904937744, 0.8421608805656433, 0.8396512866020203, 0.8445383906364441, 0.8453308939933777, 0.8524633646011353, 0.8544445633888245, 0.852859616279602, 0.8590674996376038, 0.8573504090309143, 0.863029956817627, 0.8597279191017151, 0.8648791313171387, 0.8640866279602051, 0.8693699836730957, 0.8712190985679626, 0.8716153502464294, 0.8725399374961853, 0.8734645247459412, 0.8747853636741638, 0.8790120482444763, 0.8791441321372986, 0.8825782537460327, 0.8816536664962769, 0.8823140859603882, 0.8837670087814331, 0.8864086866378784, 0.8911636471748352, 0.8910315632820129, 0.8887861371040344, 0.8919561505317688, 0.8942015767097473, 0.8936732411384583, 0.8967111110687256, 0.8990886211395264, 0.9000132083892822, 0.9009377956390381, 0.9045040011405945, 0.9063531756401062, 0.9041078090667725, 0.9064852595329285, 0.9117686152458191, 0.9099194407463074, 0.9124290347099304, 0.9080702662467957, 0.9064852595329285], "val_loss": [2.042081594467163, 1.518588900566101, 1.053577184677124, 0.8476752638816833, 0.7590833306312561, 0.702876627445221, 0.6521214842796326, 0.6203199625015259, 0.5974398851394653, 0.5839621424674988, 0.5584428906440735, 0.5417773723602295, 0.531297504901886, 0.5209345817565918, 0.5072726011276245, 0.5010121464729309, 0.4895123839378357, 0.47974705696105957, 0.4712445139884949, 0.46677568554878235, 0.4707390069961548, 0.4634028673171997, 0.4478108286857605, 0.44453540444374084, 0.44226664304733276, 0.4311288595199585, 0.4302593469619751, 0.42557844519615173, 0.41948696970939636, 0.41437268257141113, 0.4108235239982605, 0.4117784798145294, 0.4141620993614197, 0.4066219925880432, 0.40022459626197815, 0.3982575535774231, 0.39751875400543213, 0.39350059628486633, 0.39071980118751526, 0.3923526108264923, 0.38614729046821594, 0.38964518904685974, 0.3908194601535797, 0.3843268156051636, 0.3830668032169342, 0.3814016878604889, 0.3792087137699127, 0.37860727310180664, 0.37958618998527527, 0.3720371127128601, 0.3762446641921997, 0.37855032086372375, 0.3766658902168274, 0.371761679649353, 0.3725746273994446, 0.37133869528770447, 0.37355050444602966, 0.37144869565963745, 0.3679027557373047, 0.36334460973739624, 0.364667683839798, 0.36351248621940613, 0.3720165193080902, 0.36178040504455566, 0.3601464331150055, 0.3644029498100281, 0.36364224553108215, 0.3600521683692932, 0.3576444387435913, 0.3658023178577423], "val_accuracy": [0.5223333239555359, 0.6543333530426025, 0.675000011920929, 0.7023333311080933, 0.7336666584014893, 0.7476666569709778, 0.7593333125114441, 0.7683333158493042, 0.7793333530426025, 0.7876666784286499, 0.796999990940094, 0.8083333373069763, 0.8140000104904175, 0.8119999766349792, 0.8220000267028809, 0.8236666917800903, 0.8293333053588867, 0.8333333134651184, 0.8330000042915344, 0.8383333086967468, 0.8336666822433472, 0.8303333520889282, 0.8443333506584167, 0.8460000157356262, 0.8423333168029785, 0.8443333506584167, 0.8483333587646484, 0.8489999771118164, 0.8523333072662354, 0.8560000061988831, 0.8536666631698608, 0.8519999980926514, 0.8533333539962769, 0.8543333411216736, 0.8566666841506958, 0.8606666922569275, 0.859666645526886, 0.8610000014305115, 0.859333336353302, 0.8600000143051147, 0.8629999756813049, 0.8560000061988831, 0.8610000014305115, 0.8613333106040955, 0.8656666874885559, 0.8640000224113464, 0.8606666922569275, 0.8646666407585144, 0.8653333187103271, 0.8673333525657654, 0.8619999885559082, 0.8653333187103271, 0.8640000224113464, 0.8690000176429749, 0.8669999837875366, 0.8666666746139526, 0.8690000176429749, 0.8650000095367432, 0.8703333139419556, 0.8669999837875366, 0.8700000047683716, 0.8706666827201843, 0.8640000224113464, 0.8693333268165588, 0.8726666569709778, 0.8690000176429749, 0.8673333525657654, 0.8713333606719971, 0.8700000047683716, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 2, 0, 3], [23, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 1, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 3, 6], [16, 89, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 28, 15, 13, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))))), sigma), tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 8, 3], [0, 2, 2, 2], [39, 39], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 33, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 24, 14, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.math.negative(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1, 1, 8, 6, 0, 4, 6, 5, 7, 8], [0, 1, 0, 2, 0, 3, 2, 1, 3, 0], [49, 92, 14, 26], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 15, 10, 4, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(grad, alpha)), tf.math.sqrt(grad))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 1, 0], [0, 3, 0, 3, 4], [78, 16], [0, 0, 1, 1], [0, 6], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 2, 4, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [16, 99, 82, 99, 50, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 12, 7, 5, 2, 4, 2, 2, 1, 22, 12, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.sqrt(alpha))))), beta), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3136565685272217, 2.3402767181396484, 2.4042561054229736, 2.576709747314453, 3.6553399562835693, 561.0040893554688, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.07396645098924637, 0.06168273836374283, 0.07357019931077957, 0.0870426595211029, 0.09998679161071777, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.323791980743408, 2.3704922199249268, 2.470764398574829, 2.811147689819336, 8.04683780670166, 151885.71875, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.08966666460037231, 0.09133332967758179, 0.09966666996479034, 0.10333333164453506, 0.10333333164453506, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]