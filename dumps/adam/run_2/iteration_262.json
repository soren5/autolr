[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224151611328125, 1.8773287534713745, 1.3932244777679443, 1.0978083610534668, 0.9417939782142639, 0.8411341905593872, 0.7670304179191589, 0.729375958442688, 0.6876574158668518, 0.6592353582382202, 0.6380981802940369, 0.6131343841552734, 0.5865128636360168, 0.5739482641220093, 0.5467139482498169, 0.5414353609085083, 0.5295793414115906, 0.5219092965126038, 0.5074628591537476, 0.49803590774536133, 0.4913140535354614, 0.4887358546257019, 0.4721620976924896, 0.46584001183509827, 0.4598333239555359, 0.44375067949295044, 0.435690313577652, 0.4310516119003296, 0.4244431257247925, 0.4140417277812958, 0.41274115443229675, 0.40850698947906494, 0.40237367153167725, 0.3950643539428711, 0.38712558150291443, 0.3870907723903656, 0.37612080574035645, 0.3703659772872925, 0.36738213896751404, 0.36121803522109985, 0.36160507798194885, 0.3525823950767517, 0.3517163395881653, 0.34624937176704407, 0.3385327458381653, 0.33759960532188416, 0.3268461227416992, 0.3251819312572479, 0.32380273938179016, 0.3203645646572113, 0.3135797381401062, 0.30965280532836914, 0.3036561608314514, 0.30000823736190796, 0.29320040345191956, 0.286273330450058, 0.28855547308921814, 0.2869861423969269, 0.2835947275161743, 0.27611368894577026, 0.2687269449234009, 0.2654763460159302, 0.26387858390808105, 0.2580801546573639, 0.25953465700149536, 0.24918577075004578, 0.2512175738811493, 0.24712929129600525, 0.24735894799232483, 0.24133947491645813, 0.23149873316287994, 0.23459628224372864, 0.22067591547966003, 0.21506816148757935, 0.22584445774555206, 0.22022895514965057, 0.21808020770549774, 0.21309779584407806], "accuracy": [0.27578920125961304, 0.47866860032081604, 0.5696737766265869, 0.6188086271286011, 0.666358470916748, 0.6988508701324463, 0.7272487282752991, 0.7364945411682129, 0.7481178045272827, 0.7627789974212646, 0.7680623531341553, 0.7808743715286255, 0.787082314491272, 0.7957997918128967, 0.8017435073852539, 0.8053097128868103, 0.8061022162437439, 0.8127063512802124, 0.8195747137069702, 0.8201030492782593, 0.8216879963874817, 0.8222163319587708, 0.8309338092803955, 0.833179235458374, 0.837141752243042, 0.8432175517082214, 0.8442742228507996, 0.8457271456718445, 0.8498216867446899, 0.8520671129226685, 0.8557654023170471, 0.8499537706375122, 0.8556333184242249, 0.8576145768165588, 0.8627657890319824, 0.8605204224586487, 0.8660678863525391, 0.8698983192443848, 0.8672566413879395, 0.8698983192443848, 0.8697662353515625, 0.8749174475669861, 0.8732003569602966, 0.8742570281028748, 0.880729079246521, 0.8775591254234314, 0.882710337638855, 0.8816536664962769, 0.8848236799240112, 0.8840311765670776, 0.8874653577804565, 0.8887861371040344, 0.8881257176399231, 0.8887861371040344, 0.8949940800666809, 0.8931449055671692, 0.8930128216743469, 0.8965790271759033, 0.8949940800666809, 0.8969752788543701, 0.9000132083892822, 0.9033153057098389, 0.9022586345672607, 0.9080702662467957, 0.9054285883903503, 0.9103156924247742, 0.909259021282196, 0.9074098467826843, 0.9072777628898621, 0.9133535623550415, 0.9162594079971313, 0.9153348207473755, 0.9208822846412659, 0.9243164658546448, 0.9187690019607544, 0.9198256731033325, 0.9194294214248657, 0.9225993752479553], "val_loss": [2.0422041416168213, 1.5267281532287598, 1.0463230609893799, 0.8391104340553284, 0.7451815605163574, 0.6895473599433899, 0.6456466913223267, 0.6127905249595642, 0.5831009745597839, 0.558479368686676, 0.541548490524292, 0.5242802500724792, 0.5184019804000854, 0.50290447473526, 0.48978734016418457, 0.4785347878932953, 0.46964573860168457, 0.4668247401714325, 0.46504053473472595, 0.4532150328159332, 0.4500388205051422, 0.43527674674987793, 0.4346032738685608, 0.43012598156929016, 0.4215567111968994, 0.4162593185901642, 0.41607001423835754, 0.4079587459564209, 0.4061130881309509, 0.4046470820903778, 0.3994532823562622, 0.3994206190109253, 0.3892081677913666, 0.3909481465816498, 0.38356420397758484, 0.38778895139694214, 0.37939193844795227, 0.379244863986969, 0.37359049916267395, 0.3770599067211151, 0.3774352967739105, 0.37307047843933105, 0.3689393699169159, 0.3643343150615692, 0.36454516649246216, 0.365222692489624, 0.36265918612480164, 0.3572881817817688, 0.36609992384910583, 0.35619017481803894, 0.3599441647529602, 0.35099896788597107, 0.34814348816871643, 0.34695425629615784, 0.34884265065193176, 0.34950992465019226, 0.34360724687576294, 0.35631489753723145, 0.3524706959724426, 0.340874582529068, 0.342805951833725, 0.3411045968532562, 0.33906498551368713, 0.34074869751930237, 0.33644959330558777, 0.3399328589439392, 0.3402651250362396, 0.3389451801776886, 0.33676278591156006, 0.3328055441379547, 0.3325468599796295, 0.3316129446029663, 0.33572614192962646, 0.3327096104621887, 0.33662882447242737, 0.33658820390701294, 0.33256828784942627, 0.3302561342716217], "val_accuracy": [0.5493333339691162, 0.6443333625793457, 0.6859999895095825, 0.7096666693687439, 0.7409999966621399, 0.7639999985694885, 0.7710000276565552, 0.7820000052452087, 0.7910000085830688, 0.8076666593551636, 0.809333324432373, 0.8116666674613953, 0.8140000104904175, 0.828000009059906, 0.8270000219345093, 0.8363333344459534, 0.8420000076293945, 0.8353333473205566, 0.8336666822433472, 0.8383333086967468, 0.8450000286102295, 0.8506666421890259, 0.8493333458900452, 0.8496666550636292, 0.8529999852180481, 0.8543333411216736, 0.8550000190734863, 0.859666645526886, 0.862333357334137, 0.8616666793823242, 0.8610000014305115, 0.859333336353302, 0.8650000095367432, 0.862333357334137, 0.8683333396911621, 0.8636666536331177, 0.8706666827201843, 0.8700000047683716, 0.8730000257492065, 0.8700000047683716, 0.8696666955947876, 0.8706666827201843, 0.8723333477973938, 0.875333309173584, 0.875, 0.871999979019165, 0.875, 0.8763333559036255, 0.8713333606719971, 0.8763333559036255, 0.8723333477973938, 0.8756666779518127, 0.878333330154419, 0.8796666860580444, 0.8759999871253967, 0.8786666393280029, 0.8803333044052124, 0.8776666522026062, 0.8796666860580444, 0.8793333172798157, 0.8823333382606506, 0.8833333253860474, 0.8809999823570251, 0.8823333382606506, 0.8840000033378601, 0.8809999823570251, 0.8856666684150696, 0.8836666941642761, 0.8846666812896729, 0.8859999775886536, 0.8846666812896729, 0.8859999775886536, 0.8893333077430725, 0.8863333463668823, 0.8843333125114441, 0.8856666684150696, 0.887666642665863, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [61, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [4, 99, 96, 11, 61, 1]], "fitness": -0.10599999874830246, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3059897422790527, 2.302612781524658, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09391097724437714, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.30263614654541, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10700000077486038, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 42], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 16], [0, 1, 1], [2], [0, 6], [99], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036439418792725, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 0, 1, 0, 10, 7, 3, 2, 3, 1, 2, 1, 5, 2, 3, 3], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 1, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [278285760.0, 944271552.0, 3627501824.0, 8533352448.0, 8583992832.0, 8608129024.0], "accuracy": [0.10394927859306335, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [659627456.0, 3394995456.0, 8313134080.0, 8375395328.0, 8400708608.0, 8424259584.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 16]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3095600605010986, 2.31085467338562, 2.3094558715820312, 2.3087639808654785, 2.309020757675171, 2.3088526725769043], "accuracy": [0.09879804402589798, 0.08981640636920929, 0.09377889335155487, 0.09285431355237961, 0.09391097724437714, 0.09628847241401672], "val_loss": [2.308716297149658, 2.308716297149658, 2.308716297149658, 2.308716297149658, 2.308716297149658, 2.308716297149658], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]