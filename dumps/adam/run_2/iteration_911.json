[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225466251373291, 1.8716185092926025, 1.4002728462219238, 1.0888067483901978, 0.9252371788024902, 0.849820613861084, 0.768767237663269, 0.7319203615188599, 0.6976444125175476, 0.6543445587158203, 0.6322352290153503, 0.6126824021339417, 0.5880323052406311, 0.5768559575080872, 0.5588562488555908, 0.5510410666465759, 0.5319279432296753, 0.5168740153312683, 0.5004588961601257, 0.4951460361480713, 0.4840576648712158, 0.4692840278148651, 0.4609576463699341, 0.4573381841182709, 0.4414108395576477, 0.4411804676055908, 0.4357151687145233, 0.42382392287254333, 0.4182363450527191, 0.4100780189037323, 0.4014815092086792, 0.39527422189712524, 0.3917216956615448, 0.3851844370365143, 0.3817749321460724, 0.3719424903392792, 0.36958786845207214, 0.3673641085624695, 0.35345572233200073, 0.35413873195648193, 0.3500455319881439, 0.34576043486595154, 0.33724266290664673, 0.3280234932899475, 0.326007217168808, 0.32848209142684937, 0.3090415298938751, 0.30883851647377014, 0.3067536950111389, 0.2972031831741333, 0.29615679383277893, 0.2895808219909668, 0.2907078266143799, 0.2872949242591858, 0.28796514868736267, 0.28221389651298523, 0.275349497795105, 0.2677159309387207, 0.2652657628059387, 0.2613796293735504, 0.2576230466365814, 0.24503181874752045, 0.2518919110298157, 0.24276261031627655, 0.24026262760162354, 0.23562407493591309, 0.23587995767593384, 0.23031756281852722, 0.2345614731311798, 0.22899512946605682], "accuracy": [0.26958128809928894, 0.4773477613925934, 0.5626733303070068, 0.6156386137008667, 0.6750759482383728, 0.6966054439544678, 0.726192057132721, 0.7366266250610352, 0.7489103078842163, 0.7606657147407532, 0.7689869403839111, 0.7777044177055359, 0.7824593782424927, 0.7889314293861389, 0.7997622489929199, 0.8014793395996094, 0.8095363974571228, 0.8124422430992126, 0.8206313848495483, 0.8277638554573059, 0.8278959393501282, 0.8314621448516846, 0.8372738361358643, 0.8355567455291748, 0.8436138033866882, 0.8437458872795105, 0.848368763923645, 0.848368763923645, 0.8502179384231567, 0.8556333184242249, 0.8535200357437134, 0.8598600029945374, 0.8626337051391602, 0.8627657890319824, 0.8650112152099609, 0.8710870146751404, 0.8664641380310059, 0.8668603897094727, 0.8749174475669861, 0.8708229064941406, 0.876370370388031, 0.8791441321372986, 0.8812574148178101, 0.8805969953536987, 0.8815215826034546, 0.8844274282455444, 0.886672854423523, 0.8886540532112122, 0.8934090733528137, 0.8945978283882141, 0.896446943283081, 0.8975036144256592, 0.896446943283081, 0.8988244533538818, 0.8957865834236145, 0.9017302989959717, 0.9015982151031494, 0.9041078090667725, 0.9050323367118835, 0.9070135951042175, 0.913089394569397, 0.9137498140335083, 0.9091269373893738, 0.9117686152458191, 0.9125610589981079, 0.9140139818191528, 0.9163914918899536, 0.9185048341751099, 0.9171839952468872, 0.9173160791397095], "val_loss": [2.0410168170928955, 1.516248345375061, 1.0317438840866089, 0.8128426671028137, 0.7188980579376221, 0.6609179973602295, 0.6221978068351746, 0.5848844051361084, 0.5563052296638489, 0.5336388945579529, 0.5177380442619324, 0.5022491216659546, 0.4857173562049866, 0.4764752686023712, 0.47095543146133423, 0.4531175494194031, 0.44637390971183777, 0.4375663101673126, 0.43054625391960144, 0.4199375510215759, 0.411738783121109, 0.41098612546920776, 0.3988175392150879, 0.39569371938705444, 0.38942575454711914, 0.3872477114200592, 0.38037997484207153, 0.378122478723526, 0.3774814307689667, 0.36820101737976074, 0.3707408905029297, 0.36193305253982544, 0.35749346017837524, 0.36339712142944336, 0.35818690061569214, 0.3507470190525055, 0.35010266304016113, 0.3505474328994751, 0.35313668847084045, 0.34560611844062805, 0.33808812499046326, 0.3375060558319092, 0.3359367549419403, 0.33388832211494446, 0.3370882272720337, 0.3293873965740204, 0.32849326729774475, 0.3256371319293976, 0.3243550658226013, 0.3233552575111389, 0.32070696353912354, 0.3186950981616974, 0.32070446014404297, 0.3189525306224823, 0.32270780205726624, 0.31753236055374146, 0.3211473822593689, 0.3155963718891144, 0.3102719485759735, 0.3092225193977356, 0.31289371848106384, 0.31432607769966125, 0.3128701448440552, 0.3165401518344879, 0.3065353333950043, 0.3101482689380646, 0.31125661730766296, 0.31608808040618896, 0.3109046518802643, 0.312299519777298], "val_accuracy": [0.5606666803359985, 0.668666660785675, 0.6903333067893982, 0.722000002861023, 0.7403333187103271, 0.7580000162124634, 0.7670000195503235, 0.7756666541099548, 0.7846666574478149, 0.7990000247955322, 0.8069999814033508, 0.8119999766349792, 0.8173333406448364, 0.8230000138282776, 0.8240000009536743, 0.8306666612625122, 0.8330000042915344, 0.8316666483879089, 0.8363333344459534, 0.8423333168029785, 0.8433333039283752, 0.8463333249092102, 0.8506666421890259, 0.8476666808128357, 0.8543333411216736, 0.8556666374206543, 0.8533333539962769, 0.856333315372467, 0.8539999723434448, 0.8583333492279053, 0.859000027179718, 0.862666666507721, 0.8686666488647461, 0.862333357334137, 0.8633333444595337, 0.8693333268165588, 0.8659999966621399, 0.8709999918937683, 0.8633333444595337, 0.8679999709129333, 0.871666669845581, 0.8693333268165588, 0.871666669845581, 0.8726666569709778, 0.8736666440963745, 0.8756666779518127, 0.8766666650772095, 0.8773333430290222, 0.8796666860580444, 0.878000020980835, 0.8786666393280029, 0.8796666860580444, 0.8796666860580444, 0.8826666474342346, 0.878333330154419, 0.8820000290870667, 0.8796666860580444, 0.8833333253860474, 0.8863333463668823, 0.8853333592414856, 0.8846666812896729, 0.887666642665863, 0.8863333463668823, 0.8846666812896729, 0.8896666765213013, 0.8893333077430725, 0.8880000114440918, 0.887666642665863, 0.887666642665863, 0.8883333206176758]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 8, 6, 0, 3, 5, 4, 1, 3, 7, 5, 9, 9], [0, 2, 0, 3, 4], [16, 16, 6, 89], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 52, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 18, 13, 5, 4, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.5117998123168945, 58.81194305419922, 203.23536682128906, 500.6428527832031, 1011.2645874023438, 1781.0260009765625], "accuracy": [0.09536388516426086, 0.09760929644107819, 0.09998679161071777, 0.1026284471154213, 0.09760929644107819, 0.10328886657953262], "val_loss": [20.585838317871094, 96.35748291015625, 267.09149169921875, 582.1234130859375, 1090.32470703125, 1840.989013671875], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3], [1, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 9, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 5, 0, 6, 5], [0, 3, 0, 3], [16, 16], [0, 0, 0, 1], [0, 4, 9], [0], [99, 45], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 4, 2, 2, 5, 4, 1, 1, 4, 3, 1, 2, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.308654308319092, 2.3102612495422363, 2.309427261352539, 2.309349298477173, 2.310349941253662, 2.3091940879821777], "accuracy": [0.09721305221319199, 0.08809932321310043, 0.0886276587843895, 0.09100515395402908, 0.08968432247638702, 0.09245806187391281], "val_loss": [2.308621406555176, 2.308621406555176, 2.308621406555176, 2.308621406555176, 2.308621406555176, 2.308621406555176], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3], [0, 1, 0, 2], [64, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 7, 1, 8, 5, 4, 4, 6, 8, 3, 7, 3], [0, 2, 0, 3, 0, 5, 2, 0, 4, 1, 2, 2, 2], [16, 16, 99, 39], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 6, 0, 2, 2], [0, 0, 0, 3, 3, 4, 3, 1, 2, 0], [56, 99, 96, 99, 61, 1]], "fitness": -0.05428571254014969, "mapping_values": [1, 2, 1, 1, 1, 31, 18, 13, 4, 2, 1, 1, 0, 13, 7, 6, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.pow(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.multiply(alpha, tf.math.add(beta, tf.math.multiply(beta, beta)))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), sigma)), grad)", "other_info": {"loss": [8.522291434068378e+16, 9.669910990526874e+16, 9.897149120223642e+16, 9.649060642291712e+16, 9.712656223043584e+16, 1.0060303760883712e+17], "accuracy": [0.07753269374370575, 0.07119271159172058, 0.07357019931077957, 0.07317395508289337, 0.07660810649394989, 0.068815216422081], "val_loss": [7.64716865468498e+16, 7.64716865468498e+16, 7.647141166894285e+16, 7.647141166894285e+16, 7.647139448907366e+16, 7.647139448907366e+16], "val_accuracy": [0.05299999937415123, 0.05299999937415123, 0.05299999937415123, 0.05299999937415123, 0.05299999937415123, 0.05299999937415123]}}]