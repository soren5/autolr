[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2245211601257324, 1.8687142133712769, 1.398657202720642, 1.100369930267334, 0.9369778633117676, 0.8452116250991821, 0.7696612477302551, 0.7319529056549072, 0.6832114458084106, 0.6627020239830017, 0.638713002204895, 0.616647481918335, 0.5990712642669678, 0.5701963901519775, 0.5496461987495422, 0.5461899638175964, 0.5338237881660461, 0.519280731678009, 0.5049070119857788, 0.5020925402641296, 0.4843316972255707, 0.47861698269844055, 0.4680328071117401, 0.4537305235862732, 0.4399126470088959, 0.44065138697624207, 0.4377398192882538, 0.4282044768333435, 0.4179104268550873, 0.4162364602088928, 0.4083528518676758, 0.4013483226299286, 0.3961419463157654, 0.39170965552330017, 0.38608476519584656, 0.38026052713394165, 0.36626285314559937, 0.3683318793773651, 0.3610333502292633, 0.3552989065647125, 0.35723215341567993, 0.3540891706943512, 0.3466053009033203, 0.33281368017196655, 0.3327444791793823, 0.3221537172794342, 0.3203623294830322, 0.32093140482902527, 0.3090842366218567, 0.30835503339767456, 0.30374714732170105, 0.29762834310531616, 0.29218539595603943, 0.29763665795326233, 0.2915284335613251, 0.28807786107063293, 0.27779972553253174, 0.28140735626220703, 0.2623870372772217, 0.26815763115882874, 0.26072606444358826, 0.26220694184303284, 0.25469526648521423, 0.2518116235733032, 0.24585846066474915, 0.24105526506900787, 0.24268794059753418, 0.23834052681922913, 0.23505620658397675, 0.22915124893188477, 0.22834141552448273, 0.22015757858753204, 0.2202882021665573, 0.2157130241394043, 0.21851609647274017, 0.20958419144153595], "accuracy": [0.26363757252693176, 0.4912164807319641, 0.5614846348762512, 0.6126006841659546, 0.6670188903808594, 0.7025492191314697, 0.7250033020973206, 0.7380794882774353, 0.7543256878852844, 0.759609043598175, 0.7687227725982666, 0.7753269076347351, 0.7794214487075806, 0.7891955971717834, 0.7960638999938965, 0.7993659973144531, 0.8058380484580994, 0.8123101592063904, 0.817461371421814, 0.8149517774581909, 0.8267071843147278, 0.8277638554573059, 0.8278959393501282, 0.834632158279419, 0.8437458872795105, 0.8428213000297546, 0.8432175517082214, 0.8469158411026001, 0.8532558679580688, 0.8473120927810669, 0.8520671129226685, 0.8519350290298462, 0.8541803956031799, 0.8601241707801819, 0.8595958352088928, 0.857218325138092, 0.8689737319946289, 0.8679170608520508, 0.8687095642089844, 0.8746532797813416, 0.8701624870300293, 0.8746532797813416, 0.8728041052818298, 0.8782195448875427, 0.8770307898521423, 0.8828424215316772, 0.8821820020675659, 0.8829745054244995, 0.887201189994812, 0.8854840993881226, 0.8883898854255676, 0.8947299122810364, 0.8948619961738586, 0.8882578015327454, 0.8965790271759033, 0.8963148593902588, 0.896446943283081, 0.900409460067749, 0.9027869701385498, 0.9009377956390381, 0.9043719172477722, 0.9029190540313721, 0.9076740145683289, 0.9076740145683289, 0.9099194407463074, 0.9115044474601746, 0.91124027967453, 0.9121648669242859, 0.9146744012832642, 0.91559898853302, 0.9196935892105103, 0.9212785363197327, 0.919561505317688, 0.9223352074623108, 0.9212785363197327, 0.9251089692115784], "val_loss": [2.0372962951660156, 1.5115573406219482, 1.0381890535354614, 0.8345548510551453, 0.7505058646202087, 0.6913886666297913, 0.6466211676597595, 0.6121518611907959, 0.584467351436615, 0.5577419996261597, 0.5474376678466797, 0.5218587517738342, 0.5077467560768127, 0.49572160840034485, 0.48032093048095703, 0.4733527898788452, 0.46527838706970215, 0.4591805934906006, 0.45708468556404114, 0.4478585720062256, 0.44376954436302185, 0.4265599846839905, 0.4245595633983612, 0.41785377264022827, 0.4114406704902649, 0.40823227167129517, 0.4156438708305359, 0.40967896580696106, 0.4001523554325104, 0.39579829573631287, 0.39296847581863403, 0.39076411724090576, 0.39475998282432556, 0.3833746314048767, 0.38379737734794617, 0.3803652822971344, 0.37638363242149353, 0.3809245228767395, 0.3785736858844757, 0.37558385729789734, 0.36945807933807373, 0.3739514648914337, 0.3657163083553314, 0.36688414216041565, 0.3667675852775574, 0.36236831545829773, 0.3640490770339966, 0.3562152087688446, 0.36302676796913147, 0.3604177236557007, 0.3585434854030609, 0.35805919766426086, 0.3617933690547943, 0.35263875126838684, 0.35654523968696594, 0.3549850583076477, 0.3562611937522888, 0.34970948100090027, 0.35557451844215393, 0.36170655488967896, 0.35015493631362915, 0.3519972264766693, 0.35450345277786255, 0.3501579463481903, 0.35103297233581543, 0.3477345407009125, 0.3481777310371399, 0.34798428416252136, 0.34435731172561646, 0.3506808280944824, 0.3448215425014496, 0.3486282229423523, 0.3478236496448517, 0.34478259086608887, 0.3565729856491089, 0.3504234254360199], "val_accuracy": [0.5406666398048401, 0.6743333339691162, 0.6923333406448364, 0.7153333425521851, 0.7283333539962769, 0.7480000257492065, 0.7696666717529297, 0.7666666507720947, 0.7876666784286499, 0.7979999780654907, 0.7929999828338623, 0.8083333373069763, 0.8166666626930237, 0.8196666836738586, 0.824999988079071, 0.8306666612625122, 0.8376666903495789, 0.8370000123977661, 0.8346666693687439, 0.8383333086967468, 0.8370000123977661, 0.8483333587646484, 0.8450000286102295, 0.8483333587646484, 0.8539999723434448, 0.8506666421890259, 0.8463333249092102, 0.8476666808128357, 0.8533333539962769, 0.8556666374206543, 0.859666645526886, 0.859666645526886, 0.8560000061988831, 0.862666666507721, 0.8573333621025085, 0.8606666922569275, 0.8666666746139526, 0.8656666874885559, 0.8653333187103271, 0.8663333058357239, 0.8669999837875366, 0.8669999837875366, 0.8683333396911621, 0.8650000095367432, 0.8656666874885559, 0.8703333139419556, 0.8679999709129333, 0.871999979019165, 0.8696666955947876, 0.8709999918937683, 0.8726666569709778, 0.871999979019165, 0.8726666569709778, 0.8726666569709778, 0.8703333139419556, 0.875, 0.8676666617393494, 0.875333309173584, 0.8740000128746033, 0.8693333268165588, 0.8736666440963745, 0.8763333559036255, 0.8733333349227905, 0.8759999871253967, 0.8793333172798157, 0.8803333044052124, 0.8773333430290222, 0.8766666650772095, 0.8790000081062317, 0.8790000081062317, 0.8820000290870667, 0.878000020980835, 0.8796666860580444, 0.878333330154419, 0.8756666779518127, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 72], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3053808212280273, 2.302584648132324, 2.3025827407836914, 2.3025803565979004, 2.302574634552002, 2.302560567855835], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025856018066406, 2.3025879859924316, 2.3025922775268555, 2.3026084899902344, 2.302675247192383], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2, 4], [0, 1, 1, 2, 3, 1], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 2, 0, 6, 5, 9], [0, 3, 0, 3], [16, 16, 14], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 8, 0, 5, 5], [0, 0, 0, 3, 4, 4, 3, 2, 2, 3, 2], [16, 99, 4, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 1, 10, 7, 3, 3, 2, 1, 1, 1, 27, 16, 11, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(grad, grad)), sigma)))), tf.math.sqrt(tf.math.pow(beta, beta)))), sigma), tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.square(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 5, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [16, 99, 51, 43, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.pow(alpha, beta))))), tf.math.square(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 6, 4, 2, 2, 6, 3, 3, 2, 2, 1, 1, 1, 26, 15, 11, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [44, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 0, 6, 1, 4, 2, 4, 2, 8, 9], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 82, 96, 99, 56, 1]], "fitness": -0.08942857384681702, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), alpha), beta)", "other_info": {"loss": [2.3088855743408203, 2.3106942176818848, 2.3093013763427734, 2.309607744216919, 2.309640884399414, 2.310189723968506], "accuracy": [0.09536388516426086, 0.08928807079792023, 0.08994849026203156, 0.09087307006120682, 0.09642054885625839, 0.09060890227556229], "val_loss": [2.3087031841278076, 2.3087031841278076, 2.3087031841278076, 2.3087031841278076, 2.3087031841278076, 2.3087031841278076], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 22}]