[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220810651779175, 1.8583580255508423, 1.3808765411376953, 1.0913138389587402, 0.9306669235229492, 0.8385900855064392, 0.7722969055175781, 0.7239755392074585, 0.690586268901825, 0.6597272753715515, 0.6347535252571106, 0.6148291826248169, 0.588162899017334, 0.575891375541687, 0.5610564351081848, 0.5510433912277222, 0.5441980361938477, 0.5289453864097595, 0.513873279094696, 0.4891120195388794, 0.5011765956878662, 0.4835640490055084, 0.4720364212989807, 0.46106386184692383, 0.45416244864463806, 0.44544368982315063, 0.4347500801086426, 0.4370497167110443, 0.4307096302509308, 0.42448586225509644, 0.4217827618122101, 0.406095415353775, 0.3971564769744873, 0.39949309825897217, 0.387712687253952, 0.3838135004043579, 0.381299763917923, 0.37463435530662537, 0.37449929118156433, 0.364443302154541, 0.358608603477478, 0.34735119342803955, 0.352538526058197, 0.3424508273601532, 0.3434314727783203, 0.3379758894443512, 0.3373691439628601, 0.3302468955516815, 0.3226020634174347, 0.3211762011051178, 0.32245516777038574, 0.30927738547325134, 0.30385294556617737, 0.3042197525501251, 0.298285573720932, 0.3002815544605255, 0.29527735710144043, 0.29295551776885986, 0.28675636649131775, 0.2850043773651123, 0.2754412889480591, 0.26699337363243103, 0.27793335914611816, 0.27540287375450134, 0.27087533473968506, 0.2617081105709076, 0.26437288522720337, 0.2555138170719147, 0.24251128733158112, 0.24835115671157837, 0.24439091980457306], "accuracy": [0.2849029302597046, 0.4947827160358429, 0.564258337020874, 0.6213181614875793, 0.6600185036659241, 0.6975300312042236, 0.7211728692054749, 0.7359662055969238, 0.7489103078842163, 0.7621186375617981, 0.7670056819915771, 0.7737419009208679, 0.7893276810646057, 0.7901201844215393, 0.7985734939575195, 0.796328067779541, 0.8041210174560547, 0.8079513907432556, 0.817461371421814, 0.8240655064582825, 0.817989706993103, 0.8224804997444153, 0.8277638554573059, 0.8278959393501282, 0.8337075710296631, 0.8367455005645752, 0.8428213000297546, 0.8438779711723328, 0.8442742228507996, 0.8487650156021118, 0.8473120927810669, 0.8518029451370239, 0.8558974862098694, 0.8500858545303345, 0.8581429123878479, 0.8599920868873596, 0.8631620407104492, 0.8647470474243164, 0.8621054291725159, 0.8706908226013184, 0.8737286925315857, 0.8757099509239197, 0.8713511824607849, 0.8775591254234314, 0.8728041052818298, 0.8771628737449646, 0.8776912093162537, 0.8775591254234314, 0.884691596031189, 0.8838990926742554, 0.8802007436752319, 0.8889182209968567, 0.8887861371040344, 0.8881257176399231, 0.8901069760322571, 0.8897107243537903, 0.8932769894599915, 0.8931449055671692, 0.8957865834236145, 0.8976356983184814, 0.8982961177825928, 0.9010698795318604, 0.8971073627471924, 0.8975036144256592, 0.9014661312103271, 0.9049002528190613, 0.9059569239616394, 0.9079381823539734, 0.9100515246391296, 0.9093911051750183, 0.9115044474601746], "val_loss": [2.036972761154175, 1.5113914012908936, 1.0502322912216187, 0.8419332504272461, 0.7586746215820312, 0.6929265856742859, 0.6484411358833313, 0.6116544008255005, 0.5812788009643555, 0.5621174573898315, 0.5392374396324158, 0.522731602191925, 0.5061450004577637, 0.49652448296546936, 0.48414313793182373, 0.47417113184928894, 0.4741472899913788, 0.4572540819644928, 0.44809770584106445, 0.44421643018722534, 0.4388257563114166, 0.4299375116825104, 0.42671501636505127, 0.4217299818992615, 0.41430550813674927, 0.40678805112838745, 0.40245112776756287, 0.4026492238044739, 0.4016350209712982, 0.4003913700580597, 0.39587488770484924, 0.38798031210899353, 0.3821055591106415, 0.38494324684143066, 0.38618138432502747, 0.3797319829463959, 0.3777024745941162, 0.3723525404930115, 0.3743473291397095, 0.3733246922492981, 0.3650412857532501, 0.36869096755981445, 0.36408552527427673, 0.3642106056213379, 0.3628208041191101, 0.3606337904930115, 0.356731653213501, 0.36113280057907104, 0.3600899279117584, 0.3578331768512726, 0.3507934510707855, 0.3496136963367462, 0.35261401534080505, 0.3517071008682251, 0.3529208302497864, 0.3549603223800659, 0.3472647964954376, 0.3477225601673126, 0.3532486855983734, 0.3465318977832794, 0.34700268507003784, 0.34699252247810364, 0.3456183671951294, 0.34313151240348816, 0.34053894877433777, 0.34207773208618164, 0.3397820293903351, 0.3401683270931244, 0.34447917342185974, 0.3395947217941284, 0.34449708461761475], "val_accuracy": [0.5299999713897705, 0.6476666927337646, 0.6753333210945129, 0.7073333263397217, 0.7253333330154419, 0.7379999756813049, 0.7603333592414856, 0.7693333625793457, 0.7816666960716248, 0.7916666865348816, 0.8076666593551636, 0.8069999814033508, 0.8176666498184204, 0.8240000009536743, 0.8259999752044678, 0.8306666612625122, 0.8246666789054871, 0.8303333520889282, 0.8433333039283752, 0.8460000157356262, 0.8473333120346069, 0.8503333330154419, 0.8460000157356262, 0.8516666889190674, 0.8573333621025085, 0.8566666841506958, 0.8556666374206543, 0.8586666584014893, 0.8569999933242798, 0.8503333330154419, 0.8636666536331177, 0.8640000224113464, 0.8629999756813049, 0.8633333444595337, 0.8633333444595337, 0.8666666746139526, 0.8633333444595337, 0.8646666407585144, 0.8703333139419556, 0.8666666746139526, 0.8700000047683716, 0.8679999709129333, 0.8696666955947876, 0.8706666827201843, 0.8713333606719971, 0.8690000176429749, 0.871666669845581, 0.8730000257492065, 0.8700000047683716, 0.8700000047683716, 0.875, 0.8766666650772095, 0.875333309173584, 0.8759999871253967, 0.875, 0.8723333477973938, 0.8773333430290222, 0.8759999871253967, 0.8756666779518127, 0.8776666522026062, 0.8793333172798157, 0.8769999742507935, 0.8790000081062317, 0.8799999952316284, 0.8786666393280029, 0.8803333044052124, 0.878000020980835, 0.8786666393280029, 0.8776666522026062, 0.8803333044052124, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 4, 0], [16, 99, 96, 62, 61, 1]], "fitness": -0.11742857098579407, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 2, 0, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [62593964179456.0, 71948914655232.0, 70958907916288.0, 71234096201728.0, 72427526684672.0, 71217763581952.0], "accuracy": [0.10434553027153015, 0.1018359512090683, 0.10434553027153015, 0.10157178342342377, 0.09813763201236725, 0.10157178342342377], "val_loss": [56582368919552.0, 56582368919552.0, 56582322782208.0, 56582322782208.0, 56582322782208.0, 56582310199296.0], "val_accuracy": [0.11900000274181366, 0.11900000274181366, 0.11900000274181366, 0.11900000274181366, 0.11900000274181366, 0.11900000274181366]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [9, 2, 9, 0, 3], [2, 1, 0, 2], [39, 40], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 5], [0, 2, 3, 0], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 2, 0, 3, 1, 2, 0], [77, 99, 69, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, beta)), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [38052298752.0, 5876214136832.0, 111603282345984.0, 1136704568164352.0, 1.2807685892210688e+16, 1.3072427891084493e+17], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.1010434553027153, 0.09826971590518951, 0.1002509593963623, 0.09959053993225098], "val_loss": [389537562624.0, 21430498492416.0, 286419054493696.0, 2658239548227584.0, 4.737314138252902e+16, 6373078632235008.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 7, 2], [0, 1, 2, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 3, 0, 2, 2], [3, 2, 0, 3, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [2, 1, 0, 2], [50, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034987449645996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]