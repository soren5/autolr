[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241878509521484, 1.8702467679977417, 1.3977032899856567, 1.093237042427063, 0.9370399117469788, 0.8494418859481812, 0.7740854024887085, 0.7288345694541931, 0.6933556795120239, 0.654363214969635, 0.6373053789138794, 0.6181336045265198, 0.5935776233673096, 0.5754739046096802, 0.5637011528015137, 0.5502103567123413, 0.5405255556106567, 0.5176243782043457, 0.515311598777771, 0.5084093809127808, 0.49051550030708313, 0.48178035020828247, 0.4696936011314392, 0.4631964862346649, 0.45408910512924194, 0.44855788350105286, 0.4422929584980011, 0.42995551228523254, 0.423229455947876, 0.4138394892215729, 0.4089618921279907, 0.40279412269592285, 0.39929530024528503, 0.39653635025024414, 0.3882741332054138, 0.37682411074638367, 0.37841734290122986, 0.3709002733230591, 0.36473560333251953, 0.3603501617908478, 0.3525967001914978, 0.3565078675746918, 0.3465263843536377, 0.33907821774482727, 0.3319869637489319, 0.33479684591293335, 0.32266178727149963, 0.3193158209323883, 0.31256991624832153, 0.3073505461215973, 0.3053272068500519, 0.30090516805648804, 0.2947179675102234, 0.29815545678138733, 0.2960665225982666, 0.2957760691642761, 0.28067079186439514, 0.28304851055145264, 0.2688855528831482, 0.2703108489513397, 0.26566368341445923], "accuracy": [0.270109623670578, 0.48448026180267334, 0.5609562993049622, 0.6199973821640015, 0.6696605682373047, 0.693831741809845, 0.7231541275978088, 0.7380794882774353, 0.7485140562057495, 0.7664773464202881, 0.7675340175628662, 0.7791573405265808, 0.7872143983840942, 0.7885351777076721, 0.7992339134216309, 0.7998943328857422, 0.8042530417442322, 0.8157442808151245, 0.8132346868515015, 0.8201030492782593, 0.822348415851593, 0.828820526599884, 0.8321225643157959, 0.8327829837799072, 0.8387266993522644, 0.8368775844573975, 0.8411042094230652, 0.842028796672821, 0.8514066934585571, 0.852331280708313, 0.8536521196365356, 0.8574824929237366, 0.8568220734596252, 0.8584070801734924, 0.863029956817627, 0.8640866279602051, 0.8610487580299377, 0.8672566413879395, 0.8677849769592285, 0.8671245574951172, 0.8729361891746521, 0.8720116019248962, 0.8716153502464294, 0.8812574148178101, 0.8798044919967651, 0.8811253309249878, 0.883238673210144, 0.887201189994812, 0.8869370222091675, 0.887597382068634, 0.8926165699958801, 0.8924844861030579, 0.8919561505317688, 0.8916919827461243, 0.8918240666389465, 0.8930128216743469, 0.9041078090667725, 0.8980319499969482, 0.9027869701385498, 0.9017302989959717, 0.9056927561759949], "val_loss": [2.0466067790985107, 1.5279196500778198, 1.0528813600540161, 0.8416723608970642, 0.7562358379364014, 0.7035839557647705, 0.6625036001205444, 0.6265072226524353, 0.6033854484558105, 0.5829351544380188, 0.5671482086181641, 0.5535697340965271, 0.5374811887741089, 0.524793267250061, 0.510615348815918, 0.5005725622177124, 0.49057772755622864, 0.47913262248039246, 0.4693000614643097, 0.465538889169693, 0.4576967656612396, 0.4498860538005829, 0.44118714332580566, 0.4336211383342743, 0.4326895773410797, 0.4238916039466858, 0.422017902135849, 0.41745173931121826, 0.4096837639808655, 0.40522968769073486, 0.40680021047592163, 0.40266722440719604, 0.39571085572242737, 0.3946652412414551, 0.3916552662849426, 0.3929698169231415, 0.3863842785358429, 0.3829689919948578, 0.37802037596702576, 0.37575459480285645, 0.37538251280784607, 0.3707341253757477, 0.3707624077796936, 0.3663393557071686, 0.37178361415863037, 0.36151936650276184, 0.36603376269340515, 0.36129850149154663, 0.356941819190979, 0.3611202836036682, 0.3538658916950226, 0.3520340621471405, 0.35397204756736755, 0.3503716289997101, 0.34818539023399353, 0.3504788875579834, 0.3478144109249115, 0.35192734003067017, 0.3479665517807007, 0.3453696668148041, 0.3455965220928192], "val_accuracy": [0.5506666898727417, 0.6543333530426025, 0.6809999942779541, 0.703000009059906, 0.7273333072662354, 0.7433333396911621, 0.7549999952316284, 0.7713333368301392, 0.7736666798591614, 0.7836666703224182, 0.7963333129882812, 0.8013333082199097, 0.8006666898727417, 0.809333324432373, 0.8203333616256714, 0.8199999928474426, 0.8243333101272583, 0.8339999914169312, 0.8356666564941406, 0.8343333601951599, 0.8373333215713501, 0.8413333296775818, 0.8416666388511658, 0.8443333506584167, 0.8450000286102295, 0.8516666889190674, 0.8536666631698608, 0.8543333411216736, 0.8583333492279053, 0.859333336353302, 0.856333315372467, 0.8603333234786987, 0.8603333234786987, 0.8606666922569275, 0.8619999885559082, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8679999709129333, 0.8646666407585144, 0.8700000047683716, 0.8706666827201843, 0.8733333349227905, 0.8709999918937683, 0.8663333058357239, 0.8743333220481873, 0.8713333606719971, 0.8696666955947876, 0.8756666779518127, 0.8700000047683716, 0.8763333559036255, 0.875, 0.8756666779518127, 0.8773333430290222, 0.878000020980835, 0.8796666860580444, 0.874666690826416, 0.875, 0.8786666393280029, 0.8773333430290222, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 8, 3], [0, 2, 0, 3, 1], [16, 16], [0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 4, 2, 6, 8, 9], [0, 1, 5], [99, 70], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [15, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 9, 6, 3, 2, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303652286529541, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [2, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 21], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3], [30, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 2, 0, 3, 0, 4, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 18, 9, 9, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 3], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 4, 4], [11, 99, 96, 63, 61, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.subtract(grad, beta))), tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.3033788204193115, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025856018066406, 2.3025853633880615, 2.3025853633880615, 2.3025856018066406, 2.3025853633880615], "accuracy": [0.09417514503002167, 0.09642054885625839, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09589222073554993, 0.09998679161071777, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.10066666454076767, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.10266666859388351, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]