[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229573726654053, 1.8672922849655151, 1.3924872875213623, 1.094687581062317, 0.9269412159919739, 0.8300353288650513, 0.7620802521705627, 0.7160242795944214, 0.6829095482826233, 0.6537731885910034, 0.6295035481452942, 0.6081522107124329, 0.585391104221344, 0.5667102932929993, 0.5520802736282349, 0.5401791930198669, 0.5380327105522156, 0.5109819769859314, 0.5033332109451294, 0.4980817139148712, 0.48523861169815063, 0.4676147699356079, 0.45715048909187317, 0.4534344971179962, 0.44399580359458923, 0.4358581304550171, 0.4381798207759857, 0.4293240010738373, 0.4202534556388855, 0.4100499749183655, 0.40705880522727966, 0.39550232887268066, 0.38974618911743164, 0.38410308957099915, 0.36967822909355164, 0.3736858069896698, 0.3659340739250183, 0.3651147186756134, 0.3503561019897461, 0.3477342426776886, 0.3490626811981201, 0.34552106261253357, 0.3415716290473938, 0.3334902822971344, 0.3265169858932495, 0.31624481081962585, 0.3206138610839844, 0.3128783404827118, 0.3118862509727478, 0.3038311302661896, 0.30280056595802307, 0.29757052659988403, 0.2872838079929352, 0.2910413146018982, 0.2838144898414612, 0.2756885588169098, 0.27017515897750854, 0.27604979276657104, 0.27189525961875916, 0.26433032751083374, 0.2651289403438568, 0.2614206373691559, 0.2599548101425171, 0.24905391037464142, 0.24857579171657562, 0.24418333172798157, 0.23945029079914093], "accuracy": [0.26826047897338867, 0.4974243938922882, 0.5675604343414307, 0.6219785809516907, 0.6695284843444824, 0.7038700580596924, 0.7197200059890747, 0.7395324110984802, 0.7497028112411499, 0.7617223858833313, 0.7708360552787781, 0.7778365015983582, 0.7815347909927368, 0.7971205711364746, 0.7976489067077637, 0.8026680946350098, 0.8047813773155212, 0.8141592741012573, 0.8140271902084351, 0.8182538747787476, 0.8260467648506165, 0.8302733898162842, 0.8313300609588623, 0.8367455005645752, 0.8348963260650635, 0.8432175517082214, 0.8437458872795105, 0.8466516733169556, 0.846387505531311, 0.8488970994949341, 0.8551049828529358, 0.8601241707801819, 0.8615770936012268, 0.8654074668884277, 0.8679170608520508, 0.8669924736022949, 0.8668603897094727, 0.8673887252807617, 0.8720116019248962, 0.8751816153526306, 0.8706908226013184, 0.8737286925315857, 0.8753136992454529, 0.8778232932090759, 0.8842953443527222, 0.8850878477096558, 0.8862766027450562, 0.8861445188522339, 0.8844274282455444, 0.8893144726753235, 0.887201189994812, 0.8881257176399231, 0.8932769894599915, 0.8902390599250793, 0.8914278149604797, 0.9013340473175049, 0.901862382888794, 0.9001452922821045, 0.8988244533538818, 0.8993527889251709, 0.9033153057098389, 0.9045040011405945, 0.9019944667816162, 0.913089394569397, 0.9075419306755066, 0.9078060984611511, 0.9161273241043091], "val_loss": [2.0379221439361572, 1.5106121301651, 1.0264923572540283, 0.8123425245285034, 0.7248061299324036, 0.6679438352584839, 0.6282414197921753, 0.5926578044891357, 0.5682287812232971, 0.5489816665649414, 0.5329743027687073, 0.5160424113273621, 0.5030759572982788, 0.48587629199028015, 0.483010858297348, 0.4689923822879791, 0.4552505612373352, 0.4530012607574463, 0.4403418004512787, 0.4379044473171234, 0.4299214780330658, 0.4196760952472687, 0.4171346127986908, 0.41032350063323975, 0.4051002264022827, 0.3993033468723297, 0.40320083498954773, 0.39138907194137573, 0.3893662095069885, 0.3799436390399933, 0.38344815373420715, 0.3758190870285034, 0.3728078305721283, 0.3731556832790375, 0.36399751901626587, 0.36213743686676025, 0.3622888922691345, 0.3605978488922119, 0.3607637584209442, 0.35787999629974365, 0.3562113344669342, 0.35228514671325684, 0.35096195340156555, 0.352581262588501, 0.34508341550827026, 0.34535399079322815, 0.3426796793937683, 0.348041296005249, 0.340553879737854, 0.3446624279022217, 0.3399258852005005, 0.33565184473991394, 0.33381038904190063, 0.3393821120262146, 0.33216527104377747, 0.33308422565460205, 0.3334152102470398, 0.32957977056503296, 0.3308251202106476, 0.3277016580104828, 0.32779911160469055, 0.32658618688583374, 0.3286990225315094, 0.3272482454776764, 0.3281327784061432, 0.3286309838294983, 0.3232859671115875], "val_accuracy": [0.5496666431427002, 0.675000011920929, 0.6983333230018616, 0.7246666550636292, 0.7396666407585144, 0.7540000081062317, 0.7663333415985107, 0.7760000228881836, 0.7933333516120911, 0.7926666736602783, 0.8036666512489319, 0.812666654586792, 0.8233333230018616, 0.824999988079071, 0.8220000267028809, 0.8353333473205566, 0.8389999866485596, 0.8339999914169312, 0.8413333296775818, 0.8463333249092102, 0.8476666808128357, 0.8539999723434448, 0.8519999980926514, 0.8583333492279053, 0.859000027179718, 0.8606666922569275, 0.8610000014305115, 0.8616666793823242, 0.8629999756813049, 0.8666666746139526, 0.8693333268165588, 0.8679999709129333, 0.8669999837875366, 0.8686666488647461, 0.871999979019165, 0.874666690826416, 0.8703333139419556, 0.875333309173584, 0.8736666440963745, 0.8759999871253967, 0.8726666569709778, 0.878333330154419, 0.8769999742507935, 0.8769999742507935, 0.8820000290870667, 0.8830000162124634, 0.8806666731834412, 0.8826666474342346, 0.8796666860580444, 0.8806666731834412, 0.8836666941642761, 0.8833333253860474, 0.8830000162124634, 0.8816666603088379, 0.8859999775886536, 0.8826666474342346, 0.8889999985694885, 0.8826666474342346, 0.8806666731834412, 0.8863333463668823, 0.8893333077430725, 0.890666663646698, 0.887666642665863, 0.8870000243186951, 0.8893333077430725, 0.8863333463668823, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 1], [99, 85], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8, 4, 0, 5], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 25, 14, 11, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.negative(beta), alpha)), tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 6, 8], [0, 1, 0, 2, 0], [9, 39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [26, 16], [0, 1, 0, 1], [3, 5], [0, 3], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 5, 4, 2, 6], [0, 0, 0, 4, 0, 0, 3, 1, 4, 0], [16, 89, 67, 54, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 7, 4, 3, 2, 4, 2, 2, 1, 15, 8, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)))", "other_info": {"loss": [2.3043203353881836, 2.3025856018066406, 2.3025856018066406, 2.3025858402252197, 2.3025856018066406, 2.3025856018066406, 2.3025856018066406, 2.3025856018066406, 2.3025856018066406], "accuracy": [0.09140139818191528, 0.09840179979801178, 0.09747721254825592, 0.09998679161071777, 0.09721305221319199, 0.09760929644107819, 0.0956280529499054, 0.09800554811954498, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025856018066406, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0976666659116745, 0.0976666659116745, 0.1003333330154419, 0.0963333323597908, 0.1003333330154419, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 2, 3, 3, 3, 1, 4], [0, 1, 0, 2, 0, 3, 0, 2], [5, 39, 86, 8], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [66], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [3, 3, 3, 6, 8, 1, 4, 1, 2, 8, 8, 4, 9], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 7, 8, 4, 8, 5, 3, 1, 2, 1, 1, 1, 22, 13, 9, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8, 2, 7, 3, 3, 5, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 1, 0, 0], [62, 99, 20, 99, 61, 1, 47, 86, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 2, 1, 1, 1, 31, 17, 14, 9], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(sigma, alpha), beta))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [11137.8427734375, 83539.8984375, 305631.0, 863477.375, 1960026.75, 4154882.25], "accuracy": [0.09642054885625839, 0.09774138033390045, 0.10091137140989304, 0.10077928751707077, 0.10117553919553757, 0.10500594228506088], "val_loss": [39603.37109375, 170297.765625, 550992.875, 1436861.75, 2878640.25, 6016278.0], "val_accuracy": [0.10266666859388351, 0.10066666454076767, 0.0976666659116745, 0.10266666859388351, 0.10000000149011612, 0.10133333504199982]}}]