[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238495349884033, 1.8699336051940918, 1.4036693572998047, 1.1159502267837524, 0.9613029360771179, 0.848404586315155, 0.7879317402839661, 0.7518037557601929, 0.712023913860321, 0.675523579120636, 0.6543398499488831, 0.6308895945549011, 0.6051924824714661, 0.597052276134491, 0.5778161883354187, 0.5611822605133057, 0.54818195104599, 0.5383589863777161, 0.5314214825630188, 0.5256000757217407, 0.5046659111976624, 0.48830562829971313, 0.4850117564201355, 0.477499395608902, 0.46492835879325867, 0.4567992389202118, 0.45346778631210327, 0.45466557145118713, 0.4342609941959381, 0.4308186173439026, 0.4206005334854126, 0.4171946346759796, 0.4114280343055725, 0.40556082129478455, 0.40124696493148804, 0.39330175518989563, 0.3882320523262024, 0.3785504698753357, 0.3695277273654938, 0.3735944330692291, 0.3672822117805481, 0.365342915058136, 0.35814476013183594, 0.34980538487434387, 0.34432855248451233, 0.34485751390457153, 0.3386499583721161, 0.33565402030944824, 0.32341140508651733, 0.3255106806755066, 0.31817084550857544, 0.3129104971885681, 0.3082924485206604, 0.3092412054538727, 0.2999607026576996, 0.2995016574859619, 0.29620641469955444, 0.2882499098777771], "accuracy": [0.26601505279541016, 0.47351735830307007, 0.5638620853424072, 0.6082419753074646, 0.6540747880935669, 0.6942279934883118, 0.713379979133606, 0.7236824631690979, 0.7412495017051697, 0.7565711140632629, 0.7670056819915771, 0.774798572063446, 0.7825914621353149, 0.7861577272415161, 0.7927618622779846, 0.7964601516723633, 0.800818920135498, 0.8078193068504333, 0.8055738806724548, 0.8128384351730347, 0.8235371708869934, 0.8219521641731262, 0.8248580098152161, 0.8323867321014404, 0.835160493850708, 0.8385946154594421, 0.8380662798881531, 0.839519202709198, 0.8436138033866882, 0.8455950617790222, 0.8487650156021118, 0.8504821062088013, 0.852859616279602, 0.8578787446022034, 0.8552370667457581, 0.8636903762817383, 0.8627657890319824, 0.8627657890319824, 0.8692378997802734, 0.8660678863525391, 0.8671245574951172, 0.8729361891746521, 0.8704266548156738, 0.8762382864952087, 0.8772949576377869, 0.8775591254234314, 0.8792761564254761, 0.8754457831382751, 0.8837670087814331, 0.8804649114608765, 0.8848236799240112, 0.8885219693183899, 0.8881257176399231, 0.8886540532112122, 0.8891823887825012, 0.8934090733528137, 0.8942015767097473, 0.8939374089241028], "val_loss": [2.0373752117156982, 1.5137401819229126, 1.0420862436294556, 0.833863377571106, 0.7521447539329529, 0.6917014718055725, 0.6440580487251282, 0.6061964631080627, 0.5781800150871277, 0.5547186136245728, 0.5337831974029541, 0.5218801498413086, 0.5038742423057556, 0.4917539954185486, 0.47779059410095215, 0.4740622937679291, 0.45958390831947327, 0.4503237307071686, 0.44899556040763855, 0.43579182028770447, 0.42644205689430237, 0.4208466708660126, 0.41710221767425537, 0.41183894872665405, 0.4063781797885895, 0.4031572937965393, 0.39274048805236816, 0.3928176164627075, 0.39286792278289795, 0.38629046082496643, 0.37989237904548645, 0.3784574866294861, 0.3782372772693634, 0.37048810720443726, 0.367628812789917, 0.3673036992549896, 0.365459144115448, 0.3663771152496338, 0.3617764115333557, 0.359490305185318, 0.3529365360736847, 0.35394468903541565, 0.3528395891189575, 0.3583887219429016, 0.3446166217327118, 0.3476853370666504, 0.3439157009124756, 0.3403586745262146, 0.3412010371685028, 0.34338393807411194, 0.34130561351776123, 0.3411918878555298, 0.3401404619216919, 0.3414463400840759, 0.34089425206184387, 0.3360690176486969, 0.3304947018623352, 0.3358899652957916], "val_accuracy": [0.5220000147819519, 0.6636666655540466, 0.687666654586792, 0.715666651725769, 0.7336666584014893, 0.7540000081062317, 0.7646666765213013, 0.781333327293396, 0.7983333468437195, 0.7993333339691162, 0.8119999766349792, 0.8190000057220459, 0.8199999928474426, 0.8303333520889282, 0.8356666564941406, 0.8339999914169312, 0.840666651725769, 0.8460000157356262, 0.8429999947547913, 0.8503333330154419, 0.8546666502952576, 0.8573333621025085, 0.8586666584014893, 0.8579999804496765, 0.8619999885559082, 0.862333357334137, 0.8686666488647461, 0.8643333315849304, 0.8633333444595337, 0.8686666488647461, 0.8676666617393494, 0.8693333268165588, 0.8696666955947876, 0.8736666440963745, 0.871666669845581, 0.8743333220481873, 0.8743333220481873, 0.871999979019165, 0.878333330154419, 0.874666690826416, 0.8786666393280029, 0.8773333430290222, 0.878000020980835, 0.875333309173584, 0.8806666731834412, 0.8796666860580444, 0.8786666393280029, 0.8803333044052124, 0.8843333125114441, 0.8846666812896729, 0.8826666474342346, 0.8820000290870667, 0.8853333592414856, 0.878000020980835, 0.8803333044052124, 0.8820000290870667, 0.8843333125114441, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 2, 3, 7, 2, 5, 8, 4, 6, 1, 5, 0, 1, 6, 4, 5, 2, 7, 2, 3, 6, 0, 9, 9], [0, 2, 0, 2, 3, 1, 1, 3, 1, 3, 0, 0, 0, 2, 2, 2], [59, 39, 33, 60, 63, 38, 9], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [4], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11057142913341522, "mapping_values": [1, 42, 26, 16, 7, 10, 6, 4, 2, 2, 1, 1, 1, 8, 4, 4, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(grad), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.negative(grad)), alpha), tf.math.subtract(alpha, grad)), alpha)))), tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), grad)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.5926174838582385e+23, 6.583070102034337e+23, 1.122719428756978e+24, 1.4954488631332063e+24, 1.8903936537513278e+24, 2.1918267105130448e+24, 2.53325937007078e+24, 2.7895832200432494e+24, 3.095527082191741e+24, 3.2893767099029507e+24, 3.5599120468019565e+24, 3.7121455316525015e+24, 3.989766435888445e+24, 4.264293763497152e+24, 4.5342702216967996e+24, 4.6169836927410564e+24, 4.856980444826036e+24, 5.012268018742285e+24, 5.223522437717416e+24, 5.424477808891894e+24], "accuracy": [0.09298639744520187, 0.09615638852119446, 0.10487385839223862, 0.1022322028875351, 0.10038304328918457, 0.10249637067317963, 0.09893012791872025, 0.10210011899471283, 0.09787346422672272, 0.10130762308835983, 0.10276053100824356, 0.10276053100824356, 0.1018359512090683, 0.09932637959718704, 0.09813763201236725, 0.10645885765552521, 0.09998679161071777, 0.09972262382507324, 0.09998679161071777, 0.1010434553027153], "val_loss": [3.657504402208729e+23, 7.6388997632826e+23, 1.116115566436184e+24, 1.4454723099818848e+24, 1.782410016823534e+24, 2.0734588537084452e+24, 2.1329984583949162e+24, 2.4067697577269773e+24, 2.4924021377905224e+24, 2.848027693415532e+24, 3.0252360521292467e+24, 3.1548933163069565e+24, 3.35335866526186e+24, 3.4709266827726386e+24, 3.6118673014855595e+24, 3.766912185425088e+24, 3.993081949905318e+24, 4.249072029102204e+24, 4.4139896681160573e+24, 4.353946380847261e+24], "val_accuracy": [0.10233332961797714, 0.10533333569765091, 0.10000000149011612, 0.09566666930913925, 0.10700000077486038, 0.09966666996479034, 0.09700000286102295, 0.10499999672174454, 0.10233332961797714, 0.10766666382551193, 0.09966666996479034, 0.0989999994635582, 0.10000000149011612, 0.10133333504199982, 0.10999999940395355, 0.10266666859388351, 0.09333333373069763, 0.09799999743700027, 0.09166666865348816, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 0], [16, 16, 18], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 91, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 3, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3045949935913086, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 0, 3, 2, 2, 4, 9, 3, 3, 3, 1, 6, 1, 9, 2], [0, 1, 0, 2, 1, 0, 1, 0, 1, 2, 2, 3], [39, 39, 78, 42, 2, 75], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 9, 8, 1, 4, 2, 4, 0, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [41, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 17, 12, 6, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.multiply(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, grad))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036320209503174, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 6, 3, 7, 2, 8, 3, 0, 8], [0, 1, 2, 2, 2, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [90, 16, 97], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 2, 6, 8, 1, 4, 5, 4, 9, 8], [0, 4, 4, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 2, 10, 6, 4, 3, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, grad)), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, alpha))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]