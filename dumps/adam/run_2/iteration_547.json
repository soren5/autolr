[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2258594036102295, 1.8732887506484985, 1.3988637924194336, 1.1050914525985718, 0.9518104195594788, 0.8348253965377808, 0.7751991152763367, 0.7312318682670593, 0.6992384195327759, 0.6709117889404297, 0.6471461653709412, 0.6234045624732971, 0.5969321727752686, 0.5864216685295105, 0.5673052668571472, 0.5488213896751404, 0.5469210743904114, 0.529843807220459, 0.5202608108520508, 0.5052109360694885, 0.500704288482666, 0.4788467586040497, 0.47639229893684387, 0.47351354360580444, 0.4625389277935028, 0.44979166984558105, 0.4508678913116455, 0.4407990276813507, 0.42831864953041077, 0.42445212602615356, 0.41987502574920654, 0.414787620306015, 0.40928006172180176, 0.3958333134651184, 0.38976362347602844, 0.3874930143356323, 0.379311740398407, 0.37813639640808105, 0.37227174639701843, 0.3663742244243622, 0.35569673776626587, 0.3542342483997345, 0.3547075688838959], "accuracy": [0.260071337223053, 0.4909523129463196, 0.5712587237358093, 0.6166952848434448, 0.6588297486305237, 0.7042662501335144, 0.7260599732398987, 0.7341170310974121, 0.7428345084190369, 0.7549861073493958, 0.76542067527771, 0.7786290049552917, 0.7828556299209595, 0.7915731072425842, 0.7956677079200745, 0.805177628993988, 0.8024039268493652, 0.8063663840293884, 0.8115176558494568, 0.8181217908859253, 0.8212917447090149, 0.8259146809577942, 0.8253863453865051, 0.8305375576019287, 0.8347642421722412, 0.8348963260650635, 0.8383304476737976, 0.8430854678153992, 0.8465195894241333, 0.8487650156021118, 0.8506141901016235, 0.8507462739944458, 0.8514066934585571, 0.8605204224586487, 0.8603883385658264, 0.8622375130653381, 0.8628978729248047, 0.8634262084960938, 0.8691058158874512, 0.8705587387084961, 0.8712190985679626, 0.876370370388031, 0.8741249442100525], "val_loss": [2.043290615081787, 1.5191426277160645, 1.036433458328247, 0.8269925117492676, 0.7420920133590698, 0.6851391792297363, 0.6373134851455688, 0.6027246117591858, 0.5807641744613647, 0.5562711358070374, 0.5464019179344177, 0.5265102386474609, 0.5146026611328125, 0.5018985867500305, 0.4884110391139984, 0.47609180212020874, 0.4665904939174652, 0.4633273482322693, 0.45487722754478455, 0.44456496834754944, 0.4366409480571747, 0.43343594670295715, 0.4253672659397125, 0.4258829653263092, 0.4173125922679901, 0.4117312729358673, 0.40746334195137024, 0.40527966618537903, 0.40284213423728943, 0.3933229148387909, 0.39208662509918213, 0.38864824175834656, 0.3853844702243805, 0.3795672059059143, 0.37772852182388306, 0.37834465503692627, 0.3740430474281311, 0.36728692054748535, 0.3682107627391815, 0.37240833044052124, 0.3662499189376831, 0.36367329955101013, 0.3619803190231323], "val_accuracy": [0.5536666512489319, 0.67166668176651, 0.6866666674613953, 0.7200000286102295, 0.7409999966621399, 0.7559999823570251, 0.7693333625793457, 0.7743333578109741, 0.7806666493415833, 0.793666660785675, 0.796999990940094, 0.7976666688919067, 0.8046666383743286, 0.8209999799728394, 0.8223333358764648, 0.8263333439826965, 0.8296666741371155, 0.8309999704360962, 0.8353333473205566, 0.8379999995231628, 0.8373333215713501, 0.840666651725769, 0.8433333039283752, 0.8443333506584167, 0.846666693687439, 0.8503333330154419, 0.8500000238418579, 0.8510000109672546, 0.8526666760444641, 0.8556666374206543, 0.8583333492279053, 0.8566666841506958, 0.8579999804496765, 0.8583333492279053, 0.859666645526886, 0.8583333492279053, 0.8633333444595337, 0.8669999837875366, 0.8640000224113464, 0.862666666507721, 0.8653333187103271, 0.8653333187103271, 0.8666666746139526]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [91], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038740158081055, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 5, 3, 0, 3, 5, 5, 0, 4, 3, 3, 9], [0, 2, 3, 3, 1, 1], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [13, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.square(tf.math.negative(beta))), tf.math.pow(grad, tf.math.multiply(grad, tf.math.multiply(alpha, alpha)))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma))), grad)", "other_info": {"loss": [2.474888801574707, 2.3088738918304443, 2.30446195602417, 2.3032097816467285, 2.302931070327759, 4562.212890625, 2.325680732727051, 2.308501958847046, 2.304293155670166], "accuracy": [0.2075023055076599, 0.09998679161071777, 0.09998679161071777, 0.09311848133802414, 0.09113723784685135, 0.09179764986038208, 0.09668471664190292, 0.0936468094587326, 0.09576013684272766], "val_loss": [2.314506769180298, 2.305487871170044, 2.303154945373535, 2.3028781414031982, 4.675180912017822, 2.3359029293060303, 2.311815023422241, 2.3047821521759033, 2.3032476902008057], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.10166666656732559, 0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.09533333033323288, 0.10000000149011612]}, "mapping_values": [1, 9, 5, 4, 2, 18, 12, 6, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 17}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 2, 3, 0, 3, 5, 8], [3, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 84]], "fitness": -0.09399999678134918, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))))), alpha))", "other_info": {"loss": [2.3103854656219482, 2.309986114501953, 2.3093483448028564, 2.3103086948394775, 2.3099472522735596, 2.309041738510132], "accuracy": [0.08611807972192764, 0.0944393053650856, 0.08981640636920929, 0.09034473448991776, 0.08809932321310043, 0.09998679161071777], "val_loss": [2.309154987335205, 2.309154987335205, 2.309154987335205, 2.309154987335205, 2.309154987335205, 2.309154987335205], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 0, 3, 6, 4, 4, 7, 5, 2, 6, 0, 9, 3, 1, 4, 4, 6, 1, 9, 1, 2, 3, 2, 9, 1, 5, 1, 0, 9, 4, 5, 7], [0, 1, 0, 2, 1, 1, 3, 0, 0, 2, 3, 2, 3, 3, 1, 2, 2, 0, 0, 1, 1], [39, 39, 23, 28, 40, 28, 95, 6, 34, 9], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 2, 3], [16, 16], [0, 0, 1, 1], [0, 3], [0, 3], [70], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 9, 7, 6], [0, 4, 4, 3, 0, 0, 3, 4, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08628571778535843, "mapping_values": [1, 57, 36, 21, 10, 10, 6, 4, 1, 4, 2, 2, 1, 22, 13, 9, 5], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.pow(alpha, alpha), tf.math.pow(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad), grad), grad), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.subtract(grad, grad)), tf.math.negative(alpha))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), tf.math.add(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), alpha))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(grad, sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(sigma, grad), grad))))", "other_info": {"loss": [4.429557471361928e+29, 5.003879593750338e+29, 5.190199241069345e+29, 4.95812855168566e+29, 4.954162141629368e+29, 4.994287145161015e+29], "accuracy": [0.09642054885625839, 0.09509972482919693, 0.09708096832036972, 0.09972262382507324, 0.10315678268671036, 0.10038304328918457], "val_loss": [2.414448324152384e+29, 2.414448324152384e+29, 2.414448324152384e+29, 2.414448324152384e+29, 2.414448324152384e+29, 2.414448324152384e+29], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]