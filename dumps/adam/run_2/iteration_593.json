[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8651428818702698, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222414493560791, 1.869117259979248, 1.381059169769287, 1.0831724405288696, 0.9307161569595337, 0.8395966291427612, 0.7700990438461304, 0.7267330884933472, 0.6787902116775513, 0.6556630730628967, 0.6291795969009399, 0.6084052324295044, 0.6100167036056519, 0.5710528492927551, 0.5576220750808716, 0.5493541359901428, 0.5361788868904114, 0.5213720798492432, 0.5079270005226135, 0.49440133571624756, 0.4835948348045349, 0.47988221049308777, 0.47275832295417786, 0.46911755204200745, 0.4469015896320343, 0.4464491605758667, 0.4359152019023895, 0.42768338322639465, 0.4189797639846802, 0.41214704513549805, 0.4138478934764862, 0.39830297231674194, 0.38987481594085693, 0.38488173484802246, 0.3812513053417206, 0.38141778111457825, 0.3760681450366974, 0.37350764870643616, 0.36535927653312683, 0.3637067377567291, 0.35874778032302856, 0.35516735911369324, 0.3428994119167328, 0.34153419733047485, 0.33548957109451294, 0.33092471957206726, 0.32824406027793884, 0.3223823308944702, 0.32195988297462463, 0.30758634209632874, 0.3008826971054077, 0.3020959794521332, 0.29861631989479065, 0.29262256622314453, 0.2840052545070648, 0.28937599062919617, 0.29015475511550903, 0.2793036103248596], "accuracy": [0.26984545588493347, 0.48989564180374146, 0.5774666666984558, 0.6205257177352905, 0.6736230254173279, 0.7061154246330261, 0.7256637215614319, 0.7396644949913025, 0.7584202885627747, 0.7627789974212646, 0.77677983045578, 0.7823272943496704, 0.7852331399917603, 0.7965922355651855, 0.8000264167785645, 0.8050455451011658, 0.8117818236351013, 0.8142913579940796, 0.822348415851593, 0.8256505131721497, 0.8255184292793274, 0.8280280232429504, 0.8362171649932861, 0.8370096683502197, 0.8404437899589539, 0.8412362933158875, 0.8451988101005554, 0.848368763923645, 0.8535200357437134, 0.8562937378883362, 0.8512746095657349, 0.8588033318519592, 0.8651432991027832, 0.8640866279602051, 0.8664641380310059, 0.8643507957458496, 0.8634262084960938, 0.8688416481018066, 0.8722757697105408, 0.8734645247459412, 0.8728041052818298, 0.8733324408531189, 0.8778232932090759, 0.8758420348167419, 0.8813894987106323, 0.883238673210144, 0.8819178342819214, 0.8864086866378784, 0.8860124349594116, 0.8908994793891907, 0.8931449055671692, 0.8931449055671692, 0.8928807377815247, 0.8942015767097473, 0.9002773761749268, 0.8961827754974365, 0.8948619961738586, 0.8985602855682373], "val_loss": [2.0347585678100586, 1.504225730895996, 1.027348518371582, 0.8303641080856323, 0.7496399879455566, 0.6939219832420349, 0.6500248908996582, 0.6236604452133179, 0.5970895290374756, 0.5721138715744019, 0.5534698367118835, 0.5486279129981995, 0.5308887958526611, 0.509276807308197, 0.5038556456565857, 0.4958895742893219, 0.4871843159198761, 0.47145992517471313, 0.4647943377494812, 0.46279239654541016, 0.4513919949531555, 0.44334423542022705, 0.444070428609848, 0.4332621395587921, 0.43389227986335754, 0.42393529415130615, 0.4202672243118286, 0.4180224537849426, 0.4133272171020508, 0.4136539697647095, 0.40575969219207764, 0.3979644775390625, 0.402364045381546, 0.3942106068134308, 0.402504026889801, 0.39257732033729553, 0.3952392041683197, 0.38856881856918335, 0.38904622197151184, 0.39035069942474365, 0.3833943009376526, 0.38019323348999023, 0.38454610109329224, 0.3811342716217041, 0.3756432831287384, 0.3722127377986908, 0.3752876818180084, 0.37100210785865784, 0.3703458309173584, 0.3678034543991089, 0.369235098361969, 0.36373692750930786, 0.3631717264652252, 0.360716313123703, 0.36619532108306885, 0.36576172709465027, 0.3578404188156128, 0.3586350381374359], "val_accuracy": [0.5376666784286499, 0.6656666398048401, 0.6940000057220459, 0.7126666903495789, 0.7273333072662354, 0.7419999837875366, 0.7570000290870667, 0.7606666684150696, 0.7749999761581421, 0.7860000133514404, 0.7956666946411133, 0.7946666479110718, 0.8003333210945129, 0.8116666674613953, 0.8083333373069763, 0.815666675567627, 0.8163333535194397, 0.8206666707992554, 0.8270000219345093, 0.8246666789054871, 0.8286666870117188, 0.8376666903495789, 0.8309999704360962, 0.8376666903495789, 0.8373333215713501, 0.8389999866485596, 0.8386666774749756, 0.843666672706604, 0.8423333168029785, 0.8383333086967468, 0.847000002861023, 0.8533333539962769, 0.846666693687439, 0.8503333330154419, 0.8456666469573975, 0.8576666712760925, 0.8526666760444641, 0.8579999804496765, 0.859000027179718, 0.8539999723434448, 0.8566666841506958, 0.8640000224113464, 0.8586666584014893, 0.8643333315849304, 0.8636666536331177, 0.8616666793823242, 0.8656666874885559, 0.8610000014305115, 0.8636666536331177, 0.8700000047683716, 0.8703333139419556, 0.8676666617393494, 0.8723333477973938, 0.8663333058357239, 0.8703333139419556, 0.8673333525657654, 0.8693333268165588, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 6, 1, 6, 8, 4, 7, 0, 0, 1, 3, 6, 5], [0, 2, 0, 1, 1, 0, 0, 3, 2, 2, 0], [39, 39, 16, 11, 5], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [8, 2, 3, 1, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 8, 4, 2, 1], [4, 0, 0, 1, 0, 0, 2, 1, 4, 0], [68, 99, 96, 99, 61, 1]], "fitness": -0.2768571376800537, "mapping_values": [1, 27, 16, 11, 5, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad)))))))), tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2173659801483154, 2.648776054382324, 2.4388983249664307, 2.3060271739959717, 2.303772211074829, 2.303159475326538, 2.3035340309143066], "accuracy": [0.228899747133255, 0.19891692698001862, 0.11781799048185349, 0.1018359512090683, 0.09853387624025345, 0.10117553919553757, 0.09959053993225098], "val_loss": [2.170121669769287, 2.191540479660034, 2.3067729473114014, 2.3035919666290283, 2.3027162551879883, 2.3026387691497803, 2.302663803100586], "val_accuracy": [0.20466665923595428, 0.27933332324028015, 0.09700000286102295, 0.09700000286102295, 0.0989999994635582, 0.10199999809265137, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 52], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 1], [0, 2, 0, 0], [16, 16], [0, 1], [0], [0], [8], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.13742856681346893, "mapping_values": [1, 9, 5, 4, 1, 4, 2, 2, 1, 2, 1, 1, 1, 7, 3, 4, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [3.416292848324394e+28, 5.127271157607206e+28, 3.944347868438878e+28, 1.1898444367092868e+29, 2.146009746010823e+29, 2.003158537693335e+29, 2.24043667504501e+29, 2.3298357949322153e+29, 2.1847512850576484e+29, 1.9129496264016472e+29, 1.9407205414247884e+29, 1.906477150900226e+29], "accuracy": [0.09100515395402908, 0.09760929644107819, 0.1014397069811821, 0.1200634017586708, 0.11557257920503616, 0.12310130894184113, 0.12178047746419907, 0.1212521493434906, 0.1298375427722931, 0.1150442510843277, 0.12178047746419907, 0.11966715008020401], "val_loss": [5.181743182750459e+28, 5.181762544453039e+28, 5.208781092048129e+28, 1.6682739964018865e+29, 1.6682745630858645e+29, 1.6682747519805238e+29, 1.668273618612568e+29, 1.668279663241666e+29, 1.6682794743470067e+29, 1.6682792854523474e+29, 1.668268896246085e+29, 1.668268329562107e+29], "val_accuracy": [0.11933333426713943, 0.11866666376590729, 0.13466666638851166, 0.1340000033378601, 0.13600000739097595, 0.13600000739097595, 0.13633333146572113, 0.13633333146572113, 0.13633333146572113, 0.13633333146572113, 0.13633333146572113, 0.13633333146572113]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 78], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [30, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 8, 4, 9, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 43, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038480281829834, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [59, 69], [1, 1], [0], [0], [48], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]