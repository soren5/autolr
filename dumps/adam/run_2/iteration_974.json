[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225630283355713, 1.8735345602035522, 1.4009238481521606, 1.1073509454727173, 0.9519445300102234, 0.853523850440979, 0.784937858581543, 0.7396551966667175, 0.692878007888794, 0.6689692139625549, 0.637667715549469, 0.6158077120780945, 0.5993154048919678, 0.5833925604820251, 0.5506895184516907, 0.5447816848754883, 0.5326026082038879, 0.5172145366668701, 0.5131974816322327, 0.4920572340488434, 0.48461392521858215, 0.48007744550704956, 0.47239241003990173, 0.4587705135345459, 0.4563755393028259, 0.4389882981777191, 0.43839865922927856, 0.43261972069740295, 0.4229958653450012, 0.4099282920360565, 0.4092993438243866, 0.3945706784725189, 0.39651840925216675, 0.39065539836883545, 0.3836403787136078, 0.37752917408943176, 0.36736610531806946, 0.3720411956310272, 0.36214306950569153, 0.35090404748916626, 0.3497738838195801, 0.3464406430721283, 0.34481334686279297, 0.33285486698150635, 0.3314867317676544, 0.3371850252151489, 0.32971063256263733, 0.31490013003349304, 0.31165146827697754, 0.3115689158439636, 0.3075486123561859, 0.30289626121520996, 0.3001159429550171, 0.2975143492221832, 0.2886847257614136, 0.2832825183868408, 0.2771255373954773, 0.28092870116233826], "accuracy": [0.27565711736679077, 0.48210275173187256, 0.5547483563423157, 0.6056002974510193, 0.6542068123817444, 0.6976621150970459, 0.7162858247756958, 0.7297582626342773, 0.7479857206344604, 0.7530049085617065, 0.7664773464202881, 0.7751948237419128, 0.7849689722061157, 0.780610203742981, 0.8020076751708984, 0.8010830879211426, 0.8014793395996094, 0.8092722296714783, 0.8104609847068787, 0.8189142942428589, 0.8256505131721497, 0.826310932636261, 0.8327829837799072, 0.8302733898162842, 0.8333113193511963, 0.8417646288871765, 0.8429533839225769, 0.8433496356010437, 0.8429533839225769, 0.8506141901016235, 0.8514066934585571, 0.859199583530426, 0.8548408150672913, 0.8603883385658264, 0.8585391640663147, 0.8603883385658264, 0.86553955078125, 0.8652753829956055, 0.8691058158874512, 0.8739928603172302, 0.871879518032074, 0.8717474341392517, 0.8751816153526306, 0.8775591254234314, 0.878879964351654, 0.8770307898521423, 0.8803328275680542, 0.8842953443527222, 0.8860124349594116, 0.887597382068634, 0.8868049383163452, 0.8881257176399231, 0.891559898853302, 0.8936732411384583, 0.8967111110687256, 0.895918607711792, 0.901862382888794, 0.8931449055671692], "val_loss": [2.040914535522461, 1.5195093154907227, 1.0464024543762207, 0.8369430899620056, 0.7472401261329651, 0.6871752738952637, 0.6384600400924683, 0.6057817339897156, 0.578589677810669, 0.5532874464988708, 0.5351061224937439, 0.5207675695419312, 0.5104902982711792, 0.49470919370651245, 0.48057135939598083, 0.47508692741394043, 0.46261540055274963, 0.4560236930847168, 0.45022159814834595, 0.4417397975921631, 0.44642698764801025, 0.42988321185112, 0.42393720149993896, 0.4213838279247284, 0.4173767864704132, 0.41065558791160583, 0.4095039367675781, 0.4064139723777771, 0.40170881152153015, 0.3969612121582031, 0.3928402364253998, 0.39865127205848694, 0.393898069858551, 0.3849773705005646, 0.3902412950992584, 0.3837791383266449, 0.3795831799507141, 0.3755250573158264, 0.374290406703949, 0.3743416666984558, 0.37007832527160645, 0.36947211623191833, 0.36893993616104126, 0.3669613301753998, 0.36615192890167236, 0.36096417903900146, 0.3595832586288452, 0.35718685388565063, 0.3626185655593872, 0.3539799749851227, 0.35225293040275574, 0.35779017210006714, 0.3514661490917206, 0.3524470627307892, 0.3500136733055115, 0.34515056014060974, 0.3548147678375244, 0.3473021984100342], "val_accuracy": [0.5616666674613953, 0.6523333191871643, 0.6819999814033508, 0.7073333263397217, 0.7333333492279053, 0.7540000081062317, 0.7683333158493042, 0.777999997138977, 0.7876666784286499, 0.800000011920929, 0.8073333501815796, 0.8086666464805603, 0.8140000104904175, 0.8136666417121887, 0.8253333568572998, 0.8276666402816772, 0.8316666483879089, 0.8389999866485596, 0.8366666436195374, 0.8383333086967468, 0.8426666855812073, 0.8450000286102295, 0.8510000109672546, 0.8483333587646484, 0.8496666550636292, 0.8500000238418579, 0.8483333587646484, 0.8516666889190674, 0.8550000190734863, 0.8579999804496765, 0.856333315372467, 0.8513333201408386, 0.859666645526886, 0.8646666407585144, 0.859333336353302, 0.862666666507721, 0.8640000224113464, 0.8616666793823242, 0.8690000176429749, 0.8646666407585144, 0.8653333187103271, 0.8683333396911621, 0.8696666955947876, 0.8700000047683716, 0.8686666488647461, 0.8700000047683716, 0.8706666827201843, 0.8743333220481873, 0.8679999709129333, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8773333430290222, 0.8759999871253967, 0.8756666779518127, 0.8756666779518127, 0.8696666955947876, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 0, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 4, 3, 6, 9, 1, 4, 1, 4, 2, 8, 3, 1, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 7], [16, 99, 96, 99, 61, 1, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 1, 1, 0, 1, 1, 26, 14, 12, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.multiply(tf.math.subtract(sigma, alpha), tf.math.subtract(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), alpha), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 3, 3, 8, 3, 5, 5], [3, 2, 0, 3], [36, 16], [0, 1], [0], [0], [65], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 2, 2, 0, 0, 4, 1, 2, 0], [16, 64, 92, 33, 61, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(grad), beta), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, beta))), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 9, 0], [0, 1, 0, 2], [39, 39, 19], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 76, 61, 1]], "fitness": -0.09914285689592361, "mapping_values": [1, 10, 7, 3, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3098490238189697, 2.3099114894866943, 2.309907913208008, 2.3096749782562256, 2.310886859893799, 2.310939311981201, 2.3112547397613525, 2.312237501144409, 2.3116421699523926, 2.3120107650756836, 2.3108677864074707, 2.3106753826141357, 2.3119657039642334, 2.311786651611328, 2.3120224475860596, 2.311110734939575, 2.3127777576446533, 2.313223361968994, 2.312518835067749, 2.310497999191284, 2.3155481815338135], "accuracy": [0.0940430611371994, 0.09074098616838455, 0.09298639744520187, 0.09311848133802414, 0.09496764093637466, 0.09232597798109055, 0.09496764093637466, 0.09549596905708313, 0.09549596905708313, 0.09245806187391281, 0.09734513610601425, 0.09430722147226334, 0.09430722147226334, 0.0948355570435524, 0.09298639744520187, 0.09391097724437714, 0.09311848133802414, 0.0866464152932167, 0.09259014576673508, 0.10117553919553757, 0.09430722147226334], "val_loss": [2.3088884353637695, 2.3089473247528076, 2.3090052604675293, 2.3090603351593018, 2.3091142177581787, 2.3091745376586914, 2.3092362880706787, 2.309300184249878, 2.3093669414520264, 2.3094379901885986, 2.3095040321350098, 2.309567451477051, 2.309628486633301, 2.309689521789551, 2.3097450733184814, 2.3097922801971436, 2.309828758239746, 2.3098626136779785, 2.3098888397216797, 2.30991268157959, 2.3099420070648193], "val_accuracy": [0.09366666525602341, 0.09399999678134918, 0.09433333575725555, 0.09566666930913925, 0.09666666388511658, 0.09733333438634872, 0.09799999743700027, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10166666656732559, 0.10199999809265137, 0.10199999809265137, 0.10266666859388351, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 1, 0, 1, 3], [39, 89], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 1, 3, 0, 3, 5, 8, 1, 1, 7, 0], [3, 2, 0, 3, 3, 4, 2, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 8, 2, 2, 1, 2, 2, 8, 0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 0, 96, 74, 66, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 11, 6, 5, 2, 19, 11, 8, 1, 1, 0, 1, 1, 22, 13, 9, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(grad, grad), tf.math.add(grad, tf.math.negative(beta))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.negative(alpha)))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.308844804763794, 2.3099894523620605, 2.3092730045318604, 2.3089723587036133, 2.3105216026306152, 2.3100807666778564], "accuracy": [0.09430722147226334, 0.0936468094587326, 0.09642054885625839, 0.09179764986038208, 0.09074098616838455, 0.09021265059709549], "val_loss": [2.308471441268921, 2.308471441268921, 2.308471441268921, 2.308471441268921, 2.308471441268921, 2.308471441268921], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]