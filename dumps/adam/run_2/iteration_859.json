[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224841356277466, 1.8782191276550293, 1.4139372110366821, 1.1130677461624146, 0.9552493691444397, 0.8522971272468567, 0.7921836972236633, 0.7351597547531128, 0.7072153091430664, 0.6761284470558167, 0.6479989290237427, 0.6338411569595337, 0.6101313829421997, 0.593532383441925, 0.5795772671699524, 0.5700996518135071, 0.5545666217803955, 0.5366577506065369, 0.5320271849632263, 0.5195291638374329, 0.5131620168685913, 0.4942978024482727, 0.4833301603794098, 0.47585156559944153, 0.4674546420574188, 0.459464430809021, 0.4466346502304077, 0.44637468457221985, 0.443866491317749, 0.43585845828056335, 0.42485311627388, 0.42472630739212036, 0.4097559452056885, 0.3995385468006134, 0.4044211506843567, 0.3917929530143738, 0.3955576717853546, 0.38668543100357056, 0.38083890080451965, 0.37540942430496216, 0.3700195550918579, 0.3662596046924591, 0.3653448224067688, 0.3555610179901123, 0.35211315751075745, 0.3525354564189911, 0.3437068462371826, 0.34050121903419495, 0.3306470215320587, 0.3284619450569153, 0.31926319003105164, 0.3113337755203247, 0.31448522210121155, 0.31314149498939514, 0.31332919001579285, 0.3021779954433441, 0.2981117069721222, 0.2897050082683563, 0.29093167185783386, 0.2790641188621521, 0.28106653690338135, 0.27377480268478394, 0.2753264307975769, 0.267314612865448], "accuracy": [0.26495838165283203, 0.48091402649879456, 0.5581825375556946, 0.6136573553085327, 0.6556597352027893, 0.6954167485237122, 0.7153612375259399, 0.7353057861328125, 0.7409853339195251, 0.7495707273483276, 0.7621186375617981, 0.7718927264213562, 0.7802139520645142, 0.7841764688491821, 0.7889314293861389, 0.7926297783851624, 0.798309326171875, 0.806630551815033, 0.8049134612083435, 0.809140145778656, 0.8164047002792358, 0.8240655064582825, 0.8240655064582825, 0.8272355198860168, 0.833179235458374, 0.8338396549224854, 0.8391229510307312, 0.8400475382804871, 0.8444063067436218, 0.8401796221733093, 0.8474441766738892, 0.8454629778862, 0.8541803956031799, 0.8569541573524475, 0.8555012345314026, 0.8601241707801819, 0.8544445633888245, 0.8613129258155823, 0.8650112152099609, 0.8648791313171387, 0.8702945709228516, 0.8702945709228516, 0.8704266548156738, 0.8697662353515625, 0.8701624870300293, 0.8712190985679626, 0.8786157965660095, 0.8803328275680542, 0.8840311765670776, 0.8808611631393433, 0.8816536664962769, 0.8899748921394348, 0.886672854423523, 0.8897107243537903, 0.8874653577804565, 0.8889182209968567, 0.8883898854255676, 0.8973715305328369, 0.8949940800666809, 0.8992207050323486, 0.9005415439605713, 0.9012019634246826, 0.8965790271759033, 0.9034473896026611], "val_loss": [2.0460917949676514, 1.529455542564392, 1.0575388669967651, 0.8541121482849121, 0.7739091515541077, 0.70611172914505, 0.6625648736953735, 0.625510573387146, 0.6049770712852478, 0.5804953575134277, 0.5610042214393616, 0.5427563190460205, 0.5268645882606506, 0.5107231140136719, 0.4973599314689636, 0.488801509141922, 0.47482210397720337, 0.4654199182987213, 0.45712289214134216, 0.4577660858631134, 0.43990257382392883, 0.43762487173080444, 0.42739012837409973, 0.42087501287460327, 0.41490575671195984, 0.4082443118095398, 0.407114177942276, 0.4001888036727905, 0.4003475606441498, 0.3959207236766815, 0.39062419533729553, 0.38349467515945435, 0.37655550241470337, 0.373515248298645, 0.3711915612220764, 0.3658847212791443, 0.3674739897251129, 0.3631880283355713, 0.36054691672325134, 0.35671085119247437, 0.3547889292240143, 0.35621729493141174, 0.3496755361557007, 0.35330066084861755, 0.34785863757133484, 0.34528544545173645, 0.34191757440567017, 0.3419966995716095, 0.34344980120658875, 0.33704644441604614, 0.33580008149147034, 0.33600714802742004, 0.3310827314853668, 0.33479323983192444, 0.3321058750152588, 0.3285708725452423, 0.3278006315231323, 0.32428592443466187, 0.32693856954574585, 0.3251033425331116, 0.32216620445251465, 0.3296940326690674, 0.32428866624832153, 0.32187017798423767], "val_accuracy": [0.550000011920929, 0.6576666831970215, 0.6806666851043701, 0.7066666483879089, 0.7239999771118164, 0.7456666827201843, 0.7543333172798157, 0.7720000147819519, 0.7746666669845581, 0.7896666526794434, 0.7986666560173035, 0.8066666722297668, 0.8169999718666077, 0.8226666450500488, 0.8243333101272583, 0.8276666402816772, 0.8323333263397217, 0.8363333344459534, 0.8423333168029785, 0.8336666822433472, 0.8420000076293945, 0.8426666855812073, 0.8510000109672546, 0.8513333201408386, 0.8546666502952576, 0.8496666550636292, 0.8519999980926514, 0.8526666760444641, 0.8510000109672546, 0.8566666841506958, 0.8586666584014893, 0.8613333106040955, 0.8659999966621399, 0.8659999966621399, 0.8663333058357239, 0.8679999709129333, 0.8653333187103271, 0.8706666827201843, 0.8726666569709778, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8733333349227905, 0.8723333477973938, 0.8766666650772095, 0.874666690826416, 0.8759999871253967, 0.8756666779518127, 0.8776666522026062, 0.875333309173584, 0.8769999742507935, 0.8769999742507935, 0.8796666860580444, 0.874666690826416, 0.8786666393280029, 0.8813333511352539, 0.8816666603088379, 0.8823333382606506, 0.8856666684150696, 0.8816666603088379, 0.8826666474342346, 0.8793333172798157, 0.8849999904632568, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 4, 0, 1, 7, 5, 3, 3, 6, 9], [0, 2, 0, 3, 4, 4, 4, 4, 5], [16, 16, 99], [0, 1, 1], [2], [0, 5], [12], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 6, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 4, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.11599999666213989, "mapping_values": [1, 9, 5, 4, 1, 23, 14, 9, 3, 3, 1, 2, 1, 17, 9, 8, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.math.multiply(grad, grad)), grad), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), alpha)", "other_info": {"loss": [2.309926986694336, 2.3104350566864014, 2.313723564147949, 2.3199691772460938, 2.320382595062256, 2.323317050933838], "accuracy": [0.09417514503002167, 0.1014397069811821, 0.10210011899471283, 0.10368511080741882, 0.09998679161071777, 0.10540219396352768], "val_loss": [2.307831287384033, 2.3094210624694824, 2.3149030208587646, 2.314934492111206, 2.3145909309387207, 2.314939022064209], "val_accuracy": [0.11166666448116302, 0.10466666519641876, 0.10100000351667404, 0.0989999994635582, 0.10233332961797714, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 1, 0, 0], [16, 16], [0, 0, 1, 0], [0, 2, 9], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 6, 3, 3, 1, 4, 3, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.3041024208068848, 2.302616596221924, 2.3026087284088135, 2.3026084899902344, 2.3026082515716553, 2.3026084899902344], "accuracy": [0.08360850811004639, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026692867279053, 2.3026649951934814, 2.3026649951934814, 2.3026647567749023, 2.3026647567749023, 2.3026647567749023], "val_accuracy": [0.0989999994635582, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 79, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), sigma), tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0, 21, 11, 10, 4], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3, 0], [16, 16, 54], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 2, 8, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [94, 99, 96, 25, 61, 1, 99]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 3, 2, 1, 1, 0, 26, 15, 11, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3084487915039062, 2.309901475906372, 2.3097729682922363, 2.30953311920166, 2.3092689514160156, 2.3093130588531494], "accuracy": [0.09166556596755981, 0.09126931428909302, 0.09747721254825592, 0.09192973375320435, 0.09206181764602661, 0.09919429570436478], "val_loss": [2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]