[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232718467712402, 1.8622286319732666, 1.389933466911316, 1.0946165323257446, 0.9348583817481995, 0.8349327445030212, 0.7652209997177124, 0.719111442565918, 0.6901843547821045, 0.6525260806083679, 0.6199811100959778, 0.6019373536109924, 0.5862500071525574, 0.5756805539131165, 0.5560535192489624, 0.5494343638420105, 0.5247906446456909, 0.5224943161010742, 0.5065063834190369, 0.4811566174030304, 0.4846971333026886, 0.47747963666915894, 0.459867000579834, 0.45534101128578186, 0.4463144838809967, 0.4425077438354492, 0.4355190694332123, 0.4226289987564087, 0.4179234802722931, 0.4174681305885315, 0.39809614419937134, 0.4001958668231964, 0.3910403847694397, 0.38137906789779663, 0.3787533640861511, 0.3825996518135071, 0.37731844186782837, 0.37061840295791626, 0.35876187682151794, 0.35191357135772705, 0.35311397910118103, 0.3479614853858948, 0.3416137397289276, 0.3374350666999817, 0.33520951867103577, 0.32388919591903687, 0.3194425702095032, 0.31437110900878906, 0.31280916929244995, 0.31058815121650696, 0.3077753782272339, 0.29735296964645386, 0.2927703857421875, 0.29255643486976624, 0.287638396024704, 0.28793811798095703, 0.28032469749450684, 0.27649080753326416, 0.27516970038414, 0.2658289968967438, 0.26538026332855225, 0.2598673403263092, 0.2473607212305069, 0.25092971324920654, 0.24787916243076324, 0.2445262372493744, 0.24544021487236023, 0.2364879697561264, 0.23683448135852814, 0.22852249443531036, 0.23112714290618896], "accuracy": [0.2665433883666992, 0.488971084356308, 0.5583146214485168, 0.6193369626998901, 0.6617355942726135, 0.7003037929534912, 0.7234182953834534, 0.7359662055969238, 0.7471932172775269, 0.7597411274909973, 0.772288978099823, 0.7792893648147583, 0.7887993454933167, 0.789459764957428, 0.7960638999938965, 0.7981772422790527, 0.8115176558494568, 0.809140145778656, 0.8191784620285034, 0.8232730031013489, 0.8255184292793274, 0.8251221776008606, 0.8338396549224854, 0.835160493850708, 0.8364813327789307, 0.8378021121025085, 0.843481719493866, 0.8479725122451782, 0.844010055065155, 0.8514066934585571, 0.8511425256729126, 0.8576145768165588, 0.8558974862098694, 0.8647470474243164, 0.86118084192276, 0.8622375130653381, 0.8648791313171387, 0.8654074668884277, 0.8668603897094727, 0.8684453964233398, 0.8701624870300293, 0.8768987059593201, 0.8751816153526306, 0.8796724081039429, 0.8726720213890076, 0.8853520154953003, 0.8841632604598999, 0.8877294659614563, 0.8860124349594116, 0.8856161832809448, 0.886672854423523, 0.8923524022102356, 0.8910315632820129, 0.8928807377815247, 0.8936732411384583, 0.8961827754974365, 0.8980319499969482, 0.8982961177825928, 0.8977677822113037, 0.9034473896026611, 0.9013340473175049, 0.9082023501396179, 0.9055606722831726, 0.9091269373893738, 0.9105798602104187, 0.9117686152458191, 0.9101836085319519, 0.9153348207473755, 0.91124027967453, 0.9144102334976196, 0.9162594079971313], "val_loss": [2.0379602909088135, 1.5104999542236328, 1.0413727760314941, 0.8251780867576599, 0.7306826114654541, 0.6751001477241516, 0.6281437873840332, 0.6028383374214172, 0.5753681063652039, 0.5457592010498047, 0.5298649668693542, 0.5178238749504089, 0.5050903558731079, 0.49023863673210144, 0.48306310176849365, 0.47232604026794434, 0.4628126323223114, 0.4562952518463135, 0.447390615940094, 0.43681371212005615, 0.4347614645957947, 0.42260098457336426, 0.416280597448349, 0.4103022813796997, 0.4063623547554016, 0.4059181809425354, 0.40361809730529785, 0.3975133001804352, 0.39465028047561646, 0.386834055185318, 0.3842499256134033, 0.379436194896698, 0.3760213255882263, 0.3706813156604767, 0.37052059173583984, 0.36764344573020935, 0.36348506808280945, 0.36401593685150146, 0.35918331146240234, 0.3592793047428131, 0.352383553981781, 0.3493618965148926, 0.3510054051876068, 0.3500122129917145, 0.3453393876552582, 0.34075456857681274, 0.3426267206668854, 0.3402087390422821, 0.33592894673347473, 0.33776289224624634, 0.33498579263687134, 0.33210980892181396, 0.3303738236427307, 0.33555570244789124, 0.3337688148021698, 0.3290712535381317, 0.32798898220062256, 0.32809099555015564, 0.33202823996543884, 0.3261185586452484, 0.32593172788619995, 0.32118481397628784, 0.32296064496040344, 0.3165455162525177, 0.32397663593292236, 0.31556734442710876, 0.3182888329029083, 0.3182894289493561, 0.3149656355381012, 0.3150152266025543, 0.3181494176387787], "val_accuracy": [0.5410000085830688, 0.6480000019073486, 0.6790000200271606, 0.7099999785423279, 0.734333336353302, 0.749666690826416, 0.7673333287239075, 0.7646666765213013, 0.7900000214576721, 0.7986666560173035, 0.8043333292007446, 0.8149999976158142, 0.8143333196640015, 0.8243333101272583, 0.8240000009536743, 0.82833331823349, 0.8349999785423279, 0.8343333601951599, 0.8399999737739563, 0.8429999947547913, 0.8486666679382324, 0.8483333587646484, 0.8483333587646484, 0.8479999899864197, 0.8529999852180481, 0.8510000109672546, 0.856333315372467, 0.8533333539962769, 0.8516666889190674, 0.8550000190734863, 0.8579999804496765, 0.8640000224113464, 0.859000027179718, 0.8553333282470703, 0.862333357334137, 0.8576666712760925, 0.8659999966621399, 0.8643333315849304, 0.8619999885559082, 0.8636666536331177, 0.8693333268165588, 0.8693333268165588, 0.8666666746139526, 0.8709999918937683, 0.8696666955947876, 0.8730000257492065, 0.8703333139419556, 0.8740000128746033, 0.8730000257492065, 0.8736666440963745, 0.8703333139419556, 0.875, 0.874666690826416, 0.878333330154419, 0.875333309173584, 0.8773333430290222, 0.8786666393280029, 0.8776666522026062, 0.8796666860580444, 0.8816666603088379, 0.8773333430290222, 0.8796666860580444, 0.8799999952316284, 0.8823333382606506, 0.8806666731834412, 0.8846666812896729, 0.8826666474342346, 0.8823333382606506, 0.8846666812896729, 0.8846666812896729, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 9, 3, 0, 1], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 9, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 3, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 11, 6, 5, 2, 1, 0, 1, 1, 16, 9, 7, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))", "other_info": {"loss": [96680198144.0, 10423369728000.0, 153370262241280.0, 1019895282139136.0, 4338950445465600.0, 1.3925444688543744e+16], "accuracy": [0.09972262382507324, 0.10091137140989304, 0.10302469879388809, 0.10038304328918457, 0.10276053100824356, 0.09774138033390045], "val_loss": [865954889728.0, 36020494008320.0, 349539974250496.0, 1805953754202112.0, 6543546957955072.0, 1.8870437031182336e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 4, 6, 7, 0, 1, 6, 1, 5, 1, 7, 3, 5, 0, 3, 7, 3, 0, 6, 8, 6, 8, 1], [0, 2, 0, 3, 4, 1, 4, 3, 0, 5, 2, 1, 3, 3, 1, 0, 1, 3], [16, 16, 83, 53], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 46, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), tf.math.subtract(grad, tf.math.divide_no_nan(alpha, tf.math.subtract(grad, tf.math.square(grad))))), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(grad, beta), tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.divide_no_nan(grad, tf.math.sqrt(grad)))), alpha)))), tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 9, 5, 4, 2, 44, 26, 18, 4, 2, 1, 1, 0, 17, 10, 7, 6], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 87, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031394481658936, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 7, 7, 7, 6, 8, 9, 5, 5, 2, 5, 9], [0, 2, 0, 2, 4, 5, 3], [16, 16, 36, 40], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 3, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [17, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 24, 17, 7, 4, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad))), tf.math.add(tf.math.square(grad), grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3034427165985107, 2.3027307987213135, 2.3027522563934326, 2.3027682304382324, 2.3027820587158203, 2.302788496017456], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302670478820801, 2.3026833534240723, 2.302696704864502, 2.302706480026245, 2.302713632583618, 2.302720308303833], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]