[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231667041778564, 1.8681519031524658, 1.3963611125946045, 1.1031817197799683, 0.9545671939849854, 0.84571772813797, 0.7843282222747803, 0.7293596267700195, 0.6932997107505798, 0.670002818107605, 0.6437047719955444, 0.6199607253074646, 0.5994550585746765, 0.5791250467300415, 0.5617269277572632, 0.5519409775733948, 0.5388022065162659, 0.5263351798057556, 0.5138272643089294, 0.5045765042304993, 0.4959552586078644, 0.48674237728118896, 0.48070141673088074, 0.46933096647262573, 0.45463818311691284, 0.45895498991012573, 0.44640490412712097, 0.44322916865348816, 0.42979949712753296, 0.42055201530456543, 0.42009565234184265, 0.4084666967391968, 0.40201446413993835, 0.39442598819732666, 0.39463329315185547, 0.38704270124435425, 0.38381120562553406, 0.3750552833080292, 0.3767274022102356, 0.37083199620246887, 0.3653433620929718, 0.3551304340362549, 0.3478391766548157, 0.35001224279403687, 0.3369152843952179, 0.33795589208602905, 0.32763123512268066, 0.3273658752441406, 0.32394328713417053, 0.31848758459091187, 0.3106384575366974, 0.3081054389476776, 0.3128196597099304, 0.2965041399002075, 0.2989027500152588, 0.2921934127807617, 0.28333038091659546, 0.28480371832847595, 0.2838420867919922, 0.27426090836524963, 0.27222105860710144, 0.26734521985054016, 0.26135021448135376, 0.26492440700531006], "accuracy": [0.26244881749153137, 0.4897635579109192, 0.5584467053413391, 0.6141856908798218, 0.6580372452735901, 0.6970016956329346, 0.7176066637039185, 0.7421740889549255, 0.7461365461349487, 0.7572315335273743, 0.7637035846710205, 0.7734777331352234, 0.7804781198501587, 0.7926297783851624, 0.7965922355651855, 0.802271842956543, 0.805177628993988, 0.8079513907432556, 0.8158763647079468, 0.8206313848495483, 0.8197067975997925, 0.8252542614936829, 0.8273676037788391, 0.8317263126373291, 0.8348963260650635, 0.83119797706604, 0.8381983637809753, 0.837537944316864, 0.8461233377456665, 0.8466516733169556, 0.8474441766738892, 0.8507462739944458, 0.8536521196365356, 0.8582749962806702, 0.8582749962806702, 0.8607845902442932, 0.8642187118530273, 0.8651432991027832, 0.8665962219238281, 0.8664641380310059, 0.8599920868873596, 0.8669924736022949, 0.8766345381736755, 0.8717474341392517, 0.8824461698532104, 0.8778232932090759, 0.8800686597824097, 0.8831065893173218, 0.8808611631393433, 0.886672854423523, 0.8862766027450562, 0.8879936337471008, 0.8820499181747437, 0.893541157245636, 0.887201189994812, 0.895918607711792, 0.8963148593902588, 0.8947299122810364, 0.8961827754974365, 0.9000132083892822, 0.9019944667816162, 0.9066173434257507, 0.902390718460083, 0.9034473896026611], "val_loss": [2.0351200103759766, 1.508061170578003, 1.037107229232788, 0.8284092545509338, 0.7376027703285217, 0.6835783123970032, 0.6429190039634705, 0.6037379503250122, 0.576988160610199, 0.5602023005485535, 0.5416193604469299, 0.529600203037262, 0.5095254182815552, 0.5003913044929504, 0.4903891682624817, 0.47971636056900024, 0.4706730842590332, 0.4632652997970581, 0.453613817691803, 0.4498104155063629, 0.4425874352455139, 0.43830785155296326, 0.4360572397708893, 0.42658281326293945, 0.4223748445510864, 0.41629165410995483, 0.4125615358352661, 0.4137479364871979, 0.4076162576675415, 0.39632201194763184, 0.39763882756233215, 0.39025890827178955, 0.39877086877822876, 0.3845345079898834, 0.3856997787952423, 0.3786948323249817, 0.3770303428173065, 0.37668222188949585, 0.3715406060218811, 0.37445858120918274, 0.36747097969055176, 0.36624976992607117, 0.3649347424507141, 0.3610192537307739, 0.36362430453300476, 0.3567740023136139, 0.3576711118221283, 0.35197100043296814, 0.3514825701713562, 0.34841373562812805, 0.34996625781059265, 0.34968847036361694, 0.3429145812988281, 0.34520483016967773, 0.33956339955329895, 0.3473339378833771, 0.3438023626804352, 0.33701765537261963, 0.3369302451610565, 0.33962252736091614, 0.3335077166557312, 0.3332366645336151, 0.33197927474975586, 0.33086445927619934], "val_accuracy": [0.5249999761581421, 0.6510000228881836, 0.6893333196640015, 0.7099999785423279, 0.7356666922569275, 0.7509999871253967, 0.762666642665863, 0.7793333530426025, 0.7870000004768372, 0.7943333387374878, 0.8040000200271606, 0.8103333115577698, 0.8180000185966492, 0.8153333067893982, 0.8296666741371155, 0.8289999961853027, 0.8309999704360962, 0.831333339214325, 0.8363333344459534, 0.8386666774749756, 0.8456666469573975, 0.843999981880188, 0.8426666855812073, 0.8456666469573975, 0.8500000238418579, 0.8473333120346069, 0.8529999852180481, 0.8526666760444641, 0.8566666841506958, 0.8566666841506958, 0.8560000061988831, 0.859666645526886, 0.8579999804496765, 0.862333357334137, 0.8610000014305115, 0.8669999837875366, 0.8656666874885559, 0.8646666407585144, 0.8676666617393494, 0.8693333268165588, 0.8663333058357239, 0.8679999709129333, 0.8706666827201843, 0.8743333220481873, 0.8700000047683716, 0.8706666827201843, 0.8763333559036255, 0.8740000128746033, 0.875, 0.8776666522026062, 0.878333330154419, 0.8769999742507935, 0.8803333044052124, 0.8776666522026062, 0.8809999823570251, 0.8773333430290222, 0.878333330154419, 0.8820000290870667, 0.8843333125114441, 0.8820000290870667, 0.8803333044052124, 0.8796666860580444, 0.8820000290870667, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3, 4, 4], [0, 2, 0, 3, 4, 0, 3], [16, 58, 20], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [64, 99, 33, 47, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 16, 9, 7, 3, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303441047668457, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [3, 2, 3, 5, 3, 8, 8, 9], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 1, 0], [9, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), alpha)", "other_info": {"loss": [2.309884548187256, 2.310115337371826, 2.3098771572113037, 2.3097894191741943, 2.310218572616577, 2.3088271617889404], "accuracy": [0.0944393053650856, 0.09470347315073013, 0.09259014576673508, 0.0952318087220192, 0.09549596905708313, 0.09311848133802414], "val_loss": [2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 2, 2, 1, 1, 1, 18, 9, 9, 4], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 8, 3, 8, 2], [2, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 6, 1], [0, 2, 0, 3, 0, 5, 0], [16, 16, 26, 80], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 0, 4, 1, 4, 2, 8, 3, 6, 9], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [0, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.multiply(sigma, alpha))), beta), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3099942207336426, 2.3108420372009277, 2.310166120529175, 2.309892177581787, 2.3110339641571045, 2.309873580932617], "accuracy": [0.09113723784685135, 0.09470347315073013, 0.09285431355237961, 0.0948355570435524, 0.09391097724437714, 0.09391097724437714], "val_loss": [2.3090221881866455, 2.3090221881866455, 2.3090221881866455, 2.3090221881866455, 2.3090221881866455, 2.3090221881866455], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 12, 7, 5, 1, 16, 9, 7, 4, 2, 1, 1, 0, 24, 14, 10, 6], "tree_depth": 25}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9, 5, 3, 8, 1, 0, 6, 8, 5, 5, 1, 9], [0, 1, 0, 2, 3, 3], [39, 57, 67, 65], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08828571438789368, "mapping_values": [1, 23, 17, 6, 4, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.subtract(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3102643489837646, 2.3084168434143066, 2.3098649978637695, 2.3088557720184326, 2.3089804649353027, 2.309893846511841], "accuracy": [0.09179764986038208, 0.09576013684272766, 0.09391097724437714, 0.09747721254825592, 0.09192973375320435, 0.08598599582910538], "val_loss": [2.3080732822418213, 2.308032274246216, 2.307983160018921, 2.307926654815674, 2.3078551292419434, 2.3077774047851562], "val_accuracy": [0.08866667002439499, 0.08733333647251129, 0.0860000029206276, 0.08533333241939545, 0.08500000089406967, 0.08500000089406967]}}]