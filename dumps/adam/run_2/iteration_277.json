[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2201783657073975, 1.8538748025894165, 1.3813714981079102, 1.0740165710449219, 0.9206811785697937, 0.8284559845924377, 0.7543606162071228, 0.7075798511505127, 0.6720679402351379, 0.6470681428909302, 0.6221200227737427, 0.6020458340644836, 0.5871044993400574, 0.5657778382301331, 0.5502195358276367, 0.5308852791786194, 0.5220589637756348, 0.5198774337768555, 0.5040628910064697, 0.4930323660373688, 0.4812244176864624, 0.4747273623943329, 0.4703874886035919, 0.4578305184841156, 0.4617652893066406, 0.4330178499221802, 0.42997676134109497, 0.42552223801612854, 0.41746628284454346, 0.4135994017124176, 0.3971829116344452, 0.4050627648830414, 0.3972182869911194, 0.39601030945777893, 0.383768230676651, 0.36990395188331604, 0.36720040440559387, 0.36668696999549866, 0.35589006543159485, 0.35266566276550293, 0.3546658754348755, 0.34261104464530945, 0.3454679548740387, 0.338643878698349, 0.33518409729003906, 0.3310198187828064, 0.33226481080055237, 0.31765300035476685, 0.31215617060661316, 0.3116306960582733, 0.30918315052986145, 0.304106205701828, 0.2990092933177948, 0.2878826856613159, 0.2812441885471344, 0.28366702795028687, 0.2766357958316803, 0.2762819826602936, 0.26692718267440796, 0.27133533358573914, 0.27137085795402527, 0.26977789402008057, 0.25903499126434326, 0.25169312953948975, 0.25747889280319214, 0.25163793563842773, 0.24797002971172333, 0.24121776223182678, 0.2391018569469452, 0.23741097748279572, 0.2327963262796402, 0.22833693027496338, 0.2302187979221344], "accuracy": [0.2771100103855133, 0.5024435520172119, 0.5690133571624756, 0.6268656849861145, 0.6712455153465271, 0.7059833407402039, 0.724739134311676, 0.7401928305625916, 0.7549861073493958, 0.7638356685638428, 0.770439863204956, 0.7750627398490906, 0.7808743715286255, 0.793950617313385, 0.8025360107421875, 0.8072909712791443, 0.8079513907432556, 0.8144234418869019, 0.8197067975997925, 0.8234050869941711, 0.8259146809577942, 0.8314621448516846, 0.8310658931732178, 0.8368775844573975, 0.8370096683502197, 0.8467837572097778, 0.8479725122451782, 0.8482366800308228, 0.8477083444595337, 0.8529917001724243, 0.8603883385658264, 0.8552370667457581, 0.8570862412452698, 0.8588033318519592, 0.863558292388916, 0.8681812286376953, 0.8697662353515625, 0.8669924736022949, 0.8758420348167419, 0.8714832663536072, 0.8746532797813416, 0.8794082403182983, 0.8750495314598083, 0.8790120482444763, 0.8757099509239197, 0.883238673210144, 0.8803328275680542, 0.8845595121383667, 0.8887861371040344, 0.8868049383163452, 0.8848236799240112, 0.8923524022102356, 0.8922203183174133, 0.8957865834236145, 0.9001452922821045, 0.8971073627471924, 0.8985602855682373, 0.8988244533538818, 0.8989565372467041, 0.89988112449646, 0.902390718460083, 0.9019944667816162, 0.9056927561759949, 0.9064852595329285, 0.9066173434257507, 0.9085986018180847, 0.910711944103241, 0.9137498140335083, 0.9125610589981079, 0.91124027967453, 0.9169198274612427, 0.915070652961731, 0.9162594079971313], "val_loss": [2.0365452766418457, 1.5103812217712402, 1.0519120693206787, 0.8502263426780701, 0.7650917768478394, 0.7095632553100586, 0.6604834198951721, 0.628466010093689, 0.6056650280952454, 0.5786226987838745, 0.563215434551239, 0.548564612865448, 0.5323176383972168, 0.5259116291999817, 0.5113358497619629, 0.4982975721359253, 0.49352195858955383, 0.4838545024394989, 0.47183936834335327, 0.4679533839225769, 0.45793408155441284, 0.45982128381729126, 0.45227882266044617, 0.44060570001602173, 0.4360310733318329, 0.431058794260025, 0.4294187128543854, 0.4234079122543335, 0.41767817735671997, 0.41217929124832153, 0.4107643663883209, 0.41576582193374634, 0.41314417123794556, 0.40093472599983215, 0.39886507391929626, 0.3935028612613678, 0.39641129970550537, 0.39068683981895447, 0.38623735308647156, 0.3876056373119354, 0.3806406259536743, 0.38527119159698486, 0.3774726092815399, 0.3797270655632019, 0.3730880618095398, 0.375583291053772, 0.3683604300022125, 0.3731485605239868, 0.3667064309120178, 0.36560460925102234, 0.3605094254016876, 0.36220091581344604, 0.35956883430480957, 0.3547021448612213, 0.3523990213871002, 0.35342109203338623, 0.3526623845100403, 0.3570762574672699, 0.35469308495521545, 0.3548608124256134, 0.34861066937446594, 0.3506336212158203, 0.3504751920700073, 0.3459510803222656, 0.3435502052307129, 0.3429812788963318, 0.34583887457847595, 0.3452167212963104, 0.3425261378288269, 0.34215250611305237, 0.34356489777565, 0.3439796566963196, 0.3460172116756439], "val_accuracy": [0.5323333144187927, 0.6470000147819519, 0.6769999861717224, 0.6953333616256714, 0.7229999899864197, 0.7369999885559082, 0.7513333559036255, 0.7580000162124634, 0.7723333239555359, 0.7860000133514404, 0.7863333225250244, 0.7900000214576721, 0.8019999861717224, 0.8080000281333923, 0.8063333630561829, 0.8159999847412109, 0.8146666884422302, 0.8196666836738586, 0.8286666870117188, 0.8266666531562805, 0.8273333311080933, 0.8299999833106995, 0.8330000042915344, 0.8383333086967468, 0.8399999737739563, 0.8416666388511658, 0.8429999947547913, 0.843666672706604, 0.8473333120346069, 0.8479999899864197, 0.8483333587646484, 0.8456666469573975, 0.847000002861023, 0.8546666502952576, 0.8526666760444641, 0.8586666584014893, 0.8613333106040955, 0.8569999933242798, 0.8610000014305115, 0.8610000014305115, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8619999885559082, 0.8666666746139526, 0.8653333187103271, 0.871666669845581, 0.8650000095367432, 0.8676666617393494, 0.8693333268165588, 0.8730000257492065, 0.871666669845581, 0.871999979019165, 0.871999979019165, 0.8726666569709778, 0.8773333430290222, 0.8756666779518127, 0.8723333477973938, 0.8743333220481873, 0.8773333430290222, 0.8790000081062317, 0.875, 0.8763333559036255, 0.8769999742507935, 0.8796666860580444, 0.8816666603088379, 0.8790000081062317, 0.8820000290870667, 0.8790000081062317, 0.8769999742507935, 0.8793333172798157, 0.8796666860580444, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 9, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 2], [1, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 1, 9, 4, 1, 8, 2, 8, 2], [4, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 80, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(alpha, tf.math.sqrt(sigma)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 8, 1], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 6], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 5, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 85, 96, 1, 61, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036394119262695, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 1, 0, 3, 6, 3, 3, 8, 7, 6, 3, 0, 4, 5, 9], [0, 2, 3, 3, 5, 2, 5, 5, 3, 1, 1, 3], [16, 7], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 5], [25, 99, 96, 99, 61, 1, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 32, 20, 12, 2, 2, 1, 1, 1, 25, 13, 12, 7], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.multiply(beta, tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), grad), tf.math.pow(alpha, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))))), alpha))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 0, 5], [2, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 1, 1, 0], [0, 7, 4, 9, 7, 9], [0, 5], [99, 15, 20], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 5, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 78, 99, 80, 1]], "fitness": -0.09514285624027252, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 8, 6, 2, 3, 17, 9, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.310716390609741, 2.3110055923461914, 2.311117172241211, 2.3110079765319824, 2.3105900287628174, 2.310450792312622, 2.3112237453460693], "accuracy": [0.09259014576673508, 0.09047681838274002, 0.09060890227556229, 0.08796724677085876, 0.09166556596755981, 0.09470347315073013, 0.09074098616838455], "val_loss": [2.3093554973602295, 2.3094167709350586, 2.309453010559082, 2.3094778060913086, 2.3094968795776367, 2.309512138366699, 2.3095250129699707], "val_accuracy": [0.08966666460037231, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]