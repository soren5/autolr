[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225804328918457, 1.8639826774597168, 1.390784740447998, 1.096927523612976, 0.9300432205200195, 0.8429989814758301, 0.7811924815177917, 0.7349992394447327, 0.6913533806800842, 0.6628696918487549, 0.6343790888786316, 0.6172298789024353, 0.600225567817688, 0.5764689445495605, 0.5599609017372131, 0.5442590713500977, 0.5283695459365845, 0.5277918577194214, 0.5129781365394592, 0.4961915612220764, 0.4873773455619812, 0.48724818229675293, 0.46852025389671326, 0.46974509954452515, 0.45538195967674255, 0.44443437457084656, 0.437348335981369, 0.43238508701324463, 0.4167025685310364, 0.41598010063171387, 0.407080739736557, 0.40146681666374207, 0.3985295295715332, 0.3904009759426117, 0.3894582986831665, 0.3796711564064026, 0.37908923625946045, 0.3695901036262512, 0.36452728509902954, 0.36123165488243103, 0.3564930260181427, 0.3492544889450073, 0.3439244031906128, 0.34326764941215515, 0.3388550877571106, 0.328599214553833, 0.32478824257850647, 0.3209918439388275, 0.3140508234500885, 0.31286540627479553, 0.3027898669242859, 0.2959422171115875, 0.3001832067966461, 0.2959016263484955, 0.28571054339408875, 0.28007692098617554, 0.2789127826690674, 0.27661842107772827, 0.2723769545555115, 0.26447969675064087, 0.2694352865219116, 0.2664225995540619], "accuracy": [0.2697133719921112, 0.4893673360347748, 0.5604279637336731, 0.6166952848434448, 0.6664905548095703, 0.696209192276001, 0.713379979133606, 0.7317395210266113, 0.7478536367416382, 0.7539294958114624, 0.767401933670044, 0.7721568942070007, 0.7730814814567566, 0.7874785661697388, 0.7973847389221191, 0.8005547523498535, 0.8063663840293884, 0.8074230551719666, 0.8124422430992126, 0.8186501264572144, 0.8216879963874817, 0.8236692547798157, 0.8274996876716614, 0.8310658931732178, 0.8325188159942627, 0.8397833704948425, 0.8387266993522644, 0.8436138033866882, 0.8469158411026001, 0.8485008478164673, 0.852859616279602, 0.8558974862098694, 0.8589354157447815, 0.8511425256729126, 0.8549728989601135, 0.8617091774940491, 0.8625016212463379, 0.8688416481018066, 0.8692378997802734, 0.8706908226013184, 0.872407853603363, 0.8725399374961853, 0.8753136992454529, 0.876370370388031, 0.8751816153526306, 0.8768987059593201, 0.8819178342819214, 0.8844274282455444, 0.8885219693183899, 0.8881257176399231, 0.8934090733528137, 0.8928807377815247, 0.8919561505317688, 0.8894465565681458, 0.8968431949615479, 0.897899866104126, 0.8969752788543701, 0.8997490406036377, 0.9022586345672607, 0.9055606722831726, 0.9008057117462158, 0.9013340473175049], "val_loss": [2.0392138957977295, 1.5143824815750122, 1.0471183061599731, 0.8398043513298035, 0.7514449954032898, 0.6935863494873047, 0.6560000777244568, 0.6147111654281616, 0.5878198146820068, 0.5662783980369568, 0.5451468229293823, 0.5333119034767151, 0.5147401690483093, 0.5006051659584045, 0.4907686710357666, 0.4820592403411865, 0.4730498492717743, 0.46372005343437195, 0.4568537473678589, 0.4503767788410187, 0.4478602707386017, 0.43697473406791687, 0.4306613802909851, 0.42334994673728943, 0.41956615447998047, 0.4135931730270386, 0.4103742241859436, 0.4053773880004883, 0.4040122926235199, 0.39726734161376953, 0.39347803592681885, 0.3913232386112213, 0.38909977674484253, 0.3871447741985321, 0.38254237174987793, 0.3890253007411957, 0.37913644313812256, 0.3757682144641876, 0.3807840049266815, 0.377528578042984, 0.3671111762523651, 0.37456071376800537, 0.3689800202846527, 0.3671351373195648, 0.3694412410259247, 0.3634248971939087, 0.35928410291671753, 0.3565646708011627, 0.36110612750053406, 0.354214608669281, 0.3491971790790558, 0.3534304201602936, 0.35121843218803406, 0.3544231057167053, 0.3502313494682312, 0.34736889600753784, 0.34188273549079895, 0.34341108798980713, 0.34413012862205505, 0.3487250506877899, 0.3411828279495239, 0.34605956077575684], "val_accuracy": [0.5266666412353516, 0.6613333225250244, 0.6869999766349792, 0.7133333086967468, 0.7329999804496765, 0.7453333139419556, 0.7540000081062317, 0.7683333158493042, 0.7733333110809326, 0.7886666655540466, 0.7926666736602783, 0.8023333549499512, 0.8040000200271606, 0.8106666803359985, 0.8163333535194397, 0.8186666369438171, 0.8246666789054871, 0.8289999961853027, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8456666469573975, 0.8453333377838135, 0.8489999771118164, 0.8500000238418579, 0.8516666889190674, 0.8506666421890259, 0.8550000190734863, 0.8560000061988831, 0.859000027179718, 0.859000027179718, 0.8606666922569275, 0.859666645526886, 0.8603333234786987, 0.8629999756813049, 0.862333357334137, 0.862333357334137, 0.8663333058357239, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8659999966621399, 0.8683333396911621, 0.8673333525657654, 0.8646666407585144, 0.8700000047683716, 0.8700000047683716, 0.8693333268165588, 0.8669999837875366, 0.8726666569709778, 0.875333309173584, 0.8723333477973938, 0.874666690826416, 0.8733333349227905, 0.8756666779518127, 0.875333309173584, 0.8793333172798157, 0.8766666650772095, 0.8793333172798157, 0.8726666569709778, 0.878333330154419, 0.8706666827201843]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [34, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8, 4, 4], [0, 0, 4, 3, 0, 4, 3, 1, 2, 4, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 5, 5, 2, 2, 1, 1, 1, 24, 13, 11, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(sigma, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), sigma)), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.math.pow(grad, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 3, 0, 3, 7, 0, 6, 9], [0, 2, 0, 2, 3], [39, 39, 29], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 0, 5], [0, 2, 0, 3], [14, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 0, 1], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 2, 3, 0, 3, 4, 6, 5, 8, 9], [0, 2, 0, 3, 3], [16, 16, 11], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(alpha, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}, "mapping_values": [1, 10, 6, 4, 1, 15, 10, 5, 3, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 5, 1, 1, 2, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [8, 99, 96, 99, 42, 60]], "fitness": -0.09342857450246811, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 0, 11, 6, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.309770107269287, 2.3098602294921875, 2.309239625930786, 2.309497356414795, 2.309465169906616, 2.308690309524536, 2.3162076473236084, 2.317558526992798, 2.3146655559539795, 2.3156538009643555, 2.314744710922241, 2.3146164417266846, 2.3160340785980225, 2.3157570362091064, 2.314901113510132, 2.3145148754119873], "accuracy": [0.09576013684272766, 0.08889182657003403, 0.09813763201236725, 0.09417514503002167, 0.09074098616838455, 0.09576013684272766, 0.09034473448991776, 0.09166556596755981, 0.09615638852119446, 0.09298639744520187, 0.09166556596755981, 0.0948355570435524, 0.09087307006120682, 0.08875974267721176, 0.09060890227556229, 0.08611807972192764], "val_loss": [2.3082687854766846, 2.308262825012207, 2.308227300643921, 2.3081161975860596, 2.308184862136841, 2.3081793785095215, 2.314037322998047, 2.3138587474823, 2.3128976821899414, 2.3127191066741943, 2.312350273132324, 2.3122591972351074, 2.312795877456665, 2.312831401824951, 2.3124539852142334, 2.3130226135253906], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09166666865348816, 0.09133332967758179, 0.09200000017881393, 0.09200000017881393, 0.0949999988079071, 0.09600000083446503, 0.09700000286102295, 0.09733333438634872, 0.09799999743700027, 0.0976666659116745, 0.0833333358168602, 0.08266666531562805, 0.08033332973718643, 0.08133333176374435]}}]