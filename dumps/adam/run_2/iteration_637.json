[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222832202911377, 1.859877586364746, 1.4007737636566162, 1.0898579359054565, 0.9443129897117615, 0.840598464012146, 0.7727329730987549, 0.7172279357910156, 0.6936575770378113, 0.6607884168624878, 0.6281328797340393, 0.6146395206451416, 0.5862749814987183, 0.5757337212562561, 0.5617085695266724, 0.5433676242828369, 0.5439324378967285, 0.5225867629051208, 0.5075814723968506, 0.4952111840248108, 0.4947173297405243, 0.4798504412174225, 0.46643275022506714, 0.4586442708969116, 0.45115262269973755, 0.4448314309120178, 0.44305890798568726, 0.4366828203201294, 0.4303307831287384, 0.4229493737220764, 0.4112551212310791, 0.40697282552719116, 0.3994580805301666, 0.4002172648906708, 0.3867090940475464, 0.38926759362220764, 0.3750840425491333, 0.3746988773345947, 0.37249448895454407, 0.36318495869636536, 0.3702268600463867, 0.355703204870224, 0.3502907454967499, 0.34569087624549866, 0.3287698030471802, 0.33713042736053467, 0.32981330156326294, 0.31844666600227356, 0.3129650354385376, 0.316541463136673, 0.30916446447372437, 0.3071049153804779, 0.3006936311721802, 0.2988116443157196, 0.2945956289768219, 0.2822940945625305, 0.2876253128051758, 0.2796672284603119, 0.27861151099205017, 0.2786426544189453, 0.2762359380722046, 0.26660972833633423, 0.26280203461647034, 0.26347965002059937, 0.24904969334602356, 0.25087201595306396, 0.245290607213974, 0.2516663074493408, 0.2446899563074112, 0.23877105116844177, 0.23783111572265625, 0.2303163707256317, 0.2372380495071411, 0.22601620852947235, 0.21739616990089417, 0.21354402601718903, 0.21103248000144958, 0.21517904102802277, 0.2062467485666275, 0.20114178955554962, 0.2005428671836853, 0.1980581283569336, 0.19127897918224335, 0.19997529685497284, 0.19121962785720825, 0.1914353370666504, 0.18352293968200684], "accuracy": [0.2627129852771759, 0.48474442958831787, 0.5621450543403625, 0.6242240071296692, 0.6674151420593262, 0.6968696117401123, 0.7301545143127441, 0.7409853339195251, 0.7497028112411499, 0.757099449634552, 0.7750627398490906, 0.7778365015983582, 0.7878747582435608, 0.7906485199928284, 0.8021397590637207, 0.8062343001365662, 0.8047813773155212, 0.8121780753135681, 0.8197067975997925, 0.8231409192085266, 0.8272355198860168, 0.8308017253875732, 0.8380662798881531, 0.8363492488861084, 0.8430854678153992, 0.8442742228507996, 0.8416325449943542, 0.8471800088882446, 0.8473120927810669, 0.8529917001724243, 0.8584070801734924, 0.8560295701026917, 0.8589354157447815, 0.8617091774940491, 0.8652753829956055, 0.8648791313171387, 0.8696341514587402, 0.8659358024597168, 0.8692378997802734, 0.873860776424408, 0.8701624870300293, 0.8747853636741638, 0.8749174475669861, 0.8787478804588318, 0.884691596031189, 0.8819178342819214, 0.8841632604598999, 0.8926165699958801, 0.8893144726753235, 0.8898428082466125, 0.8914278149604797, 0.8912957310676575, 0.8923524022102356, 0.8961827754974365, 0.8989565372467041, 0.9001452922821045, 0.8952582478523254, 0.9043719172477722, 0.9002773761749268, 0.9037115573883057, 0.9002773761749268, 0.9054285883903503, 0.9054285883903503, 0.9078060984611511, 0.9133535623550415, 0.9120327830314636, 0.9138818979263306, 0.9113723635673523, 0.910711944103241, 0.9158631563186646, 0.9163914918899536, 0.9192973375320435, 0.9166556596755981, 0.9212785363197327, 0.9225993752479553, 0.9260335564613342, 0.9282789826393127, 0.9222031235694885, 0.9272223114967346, 0.9289394021034241, 0.9299960136413574, 0.9311847686767578, 0.9282789826393127, 0.9282789826393127, 0.9310526847839355, 0.9317131042480469, 0.939638078212738], "val_loss": [2.0323283672332764, 1.502731442451477, 1.0317999124526978, 0.8294499516487122, 0.7395896911621094, 0.6871129274368286, 0.6438363194465637, 0.6139726042747498, 0.5802023410797119, 0.5609955787658691, 0.5435313582420349, 0.5302935242652893, 0.5100362300872803, 0.4976018965244293, 0.48989567160606384, 0.4789275825023651, 0.4693615436553955, 0.46600574254989624, 0.45305004715919495, 0.4535348415374756, 0.4465893507003784, 0.43162956833839417, 0.42401358485221863, 0.4202522933483124, 0.42138853669166565, 0.4159136116504669, 0.4063689708709717, 0.39929598569869995, 0.39746394753456116, 0.39326244592666626, 0.38928067684173584, 0.387190580368042, 0.3852977752685547, 0.37702059745788574, 0.38415151834487915, 0.37488263845443726, 0.36752966046333313, 0.3696172833442688, 0.36874255537986755, 0.36730074882507324, 0.36069604754447937, 0.3619200587272644, 0.35857295989990234, 0.3533962666988373, 0.356577605009079, 0.3478637635707855, 0.3486247658729553, 0.3428703248500824, 0.34930744767189026, 0.3403618037700653, 0.3367975950241089, 0.34844735264778137, 0.340483695268631, 0.3327336311340332, 0.33478260040283203, 0.3350107967853546, 0.33250707387924194, 0.3326271176338196, 0.32785582542419434, 0.32735583186149597, 0.3329757750034332, 0.3251831531524658, 0.3294167220592499, 0.3236622214317322, 0.3244480490684509, 0.3283258378505707, 0.3229416608810425, 0.3299974799156189, 0.3265155553817749, 0.3204885423183441, 0.31943151354789734, 0.3216293156147003, 0.3174341917037964, 0.318318247795105, 0.32134509086608887, 0.31364455819129944, 0.31565555930137634, 0.32699820399284363, 0.3135722279548645, 0.3171194791793823, 0.3192945718765259, 0.3144787549972534, 0.31800371408462524, 0.31635209918022156, 0.3194732964038849, 0.3116893172264099, 0.3184084892272949], "val_accuracy": [0.5256666541099548, 0.6426666378974915, 0.6943333148956299, 0.7179999947547913, 0.7413333058357239, 0.7583333253860474, 0.7666666507720947, 0.7730000019073486, 0.7933333516120911, 0.7973333597183228, 0.8006666898727417, 0.8096666932106018, 0.8193333148956299, 0.8253333568572998, 0.8266666531562805, 0.8333333134651184, 0.8336666822433472, 0.82833331823349, 0.843999981880188, 0.8410000205039978, 0.8360000252723694, 0.8473333120346069, 0.8493333458900452, 0.8516666889190674, 0.8496666550636292, 0.8506666421890259, 0.8543333411216736, 0.8603333234786987, 0.8619999885559082, 0.8616666793823242, 0.8610000014305115, 0.8643333315849304, 0.8643333315849304, 0.8669999837875366, 0.8640000224113464, 0.8669999837875366, 0.8726666569709778, 0.8730000257492065, 0.871999979019165, 0.8686666488647461, 0.8756666779518127, 0.871666669845581, 0.8756666779518127, 0.8759999871253967, 0.874666690826416, 0.8799999952316284, 0.8799999952316284, 0.8793333172798157, 0.8790000081062317, 0.8793333172798157, 0.8830000162124634, 0.8773333430290222, 0.8809999823570251, 0.8809999823570251, 0.8836666941642761, 0.8833333253860474, 0.8803333044052124, 0.8833333253860474, 0.8853333592414856, 0.8823333382606506, 0.8840000033378601, 0.887333333492279, 0.8846666812896729, 0.8883333206176758, 0.887333333492279, 0.8870000243186951, 0.8896666765213013, 0.8863333463668823, 0.8896666765213013, 0.8880000114440918, 0.890333354473114, 0.8893333077430725, 0.890999972820282, 0.890999972820282, 0.8916666507720947, 0.8933333158493042, 0.8926666378974915, 0.8926666378974915, 0.8949999809265137, 0.8953333497047424, 0.8946666717529297, 0.8973333239555359, 0.8966666460037231, 0.8960000276565552, 0.8946666717529297, 0.8970000147819519, 0.8949999809265137]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [24, 73], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 4, 1, 2, 0], [16, 99, 47, 99, 61, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3136985301971436, 2.334071397781372, 2.381377696990967, 2.4768738746643066, 2.7545006275177, 3.495634078979492, 2.302971363067627, 2.303450584411621, 2.3041677474975586, 2.305162191390991], "accuracy": [0.08928807079792023, 0.07621186226606369, 0.06670188903808594, 0.07317395508289337, 0.07924976944923401, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3214120864868164, 2.357480049133301, 2.4237241744995117, 2.5742359161376953, 3.1573638916015625, 2.3024845123291016, 2.3026652336120605, 2.30306339263916, 2.303668975830078, 2.3044803142547607], "val_accuracy": [0.09466666728258133, 0.09600000083446503, 0.09966666996479034, 0.10499999672174454, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 81], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8, 8], [0, 1, 4, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.pow(grad, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.sqrt(alpha)))), beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 2, 0, 9], [0, 2, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 8, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 65]], "fitness": -0.09828571230173111, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), sigma), alpha)", "other_info": {"loss": [6.223353323517379e+17, 7.095293532134441e+17, 7.188097811076874e+17, 7.19030095750103e+17, 7.142608266256712e+17, 7.00263425128792e+17], "accuracy": [0.08968432247638702, 0.09126931428909302, 0.08281600475311279, 0.08519349992275238, 0.08730682730674744, 0.08228767663240433], "val_loss": [5.454597470803722e+17, 5.454597470803722e+17, 5.454597470803722e+17, 5.454597470803722e+17, 5.454597470803722e+17, 5.454597470803722e+17], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 1], [64, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 4, 3, 6, 3, 5, 7, 0, 6, 0, 4], [0, 2, 3, 3, 5, 4, 2, 4, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 4, 1, 4, 0], [16, 99, 96, 99, 89, 1]], "fitness": -0.08799999952316284, "mapping_values": [1, 6, 3, 3, 2, 20, 11, 9, 1, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(grad, tf.math.square(grad))), tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(beta, grad)))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), sigma), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3092005252838135, 2.308673620223999, 2.308116912841797, 2.31003737449646, 2.30849289894104, 2.3102920055389404], "accuracy": [0.09232597798109055, 0.09192973375320435, 0.09681680053472519, 0.09681680053472519, 0.09576013684272766, 0.0936468094587326], "val_loss": [2.3076298236846924, 2.3074793815612793, 2.3073902130126953, 2.307326555252075, 2.307276964187622, 2.307236909866333], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]