[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8677142858505249, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228970527648926, 1.8678067922592163, 1.3947604894638062, 1.0822991132736206, 0.9329025149345398, 0.8327924609184265, 0.7614496350288391, 0.7195662260055542, 0.6821162700653076, 0.6503474712371826, 0.6295038461685181, 0.5986699461936951, 0.5832482576370239, 0.563060462474823, 0.5455516576766968, 0.5305231809616089, 0.5159026980400085, 0.5003137588500977, 0.48550495505332947, 0.473246306180954, 0.46864059567451477, 0.46451807022094727, 0.44852232933044434, 0.43952009081840515, 0.4279785454273224, 0.4243490993976593, 0.4169938266277313, 0.414043664932251, 0.40229544043540955, 0.3977448344230652, 0.3904431462287903, 0.39045587182044983, 0.37289273738861084, 0.37447187304496765, 0.3579981327056885, 0.3543958067893982, 0.36084461212158203, 0.3472804129123688, 0.3374935984611511, 0.34172704815864563, 0.3308813273906708, 0.3245159983634949, 0.3232116401195526, 0.3150825798511505, 0.3165782690048218, 0.3042025864124298, 0.30930250883102417, 0.3041893541812897, 0.29470521211624146, 0.2895148694515228, 0.291115403175354, 0.28587159514427185, 0.2784454822540283, 0.26996830105781555, 0.27195218205451965, 0.27382513880729675, 0.2610674500465393], "accuracy": [0.2785629332065582, 0.4877823293209076, 0.5683529376983643, 0.6304318904876709, 0.6740192770957947, 0.6995112895965576, 0.7230220437049866, 0.7453441023826599, 0.7489103078842163, 0.7619865536689758, 0.7740060687065125, 0.7840443849563599, 0.7868181467056274, 0.8005547523498535, 0.8067626357078552, 0.8125742673873901, 0.8195747137069702, 0.8235371708869934, 0.8284242749214172, 0.8350284099578857, 0.8256505131721497, 0.8322546482086182, 0.8408400416374207, 0.8448025584220886, 0.8491612672805786, 0.848368763923645, 0.8540483713150024, 0.8521991968154907, 0.8580108284950256, 0.8557654023170471, 0.8584070801734924, 0.8632941246032715, 0.8636903762817383, 0.8654074668884277, 0.8754457831382751, 0.8730682730674744, 0.8722757697105408, 0.8758420348167419, 0.8746532797813416, 0.878879964351654, 0.8860124349594116, 0.8886540532112122, 0.8842953443527222, 0.8877294659614563, 0.887597382068634, 0.889050304889679, 0.8868049383163452, 0.8910315632820129, 0.8919561505317688, 0.8936732411384583, 0.8982961177825928, 0.8932769894599915, 0.9009377956390381, 0.9054285883903503, 0.9000132083892822, 0.9012019634246826, 0.9019944667816162], "val_loss": [2.0414586067199707, 1.5146671533584595, 1.04591703414917, 0.8352126479148865, 0.7438256740570068, 0.6876443028450012, 0.6390365958213806, 0.603054940700531, 0.5771795511245728, 0.5593023896217346, 0.5356518030166626, 0.5188746452331543, 0.5044652223587036, 0.49175021052360535, 0.48015791177749634, 0.46746110916137695, 0.4592272937297821, 0.449948251247406, 0.4418172240257263, 0.4367513954639435, 0.4362700283527374, 0.4287711977958679, 0.42191821336746216, 0.41301217675209045, 0.41570597887039185, 0.4036945700645447, 0.40450939536094666, 0.408262699842453, 0.39852601289749146, 0.3916059136390686, 0.39252787828445435, 0.3888491094112396, 0.37800928950309753, 0.3799046277999878, 0.37361815571784973, 0.37528344988822937, 0.3684248924255371, 0.3686003088951111, 0.3666439950466156, 0.36185067892074585, 0.3618015944957733, 0.361106812953949, 0.35491743683815, 0.3542903661727905, 0.36215534806251526, 0.3557429909706116, 0.34875231981277466, 0.3542650640010834, 0.3500858247280121, 0.3462009131908417, 0.3488177955150604, 0.34161120653152466, 0.34802427887916565, 0.34488052129745483, 0.34142979979515076, 0.33957046270370483, 0.3388868272304535], "val_accuracy": [0.5353333353996277, 0.6553333401679993, 0.6836666464805603, 0.6973333358764648, 0.7286666631698608, 0.7493333220481873, 0.7580000162124634, 0.7776666879653931, 0.7846666574478149, 0.784333348274231, 0.8069999814033508, 0.8003333210945129, 0.8116666674613953, 0.8193333148956299, 0.8169999718666077, 0.8220000267028809, 0.8333333134651184, 0.8379999995231628, 0.8343333601951599, 0.8410000205039978, 0.8410000205039978, 0.8456666469573975, 0.8413333296775818, 0.8460000157356262, 0.8450000286102295, 0.8476666808128357, 0.8446666598320007, 0.8446666598320007, 0.8493333458900452, 0.8533333539962769, 0.8526666760444641, 0.8536666631698608, 0.856333315372467, 0.8576666712760925, 0.8573333621025085, 0.8566666841506958, 0.8606666922569275, 0.862666666507721, 0.8579999804496765, 0.8643333315849304, 0.8676666617393494, 0.8610000014305115, 0.8653333187103271, 0.8633333444595337, 0.8683333396911621, 0.8653333187103271, 0.8693333268165588, 0.8666666746139526, 0.8676666617393494, 0.871999979019165, 0.8703333139419556, 0.875, 0.8676666617393494, 0.8703333139419556, 0.8743333220481873, 0.875, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 0, 1, 7, 0, 2, 2, 0, 4, 4, 1, 4, 8, 1, 4, 7, 2, 1, 4, 7, 7, 6, 5, 1, 8, 7, 7, 9, 7, 1, 2, 7, 5, 6, 9, 8, 1, 6, 9], [0, 1, 0, 2, 1, 2, 3, 3, 3, 0, 1, 3, 1, 0, 0, 0, 1, 0, 2, 3, 0, 0, 2, 3, 1, 2, 2, 1], [39, 39, 15, 55, 73, 57, 99, 87, 79, 8, 16, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 9, 8, 1, 6, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 71, 43, 28, 12, 6, 3, 3, 2, 2, 1, 1, 0, 20, 12, 8, 5], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.pow(tf.math.pow(grad, tf.math.subtract(grad, tf.math.pow(grad, tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.pow(alpha, tf.math.add(tf.math.add(grad, alpha), tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), grad)))), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), alpha)))))), tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))))))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), sigma), tf.math.sqrt(tf.math.square(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 3], [16, 99, 96, 94, 73, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 9, 5, 4, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [32], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [69, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), grad)", "other_info": {"loss": [52701832413184.0, 62983682129920.0, 62811182989312.0, 62085421596672.0, 62380633489408.0, 63414135160832.0], "accuracy": [0.0956280529499054, 0.09509972482919693, 0.0956280529499054, 0.09615638852119446, 0.09760929644107819, 0.09800554811954498], "val_loss": [63237559156736.0, 63237206835200.0, 63237236195328.0, 63237232001024.0, 63238632898560.0, 63238632898560.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 2, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 23], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 9, 5, 4, 2, 8], [0, 3, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 7, 4, 3, 2, 2, 1, 1, 1, 10, 7, 3, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303762674331665, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]