[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2275099754333496, 1.8803887367248535, 1.414029836654663, 1.1098251342773438, 0.9471153616905212, 0.8570551872253418, 0.7773869633674622, 0.741923987865448, 0.6970611214637756, 0.6663369536399841, 0.6395463943481445, 0.6137568950653076, 0.593927800655365, 0.5835484862327576, 0.5670398473739624, 0.551602303981781, 0.5412006378173828, 0.5221121311187744, 0.5090228915214539, 0.49415695667266846, 0.494718462228775, 0.4783939719200134, 0.4751586318016052, 0.45987337827682495, 0.45714452862739563, 0.44926026463508606, 0.43501585721969604, 0.42462843656539917, 0.4285518229007721, 0.4108976125717163, 0.41002389788627625, 0.4010069966316223, 0.39980992674827576, 0.39480865001678467, 0.37773582339286804, 0.3804146349430084, 0.37003636360168457, 0.36540207266807556, 0.36409276723861694, 0.3582381010055542, 0.3459864556789398, 0.3436221182346344, 0.34077340364456177, 0.33607539534568787, 0.33296093344688416, 0.32192835211753845, 0.32299697399139404, 0.31722521781921387, 0.3167382776737213, 0.31151267886161804, 0.3082737326622009, 0.2968590259552002, 0.2909209728240967, 0.29231223464012146], "accuracy": [0.26059964299201965, 0.4975564777851105, 0.549068808555603, 0.6131290197372437, 0.6596222519874573, 0.6902654767036438, 0.7154933214187622, 0.7338528633117676, 0.7465327978134155, 0.7534011602401733, 0.767930269241333, 0.776251494884491, 0.7819310426712036, 0.7893276810646057, 0.7957997918128967, 0.8005547523498535, 0.8059701323509216, 0.811649739742279, 0.8113855719566345, 0.822348415851593, 0.8203672170639038, 0.8257825970649719, 0.8277638554573059, 0.8366134166717529, 0.8337075710296631, 0.8393871188163757, 0.8424250483512878, 0.8488970994949341, 0.8462554216384888, 0.8549728989601135, 0.852331280708313, 0.859199583530426, 0.8565579056739807, 0.8588033318519592, 0.8661999702453613, 0.8623695969581604, 0.8696341514587402, 0.8668603897094727, 0.8679170608520508, 0.8698983192443848, 0.871879518032074, 0.8776912093162537, 0.8741249442100525, 0.8791441321372986, 0.8849557638168335, 0.8842953443527222, 0.8840311765670776, 0.8838990926742554, 0.8824461698532104, 0.8891823887825012, 0.8901069760322571, 0.8947299122810364, 0.8936732411384583, 0.8932769894599915], "val_loss": [2.0507562160491943, 1.5351272821426392, 1.0618202686309814, 0.8499581813812256, 0.7529923319816589, 0.7003899812698364, 0.6544249057769775, 0.621295154094696, 0.5976436138153076, 0.577066957950592, 0.5589073896408081, 0.5386265516281128, 0.5277353525161743, 0.5101667642593384, 0.5038203001022339, 0.4921800196170807, 0.4846837520599365, 0.47229501605033875, 0.4617055356502533, 0.4596121907234192, 0.4519551992416382, 0.4609648883342743, 0.44142240285873413, 0.4383673369884491, 0.43559786677360535, 0.428214430809021, 0.41960445046424866, 0.4158162474632263, 0.4099936783313751, 0.41088876128196716, 0.40483319759368896, 0.403252512216568, 0.4013088047504425, 0.3950839042663574, 0.39618903398513794, 0.38830652832984924, 0.38749104738235474, 0.3843667507171631, 0.38924291729927063, 0.3825123608112335, 0.3801402449607849, 0.3805418312549591, 0.3758506178855896, 0.3743225038051605, 0.3718999922275543, 0.37150007486343384, 0.3718523681163788, 0.36591362953186035, 0.3677138686180115, 0.36463430523872375, 0.36708104610443115, 0.361508309841156, 0.3598299026489258, 0.3606598973274231], "val_accuracy": [0.4970000088214874, 0.637333333492279, 0.6766666769981384, 0.6949999928474426, 0.7246666550636292, 0.7423333525657654, 0.7563333511352539, 0.7646666765213013, 0.7803333401679993, 0.7823333144187927, 0.7919999957084656, 0.800000011920929, 0.8073333501815796, 0.8153333067893982, 0.8173333406448364, 0.8199999928474426, 0.8203333616256714, 0.8330000042915344, 0.8366666436195374, 0.8323333263397217, 0.8373333215713501, 0.831333339214325, 0.8403333425521851, 0.8433333039283752, 0.840666651725769, 0.8473333120346069, 0.8526666760444641, 0.8506666421890259, 0.8533333539962769, 0.8503333330154419, 0.8519999980926514, 0.8569999933242798, 0.8523333072662354, 0.8569999933242798, 0.8586666584014893, 0.859666645526886, 0.859666645526886, 0.862333357334137, 0.8586666584014893, 0.8633333444595337, 0.859333336353302, 0.862666666507721, 0.8640000224113464, 0.8613333106040955, 0.8686666488647461, 0.8683333396911621, 0.8633333444595337, 0.8676666617393494, 0.871666669845581, 0.8669999837875366, 0.8709999918937683, 0.8696666955947876, 0.8690000176429749, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [1, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 4, 6, 8, 0, 4, 1, 3, 2, 8, 4], [0, 0, 0, 0, 3, 0, 3, 1, 2, 0], [99, 8, 80, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 8, 5, 3, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.math.multiply(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.pow(alpha, beta))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035333156585693, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 0, 2], [69, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [31], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 1, 3, 6, 5, 1, 4, 1, 4, 2, 8], [4, 0, 0, 4, 4, 0, 1, 4, 2, 0], [16, 99, 37, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)), grad))), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1, 0, 1, 0, 1], [3, 4, 0], [3, 6, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 1, 1, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 90, 92, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 6, 3, 3, 0, 14, 8, 6, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 2, 2, 0, 3], [0, 1, 0, 2], [38, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [11, 34], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [1.8868293201352635e+28, 3816.506103515625, 6925.3935546875, 9905.4140625, 12974.1025390625, 16380.900390625, 19680.810546875, 22508.673828125, 25332.142578125, 28695.71484375], "accuracy": [0.1006472036242485, 0.1018359512090683, 0.10130762308835983, 0.09813763201236725, 0.09840179979801178, 0.09721305221319199, 0.09919429570436478, 0.09998679161071777, 0.10276053100824356, 0.09906221181154251], "val_loss": [2189.148193359375, 4864.9482421875, 8385.1240234375, 11919.2822265625, 15810.3310546875, 17661.490234375, 20268.568359375, 23895.9140625, 28239.341796875, 31978.517578125], "val_accuracy": [0.10300000011920929, 0.10100000351667404, 0.09833333641290665, 0.0989999994635582, 0.10333333164453506, 0.10300000011920929, 0.10100000351667404, 0.09833333641290665, 0.0989999994635582, 0.10333333164453506]}}]