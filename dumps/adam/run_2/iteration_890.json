[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8765714168548584, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2207868099212646, 1.8551198244094849, 1.376999855041504, 1.079193115234375, 0.9261051416397095, 0.8214502930641174, 0.7540466785430908, 0.7097127437591553, 0.6744216680526733, 0.6386182308197021, 0.6243062615394592, 0.5977883338928223, 0.5770522952079773, 0.5624412894248962, 0.5430689454078674, 0.5280993580818176, 0.5117299556732178, 0.5109298229217529, 0.49111807346343994, 0.4837862253189087, 0.4856754541397095, 0.4673590362071991, 0.4575354754924774, 0.444985032081604, 0.4405623972415924, 0.43148261308670044, 0.43021273612976074, 0.4232098162174225, 0.4164968729019165, 0.4081694185733795, 0.40492525696754456, 0.39954760670661926, 0.3930312991142273, 0.3848656117916107, 0.3805936276912689, 0.37654900550842285, 0.37807679176330566, 0.35836100578308105, 0.3556089699268341, 0.35303881764411926, 0.343954473733902, 0.34186092019081116, 0.33197030425071716, 0.3341234624385834, 0.3329766094684601, 0.31974148750305176, 0.3187118470668793, 0.3131326138973236, 0.3095470666885376, 0.3088325560092926, 0.3011607229709625, 0.30017057061195374, 0.2934913635253906, 0.29435819387435913, 0.28250834345817566, 0.2838808000087738, 0.2899583578109741, 0.2772561013698578, 0.27635326981544495, 0.27038994431495667, 0.2663649320602417, 0.26310500502586365, 0.26349931955337524, 0.25380241870880127, 0.25322267413139343, 0.25078919529914856, 0.24989287555217743, 0.24374638497829437, 0.23792409896850586, 0.2337309718132019, 0.23068733513355255, 0.22038599848747253, 0.22324615716934204, 0.2228338122367859, 0.21919287741184235, 0.21711362898349762, 0.2118191421031952], "accuracy": [0.2794875204563141, 0.48487651348114014, 0.5628054141998291, 0.6190727949142456, 0.6664905548095703, 0.7033417224884033, 0.7281733155250549, 0.7429665923118591, 0.7536653280258179, 0.7630431652069092, 0.77677983045578, 0.7812706232070923, 0.793422281742096, 0.7950072884559631, 0.8041210174560547, 0.8095363974571228, 0.8198388814926147, 0.8162726163864136, 0.8253863453865051, 0.8302733898162842, 0.8216879963874817, 0.8405758738517761, 0.8335754871368408, 0.8397833704948425, 0.8429533839225769, 0.8449346423149109, 0.8437458872795105, 0.8500858545303345, 0.8486329317092896, 0.8543124794960022, 0.8543124794960022, 0.8564258217811584, 0.8573504090309143, 0.8603883385658264, 0.863029956817627, 0.8623695969581604, 0.8647470474243164, 0.8705587387084961, 0.867520809173584, 0.8706908226013184, 0.8776912093162537, 0.8772949576377869, 0.8795403242111206, 0.8784837126731873, 0.8792761564254761, 0.884691596031189, 0.8837670087814331, 0.8842953443527222, 0.8868049383163452, 0.8870691061019897, 0.8883898854255676, 0.8934090733528137, 0.8926165699958801, 0.8993527889251709, 0.8943336606025696, 0.8942015767097473, 0.8952582478523254, 0.9006736278533936, 0.8980319499969482, 0.8989565372467041, 0.9019944667816162, 0.90423983335495, 0.9026548862457275, 0.9046360850334167, 0.9082023501396179, 0.9079381823539734, 0.9068815112113953, 0.9101836085319519, 0.910711944103241, 0.91559898853302, 0.9167877435684204, 0.9214106202125549, 0.917580246925354, 0.9182406663894653, 0.9166556596755981, 0.9196935892105103, 0.9232597947120667], "val_loss": [2.035951614379883, 1.5052978992462158, 1.0431938171386719, 0.8472962975502014, 0.7605311870574951, 0.706351101398468, 0.6616406440734863, 0.6320907473564148, 0.6039847135543823, 0.5799538493156433, 0.5663636326789856, 0.5441465973854065, 0.5414003729820251, 0.5177402496337891, 0.511217474937439, 0.4967578053474426, 0.4922322630882263, 0.4795663356781006, 0.4754575490951538, 0.4643801152706146, 0.46176573634147644, 0.45568424463272095, 0.4495090842247009, 0.44048550724983215, 0.43565356731414795, 0.42854779958724976, 0.4262741804122925, 0.4250372648239136, 0.41724780201911926, 0.41284480690956116, 0.4123806655406952, 0.40541931986808777, 0.4032345116138458, 0.40801945328712463, 0.3991730511188507, 0.39150211215019226, 0.40387362241744995, 0.39214786887168884, 0.38792333006858826, 0.3840513527393341, 0.383531779050827, 0.3804592788219452, 0.374214768409729, 0.3730233609676361, 0.3709906041622162, 0.363986611366272, 0.36684080958366394, 0.3697907626628876, 0.36659806966781616, 0.3636312782764435, 0.36148762702941895, 0.3581182360649109, 0.36388683319091797, 0.35497912764549255, 0.35696151852607727, 0.36021581292152405, 0.34972602128982544, 0.359142541885376, 0.35173526406288147, 0.34955286979675293, 0.3577025830745697, 0.3519512116909027, 0.348650723695755, 0.3494808077812195, 0.3490707278251648, 0.3486064076423645, 0.3494786322116852, 0.3440052568912506, 0.3433947265148163, 0.3442661166191101, 0.3436870872974396, 0.34409213066101074, 0.3449026346206665, 0.34379157423973083, 0.34509381651878357, 0.3412368893623352, 0.3410620093345642], "val_accuracy": [0.5263333320617676, 0.6523333191871643, 0.6766666769981384, 0.6936666369438171, 0.7253333330154419, 0.7396666407585144, 0.753333330154419, 0.7570000290870667, 0.7763333320617676, 0.7886666655540466, 0.7829999923706055, 0.7983333468437195, 0.8009999990463257, 0.8116666674613953, 0.8169999718666077, 0.8196666836738586, 0.8230000138282776, 0.8299999833106995, 0.8276666402816772, 0.8320000171661377, 0.8366666436195374, 0.8339999914169312, 0.8389999866485596, 0.8426666855812073, 0.8433333039283752, 0.8456666469573975, 0.8483333587646484, 0.8486666679382324, 0.8519999980926514, 0.8526666760444641, 0.8496666550636292, 0.8543333411216736, 0.8566666841506958, 0.8519999980926514, 0.8576666712760925, 0.8586666584014893, 0.859000027179718, 0.8613333106040955, 0.8616666793823242, 0.8633333444595337, 0.8613333106040955, 0.862666666507721, 0.8686666488647461, 0.871999979019165, 0.8679999709129333, 0.8730000257492065, 0.8743333220481873, 0.8673333525657654, 0.8693333268165588, 0.8690000176429749, 0.878000020980835, 0.8713333606719971, 0.8740000128746033, 0.8790000081062317, 0.8756666779518127, 0.8773333430290222, 0.8769999742507935, 0.8769999742507935, 0.8799999952316284, 0.8813333511352539, 0.8763333559036255, 0.878333330154419, 0.8840000033378601, 0.8773333430290222, 0.8830000162124634, 0.8823333382606506, 0.8793333172798157, 0.8849999904632568, 0.8833333253860474, 0.8830000162124634, 0.8849999904632568, 0.8880000114440918, 0.8836666941642761, 0.8866666555404663, 0.8830000162124634, 0.8820000290870667, 0.8870000243186951]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 9], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2, 2, 3, 9, 0, 8, 3, 4, 8, 2, 9], [0, 0, 0, 2, 0, 4, 1, 1, 2, 0, 0, 7, 5, 6], [28, 99, 96, 99, 67, 1, 75, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 35, 21, 14, 8], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha)))), alpha), tf.math.add(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 6, 5, 4], [0, 2, 0, 3, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 91, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 15, 9, 6, 2, 2, 1, 1, 1, 10, 5, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.pow(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3040342330932617, 2.3025851249694824, 2.302586317062378, 2.302584648132324, 2.302584648132324, 2.3025851249694824], "accuracy": [0.10421344637870789, 0.10130762308835983, 0.10196803510189056, 0.10157178342342377, 0.09959053993225098, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025858402252197, 2.302589178085327, 2.3025882244110107, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.09700000286102295, 0.10000000149011612, 0.09700000286102295, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 3], [0, 1, 0, 2], [62, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.30480694770813, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025856018066406], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09866596013307571, 0.09509972482919693, 0.09826971590518951, 0.09311848133802414, 0.09694888442754745, 0.09866596013307571, 0.09734513610601425, 0.0944393053650856], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.0949999988079071, 0.10066666454076767, 0.0949999988079071, 0.10000000149011612, 0.0949999988079071]}}]