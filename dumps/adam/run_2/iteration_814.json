[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221170663833618, 1.8637652397155762, 1.3872421979904175, 1.0916670560836792, 0.9236432909965515, 0.825467050075531, 0.7611119747161865, 0.7175463438034058, 0.6827370524406433, 0.6532467007637024, 0.6368457674980164, 0.6014278531074524, 0.5832365155220032, 0.5785259008407593, 0.5575838685035706, 0.5460770726203918, 0.5370194315910339, 0.5188481211662292, 0.5042346715927124, 0.4990250766277313, 0.4890066087245941, 0.4885878562927246, 0.465300589799881, 0.46498480439186096, 0.45617344975471497, 0.45274606347084045, 0.44015949964523315, 0.4307333528995514, 0.4223763644695282, 0.42081767320632935, 0.4061732590198517, 0.4003264605998993, 0.3904171288013458, 0.3858798146247864, 0.3879239559173584, 0.3777448534965515, 0.37205779552459717, 0.36452430486679077, 0.36398550868034363, 0.35872992873191833, 0.3556039035320282, 0.346042662858963, 0.34299466013908386, 0.3366101086139679, 0.3352811932563782, 0.32003605365753174, 0.3241718113422394, 0.31829068064689636, 0.3134882152080536, 0.3152489960193634, 0.29752591252326965, 0.3037937879562378, 0.2916660010814667, 0.29227808117866516, 0.2870432138442993, 0.2852194309234619, 0.2811740040779114, 0.27763068675994873], "accuracy": [0.2790912687778473, 0.48646149039268494, 0.5643904209136963, 0.6213181614875793, 0.6734909415245056, 0.7084929347038269, 0.7276449799537659, 0.7434949278831482, 0.7493065595626831, 0.7680623531341553, 0.7708360552787781, 0.7824593782424927, 0.7947431206703186, 0.7965922355651855, 0.8013472557067871, 0.8084797263145447, 0.8099326491355896, 0.8165367841720581, 0.8207634687423706, 0.8206313848495483, 0.8272355198860168, 0.824329674243927, 0.837141752243042, 0.8370096683502197, 0.8403117060661316, 0.8393871188163757, 0.8436138033866882, 0.8527275323867798, 0.8485008478164673, 0.8515387773513794, 0.8548408150672913, 0.858671247959137, 0.8610487580299377, 0.8663320541381836, 0.8647470474243164, 0.8642187118530273, 0.8647470474243164, 0.8717474341392517, 0.8698983192443848, 0.8696341514587402, 0.873860776424408, 0.8753136992454529, 0.8751816153526306, 0.8848236799240112, 0.878879964351654, 0.8887861371040344, 0.8837670087814331, 0.8842953443527222, 0.8853520154953003, 0.887597382068634, 0.8951261639595032, 0.8911636471748352, 0.89552241563797, 0.8951261639595032, 0.8973715305328369, 0.8972394466400146, 0.902390718460083, 0.8952582478523254], "val_loss": [2.036245346069336, 1.5061248540878296, 1.0309556722640991, 0.8202908635139465, 0.7327669858932495, 0.6742475032806396, 0.6301051378250122, 0.5932307839393616, 0.5718318223953247, 0.5461421012878418, 0.5282817482948303, 0.5095620155334473, 0.4948192834854126, 0.488829106092453, 0.47512418031692505, 0.465232253074646, 0.4555054008960724, 0.45325902104377747, 0.4387853145599365, 0.4337925612926483, 0.43377572298049927, 0.4238913059234619, 0.41849493980407715, 0.4148915112018585, 0.416954904794693, 0.4099236726760864, 0.40441885590553284, 0.3981035053730011, 0.39410334825515747, 0.39044344425201416, 0.38541659712791443, 0.38290953636169434, 0.3794970214366913, 0.3802105188369751, 0.3791857361793518, 0.37159672379493713, 0.37868356704711914, 0.37654733657836914, 0.3689700663089752, 0.37313345074653625, 0.36483100056648254, 0.36896511912345886, 0.3611610531806946, 0.35632625222206116, 0.3584528863430023, 0.35895970463752747, 0.352769136428833, 0.35147005319595337, 0.35575276613235474, 0.3502022325992584, 0.348390132188797, 0.3539767265319824, 0.34873324632644653, 0.346852570772171, 0.3468652069568634, 0.3565696179866791, 0.350943922996521, 0.3476286232471466], "val_accuracy": [0.5239999890327454, 0.6713333129882812, 0.6893333196640015, 0.7193333506584167, 0.7369999885559082, 0.7543333172798157, 0.7670000195503235, 0.7770000100135803, 0.7806666493415833, 0.7910000085830688, 0.8036666512489319, 0.8103333115577698, 0.8169999718666077, 0.8190000057220459, 0.8270000219345093, 0.831333339214325, 0.8330000042915344, 0.8413333296775818, 0.840666651725769, 0.843666672706604, 0.8476666808128357, 0.8550000190734863, 0.8536666631698608, 0.8523333072662354, 0.8463333249092102, 0.8519999980926514, 0.8560000061988831, 0.8633333444595337, 0.8653333187103271, 0.8659999966621399, 0.8693333268165588, 0.8709999918937683, 0.871999979019165, 0.8676666617393494, 0.8693333268165588, 0.8726666569709778, 0.8696666955947876, 0.8703333139419556, 0.8740000128746033, 0.8703333139419556, 0.8736666440963745, 0.8706666827201843, 0.875, 0.8773333430290222, 0.8773333430290222, 0.8769999742507935, 0.8806666731834412, 0.8813333511352539, 0.8756666779518127, 0.8803333044052124, 0.8820000290870667, 0.8763333559036255, 0.8833333253860474, 0.8823333382606506, 0.8793333172798157, 0.8743333220481873, 0.8790000081062317, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 5, 3, 2, 2, 9], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 3, 2], [16, 99, 96, 99, 61, 1, 96, 20]], "fitness": -0.1071428582072258, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 27, 15, 12, 8], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.square(tf.math.multiply(alpha, beta))))))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [1.138853501067402e+27, 1.3255647299666473e+27, 1.3345175989484052e+27, 1.325828444619925e+27, 1.2903676044042465e+27, 1.3141999123037637e+27], "accuracy": [0.09140139818191528, 0.08849557489156723, 0.09417514503002167, 0.08981640636920929, 0.09536388516426086, 0.09377889335155487], "val_loss": [9.637866686842215e+26, 9.63786816258174e+26, 9.637868900451504e+26, 9.637868900451504e+26, 9.637868900451504e+26, 9.637873327670081e+26], "val_accuracy": [0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1, 1], [2], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 0, 6, 1, 1, 4, 1, 4, 2, 6], [0, 4, 4, 3, 0, 0, 3, 1, 2, 0, 3], [16, 99, 96, 0, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 9, 5, 4, 2, 3, 1, 2, 1, 22, 11, 11, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.pow(grad, sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 4, 6], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 2, 0, 1, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 3, 2, 3, 3, 4, 4, 6, 0, 4, 6, 4, 1, 9, 8, 3, 2, 7, 6, 5, 3, 2, 8, 2, 8, 4], [0, 1, 1, 2, 0, 0, 3, 2, 0, 3, 2, 0, 1, 2, 2, 2, 2, 0, 0, 2, 2], [39, 39, 7, 12, 30, 94, 3, 10], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 6, 2, 3, 5, 3], [0, 2, 0, 3, 4, 4], [16, 7], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 27, 21, 8, 13, 7, 6, 2, 1, 1, 0, 1, 16, 8, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(alpha, grad)), tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(grad, grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.subtract(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha))))), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.add(tf.math.sqrt(tf.math.pow(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad))", "other_info": {"loss": [3.7144975662231445, 10.088188171386719, 17.840333938598633, 26.388612747192383, 35.51604080200195, 45.05628204345703], "accuracy": [0.09998679161071777, 0.09457138925790787, 0.10011887550354004, 0.0948355570435524, 0.10157178342342377, 0.09813763201236725], "val_loss": [5.381847381591797, 10.905359268188477, 16.945100784301758, 23.291030883789062, 29.8925724029541, 36.699249267578125], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]