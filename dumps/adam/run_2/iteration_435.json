[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237560749053955, 1.8648098707199097, 1.3887211084365845, 1.0926549434661865, 0.920815110206604, 0.8263064026832581, 0.7712753415107727, 0.7215364575386047, 0.6831220984458923, 0.652754545211792, 0.6289060115814209, 0.6009158492088318, 0.5819606184959412, 0.5679547786712646, 0.5551309585571289, 0.5359376668930054, 0.5236506462097168, 0.5179707407951355, 0.5034512877464294, 0.49324271082878113, 0.4872942268848419, 0.4698702096939087, 0.466070294380188, 0.4538763165473938, 0.4427218735218048, 0.4366947114467621, 0.435818076133728, 0.42478251457214355, 0.417646199464798, 0.4090959429740906, 0.40566861629486084, 0.39955639839172363, 0.39439553022384644, 0.38831400871276855, 0.38617220520973206, 0.3731207549571991, 0.36636847257614136, 0.3660591244697571, 0.36319562792778015, 0.36024823784828186, 0.35334524512290955, 0.34440621733665466, 0.3411962687969208, 0.333791583776474, 0.32402393221855164, 0.32490473985671997, 0.3251393735408783, 0.32094264030456543, 0.3120780885219574, 0.3130697011947632, 0.30494824051856995, 0.30407947301864624, 0.2913637161254883, 0.2913154661655426, 0.2952745854854584, 0.2862394452095032, 0.27718597650527954, 0.2852303385734558, 0.27188825607299805, 0.27035924792289734, 0.26660341024398804, 0.26155391335487366, 0.255026251077652, 0.25252601504325867, 0.24938009679317474, 0.24594746530056, 0.24614383280277252, 0.23733016848564148, 0.24211572110652924, 0.23304064571857452], "accuracy": [0.2775062620639801, 0.49887728691101074, 0.5765420794487, 0.6210539937019348, 0.672698438167572, 0.7074362635612488, 0.7284374833106995, 0.7401928305625916, 0.7474573850631714, 0.7652885913848877, 0.778761088848114, 0.785629391670227, 0.7924976944923401, 0.7989697456359863, 0.7984414100646973, 0.8078193068504333, 0.8150838613510132, 0.81548011302948, 0.8193105459213257, 0.8252542614936829, 0.828292191028595, 0.8335754871368408, 0.8334434032440186, 0.8438779711723328, 0.8442742228507996, 0.848368763923645, 0.8453308939933777, 0.8482366800308228, 0.8496896028518677, 0.8533879518508911, 0.8580108284950256, 0.858671247959137, 0.8613129258155823, 0.8642187118530273, 0.8609166741371155, 0.8689737319946289, 0.8677849769592285, 0.8717474341392517, 0.8746532797813416, 0.8705587387084961, 0.8693699836730957, 0.8770307898521423, 0.8787478804588318, 0.8849557638168335, 0.8840311765670776, 0.8845595121383667, 0.8829745054244995, 0.8879936337471008, 0.8916919827461243, 0.887201189994812, 0.8908994793891907, 0.8906353116035461, 0.8996169567108154, 0.8953903317451477, 0.8976356983184814, 0.9002773761749268, 0.900409460067749, 0.8982961177825928, 0.9049002528190613, 0.9026548862457275, 0.9021265506744385, 0.9055606722831726, 0.9052965044975281, 0.9119006991386414, 0.9078060984611511, 0.9108440279960632, 0.9105798602104187, 0.9162594079971313, 0.9088627696037292, 0.9173160791397095], "val_loss": [2.037447929382324, 1.5120822191238403, 1.038702130317688, 0.8303055763244629, 0.741083025932312, 0.6861110925674438, 0.6430709362030029, 0.6126289367675781, 0.5852956771850586, 0.5625845789909363, 0.5438491106033325, 0.5262837409973145, 0.5181406736373901, 0.502278745174408, 0.4896952211856842, 0.4832846224308014, 0.4677410423755646, 0.46457988023757935, 0.4535672068595886, 0.4486807584762573, 0.44276371598243713, 0.4383489489555359, 0.4306294023990631, 0.4264979958534241, 0.4200899302959442, 0.41391974687576294, 0.4069218039512634, 0.4109300971031189, 0.4070519506931305, 0.40319058299064636, 0.4006791114807129, 0.39230087399482727, 0.3930020332336426, 0.38831594586372375, 0.38616451621055603, 0.38034701347351074, 0.38055655360221863, 0.38132306933403015, 0.378638356924057, 0.37316417694091797, 0.3708743751049042, 0.370859295129776, 0.36959269642829895, 0.36617615818977356, 0.3653848469257355, 0.3605824410915375, 0.3616892993450165, 0.3592628538608551, 0.36127692461013794, 0.3592902719974518, 0.36208808422088623, 0.35618889331817627, 0.3580830991268158, 0.3472753167152405, 0.35183951258659363, 0.3542783558368683, 0.348689466714859, 0.3496619164943695, 0.3497379422187805, 0.3455274701118469, 0.34570086002349854, 0.34847384691238403, 0.34604954719543457, 0.3486577868461609, 0.34316906332969666, 0.3470323383808136, 0.3461029827594757, 0.3492687940597534, 0.3427792191505432, 0.341182142496109], "val_accuracy": [0.5596666932106018, 0.6566666960716248, 0.687333345413208, 0.7110000252723694, 0.7353333234786987, 0.753333330154419, 0.7696666717529297, 0.7720000147819519, 0.7833333611488342, 0.7973333597183228, 0.7983333468437195, 0.8109999895095825, 0.8059999942779541, 0.8180000185966492, 0.8246666789054871, 0.8303333520889282, 0.8336666822433472, 0.831333339214325, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.8420000076293945, 0.8476666808128357, 0.8476666808128357, 0.8500000238418579, 0.8526666760444641, 0.8539999723434448, 0.8539999723434448, 0.8523333072662354, 0.8519999980926514, 0.856333315372467, 0.8576666712760925, 0.8603333234786987, 0.8603333234786987, 0.8600000143051147, 0.8579999804496765, 0.862666666507721, 0.8600000143051147, 0.8600000143051147, 0.8646666407585144, 0.8650000095367432, 0.8613333106040955, 0.8613333106040955, 0.8656666874885559, 0.8640000224113464, 0.8643333315849304, 0.8673333525657654, 0.8646666407585144, 0.8679999709129333, 0.8663333058357239, 0.8676666617393494, 0.8673333525657654, 0.8690000176429749, 0.8690000176429749, 0.8683333396911621, 0.8700000047683716, 0.871666669845581, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8706666827201843, 0.8733333349227905, 0.8736666440963745, 0.8730000257492065, 0.8776666522026062, 0.8743333220481873, 0.874666690826416, 0.8726666569709778, 0.8756666779518127, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 40], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 1], [16, 7], [0, 1, 1], [2], [0, 5], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 1], [16, 99, 96, 99, 61, 65]], "fitness": -0.10057143121957779, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha)))", "other_info": {"loss": [2.30387806892395, 2.302614450454712, 2.302598714828491, 2.3026206493377686, 2.302600860595703, 2.3026022911071777], "accuracy": [0.10091137140989304, 0.10051512718200684, 0.1014397069811821, 0.09945846349000931, 0.09985470771789551, 0.1006472036242485], "val_loss": [2.3025870323181152, 2.302586555480957, 2.302586555480957, 2.302586555480957, 2.302586555480957, 2.302586555480957], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 3, 1, 2, 1, 17, 9, 8, 5], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 3, 0, 6, 5, 6, 6, 6, 0, 7, 5, 9, 5, 6, 0, 1, 2, 0, 4, 2, 3, 9, 1, 9, 9, 1], [3, 2, 3, 3, 1, 0, 1, 5, 5, 2, 3, 2, 5], [16, 16, 57, 56, 7], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 40, 27, 13, 5, 2, 1, 1, 0, 22, 12, 10, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.divide_no_nan(grad, tf.math.square(grad))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), grad)), grad), beta)))), grad), tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 5, 6, 9, 9], [0, 2, 3, 3], [16, 16, 9], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8, 4], [4, 0, 0, 3, 4, 0, 4, 1, 2, 0, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 7, 2, 3, 2, 1, 1, 1, 23, 12, 11, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.pow(alpha, beta)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 1, 1, 2], [72, 39], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3045382499694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]