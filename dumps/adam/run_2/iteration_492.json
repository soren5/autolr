[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2227845191955566, 1.869519829750061, 1.4027901887893677, 1.1112803220748901, 0.9604194760322571, 0.8483469486236572, 0.7825161814689636, 0.7343697547912598, 0.6942548155784607, 0.6737173199653625, 0.6418405175209045, 0.6124735474586487, 0.6016520857810974, 0.5845340490341187, 0.5578063726425171, 0.5448800921440125, 0.5400699377059937, 0.5237581729888916, 0.5166587829589844, 0.5080930590629578, 0.4935820996761322, 0.48045817017555237, 0.47524258494377136, 0.45993828773498535, 0.4575773775577545, 0.45152899622917175, 0.435629278421402, 0.42904120683670044, 0.4314267039299011, 0.4248134195804596, 0.41394010186195374, 0.4048541784286499, 0.4065553843975067, 0.3888099789619446, 0.3924195170402527, 0.38392531871795654, 0.37212708592414856, 0.37085938453674316, 0.36652255058288574, 0.3610193729400635, 0.3583110272884369, 0.34592750668525696, 0.34120798110961914, 0.34255069494247437, 0.3405420482158661, 0.32870006561279297, 0.32355797290802, 0.31823939085006714, 0.3138166666030884, 0.3094668686389923, 0.31540822982788086, 0.30337250232696533, 0.29830923676490784, 0.2959112823009491, 0.2888146638870239, 0.28401145339012146, 0.2840534746646881, 0.28345316648483276, 0.2764395773410797, 0.27662593126296997, 0.2644512355327606, 0.2570587992668152, 0.2562801241874695, 0.2547304034233093, 0.2543010413646698], "accuracy": [0.2748646140098572, 0.48725399374961853, 0.5620129704475403, 0.6087703108787537, 0.655527651309967, 0.6910579800605774, 0.7147008180618286, 0.7288337349891663, 0.741909921169281, 0.7519482374191284, 0.7611940503120422, 0.7696473598480225, 0.7823272943496704, 0.7803460359573364, 0.7973847389221191, 0.7940827012062073, 0.800818920135498, 0.8099326491355896, 0.8108572363853455, 0.8171972036361694, 0.819442629814148, 0.8302733898162842, 0.8260467648506165, 0.8387266993522644, 0.8321225643157959, 0.8387266993522644, 0.8426892161369324, 0.8488970994949341, 0.8418967127799988, 0.8451988101005554, 0.8490291833877563, 0.8548408150672913, 0.8541803956031799, 0.8565579056739807, 0.8580108284950256, 0.8588033318519592, 0.8642187118530273, 0.8659358024597168, 0.8677849769592285, 0.8701624870300293, 0.8725399374961853, 0.8767666220664978, 0.8762382864952087, 0.878351628780365, 0.8762382864952087, 0.8796724081039429, 0.8821820020675659, 0.8873332738876343, 0.8868049383163452, 0.8870691061019897, 0.8879936337471008, 0.8928807377815247, 0.8939374089241028, 0.8947299122810364, 0.89552241563797, 0.8993527889251709, 0.896446943283081, 0.8957865834236145, 0.8967111110687256, 0.8990886211395264, 0.904768168926239, 0.9059569239616394, 0.9046360850334167, 0.9078060984611511, 0.9050323367118835], "val_loss": [2.0353307723999023, 1.5032366514205933, 1.0221220254898071, 0.8120673298835754, 0.7270696759223938, 0.6692121624946594, 0.6263173818588257, 0.5873047709465027, 0.5633083581924438, 0.5448899865150452, 0.5320500731468201, 0.5124714970588684, 0.5022364258766174, 0.49213707447052, 0.4783739149570465, 0.47284579277038574, 0.46335986256599426, 0.4577201306819916, 0.4529775381088257, 0.4450567364692688, 0.4382856786251068, 0.43361514806747437, 0.4268895387649536, 0.41885262727737427, 0.4148903489112854, 0.4115762412548065, 0.4080437421798706, 0.4137530028820038, 0.40711572766304016, 0.39665961265563965, 0.39671534299850464, 0.39004620909690857, 0.3858084976673126, 0.3870093524456024, 0.3808690905570984, 0.37486857175827026, 0.3800754249095917, 0.37797534465789795, 0.3713858127593994, 0.36924266815185547, 0.37060293555259705, 0.3638823330402374, 0.36335310339927673, 0.3581452965736389, 0.36024296283721924, 0.35805636644363403, 0.35797974467277527, 0.351418137550354, 0.3491846024990082, 0.3511247932910919, 0.3474667966365814, 0.34532952308654785, 0.3463211953639984, 0.3435290455818176, 0.34264689683914185, 0.3402348756790161, 0.3364930748939514, 0.34163492918014526, 0.3405223786830902, 0.33911430835723877, 0.33599087595939636, 0.33516496419906616, 0.33430033922195435, 0.3420545160770416, 0.3403283953666687], "val_accuracy": [0.5603333115577698, 0.6753333210945129, 0.687333345413208, 0.7250000238418579, 0.7396666407585144, 0.7566666603088379, 0.7703333497047424, 0.7789999842643738, 0.7913333177566528, 0.8023333549499512, 0.8023333549499512, 0.8223333358764648, 0.8143333196640015, 0.8190000057220459, 0.8323333263397217, 0.8346666693687439, 0.8336666822433472, 0.8366666436195374, 0.8420000076293945, 0.8416666388511658, 0.8479999899864197, 0.8460000157356262, 0.8526666760444641, 0.8526666760444641, 0.8560000061988831, 0.8503333330154419, 0.8553333282470703, 0.8539999723434448, 0.8569999933242798, 0.8573333621025085, 0.8569999933242798, 0.8619999885559082, 0.8613333106040955, 0.8636666536331177, 0.8643333315849304, 0.8636666536331177, 0.8646666407585144, 0.8663333058357239, 0.8679999709129333, 0.8653333187103271, 0.8683333396911621, 0.8679999709129333, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8703333139419556, 0.8743333220481873, 0.8763333559036255, 0.8776666522026062, 0.8773333430290222, 0.8763333559036255, 0.8790000081062317, 0.8776666522026062, 0.8796666860580444, 0.8799999952316284, 0.8763333559036255, 0.8816666603088379, 0.878333330154419, 0.8766666650772095, 0.8840000033378601, 0.8823333382606506, 0.8820000290870667, 0.8806666731834412, 0.8796666860580444, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [2, 2, 3, 0, 3, 5, 9], [2, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 60, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 11, 7, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038129806518555, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303715944290161, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [65], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 3, 2, 0], [16, 99, 96, 6, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), sigma))", "other_info": {"loss": [2.304070472717285, 2.3025856018066406, 2.3025858402252197, 2.302586078643799, 2.302586317062378, 2.3025870323181152], "accuracy": [0.08994849026203156, 0.09628847241401672, 0.09536388516426086, 0.09694888442754745, 0.09496764093637466, 0.09311848133802414], "val_loss": [2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025848865509033], "val_accuracy": [0.10233332961797714, 0.10000000149011612, 0.10233332961797714, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6, 2, 4, 8, 5, 3, 1], [0, 1, 0, 2, 0, 3, 2, 2, 3], [39, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 8, 5], [0, 1, 0, 3], [27, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 4, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 3, 12, 8, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, tf.math.pow(tf.math.sqrt(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(grad, grad), grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]