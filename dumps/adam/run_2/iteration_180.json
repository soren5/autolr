[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8745714426040649, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225240707397461, 1.8688172101974487, 1.3865798711776733, 1.0853205919265747, 0.9405352473258972, 0.8290131688117981, 0.7788641452789307, 0.7365586161613464, 0.6915752291679382, 0.6577418446540833, 0.6286649107933044, 0.6118649840354919, 0.5892908573150635, 0.5705147981643677, 0.5547399520874023, 0.545159101486206, 0.532642126083374, 0.5208142995834351, 0.5095755457878113, 0.4830712676048279, 0.482645720243454, 0.4696652293205261, 0.4685409665107727, 0.4586012363433838, 0.45442086458206177, 0.45121070742607117, 0.4318453073501587, 0.4333248734474182, 0.42253467440605164, 0.413729727268219, 0.41015544533729553, 0.39921286702156067, 0.3931790888309479, 0.3837560713291168, 0.37905001640319824, 0.3850407898426056, 0.383026123046875, 0.37768545746803284, 0.3658754229545593, 0.3634692132472992, 0.35860171914100647, 0.35071733593940735, 0.34782591462135315, 0.3396102786064148, 0.3392791748046875, 0.33654889464378357, 0.3311428129673004, 0.32444673776626587, 0.32028383016586304, 0.31551262736320496, 0.31075337529182434, 0.302947998046875, 0.30029919743537903, 0.29469215869903564, 0.29411542415618896, 0.28643083572387695, 0.28676629066467285, 0.2801504135131836, 0.2758702337741852, 0.26848018169403076, 0.2664112150669098, 0.26443782448768616, 0.2653964161872864, 0.2578869163990021], "accuracy": [0.26878878474235535, 0.4884427487850189, 0.5671641826629639, 0.6203936338424683, 0.6612072587013245, 0.7005679607391357, 0.7215691208839417, 0.7298903465270996, 0.7481178045272827, 0.7633073329925537, 0.7707040309906006, 0.7819310426712036, 0.7843085527420044, 0.793422281742096, 0.8016114234924316, 0.8029322624206543, 0.806630551815033, 0.8153480291366577, 0.8142913579940796, 0.8297450542449951, 0.8257825970649719, 0.8329150676727295, 0.8335754871368408, 0.8363492488861084, 0.8354246616363525, 0.839519202709198, 0.8451988101005554, 0.8451988101005554, 0.8504821062088013, 0.8541803956031799, 0.8511425256729126, 0.8581429123878479, 0.8589354157447815, 0.8622375130653381, 0.8636903762817383, 0.8602562546730042, 0.8644828796386719, 0.8643507957458496, 0.8677849769592285, 0.8681812286376953, 0.8722757697105408, 0.8753136992454529, 0.8713511824607849, 0.8774270415306091, 0.8737286925315857, 0.8799365758895874, 0.8817857503890991, 0.882710337638855, 0.8819178342819214, 0.8870691061019897, 0.8894465565681458, 0.8902390599250793, 0.8923524022102356, 0.8938053250312805, 0.8932769894599915, 0.8969752788543701, 0.8981640338897705, 0.8977677822113037, 0.8990886211395264, 0.8989565372467041, 0.9049002528190613, 0.9055606722831726, 0.9026548862457275, 0.9079381823539734], "val_loss": [2.037338972091675, 1.5084896087646484, 1.0367257595062256, 0.8296802043914795, 0.7444747090339661, 0.6888909339904785, 0.6437916159629822, 0.6101858019828796, 0.5848264694213867, 0.5593735575675964, 0.5403336882591248, 0.5252069234848022, 0.5116593837738037, 0.49862828850746155, 0.4885140061378479, 0.4795527458190918, 0.47167375683784485, 0.46059972047805786, 0.4574525058269501, 0.4489378333091736, 0.4432529807090759, 0.43647217750549316, 0.43719372153282166, 0.4317241311073303, 0.42824795842170715, 0.42189356684684753, 0.4178599417209625, 0.41582632064819336, 0.4060744643211365, 0.4084130823612213, 0.40080294013023376, 0.4031410217285156, 0.3954092264175415, 0.3884713649749756, 0.3891400694847107, 0.3887515366077423, 0.38860806822776794, 0.3872981369495392, 0.38272231817245483, 0.38091495633125305, 0.3797646760940552, 0.38088610768318176, 0.3718016743659973, 0.37207862734794617, 0.37491312623023987, 0.36869052052497864, 0.3696250021457672, 0.36504435539245605, 0.3618766963481903, 0.3627948462963104, 0.36771732568740845, 0.3562834560871124, 0.36458611488342285, 0.3588108420372009, 0.3583347499370575, 0.3539403975009918, 0.35599109530448914, 0.3519790768623352, 0.3550189733505249, 0.35074031352996826, 0.3520265817642212, 0.3540392220020294, 0.3519763946533203, 0.3474998474121094], "val_accuracy": [0.5133333206176758, 0.6656666398048401, 0.690666675567627, 0.7096666693687439, 0.7396666407585144, 0.750333309173584, 0.7710000276565552, 0.7746666669845581, 0.7866666913032532, 0.7979999780654907, 0.809333324432373, 0.8119999766349792, 0.8230000138282776, 0.8263333439826965, 0.8316666483879089, 0.8323333263397217, 0.8360000252723694, 0.8373333215713501, 0.8429999947547913, 0.8483333587646484, 0.8476666808128357, 0.8506666421890259, 0.8546666502952576, 0.8476666808128357, 0.8566666841506958, 0.862666666507721, 0.859333336353302, 0.8633333444595337, 0.8643333315849304, 0.8659999966621399, 0.8669999837875366, 0.8643333315849304, 0.8703333139419556, 0.8730000257492065, 0.8736666440963745, 0.871999979019165, 0.8726666569709778, 0.8690000176429749, 0.874666690826416, 0.8740000128746033, 0.8730000257492065, 0.8736666440963745, 0.878333330154419, 0.8796666860580444, 0.8759999871253967, 0.8776666522026062, 0.875333309173584, 0.8806666731834412, 0.8809999823570251, 0.8803333044052124, 0.878333330154419, 0.8816666603088379, 0.8803333044052124, 0.8849999904632568, 0.8813333511352539, 0.8836666941642761, 0.8836666941642761, 0.8843333125114441, 0.8870000243186951, 0.8870000243186951, 0.8866666555404663, 0.8863333463668823, 0.8866666555404663, 0.8870000243186951]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 51], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 2, 7], [0, 0, 0, 3, 0, 0, 3, 1, 4, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 24, 12, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [23.3327579498291, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19033153355121613, 0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [44790976.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 2, 3, 0, 3, 6, 0], [1, 1, 0, 2, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 8, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 83, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 2, 2, 0, 1, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3, 3, 4], [0, 1, 0, 2, 1, 1], [80, 48], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1], [3, 9], [0], [99, 73], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 8], [0, 3, 0, 4, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 10, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 10, 6, 4, 2, 3, 2, 1, 2, 15, 8, 7, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))", "other_info": {"loss": [2.3033041954040527, 2.3025803565979004, 2.3025765419006348, 2.302572727203369, 2.30256986618042, 2.3025577068328857, 2.302564859390259, 2.3025522232055664, 2.302551031112671, 2.3025519847869873], "accuracy": [0.10381719470024109, 0.10698718577623367, 0.10368511080741882, 0.10672302544116974, 0.10328886657953262, 0.10606260597705841, 0.10540219396352768, 0.10936468094587326, 0.10500594228506088, 0.1022322028875351], "val_loss": [2.3025853633880615, 2.3025858402252197, 2.302583932876587, 2.3025782108306885, 2.3025782108306885, 2.3025765419006348, 2.302574634552002, 2.302572727203369, 2.3025712966918945, 2.3025705814361572], "val_accuracy": [0.0976666659116745, 0.09933333098888397, 0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 72], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 3, 3, 0, 3, 5], [2, 2, 0, 3], [16, 8], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036911487579346, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]