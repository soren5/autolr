[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220853567123413, 1.8573172092437744, 1.3772647380828857, 1.0874155759811401, 0.9214662909507751, 0.8377909064292908, 0.7668889164924622, 0.7128841876983643, 0.688116729259491, 0.652991533279419, 0.6251349449157715, 0.6039204597473145, 0.5888731479644775, 0.5663840174674988, 0.5595716238021851, 0.5465274453163147, 0.5330368876457214, 0.5153723359107971, 0.5039694309234619, 0.4944508671760559, 0.4840868413448334, 0.4794844090938568, 0.46437370777130127, 0.4561833441257477, 0.4469525218009949, 0.43421483039855957, 0.43542391061782837, 0.4310321509838104, 0.4141868054866791, 0.40762048959732056, 0.4112190008163452, 0.40498167276382446, 0.39088067412376404, 0.3855290710926056, 0.3825776278972626, 0.3744220733642578, 0.37345215678215027, 0.3623555600643158, 0.3616270124912262, 0.357015997171402, 0.34960028529167175, 0.3441196084022522, 0.3431329131126404, 0.3356115520000458, 0.3312399387359619, 0.32082420587539673, 0.32271984219551086, 0.314376562833786, 0.3068830966949463, 0.30321115255355835, 0.30489155650138855, 0.3001410663127899, 0.29451918601989746, 0.28710705041885376, 0.2907280921936035, 0.2828075587749481, 0.2738601267337799, 0.2666890025138855, 0.2718375325202942, 0.26540428400039673, 0.26177749037742615, 0.2728361487388611, 0.2533758282661438, 0.25367438793182373, 0.24993537366390228, 0.24481306970119476, 0.24212084710597992, 0.23293013870716095, 0.2263084203004837, 0.2309064418077469, 0.23130254447460175, 0.22599107027053833, 0.22587375342845917], "accuracy": [0.27341169118881226, 0.49570730328559875, 0.5712587237358093, 0.6206578016281128, 0.6707172393798828, 0.702681303024292, 0.7215691208839417, 0.7417778372764587, 0.7504953145980835, 0.7597411274909973, 0.7712323069572449, 0.7824593782424927, 0.7841764688491821, 0.7930260300636292, 0.793422281742096, 0.7984414100646973, 0.8016114234924316, 0.8131026029586792, 0.8181217908859253, 0.8228767514228821, 0.8230088353157043, 0.8259146809577942, 0.8302733898162842, 0.8380662798881531, 0.8385946154594421, 0.8424250483512878, 0.8454629778862, 0.8466516733169556, 0.8515387773513794, 0.8508783578872681, 0.854708731174469, 0.8536521196365356, 0.863029956817627, 0.8597279191017151, 0.8672566413879395, 0.8687095642089844, 0.8672566413879395, 0.8717474341392517, 0.8709549307823181, 0.8713511824607849, 0.8767666220664978, 0.8766345381736755, 0.8739928603172302, 0.882710337638855, 0.8842953443527222, 0.8861445188522339, 0.8819178342819214, 0.8849557638168335, 0.8944657444953918, 0.8916919827461243, 0.8902390599250793, 0.8944657444953918, 0.8898428082466125, 0.8957865834236145, 0.8953903317451477, 0.9002773761749268, 0.9002773761749268, 0.9064852595329285, 0.9014661312103271, 0.9031832218170166, 0.9079381823539734, 0.9008057117462158, 0.9068815112113953, 0.9049002528190613, 0.9113723635673523, 0.913089394569397, 0.9093911051750183, 0.9179764986038208, 0.9154669046401978, 0.9173160791397095, 0.9149385690689087, 0.9182406663894653, 0.9177123308181763], "val_loss": [2.036989212036133, 1.510809302330017, 1.0481067895889282, 0.8370127081871033, 0.7381946444511414, 0.6848046183586121, 0.6432510018348694, 0.6055408716201782, 0.5854984521865845, 0.5636113882064819, 0.5480713844299316, 0.5303246378898621, 0.5215761661529541, 0.5044990181922913, 0.4992286264896393, 0.4845729470252991, 0.478633314371109, 0.46571317315101624, 0.4568667709827423, 0.44996100664138794, 0.4496234655380249, 0.4409662187099457, 0.4338567852973938, 0.4248766601085663, 0.42488887906074524, 0.4188878536224365, 0.41395458579063416, 0.40815991163253784, 0.40489891171455383, 0.39856696128845215, 0.39760953187942505, 0.4032134711742401, 0.39267227053642273, 0.38702791929244995, 0.3880796432495117, 0.3806796967983246, 0.38211095333099365, 0.37920308113098145, 0.3755198121070862, 0.377380907535553, 0.37677502632141113, 0.3764481246471405, 0.3683844804763794, 0.3726477026939392, 0.3635816276073456, 0.3659549951553345, 0.36924731731414795, 0.3598153591156006, 0.3592880964279175, 0.35956132411956787, 0.3543969690799713, 0.3573002219200134, 0.35806456208229065, 0.3572540283203125, 0.3523716330528259, 0.35051512718200684, 0.35412898659706116, 0.3506756126880646, 0.35158708691596985, 0.34528011083602905, 0.3525334596633911, 0.3488025367259979, 0.35077229142189026, 0.34565970301628113, 0.3474491834640503, 0.34652063250541687, 0.34816092252731323, 0.3449007570743561, 0.3416370749473572, 0.34357771277427673, 0.34306254982948303, 0.34847065806388855, 0.3450639545917511], "val_accuracy": [0.5276666879653931, 0.6543333530426025, 0.675000011920929, 0.699999988079071, 0.7283333539962769, 0.7523333430290222, 0.7636666893959045, 0.7710000276565552, 0.7756666541099548, 0.7910000085830688, 0.79666668176651, 0.7973333597183228, 0.8119999766349792, 0.8119999766349792, 0.8180000185966492, 0.8220000267028809, 0.8256666660308838, 0.8333333134651184, 0.8386666774749756, 0.840666651725769, 0.8330000042915344, 0.8413333296775818, 0.8486666679382324, 0.8489999771118164, 0.8453333377838135, 0.8476666808128357, 0.8550000190734863, 0.8526666760444641, 0.8560000061988831, 0.8610000014305115, 0.8583333492279053, 0.856333315372467, 0.859666645526886, 0.862333357334137, 0.8629999756813049, 0.8633333444595337, 0.8643333315849304, 0.8669999837875366, 0.8640000224113464, 0.8666666746139526, 0.8629999756813049, 0.8646666407585144, 0.8696666955947876, 0.8696666955947876, 0.8703333139419556, 0.8676666617393494, 0.8663333058357239, 0.874666690826416, 0.8733333349227905, 0.8743333220481873, 0.8769999742507935, 0.8726666569709778, 0.8723333477973938, 0.8743333220481873, 0.8743333220481873, 0.8786666393280029, 0.875, 0.8790000081062317, 0.8776666522026062, 0.8806666731834412, 0.8809999823570251, 0.8756666779518127, 0.878333330154419, 0.8803333044052124, 0.8809999823570251, 0.8820000290870667, 0.8769999742507935, 0.8833333253860474, 0.8813333511352539, 0.8806666731834412, 0.8813333511352539, 0.8793333172798157, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 8], [0, 1, 0, 2], [39, 38], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [22, 16, 39], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [4, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 38, 99, 61, 1]], "fitness": -0.30399999022483826, "mapping_values": [1, 5, 3, 2, 1, 10, 7, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3706247806549072, 2.3377935886383057, 2.309971332550049, 2.2744104862213135, 2.2461869716644287, 2.3093557357788086, 2.254565715789795, 2.2827274799346924, 2.048682451248169, 2.3313024044036865, 2.3077263832092285, 2.2687230110168457, 2.3048276901245117], "accuracy": [0.22361643612384796, 0.11028926074504852, 0.1310262829065323, 0.1740853190422058, 0.16893409192562103, 0.11755382269620895, 0.1670849323272705, 0.1340641975402832, 0.2553163468837738, 0.1418570876121521, 0.11187426000833511, 0.15717871487140656, 0.09219389408826828], "val_loss": [2.484297037124634, 2.3090603351593018, 2.2076618671417236, 2.306734085083008, 2.304481029510498, 2.3051319122314453, 2.3063087463378906, 1.8833011388778687, 2.30899715423584, 2.319959878921509, 2.258265972137451, 2.3059911727905273, 2.3029496669769287], "val_accuracy": [0.09300000220537186, 0.10000000149011612, 0.1966666728258133, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.3059999942779541, 0.09666666388511658, 0.10366666316986084, 0.20266667008399963, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 6, 3, 0, 3, 2, 5, 4, 1, 8], [0, 1, 0, 2, 0, 2, 2], [39, 39, 64], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 96], [0, 1], [0], [0], [91], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 4, 0, 7, 5, 2, 2, 9, 7, 5, 0, 7, 8, 3], [0, 0, 2, 2, 4, 0, 3, 1, 2, 0, 5, 0, 7, 3, 6, 0], [16, 99, 5, 99, 61, 1, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 3, 2, 1, 1, 1, 2, 1, 1, 1, 41, 25, 16, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), tf.math.pow(beta, tf.math.add(grad, tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(sigma, alpha)))), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(tf.math.square(tf.math.negative(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), sigma)), tf.math.multiply(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 9, 1], [0, 1, 0, 2], [39, 27], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [81], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 74, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303718090057373, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 6, 4, 2, 2, 5, 2, 3, 1, 2, 1, 1, 1, 3, 2, 1, 2], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 5, 9], [0, 1, 0, 2], [15, 39, 5], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 0, 3, 3], [0, 2, 0, 3, 4], [25, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 3], [96, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 11, 6, 5, 2, 2, 1, 1, 0, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]