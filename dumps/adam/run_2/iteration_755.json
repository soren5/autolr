[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216403484344482, 1.8677467107772827, 1.3848594427108765, 1.0871223211288452, 0.9388651847839355, 0.8361946940422058, 0.7712311744689941, 0.7267658114433289, 0.6958245635032654, 0.6516543626785278, 0.6353930830955505, 0.6152231693267822, 0.5947853922843933, 0.5752309560775757, 0.5635362267494202, 0.559948205947876, 0.5365331768989563, 0.5316996574401855, 0.5186749696731567, 0.5099859237670898, 0.4950518012046814, 0.48675957322120667, 0.4734012484550476, 0.4715674817562103, 0.4623188376426697, 0.45922762155532837, 0.44178998470306396, 0.435468852519989, 0.4255810081958771, 0.4248383939266205, 0.41545724868774414, 0.40544643998146057, 0.406452476978302, 0.39318421483039856, 0.382461816072464, 0.3867183327674866, 0.38197705149650574, 0.38016632199287415, 0.3712988793849945, 0.3647584617137909, 0.36325663328170776, 0.34679535031318665, 0.3530462384223938, 0.345668762922287, 0.34104210138320923, 0.3334583640098572, 0.32055532932281494, 0.32066118717193604, 0.3183613419532776, 0.32076457142829895, 0.30651822686195374, 0.304460346698761, 0.2963254153728485, 0.2951100170612335, 0.28776419162750244, 0.2914516031742096, 0.2854762673377991, 0.2878345549106598, 0.2871214747428894, 0.2784237265586853, 0.2778197228908539, 0.26767343282699585, 0.2643297612667084, 0.2598670721054077, 0.2578468322753906, 0.25125759840011597, 0.2466074526309967, 0.2490779161453247, 0.23844246566295624, 0.2452472746372223, 0.23694239556789398, 0.2307903915643692, 0.22579096257686615, 0.22701288759708405, 0.22676441073417664, 0.22359736263751984, 0.21447332203388214, 0.21801818907260895, 0.206614688038826], "accuracy": [0.2833179235458374, 0.5033681392669678, 0.5696737766265869, 0.6219785809516907, 0.663848876953125, 0.7043983340263367, 0.7195879220962524, 0.7341170310974121, 0.7510236501693726, 0.7614582180976868, 0.7720248103141785, 0.7755910754203796, 0.7877426743507385, 0.7898560166358948, 0.7985734939575195, 0.7940827012062073, 0.8053097128868103, 0.8095363974571228, 0.8129705190658569, 0.817989706993103, 0.8231409192085266, 0.8247259259223938, 0.8342359066009521, 0.8305375576019287, 0.8362171649932861, 0.8345000743865967, 0.8437458872795105, 0.8454629778862, 0.8516708612442017, 0.8465195894241333, 0.8500858545303345, 0.8516708612442017, 0.8581429123878479, 0.8589354157447815, 0.8642187118530273, 0.8597279191017151, 0.8643507957458496, 0.8619733452796936, 0.8618412613868713, 0.8669924736022949, 0.8681812286376953, 0.873860776424408, 0.8757099509239197, 0.8750495314598083, 0.8775591254234314, 0.880729079246521, 0.8823140859603882, 0.8828424215316772, 0.8874653577804565, 0.8821820020675659, 0.8894465565681458, 0.8886540532112122, 0.8947299122810364, 0.8975036144256592, 0.8986923694610596, 0.8957865834236145, 0.8973715305328369, 0.896446943283081, 0.8938053250312805, 0.8976356983184814, 0.8990886211395264, 0.90423983335495, 0.9050323367118835, 0.9076740145683289, 0.9085986018180847, 0.9100515246391296, 0.9109761118888855, 0.9085986018180847, 0.9145423173904419, 0.9101836085319519, 0.913617730140686, 0.9181085824966431, 0.9158631563186646, 0.9187690019607544, 0.9152027368545532, 0.9178444147109985, 0.9231277108192444, 0.9215427041053772, 0.9248448014259338], "val_loss": [2.0389413833618164, 1.5110069513320923, 1.0421754121780396, 0.8387882709503174, 0.7468928098678589, 0.6885901689529419, 0.644673764705658, 0.6120092272758484, 0.5841708779335022, 0.5596930980682373, 0.5433297753334045, 0.5303090214729309, 0.5104383826255798, 0.5020766854286194, 0.499197781085968, 0.4860961139202118, 0.4799624979496002, 0.46713438630104065, 0.456704705953598, 0.44807568192481995, 0.44614750146865845, 0.4364154040813446, 0.4285505712032318, 0.4275987148284912, 0.4244815707206726, 0.41777271032333374, 0.4099450707435608, 0.40331172943115234, 0.4017356336116791, 0.39472684264183044, 0.39419910311698914, 0.3881474733352661, 0.3873637318611145, 0.3816481828689575, 0.377768874168396, 0.3767426311969757, 0.3749224841594696, 0.3728678822517395, 0.3693644106388092, 0.3653527498245239, 0.3627437353134155, 0.35876744985580444, 0.3567735254764557, 0.3541983664035797, 0.3550550043582916, 0.34993717074394226, 0.3491804301738739, 0.34715813398361206, 0.3458661437034607, 0.34335604310035706, 0.34333768486976624, 0.3429628014564514, 0.33878979086875916, 0.34023144841194153, 0.34207430481910706, 0.33625420928001404, 0.3347873091697693, 0.3322697877883911, 0.33084648847579956, 0.3342297077178955, 0.3373154103755951, 0.3360220491886139, 0.3302745223045349, 0.32754194736480713, 0.3287823498249054, 0.3282586634159088, 0.3274300992488861, 0.32470569014549255, 0.3270011842250824, 0.3219030499458313, 0.32540345191955566, 0.33379849791526794, 0.3275909721851349, 0.3243585526943207, 0.326378732919693, 0.32349687814712524, 0.32333603501319885, 0.3276437520980835, 0.3222813010215759], "val_accuracy": [0.5633333325386047, 0.6600000262260437, 0.6790000200271606, 0.703000009059906, 0.7256666421890259, 0.7383333444595337, 0.753000020980835, 0.762333333492279, 0.7726666927337646, 0.7803333401679993, 0.7913333177566528, 0.7946666479110718, 0.8009999990463257, 0.8056666851043701, 0.8173333406448364, 0.8109999895095825, 0.8140000104904175, 0.8246666789054871, 0.8259999752044678, 0.831333339214325, 0.8306666612625122, 0.8363333344459534, 0.8379999995231628, 0.8389999866485596, 0.843666672706604, 0.8479999899864197, 0.8513333201408386, 0.8533333539962769, 0.8503333330154419, 0.8516666889190674, 0.8566666841506958, 0.8566666841506958, 0.8600000143051147, 0.8613333106040955, 0.8613333106040955, 0.8679999709129333, 0.8700000047683716, 0.8640000224113464, 0.8700000047683716, 0.8690000176429749, 0.8709999918937683, 0.874666690826416, 0.8733333349227905, 0.8759999871253967, 0.8756666779518127, 0.878333330154419, 0.875333309173584, 0.8796666860580444, 0.878333330154419, 0.8793333172798157, 0.8809999823570251, 0.8776666522026062, 0.8813333511352539, 0.8806666731834412, 0.8820000290870667, 0.8820000290870667, 0.8820000290870667, 0.8833333253860474, 0.8853333592414856, 0.8836666941642761, 0.8826666474342346, 0.8836666941642761, 0.887333333492279, 0.8870000243186951, 0.8849999904632568, 0.8883333206176758, 0.8853333592414856, 0.8859999775886536, 0.8859999775886536, 0.8889999985694885, 0.8840000033378601, 0.8856666684150696, 0.8866666555404663, 0.8899999856948853, 0.8866666555404663, 0.8899999856948853, 0.8889999985694885, 0.8896666765213013, 0.8893333077430725]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 60], [0, 1], [0], [0], [2], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 18, 9, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 2], [0, 2, 0, 3], [97, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 4, 4, 3, 4, 0, 3, 2, 2, 0], [16, 99, 74, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, sigma), tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma)))))), beta), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3], [2, 1, 0, 0], [75, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 0, 7, 5], [0, 2, 0, 3, 4], [45, 82], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 9, 2, 9, 4], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 65, 1, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 14, 9, 5, 2, 2, 1, 1, 1, 27, 16, 11, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [2.3043768405914307, 2.303197145462036, 2.303197145462036, 2.303196907043457, 2.303197145462036, 2.303197145462036], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3033220767974854, 2.3033218383789062, 2.3033218383789062, 2.3033218383789062, 2.3033218383789062, 2.303321599960327], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [4, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 7], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [4], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 1, 3, 2, 0], [16, 99, 96, 99, 42, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 4, 2, 2, 1, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)))), sigma), tf.math.add(tf.math.sqrt(beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]