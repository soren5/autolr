[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222673177719116, 1.8690611124038696, 1.395733118057251, 1.0822662115097046, 0.9400920271873474, 0.8384535312652588, 0.7690025568008423, 0.7208477258682251, 0.6907063722610474, 0.6566442847251892, 0.6360730528831482, 0.606517493724823, 0.5916592478752136, 0.5748218297958374, 0.5605146884918213, 0.5459413528442383, 0.5324083566665649, 0.5185722708702087, 0.510628879070282, 0.502773642539978, 0.49083346128463745, 0.48657527565956116, 0.4697493314743042, 0.47066256403923035, 0.4642162024974823, 0.44432345032691956, 0.4412693679332733, 0.42888548970222473, 0.4171772301197052, 0.41977041959762573, 0.4166093170642853, 0.3987695574760437, 0.4053904414176941, 0.3987339437007904, 0.3903300166130066, 0.3861619532108307, 0.38212209939956665, 0.37596023082733154, 0.36250635981559753, 0.35852134227752686, 0.36047983169555664, 0.3533463478088379, 0.344463050365448, 0.33654260635375977, 0.3347156047821045, 0.3351823687553406, 0.3240015208721161, 0.32704660296440125, 0.3251900374889374, 0.310467392206192, 0.3132154047489166, 0.3082661032676697, 0.3034176826477051, 0.3027397692203522, 0.2952127158641815, 0.283450722694397, 0.2853808104991913, 0.2823287844657898, 0.26960277557373047, 0.2702423334121704, 0.26697835326194763], "accuracy": [0.27816668152809143, 0.49253731966018677, 0.5676925182342529, 0.6238277554512024, 0.6627922058105469, 0.6997754573822021, 0.7209087014198303, 0.7354378700256348, 0.750231146812439, 0.7627789974212646, 0.7642319202423096, 0.7754589915275574, 0.7817989587783813, 0.7887993454933167, 0.7985734939575195, 0.8038568496704102, 0.8001585006713867, 0.8156121969223022, 0.817461371421814, 0.817989706993103, 0.8236692547798157, 0.8305375576019287, 0.8384625315666199, 0.8310658931732178, 0.8396512866020203, 0.845859169960022, 0.8374059200286865, 0.8451988101005554, 0.8494254350662231, 0.8519350290298462, 0.8516708612442017, 0.8569541573524475, 0.8594637513160706, 0.8570862412452698, 0.8628978729248047, 0.8628978729248047, 0.8672566413879395, 0.8658037185668945, 0.8722757697105408, 0.8732003569602966, 0.873860776424408, 0.874389111995697, 0.8762382864952087, 0.8805969953536987, 0.8831065893173218, 0.8820499181747437, 0.8861445188522339, 0.8850878477096558, 0.8873332738876343, 0.8910315632820129, 0.8885219693183899, 0.8922203183174133, 0.8938053250312805, 0.8902390599250793, 0.8968431949615479, 0.9009377956390381, 0.8975036144256592, 0.8994848728179932, 0.9058248400688171, 0.9034473896026611, 0.9049002528190613], "val_loss": [2.038886785507202, 1.5177451372146606, 1.0456392765045166, 0.8395418524742126, 0.7602686882019043, 0.6919976472854614, 0.6492714285850525, 0.6179742217063904, 0.588789165019989, 0.567375659942627, 0.5513390302658081, 0.537138044834137, 0.523825466632843, 0.5078746676445007, 0.5001916885375977, 0.4843392074108124, 0.4783892035484314, 0.4696786403656006, 0.46357113122940063, 0.4558340609073639, 0.45435574650764465, 0.44214409589767456, 0.44134703278541565, 0.43205416202545166, 0.4227147698402405, 0.4218204617500305, 0.41638052463531494, 0.4074636995792389, 0.4016962945461273, 0.3979455828666687, 0.40464192628860474, 0.3949444890022278, 0.38758090138435364, 0.38429680466651917, 0.388399213552475, 0.38747087121009827, 0.37631046772003174, 0.37327584624290466, 0.3706232011318207, 0.3701585829257965, 0.36586815118789673, 0.35970377922058105, 0.3621026575565338, 0.36239534616470337, 0.35170263051986694, 0.3543958067893982, 0.355235755443573, 0.35293108224868774, 0.34975963830947876, 0.35516756772994995, 0.3532693684101105, 0.34381797909736633, 0.34573009610176086, 0.3402804434299469, 0.3443432152271271, 0.3406994342803955, 0.34437263011932373, 0.3351610004901886, 0.33643558621406555, 0.3374272882938385, 0.337581992149353], "val_accuracy": [0.531333327293396, 0.6636666655540466, 0.6883333325386047, 0.70333331823349, 0.7243333458900452, 0.7386666536331177, 0.7563333511352539, 0.765333354473114, 0.7796666622161865, 0.793666660785675, 0.8043333292007446, 0.8063333630561829, 0.8076666593551636, 0.8230000138282776, 0.8263333439826965, 0.8259999752044678, 0.8256666660308838, 0.8349999785423279, 0.8410000205039978, 0.8389999866485596, 0.8389999866485596, 0.8429999947547913, 0.8413333296775818, 0.8476666808128357, 0.8526666760444641, 0.8486666679382324, 0.8550000190734863, 0.8556666374206543, 0.8579999804496765, 0.8566666841506958, 0.8579999804496765, 0.859000027179718, 0.8619999885559082, 0.8640000224113464, 0.8603333234786987, 0.8646666407585144, 0.8663333058357239, 0.8676666617393494, 0.8690000176429749, 0.8703333139419556, 0.8703333139419556, 0.8709999918937683, 0.8690000176429749, 0.8723333477973938, 0.874666690826416, 0.871999979019165, 0.8723333477973938, 0.875, 0.875333309173584, 0.874666690826416, 0.8703333139419556, 0.8786666393280029, 0.8759999871253967, 0.8803333044052124, 0.8736666440963745, 0.8809999823570251, 0.8799999952316284, 0.878333330154419, 0.8806666731834412, 0.878000020980835, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10657142847776413, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [194756047011840.0, 237372876783616.0, 231932528951296.0, 229165177503744.0, 230177179172864.0, 225775072575488.0], "accuracy": [0.09800554811954498, 0.1006472036242485, 0.10355303436517715, 0.09840179979801178, 0.09945846349000931, 0.09734513610601425], "val_loss": [210307385393152.0, 210307385393152.0, 210307385393152.0, 210307385393152.0, 210307385393152.0, 210307385393152.0], "val_accuracy": [0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2], [39, 19], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [3, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 2, 8, 4, 9], [4, 0, 0, 3, 0, 0, 3, 1, 2, 4, 7, 5], [16, 99, 96, 69, 50, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.pow(alpha, beta)), tf.math.add(tf.math.sqrt(grad), grad))), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 28, 16, 12, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 3, 3], [16, 16], [0, 0, 0, 1, 0], [0, 3, 8, 9], [0], [99, 27], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [25, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 1, 0, 1, 1, 5, 4, 1, 2, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.3038506507873535, 2.3025851249694824, 2.3025856018066406, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.09694888442754745, 0.09893012791872025, 0.0940430611371994, 0.09734513610601425, 0.09840179979801178, 0.09668471664190292, 0.09602430462837219, 0.09932637959718704], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 8, 2, 3, 5, 0], [0, 0, 0, 3], [16, 16, 11], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1], [16, 99, 96, 68, 61, 1]], "fitness": -0.0917142853140831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3122355937957764, 2.310777425765991, 2.310053586959839, 2.3094749450683594, 2.3097081184387207, 2.3092780113220215], "accuracy": [0.08413683623075485, 0.09074098616838455, 0.09549596905708313, 0.09391097724437714, 0.08572183549404144, 0.08677849918603897], "val_loss": [2.3084843158721924, 2.308396577835083, 2.30824875831604, 2.3080124855041504, 2.3076677322387695, 2.3071982860565186], "val_accuracy": [0.09133332967758179, 0.09000000357627869, 0.09000000357627869, 0.08833333104848862, 0.08566666394472122, 0.0846666693687439]}, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 3, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18}]