[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232089042663574, 1.866241216659546, 1.3930689096450806, 1.0951385498046875, 0.9345319271087646, 0.8318567276000977, 0.773330569267273, 0.7194223999977112, 0.6864787936210632, 0.6580250859260559, 0.6298246383666992, 0.618934154510498, 0.5803652405738831, 0.5706583261489868, 0.5537289977073669, 0.5412545204162598, 0.5252878069877625, 0.5218207836151123, 0.5081707239151001, 0.49575281143188477, 0.4870181977748871, 0.4830339848995209, 0.46640968322753906, 0.46052226424217224, 0.4512198865413666, 0.44103777408599854, 0.43119919300079346, 0.4296831786632538, 0.42080041766166687, 0.40996164083480835, 0.4111165404319763, 0.40300989151000977, 0.39228010177612305, 0.3946479260921478, 0.3826941251754761, 0.37322863936424255, 0.36976367235183716, 0.37052834033966064, 0.36512136459350586, 0.3628788888454437, 0.35961923003196716, 0.3532657027244568, 0.3522372841835022, 0.337814062833786, 0.33933335542678833, 0.3247377872467041, 0.3263886570930481, 0.3237825036048889, 0.3226577639579773, 0.3209444582462311, 0.317269891500473, 0.3048098683357239, 0.3027358651161194, 0.2994924783706665, 0.2913343608379364, 0.29025402665138245, 0.2871914505958557, 0.2765313982963562, 0.28074443340301514, 0.2762449383735657, 0.27089443802833557, 0.2698991894721985, 0.264827698469162, 0.2679298520088196, 0.25534406304359436, 0.24982815980911255, 0.24974118173122406, 0.24596428871154785, 0.2472582310438156, 0.23166073858737946, 0.23802925646305084], "accuracy": [0.26958128809928894, 0.5027077198028564, 0.5589750409126282, 0.6184123754501343, 0.658961832523346, 0.6991150379180908, 0.717870831489563, 0.7380794882774353, 0.7454761862754822, 0.759080708026886, 0.767930269241333, 0.7695152759552002, 0.7890635132789612, 0.7887993454933167, 0.7976489067077637, 0.7984414100646973, 0.8059701323509216, 0.8088759779930115, 0.8157442808151245, 0.8197067975997925, 0.8214238286018372, 0.8257825970649719, 0.8301413059234619, 0.8325188159942627, 0.8367455005645752, 0.8374059200286865, 0.8413683772087097, 0.8455950617790222, 0.8508783578872681, 0.8516708612442017, 0.8539162874221802, 0.8551049828529358, 0.857218325138092, 0.8561616539955139, 0.8625016212463379, 0.8644828796386719, 0.8687095642089844, 0.8660678863525391, 0.867520809173584, 0.8701624870300293, 0.8669924736022949, 0.872407853603363, 0.8720116019248962, 0.8778232932090759, 0.8716153502464294, 0.8861445188522339, 0.8819178342819214, 0.882710337638855, 0.8820499181747437, 0.8854840993881226, 0.8849557638168335, 0.8862766027450562, 0.887597382068634, 0.8889182209968567, 0.8968431949615479, 0.8967111110687256, 0.8944657444953918, 0.8967111110687256, 0.8957865834236145, 0.8982961177825928, 0.9043719172477722, 0.9000132083892822, 0.9063531756401062, 0.8986923694610596, 0.9049002528190613, 0.9070135951042175, 0.9093911051750183, 0.9133535623550415, 0.9082023501396179, 0.9161273241043091, 0.9137498140335083], "val_loss": [2.0428714752197266, 1.5240553617477417, 1.0470585823059082, 0.8265221118927002, 0.7355165481567383, 0.6779428124427795, 0.6381096839904785, 0.6009683012962341, 0.579666793346405, 0.5523425936698914, 0.5372461676597595, 0.5180294513702393, 0.5049684047698975, 0.49708643555641174, 0.4843902289867401, 0.47262853384017944, 0.4672411382198334, 0.4596782624721527, 0.4580273926258087, 0.4476947486400604, 0.4389914572238922, 0.43960294127464294, 0.42544320225715637, 0.4221979081630707, 0.42039623856544495, 0.41410157084465027, 0.4058572053909302, 0.40114787220954895, 0.3993816673755646, 0.39595362544059753, 0.39325663447380066, 0.3872813284397125, 0.39266064763069153, 0.38324040174484253, 0.3832359313964844, 0.37567198276519775, 0.38224515318870544, 0.37458536028862, 0.37311601638793945, 0.37539494037628174, 0.36805078387260437, 0.3662562966346741, 0.3659299314022064, 0.36321255564689636, 0.3622499108314514, 0.3651147186756134, 0.361788809299469, 0.3645297884941101, 0.35728591680526733, 0.3584466278553009, 0.35737934708595276, 0.35535356402397156, 0.3549796938896179, 0.3487291634082794, 0.34791943430900574, 0.3510420620441437, 0.34950366616249084, 0.35060495138168335, 0.3473518192768097, 0.3473033308982849, 0.35152366757392883, 0.3472766578197479, 0.3457504212856293, 0.34427961707115173, 0.3462934195995331, 0.34281644225120544, 0.3391883075237274, 0.3425726592540741, 0.3432167172431946, 0.34916239976882935, 0.33860185742378235], "val_accuracy": [0.5273333191871643, 0.6629999876022339, 0.6840000152587891, 0.7053333520889282, 0.7360000014305115, 0.7553333044052124, 0.7620000243186951, 0.7820000052452087, 0.7860000133514404, 0.7963333129882812, 0.8100000023841858, 0.8136666417121887, 0.8196666836738586, 0.8149999976158142, 0.8266666531562805, 0.8330000042915344, 0.8326666951179504, 0.8386666774749756, 0.8413333296775818, 0.8429999947547913, 0.8463333249092102, 0.8483333587646484, 0.8516666889190674, 0.8566666841506958, 0.8510000109672546, 0.8576666712760925, 0.8600000143051147, 0.8633333444595337, 0.859666645526886, 0.8643333315849304, 0.8629999756813049, 0.8676666617393494, 0.8640000224113464, 0.8656666874885559, 0.8640000224113464, 0.8723333477973938, 0.8663333058357239, 0.8726666569709778, 0.8703333139419556, 0.8666666746139526, 0.8733333349227905, 0.8743333220481873, 0.8743333220481873, 0.8763333559036255, 0.8766666650772095, 0.871999979019165, 0.8736666440963745, 0.8723333477973938, 0.8776666522026062, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095, 0.8790000081062317, 0.878333330154419, 0.8769999742507935, 0.8756666779518127, 0.8793333172798157, 0.8769999742507935, 0.8766666650772095, 0.8813333511352539, 0.8813333511352539, 0.8843333125114441, 0.8813333511352539, 0.8799999952316284, 0.8799999952316284, 0.8849999904632568, 0.8820000290870667, 0.8833333253860474, 0.8823333382606506, 0.8803333044052124, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [3, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11057142913341522, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 0, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), beta)", "other_info": {"loss": [9.573229789733887, 10.886213302612305, 10.924102783203125, 12.635558128356934, 13.348437309265137, 10.319993019104004, 11.188859939575195, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10711926966905594, 0.10328886657953262, 0.10698718577623367, 0.10751552134752274, 0.11279883980751038, 0.10527011007070541, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.152599334716797, 8.149735450744629, 8.148519515991211, 9.749629020690918, 7.746428489685059, 8.2326021194458, 8.231607437133789, NaN, NaN, NaN], "val_accuracy": [0.08866667002439499, 0.08833333104848862, 0.08766666799783707, 0.08933333307504654, 0.10866666585206985, 0.10433333367109299, 0.10466666519641876, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1], [2, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3042287826538086, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 99], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 2], [16, 22], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 4], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [67, 99, 5, 99, 41, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 2], [0, 1, 0, 2, 0], [39, 39, 18], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 4, 0, 1, 3], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 1, 2, 1, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 30, 16, 14, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.multiply(grad, beta)))))), tf.math.pow(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, beta))), tf.math.multiply(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]