[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8711428642272949, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226603031158447, 1.8613498210906982, 1.3889468908309937, 1.090515375137329, 0.9352238774299622, 0.8358626961708069, 0.7728554606437683, 0.7249111533164978, 0.6881991028785706, 0.6614087224006653, 0.6258229613304138, 0.6078009605407715, 0.5881247520446777, 0.5687736868858337, 0.5528733730316162, 0.5438080430030823, 0.5305376052856445, 0.5025503635406494, 0.4997009336948395, 0.4931636452674866, 0.47987526655197144, 0.4670880138874054, 0.46091654896736145, 0.4424096941947937, 0.4446317255496979, 0.4328925311565399, 0.4206714928150177, 0.42314526438713074, 0.410512775182724, 0.4080885648727417, 0.4018261432647705, 0.39762717485427856, 0.38698458671569824, 0.37730899453163147, 0.3710818290710449, 0.3667434751987457, 0.3608343303203583, 0.3541872501373291, 0.3541053831577301, 0.34367361664772034, 0.34721529483795166, 0.33371180295944214, 0.33887216448783875, 0.3299136757850647, 0.32975462079048157, 0.3252977728843689, 0.3217525780200958, 0.30907395482063293, 0.296347051858902, 0.30270713567733765, 0.29734939336776733, 0.2997072637081146, 0.2885172963142395, 0.2858422100543976, 0.2816952168941498, 0.28215518593788147, 0.27195510268211365, 0.26936978101730347, 0.263641893863678, 0.26386526226997375, 0.2531915009021759, 0.2505752742290497, 0.2511722445487976, 0.2551092803478241, 0.24863846600055695, 0.23259930312633514, 0.24004368484020233, 0.22800816595554352, 0.22412694990634918, 0.2290099859237671, 0.2255215346813202, 0.21521268784999847], "accuracy": [0.2790912687778473, 0.4897635579109192, 0.5694096088409424, 0.6193369626998901, 0.6672830581665039, 0.6977941989898682, 0.7231541275978088, 0.7405890822410583, 0.7440232634544373, 0.7600052952766418, 0.7721568942070007, 0.7757231593132019, 0.7866860628128052, 0.793422281742096, 0.7975168228149414, 0.8061022162437439, 0.8061022162437439, 0.81548011302948, 0.8201030492782593, 0.8224804997444153, 0.8244617581367493, 0.8322546482086182, 0.8348963260650635, 0.841500461101532, 0.8396512866020203, 0.8451988101005554, 0.8499537706375122, 0.8535200357437134, 0.8532558679580688, 0.8516708612442017, 0.8581429123878479, 0.8545766472816467, 0.8626337051391602, 0.8687095642089844, 0.8644828796386719, 0.8652753829956055, 0.8734645247459412, 0.8735966086387634, 0.8721436858177185, 0.8778232932090759, 0.8761062026023865, 0.8782195448875427, 0.8745211958885193, 0.8794082403182983, 0.8780874609947205, 0.8829745054244995, 0.8868049383163452, 0.8860124349594116, 0.8936732411384583, 0.8923524022102356, 0.8930128216743469, 0.8894465565681458, 0.8944657444953918, 0.8976356983184814, 0.89552241563797, 0.9019944667816162, 0.8989565372467041, 0.902390718460083, 0.9049002528190613, 0.9088627696037292, 0.906749427318573, 0.9060890078544617, 0.9095231890678406, 0.9095231890678406, 0.9071456789970398, 0.9138818979263306, 0.9132214784622192, 0.9171839952468872, 0.9174481630325317, 0.9161273241043091, 0.9137498140335083, 0.9256373047828674], "val_loss": [2.0422749519348145, 1.5195729732513428, 1.054113745689392, 0.8575036525726318, 0.7706313729286194, 0.7128168344497681, 0.6697339415550232, 0.6372774243354797, 0.6084409356117249, 0.5876893997192383, 0.570014476776123, 0.5551918745040894, 0.5405721664428711, 0.5303584933280945, 0.5260372757911682, 0.5106920599937439, 0.5029492378234863, 0.49282917380332947, 0.4866124391555786, 0.4778476655483246, 0.4740877151489258, 0.46798959374427795, 0.46201372146606445, 0.4595677852630615, 0.456050306558609, 0.45055899024009705, 0.4480641782283783, 0.44162213802337646, 0.44206690788269043, 0.43518421053886414, 0.4298843443393707, 0.4278970956802368, 0.42778828740119934, 0.4215945601463318, 0.42254534363746643, 0.41809263825416565, 0.4179559051990509, 0.4152473509311676, 0.4088577330112457, 0.4093462824821472, 0.41059109568595886, 0.4121306240558624, 0.40598592162132263, 0.4034154415130615, 0.4066448211669922, 0.40487101674079895, 0.4007202982902527, 0.4014059603214264, 0.40006130933761597, 0.3981858789920807, 0.4028548300266266, 0.397352933883667, 0.3984324634075165, 0.39333340525627136, 0.3966624438762665, 0.3951849043369293, 0.3940720558166504, 0.39357897639274597, 0.39279377460479736, 0.3913348913192749, 0.39817556738853455, 0.39109647274017334, 0.3930816650390625, 0.3900558352470398, 0.391157865524292, 0.39580005407333374, 0.38993075489997864, 0.39908871054649353, 0.3953768312931061, 0.38968217372894287, 0.39604896306991577, 0.393705278635025], "val_accuracy": [0.5476666688919067, 0.659333348274231, 0.6740000247955322, 0.6990000009536743, 0.7233333587646484, 0.737333357334137, 0.7509999871253967, 0.7639999985694885, 0.7803333401679993, 0.7889999747276306, 0.79666668176651, 0.8003333210945129, 0.8100000023841858, 0.8086666464805603, 0.812333345413208, 0.8176666498184204, 0.8226666450500488, 0.8246666789054871, 0.8293333053588867, 0.8256666660308838, 0.8289999961853027, 0.8296666741371155, 0.8343333601951599, 0.8323333263397217, 0.8343333601951599, 0.8360000252723694, 0.8370000123977661, 0.8373333215713501, 0.8383333086967468, 0.8429999947547913, 0.846666693687439, 0.8453333377838135, 0.8460000157356262, 0.8489999771118164, 0.8479999899864197, 0.8476666808128357, 0.8529999852180481, 0.8533333539962769, 0.8556666374206543, 0.8546666502952576, 0.8553333282470703, 0.8526666760444641, 0.8519999980926514, 0.8576666712760925, 0.8546666502952576, 0.8583333492279053, 0.859666645526886, 0.8576666712760925, 0.8579999804496765, 0.862333357334137, 0.8619999885559082, 0.859333336353302, 0.8600000143051147, 0.862666666507721, 0.8646666407585144, 0.8643333315849304, 0.8640000224113464, 0.8633333444595337, 0.8653333187103271, 0.8629999756813049, 0.8646666407585144, 0.8650000095367432, 0.8663333058357239, 0.8669999837875366, 0.8659999966621399, 0.8676666617393494, 0.8683333396911621, 0.8673333525657654, 0.8673333525657654, 0.8683333396911621, 0.8679999709129333, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 67], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [81, 24, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 10, 6, 4, 3, 3, 1, 2, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), beta), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 4, 9], [0, 1, 0, 2], [39, 39, 98], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 2], [0, 2, 0, 3], [5, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 6, 7, 5], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 6, 3, 3, 2, 1, 0, 1, 1, 25, 13, 12, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(sigma), alpha)))", "other_info": {"loss": [49717448704.0, 432472489984.0, 908457148416.0, 1299239272448.0, 1576925659136.0, 1786144620544.0], "accuracy": [0.09932637959718704, 0.10170386731624603, 0.10051512718200684, 0.09998679161071777, 0.10355303436517715, 0.1022322028875351], "val_loss": [173618151424.0, 559827714048.0, 896215416832.0, 1144168906752.0, 1324118310912.0, 1457544101888.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 5, 3], [2, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 1, 3, 6, 2, 1, 4, 1, 4, 2, 8, 5, 6, 0, 4], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 5, 4, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 28, 15, 13, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma))), tf.math.sqrt(tf.math.square(alpha))), beta)), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 20], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1], [0, 8, 0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 9, 5], [0, 3, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 4, 3, 1, 1, 24, 14, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(sigma, grad), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), alpha)), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]