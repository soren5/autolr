[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221792697906494, 1.8535516262054443, 1.3710925579071045, 1.0798282623291016, 0.9274763464927673, 0.8244538307189941, 0.7593715190887451, 0.7161458730697632, 0.6857203841209412, 0.6504316329956055, 0.6273928880691528, 0.6048006415367126, 0.5852156281471252, 0.5672125220298767, 0.5541315674781799, 0.5376990437507629, 0.5267865061759949, 0.5160605907440186, 0.5047820210456848, 0.49363648891448975, 0.4881700575351715, 0.46739909052848816, 0.4638843834400177, 0.4593251645565033, 0.45006629824638367, 0.43539971113204956, 0.4353124499320984, 0.4183039963245392, 0.42383143305778503, 0.403277724981308, 0.40480655431747437, 0.40153709053993225, 0.3875807821750641, 0.3881382942199707, 0.38113299012184143, 0.3703995645046234, 0.36802786588668823, 0.356614351272583, 0.3677188754081726, 0.3605465590953827, 0.3519223928451538, 0.3424319624900818, 0.33933162689208984, 0.33865436911582947, 0.33503881096839905, 0.3324263393878937, 0.32121390104293823, 0.316590279340744, 0.3058241903781891, 0.3075055480003357, 0.3069049119949341, 0.2996816337108612, 0.2851482927799225, 0.2913473844528198], "accuracy": [0.28424251079559326, 0.5044247508049011, 0.5715228915214539, 0.6288469433784485, 0.6619997620582581, 0.7073041796684265, 0.7294940948486328, 0.7420420050621033, 0.7493065595626831, 0.7638356685638428, 0.7708360552787781, 0.7769119143486023, 0.7833839654922485, 0.7961959838867188, 0.7975168228149414, 0.8021397590637207, 0.8127063512802124, 0.8162726163864136, 0.8133667707443237, 0.8214238286018372, 0.8224804997444153, 0.8352925777435303, 0.8366134166717529, 0.8407079577445984, 0.8396512866020203, 0.8448025584220886, 0.8416325449943542, 0.8500858545303345, 0.8495575189590454, 0.8529917001724243, 0.8560295701026917, 0.8588033318519592, 0.8603883385658264, 0.8615770936012268, 0.8634262084960938, 0.8668603897094727, 0.8669924736022949, 0.8708229064941406, 0.8688416481018066, 0.8702945709228516, 0.8725399374961853, 0.8745211958885193, 0.8734645247459412, 0.8780874609947205, 0.8780874609947205, 0.8775591254234314, 0.8809932470321655, 0.8897107243537903, 0.8879936337471008, 0.8887861371040344, 0.8919561505317688, 0.8914278149604797, 0.8976356983184814, 0.8932769894599915], "val_loss": [2.036099672317505, 1.4990309476852417, 1.03529953956604, 0.8365581035614014, 0.75506991147995, 0.6922559142112732, 0.6490868926048279, 0.6195607781410217, 0.5926358103752136, 0.5698839426040649, 0.5474868416786194, 0.5343150496482849, 0.5189168453216553, 0.5052558779716492, 0.4932681620121002, 0.4855591952800751, 0.47376134991645813, 0.46716731786727905, 0.46090441942214966, 0.46000635623931885, 0.4503083825111389, 0.4418427050113678, 0.4333798885345459, 0.4311622679233551, 0.42350471019744873, 0.420418918132782, 0.4114355146884918, 0.41058212518692017, 0.4067498445510864, 0.40055710077285767, 0.39804017543792725, 0.3935905396938324, 0.38911280035972595, 0.38561156392097473, 0.38478508591651917, 0.3891037702560425, 0.37545597553253174, 0.37616682052612305, 0.37273603677749634, 0.3751341700553894, 0.37328389286994934, 0.3679693937301636, 0.3713034391403198, 0.37127354741096497, 0.36528709530830383, 0.3640979826450348, 0.35844969749450684, 0.3620068430900574, 0.35561302304267883, 0.3572991192340851, 0.35435783863067627, 0.3563157916069031, 0.35468965768814087, 0.35000988841056824], "val_accuracy": [0.5323333144187927, 0.6610000133514404, 0.6893333196640015, 0.7086666822433472, 0.7306666374206543, 0.75, 0.7636666893959045, 0.765666663646698, 0.7803333401679993, 0.7833333611488342, 0.7976666688919067, 0.8040000200271606, 0.8050000071525574, 0.812333345413208, 0.8190000057220459, 0.8226666450500488, 0.8266666531562805, 0.8309999704360962, 0.8336666822433472, 0.8356666564941406, 0.8353333473205566, 0.8389999866485596, 0.8383333086967468, 0.8420000076293945, 0.847000002861023, 0.8443333506584167, 0.8523333072662354, 0.8463333249092102, 0.8566666841506958, 0.8553333282470703, 0.8550000190734863, 0.8579999804496765, 0.859666645526886, 0.8576666712760925, 0.859666645526886, 0.859000027179718, 0.8633333444595337, 0.8579999804496765, 0.8600000143051147, 0.8603333234786987, 0.8683333396911621, 0.8653333187103271, 0.859666645526886, 0.859000027179718, 0.8653333187103271, 0.8686666488647461, 0.8676666617393494, 0.8656666874885559, 0.8700000047683716, 0.8669999837875366, 0.8663333058357239, 0.8676666617393494, 0.8686666488647461, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [24, 11], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [48], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 2, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [82, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 7, 5], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [66, 99, 27, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [68, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 2, 1, 4, 2, 8], [0, 0, 2, 3, 4, 0, 3, 2, 2, 0], [16, 99, 52, 99, 45, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.pow(sigma, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), sigma)), beta), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3091742992401123, 2.3096795082092285, 2.309434413909912, 2.3085289001464844, 2.309802532196045, 2.3098745346069336], "accuracy": [0.09642054885625839, 0.09430722147226334, 0.09576013684272766, 0.09285431355237961, 0.0956280529499054, 0.09694888442754745], "val_loss": [2.308767318725586, 2.308767318725586, 2.308767318725586, 2.308767318725586, 2.308767080307007, 2.308767318725586], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2], [39, 33], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 3, 2, 4, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 8, 4, 4, 2, 6, 4, 2, 1, 2, 1, 1, 0, 23, 12, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [2.3090178966522217, 2.308915853500366, 2.308304786682129, 2.3106133937835693, 2.3099865913391113, 2.3106205463409424], "accuracy": [0.0952318087220192, 0.09536388516426086, 0.09470347315073013, 0.09008057415485382, 0.09576013684272766, 0.09126931428909302], "val_loss": [2.3087828159332275, 2.3087828159332275, 2.3087828159332275, 2.3087828159332275, 2.3087828159332275, 2.3087828159332275], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]