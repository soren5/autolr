[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223493814468384, 1.8686702251434326, 1.383797526359558, 1.0895370244979858, 0.9376315474510193, 0.8286447525024414, 0.7719245553016663, 0.7146481871604919, 0.6870971918106079, 0.650006890296936, 0.6302641034126282, 0.6018434166908264, 0.5825326442718506, 0.5700476169586182, 0.5485853552818298, 0.5382450819015503, 0.5205206871032715, 0.5066426396369934, 0.5021374225616455, 0.4937688112258911, 0.4765661060810089, 0.47971203923225403, 0.4624263048171997, 0.4594159424304962, 0.44259658455848694, 0.43554821610450745, 0.4295203685760498, 0.42029809951782227, 0.4152316451072693, 0.40447643399238586, 0.4063647985458374, 0.39076852798461914, 0.3912819027900696, 0.39124053716659546, 0.38427817821502686, 0.3731323182582855, 0.3677348494529724, 0.35611873865127563, 0.35951223969459534, 0.3542790114879608, 0.34065139293670654, 0.3407040536403656, 0.33753764629364014, 0.3333352506160736, 0.33030492067337036, 0.3212625980377197, 0.31834354996681213, 0.31015831232070923, 0.31392815709114075, 0.3040663003921509, 0.297057569026947, 0.30211013555526733, 0.29497069120407104, 0.2868744432926178, 0.2847669720649719, 0.282291442155838, 0.28246816992759705, 0.27769574522972107, 0.2654244601726532, 0.2661563754081726], "accuracy": [0.27327960729599, 0.48831066489219666, 0.5665037631988525, 0.6240919232368469, 0.6605468392372131, 0.7042662501335144, 0.7202483415603638, 0.7430986762046814, 0.7474573850631714, 0.7627789974212646, 0.7670056819915771, 0.7786290049552917, 0.7891955971717834, 0.7955356240272522, 0.7992339134216309, 0.8070268034934998, 0.8098005652427673, 0.8178576231002808, 0.8166688680648804, 0.8219521641731262, 0.8345000743865967, 0.8269713521003723, 0.8319904804229736, 0.8343679904937744, 0.8417646288871765, 0.8451988101005554, 0.8466516733169556, 0.8516708612442017, 0.850350022315979, 0.8568220734596252, 0.8565579056739807, 0.8582749962806702, 0.8578787446022034, 0.8561616539955139, 0.8638224601745605, 0.8667283058166504, 0.8679170608520508, 0.8755778670310974, 0.8721436858177185, 0.8737286925315857, 0.8794082403182983, 0.8767666220664978, 0.8775591254234314, 0.8776912093162537, 0.8816536664962769, 0.8887861371040344, 0.8912957310676575, 0.8882578015327454, 0.887201189994812, 0.8922203183174133, 0.8948619961738586, 0.8894465565681458, 0.8952582478523254, 0.8977677822113037, 0.8936732411384583, 0.900409460067749, 0.9010698795318604, 0.8994848728179932, 0.9037115573883057, 0.9041078090667725], "val_loss": [2.044893741607666, 1.519838809967041, 1.0426894426345825, 0.8334002494812012, 0.7487931251525879, 0.694373369216919, 0.6477558612823486, 0.6203011274337769, 0.5902358889579773, 0.5732321739196777, 0.5493327379226685, 0.5343017578125, 0.5205479860305786, 0.5111297965049744, 0.4943068027496338, 0.48844149708747864, 0.478615403175354, 0.4684962034225464, 0.45965316891670227, 0.4515553414821625, 0.44551196694374084, 0.43923062086105347, 0.4310651421546936, 0.4267549514770508, 0.42472729086875916, 0.41484707593917847, 0.4142966568470001, 0.4126335382461548, 0.40776482224464417, 0.4026464819908142, 0.39747098088264465, 0.39646053314208984, 0.39400190114974976, 0.39713168144226074, 0.38787004351615906, 0.3868987560272217, 0.38103970885276794, 0.38495784997940063, 0.3807203769683838, 0.37732136249542236, 0.3753625452518463, 0.3740684688091278, 0.3729495406150818, 0.3731270432472229, 0.3709360361099243, 0.3664620816707611, 0.37009668350219727, 0.3705170750617981, 0.36425769329071045, 0.36335521936416626, 0.36370939016342163, 0.36367934942245483, 0.3626505434513092, 0.3604675233364105, 0.35782599449157715, 0.3588809072971344, 0.36321115493774414, 0.35705268383026123, 0.35833093523979187, 0.35475683212280273], "val_accuracy": [0.531000018119812, 0.6643333435058594, 0.6869999766349792, 0.7239999771118164, 0.7306666374206543, 0.75, 0.7636666893959045, 0.7670000195503235, 0.784333348274231, 0.7829999923706055, 0.8040000200271606, 0.8043333292007446, 0.8133333325386047, 0.8180000185966492, 0.8273333311080933, 0.8303333520889282, 0.8333333134651184, 0.8333333134651184, 0.8393333554267883, 0.8456666469573975, 0.8420000076293945, 0.8476666808128357, 0.847000002861023, 0.8543333411216736, 0.8513333201408386, 0.8569999933242798, 0.859333336353302, 0.8529999852180481, 0.8573333621025085, 0.8569999933242798, 0.8613333106040955, 0.8606666922569275, 0.8616666793823242, 0.8633333444595337, 0.8633333444595337, 0.862333357334137, 0.8640000224113464, 0.8640000224113464, 0.8643333315849304, 0.8646666407585144, 0.8636666536331177, 0.8643333315849304, 0.8659999966621399, 0.8643333315849304, 0.8669999837875366, 0.8650000095367432, 0.8683333396911621, 0.8666666746139526, 0.8666666746139526, 0.8686666488647461, 0.8669999837875366, 0.871999979019165, 0.8693333268165588, 0.8683333396911621, 0.874666690826416, 0.8693333268165588, 0.871999979019165, 0.871999979019165, 0.8736666440963745, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [33, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1], [0, 1, 4, 3, 0, 0, 2, 1, 2, 0, 1], [16, 2, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 2, 3, 1, 2, 1, 23, 12, 11, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.sqrt(tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 2, 3, 0, 4, 3, 8, 6, 2, 8], [0, 1, 2, 2, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 4, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 54, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 2, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(grad, grad)), tf.math.multiply(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035953044891357, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [99, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 4, 7, 4, 4, 9, 8], [0, 2, 3, 3, 2, 2, 2], [33, 16], [0, 1], [0], [0], [91], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 8, 8, 2, 1, 5, 0, 0, 4, 0, 3, 6, 1, 1], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0, 4, 4, 5, 2, 6, 0, 6], [16, 99, 96, 2, 61, 7, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 19, 12, 7, 2, 2, 1, 1, 1, 39, 22, 17, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.pow(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.sqrt(sigma)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(sigma, alpha), tf.math.square(alpha))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(grad))), tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(grad, beta)), grad)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 6, 6, 8, 3, 8, 9, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 18, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029229640960693, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}]