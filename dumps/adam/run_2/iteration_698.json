[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239840030670166, 1.8731155395507812, 1.407665491104126, 1.1009923219680786, 0.9406349658966064, 0.8369626402854919, 0.782544732093811, 0.7218677401542664, 0.6959238648414612, 0.6699000000953674, 0.6450029015541077, 0.6157668232917786, 0.604339063167572, 0.5859843492507935, 0.5716630816459656, 0.5564984679222107, 0.5466675162315369, 0.5295096635818481, 0.5224378108978271, 0.5104801654815674, 0.50113844871521, 0.49222591519355774, 0.4837716817855835, 0.47095760703086853, 0.4583091139793396, 0.4581089913845062, 0.4490925073623657, 0.4428015351295471, 0.4333826005458832, 0.4306333065032959, 0.4263056814670563, 0.4052940607070923, 0.4067820906639099, 0.4039187729358673, 0.39241620898246765, 0.403994619846344, 0.3878140151500702, 0.38045409321784973, 0.37222129106521606, 0.36839550733566284, 0.3653453290462494, 0.3654569983482361, 0.3615788221359253, 0.35508963465690613, 0.34594300389289856, 0.3406735360622406, 0.33969059586524963, 0.3309841752052307, 0.3232201039791107, 0.32363614439964294, 0.31549400091171265, 0.3161340355873108, 0.31067219376564026, 0.3058849275112152, 0.30170369148254395, 0.2992582321166992, 0.286418080329895, 0.284087598323822, 0.2889273166656494, 0.27821654081344604, 0.27014049887657166, 0.2778967320919037, 0.2717765271663666, 0.2698536813259125, 0.2576138377189636, 0.25924360752105713, 0.2506573796272278, 0.25091755390167236, 0.24271714687347412, 0.24397557973861694, 0.24215209484100342, 0.23968620598316193, 0.23595309257507324, 0.23032528162002563, 0.22570696473121643], "accuracy": [0.27380794286727905, 0.4897635579109192, 0.5548804402351379, 0.6174877882003784, 0.6667547225952148, 0.7012283802032471, 0.7194558382034302, 0.7366266250610352, 0.7471932172775269, 0.7535332441329956, 0.7629110813140869, 0.7680623531341553, 0.7795535326004028, 0.7862898111343384, 0.7942147850990295, 0.7950072884559631, 0.8016114234924316, 0.8055738806724548, 0.8127063512802124, 0.8153480291366577, 0.8150838613510132, 0.8234050869941711, 0.8248580098152161, 0.8327829837799072, 0.8356888294219971, 0.8345000743865967, 0.8413683772087097, 0.8433496356010437, 0.8467837572097778, 0.8482366800308228, 0.845859169960022, 0.8570862412452698, 0.8540483713150024, 0.8536521196365356, 0.8610487580299377, 0.8573504090309143, 0.86118084192276, 0.8621054291725159, 0.8672566413879395, 0.8685774803161621, 0.8689737319946289, 0.8656716346740723, 0.8684453964233398, 0.8721436858177185, 0.8750495314598083, 0.8782195448875427, 0.8786157965660095, 0.8803328275680542, 0.8831065893173218, 0.8823140859603882, 0.8829745054244995, 0.8868049383163452, 0.8883898854255676, 0.8864086866378784, 0.8908994793891907, 0.8897107243537903, 0.8968431949615479, 0.898428201675415, 0.8960506916046143, 0.9001452922821045, 0.8972394466400146, 0.8972394466400146, 0.9002773761749268, 0.9025228023529053, 0.9062210917472839, 0.9085986018180847, 0.9063531756401062, 0.9079381823539734, 0.9085986018180847, 0.9119006991386414, 0.9122969508171082, 0.915070652961731, 0.9140139818191528, 0.9141460657119751, 0.917580246925354], "val_loss": [2.0387301445007324, 1.5155943632125854, 1.0409682989120483, 0.8276770710945129, 0.7344910502433777, 0.6747350096702576, 0.6302511096000671, 0.5967747569084167, 0.568617582321167, 0.5490872859954834, 0.5305144190788269, 0.5128216743469238, 0.4993807077407837, 0.4914765954017639, 0.4824431240558624, 0.47125244140625, 0.45697519183158875, 0.45013752579689026, 0.4432988166809082, 0.43642398715019226, 0.4259316325187683, 0.4244605302810669, 0.41628769040107727, 0.41064828634262085, 0.40324628353118896, 0.4019726514816284, 0.3960179388523102, 0.3929373025894165, 0.3849480450153351, 0.38236162066459656, 0.37694987654685974, 0.37338948249816895, 0.3695489764213562, 0.3656732439994812, 0.3686917722225189, 0.36278676986694336, 0.35586923360824585, 0.35986483097076416, 0.3553870916366577, 0.35136815905570984, 0.3491457402706146, 0.34797999262809753, 0.3587152361869812, 0.3410376012325287, 0.3385104537010193, 0.3401004672050476, 0.3389894962310791, 0.3318979740142822, 0.33744776248931885, 0.32956764101982117, 0.33007746934890747, 0.32816579937934875, 0.3336690366268158, 0.3229507505893707, 0.3306172788143158, 0.3274238407611847, 0.3193039894104004, 0.3248334228992462, 0.31518691778182983, 0.31832629442214966, 0.319872111082077, 0.31842944025993347, 0.31546998023986816, 0.3166431784629822, 0.3146052658557892, 0.3150452971458435, 0.314228892326355, 0.3153814971446991, 0.3164660930633545, 0.311328649520874, 0.3161112070083618, 0.313507080078125, 0.3127816915512085, 0.3119910955429077, 0.3086724579334259], "val_accuracy": [0.5293333530426025, 0.6583333611488342, 0.6850000023841858, 0.7143333554267883, 0.734666645526886, 0.7570000290870667, 0.7703333497047424, 0.7850000262260437, 0.7953333258628845, 0.7953333258628845, 0.8090000152587891, 0.815666675567627, 0.8256666660308838, 0.82833331823349, 0.8196666836738586, 0.8370000123977661, 0.8416666388511658, 0.843666672706604, 0.8416666388511658, 0.8510000109672546, 0.8523333072662354, 0.8526666760444641, 0.8573333621025085, 0.8573333621025085, 0.8603333234786987, 0.8583333492279053, 0.8619999885559082, 0.8646666407585144, 0.8693333268165588, 0.8683333396911621, 0.8676666617393494, 0.8700000047683716, 0.8730000257492065, 0.875, 0.871999979019165, 0.871666669845581, 0.878333330154419, 0.8759999871253967, 0.8763333559036255, 0.8790000081062317, 0.8786666393280029, 0.8806666731834412, 0.8713333606719971, 0.8856666684150696, 0.8859999775886536, 0.8793333172798157, 0.8826666474342346, 0.8853333592414856, 0.8823333382606506, 0.887666642665863, 0.8866666555404663, 0.8853333592414856, 0.8846666812896729, 0.8896666765213013, 0.8849999904632568, 0.887666642665863, 0.890999972820282, 0.8859999775886536, 0.8930000066757202, 0.890333354473114, 0.8886666893959045, 0.890999972820282, 0.8939999938011169, 0.8920000195503235, 0.8976666927337646, 0.8946666717529297, 0.890999972820282, 0.8916666507720947, 0.8946666717529297, 0.8983333110809326, 0.893666684627533, 0.893666684627533, 0.8970000147819519, 0.8949999809265137, 0.8970000147819519]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 3, 1, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 1], [25, 99, 96, 34, 73, 1, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 28, 16, 12, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.subtract(alpha, beta))))), tf.math.multiply(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [40], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 56, 96, 93, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036139011383057, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 12, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.312337636947632, 2.372795581817627, 3.066446542739868, 6.201934337615967, 14.544078826904297, 32.3776741027832], "accuracy": [0.09245806187391281, 0.10355303436517715, 0.09853387624025345, 0.09959053993225098, 0.09377889335155487, 0.09536388516426086], "val_loss": [2.3114893436431885, 2.420271873474121, 3.45131778717041, 7.711707592010498, 17.81432342529297, 38.14067077636719], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1], [8, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [3, 2, 0, 3], [6, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 5, 4, 1, 6, 0, 1, 6, 2, 9, 4, 1, 9, 9], [4, 0, 0, 3, 0, 0, 0, 4, 2, 0, 6, 3, 4, 4, 3, 7], [16, 99, 96, 99, 61, 1, 83, 20, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 40, 24, 16, 9], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(sigma, grad))), tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]