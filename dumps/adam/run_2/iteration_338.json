[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222193956375122, 1.8644055128097534, 1.3934569358825684, 1.0937103033065796, 0.9488982558250427, 0.8523101806640625, 0.7761786580085754, 0.7302466630935669, 0.6928980350494385, 0.6594448685646057, 0.6328231692314148, 0.605614960193634, 0.5884249806404114, 0.5700885057449341, 0.557832658290863, 0.5417169332504272, 0.5329866409301758, 0.5153568387031555, 0.5047577619552612, 0.48453715443611145, 0.47854793071746826, 0.4667501747608185, 0.45732685923576355, 0.45329466462135315, 0.4460448920726776, 0.4414934515953064, 0.4326009452342987, 0.4199866056442261, 0.4133923053741455, 0.40737006068229675, 0.40061500668525696, 0.3958624601364136, 0.39404842257499695, 0.3846508264541626, 0.38177168369293213, 0.37771305441856384, 0.3708583116531372, 0.36195462942123413, 0.3485246002674103, 0.34792718291282654, 0.3484937846660614, 0.3351544141769409, 0.3338879942893982, 0.33171993494033813, 0.32678377628326416, 0.31914278864860535, 0.321503221988678, 0.3144088685512543, 0.3103223741054535, 0.30151721835136414, 0.29950428009033203, 0.30305200815200806, 0.29213014245033264, 0.2878788709640503, 0.2801268696784973, 0.27894407510757446, 0.27357202768325806, 0.26956579089164734, 0.2672538757324219, 0.26961812376976013, 0.2615479528903961, 0.2652392089366913, 0.25475066900253296, 0.24918724596500397, 0.24551236629486084, 0.23973491787910461, 0.23965106904506683, 0.24296000599861145, 0.23014314472675323, 0.22946228086948395, 0.2269250452518463], "accuracy": [0.2759212851524353, 0.48408401012420654, 0.5597675442695618, 0.6077136397361755, 0.666358470916748, 0.6869634389877319, 0.7150970697402954, 0.7347774505615234, 0.7493065595626831, 0.7593448758125305, 0.7691190242767334, 0.774798572063446, 0.780610203742981, 0.791969358921051, 0.7944789528846741, 0.8039889335632324, 0.807158887386322, 0.8161405324935913, 0.8171972036361694, 0.8293488025665283, 0.8253863453865051, 0.8325188159942627, 0.8393871188163757, 0.8388587832450867, 0.8418967127799988, 0.8388587832450867, 0.8417646288871765, 0.8507462739944458, 0.8585391640663147, 0.8507462739944458, 0.8564258217811584, 0.8610487580299377, 0.86118084192276, 0.863558292388916, 0.8609166741371155, 0.8647470474243164, 0.868049144744873, 0.870030403137207, 0.8728041052818298, 0.8735966086387634, 0.8757099509239197, 0.8811253309249878, 0.8765024542808533, 0.8791441321372986, 0.883238673210144, 0.8815215826034546, 0.8833707571029663, 0.8882578015327454, 0.8848236799240112, 0.8903711438179016, 0.8908994793891907, 0.8874653577804565, 0.8960506916046143, 0.898428201675415, 0.8975036144256592, 0.8988244533538818, 0.8992207050323486, 0.9000132083892822, 0.9078060984611511, 0.8993527889251709, 0.9059569239616394, 0.9045040011405945, 0.906749427318573, 0.9093911051750183, 0.9101836085319519, 0.9129573106765747, 0.9158631563186646, 0.9140139818191528, 0.9183727502822876, 0.9166556596755981, 0.9167877435684204], "val_loss": [2.0361602306365967, 1.5060358047485352, 1.0366004705429077, 0.8324404358863831, 0.7462112903594971, 0.697458803653717, 0.6551399827003479, 0.6148171424865723, 0.5966686010360718, 0.5711769461631775, 0.5524824857711792, 0.5385282635688782, 0.5235258936882019, 0.5156926512718201, 0.5024915933609009, 0.5039546489715576, 0.480712354183197, 0.4755001664161682, 0.4681955575942993, 0.4605954587459564, 0.4604063332080841, 0.44754305481910706, 0.4474341571331024, 0.44429972767829895, 0.4366951882839203, 0.4263875186443329, 0.42907047271728516, 0.42472603917121887, 0.4199569523334503, 0.41644221544265747, 0.4090844690799713, 0.41088569164276123, 0.4064221978187561, 0.4032479524612427, 0.40023916959762573, 0.41015127301216125, 0.3973606824874878, 0.39378878474235535, 0.3947969973087311, 0.3962491452693939, 0.3863375782966614, 0.38447606563568115, 0.38537275791168213, 0.3804866075515747, 0.38142064213752747, 0.382086843252182, 0.38100841641426086, 0.3808620274066925, 0.38035425543785095, 0.3788710832595825, 0.3716384172439575, 0.3696865141391754, 0.37095972895622253, 0.369493693113327, 0.3647893965244293, 0.3666412830352783, 0.3677964210510254, 0.36506110429763794, 0.3684399127960205, 0.3710523247718811, 0.37087053060531616, 0.3612062931060791, 0.3628760278224945, 0.3624434471130371, 0.3630049228668213, 0.36241769790649414, 0.36621803045272827, 0.361851304769516, 0.3645966053009033, 0.35795992612838745, 0.36142292618751526], "val_accuracy": [0.5419999957084656, 0.6566666960716248, 0.687666654586792, 0.715666651725769, 0.7429999709129333, 0.7586666941642761, 0.7596666812896729, 0.7799999713897705, 0.7806666493415833, 0.7929999828338623, 0.7956666946411133, 0.8026666641235352, 0.8149999976158142, 0.8086666464805603, 0.8159999847412109, 0.8190000057220459, 0.8270000219345093, 0.824999988079071, 0.8296666741371155, 0.8336666822433472, 0.8306666612625122, 0.8346666693687439, 0.8366666436195374, 0.8379999995231628, 0.843999981880188, 0.8489999771118164, 0.8423333168029785, 0.846666693687439, 0.8486666679382324, 0.8510000109672546, 0.8556666374206543, 0.8543333411216736, 0.859333336353302, 0.8539999723434448, 0.8603333234786987, 0.8543333411216736, 0.8600000143051147, 0.8610000014305115, 0.8600000143051147, 0.8579999804496765, 0.8646666407585144, 0.8636666536331177, 0.8673333525657654, 0.8659999966621399, 0.8656666874885559, 0.8666666746139526, 0.8676666617393494, 0.8663333058357239, 0.8656666874885559, 0.8693333268165588, 0.871666669845581, 0.8726666569709778, 0.8690000176429749, 0.8733333349227905, 0.8709999918937683, 0.871666669845581, 0.8736666440963745, 0.8740000128746033, 0.874666690826416, 0.8759999871253967, 0.8733333349227905, 0.8766666650772095, 0.878333330154419, 0.875333309173584, 0.8776666522026062, 0.8816666603088379, 0.8769999742507935, 0.8773333430290222, 0.8740000128746033, 0.8769999742507935, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 5, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [4], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 0, 8, 3, 8, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 4], [16, 18, 96, 99, 61, 1]], "fitness": -0.10257142782211304, "mapping_values": [1, 3, 1, 2, 1, 6, 4, 2, 1, 3, 1, 2, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [5857757184.0, 6689595904.0, 6649548288.0, 6719608320.0, 6640227328.0, 6553157120.0], "accuracy": [0.10091137140989304, 0.10315678268671036, 0.10738343745470047, 0.09826971590518951, 0.10196803510189056, 0.10434553027153015], "val_loss": [4571635712.0, 4571485696.0, 4571396608.0, 4571334144.0, 4571286016.0, 4571246592.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 6, 6, 8, 9], [0, 2, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 9, 5, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 3, 0, 3, 4], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [50], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [39, 28], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [86, 16], [0, 0, 1], [0, 5], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 3, 2, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.8728392124176025, 4.668785572052002, 5.941213130950928, 6.840322494506836, 7.6390814781188965, 8.269619941711426], "accuracy": [0.09245806187391281, 0.10051512718200684, 0.1018359512090683, 0.10196803510189056, 0.09853387624025345, 0.10170386731624603], "val_loss": [3.276426315307617, 4.301789283752441, 5.079035758972168, 5.705204486846924, 6.231986999511719, 6.688355922698975], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]