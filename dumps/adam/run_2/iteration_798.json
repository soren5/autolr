[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221414089202881, 1.8628748655319214, 1.379406213760376, 1.09396493434906, 0.938600480556488, 0.8485231995582581, 0.783565878868103, 0.7359192371368408, 0.6959331631660461, 0.6759194731712341, 0.6507899165153503, 0.6296416521072388, 0.612398087978363, 0.592479944229126, 0.5823574066162109, 0.556751549243927, 0.546754002571106, 0.5376810431480408, 0.5350592732429504, 0.5063489079475403, 0.5044084191322327, 0.4873863160610199, 0.48362043499946594, 0.4692098796367645, 0.46793806552886963, 0.4535384774208069, 0.4481668174266815, 0.4408351182937622, 0.4394613802433014, 0.43012917041778564, 0.41090017557144165, 0.4121559262275696, 0.407352477312088, 0.3946535587310791, 0.399485319852829, 0.3897525668144226, 0.3857882022857666, 0.37962639331817627, 0.3766574263572693, 0.37306609749794006, 0.36003828048706055, 0.36165711283683777, 0.3521156311035156, 0.344099760055542, 0.3351527452468872, 0.3282075524330139, 0.3266473114490509, 0.32598552107810974, 0.32290592789649963, 0.3119600713253021, 0.3093310296535492, 0.31510820984840393, 0.30808186531066895, 0.2962454557418823, 0.29313939809799194, 0.28943026065826416, 0.2876313328742981, 0.2817079424858093, 0.28013038635253906, 0.2761746644973755, 0.26341918110847473, 0.2660976052284241, 0.2598653733730316, 0.25832271575927734, 0.25613823533058167, 0.2501387298107147, 0.24652166664600372, 0.2413332611322403, 0.23488904535770416, 0.23465724289417267, 0.22954806685447693, 0.22482183575630188, 0.22640766203403473, 0.22552309930324554, 0.2168314903974533, 0.21911932528018951], "accuracy": [0.27737417817115784, 0.49491479992866516, 0.5789195895195007, 0.6145819425582886, 0.6655659675598145, 0.696209192276001, 0.7156254053115845, 0.7277770638465881, 0.7489103078842163, 0.752740740776062, 0.7606657147407532, 0.7666094303131104, 0.770439863204956, 0.7829877138137817, 0.7877426743507385, 0.7989697456359863, 0.8024039268493652, 0.8076872229576111, 0.805177628993988, 0.8164047002792358, 0.8150838613510132, 0.8253863453865051, 0.8272355198860168, 0.8297450542449951, 0.8281601071357727, 0.837141752243042, 0.8403117060661316, 0.842028796672821, 0.8387266993522644, 0.848368763923645, 0.8531237840652466, 0.8504821062088013, 0.8507462739944458, 0.8570862412452698, 0.8590674996376038, 0.8594637513160706, 0.8622375130653381, 0.8659358024597168, 0.8598600029945374, 0.8661999702453613, 0.8705587387084961, 0.8693699836730957, 0.8720116019248962, 0.8739928603172302, 0.8742570281028748, 0.8768987059593201, 0.8837670087814331, 0.8825782537460327, 0.8790120482444763, 0.8861445188522339, 0.8856161832809448, 0.882710337638855, 0.8860124349594116, 0.8951261639595032, 0.8927486538887024, 0.8938053250312805, 0.8948619961738586, 0.8982961177825928, 0.8951261639595032, 0.8993527889251709, 0.9021265506744385, 0.9050323367118835, 0.9066173434257507, 0.904768168926239, 0.9055606722831726, 0.9066173434257507, 0.9060890078544617, 0.9108440279960632, 0.913089394569397, 0.9144102334976196, 0.9182406663894653, 0.9185048341751099, 0.9185048341751099, 0.9165235757827759, 0.9183727502822876, 0.9189010858535767], "val_loss": [2.0339202880859375, 1.5026062726974487, 1.0329363346099854, 0.8296709060668945, 0.7425496578216553, 0.6855245232582092, 0.6426491737365723, 0.6015675663948059, 0.5751891136169434, 0.554466962814331, 0.5349393486976624, 0.5224371552467346, 0.506296694278717, 0.49621671438217163, 0.48289158940315247, 0.4751133620738983, 0.4614165723323822, 0.45674869418144226, 0.44796064496040344, 0.43961507081985474, 0.43364566564559937, 0.4259395897388458, 0.42269009351730347, 0.41288772225379944, 0.4077901244163513, 0.4129091799259186, 0.4021156430244446, 0.3961031436920166, 0.3965243995189667, 0.39460551738739014, 0.3860134184360504, 0.3837227523326874, 0.378834068775177, 0.37395527958869934, 0.3764405846595764, 0.3686756193637848, 0.36987194418907166, 0.3581560552120209, 0.36295977234840393, 0.36623477935791016, 0.35877764225006104, 0.3561801016330719, 0.353430837392807, 0.35553765296936035, 0.34706002473831177, 0.3503789007663727, 0.3489822447299957, 0.3449699580669403, 0.34278255701065063, 0.3446298837661743, 0.3399204909801483, 0.3486936390399933, 0.3371824324131012, 0.3336593806743622, 0.3411227762699127, 0.33532217144966125, 0.33823925256729126, 0.33031803369522095, 0.3324337899684906, 0.3275965750217438, 0.3305152654647827, 0.3255798816680908, 0.3254289925098419, 0.33398115634918213, 0.330086886882782, 0.3340204656124115, 0.3238326609134674, 0.32498899102211, 0.32323575019836426, 0.32413309812545776, 0.3244728446006775, 0.3256118893623352, 0.33072537183761597, 0.32223933935165405, 0.3227919042110443, 0.32486361265182495], "val_accuracy": [0.5400000214576721, 0.6660000085830688, 0.6823333501815796, 0.7110000252723694, 0.7296666502952576, 0.7486666440963745, 0.7559999823570251, 0.7716666460037231, 0.7836666703224182, 0.7906666398048401, 0.7986666560173035, 0.8113333582878113, 0.8149999976158142, 0.8166666626930237, 0.8266666531562805, 0.8270000219345093, 0.8316666483879089, 0.8356666564941406, 0.8379999995231628, 0.8426666855812073, 0.8413333296775818, 0.8433333039283752, 0.8399999737739563, 0.8500000238418579, 0.8519999980926514, 0.8450000286102295, 0.8606666922569275, 0.8516666889190674, 0.8526666760444641, 0.856333315372467, 0.8613333106040955, 0.8616666793823242, 0.8603333234786987, 0.8653333187103271, 0.8659999966621399, 0.8666666746139526, 0.8643333315849304, 0.8696666955947876, 0.8663333058357239, 0.8666666746139526, 0.871999979019165, 0.8693333268165588, 0.8743333220481873, 0.8726666569709778, 0.8759999871253967, 0.8736666440963745, 0.8709999918937683, 0.874666690826416, 0.8776666522026062, 0.8766666650772095, 0.8773333430290222, 0.875, 0.8790000081062317, 0.8820000290870667, 0.8773333430290222, 0.8813333511352539, 0.8799999952316284, 0.8833333253860474, 0.8809999823570251, 0.8816666603088379, 0.8833333253860474, 0.8823333382606506, 0.8849999904632568, 0.8836666941642761, 0.8833333253860474, 0.8816666603088379, 0.8863333463668823, 0.8836666941642761, 0.8866666555404663, 0.8849999904632568, 0.8889999985694885, 0.8846666812896729, 0.8866666555404663, 0.8880000114440918, 0.8886666893959045, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [4, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [4, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [5, 3, 8, 1, 8, 1, 4, 6, 4, 2, 8], [0, 0, 1, 2, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)))", "other_info": {"loss": [2.303374767303467, 2.302584648132324, 2.302584648132324, 2.302584648132324, 2.3025851249694824, 2.302584648132324], "accuracy": [0.10632677376270294, 0.09866596013307571, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025853633880615, 2.3025848865509033], "val_accuracy": [0.10266666859388351, 0.09933333098888397, 0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 3, 1, 2, 0, 8, 5, 3, 2], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 1, 9], [4, 0, 0, 3, 4, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 22, 12, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.subtract(beta, alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7, 5, 8, 6, 4, 0], [0, 1, 0, 2, 3, 3, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [90], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 4, 2, 0], [16, 99, 86, 99, 42, 1]], "fitness": -0.09942857176065445, "mapping_values": [1, 18, 11, 7, 2, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.negative(grad)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), grad)", "other_info": {"loss": [45832695808.0, 52750630912.0, 53406908416.0, 52366827520.0, 52612694016.0, 52287012864.0, 53164666880.0, 52554739712.0], "accuracy": [0.107647605240345, 0.11332716792821884, 0.10566636174917221, 0.11174217611551285, 0.1146479994058609, 0.11491216719150543, 0.11055342853069305, 0.10738343745470047], "val_loss": [36036403200.0, 36036349952.0, 36037324800.0, 36037181440.0, 36037324800.0, 36037378048.0, 36036263936.0, 36037066752.0], "val_accuracy": [0.10066666454076767, 0.10100000351667404, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034]}}]